homepage: http://www.yesodweb.com/book/shakespearean-templates
changelog-type: ''
hash: 8077064680ae100d8b513d5cb10e033d1128428f157554663458554665234df2
test-bench-deps: {}
maintainer: Greg Weber <greg@gregweber.info>
synopsis: ! 'Interpolation with quasi-quotation: put variables strings (deprecated)'
changelog: ''
basic-deps:
  shakespeare: ! '>=2.0'
  base: ! '>=4 && <5'
all-versions:
- 0.10.1
- 0.10.2
- 0.10.3
- 0.10.4
- 0.10.5
- '0.11'
- 1.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.0.3
- 1.0.0.4
- 1.0.0.5
- 1.0.0.6
- 1.0.0.7
- 1.0.0.8
- 1.0.0.9
- 1.0.0.10
- 1.0.1
- 1.0.2
- 1.1.0
author: Greg Weber <greg@gregweber.info>
latest: 1.1.0
description-type: haddock
description: ! 'interpolation with quasi-quotation: stick haskell variables into haskell
  strings


  Note there is no dependency on haskell-src-extras. If you don''t mind that dependency,
  you may want to look at using these packages: Interpolation, interpolatedstring-perl6,
  interpolatedstring-qq.


  This package has 1 other general feature that those others may not (but would be
  easy to duplicate): instead of using quasi-quoting you can also use an external
  file. It also has url/embeding interpolation, with \@ and \^, which are used in
  Yesod.


  This package also uses blaze-builder for efficiently constructing strings (I am
  not sure what the other packages use). This might be of interest to you for large
  templates or performance sensitive code, or otherwise having a nice interface to
  blaze-builder


  Shakespeare is a template family for type-safe, efficient templates with simple
  variable interpolation. Shakespeare templates can be used inline with a quasi-quoter
  or in an external file. Shakespeare interpolates variables according to the type
  being inserted.

  In this case, the variable type needs a ToText instance.


  Please see http://www.yesodweb.com/book/shakespearean-templates for a more thorough
  description and examples of the shakespeare family of template languages.'
license-name: MIT
