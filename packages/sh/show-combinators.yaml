homepage: https://github.com/Lysxia/show-combinators#readme
changelog-type: ''
hash: 7bfecf229580cc4b6909c7c6de01123a39e5679d9aac61bacc2788d23aa0c083
test-bench-deps:
  base: -any
  show-combinators: -any
maintainer: lysxia@gmail.com
synopsis: Combinators to write Show instances
changelog: ''
basic-deps:
  base: ! '>=4.9 && <5'
all-versions:
- '0.1.0.0'
author: Li-yao Xia
latest: '0.1.0.0'
description-type: markdown
description: ! "# Show combinators\n\nA minimal set of convenient combinators to write
  `Show` instances.\n\n```haskell\ndata MyType a\n  = C a a                   -- a
  regular constructor\n  | a :+: a                 -- an infix constructor\n  | R
  { f1 :: a, f2 :: a }  -- a record\n\ninfixl 4 :+:\n\ninstance Show a => Show (MyType
  a) where\n  showsPrec = flip precShows where\n    precShows (C a b) = showCon \"C\"
  @| a @| b\n    precShows (c :+: d) = showInfix \":+:\" 4 c d\n    precShows (R {f1
  = e, f2 = f}) =\n      showRecord \"R\" (\"f1\" .=. e &| \"f2\" .=. f)\n```\n"
license-name: MIT
