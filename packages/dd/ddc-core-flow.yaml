homepage: http://disciple.ouroborus.net
changelog-type: ''
hash: f78aab4b524638adbda23682b29d1f8bfeebe50381e3f40f48789d8b472719bb
test-bench-deps: {}
maintainer: Ben Lippmeier <benl@ouroborus.net>
synopsis: Disciplined Disciple Compiler data flow compiler.
changelog: ''
basic-deps:
  limp-cbc: ==0.3.2.*
  base: ! '>=4.6 && <4.10'
  limp: ==0.3.2.*
  ddc-core-tetra: ==0.4.3.*
  array: ! '>=0.4 && <0.6'
  containers: ==0.5.*
  ddc-core-salt: ==0.4.3.*
  ddc-core: ==0.4.3.*
  mtl: ==2.2.1.*
  transformers: ==0.5.*
  ddc-core-simpl: ==0.4.3.*
  deepseq: ! '>=1.3 && <1.5'
all-versions:
- 0.3.2.1
- 0.4.1.1
- 0.4.1.3
- 0.4.2.1
- 0.4.3.1
author: The Disciplined Disciple Compiler Strike Force
latest: 0.4.3.1
description-type: haddock
description: ! 'Disciple Core Flow is a Domain Specific Language (DSL) for writing
  first

  order data flow programs.

  This package provides the language definition as a fragment of Disciple

  Core. It also provides an implementation of the lowering transform which

  converts data flow programs into imperative nested loop code.

  The @repa-plugin@ package provides a GHC plugin that transforms GHC core

  programs gained from vanilla Haskell sources. Use this package if you

  just want to write and run real programs.

  Alternatively, Disciple Core Flow programs can be transformed directly

  via the @ddc@ or @ddci-core@ command line interfaces, but DDC itself

  doesn''t provide full compilation to machine code. Use GHC and the

  @repa-plugin@ for that.'
license-name: MIT
