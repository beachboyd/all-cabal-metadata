homepage: https://github.com/strake/hint.hs
changelog-type: markdown
hash: f5c346d2837d029a09ab596472d4c9c59c6578750f56797d0dbfbaf390063569
test-bench-deps:
  exceptions: ! '>=0.10.0'
  extensible-exceptions: -any
  unix: ! '>=2.2.0.0'
  base: ==4.*
  filepath: -any
  HUnit: -any
  hinter: -any
  directory: -any
maintainer: strake888@gmail.com
synopsis: Runtime Haskell interpreter (GHC API wrapper)
changelog: ! "### 0.8.0\n\n* Support GHC 8.4\n* Drop support for GHC 7.8 and 7.10\n*
  Add `runStmt` to execute statements in the IO monad and bind new names\n* Internal
  changes of temporary files for phantom modules\n  - The files are now called `M<nnn>.hs`
  instead of `<nnn>`\n  - Improved cleanup of phantom module source files\n  - ghc
  8.4 only: phantom modules are put into a temporary directory\n* Add `typeChecksWithDetails`
  to obtain type-checking errors\n* Stop GHC from overwriting the Ctrl-C signal handler\n*
  Add `SetImportsF` to allow finer imports control\n\n### 0.7.0\n\n* Support for GHC
  8.2\n* Support use in a dynamically-linked executable\n* Add `normalizeType`, like
  ghci's :kind!\n* Drop support for GHC 7.6\n\n### 0.6.0\n\n* Support for GHC 8.0\n*
  Add `displayException` to InterpreterError\n\n### 0.5.2\n\n* Add `runInterpreter`
  variant that takes a GHC libdir at runtime\n* Add missing negated extensions to
  the `Extension` type\n* Do not throw GHC warnings as errors\n\n### 0.5.1\n\n* Expose
  `unsafeInterpret` in `Language.Haskell.Interpreter.Unsafe`\n\n### 0.5.0\n\n* Drop
  support for GHC 7.4\n* Remove deprecated functions and modules:\n  - `glasgowExtensions`\n
  \ - `setUseLanguageExtensions`\n  - `setInstalledModsAreInScopeQualified`\n  - `Language.Haskell.Interpreter.GHC`\n
  \ - `Language.Haskell.Interpreter.GHC.Unsafe`\n* Drop dependencies on `ghc-mtl`
  and `extensible-exceptions`\n\n### 0.4.3\n\n* New maintainer and source code repo\n\n###
  0.4.2.3\n\n* It builds against 7.4.2 (not 7.4.1), so update the constraints.\n\n###
  0.4.2.2\n\n* Builds with GHC 7.10\n* Builds again with GHC 7.4\n* Drops dependency
  on `utf8-string`\n\n### 0.4.2.1\n\n* Better error reporting (thanks to Corentin
  Dupont)\n\n### 0.4.2.0\n\n* Based on exceptions-0.6\n\n### 0.4.1.0\n\n* Based on
  exceptions-0.4\n\n### 0.4.0.0\n\n* Compiles with GHC 7.8\n* Fixed an issue where
  `P` was available as a qualified version of\n  Prelude (thanks to Samuel Gélineau)\n*
  Uses `exceptions` package instead of `MonadCatchIO-mtl` (API breakage\n  expected)\n*
  No longer depends on `haskell-src`\n* Changelog should now appear in Hackage\n*
  Integrated unit tests with cabal\n\n### 0.3.3.7\n\n* Fixed a race condition that
  would happen, for instance, when two\n  process where run one next to the other,
  making them, on some\n  platforms, to get the same random number seed (thanks to
  Mario\n  Pastorelli and Samuel Gélineau)\n* Small fix in documentation (thanks to
  Daniil Frumin)\n\n### 0.3.3.6\n\n* Works again on GHC 7.2.x (thanks to Björn Peemöller)\n\n###
  0.3.3.5\n\n* Works on GHC 7.4.6\n* Cleans up files for phantom modules that were
  left behind (thanks to\n  Beltram Felgenhauer)\n\n### 0.3.3.4\n\n* Works on GHC
  7.4.1\n\n### 0.3.3.3\n\n* Works on GHC 7.2.1\n\n### 0.3.3.2\n\n* Supports GHC 7\n\n###
  0.3.3.1\n\n* Instance declaration for Applicative (InterpreterT m) works with mtl-2\n
  \ (requires Applicative m, this shouldn't break anything...)\n\n### 0.3.3.0\n\n*
  Add unsafeRunInterpreterWithArgs\n* Check that only one instance of the interpreter
  is run at any time\n\n### 0.3.2.3\n\n* Can be built against MonadCatchIO-mtl-0.3.x.x\n\n###
  0.3.2.2\n\n* Fixed a bug that would make expressions using heavy use of the layout\n
  \ rule to fail to be interpreted (see parens)\n\n### 0.3.2.1\n\n* hint.cabal includes
  version bounds for package ghc-mtl. This is to\n  avoid the accidental selection
  of the completely unrelated ghc-mtl\n  internal to GHC and, apparently, installed
  in the hackage server\n\n### 0.3.2.0\n\n* Exports functions parens and isInterpretedModule\n*
  Experimental support for module annotations\n* Uses extensible-exceptions in order
  to provide a uniform interface\n  across different ghc versions\n* Provides an Applicative
  instance for IntepreterT\n* Adds an option to configurate the searchPath\n\n###
  0.3.1.0\n\n* No longer uses Language.Haskell.Extension due to configuration\n  problems
  with Cabal. Instead, it uses its own\n  Language.Haskell.Interpreter.Extension module.\n\n###
  0.3.0.0\n\n* Updated API:\n  + InterpreterT monad transformer (Interpreter = InterpreterT
  IO)\n  + No more Sessions, use runInterpreter only once\n  + New options handling
  functions\n    - but observe that there is no setOptimizations equivalent; since\n
  \     GHC does no optimization on interpreted code, this was actually\n      doing
  nothing\n* Works with GHC 6.10 and 6.8 (untested with 6.6)\n\n### 0.2.5\n\n* setImportsQ
  added (modules can be imported both qualified and\n  unqualified)\n\n### 0.2.4.1\n\n*
  BUGFIX: No longer fails on expressions ending in a -- comment\n\n### 0.2.4\n\n*
  setInstalledModsAreInScopeQualified added\n* Now depends on ghc-paths (no longer
  needs a custom cabal script)\n\n### 0.2.2\n\n* setOptimizations added\n* Module
  Language.Haskell.Interpreter.GHC.Unsafe added (contains\n  unsafeSetGhcOption)\n*
  Unit tests now based on HUnit\n\n### 0.2.1\n\n* BUGFIX: Module reloading was broken
  under 6.8\n* GHC.GhcExceptions are catched and turned into InterpreterErrors\n\n###
  0.2.0.1\n\n* Adds the requirement cabal-version < 1.3\n\n### 0.2\n\n* Works also
  with GHC 6.8 and 6.6\n* Added the getModuleExports function\n* withSession function
  throws a dynamic exception instead of returning\n  Either Error a\n* Requires Cabal
  1.2.x\n"
basic-deps:
  exceptions: ==0.10.*
  ghc: ! '>=8.0 && <8.6'
  unix: ! '>=2.2.0.0'
  base: ==4.*
  filepath: -any
  ghc-paths: -any
  ghc-boot: -any
  mtl: -any
  random: -any
  directory: -any
all-versions:
- 0.1.0.0
author: The Hint Authors
latest: 0.1.0.0
description-type: markdown
description: ! '# hint


  [![Build Status](https://travis-ci.org/mvdan/hint.svg?branch=master)](https://travis-ci.org/mvdan/hint)

  [![Hackage](https://img.shields.io/hackage/v/hint.svg)](https://hackage.haskell.org/package/hint)


  This library defines an Interpreter monad. It allows to load Haskell

  modules, browse them, type-check and evaluate strings with Haskell

  expressions and even coerce them into values. The library is thread-safe

  and type-safe (even the coercion of expressions to values).


  It is, essentially, a huge subset of the GHC API wrapped in a simpler

  API.


  Compatibility is kept with the three last major GHC releases. For

  example, if the current version is GHC 8.4, Hint will work on 8.4, 8.2

  and 8.0.


  ### Example


  Check [example.hs](examples/example.hs) to see a simple but

  comprehensive example (it must be run from the `examples` directory).

'
license-name: BSD-3-Clause
