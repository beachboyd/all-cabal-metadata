homepage: https://github.com/fimad/scalpel
changelog-type: markdown
hash: c643a908072ba5053ee32e8e474bd217ac18b6cce95fc86954990b078aee78e1
test-bench-deps:
  scalpel-core: -any
  base: ! '>=4.7 && <5'
  text: -any
  criterion: ! '>=1.1'
  HUnit: -any
  regex-tdfa: -any
  regex-base: -any
  tagsoup: -any
maintainer: willcoster@gmail.com
synopsis: A high level web scraping library for Haskell.
changelog: ! "# Change Log\n\n## HEAD\n\n## 0.5.1\n\n- Fix bug (#59, #54) in DFS traversal
  order.\n\n## 0.5.0\n\n- Split `scalpel` into two packages: `scalpel` and `scalpel-core`.
  The latter\n  does not provide networking support and does not depend on curl.\n\n##
  0.4.1\n\n- Added `notP` attribute predicate.\n\n## 0.4.0\n\n- Add the `chroot` tricks
  (#23 and #25) to README.md and added examples.\n- Fix backtracking that occurs when
  using `guard` and `chroot`.\n- Fix bug where the same tag may appear in the result
  set multiple times.\n- Performance optimizations when using the (//) operator.\n-
  Make Scraper an instance of MonadFail. Practically this means that failed\n  pattern
  matches in `<-` expressions within a do block will evaluate to mzero\n  instead
  of throwing an error and bringing down the entire script.\n- Pluralized scrapers
  will now return the empty list instead mzero when there\n  are no matches.\n- Add
  the `position` scraper which provides the index of the current sub-tree\n  within
  the context of a `chroots`'s do-block.\n\n## 0.3.1\n\n- Added the `innerHTML` and
  `innerHTMLs` scraper.\n- Added the `match` function which allows for the creation
  of arbitrary\n  attribute predicates.\n- Fixed build breakage with GHC 8.0.1.\n\n##
  0.3.0.1\n\n- Make tag and attribute matching case-insensitive.\n\n## 0.3.0\n\n-
  Added benchmarks and many optimizations.\n- The `select` method is removed from
  the public API.\n- Many methods now have a constraint that the string type parametrizing\n
  \ TagSoup's tag type now must be order-able.\n- Added `scrapeUrlWithConfig` that
  will hopefully put an end to multiplying\n  `scrapeUrlWith*` methods.\n- The default
  behaviour of the `scrapeUrl*` methods is to attempt to infer the\n  character encoding
  from the `Content-Type` header.\n\n## 0.2.1.1\n\n- Cleanup stale instance references
  in documentation of TagName and\n  AttributeName.\n\n## 0.2.1\n\n- Made Scraper
  an instance of MonadPlus.\n\n## 0.2.0.1\n\n- Fixed examples in documentation and
  added an examples folder for ready to\n  compile examples. Added travis tests to
  ensures that examples remain\n  compilable.\n\n## 0.2.0\n\n- Removed the StringLike
  parameter from the Selector, Selectable,\n  AttributePredicate, AttributeName, and
  TagName types. Instead they are now\n  agnostic to the underlying string type, and
  are only constructable with\n  Strings and the Any type.\n\n## 0.1.3.1\n\n- Tighten
  dependencies and drop download-curl all together.\n\n## 0.1.3\n\n- Add the html
  and html scraper primitives for extracting raw HTML.\n\n## 0.1.2\n\n- Make scrapeURL
  follow redirects by default.\n- Expose a new function scrapeURLWithOpts that takes
  a list of curl options.\n- Fix bug (#2) where image tags that do not have a trailing
  \"/\" are not\n  selectable.\n\n## 0.1.1\n\n- Tighten dependencies on download-curl.\n\n##
  0.1.0\n\n- First version!\n"
basic-deps:
  bytestring: -any
  fail: -any
  base: ! '>=4.6 && <5'
  text: -any
  data-default: -any
  containers: -any
  regex-tdfa: -any
  regex-base: -any
  tagsoup: ! '>=0.12.2'
  vector: -any
all-versions:
- 0.5.0
- 0.5.1
author: Will Coster
latest: 0.5.1
description-type: markdown
description: ! 'Scalpel Core

  ============


  Scalpel core provides a subset of the

  [scalpel](https://hackage.haskell.org/package/scalpel) web scraping library that

  is intended to have lightweight dependencies and to be free of all non-Haskell

  dependencies.


  Notably this package does not contain any networking support. Users who desire a

  batteries include solution should depend on `scalpel` which does include

  networking support instead of `scalpel-core`.


  More thorough documentation including example code can be found in the

  documentation of the [scalpel](https://hackage.haskell.org/package/scalpel)

  package.

'
license-name: Apache-2.0
