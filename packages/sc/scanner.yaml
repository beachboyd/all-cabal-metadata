homepage: https://github.com/Yuras/scanner
changelog-type: markdown
hash: 6aaf7e9a247ba1e7dad0a191ae82cfbdc61e6be727419aeb765f08196c3cc32f
test-bench-deps:
  cereal: -any
  bytestring: -any
  base: -any
  hspec: -any
  text: -any
  criterion: -any
  attoparsec: -any
  scanner: -any
maintainer: shumovichy@gmail.com
synopsis: Fast non-backtracking incremental combinator parsing for bytestrings
changelog: ! '0.3


  * add foldWhile, foldWhile1, satisfy, satisfyMaybe


  0.2


  * make Scanner a newtype instead of data, see https://github.com/Yuras/scanner/pull/3

  * improve `string` performance

  * add `scanWith`


  0.1


  * initial release

'
basic-deps:
  bytestring: -any
  base: <5
all-versions:
- '0.1'
- '0.2'
- '0.3'
author: Yuras Shumovich
latest: '0.3'
description-type: markdown
description: ! '# scanner

  Fast non-backtracking incremental combinator parsing for bytestrings


  [![Build Status](https://travis-ci.org/Yuras/scanner.svg?branch=master)](https://travis-ci.org/Yuras/scanner)


  On hackage: http://hackage.haskell.org/package/scanner


  On stackage: https://www.stackage.org/package/scanner


  It is often convinient to use backtracking to parse some sophisticated

  input. Unfortunately it kills performance, so usually you should avoid

  backtracking.


  Often (actually always, but it could be too hard sometimes) you can

  implement your parser without any backtracking. It that case all the

  bookkeeping usuall parser combinators do becomes unnecessary. The

  scanner library is designed for such cases. It is often 2 times faster

  then attoparsec.


  As an example, please checkout redis protocol parser included into the

  repo, both using attoparsec and scanner libraries:

  https://github.com/Yuras/scanner/tree/master/examples/Redis


  Benchmark results:


  ![Bechmark results](https://raw.githubusercontent.com/Yuras/scanner/master/bench/bench.png)


  But if you really really really need backtracking, then you can just

  inject attoparsec parser into a scanner: http://hackage.haskell.org/package/scanner-attoparsec

'
license-name: BSD3
