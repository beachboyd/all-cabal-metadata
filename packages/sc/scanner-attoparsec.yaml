homepage: https://github.com/Yuras/scanner-attoparsec
changelog-type: markdown
hash: 510119a08beb62c193f33291148b7b1104313cbc0bf1b79a5536222a62cac4ae
test-bench-deps:
  bytestring: -any
  base: <5
  hspec: -any
  attoparsec: -any
  scanner-attoparsec: -any
  scanner: -any
maintainer: shumovichy@gmail.com
synopsis: Inject attoparsec parser with backtracking into non-backtracking scanner
changelog: ! '

  0.1


  * initial implementation

'
basic-deps:
  base: <5
  attoparsec: -any
  scanner: -any
all-versions:
- '0.1'
author: Yuras Shumovich
latest: '0.1'
description-type: markdown
description: ! '# scanner-attoparsec

  Inject attoparsec parser with backtracking into non-backtracking scanner


  [![Build Status](https://travis-ci.org/Yuras/scanner-attoparsec.svg?branch=master)](https://travis-ci.org/Yuras/scanner-attoparsec)


  Backtracking kills performance, so scanner package doesn''t support it.

  But sometimes you just need it. E.g. you have a mostly non-backtracking

  parser, but a small bit of its grammar is too complex to transform it

  to non-backtracking form. In that case you can inject a backtracking

  attoparsec parser into otherwise non-backtracking scanner.


  See also http://hackage.haskell.org/package/scanner

'
license-name: BSD-3-Clause
