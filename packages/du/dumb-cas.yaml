homepage: https://github.com/leftaroundabout/dumb-cas
changelog-type: ''
hash: 18edb21b68415fff3b3d145b11fd6e857342c0bb54863508cef66c7fe3159de2
test-bench-deps:
  dumb-cas: -any
  base: '>=4 && <5'
  tasty-hunit: -any
  tasty: '>=0.7'
maintainer: (@) jsag $ hvl.no
synopsis: A computer “algebra” system that knows nothing about algebra, at the core.
changelog: ''
basic-deps:
  base: '>=4.8 && <4.14'
  unordered-containers: '>=0.2 && <0.3'
  decimal-literals: '>=0.1 && <0.2'
  containers: -any
  hashable: '>=1.2 && <1.4'
  template-haskell: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.1.2.0
- 0.2.0.0
- 0.2.1.0
author: Justus Sagemüller
latest: 0.2.1.0
description-type: haddock
description: |-
  This is a framework for untyped, symbolic computations like a CAS
  does, without any baked-in rules whatsoever but the ability to
  define expressions very consisely, as well as any transformation
  rules you want. The idea is basically to combine the flexibility
  of a Lisp with the conciseness of a Regex engine, using syntax similar
  to Haskell's standard pattern matching.
license-name: GPL-3.0-only
