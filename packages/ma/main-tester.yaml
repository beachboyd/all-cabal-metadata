homepage: https://gitlab.com/igrep/main-tester#readme
changelog-type: markdown
hash: 139b832f04bc75f0c2302663d36469c6491cb0adfb62ac879a5852860f36bde0
test-bench-deps:
  bytestring: -any
  base: -any
  hspec: -any
  text: -any
  hspec-core: -any
  doctest: -any
  main-tester: -any
  QuickCheck: -any
maintainer: whosekiteneverfly@gmail.com
synopsis: Capture stdout/stderr/exit code, and replace stdin of your main function.
changelog: ! "# 0.2.0.0\n\n- Breaking change:\n    - Add `prException` field to `ProcessResult`.\n
  \   - Now `captureProcessResult` catches any exception (including `ExitCode`) thrown
  by the given action (usually your `main` function).\n        - The caught exception
  is available by `prException` function (except `ExitCode`).\n- :new: Add `withEnv`
  function.\n\n# 0.1.0.0\n\n- Initial release.\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  directory: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
author: Yuji Yamamoto
latest: 0.2.0.0
description-type: markdown
description: ! "# main-tester\n\nCapture stdout/stderr/exit code, and replace stdin
  of your main function.\n\n## Why?\n\nAgainst the best practice, I often prefer large,
  end-to-end (E2E) tests.  \nBecause:\n\n- E2E tests can directly test your users'
  requirement.\n- E2E tests can detect bugs caused by misassumption of external components\n
  \   - Which happenes relatively more often than the others, according to my experience.\n-
  I often write small programs where E2E tests are sufficient.\n\nThis library main-tester
  provides utility functions for E2E testing of your CLI applications.  \nWith main-tester,
  You can test your apps with arbitrary stdin data, check their output and exit code.\n\n##
  Comparison with [silently](https://hackage.haskell.org/package/silently) and [System.IO.Fake](https://hackage.haskell.org/package/imperative-edsl-0.7.1/docs/System-IO-Fake.html)\n\n-
  Can test exit code of your main.\n- All input and outputs are strict bytestrings
  except the command line arguments, which is very important when testing with non-UTF8
  input and output.\n- Currently doesn't support suppressing stdout and stderr (Pull
  request welcome!).\n\n## Usage\n\nSee [the document of `Test.Main` module](https://hackage.haskell.org/package/main-tester/docs/Test-Main.html).\n"
license-name: Apache-2.0
