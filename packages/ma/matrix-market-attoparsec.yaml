homepage: https://github.com/ocramz/matrix-market-attoparsec
changelog-type: markdown
hash: a87b0cf6c9be51acf52d9719064fa44c923d2737c1aa1f777bcb54e55d7783ea
test-bench-deps:
  exceptions: -any
  base: -any
  hspec: -any
  matrix-market-attoparsec: -any
  QuickCheck: -any
  directory: -any
maintainer: zocca marco gmail
synopsis: Parsing and serialization functions for the NIST Matrix Market format
changelog: ! '0.2.0.1


  Added MatrixMarket module from `accelerate-examples` SMVM

'
basic-deps:
  exceptions: -any
  bytestring: ! '>=0.9'
  base: ! '>=4.7 && <5'
  attoparsec: ! '>=0.10'
  scientific: ! '>=0.3.3.8'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
- 0.1.0.8
author: Marco Zocca
latest: 0.1.0.8
description-type: markdown
description: ! "# matrix-market-attoparsec\n\n[![Build Status](https://travis-ci.org/ocramz/matrix-market-attoparsec.png)](https://travis-ci.org/ocramz/matrix-market-attoparsec)\n\nAttoparsec
  parser for the NIST Matrix Market format [0].\n\nThe library also contains functions
  for serializing matrix data to text file.\n\n## User guide\n\nThe module `Data.Matrix.MatrixMarket`
  exports the user interface:\n\n    readMatrix :: FilePath -> IO (Matrix S.Scientific)\n\n
  \   readArray :: FilePath -> IO (Array S.Scientific)\n\n    writeMatrix :: Show
  a => FilePath -> Matrix a -> IO ()\n \n    writeArray :: Show a => FilePath -> Array
  a -> IO ()  \n\nThe first two functions contain the parsing logic, and make use
  of `scientific` for parsing numerical data in scientific notation.\n\n\n### Naming
  convention\n\nWe follow the MatrixMarket format definitions, by which a \"Matrix\"
  is _sparse_ and stored in coordinate format (row, column, entry), whereas an \"Array\"
  is a _dense_ grid of numbers, stored in column-oriented form.\nAlgebraic vectors,
  such as the right-hand sides of equation systems, are stored as n-by-1 Arrays.\n\n##
  Testing\n\n`test/LibSpec.hs` contains a simple read/write/read sanity test for the
  included Matrix Marked data files (`fidapm05.mtx` and `fidapm05_rhs1.mtx`):\n\n
  \   m0 <- readMatrix fname   -- load original\n    writeMatrix ftemp m0     -- save
  as temp\n    m1 <- readMatrix ftemp   -- load temp\n    m0 `shouldBe` m1         --
  compare temp with original\n\n\n## References\n\n[0] [http://math.nist.gov/MatrixMarket/](http://math.nist.gov/MatrixMarket/)\n"
license-name: BSD-2-Clause
