homepage: https://github.com/bos/math-functions
changelog-type: markdown
hash: e96b17e0ae5c331f91f72f1c67608e6a8380ba59eb86f3e682f0edd3123a6ff2
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  base: ! '>=4.5 && <5'
  data-default-class: ! '>=0.1.2.0'
  test-framework-quickcheck2: -any
  HUnit: ! '>=1.2'
  erf: -any
  math-functions: -any
  deepseq: -any
  vector-th-unbox: -any
  QuickCheck: ! '>=2.7'
  primitive: -any
  vector: ! '>=0.7'
maintainer: Alexey Khudyakov <alexey.skladnoy@gmail.com>
synopsis: Collection of tools for numeric computations
changelog: ! "## Changes in 0.3.1.0\n\n  * Exported data types for iteration steps
  in root finding\n\n  * Defaults for root finding algorithm are documented\n\n\n##
  Changes in 0.3.0.2\n\n  * Fix license field in cabal file\n\n\n## Changes in 0.3.0.0\n\n
  \ * `Semigroup` and `Monoid` instances added for data types from `Numeric.Sum`\n\n
  \ * API for finding roots of real functions reworked. 1) All algorithm\n    parameters
  are now tweakable. 2) Functions for getting list of iterations\n    added.\n\n  *
  `Foldable` and `Traversable` instances for `Root` were added.\n\n## Changes in 0.2.1.0\n\n
  \ * `log1p` and `expm1` are simply reexported from `GHC.Float`. They're methods\n
  \    of `Floating` type class.\n\n  * On windows `expm1` is implemented in pure
  haskell for older GHCs.\n\n\n## Changes in 0.2.0.0\n\n  * Bug fixes and documentation
  tweaks\n\n\n## Changes in 0.2.0.0\n\n  * `logGamma` now uses Lancsoz approximation
  and same as `logGammaL`.  Old\n     implementation of `logGamma` moved to `Numeric.SpecFunctions.Extra.logGammaAS245`.\n\n
  \ * Precision of `logGamma` for z<1 improved.\n\n  * New much more precise implementation
  for `incompleteGamma`\n\n  * Dependency on `erf` package dropped. `erf` and `erfc`
  just do direct calls\n    to C.\n\n  * `Numeric.SpecFunctions.expm1` added\n\n  *
  `Numeric.SpecFunctions.log1pmx` added.\n\n  * `logGammaCorrection` exported in `Numeric.SpecFunctions.Extra`.\n\n
  \ * Module `Numeric.Series` added for working with infinite sequences, series\n
  \   summation and evaluation of continued fractions.\n\n  * Module `statistics:
  Statistics.Math.RootFinding` copied to\n    `Numeric.RootFinding`. Instances for
  `binary` and `aeson` dropped.\n\n  * Root-finding using Newton-Raphson added\n\n
  \ * `Numeric.MathFunctions.Comparison.ulpDelta` added. It calculates signed\n    distance
  between two doubles.\n\n  * Other bug fixes.\n\n\n\n## Changes in 0.1.7.0\n\n  *
  Module `statistics: Statistics.Function.Comparison` moved to\n    `Numeric.MathFunctions.Comparison`.
  Old implementation if `within` compared\n    negative numbers incorrectly.\n\n  *
  `addUlps` and `ulpDistance` added to `Numeric.MathFunctions.Comparison`.\n\n  *
  `relativeError` and `eqRelErr` added to `Numeric.MathFunctions.Comparison`.\n\n
  \ * Precision of `logFactorial` is slightly improved.\n\n\n## Changes in 0.1.6.0\n\n
  \ * `logChoose` added for calculation of logarithm of binomial coefficient\n\n  *
  `chooseExact` and `logChooseFast` added\n\n  * `sinc` added\n\n\n## Changes in 0.1.5.3\n\n
  \ * Fix for test suite on 32bit platform\n\n\n## Changes in 0.1.5\n\n  * Numeric.Sum:
  new module adds accurate floating point summation.\n\n\n## Changes in 0.1.4\n\n
  \ * logFactorial type is genberalized. It accepts any `Integral` type\n\n  * Evaluation
  of polynomials using Horner's method where coefficients\n    are store in lists
  added\n\n\n## Changes in 0.1.3\n\n  * Error function and its inverse added.\n\n
  \ * Digamma function added\n\n  * Evaluation of polynomials using Horner's method
  added.\n\n  * Crash bug in the inverse incomplete beta fixed.\n"
basic-deps:
  base: ! '>=4.5 && <5'
  data-default-class: ! '>=0.1.2.0'
  deepseq: -any
  vector-th-unbox: ! '>=0.2.1.6'
  primitive: -any
  vector: ! '>=0.7'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
- 0.1.3.0
- 0.1.4.0
- 0.1.5.1
- 0.1.5.2
- 0.1.6.0
- 0.1.7.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.1.0
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
- 0.3.1.0
author: ! 'Bryan O''Sullivan <bos@serpentine.com>,

  Alexey Khudyakov <alexey.skladnoy@gmail.com>'
latest: 0.3.1.0
description-type: markdown
description: ! "# math-functions: collection of tools for numeric computations\n\n[![Build
  Status](https://travis-ci.org/Shimuuar/math-functions.png?branch=master)](https://travis-ci.org/Shimuuar/math-functions)\n[![Build
  status](https://ci.appveyor.com/api/projects/status/6xexxj9g6rnbg2q4/branch/master?svg=true)](https://ci.appveyor.com/project/Shimuuar/math-functions/branch/master)\n\nThis
  package provides collection of various tools for numeric\ncomputations. Namely:\n\n
  - Number pure haskell implementations of special function which are used in\n   statistical
  and numerical computing.\n\n - Compensated summation (Kahan summation) which allows
  to\n\n - Root finding for functions of single real variable\n\n - Series summation\n\n
  - Functions for comparing IEEE754 numbers\n\nWhere possible, we give citations and
  computational complexity\nestimates for the algorithms used.\n\n\n# Get involved!\n\nPlease
  report bugs via the\n[github issue tracker](https://github.com/bos/math-functions/issues).\n\nMaster
  [git mirror](https://github.com/bos/math-functions):\n\n* `git clone git://github.com/bos/math-functions.git`\n\nThere's
  also a [Mercurial mirror](https://bitbucket.org/bos/math-functions):\n\n* `hg clone
  https://bitbucket.org/bos/math-functions`\n\n(You can create and contribute changes
  using either Mercurial or git.)\n\n\n# Authors\n\nThis library is written and maintained
  by Bryan O'Sullivan\n<bos@serpentine.com> and Aleksey Khudyakov\n<alexey.skladnoy@gmail.com>.\n"
license-name: BSD-2-Clause
