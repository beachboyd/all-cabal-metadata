homepage: ''
changelog-type: markdown
hash: edc3e0d5dc45cfc059e4763e106f73263e5c31e9e515235d9e14f489b74fe374
test-bench-deps: {}
maintainer: evan@theunixman.com
synopsis: Machine transducers for Amazonka calls.
changelog: ! '# Revision history for machines-amazonka


  ## 0.5.0 -- 2017-04-12


  * Update for [liblawless 0.19](http://hackage.haskell.org/package/liblawless-0.19.3)

  * Add [Code of Conduct](http://contributor-covenant.org/version/1/4/code_of_conduct.md)

  * Add a brief (very) [README.md](README.md)


  ## 0.4.0 -- 2017-02-17


  * First version. Released on an unsuspecting world.

  * Handles AMIs, some instance control, and spot price history.

'
basic-deps:
  focus: ! '>=0.1.5 && <0.2'
  amazonka: ! '>=1.4.5 && <1.5'
  exceptions: ! '>=0.8.3 && <0.9'
  free: ! '>=4.12.4 && <4.13'
  stm: ! '>=2.4.4 && <2.5'
  amazonka-sts: ! '>=1.4.5 && <1.5'
  base: ! '>=4.9 && <4.10'
  time: ! '>=1.6 && <1.7'
  list-t: ! '>=1 && <1.1'
  monad-control: ! '>=1.0.1.0 && <1.1'
  containers: ! '>=0.5.7.1'
  liblawless: ! '>=0.21.3 && <0.24'
  amazonka-core: ! '>=1.4.5 && <1.5'
  mtl: ! '>=2.2 && <2.3'
  amazonka-ec2: ! '>=1.4.5 && <1.5'
  lifted-async: ! '>=0.9 && <0.10'
  hashable: ! '>=1.2.4 && <1.3'
  concurrent-machines: ! '>=0.2.3 && <0.3'
  transformers: ! '>=0.5.2 && <0.6'
  amazonka-autoscaling: ! '>=1.4.5 && <1.5'
  stm-containers: ! '>=0.2.15 && <0.3'
  resourcet: ! '>=1.1.8 && <1.2'
  amazonka-s3: ! '>=1.4.5 && <1.5'
all-versions:
- 0.4.0
- 0.4.1
- 0.5.0
- 0.6.0
- 0.6.2
- 0.7.0
- 0.7.1
author: Evan Cofsky
latest: 0.7.1
description-type: markdown
description: ! '# Amazonka Machines


  This is a set

  of [machines](http://hackage.haskell.org/package/machines)

  and

  [concurrent-machines](http://hackage.haskell.org/package/concurrent-machines) for

  some of the components of the

  various [Amazonka](http://hackage.haskell.org/package/amazonka)

  libraries. They''re composable, handle pagination, and transduction of

  results with the full set of Machines primitives.


  ## Example Code


  The Spot Price History module has one of the more complete examples,

  including multiple concurrent requests, concurrent STM updates, and so

  on.

'
license-name: GPL-3.0-only
