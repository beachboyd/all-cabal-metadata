homepage: https://gitlab.com/iu-guest/mbug
changelog-type: ''
hash: 79a7413543b134f0b9123f0e91c70af8daf4cd2748bc2a6ae8527df099b63067
test-bench-deps: {}
maintainer: KAction@gnu.org
synopsis: download bugs mailboxes
changelog: ''
basic-deps:
  http-client: ==0.5.*
  xdg-basedir: ==0.2.*
  bytestring: ==0.10.*
  scalpel-core: ==0.5.*
  extra: ! '>=1.5 && <1.7'
  base: ! '>=4.9 && <5'
  time: ! '>=1.6 && <1.9'
  mbug: -any
  text: ==1.2.*
  process: ! '>=1.4 && <1.7'
  formatting: ! '>=6.0 && <6.4'
  http-client-tls: ==0.3.*
  mtl: ! '>=2.2.2 && <2.3'
  optparse-applicative: ! '>=0.13 && <0.15'
  tagsoup: ==0.14.*
  directory: ==1.3.*
all-versions:
- '1.0'
- '1.1'
- '1.2'
- '1.3'
author: Dmitry Bogatov
latest: '1.3'
description-type: markdown
description: ! '# mbug


  ## Rationale


  This program makes working with old Debian bugs much more pleasant.

  Sometimes I want to have personal bug-squashing party, so you open

  [https://bugs.debian.org/kaction@gnu.org] in web-browser, and get nice

  list of bugs that require my attention.


  Browsing is great, but when I want to do something with those bugs --

  close, add tags, discuss, I have to copy bug number, launch mail client

  in another terminal and compose email to [mailto:nnn@bugs.debian.org].


  Should I need to quote some previous message, more distracting actions

  are to be done -- download whole bug as mbox, incorporate that mbox into

  my mail system (I prefer MH), and only after that real work could start.


  DebBugs has also email interface -- you can request sending to you bugs

  you want, but reply is also optimized for reading, not for manipulating.

  Honestly, it looks like corresponding web page, filtered by `lynx`.


  ## Solution


  ~~~~

  mbug [--into <folder>] <query>

  ~~~~


  It will download mbox of every bug, listed at

  `https://bugs.debian.org/<query>` and create `+<folder>` MH folder. In

  that folder subfolder for every bug is created. By default, `<folder>`

  is `debbugs`.


  Folder `+<folder>` is volatile, every new invocation of `mbox` will

  overwrite its previous content. This way you can focus on bugs you are

  interested in right now.

'
license-name: GPL-3.0-only
