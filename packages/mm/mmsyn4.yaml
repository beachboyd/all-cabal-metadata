homepage: http://hackage.haskell.org/package/mmsyn4
changelog-type: markdown
hash: 1fb86651c292cdc3922a72c633ef437d567d78c481023379dffcade8f935ac35
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: The "glue" between electronic tables and GraphViz
changelog: |
  # Revision history for mmsyn4

  ## 0.1.0.0 -- 2019-10-17

  * First version. Released on an unsuspecting world.

  ## 0.1.1.0 -- 2019-10-18

  * First version revised A. Some documentation and .cabal file improvements.

  ## 0.1.1.1 -- 2019-10-18

  * First version revised B. Some minor documentation and .cabal file improvements.
basic-deps:
  mmsyn3: ! '>=0.1.1.0 && <0.2'
  base: ! '>=4.11 && <4.13'
  process: ! '>=1.6 && <1.7'
  mmsyn2: ! '>=0.1.6.0 && <0.2'
  vector: ! '>=0.12 && <0.13'
  directory: ! '>=1.3 && <1.4'
all-versions:
- 0.1.1.0
- 0.1.1.1
author: OleksandrZhabenko
latest: 0.1.1.1
description-type: text
description: "              Usage\n              \n1. After installation the executable
  mmsyn4 is created.\n Afterwards, it is used to process files. So, open an\n  office
  spreadsheet program, e. g. LibreOffice Calc.\n2. Begin to enter the text in the
  cells. You can use\n Unicode characters. No quotation marks should be used,\n  instead
  use some special delimiter except '@' sign.\n3. Do not use colons, instead when
  needed switch to the\n nearest cell to the right. \n4. To make a text visually highlighted
  (yellowish), start\n the cell with an ’@’ sign.\n5. Lines in the table create different
  chains in the\n resulting graph. To produce an arrow to the text in the\n cell,
  enter it in the next cell in the row to the right.\n6. To make several arrows from
  the cell, switch to the\n next cell to the right for this parent one (the cell that\n
  \ will be a parent for several other cells), enter needed\n   new texts there and
  in the located below cells.\n7. Usually, you can search the needed text with Ctrl+F
  if\n needed.\n8. Empty lines in the table do not influence the resulting\n visualization.
  Above each line, except the first one,\n  there must be at least one filled cell.
  It must be\n   located above the text on the new line or even further\n    to the
  right above. Otherwise, the program will\n     produce no reasonably useful output.\n9.
  After entering all the text, export the sheet as an\n 1.csv file using colons (':')
  as separator in the working\n  directory. Otherwise, the program won’t work.\n10.
  Run the apprapriate executable mmsyn4 in the terminal\n or from the command line
  while being in the directory\n  with the 1.csv file. Enter a word name of the .csv
  file\n   to be saved. DO use alphanumeric symbols and dashes if\n    needed. Then
  specify the needed visualization scheme\n     by specifying the appropriate character
  in the terminal.\n11. Your first visualization is then created. \n12. Save the spreadsheet
  document as a spreadsheet file.\n13. Repeat the steps from 2 to 12 as needed to
  produce\n more visualizations. \n14. Afterwards, you have a list of svg files, x12.gv
  file\n as a last source file for Graphviz, and a list of csv\n  files, and a saved
  spreadsheet file. Then you can use\n   the produced visualizations for some other
  documents.\n"
license-name: MIT
