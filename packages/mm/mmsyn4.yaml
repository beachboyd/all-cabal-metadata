homepage: http://hackage.haskell.org/package/mmsyn4
changelog-type: markdown
hash: 1e817cf3c8dd8d529b1bdc85500b9bd5c79e83f3846997e43177ab9d7c7d8f09
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: The "glue" between electronic tables and GraphViz
changelog: |
  # Revision history for mmsyn4

  ## 0.1.0.0 -- 2019-10-17

  * First version. Released on an unsuspecting world.

  ## 0.1.1.0 -- 2019-10-18

  * First version revised A. Some documentation and .cabal file improvements.
basic-deps:
  mmsyn3: ! '>=0.1 && <0.2'
  base: ! '>=4.11 && <4.13'
  process: ! '>=1.6 && <1.7'
  mmsyn2: ! '>=0.1.6.0 && <0.2'
  vector: ! '>=0.12 && <0.13'
  directory: ! '>=1.3 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.1.0
author: OleksandrZhabenko
latest: 0.1.1.0
description-type: text
description: "Usage\n1. After installation the executable mmsyn4 is created. Afterwards,
  it is used to process files. So, open an office spreadsheet program, e. g. LibreOffice
  Calc.\n2. Begin to enter the text in the cells. You can use Unicode characters.
  No quotation marks should be used, instead use some special delimiter except '@'
  sign.\n3. Do not use colons, instead when needed switch to the nearest cell to the
  right. \n4. To make a text visually highlighted (yellowish), start the cell with
  an ’@’ sign.\n5. Lines in the table create different chains in the resulting graph.
  To produce an arrow to the text in the cell, enter it in the next cell in the row
  to the right.\n6. To make several arrows from the cell, switch to the next cell
  to the right for this parent one (the cell that will be a parent for several other
  cells), enter needed new texts there and in the located below cells.\n7. Usually,
  you can search the needed text with Ctrl+F if needed.\n8. Empty lines in the table
  do not influence the resulting visualization. Above each line, except the first
  one, there must be at least one filled cell. It must be located above the text on
  the new line or even further to the right above. Otherwise, the program will produce
  no reasonably useful output.\n9. After entering all the text, export the sheet as
  an 1.csv file using colons (':') as separator in the working directory. Otherwise,
  the program won’t work.\n10. Run the apprapriate executable mmsyn4 in the terminal
  or from the command line while being in the directory with the 1.csv file. Enter
  a word name of the .csv file to be saved. DO use alphanumeric symbols and dashes
  if needed. Then specify the needed visualization scheme by specifying the appropriate
  character in the terminal.\n11. Your first visualization is then created. \n12.
  Save the spreadsheet document as a spreadsheet file.\n13. Repeat the steps from
  2 to 12 as needed to produce more visualizations. \n14. Afterwards, you have a list
  of svg files, x12.gv file as a last source file for Graphviz, and a list of csv
  files, and a saved spreadsheet file. Then you can use the produced visualizations
  for some other documents.\n"
license-name: MIT
