homepage: https://hackage.haskell.org/package/mmsyn7ukr
changelog-type: markdown
hash: 9c6e12bc86f99e1b810359ac2dfb877e147b964b25b3433ab73234836c4927f0
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: A simple basic interface to some SoX functionality or to produce a voice
  that can be used by mmsyn7h
changelog: "# Revision history for mmsyn7ukr\n\n## 0.1.0.0 -- 2019-12-19\n\n* First
  version. Released on an unsuspecting world.\n\n## 0.1.1.0 -- 2019-12-19\n\n* First
  version revised A. Fixed an issue with an empty do-block (mismatched code indentation).\n\n##
  0.1.1.1 -- 2019-12-20\n\n* First version revised B. Improved some documentation
  and .cabal file.\n\n## 0.1.2.0 -- 2019-12-23\n\n* First version revised C. Fixed
  an issues with the not created and not appripriately running recording for the sound.\n\n##
  0.2.0.0 -- 2019-12-24\n\n* Second version. Fixed an issue with the copying files.
  Changed a module structure. Some minor changes to the documentation.\n\n## 0.2.1.0
  -- 2019-12-24\n\n* Second version revised A. Extended the bounds for the base package
  dependency so that it now can be compiled for GHC 8.8.1. \nAdded some functionality
  to improve the control over the program mmsyn7ukr behaviour.\n\n## 0.3.0.0 -- 2019-12-24\n\n*
  Third version. Changed behaviour of the program so that it now only creates a \"voice\".
  It allows to use additional executable mmsyn7h afterwards from the package with
  the same name. \nThe latter is very close to mmsyn6ukr but uses the data files in
  the directory where it is running instead of defined by the standard for Paths_mmsyn6ukr.\n\n##
  0.3.0.1 -- 2019-12-25\n\n* Third version revised A. Changed some documentation and
  text messages to more consistent ones.\n\n## 0.3.1.0 -- 2019-12-27\n\n* Third version
  revised B. Changed the behaviour for 'alterVadB' and 'alterVadE' functions so that
  are now fully iterative with thread delay.\n\n## 0.4.0.0 -- 2019-12-31\n\n* Fourth
  version. Changed the behaviour of the program. Now it uses command line arguments
  (if any). See README. Added functions and rewrote the complex ones. \n\n## 0.4.1.0
  -- 2020-01-01\n\n* Fourth version revised A. Fixed issues with the null command
  line arguments and showing precision. Added new functions.\n\n## 0.4.2.0 -- 2020-01-02\n\n*
  Fourth version revised B. Added a new function 'gainL' to the SoXBasics module.
  Fixed an issue with 'volS' function. Some minor code changes. Some documentation
  improvements.\n\n## 0.5.0.0 -- 2020-01-05\n\n* Fifth version. Added proper support
  for Windows for the functions in the SoXBasics and Main modules. Added a new function
  'gainL' to the SoXBasics module. Fixed an issue with 'volS' function. Some minor
  code changes. Some documentation improvements.\n\n## 0.5.0.1 -- 2020-01-06\n\n*
  Fifth version revised A. Improved a documentation structure.\n\n## 0.6.0.0 -- 2020-01-10\n\n*
  Sixth version. Added a possibility to create not a full set of \nthe Ukrainian sounds
  representations, but only for the those \nnon-silent ones that are specified by
  the third command line parameter.\n\n## 0.6.1.0 -- 2020-01-10\n\n* Sixth version
  revised A. Fixed issues with wrongly located information messages, \nnon-parsed
  third command line argument. Added a new module ReplaceP. Some minor improvements.\n\n##
  0.6.1.1 -- 2020-01-10\n\n* Sixth version revised B. Fixed documentation issues.\n"
basic-deps:
  mmsyn3: ! '>=0.1.4 && <1'
  bytestring: ! '>=0.10 && <0.12'
  base: ! '>=4.7 && <4.14'
  process: ! '>=1.4 && <1.8'
  mmsyn6ukr: ! '>=0.6.2 && <1'
  mmsyn2: ! '>=0.1.7 && <1'
  vector: ! '>=0.11 && <0.14'
  directory: ! '>=1.2.5 && <1.4'
all-versions:
- 0.6.1.0
- 0.6.1.1
author: OleksandrZhabenko
latest: 0.6.1.1
description-type: text
description: "A program and a library that can be used as a simple \nbasic interface
  to some SoX functionality or for producing \nthe approximately Ukrainian speech
  with your own recorded \nvoice (actually it produces needed sound representations).\n\nThe
  program starts with Caution to be responsible for usage \nand to use it personally.
  Then the program guides you \nthrough the creating and using your Ukrainian \"voice\".
  \nPlease, use it carefully. After the execution you can\nexecute mmsyn7h program
  to produce some records with your \nnewly created \"voice\". During the execution
  of the last one\nyou can choose whether to remove (clean) \nall the created sound
  files in the current directory for \nsecurity reasons. If the programs terminate
  by interruption (or \ngenerally) it is a good practice to remove the current \ndirectory
  sound files manually.\n\n        ***** CAUTION! *****\n\n\"The possession of great
  power necessarily implies great responsibility.\"\n\n                                            (William
  Lamb)\n\nThe program mmsyn7ukr produces the \"voice\" represented as an ordered
  \nset of sounds each of which corresponds (represents) one of the \nUkrainian sounds
  so that using them together by mmsyn7h program \n(https://hackage.haskell.org/package/mmsyn7h)
  can be a background \nfor sound synthesis. If you pronounce sounds as the appropriate
  \nUkrainian ones, close to proper Ukrainian speech with your own \nvoice. This program
  approximates your voice with a sequence \nof recorded separate sounds with your
  control over the \nduration of the sounds. They are then precessed by the SoX \nbinaries
  already installed in the system to produce the \nneeded sounds and then you can
  pronounce some Ukrainian text \nwith your recorded \"voice\" using mmsyn7h program.
  In-between \nyou can do some additional processing as you need. Moreover, \nyou
  can substitute whatever sounds you like (consider being \nsensible) instead of your
  own voice.\n\nBe aware that if somebody can get access to the sounds of \nyour voice
  or to the recorded speech (except you) then this \npossibility itself creates security
  issues and concerns. So, \nplease, do NOT give access to such records to anybody
  else \nexcept you.\n\nIn such a case, the program is for personal usage of every
  \nuser ONLY!\n\nBeing given as an advice in such a case, run the program \nin the
  empty directory with the current user permissions to write, \nread and search and
  provide some proofs and evidence that nobody else \ncan even read the files in the
  directory. May be, it is better \nto execute the program being in the directory
  located in the RAM, \nthen consequently wait until the program ends and then reboot
  \nthe computer. \n\nIf the program ends earlier, you must then remove \n(better
  wipe) the directory contents. No other users should \nhave access to the computer
  after you have begun to run the \nprogram and have not deleted (or better wiped)
  the contents \nof the directory. Please, be aware, that there are possibilities
  \nto read sensitive information from the drives after you have \ndeleted the files
  in a usual way. You can use wiping for better \nsecurity. Besides, if somebody can
  get access to the memory of \nthe computer or to the directory contents where you
  run the \nprogram or (may be) to the temporary files created by SoX or \nto the
  drive where you run the program (not in the RAM, or may \nbe in it) then your voice
  can be stolen and / or used \ninappropriately. Use all possible precautions and
  measures to \navoid the situation. \n\nBe aware also that the given by the program
  technology (or \ndocumentation for it in any form) of the voice processing can \nbe
  improved so there is NO guarantees that the given technology \nor its successors
  cannot be used in violating your voice identity \nto produce from some available
  voice records the voice for the \ninappropriate usage. Therefore, better is to proove
  your identity not \nonly with the solely voice itself but with some additional \nindependent
  sources and measures. \n\nThe author of the program accordingly to the LICENSE (MIT)
  does not \nresponse for any possible issues, but by this notification tries to \nintent
  you to be aware of some possible issues.\n\n        ***** Command line arguments
  *****\n\nIf you specified as a first command line argument the following number\nthe
  program behaves: \n    0 -> after the noise reduction the program only resample
  \n      the audio to the needed 22050 Hz and adjusts the amlitude; \n    1 -> after
  the noise reduction the program additionally \n      to the 0-processing truncates
  the silence from the beginning \n       and end of the audio to the level given
  by the second \n        command line parameter; \n    2 -> after the noise reduction
  the program additionally to \n      the 1-processing applies a double band-reject
  filter to \n       the audio (SoX \\\"sinc\\\" effect); \n    3 -> after the noise
  reduction the program additionally to \n      the 2-processing applies fade-in and
  fade-out effects to \n       the audio; \n    _ -> is the same as 3. \n\nIf you
  specified as a second command line argument the following number\nthe program behaves:
  \n    0 -> the maximum amplitude, starting from which the file will \n      not
  be trimmed for the first command line argument greater \n       of 1, is 0.01; \n
  \   1 -> the maximum amplitude, starting from which the file \n      will not be
  trimmed for the first command line argument \n       greater of 1, is 0.02; \n    2
  -> the maximum amplitude, starting from which the file \n      will not be trimmed
  for the first command line argument \n       greater of 1, is 0.04; \n    3 -> the
  maximum amplitude, starting from which the file \n      will not be trimmed for
  the first command line argument \n       greater of 1, is 0.08; \n    _ -> the maximum
  amplitude, starting from which the file \n      will not be trimmed for the first
  command line argument \n       greater of 1, is 0.04; \n\nIf you specify the third
  command line argument, it must be a list \nof Strings that can be obtained by executing
  the mmsyn7s program \n(https://hackage.haskell.org/package/mmsyn7s). The program
  will create \njust that non-silent representations for the Ukrainian sounds, \nwhich
  are given. The list must be sorted.\n\n"
license-name: MIT
