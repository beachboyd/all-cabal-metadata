homepage: https://github.com/domenkozar/mixpanel-client#readme
changelog-type: markdown
hash: e2d05ca789508653dc9f69a412273f06a5337c248b0e464381ee1c5ceada0877
test-bench-deps:
  http-client: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  time: -any
  base64-bytestring: -any
  servant-client: -any
  hspec: -any
  text: -any
  servant: ! '>=0.14.1'
  string-conv: -any
  http-client-tls: -any
  mixpanel-client: -any
  aeson: -any
maintainer: domen@enlambda.com
synopsis: Mixpanel client
changelog: ! '# Changelog


  All notable changes to this project will be documented in this file.


  The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)

  and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).


  ## [Unreleased]


  ## [0.1.1] - 2018-08-25


  - Intial release @domenkozar

'
basic-deps:
  http-client: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  time: -any
  base64-bytestring: -any
  servant-client: -any
  text: -any
  servant: ! '>=0.14.1'
  string-conv: -any
  http-client-tls: -any
  aeson: -any
all-versions:
- '0.1.0.0'
author: Domen Ko≈æar
latest: '0.1.0.0'
description-type: markdown
description: ! "# MixPanel client for Haskell\n\n\n[![Build Status](https://travis-ci.com/domenkozar/mixpanel-client.svg?branch=master)](https://travis-ci.com/domenkozar/mixpanel-client)\n[![Hackage](https://img.shields.io/hackage/v/mixpanel-client.svg)](https://hackage.haskell.org/package/mixpanel-client)\n\n\nImplements
  major features of [MixPanel HTTP API](https://mixpanel.com/help/reference/http):\n\n-
  [x] track\n- [x] alias\n- [x] engage\n- [ ] import\n- [ ] export\n\n## Getting started\n\n```haskell\nimport
  Data.Aeson      ( (.=) )\nimport Data.Time.Clock ( getCurrentTime )\nimport GHC.Exts
  \       ( fromList )\nimport MixPanel        ( Operation(Set), engage, track, alias\n
  \                      , AuthToken(..), mkEnv\n                       -- reexports\n
  \                      , newManager, tlsManagerSettings)\n\n\nmain :: IO ()\nmain
  = do\n  -- setup\n  manager <- newManager tlsManagerSettings\n  let env = mkEnv
  (AuthToken \"foobar\") manager\n\n  -- track a simple event\n  Right () <- track
  env \"Played Video\" mempty\n\n  -- track an event with extra properties\n  Right
  () <- track env \"Played Video Unique per user\"\n    $ fromList [ \"distinct_id\"
  .= (\"generated-id\" :: String)\n               , \"customProperty\" .= True ]\n\n
  \ -- alias the user\n  Right () <- alias env \"generated-id\" \"user@example.com\"\n\n
  \ -- profile engagement\n  now <- getCurrentTime\n  Right () <- engage env \"user@example.com\"\n
  \   $ Set (fromList [ \"$created\" .= now])\n\n  putStrLn \"All good!\"\n```\n\n##
  Design questions\n\na) Why does it use `Object/Array` intemediate values from `Data.Aeson`?\n\n\n##
  TODO\n\n- batch requests\n- expose extra url query paramerers\n- engage special
  properties more type safe?\n- filter out null values in requests to mixpanel\n-
  api support for tracking revenue\n"
license-name: Apache-2.0
