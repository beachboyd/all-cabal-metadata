homepage: https://github.com/hurou927/microc-haskell#readme
changelog-type: ''
hash: 2f82bbbd9e8c8d06749ef3c6cc52f338a762a5d0ae7dc53eae220cf002777468
test-bench-deps:
  base: -any
  microc: -any
maintainer: hurou927 <god.be.with.ye.fs@gmail.com>
synopsis: microc compiler
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  parsec: -any
  microc: -any
all-versions:
- '0.1.0.0'
- '1.0.0.0'
- '1.0.0.1'
author: hurou927 <god.be.with.ye.fs@gmail.com>
latest: '1.0.0.1'
description-type: markdown
description: ! "# MICROC compiler\n\n`microcCompilerLine :: String -> String`\n\nConvert
  a line of microc code to asm\n\n`microcCompilerStr :: String -> String`\n\nConvert
  microc code to asm\n\n`microcCompiler::IO()`\n\nInput:Stdin / Output:Stdout\n\n\n```haskell:microc\nmain::IO()\nmain
  = microcCompiler\n```\n\n`./microc < count.c > count.asm`\n\ncount.c\n``` c : count.c\nn=in;\nL1:\n
  \   out(n);\n    unless(n) goto L2;\n    n=n-1;\n    goto L1;\nL2:\n    halt;\n
  \   int n;\n```\n\n↓↓↓\n\ncount.asm\n``` assembly:count.asm\n        IN\n        POP
  n\nL1:\n        PUSH n\n        OUT\n        PUSH n\n        JZ L2\n        PUSH
  n\n        PUSHI 1\n        SUB\n        POP n\n        JMP L1\nL2:\n        HALT\nn:
  0\n```\n\nHiroshima Univ. / Embedded Software\n\nhttps://momiji.hiroshima-u.ac.jp/syllabusHtml/2017_58_U4090201.html\n"
license-name: BSD3
