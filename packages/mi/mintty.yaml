homepage: https://github.com/RyanGlScott/mintty
changelog-type: markdown
hash: 76e5d929619e2fe419dc2292856c5c86fd8f52cb13531b169b1316fc604157c8
test-bench-deps: {}
maintainer: Ryan Scott <ryan.gl.scott@gmail.com>
synopsis: A reliable way to detect the presence of a MinTTY console on Windows
changelog: ! "### 0.1.2 [2018.05.07]\n* Only use the `Win32`-provided version of `isMinTTY`
  if building against\n  `Win32-2.5.3` to be certain that one avoids Trac #13431.\n*
  Don't enable `Safe` on GHC 7.2.\n\n### 0.1.1 [2017.03.17]\n* Work around a serious
  bug on 32-bit Windows GHC that causes linker errors\n  when mintty is used together
  with code that uses certain `msvcrt` functions,\n  such as `atan`\n\n## 0.1 [2017.01.30]\n*
  Initial release\n"
basic-deps:
  base: ! '>=4.3 && <5'
all-versions:
- '0.1.1'
- '0.1.2'
author: Ryan Scott
latest: '0.1.2'
description-type: markdown
description: ! "# `mintty`\n[![Hackage](https://img.shields.io/hackage/v/mintty.svg)][Hackage:
  mintty]\n[![Hackage Dependencies](https://img.shields.io/hackage-deps/v/mintty.svg)](http://packdeps.haskellers.com/reverse/mintty)\n[![Haskell
  Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]\n[![BSD3
  License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal:
  BSD3]\n[![Build](https://img.shields.io/travis/RyanGlScott/mintty.svg)](https://travis-ci.org/RyanGlScott/mintty)\n[![Windows
  build](https://ci.appveyor.com/api/projects/status/kj3knsx19ebh9wly?svg=true)](https://ci.appveyor.com/project/RyanGlScott/mintty)\n\n[Hackage:
  mintty]:\n  http://hackage.haskell.org/package/mintty\n  \"mintty package on Hackage\"\n[Haskell.org]:\n
  \ http://www.haskell.org\n  \"The Haskell Programming Language\"\n[tl;dr Legal:
  BSD3]:\n  https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29\n  \"BSD
  3-Clause License (Revised)\"\n\nMinTTY is a Windows-specific terminal emulator for
  the widely used Cygwin and MSYS projects, which provide Unix-like environments for
  Windows. MinTTY consoles behave differently from native Windows consoles (such as
  `cmd.exe` or PowerShell) in many ways, and in some cases, these differences make
  it necessary to treat MinTTY consoles differently in code.\n\nThe `mintty` library
  provides a simple way to detect if your code in running in a MinTTY console on Windows.
  It exports `isMinTTY`, which does the right thing 90% of the time (by checking if
  standard error is attached to MinTTY), and it also exports `isMinTTYHandle` for
  the other 10% of the time (when you want to check is some arbitrary handle is attached
  to MinTTY). As you might expect, both of these functions will simply return `False`
  on any non-Windows operating system.\n"
license-name: BSD3
