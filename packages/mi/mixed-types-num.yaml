homepage: https://github.com/michalkonecny/mixed-types-num
changelog-type: markdown
hash: 5c0cd1e23c7f2d99ca0d1a4a7f4bbc63fa7b98c2479f27763b4698d9353fbae2
test-bench-deps:
  base: ! '>=4.8'
  hspec: ! '>=2.1'
  mixed-types-num: -any
  QuickCheck: ! '>=2.7'
  hspec-smallcheck: ! '>=0.3'
maintainer: Michal Konecny <mikkonecny@gmail.com>
synopsis: Alternative Prelude with numeric and logic expressions typed bottom-up
changelog: ! "* v 0.3.1.4 2017-12-06\n  * removed upper bounds for dependencies\n*
  v 0.3.1.3 2017-08-22\n  * fixed bound on base in test suite\n* v 0.3.1.2 2017-08-15\n
  \ * provided compatible versions of take, drop, length, replicate, splitAt\n  *
  added missing mixed-type subtraction combination to Ring etc.\n\n* v 0.3.0.1 2017-08-01\n
  \ * improve package documentation in module MixedTypesNumPrelude\n\n* v 0.3 2017-08-01\n
  \ * renamed the main module to MixedTypesNumPrelude\n  * much faster compilation\n
  \ * Ring and Field are now classes, not synonyms for large sets of constraints\n
  \ * many fixes in collect-error framework and its use in division and power\n  *
  Overloaded if-then-else via -XRebindableSyntax\n  * compiling with ghc 8.2.1\n\n*
  v 0.2.0.1\n  * fix compilation bug in test suite\n  * minor doc improvements\n  *
  fix Complex instances of error-throwing division (/!)\n\n* v 0.2\n  * new CollectErrors
  wrapper\n  * CN, specialisation of CollectErrors to NumErrors\n  * numerical partial
  operators (eg division) return a CN type\n  * instances for Data.Complex\n\n* v
  0.1\n  * first release\n"
basic-deps:
  base: ! '>=4.8 && <5'
  hspec: ! '>=2.1'
  smallcheck: ==1.1.*
  convertible: ! '>=1.1.1.0'
  QuickCheck: ! '>=2.7'
  template-haskell: -any
  hspec-smallcheck: ! '>=0.3'
all-versions:
- 0.1.0.0
- 0.1.0.1
- '0.2'
- 0.2.0.1
- '0.3'
- 0.3.0.1
- 0.3.1
- 0.3.1.1
- 0.3.1.2
- 0.3.1.3
- 0.3.1.4
- 0.3.1.5
author: Michal Konecny
latest: 0.3.1.5
description-type: haddock
description: ! 'This package provides a version of Prelude where

  unary and binary operations such as @not@, @+@, @==@

  have their result type derived from the parameter type(s)

  and thus supports mixed-type arithmetic and comparisons.


  Partial operations such as division, sqrt and power

  do not throw exceptions even when errors such as division by zero

  occur.  Instead, these errors are propagated bottom-up in

  a bespoke error-accumulating functor.


  This library is a by-product of developing the

  <https://github.com/michalkonecny/aern2 AERN2> library for interval and exact real
  computation.

  Certain aspects are specifically tailored for interval or exact real arithmetics,

  including three-valued numerical comparisons

  and distinguishing potential and certain errors.


  See module "MixedTypesNumPrelude" for further documentation.


  /Ghci 8.0.* fails when loading this package/ due to ghc bug <https://ghc.haskell.org/trac/ghc/ticket/13385#ticket
  13385>.

  This bug does not affect ghci 7.10.3 and ghci 8.2.* and above.'
license-name: BSD-3-Clause
