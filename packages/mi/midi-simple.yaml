homepage: https://github.com/tsahyt/midi-simple#readme
changelog-type: ''
hash: 06d400db456ec07bf8160858024f866eee346d90effc32ec1a2d819878df37f0
test-bench-deps:
  bytestring: -any
  midi-simple: -any
  base: ! '>=4.7 && <5'
  hspec: -any
  hspec-attoparsec: -any
  tasty-hspec: -any
  criterion: -any
  generic-random: -any
  tasty-quickcheck: -any
  attoparsec: -any
  tasty: -any
  QuickCheck: -any
maintainer: paul@tsahyt.com
synopsis: A simple and fast library for working with MIDI messages
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.8.1 && <0.11'
  base: ! '>=4.7 && <5'
  attoparsec: ! '>=0.13.1.0 && <0.14'
all-versions:
- 0.1.0.0
author: Paul Ogris
latest: 0.1.0.0
description-type: text
description: ! 'midi-simple

  ===========


  A simple and minimal MIDI library for Haskell, written with real-time

  applications in mind.  It provides fast decoding and encoding of (normalized)

  MIDI messages as output by e.g. JACK.


  Currently, the MIDI 1.0 specification is supported. No extensions (e.g. General

  MIDI) are implemented at the moment, but may be added in the future.


  In particular, timing information, relative or absolute, is out of scope for

  this project, as it messages are timed in the way they arrive in a real-time

  setting. There are currently also no plans to support MIDI files, although this

  library can be used as a base for building support for such a use case.


  Usage

  ~~~~~


  Most intended use cases should be covered by the `Sound.MIDI` module. The

  modules `Sound.MIDI.Parser` and `Sound.MIDI.Serialize` export the innards of the

  parser/serializer respectively for when they are needed.


  Performance

  ~~~~~~~~~~~


  In my benchmarks, the library has proven to be sufficient for real-time use.

  Parsing of common MIDI events such as Note On/Off or Pitch Bend runs at around

  50-60ns per event.

'
license-name: LGPL-3.0-only
