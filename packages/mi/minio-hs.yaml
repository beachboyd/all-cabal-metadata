homepage: https://github.com/minio/minio-hs#readme
changelog-type: markdown
hash: cfd9959fdce7fe26ff81a885f8a5838c3b5e440ee8c8d4bfb1ef6e0b960dc809
test-bench-deps:
  http-client: -any
  bytestring: -any
  tasty-smallcheck: -any
  minio-hs: -any
  case-insensitive: -any
  unliftio: -any
  xml-conduit: -any
  base: -any
  time: -any
  base64-bytestring: -any
  text: -any
  filepath: -any
  protolude: ! '>=0.1.6'
  conduit: -any
  cryptonite-conduit: -any
  ini: -any
  conduit-extra: -any
  memory: -any
  containers: -any
  unliftio-core: -any
  cryptonite: -any
  tasty-quickcheck: -any
  tasty-hunit: -any
  transformers: -any
  temporary: -any
  tasty: -any
  QuickCheck: -any
  http-conduit: -any
  resourcet: -any
  http-types: -any
  aeson: -any
  directory: -any
maintainer: dev@minio.io
synopsis: ! 'A Minio Haskell Library for Amazon S3 compatible cloud

  storage.'
changelog: ! "Changelog\n==========\n\n## Version 1.2.0\n\n* Export Provider and findFirst
  to look for credentials (#103)\n\n## Version 1.1.0\n\nThis version brings the following
  changes:\n\n* Adds experimental Admin APIs (#88, #91, #93, #94, #95, #100)\n* Adds
  support for using Google Compute Storage service when S3\n  compatibility mode is
  enabled (#96, #99)\n\nThis version also brings some breaking changes (via #101):\n\n*
  Adds IsString instance to load server address, and updates\n  initialization API
  to be more user friendly\n* Drops usage of data-default package and exposes explicit
  default\n  values for various types used in the library.\n\n## Version 1.0.1\n\nThis
  version brings the following (non-breaking) changes:\n\n* Remove dependency on text-format
  (#86)\n* Remove direct dependency on exceptions (#87)\n* Adds lower-bounds on dependencies.\n\n##
  Version 1.0.0\n\nThis new release changes the following APIs to add new capabilities:\n\n*
  Copy Object API now supports more options for source and destination (#73)\n* get/put
  Object functions now support a wider set of options via a\n  separate settings parameter
  (#71, #72)\n* getBucketPolicy and setBucketPolicy APIs are added (#82)\n* The library
  now uses UnliftIO (#83)\n\n## Version 0.3.2\n\nThis release brings the following
  changes:\n\n* Add `removeIncompleteUpload` API (#49)\n* Add presigned operations
  APIs (#56)\n* Add presigned Post Policy API (#58)\n* Skip SHA256 checksum header
  for secure connections (#65)\n* Remove resuming capability in PutObject (#67)\n*
  Add ListObjectsV1 API support (#66)\n* Add Bucket Notification APIs (#59)\n* Reverse
  #54 - tests fix.\n\n## Version 0.3.1\n\nThis is a bug-fix release:\n\n* Fix concurrency
  bug in `limitedMapConcurrently` (#53)\n* Fix tests related to listing incomplete
  uploads to accommodate Minio\n  server's changed behaviour to not list incomplete
  uploads. Note that\n  running these tests against AWS S3 are expected to fail. (#54)\n\n##
  Version 0.3.0\n\nThis release includes a breaking change:\n\nUsers of the library
  need not call `runResourceT` explicitly after\ncalling `runMinio`. This is now done,
  within the `runMinio` call\nmaking usage a bit simpler.\n\nOther changes:\n\n* Export
  ListUploadsResult and ListObjectsResult (#48)\n  * Also take max-keys as an argument
  for listObjects and max-uploads\n    for listIncompleteUploads.\n* Add bucket and
  object name validation (#45)\n* Add bucketExists and headBucket APIs (#42)\n\n##
  Version 0.2.1\n\n* Update dependencies, and switch to Stackage LTS 8.5\n\n## Version
  0.2.0\n\nThis is an interim release which brings some new features. However,\nthe
  library is not complete and APIs may change.\n\n* Remove `listIncompleteParts` API
  and augment `listIncompleteUploads`\n  API with information about aggregate size
  of parts uploaded.\n* Refactors error types and simpler error throwing/handling
  behaviour.\n* Add `removeObject` API to delete objects from the service.\n* Rename
  `Network.Minio.getService` to `Network.Minio.listBuckets`.\n* Add `docs/API.md`
  and examples directory with comprehensive\n  documentation and examples of high-level
  APIs exported by the\n  library.\n* Rename types:\n  * Rename PartInfo -> PartTuple\n
  \ * Rename ListPartInfo -> ObjectPartInfo\n* Add a bucket region cache to avoid
  locating a bucket's region for\n  every operation (mainly useful for AWS S3).\n*
  Add new `copyObject` API to perform server side object copying.\n* Rename `putObjectFromSource`
  API as `putObject`.\n* Separate out tests into two suites, one with a live-server
  and the\n  other without any external dependencies.\n"
basic-deps:
  http-client: ! '>=0.5'
  bytestring: ! '>=0.10'
  case-insensitive: ! '>=1.2'
  unliftio: ! '>=0.2'
  xml-conduit: ! '>=1.8'
  base: ! '>=4.7 && <5'
  time: ! '>=1.8'
  base64-bytestring: ! '>=1.0'
  text: ! '>=1.2'
  filepath: ! '>=1.4'
  protolude: ! '>=0.2 && <0.3'
  conduit: ! '>=1.3'
  cryptonite-conduit: ! '>=0.2'
  ini: -any
  conduit-extra: ! '>=1.3'
  memory: ! '>=0.14'
  containers: ! '>=0.5'
  unliftio-core: ! '>=0.1'
  cryptonite: ! '>=0.25'
  transformers: ! '>=0.5'
  http-conduit: ! '>=2.3'
  resourcet: ! '>=1.2'
  http-types: ! '>=0.12'
  aeson: ! '>=1.2'
  directory: -any
all-versions:
- '0.0.1'
- '0.1.0'
- '0.2.0'
- '0.2.1'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '1.2.0'
author: Minio Dev Team
latest: '1.2.0'
description-type: markdown
description: ! "# Minio Client SDK for Haskell [![Build Status](https://travis-ci.org/minio/minio-hs.svg?branch=master)](https://travis-ci.org/minio/minio-hs)[![Hackage](https://img.shields.io/hackage/v/minio-hs.svg)](https://hackage.haskell.org/package/minio-hs)[![Slack](https://slack.minio.io/slack?type=svg)](https://slack.minio.io)\n\nThe
  Minio Haskell Client SDK provides simple APIs to access [Minio](https://minio.io)
  and Amazon S3 compatible object storage server.\n\n## Minimum Requirements\n\n-
  The Haskell [stack](https://docs.haskellstack.org/en/stable/README/)\n\n## Installation\n\n```sh\ngit
  clone https://github.com/minio/minio-hs.git\n\ncd minio-hs/\n\nstack install\n```\n\nTests
  can be run with:\n\n```sh\n\nstack test\n\n```\n\nA section of the tests use the
  remote Minio Play server at\n`https://play.minio.io:9000` by default. For library
  development,\nusing this remote server maybe slow. To run the tests against a\nlocally
  running Minio live server at `http://localhost:9000`, just set\nthe environment
  `MINIO_LOCAL` to any value (and unset it to switch\nback to Play).\n\nDocumentation
  can be locally built with:\n\n```sh\n\nstack haddock\n\n```\n\n## Quick-Start Example
  - File Uploader\n\n### FileUploader.hs\n``` haskell\n#!/usr/bin/env stack\n-- stack
  --resolver lts-11.1 runghc --package minio-hs --package optparse-applicative --package
  filepath\n\n--\n-- Minio Haskell SDK, (C) 2017, 2018 Minio, Inc.\n--\n-- Licensed
  under the Apache License, Version 2.0 (the \"License\");\n-- you may not use this
  file except in compliance with the License.\n-- You may obtain a copy of the License
  at\n--\n--     http://www.apache.org/licenses/LICENSE-2.0\n--\n-- Unless required
  by applicable law or agreed to in writing, software\n-- distributed under the License
  is distributed on an \"AS IS\" BASIS,\n-- WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.\n-- See the License for the specific language governing
  permissions and\n-- limitations under the License.\n--\n\n\n{-# LANGUAGE OverloadedStrings
  \  #-}\n{-# LANGUAGE ScopedTypeVariables #-}\nimport           Network.Minio\n\nimport
  \          Data.Monoid           ((<>))\nimport           Data.Text             (pack)\nimport
  \          Options.Applicative\nimport           System.FilePath.Posix\nimport           UnliftIO
  \             (throwIO, try)\n\nimport           Prelude\n\n-- | The following example
  uses minio's play server at\n-- https://play.minio.io:9000.  The endpoint and associated\n--
  credentials are provided via the libary constant,\n--\n-- > minioPlayCI :: ConnectInfo\n--\n\n--
  optparse-applicative package based command-line parsing.\nfileNameArgs :: Parser
  FilePath\nfileNameArgs = strArgument\n               (metavar \"FILENAME\"\n                <>
  help \"Name of file to upload to AWS S3 or a Minio server\")\n\ncmdParser = info\n
  \           (helper <*> fileNameArgs)\n            (fullDesc\n             <> progDesc
  \"FileUploader\"\n             <> header\n             \"FileUploader - a simple
  file-uploader program using minio-hs\")\n\nmain :: IO ()\nmain = do\n  let bucket
  = \"my-bucket\"\n\n  -- Parse command line argument\n  filepath <- execParser cmdParser\n
  \ let object = pack $ takeBaseName filepath\n\n  res <- runMinio minioPlayCI $ do\n
  \   -- Make a bucket; catch bucket already exists exception if thrown.\n    bErr
  <- try $ makeBucket bucket Nothing\n    case bErr of\n      Left (MErrService BucketAlreadyOwnedByYou)
  -> return ()\n      Left e                                     -> throwIO e\n      Right
  _                                    -> return ()\n\n    -- Upload filepath to bucket;
  object is derived from filepath.\n    fPutObject bucket object filepath def\n\n
  \ case res of\n    Left e   -> putStrLn $ \"file upload failed due to \" ++ (show
  e)\n    Right () -> putStrLn \"file upload succeeded.\"\n```\n\n### Run FileUploader\n\n```
  sh\n./FileUploader.hs \"path/to/my/file\"\n\n```\n\n## Contribute\n\n[Contributors
  Guide](https://github.com/minio/minio-hs/blob/master/CONTRIBUTING.md)\n"
license-name: Apache-2.0
