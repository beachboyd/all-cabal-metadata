homepage: https://github.com/bstamour/weather
changelog-type: ''
hash: 2906e0fc685e07438808d3e6ea2ccf46c5bfce470c1eff7450ba16885145bfef
test-bench-deps: {}
maintainer: bryan@bryanstamour.com
synopsis: Library for interacting with the Weather Underground JSON API.
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.4'
  base: ==4.*
  unordered-containers: ! '>=0.2.5'
  text: ! '>=1.1.0'
  HTTP: ! '>=4000.2.12'
  aeson: ! '>=0.8.0'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
author: Bryan St. Amour
latest: 0.1.0.4
description-type: markdown
description: ! "# weather\nHaskell library for working with the Weather Underground
  JSON API.\n\nCurrently only supports querying for conditions for US-based cities.\n\nExample
  usage:\n\n```haskell\n{-# LANGUAGE RecordWildCards #-}\n\nmodule Main where\n\nimport
  Web.Weather\n\nmykey :: APIKey\nmykey   = \"top-secret\"\n\nmycity, mystate :: String\nmycity
  \ = \"Detroit\"\nmystate = \"MI\"\n\nmain :: IO ()\nmain = do\n  resp <- getConditions
  mykey mycity mystate\n  case resp of\n   Nothing -> putStrLn \"No data for that
  city/state\"\n   Just (Observation{..}) -> do\n     putStrLn $ \"Observation time:
  \" ++ obsTime\n     putStrLn $ \"Weather conditions: \" ++ obsWeather\n     putStrLn
  $ \"Temp: \" ++ show obsTemp\n     putStrLn $ \"Rel humidity: \" ++ show obsRelHumidity\n
  \    putStrLn $ \"Wind: \" ++ obsWind\n     putStrLn $ \"Feels like: \" ++ obsFeelsLike\n```\n\nOutput:\n\n```\nObservation
  time: Last Updated on April 10, 2:09 PM EDT\nWeather conditions: Partly Cloudy\nTemp:
  52.9\nRel humidity: \"60%\"\nWind: From the West at 4.7 MPH\nFeels like: 52.9 F
  (11.6 C)\n```\n"
license-name: BSD-3-Clause
