homepage: https://github.com/nshimaza/webex-teams-api#readme
changelog-type: markdown
hash: 91450599548d03b1630f0d91e88d6343d09e7b13315128927b9ea99d8ac4c7e7
test-bench-deps:
  warp: -any
  webex-teams-pipes: -any
  bytestring: -any
  wai: -any
  base: '>=4.7 && <5'
  hspec: -any
  text: -any
  webex-teams-api: -any
  async: -any
  data-default: -any
  pipes: -any
  network-uri: -any
  http-conduit: -any
  http-types: -any
  aeson: -any
maintainer: Naoto.Shimazaki@gmail.com
synopsis: Pipes wrapper of Webex Teams List API
changelog: |
  ## webex-teams-pipes-0.2.0.1

  * Include .cabal file in source repo.
  * Migrate CI from Travis to GitHub Actions.
  * Build and test for multiple platforms and GHC versions.

  ## webex-teams-pipes-0.2.0.0

  * Initial release.
basic-deps:
  http-client: -any
  webex-teams-pipes: -any
  bytestring: -any
  base: '>=4.7 && <5'
  text: -any
  webex-teams-api: -any
  data-default: -any
  pipes: -any
  utf8-string: -any
  optparse-applicative: -any
all-versions:
- 0.2.0.0
- 0.2.0.1
author: Naoto Shimazaki
latest: 0.2.0.1
description-type: markdown
description: |
  # webex-teams-pipes

  [![License: MIT](https://img.shields.io/badge/License-MIT-brightgreen.svg)](https://opensource.org/licenses/MIT)
  [![Build Status](https://github.com/nshimaza/webex-teams-api/workflows/build/badge.svg)](https://github.com/nshimaza/webex-teams-api/actions?query=workflow%3Abuild)
  [![Hackage](https://img.shields.io/hackage/v/webex-teams-pipes.svg?style=flat)](https://hackage.haskell.org/package/webex-teams-pipes)
  [![Stackage Nightly](http://stackage.org/package/webex-teams-pipes/badge/nightly)](http://stackage.org/nightly/package/webex-teams-pipes)
  [![Stackage LTS](http://stackage.org/package/webex-teams-pipes/badge/lts)](http://stackage.org/lts/package/webex-teams-pipes)

  pipes wrapper of webex-teams-api.

  Webex-teams-pipes is thin wrappers of list API.  It transform chunky response
  from list API into seamless stream of elements.

  A Haskell bindings for Cisco Webex Teams (formerly Cisco Spark) API

  This package also provides some sample usage in command line application style.
  See source under app directory of the source package.

  ### Sample Usage

  Following example is calling List Membership API which returns membership between
  Rooms and users (Person).  You can extract each Membership from
  pipes pipe.  The `streamListWithFilter`, provided by webex-teams-pipes,
  automatically performs pagenation when it is asked more element and last
  response had link of subsequent page in HTTP Link Header.

  ```haskell
      let auth   = Authorization "your authorization token"
          filter = MembershipFilter yourRoomId Nothing Nothing
      runEffect $ streamListWithFilter auth def filter .| takeC 200 .| mapM_C print (FIXME)
  ```

  You can find more examples in app/Main.hs.

  ### Limitation

  - Relative reference in Link Header is not recognized as next page
license-name: MIT
