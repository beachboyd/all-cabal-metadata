homepage: https://github.com/nshimaza/webex-teams-api#readme
changelog-type: markdown
hash: 19ab87f1e9a24705c3633dcff0324eb2c1f0bebee7216b198740e7eb156ddb79
test-bench-deps:
  warp: -any
  webex-teams-pipes: -any
  bytestring: -any
  wai: -any
  base: ! '>=4.7 && <5'
  hspec: -any
  text: -any
  webex-teams-api: -any
  async: -any
  data-default: -any
  pipes: -any
  network-uri: -any
  http-conduit: -any
  http-types: -any
  aeson: -any
maintainer: Naoto.Shimazaki@gmail.com
synopsis: Pipes wrapper of Webex Teams List API
changelog: ! '## webex-teams-pipes-0.2.0.0


  * Initial release.

'
basic-deps:
  http-client: -any
  webex-teams-pipes: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  text: -any
  webex-teams-api: -any
  data-default: -any
  pipes: -any
  utf8-string: -any
  optparse-applicative: -any
all-versions:
- 0.2.0.0
author: Naoto Shimazaki
latest: 0.2.0.0
description-type: markdown
description: ! "# webex-teams-pipes\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-brightgreen.svg)](https://opensource.org/licenses/MIT)\n[![Build
  Status](https://travis-ci.org/nshimaza/webex-teams-api.svg?branch=master)](https://travis-ci.org/nshimaza/webex-teams-api)\n[![Hackage](https://img.shields.io/hackage/v/webex-teams-pipes.svg?style=flat)](https://hackage.haskell.org/package/webex-teams-pipes)\n[![Stackage
  Nightly](http://stackage.org/package/webex-teams-pipes/badge/nightly)](http://stackage.org/nightly/package/webex-teams-pipes)\n[![Stackage
  LTS](http://stackage.org/package/webex-teams-pipes/badge/lts)](http://stackage.org/lts/package/webex-teams-pipes)\n\npipes
  wrapper of webex-teams-api.\n\nWebex-teams-pipes is thin wrappers of list API.  It
  transform chunky response\nfrom list API into seamless stream of elements.\n\nA
  Haskell bindings for Cisco Webex Teams (formerly Cisco Spark) API\n\nThis package
  also provides some sample usage in command line application style.\nSee source under
  app directory of the source package.\n\n### Sample Usage\n\nFollowing example is
  calling List Membership API which returns membership between\nRooms and users (Person).
  \ You can extract each Membership from\npipes pipe.  The `streamListWithFilter`,
  provided by webex-teams-pipes,\nautomatically performs pagenation when it is asked
  more element and last\nresponse had link of subsequent page in HTTP Link Header.\n\n```haskell\n
  \   let auth   = Authorization \"your authorization token\"\n        filter = MembershipFilter
  yourRoomId Nothing Nothing\n    runEffect $ streamListWithFilter auth def filter
  .| takeC 200 .| mapM_C print (FIXME)\n```\n\nYou can find more examples in app/Main.hs.\n\n###
  Limitation\n\n- Relative reference in Link Header is not recognized as next page\n"
license-name: MIT
