homepage: https://github.com/nbloomf/webdriver-w3c#readme
changelog-type: markdown
hash: befec69366ed88e9c51cc4b1c6cac5057d0f20d2f721d880231ded98c759fec7
test-bench-deps:
  http-client: ! '>=0.5.10 && <0.6'
  exceptions: ! '>=0.8.3 && <0.9'
  webdriver-w3c: -any
  JuicyPixels: ! '>=3.2.9.4 && <3.3'
  bytestring: ! '>=0.10.8.2 && <0.11'
  lens-aeson: ! '>=1.0.2 && <1.1'
  base: ! '>=4.7 && <5'
  time: ! '>=1.8.0.2 && <1.9'
  base64-bytestring: ! '>=1.0.0.1 && <1.1'
  tasty-expected-failure: ! '>=0.11.1.1 && <0.12'
  unordered-containers: ! '>=0.2.9.0 && <0.3'
  text: ! '>=1.2.3.0 && <1.3'
  script-monad: ! '>=0.0.1 && <0.0.2'
  parsec: ! '>=3.1.13.0 && <4'
  wreq: ! '>=0.5.2 && <0.6'
  containers: ! '>=0.5.10.2 && <0.6'
  lens: ! '>=4.16 && <4.17'
  tasty-quickcheck: ! '>=0.9.2 && <1.0'
  tasty-hunit: ! '>=0.10.0.1 && <0.11'
  random: ! '>=1.1 && <1.2'
  tasty: ! '>=1.0.1.1 && <1.1'
  scientific: ! '>=0.3.5.2 && <0.4'
  QuickCheck: ! '>=2.10.1 && <2.11'
  http-types: ! '>=0.12.1 && <0.13'
  aeson: ! '>=1.2.4.0 && <1.3'
  vector: ! '>=0.12.0.1 && <1.0'
  directory: ! '>=1.3.0.2 && <1.4'
maintainer: nathan.bloomfield@a8c.com
synopsis: Bindings to the WebDriver API
changelog: ! "# Changelog for webdriver-w3c\n\n## Unreleased changes\n\n(none)\n\n##
  0.0.1\n\n* New\n    * `WebDriver` monad for remotely controlling user agents. Also
  comes in monad transformer flavor with `WebDriverT` \n    * Bindings for all [WebDriver
  endpoints](https://w3c.github.io/webdriver/webdriver-spec.html) as of 2018-04-20\n
  \   * Integration with the [Tasty](https://hackage.haskell.org/package/tasty) test
  framework\n"
basic-deps:
  http-client: ! '>=0.5.10 && <0.6'
  exceptions: ! '>=0.8.3 && <0.9'
  webdriver-w3c: -any
  JuicyPixels: ! '>=3.2.9.4 && <3.3'
  bytestring: ! '>=0.10.8.2 && <0.11'
  lens-aeson: ! '>=1.0.2 && <1.1'
  SHA: ! '>=1.6.4.2 && <1.7'
  stm: ! '>=2.4.5.0 && <2.5'
  base: ! '>=4.7 && <5'
  time: ! '>=1.8.0.2 && <1.9'
  base64-bytestring: ! '>=1.0.0.1 && <1.1'
  aeson-pretty: ! '>=0.8.5 && <0.9'
  tasty-expected-failure: ! '>=0.11.1.1 && <0.12'
  unordered-containers: ! '>=0.2.9.0 && <0.3'
  text: ! '>=1.2.3.0 && <1.3'
  script-monad: ! '>=0.0.1 && <0.0.2'
  wreq: ! '>=0.5.2 && <0.6'
  containers: ! '>=0.5.10.2 && <0.6'
  lens: ! '>=4.16 && <4.17'
  uri-encode: ! '>=1.5.0.5 && <1.6'
  network-uri: ! '>=2.6 && <2.7'
  random: ! '>=1.1 && <1.2'
  tasty: ! '>=1.0.1.1 && <1.1'
  scientific: ! '>=0.3.5.2 && <0.4'
  QuickCheck: ! '>=2.10.1 && <2.11'
  http-types: ! '>=0.12.1 && <0.13'
  aeson: ! '>=1.2.4.0 && <1.3'
  vector: ! '>=0.12.0.1 && <0.13'
  directory: ! '>=1.3.0.2 && <1.4'
all-versions:
- '0.0.1'
author: Nathan Bloomfield
latest: '0.0.1'
description-type: markdown
description: ! 'webdriver-w3c

  =============


  [![Build Status](https://travis-ci.org/nbloomf/webdriver-w3c.svg?branch=master)](https://travis-ci.org/nbloomf/webdriver-w3c)


  Haskell bindings for the W3C WebDriver API



  What is it?

  -----------


  `webdriver-w3c` is a Haskell library providing bindings to the WebDriver API, enabling
  us to write Haskell programs that control web browsers. It is actively tested against
  `geckodriver` and `chromedriver`, as well as a fake remote end implementation. It
  is implemented as a monad transformer.


  Also included is an integration with the [tasty](https://hackage.haskell.org/package/tasty)
  test framework.


  [WebDriver](https://www.w3.org/TR/webdriver/) is an HTTP API for interacting with
  a web browser remotely. It is on track to become a W3C specification and based on
  work done by the [Selenium](https://www.seleniumhq.org/) community.



  Who is it for?

  --------------


  If you:


  * Are interested in browser automation, especially for testing,

  * Want to write browser automation code in Haskell, and

  * Don''t mind filing bug and feature requests,


  then you might give `webdriver-w3c` a try.


  This library is unrelated to [webdriver](http://hackage.haskell.org/package/webdriver)
  except in spirit. That library is older and more mature, and depending on your needs
  may be more appropriate.



  Where is the documentation?

  ---------------------------


  Depends on what you want!


  * _A cursory glance:_ This brief [tutorial](https://github.com/nbloomf/webdriver-w3c/blob/master/doc/Tutorial.md)
  shows how to go from nothing to one very simple test.

  * _To start a simple project:_ If you want to write a test suite, there''s a separate
  tutorial on using the [tasty integration](https://github.com/nbloomf/webdriver-w3c/blob/master/doc/TastyDemo.md).

  * _To dig into the API:_ The API docs will eventually be on Hackage.

  * _To mess with the library code:_ There''s a very small amount of [developer documentation](https://github.com/nbloomf/webdriver-w3c/blob/master/dev/doc.md);
  I''m also happy to answer questions.



  Who is responsible for this?

  ----------------------------


  Nathan Bloomfield (@nbloomf) wrote and maintains the code.


  Other contributors, in lexicographic order:


  * Ivan Enderlin (@hywan)


  And users like you!


  Also thanks to my employer for allowing -- actually, requiring :) -- this to be
  open source.


  And special thanks to Jonathan Lipps'' [Simplified Guide](https://github.com/jlipps/simple-wd-spec)
  to the WebDriver spec.

'
license-name: GPL-3
