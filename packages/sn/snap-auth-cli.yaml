homepage: https://github.com/dzhus/snap-auth-cli#readme
changelog-type: markdown
hash: 159ee8e230059d8a59983bc316114bd89146b6b162b0ecefdd4ada6ea4835800
test-bench-deps: {}
maintainer: dima@dzhus.org
synopsis: Command-line tool to manage Snap AuthManager database
changelog: ! "# Changelog\n\n## [0.2] - 2018-03-15\n\n### Added\n\n- SQLite support
  (contributed by Pedro Baltazar Vasconcelos\n  <https://github.com/dzhus/snap-auth-cli/pull/1>)\n\n###
  Changed\n\n- `-f` flag is now used to specify the database file location instead\n
  \ of `-j`\n\n## [0.1.0.1] - 2012-12-03\n\n## [0.1.0.0] - 2012-04-04\n\n[0.2]:     https://github.com/dzhus/snap-auth-cli/compare/0.1.0.1...0.2\n[0.1.0.1]:
  https://github.com/dzhus/snap-auth-cli/compare/0.1.0.0...0.1.0.1\n[0.1.0.0]: https://github.com/dzhus/snap-auth-cli/tree/0.1.0.0\n"
basic-deps:
  snap: <1.1
  bytestring: <0.11
  clientsession: <0.10
  base: <5
  sqlite-simple: <0.5
  aeson-pretty: <0.9
  unordered-containers: <0.3
  text: <1.3
  snaplet-sqlite-simple: <1.1
  utf8-string: <1.1
  cmdargs: <0.11
  aeson: <1.2
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2'
author: Dmitry Dzhus
latest: '0.2'
description-type: markdown
description: ! "# snap-auth-cli: CLI tool to manage Snap auth database\n\n[![Travis
  CI build status](https://travis-ci.org/dzhus/snap-auth-cli.svg)](https://travis-ci.org/dzhus/snap-auth-cli)\n[![Hackage](https://img.shields.io/hackage/v/snap-auth-cli.svg?colorB=5e5184&style=flat)](https://hackage.haskell.org/package/snap-auth-cli)\n[![Hackage
  deps](https://img.shields.io/hackage-deps/v/snap-auth-cli.svg)](http://packdeps.haskellers.com/feed?needle=snap-auth-cli)\n\nThis
  tool provides command-line interface to\nHaskell [Snap][snap] [AuthManager][snap-auth]
  to create, view and\ndelete users in database. Currently the Json and Sqlite file
  backends are\nsupported.\n\nPasswords for new users are provided in plain text.\n\nBy
  default the database resides in current directory in `users.json`\nfile.  A different
  db may be specified using `-f` flag.\nTo specify a Sqlite database use `-s -f filename`.\n\n#
  How to use\n\nType `snap-auth-cli --help` to get usage help.\n\nCreate a user:\n\n
  \   $ snap-auth-cli --create -u TwasBrillig -p SlithyToves1855\n\nUser roles may
  be set when creating account using arbitary number\nof `-o` flags:\n\n    $ snap-auth-cli
  --create -u TwasBrillig2 -p SlithyToves1855 -o gyre -o gimble\n\nA user may have
  an arbitary number of key-value pairs attached in the\nmeta field (currently all
  fields are stored in Strings):\n\n    $ snap-auth-cli --create -u AlexP -p 1234
  -k number -v 3214 -k foo -v bar -o admin\n\nRead a user from DB (`--read` flag may
  be omitted since reading\nis the default mode):\n\n    $ snap-auth-cli --read -u
  AlexP\n\n```json\n{\n    \"meta\": {\n        \"number\": \"3214\",\n        \"foo\":
  \"bar\"\n    },\n    \"suspended_at\": null,\n    \"roles\": [\n        \"admin\"\n
  \   ],\n    \"pw\": \"sha256|12|VpUGBg2O/NBkDTVTSqqYuA==|TIDuc3ToAPmALXCHBxTA8SjlUBztPS8nH6qiV63a+f4=\",\n
  \   \"activated_at\": null,\n    \"current_ip\": null,\n    \"locked_until\": null,\n
  \   \"updated_at\": \"2012-02-22T09:00:29.377Z\",\n    \"login_count\": 0,\n    \"current_login_at\":
  null,\n    \"login\": \"AlexP\",\n    \"remember_token\": null,\n    \"failed_login_count\":
  0,\n    \"last_ip\": null,\n    \"last_login_at\": null,\n    \"uid\": \"1\",\n
  \   \"created_at\": null\n}\n```\n\nTo specify a different database file (Json by
  default):\n\n    $ snap-auth-cli -f back.json --create -u MimsyBorogove -p 0utgr@b3d\n\nNote
  that if database file doesn't exist, it will be created from\nscratch.\n\nTo specify
  a Sqlite database:\n\n    $ snap-auth-cli -s -f db.sqlite --read -u AlexP\n\nUnlike
  the Json backend, the database file with the correct schema\nmust aleady exist;
  this should be automaticallly initialized by\nwhen you first run the Snap application.\n\n\nExisting
  users can be modified using the `-m` option. User is\nselected by login. Any of
  `-p`, `-o` or `-k/-v` flags may be\nspecified to set new value for user password,
  roles or meta. If no\nnew value is provided, old field is preserved.\n\nSet a new
  password for user:\n\n    $ snap-auth-cli -m -u Mome -p r@th$$\n\nSet a new role:\n\n
  \   $ snap-auth-cli -m -u Mome -o foobarer\n\nReplace user meta:\n\n    $ snap-auth-cli
  -m -u BG -k tel -v 2-12-85-06\n\nThe tool provides interface to delete users;  the
  Sqlite backend supports\nthis operation but the JsonFile backend does not.\n\n[snap]:
  http://snapframework.com/\n[snap-auth]: http://hackage.haskell.org/package/snap/docs/Snap-Snaplet-Auth.html\n"
license-name: BSD3
