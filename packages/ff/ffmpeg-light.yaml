homepage: http://github.com/acowley/ffmpeg-light
changelog-type: markdown
hash: 2691c51f0dcdfea78b2329bc88fcabf0dc13e842e05cf1b8df0a03bd7fb30899
test-bench-deps: {}
maintainer: acowley@gmail.com
synopsis: Minimal bindings to the FFmpeg library.
changelog: ! "# 0.12.0\n\n* Refactoring to better interoperate with SDL2\n* SDL2 video
  player demo executable\n\n[Thanks to Vladimir Pankov!]\n\n# 0.11.1\n\n* Use `Control.Monad.Except`
  instead of the deprecated `Control.Monad.Error` (Issue reported by Alexander / @AleXoundOS)\n\n#
  0.11.0\n\n* Query stream duration (Matthias Treydte)\n* Initial support for verbosity
  control; defaults to quiet\n   * Can be changed with the new `setLogLevel` function\n\n#
  0.10. 0\n\n* Fix encoder bug that created a single black frame at the start of\n
  \ every video (Jonathan Daugherty)\n\n# 0.9.0\n\n* Add support for camera input
  (Thomas M. DuBuisson)\n  * Try it: build the demo executable (`cabal configure -fBuildDemo`)\n
  \   and run `cabal run demo -- cam` to record 10s of video from a\n    connected
  camera to an output file `camera.mov`.\n\n* Extract frame time stamps from the video
  stream rather than the\n  codec context (hat tip to Jaro Reinders)\n\n# 0.8.2\n\n*
  Added probe features\n\n# 0.8.1\n\n* Update raster demo to use new JuicyPixels-3.2
  API\n\n# 0.8\n\n* Update to transformers-0.4.1 and mtl-2.2.1\n  * Changed decode-related
  types to accomodate deprecation of the\n    `Error` class. This means that if you
  want to initialize decoders\n    in your own transformer stack that has a `MonadError`
  instance,\n    you will need to use the variants with names suffixed by a \"T\"\n
  \   (for transformer).\n\n* Update to ffmpeg 2.3\n\n  * Address deprecation warning\n\n
  \   `Using AVStream.codec.time_base as a timebase hint to the muxer is\n       deprecated.
  Set AVStream.time_base instead.`\n\n  * Address \"non-strictly-monotonic PTS\" warning\n\n*
  Rasterific bump\n  * Rasterific exports its own linear algebra types as of 0.3\n\n#
  0.7.1\n\n* Bumped transformers dependency\n\n  Note: The use of mtl still triggers
  deprecation warnings from\n  transformers.\n\n* Fixed bug with changing source pixel
  format from RGB during\n  encoding.\n\n* Added BGRA pixel format\n\n# 0.7\n\n* Simplified
  top-level API to focus on JuicyPixels-based interface\n\n# 0.6\n\n* Cleaned the
  API of detritus. Use the image* functions.\n\n# 0.5\n\n* Juiced the Encode and Decode
  APIs.\n\n  Using `imageWriter` and `imageReader` provides a degree of pixel\n  format
  polymorphism based on JuicyPixels pixel types.\n\n# 0.4\n\n* Fixed corrupted output
  of palettized animated GIFs.\n\n* Added palettization options\n\n    * Using `avPixFmtRgb8`
  results in a small file\n\n    * Using the default pixel format (`avPixFmtPal8`)
  results in a good-looking,\n       fairly large file thanks to JuicyPixels's `palettize`
  function.\n\n    * Setting the `epPreset` field of the `EncodingParams` value passed
  to\n      `frameWriter` to `\"dither\"` results in an even prettier, even larger
  GIF\n      file (again, thanks to JuicyPixels's `palettize` function).\n\n    *
  See the `demo/Raster.hs` for examples.\n\n# 0.3.1\n\n* Automatically palettize RGB24
  to RGB8 for GIF output.\n\n* Add a Rasterific demo program that records an animation.\n\n#
  0.3\n\n* Support for GIF encoding (and other palletized formats).\n\n# 0.2\n\n*
  Separate `Scaler` module and friendly `libswscaler` interface.\n\n* Generalized
  `toJuicy` conversion.\n\n* Added demo program.\n\n# 0.1\n\n* Basic h264 encoding
  and decoding.\n"
basic-deps:
  exceptions: -any
  either: -any
  JuicyPixels: ==3.2.*
  bytestring: -any
  base: ! '>=4.6 && <4.11'
  text: -any
  monad-loops: -any
  mtl: ! '>=2.2.1 && <2.3'
  transformers: ! '>=0.4.1 && <0.6'
  vector: ! '>=0.10.9 && <0.13'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2'
- '0.2.0.1'
- '0.3'
- '0.3.0.1'
- '0.3.1'
- '0.4'
- '0.5'
- '0.6'
- '0.7'
- '0.7.1'
- '0.7.1.1'
- '0.8'
- '0.8.1'
- '0.8.2'
- '0.9.0'
- '0.10.0'
- '0.11.0'
- '0.11.1'
- '0.11.3'
- '0.12.0'
- '0.12.0.1'
author: Anthony Cowley
latest: '0.12.0.1'
description-type: haddock
description: ! 'Stream frames from an encoded video, or stream frames to

  a video output file. To read the first frame from

  an @h264@-encoded file into a JuicyPixels

  @Maybe DynamicImage@,


  > import Codec.FFmpeg

  > import Codec.Picture

  > import Control.Applicative

  >

  > go :: IO (Maybe DynamicImage)

  > go = do (getFrame, cleanup) <- imageReader "myVideo.mov"

  >         (fmap ImageRGB8 <$> getFrame) <* cleanup


  Tested with FFmpeg 3.1 - 3.2.4'
license-name: BSD3
