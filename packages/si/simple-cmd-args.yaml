homepage: https://github.com/juhp/simple-cmd-args
changelog-type: markdown
hash: 8725a8e6284cee5b4fc9209a85de2aeaad08fdfdbb7ea5aeed25412e576485e5
test-bench-deps: {}
maintainer: juhpetersen@gmail.com
synopsis: Simple command args parsing and execution
changelog: |
  # Changelog

  `simple-cmd-args` uses [PVP Versioning][1].

  ## 0.1.1
  - add switchWith, strOptionWith, optionWith, optionalWith,
    strOptionalWith, argumentWith
  - export simpleCmdArgsWithMods

  ## 0.1.0.1
  - fix and improve haddock documentation

  ## 0.1.0
  - Initial release with subcommands and option Mod functions

  [1]: https://pvp.haskell.org
basic-deps:
  base: ! '>=4 && <5'
  optparse-applicative: -any
all-versions:
- 0.1.0
- 0.1.0.1
- 0.1.1
author: Jens Petersen
latest: 0.1.1
description-type: markdown
description: |
  # simple-cmd-args

  [![Hackage](https://img.shields.io/hackage/v/simple-cmd-args.svg)](https://hackage.haskell.org/package/simple-cmd-args)
  [![BSD license](https://img.shields.io/badge/license-BSD-blue.svg)](LICENSE)
  [![Stackage Lts](http://stackage.org/package/simple-cmd-args/badge/lts)](http://stackage.org/lts/package/simple-cmd-args)
  [![Stackage Nightly](http://stackage.org/package/simple-cmd-args/badge/nightly)](http://stackage.org/nightly/package/simple-cmd-args)
  [![Build status](https://secure.travis-ci.org/juhp/simple-cmd-args.svg)](https://travis-ci.org/juhp/simple-cmd-args)

  A thin layer over optparse-applicative that avoids type plumbing for
  subcommands by using `Parser (IO ())`.

  ## Usage

  ```haskell
  import SimpleCmdArgs
  import Control.Applicative (some)
  import SimpleCmd (cmd_)

  main =
    simpleCmdArgs Nothing "my example tool" "Longer description..." $
    subcommands
      [ Subcommand "echo" "Print name" $ putStrLn <$> strArg "NAME"
      , Subcommand "ls" "Touch FILE" $ cmd_ "ls" <$> some (strArg "FILE...")
      ]
  ```

  See more [examples](https://github.com/juhp/simple-cmd-args/tree/master/examples).
license-name: BSD-3-Clause
