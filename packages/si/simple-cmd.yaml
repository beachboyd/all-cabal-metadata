homepage: ''
changelog-type: markdown
hash: a1fa55ba365f98d1c528e9cc5bcfb3d9d58e7ce1d0118ae2e5406a551c128bd6
test-bench-deps: {}
maintainer: juhpetersen@gmail.com
synopsis: Simple String-based process commands
changelog: ! "# Revision history for simple-cmd\n\n## 0.1.2 -- 2018-10-28\n- grep\n-
  improve haddock documentation\n\n## 0.1.1 -- 2018-10-02\n- cmdLines\n- Git: grepGitConfig\n-
  new Rpm: rpmspec\n\n## 0.1.0.0  -- 2018-09-13\n\n- Initial release, providing:\n
  \ cmd, cmd_, cmdBool, cmdMaybe, cmdStdIn, cmdlog, cmdN,\n  cmdIgnoreErr, cmdQuiet,
  cmdSilent, cmdStdErr,\n  egrep_, grep_, logMsg,\n  removePrefix, removeStrictPrefix,
  removeSuffix,\n  shell, shell_, sudo, (+-+)\n- A few git commands\n\n# Local Variables:\n#
  mode: text\n# End:\n"
basic-deps:
  base: <5
  filepath: -any
  process: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.1
- 0.1.2
author: Jens Petersen
latest: 0.1.2
description-type: markdown
description: ! '[![Build Status](https://travis-ci.org/juhp/simple-cmd.png)](https://travis-ci.org/juhp/simple-cmd)

  [![Hackage](http://img.shields.io/hackage/v/simple-cmd.png)](http://hackage.haskell.org/package/simple-cmd)


  # simple-cmd


  Some simple String wrappers of `readProcess`, `readProcessWithExitCode`,

  `rawSystem` from the Haskell `process` library.


  ## Usage


  ```haskell

  import SimpleCmd

  ```


  ```haskell

  cmd_ :: String -> [String] -> IO ()

  ```

  outputs to stdout. For example


  ```haskell

  cmd_ "git" ["clone", url]

  ```

  This can shortened to `git_ "clone" [url]`.


  ```haskell

  cmd :: String -> [String] -> IO String

  ```

  returns stdout as a `String`.


  There are also `cmdBool`, `cmdMaybe`, `cmdList`, `shell`, and others.


  Other examples:

  ```haskell

  gitBranch :: IO String

  grep_ pat file :: IO Bool

  sudo c args :: IO ()

  ```


  See the library documentation for more details.

'
license-name: BSD-3-Clause
