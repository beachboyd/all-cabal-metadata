homepage: https://github.com/dzhus/simple-vec3#readme
changelog-type: markdown
hash: 1bb64477a63165a501656032bfd8b88fe523faa578a19c7a0de5374906eff8a1
test-bench-deps:
  base: <5
  criterion: <1.4
  doctest: <0.16
  tasty-quickcheck: <0.10
  simple-vec3: -any
  doctest-discover: ! '>=0.1.0.8 && <0.2'
  tasty: <1.1
  vector: <0.13
maintainer: dima@dzhus.org
synopsis: Three-dimensional vectors of doubles with basic operations
changelog: ! "# Changelog\n\n## [0.4.0.1] - 2018-03-17\n\n### Changed\n\n- GHC 8.4.x
  support\n\n## [0.4] - 2018-02-20\n\n### Added\n\n- Doctests\n\n### Changed\n\n-
  `TVec3` is now just a type synonym for `(Double, Double, Double)`\n\n## [0.3.1]
  - 2018-02-18\n\n### Added\n\n- `Eq` and `Show` instances for `Matrix CVec3`\n\n##
  [0.3] - 2018-02-18\n\n### Added\n\n- GHC 8.2.x support\n\n### Changed\n\n- `Data.Vec3.Unboxed.Contiguous`
  is now again `Data.Vec3.Unboxed`.\n  `UVec3` was merged with `SVec3` and renamed
  to `CVec3`.\n\n- `Data.Vec3.Unboxed` is now `Data.Vec3.Tupled` and renamed to\n
  \ `TVec3`.\n\n- Benchmarks were reorganized to work well with Criterion group\n
  \ coloring\n\n### Removed\n\n- `SVec3` (merged into `CVec3`)\n\n## [0.2] - 2016-10-14\n\n###
  Added\n\n- Tests\n\n### Changed\n\n- `Data.Vec3.Unboxed` is now `Data.Vec3.Unboxed.Contiguous`\n\n-
  `Data.Vec3.TUnboxed` is now `Data.Vec3.Unboxed` and uses\n  [vector-th-unbox][]
  to generate Unbox instance\n\n## [0.1.0.1] - 2012-12-13\n\n### Changed\n\n- Benchmark
  is now an actual Cabal-friendly benchmark\n\n## [0.1.0.0] - 2012-12-05\n\n[0.4.0.1]:
  https://github.com/dzhus/simple-vec3/compare/0.4...0.4.0.1\n[0.4]:     https://github.com/dzhus/simple-vec3/compare/0.3.1...0.4\n[0.3.1]:
  \  https://github.com/dzhus/simple-vec3/compare/0.3...0.3.1\n[0.3]:     https://github.com/dzhus/simple-vec3/compare/0.2...0.3\n[0.2]:
  \    https://github.com/dzhus/simple-vec3/compare/0.1.0.1...0.2\n[0.1.0.1]: https://github.com/dzhus/simple-vec3/compare/0.1.0.0...0.1.0.1\n[0.1.0.0]:
  https://github.com/dzhus/simple-vec3/tree/0.1.0.0\n\n[vector-th-unbox]: https://hackage.haskell.org/package/vector-th-unbox\n"
basic-deps:
  base: <5
  QuickCheck: <2.12
  vector: <0.13
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.4'
- '0.4.0.1'
author: Dmitry Dzhus
latest: '0.4.0.1'
description-type: markdown
description: ! '# simple-vec3


  [![Travis CI build status](https://travis-ci.org/dzhus/simple-vec3.svg)](https://travis-ci.org/dzhus/simple-vec3)

  [![Hackage](https://img.shields.io/hackage/v/simple-vec3.svg?colorB=5e5184&style=flat)](https://hackage.haskell.org/package/simple-vec3)

  [![Hackage deps](https://img.shields.io/hackage-deps/v/simple-vec3.svg)](http://packdeps.haskellers.com/feed?needle=simple-vec3)


  *Simple* three-dimensional vectors of doubles with basic vector and

  matrix operations, supporting `Data.Vector.Unboxed` and

  `Data.Vector.Storable`.


  ```haskell

  >>> let v1 = (-1, 0.0,  0.2) :: TVec3

  >>> let v2 = ( 1, 2.3,  5.0) :: TVec3

  >>> let v3 = ( 1,   1, -0.2) :: TVec3


  -- Add two vectors:

  >>> v1 <+> v2

  (0.0, 2.3, 5.2)


  -- Dot product:

  >>> v1 .* v2

  0.0


  -- Multiply by a scalar:

  >>> v1 .^ 5

  (-5.0, 0.0, 1.0)


  -- Cross product:

  >>> v1 >< v3

  (-0.2, 0.0, -1.0)


  -- Matrix-vector product:

  >>> diag 2 `mxv` v2

  (2.0, 4.6, 10.0)

  ```


  Please consult the [Hackage page for simple-vec3][hackage-doc] for full

  documentation.


  The package provides two different implementations for `Vec3` type

  class, which differ in storage scheme. Benchmarks are included for

  both. You most likely want to use `CVec3` which is based on contiguous

  storage scheme and offers the best performance.


  ![simple-vec3 benchmarks](benchmark.png)


  [hackage-doc]: https://hackage.haskell.org/package/simple-vec3/docs/Data-Vec3.html

'
license-name: BSD3
