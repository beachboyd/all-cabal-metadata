homepage: http://verement.github.io/etamoo
changelog-type: ''
hash: 230362e969d381fb5387979ab26f40053a9b9337101e1c21122b7d550b3529c3
test-bench-deps: {}
maintainer: Rob Leslie <rob@mars.org>
synopsis: A new implementation of the LambdaMOO server
changelog: ''
basic-deps:
  bytestring: -any
  case-insensitive: -any
  unix: -any
  haskeline: -any
  stm: -any
  base: ! '>=4.7 && ==4.*'
  pipes-bytestring: -any
  time: ! '>=1.5'
  unordered-containers: -any
  text: ! '>=1.2.1.2'
  network: -any
  async: -any
  parsec: -any
  array: -any
  memory: -any
  pipes-network: -any
  containers: ! '>=0.4'
  pipes: -any
  pipes-concurrency: ! '>=2.0.3'
  vcache: -any
  cryptonite: -any
  mtl: -any
  hashable: -any
  stm-chans: -any
  transformers: -any
  random: -any
  vector: ! '>=0.7'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
author: Rob Leslie <rob@mars.org>
latest: 0.3.0.0
description-type: markdown
description: ! "\nImportant!\n==========\n\n**This is experimental software. While
  it is now mostly functional, it is not\n  yet fully complete.**\n\n_Until such time
  as the EtaMOO database format is well tested and considered\nstable, please make
  and keep LambdaMOO-format backup copies of your EtaMOO\ndatabases._\n\nAbout\n=====\n\nEtaMOO
  is a new implementation of the LambdaMOO server written in Haskell.\n\n[LambdaMOO][]
  is a network-accessible, multi-user, programmable, interactive\nsystem well-suited
  to the construction of text-based adventure games,\nconferencing systems, and other
  collaborative software.\n\n  [LambdaMOO]: http://www.ipomoea.org/moo/\n\nEtaMOO
  differs from LambdaMOO in a few significant ways:\n\n  * EtaMOO is multi-threaded.
  MOO tasks run concurrently, producing network\n    output and changes to the database
  in isolated transactions that are\n    committed only when not in conflict with
  any other transaction. (In cases\n    of conflict, transactions are automatically
  retried.) Separate threads are\n    also used for network connection management,
  so for example name lookups\n    do not block the entire server.\n\n  * EtaMOO uses
  [LMDB][] as a persistent backing store for the MOO database.\n    Changes are committed
  on an ongoing basis for instantaneous crash\n    recovery; checkpoints merely perform
  a quick synchronization, and are\n    otherwise unnecessary. EtaMOO provides mechanisms
  for importing and\n    exporting LambdaMOO-format databases to and from the EtaMOO-native
  format.\n\n  * EtaMOO is Unicode-aware, and will eventually include support for
  Unicode\n    MOO strings via compile-time build option.\n\n  * EtaMOO supports 64-bit
  MOO integers via compile-time build option.\n\n  * EtaMOO natively supports string-key
  association lists with efficient\n    lookup and update operations; the list index
  syntax has been extended to\n    allow _`alist`_`[`_`key`_`]` and _`alist`_`[`_`key`_`]
  = `_`value`_ for\n    string *`key`*s whenever *`alist`* is a well-formed association
  list.\n\n  * EtaMOO supports several additional hashing algorithms besides MD5,\n
  \   including SHA-1, SHA-2, SHA-3, and RIPEMD-160, via optional argument to\n    `string_hash()`,
  `binary_hash()`, and `value_hash()`. Hash digests may\n    also optionally be returned
  as binary strings.\n\n  * EtaMOO internally handles binary strings in an efficient
  manner, and only\n    translates to and from the special MOO *binary string* syntax
  upon demand.\n    For example, passing a binary string read from the network directly
  to\n    `decode_binary()` does not suffer a round trip through the *binary string*\n
  \   representation.\n\n  * EtaMOO supports fractional second delays in `suspend()`
  and `fork`.\n\n  * EtaMOO supports IPv6.\n\n  [LMDB]: http://symas.com/mdb/\n\nThe
  implementation of EtaMOO otherwise closely follows the specifications of\nthe [LambdaMOO
  Programmer's Manual][], and should be compatible with most\nLambdaMOO databases
  as of about version 1.8.3 of the LambdaMOO server code.\n\n  [LambdaMOO Programmer's
  Manual]: http://www.ipomoea.org/moo/#progman\n\nInstalling\n----------\n\nEtaMOO
  is built with [Cabal][], the Haskell package manager. In the simplest\ncase, running:\n\n
  \   cabal install EtaMOO\n\nshould automatically download, build, and install the
  `etamoo` executable\nafter doing the same for all of its Haskell dependencies.\n\nCabal
  itself is part of the [Haskell Platform][] which is available for many\ndistributions
  and platforms.\n\n  [Cabal]: http://www.haskell.org/cabal/\n  [Haskell Platform]:
  http://www.haskell.org/platform/\n\nThere are a few options you can give to `cabal
  install` to customize your\nbuild:\n\n| Option                | Feature                                       |\n|
  --------------------- | --------------------------------------------- |\n| `-j`
  \                 | Build in parallel using multiple processors   |\n| `-f llvm`
  \            | Use GHC's LLVM backend to compile the code    |\n| `-f 64bit`            |
  Enable 64-bit MOO integers                    |\n\nEtaMOO has non-Haskell dependencies
  on three external libraries: _liblmdb_ for\ndatabase persistence, _libpcre_ (with
  UTF-8 support enabled) for regular\nexpression matching, and, possibly, _libcrypt_
  (often part of the standard\nlibraries) for the MOO `crypt()` built-in function.
  You should ensure you have\nthese available before installing EtaMOO (e.g. on Debian-derived
  systems,\n`sudo apt-get install liblmdb-dev libpcre3-dev`).\n\nRunning\n-------\n\n`etamoo`
  is nearly a drop-in replacement for the LambdaMOO `moo` executable;\nthe main difference
  is that `etamoo` takes a single database path, rather than\nboth input and output
  paths. You can run `etamoo --help` for a command-line\nsynopsis.\n\nEtaMOO uses
  a native binary database format that allows quick loading and\ncheckpointing, and
  instantaneous crash recovery. You can create a native\ndatabase from a LambdaMOO-format
  database by using `etamoo --import`. You can\nalso go the other way and convert
  an EtaMOO database back to a\nLambdaMOO-format database with `etamoo --export`.\n\nIf
  you don't already have a database, you can find LambdaMOO-format cores for\nvarious
  MOOs online -- for example there is the venerable [LambdaCore][], or\nyou can request
  a character on [Waterpoint][] and then perform a live\n[JHCore extraction][]. (Note
  that Waterpoint's core extraction process\nrequires running an actual LambdaMOO
  server executable on the precore database\nto obtain the final core database; EtaMOO
  cannot yet do this itself.)\n\n  [LambdaCore]: http://ftp.lambda.moo.mud.org/pub/MOO/\n
  \ [Waterpoint]: http://waterpoint.moo.mud.org/\n  [JHCore extraction]: http://waterpoint.moo.mud.org:8080/core-extraction/\n\nBy
  default, EtaMOO will make use of all available CPUs for maximum\nparallelism. If
  you'd rather limit the number of processors EtaMOO uses, you\ncan use the command-line
  option `+RTS -N`_`n`_` -RTS` where _`n`_ is the\nnumber of processors to use.\n\nIf
  you want to enable statistics from the `memory_usage()` built-in function,\nyou
  will need to add `+RTS -T -RTS` to the command line options.\n\nLimitations\n-----------\n\nThe
  following LambdaMOO features are currently unsupported:\n\n  * The `.program` intrinsic
  command\n  * The `verb_cache_stats()` and `log_cache_stats()` built-in functions\n
  \ * Importing, exporting, or checkpointing of queued tasks in the database\n    file\n
  \ * Task time limits (ticks are counted, but seconds are not)\n  * The `NP_SINGLE`
  and `NP_LOCAL` network protocols (i.e. stdin/stdout,\n    UNIX-domain sockets, and/or
  named pipes; only TCP/IP is supported)\n  * Customizing `OUT_OF_BAND_PREFIX` and
  `OUT_OF_BAND_QUOTE_PREFIX` (these are\n    currently fixed as `#$#` and `#$\"`,
  respectively)\n  * The `IGNORE_PROP_PROTECTED` compilation option\n  * `$server_options.name_lookup_timeout`\n\nSee
  also the `DIFFERENCES.md` file for other differences between EtaMOO and\nLambdaMOO.\n\nHacking\n-------\n\n[Documentation][]
  is available for the various types, data structures, and\nfunctions used internally
  by EtaMOO.\n\n  [Documentation]: http://verement.github.io/etamoo/doc/\n\n"
license-name: BSD-3-Clause
