homepage: ''
changelog-type: markdown
hash: 976cc6119b982057ad949e4b01ff849fb290c933248bda47e81220b84724cae3
test-bench-deps:
  row-types: -any
  base: ! '>=2 && <6'
  criterion: ! '>=1.1'
  deepseq: ! '>=1.4'
maintainer: daniel.winograd-cort@target.com, matthew.farkas-dyck@target.com
synopsis: Open Records and Variants
changelog: ! "\n## 0.2.3.0 [2018-07-02]\n- Update the Show instance to render valid
  code.\n- Add 'toNative' and 'fromNative' functions for records to easily convert
  between Haskell records and row-types records.\n- Make type families in Data.Row.Internal
  polykinded (thanks James Yu!)\n\n## 0.2.1.0 [2018-03-20]\n- Bug Fix: The type of
  'update' for both Record and Variant now enforce the newly inserted type is correct.\n-
  New: Add 'restrict' and 'split' for Variants.  \n- - Removed 'restrict' from Data.Row
  export list.\n- New: Added support for universally quantified rows: 'mapForall'
  and 'uniqueMap'.\n- Added very simple test suite.\n\n## 0.2.0.0 [2018-02-12]\n-
  Initial Release\n"
basic-deps:
  base: ! '>=2 && <5'
  unordered-containers: ! '>=0.2'
  text: -any
  constraints: -any
  hashable: ! '>=1.2'
  deepseq: ! '>=1.4'
all-versions:
- '0.2.0.0'
- '0.2.1.0'
- '0.2.2.0'
- '0.2.3.0'
author: Daniel Winograd-Cort, Matthew Farkas-Dyck
latest: '0.2.3.0'
description-type: markdown
description: ! 'Row-Types

  =======


  Row-types is a library of open records and variants for Haskell using closed

  type families and type literals (among other things...).

  See [examples/Examples.lhs](https://raw.githubusercontent.com/target/row-types/master/examples/Examples.lhs)

  for an overview of how this library can be used.


  This work is a branch from CTRex [1,2] with other inspiration from data-diverse
  [3].

  My thanks to the authors and contributors of those libraries!


  [1] https://wiki.haskell.org/CTRex


  [2] https://hackage.haskell.org/package/CTRex/docs/Data-OpenRecords.html


  [3] https://hackage.haskell.org/package/data-diverse

'
license-name: MIT
