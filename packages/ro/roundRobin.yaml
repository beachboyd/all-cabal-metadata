homepage: ''
changelog-type: ''
hash: 0f7074a24f65409720ba544f5da99a7c8417ebe004de6d2b30773c55d122f31f
test-bench-deps:
  base: -any
  semigroups: -any
  roundRobin: -any
  tasty-quickcheck: -any
  tasty: -any
  QuickCheck: -any
maintainer: winterland1989@gmail.com
synopsis: A simple round-robin data type
changelog: ''
basic-deps:
  base: ! '>=4.6 && <5.0'
  semigroups: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.2.0
author: winterland1989
latest: 0.1.2.0
description-type: markdown
description: ! "[![Hackage](https://img.shields.io/hackage/v/roundRobin.svg?style=flat)](http://hackage.haskell.org/package/roundRobin)\n[![Travis-CI](https://travis-ci.org/winterland1989/roundRobin.svg)](https://travis-ci.org/winterland1989/roundRobin)\n\n#
  A simple round-robin data type\n\nThis package provide a simple data type wrap a
  round-robin table. so you can select resources(host, connection...) using round-robin
  fashion.\n\n## Example\n\n```haskell\nimport qualified Date.RoundRobin as RR\nimport
  qualified Network.HTTP.Client as HTTP\n\nmain :: IO ()\nmain = do\n    reqs <- mapM
  HTTP.parseUrl [\"http://foo.com\", \"http://bar.com\", \"http://qux.com\"]\n    proxyTable
  <- RR.newRoundRobin reqs\n    manager <- HTTP.newManager HTTP.defaultManagerSettings\n\n
  \   ...\n    -- maybe now you're inside a server service(a forked thread)\n    --
  use select to choose a request in round-robin fashion\n        req <- RR.select
  proxyTable\n        res <- HTTP.httpLbs req manager\n        ...\n```\n"
license-name: MIT
