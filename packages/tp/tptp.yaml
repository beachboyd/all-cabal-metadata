homepage: https://github.com/aztek/tptp
changelog-type: markdown
hash: 395bf008f795e993b90da2c45a84096095102445a6c54e9451c24f862f9e6ea5
test-bench-deps:
  extra: ! '>=1.4.4 && <1.7'
  Cabal: ! '>=1.16.0'
  base: -any
  text: -any
  tptp: -any
  doctest: -any
  bifunctors: ! '>=3.0.1 && <6'
  generic-random: ! '>=1.2.0.0 && <1.3'
  attoparsec: -any
  prettyprinter: -any
  scientific: -any
  QuickCheck: ! '>=2.4 && <3.0'
  directory: ! '>=1.2.5 && <1.4'
maintainer: evgeny.kotelnikov@gmail.com
synopsis: A parser and a pretty printer for the TPTP language
changelog: |
  # Revision history for tptp

  ## 0.1.0.0 -- 2019-05-07

  * First version. Released on an unsuspecting world.

  * Supported TPTP languages: CNF, FOF, TFF0, TFF1.
basic-deps:
  extra: ! '>=1.4.4 && <1.7'
  base: ! '>=4.5 && <5.0'
  text: ! '>=1.2.3 && <1.3'
  tptp: -any
  attoparsec: ! '>=0.13.2 && <0.14'
  prettyprinter: ! '>=1.2.1 && <1.3'
  scientific: ! '>=0.3.6 && <0.4'
  directory: ! '>=1.2.5 && <1.4'
all-versions:
- 0.1.0.0
author: Evgenii Kotelnikov
latest: 0.1.0.0
description-type: markdown
description: |
  # tptp

  [![Build Status](https://travis-ci.org/aztek/tptp.svg?branch=master)](https://travis-ci.org/aztek/tptp)

  [TPTP](http://www.tptp.org) (Thousands of Problems for Theorem Provers) is the standard language of problems, proofs, and models, used by automated theorem provers.

  This library provides definitions of data types, a pretty printer and an [attoparsec](http://hackage.haskell.org/package/attoparsec) parser for (currently, a subset of) the TPTP language.

  ## Example

  Consider the following classical syllogism.

  > All humans are mortal.
  > Socrates is a human.
  > Therefore, Socrates is mortal.

  We can formalize this syllogism in unsorted first-order logic and write it down in TPTP as following.

  ```haskell
  import Data.TPTP

  humansAreMortal :: UnsortedFirstOrder
  humansAreMortal = forall ["P"] $
    Connective (Predicate "human" [var "P"]) Implication (Predicate "mortal" [var "P"])

  socratesIsHuman :: UnsortedFirstOrder
  socratesIsHuman = Predicate "human" [Function "socrates" []]

  socratesIsMortal :: UnsortedFirstOrder
  socratesIsMortal = Predicate "mortal" [Function "socrates" []]

  syllogism :: TPTP
  syllogism = TPTP [
      axiom "humans_are_mortal" humansAreMortal,
      axiom "socrates_is_human" socratesIsHuman,
      conjecture "socrates_is_mortal" socratesIsMortal
    ]
  ```
license-name: GPL-3.0-only
