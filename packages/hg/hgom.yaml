homepage: http://github.com/polux/hgom
changelog-type: markdown
hash: 837ccb219c162a2751a039a04166b1c0af9da0bbb7be3356929388726fe6a790
test-bench-deps: {}
maintainer: Paul Brauner <paul.brauner@inria.fr>
synopsis: An haskell port of the java version of gom
changelog: ! "# hgom Changelog\n\n## version 0.6\n\n - fixed critical bug (`par` instead
  of `__par`)\n - added `Make_C` and `Is_C` classes generation\n\n## version 0.5.3\n\n
  - first public release\n"
basic-deps:
  wl-pprint: ! '>=1.0'
  base: ! '>=4 && <5'
  filepath: ! '>=1.1.0.2'
  parsec: ! '>=3.0.0'
  containers: ! '>=0.2'
  mtl: ! '>=1.1.0.2'
  directory: ! '>=1.0.0.2'
all-versions:
- 0.5.1
- 0.5.2
- 0.5.3
- '0.6'
author: Paul Brauner and Emilie Balland
latest: '0.6'
description-type: markdown
description: ! "# HGom #\n\nAn haskell clone of the original [java Gom](http://tom.loria.fr)
  code\ngenerator.\n\n## Compilation ##\n\nTo compile hgom, install \n[cabal-install](http://hackage.haskell.org/trac/hackage/wiki/CabalInstall)\nand
  type the following.\n\n    cabal configure\n    cabal build\n\nThe `hgom` binary
  is generated in `dist/build/hgom`.\n\n## Installation ##\n\n    cabal install\n\n##
  Generate developer documentation ##\n\nBy default, cabal generates no documentation
  since only the executable is\nexported. Developers still can generate the modules'
  documentation as follows.\n\n    cabal haddock --executables \\\n    --html-location='http://hackage.haskell.org/packages/archive/$pkg/latest/doc/html'
  \\\n    --hyperlink-source \n\nOnly exported symbols are documented. Add `--internal`
  for unexported symbols\ndocumentation.\n\nThe documentation index is then `dist/doc/html/hgom/hgom/index.html`.\n\n##
  Running hgom ##\n\nRun `hgom --help` to get some basic help. \nYou can test the
  behaviour of `hgom` by running it as follows. Some examples\nare valid files, other
  ones demonstrate `hgom` error messages.\n\n    hgom examples/simple.gom\n    hgom
  examples/big.gom\n    hgom examples/many_errors.gom\n    ...\n\n## Test ##\n\nThe
  test suite is compiled only if the `test` flag is\nset. For instance, run\n\n    cabal
  configure -ftest\n    cabal build\n    ./dist/build/hgom/hgom --test \"-a n\"\n\nor\n\n
  \   cabal install -ftest\n    hgom --test \"-a n\"\n\nwhere `n` is the number of
  generated random inputs for each test case.\n\nFor other arguments to the `--test`
  option, try `hgom --test \"--help\"`.\n\n### Code Coverage ###\n\nCode coverage
  can be tested as follows.\n\n    cabal build --ghc-options \"-fhpc -fforce-recomp\"\n
  \   cd test/coverage\n    ./coverage.sh\n\nThe documentation is generated in `test/coverage/html`.\n\n###
  Benchmark ###\n\nThere is some benchmark in `test/bench` that generates bigger and
  bigger gom\nfiles and runs `hgom` and `gom` on them, measuring the gom/hgom ratio\nconcerning
  the number of generated lines (using\n[sloccount](http://www.dwheeler.com/sloccount))
  and the elapsed time.\n\n    cd test/bench\n    make\n\nIt takes some time. The
  generated files can be plotted using\n[gnuplot](http://www.gnuplot.info) for instance.\n\n##
  Differences with gom ##\n\n### Better ###\n\n * faster !\n * a far less permissive
  checker\n * smaller code, compiles much faster\n * almost 100% code coverage,\n
  * unit tests using QuickCheck, both on compiler \n   data structures and generated
  code\n * regression tests for parser and checker\n * more things optional: visitable,
  checker, ...\n * `toHaskell`, `makeRandom`, `depth` and `size`\n    methods generation
  (optional)\n * smaller code for some generated \n   methods (string escaping factorized
  for instance)\n * faster code for some generated \n   methods (less function calls,
  more constants)\n * faster parser (`from*`) methods: don't use an\n   intermediate
  ATerm representation\n * pretty-printed generated code, \n   optional compact (no
  indentation) option\n\n### Worse ###\n\n * no hooks!\n * no ant task\n * imports
  only builtins\n * generates no comments\n\n### Different ###\n\n * slightly different
  command-line arguments syntax\n"
license-name: LicenseRef-GPL
