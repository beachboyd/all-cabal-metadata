homepage: https://github.com/mjakob/hgrib
changelog-type: markdown
hash: f7ed0e9520193c84e96bcf7e9b56ff412d34b3d1452ae311f2998a3611468161
test-bench-deps:
  base: ! '>=4.5 && <4.9'
  hspec: ==2.1.*
  hgrib: -any
  directory: ! '>=1.1 && <1.3'
maintainer: mjakob422@gmail.com
synopsis: Unofficial bindings for GRIB API
changelog: ! "# HGrib Change Log\n\n## 0.3.1.0\n\n* Added `skipMessage`, `skipMessageIf`,
  and `skipMessageIf_` to\n  `Data.Grib`, three functions to easily skip unwanted
  GRIB messages\n  in a file.\n\n\n## 0.3.0.0\n\n* Added a `GribIO` monad in `Data.Grib`,
  which is a higher-level\n  abstraction for reading GRIB files over the raw bindings
  in\n  `Data.Grib.Raw`.\n\n* Moved `Data.Grib.Raw.Exception` up to `Data.Grib`.\n\n*
  `Data.Grib.Raw` no longer re-exports the `Exception` module\n  mentioned above.\n\n*
  Made `gribHandleNewFromFile` return a `Maybe GribHandle` instead of\n  a plain `GribHandle`.
  \ `Nothing` is returned if no more messages\n  could be read from the given stream.\n\n*
  Re-organized the test utility modules.\n\n* Moved `Data.Grib.Raw.Marshal` from other
  to exposed modules, but it\n  should still be considered an internal module and
  it is not included\n  in the documentation.\n\n\n## 0.2.0.0\n\n* Extended the compatible
  version range of GRIB API and the Haskell\n  base library.\n\n* Added a `gribGetApiVersion`
  function to `Data.Grib.Raw`.\n\n* Included the `Data.Grib.Raw.Exception` module
  in `Data.Grib.Raw` and\n  removed the marshal function `withGribMultiHandle`.\n\n*
  Removed\n\n  * `gribContextSetMemoryProc`\n  * `gribContextSetPersistentMemoryProc`\n
  \ * `gribContextSetBufferMemoryProc`\n  * `gribContextSetPrintingProc`\n  * `gribContextSetLoggingProc`\n\n
  \ and corresponding foreign function type definitions from\n  `Data.Grib.Raw` to
  be able to mark all remaining functions _unsafe_\n  from a FFI perspective.\n\n*
  Marked all foreign imports _unsafe_.\n\n* Integrated the source code repository
  with [Travis CI][].\n\n* Abandoned the plans to include the full GRIB API in `grib_api.h`\n
  \ (but requests to include specific parts are welcome).\n\n\n## 0.1.0.0\n\n* Initial
  release.\n\n\n[Travis CI]: https://travis-ci.org/mjakob/hgrib\n"
basic-deps:
  base: ! '>=4.5 && <4.9'
  transformers: ! '>=0.3 && <0.5'
  hgrib: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
author: Mattias Jakobsson
latest: 0.3.1.0
description-type: markdown
description: ! "# HGrib\n\n[![Build Status](https://travis-ci.org/mjakob/hgrib.svg?branch=master)](https://travis-ci.org/mjakob/hgrib)\n\nUnofficial
  bindings for [ECMWF][]'s [GRIB API][] library for reading\nand writing [WMO FM-92
  GRIB][] edition 1 and edition 2 messages.\n\nIn this version of HGrib, a read-only
  monadic Haskell interface to\nGRIB API is provided.  Raw bindings for the [documented][GRIB
  Docs]\nparts of GRIB API are also available.  Future versions are intended to\nexpand
  the higher-level Haskell interface to include, among other\nthings, write support.\n\n\n##
  Installation\n\nThe following prerequisites are needed to build HGrib:\n\n  * [GRIB
  API][] >= 1.12 installed and discoverable by ghc (use\n    cabal's `--extra-include-dirs`
  and `--extra-lib-dirs` if it's\n    installed at a custom location); and\n\n  *
  Haskell [base][] >= 4.5; and\n\n  * [c2hs][] == 0.26.*.\n\nWith these requirements
  available, HGrib can be installed from\n[Hackage][] with [Cabal][]:\n\n```\ncabal
  install hgrib\n```\n\n\n## Usage\n\nHGrib provides a high-level monadic Haskell
  interface to GRIB API in\n`Data.Grib`. An example of its usage is GRIB API's [get.c][GRIB
  Get]\nexample re-written with HGrib:\n\n```haskell\nimport Control.Exception ( assert
  )\nimport Data.Grib\nimport Text.Printf       ( printf )\n\nmain :: IO ()\nmain
  = let filename = \"test/stage/regular_latlon_surface.grib1\" in\n  runGribIO_ filename
  $ do\n    setString \"file\" filename\n\n    getLong \"Ni\" >>= liftIO . printf
  \"numberOfPointsAlongAParallel=%d\\n\"\n    getLong \"Nj\" >>= liftIO . printf \"numberOfPointsAlongAMeridian=%d\\n\"\n\n
  \   getDouble \"yFirst\" >>=\n      liftIO . printf \"latitudeOfFirstGridPointInDegrees=%g\\n\"\n
  \   getDouble \"xFirst\" >>=\n      liftIO . printf \"longitudeOfFirstGridPointInDegrees=%g\\n\"\n
  \   getDouble \"yLast\"  >>=\n      liftIO . printf \"latitudeOfLastGridPointInDegrees=%g\\n\"\n
  \   getDouble \"xLast\"  >>=\n      liftIO . printf \"longitudeOfLastGridPointInDegrees=%g\\n\"\n
  \   getDouble \"DyInDegrees\" >>=\n      liftIO . printf \"jDirectionIncrementInDegrees=%g\\n\"\n
  \   getDouble \"DxInDegrees\" >>=\n      liftIO . printf \"iDirectionIncrementInDegrees=%g\\n\"\n\n
  \   getString \"packingType\" >>= liftIO . printf \"packingType=%s\\n\"\n\n    values
  <- getValues\n    let numValues = length values\n        average   = sum values
  / fromIntegral numValues\n    liftIO $ printf \"There are %d values, average is
  %g\\n\" numValues average\n\n    filename' <- getString \"file\"\n    liftIO $ assert
  (filename' == filename) (return ())\n```\n\nRaw bindings for the [documented][GRIB
  Docs] part of GRIB API is also\navailable in `Data.Grib.Raw`.  To be able to work
  with these bindings,\nbindings for C's `fopen` is provided in `Data.Grib.Raw.CFile`
  (which\nis re-exported by `Data.Grib.Raw`).\n\nFor more information, see HGrib's\n[reference
  documentation][HGrib Docs] generated by [Haddock][].\n\n\n## Contributing\n\nIssues,
  feature and pull requests are most welcome!  In particular,\nplease give suggestions
  on what you would like to see in the\nhigher-level interface and let me know if
  there is any undocumented\npart of GRIB API that you would like to have included.\n\n\n##
  Licenses\n\nHGrib was created and is currently maintained by\n[Mattias Jakobsson][].
  \ It is released under the\n[GNU General Public License v3.0][GPL3].  ECMWF's GRIB
  API is released\nunder the [Apache license][].  **HGrib is in no way associated
  with\nECMWF or the original library.**\n\n\n[Apache license]:    https://software.ecmwf.int/wiki/display/GRIB/License\n[base]:
  \             http://hackage.haskell.org/package/base\n[c2hs]:              https://github.com/haskell/c2hs\n[Cabal]:
  \            https://www.haskell.org/cabal/\n[ECMWF]:             http://www.ecmwf.int/\n[GPL3]:
  \             http://www.gnu.org/licenses/gpl-3.0.html\n[GRIB API]:          https://software.ecmwf.int/wiki/display/GRIB/Home\n[GRIB
  Docs]:         https://software.ecmwf.int/wiki/display/GRIB/Module+Index\n[GRIB
  Get]:          https://software.ecmwf.int/wiki/display/GRIB/get.c\n[Hackage]:           http://hackage.haskell.org/\n[Haddock]:
  \          https://www.haskell.org/haddock/\n[HGRIB Docs]:        https://hackage.haskell.org/package/hgrib\n[Mattias
  Jakobsson]: https://github.com/mjakob\n[WMO FM-92 GRIB]:    http://www.wmo.int/pages/prog/www/WMOCodes/Guides/GRIB/Introduction_GRIB1-GRIB2.pdf\n"
license-name: GPL-3.0-only
