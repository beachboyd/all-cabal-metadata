homepage: https://code.mathr.co.uk/hgmp
changelog-type: markdown
hash: c2ac5b5d01676fef8c143cbeb01a1ccc2ec81f1f65d03efc55a9beec3f5e5d7c
test-bench-deps:
  hgmp: -any
  base: -any
  QuickCheck: ! '>=2.8 && <2.13'
maintainer: claude@mathr.co.uk
synopsis: Haskell interface to GMP
changelog: ! '# 0.1.1

  - raw function foreign import bindings

  - define hsc2hs #alignment macro for older GHC versions


  # 0.1.0.1

  - use hsc2hs''s #alignment macro in Storable instances


  # 0.1.0.0

  - initial release

'
basic-deps:
  base: ! '>=4.8 && <4.13'
  integer-gmp: ! '>=1.0 && <1.1'
  ghc-prim: ! '>=0.4 && <0.6'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1'
author: Claude Heiland-Allen
latest: '0.1.1'
description-type: markdown
description: ! "hgmp\n====\n\nHaskell interface to GMP.  Types and instances, and
  marshalling between Integer\nand Rational and the corresponding GMP types, along
  with raw foreign imports of\nGMP functions.  Allows FFI to GMP code (whether in
  GMP itself or in third-party\ncode that uses GMP).\n\nA simple example illustrating
  binding to GMP's next probable-prime function:\n\n    {-# LANGUAGE ForeignFunctionInterface
  #-}\n\n    import Foreign.Ptr (Ptr(..))\n    import Numeric.GMP.Types (MPZ)\n    import
  Numeric.GMP.Utils (withInInteger, withOutInteger_)\n    import Numeric.GMP.Raw.Safe
  (mpz_nextprime)\n    import System.IO.Unsafe (unsafePerformIO)\n\n    nextPrime
  :: Integer -> Integer\n    nextPrime n =\n      unsafePerformIO $\n        withOutInteger_
  $ \\rop ->\n          withInInteger n $ \\op ->\n            mpz_nextprime rop op\n"
license-name: BSD3
