homepage: http://github.com/deech/fltkhs-demos
changelog-type: ''
hash: c6359d29b841c02dd05c16ed81fca4ae243b777afaeadfc4f0f6cfbfbee41c5a
test-bench-deps: {}
maintainer: aditya.siram@gmail.com
synopsis: FLTKHS demos. Please scroll to the bottom for more information.
changelog: ''
basic-deps:
  bytestring: -any
  stm: -any
  base: ==4.*
  process: -any
  fltkhs: ! '>=0.4.0.5'
  directory: ! '>=1.2.1.0'
all-versions:
- 0.0.0.3
- 0.0.0.5
- 0.0.0.6
- 0.0.0.7
author: Aditya Siram
latest: 0.0.0.7
description-type: markdown
description: ! "# fltkhs-demos\n\nThese are end-to-end demos of [FLTKHS] [1], a Haskell
  Binding to the FLTK GUI Library\n\n\nFltkhs-demos aims not only to show off the
  features of the [fltkhs] [1] but also\nserve as a way of learning the API by example.
  For more thorough documentation\non the [fltkhs] [1] API please see the [FLTKHS
  module] [2] of that package.\n\n## Introduction\n\nThe demos shipped with this package
  are listed in `fltkhs-demos.cabal` as\nseparate `Executable` components. Once the
  package is installed they are\ninstalled to a location known to Stack, so to execute
  `fltkhs-arc` for instance\ndo:\n\n```\n> stack exec fltkhs-arc\n```\n\nNote that
  all the executables are prefixed with \\\"fltkhs-\\\". This is in order to\nprevent
  the demo executables from stomping over applications of the same name\nthe user
  might already have installed. Typing:\n\n```\n > fltkhs-<TAB>\n```\n\nat the command
  line should show a complete list of available demos.\n\n## Learning The API\n\nMost
  of the demos are exact ports of those shipped in the 'test' directory of\nthe <http://fltk.org
  FLTK> distribution. It is hoped the user will study the\nHaskell demo code side-by-side
  with the C++ demo code in order to understand the\nAPI. The section __API Guide__
  in the [FLKTHS documentation] [2] covers this in more detail.\n\n## Why is the demo
  code so un-Haskelly?\nFor being written in Haskell, the demo code is horrifyingly/amazingly
  imperative and stateful. Although it may repulse those\nwho used to pure Haskell
  idioms it is that way for a reason.\n\nThe demo code was never meant to be idiomatic
  Haskell code but a way of showing as much of the API as possible. The API itself\nclosely
  resembles the underlying C++ code which is imperative and stateful. This has the
  advantage of making the API easier\nto learn.\n\nFor instance, assuming FLTK was
  installed from source compare /src/Examples/arc.hs with /test/arc.cxx in the FLTK\nsource
  directory. There is quite a bit of correspondence and it is easy to see how the
  Haskell API functions map to the C++ ones.\n\n## Fast Compilation Flag\n\nThis package
  comes with a flag `fastCompile` that is enabled by default and speeds up compilation.
  More information on this flag is available under the __Compilation__ section of
  the [FLTKHS documentation] [2].\n\nTo disable this flag, tell Stack to ignore it
  during the `configure` step:\n\n```\nstack build --flag fltkhs-demos:-fastCompile\n```\n\n#
  GHCi\n\nPlease see \"Running In The Repl\" [5] section of the FLTKHS documentation
  for more information.\n\n\n  [1]: http://hackage.haskell.org/package/fltkhs/\n  [2]:
  http://hackage.haskell.org/package/fltkhs/docs/Graphics-UI-FLTK-LowLevel-FLTKHS.html\n
  \ [3]: https://github.com/deech/fltkhs-fluid-hello-world\n  [4]: https://ghc.haskell.org/trac/ghc/ticket/10568\n
  \ [5]: http://hackage.haskell.org/package/fltkhs/docs/Graphics-UI-FLTK-LowLevel-FLTKHS.html#g:14"
license-name: MIT
