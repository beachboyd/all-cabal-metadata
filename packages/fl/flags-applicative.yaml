homepage: https://github.com/mtth/flags-applicative
changelog-type: ''
hash: 2e7888b4aaf689139cd962f7d2321c1e73e4bb5e9f042e6a48786a9081eb18e3
test-bench-deps:
  base: ! '>=4.7 && <5'
  hspec: ! '>=2.6 && <2.7'
  text: ! '>=1.2 && <1.3'
  flags-applicative: -any
maintainer: matthieu.monsch@gmail.com
synopsis: Applicative flag parsing
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  text: ==1.2.*
  containers: ! '>=0.6 && <0.7'
  flags-applicative: -any
  mtl: ! '>=2.2 && <2.3'
all-versions:
- 0.0.1.0
author: Matthieu Monsch
latest: 0.0.1.0
description-type: markdown
description: |
  # Applicative flags

  Simple flags parsing, inspired by
  [`optparse-applicative`](http://hackage.haskell.org/package/optparse-applicative):

  ```haskell
  data Options = Options
    { rootPath :: Text
    , logLevel :: Int
    , context :: Maybe Text
    } deriving Show

  optionsParser :: FlagParser Options
  optionsParser = Options <$> textFlag "root" "path to the root"
                          <*> (numericFlag decimal "log_level" "" <|> pure 0)
                          <*> (optional $ textFlag "context" "")
  ```

  See the [documentation](http://hackage.haskell.org/package/flags-applicative)
  for more information.
license-name: BSD-3-Clause
