homepage: https://github.com/michelk/yaml-union.hs
changelog-type: markdown
hash: c44e861672bef471e84aa99635b6e74afad1e9e76d67b339d05543a953efadeb
test-bench-deps:
  yaml-union: -any
  base: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  quickcheck-instances: -any
  scientific: -any
  QuickCheck: -any
  yaml: -any
  vector: -any
maintainer: michel@kuhlmanns.info
synopsis: Read multiple yaml-files and override fields recursively
changelog: ! '# release 0.0.2 (2017-06-09)


  - Use ByteString (thanks @pbogdan)


  # release 0.0.1 (2016-01-06)


  - Initial version

'
basic-deps:
  bytestring: -any
  yaml-union: -any
  unix: -any
  base: ==4.*
  unordered-containers: -any
  text: -any
  filepath: -any
  optparse-applicative: -any
  aeson: -any
  yaml: -any
  vector: -any
  directory: -any
all-versions:
- '0.0.1'
- '0.0.2'
- '0.0.3'
author: Michel Kuhlmann
latest: '0.0.3'
description-type: markdown
description: ! "# Command-line program to union yaml-files\n\n- Travis: ![](https://travis-ci.org/michelk/yaml-union.hs.svg?branch=master)\n-
  Hackage: ![](https://img.shields.io/hackage/v/yaml-union.svg?style=flat)\n\nThe
  command-line program `yaml-union` unions yaml-files recursively.\nWhen a key appears
  in multiple files, the values will be overridden with the\norder given on the command-line.
  If both values are hashes, the overrides will\nbe done recursively.\n\nThe program
  could be useful in conjunction with `pandoc` when passing in\nmeta-data from external
  files.\n\ne.g.\n\n    yaml-union -d meta1.yaml meta2.yaml | pandoc text.md --template
  tmpl.html\n\n## Installation\n\n```bash\ngit clone https://github.com/michelk/yaml-union.hs\ncd
  yaml-unions.hs\nstack install\n```\n\n## Todo\n- Optional define yaml-entries on
  the command-line eg `yaml-union -V blue=blau col.yaml`\n"
license-name: BSD3
