homepage: https://github.com/leptonyu/yam/yam#readme
changelog-type: ''
hash: b20b14101e192c48797561dca1130805b8813b6c90899925531f8ec43eb91133
test-bench-deps:
  warp: ! '>=3.2.25 && <3.3'
  bytestring: ! '>=0.10.8.2 && <0.11'
  servant-swagger-ui: ! '>=0.3.2.3.19.3 && <0.4'
  reflection: ! '>=2.1.4 && <2.2'
  wai: ! '>=3.2.1.2 && <3.3'
  base: ! '>=4.11 && <5'
  time: ! '>=1.8.0.2 && <1.9'
  unordered-containers: ! '>=0.2.9.0 && <0.3'
  hspec: ==2.*
  text: ! '>=1.2.3.1 && <1.3'
  servant-swagger: ! '>=1.1.7 && <1.2'
  data-default: ! '>=0.7.1.1 && <0.8'
  servant-server: ==0.15.*
  fast-logger: ! '>=2.4.13 && <2.5'
  salak: ! '>=0.1.4 && <0.3'
  lens: ==4.17.*
  unliftio-core: ! '>=0.1.2.0 && <0.2'
  vault: ! '>=0.3.1.2 && <0.4'
  mtl: ! '>=2.2.2 && <2.3'
  swagger2: ! '>=2.3.1 && <2.4'
  monad-logger: ! '>=0.3.30 && <0.4'
  random: ==1.1.*
  scientific: ! '>=0.3.6.2 && <0.4'
  QuickCheck: ! '>=2.12.6.1 && <2.13'
  http-types: ! '>=0.12.2 && <0.13'
  aeson: ! '>=1.4.2.0 && <1.5'
maintainer: Daniel YU <leptonyu@gmail.com>
synopsis: Yam Web
changelog: ''
basic-deps:
  warp: ! '>=3.2.25 && <3.3'
  bytestring: ! '>=0.10.8.2 && <0.11'
  servant-swagger-ui: ! '>=0.3.2.3.19.3 && <0.4'
  reflection: ! '>=2.1.4 && <2.2'
  wai: ! '>=3.2.1.2 && <3.3'
  base: ! '>=4.11 && <5'
  time: ! '>=1.8.0.2 && <1.9'
  unordered-containers: ! '>=0.2.9.0 && <0.3'
  text: ! '>=1.2.3.1 && <1.3'
  servant-swagger: ! '>=1.1.7 && <1.2'
  data-default: ! '>=0.7.1.1 && <0.8'
  servant-server: ==0.15.*
  fast-logger: ! '>=2.4.13 && <2.5'
  salak: ! '>=0.1.4 && <0.3'
  lens: ==4.17.*
  unliftio-core: ! '>=0.1.2.0 && <0.2'
  vault: ! '>=0.3.1.2 && <0.4'
  mtl: ! '>=2.2.2 && <2.3'
  swagger2: ! '>=2.3.1 && <2.4'
  monad-logger: ! '>=0.3.30 && <0.4'
  random: ==1.1.*
  scientific: ! '>=0.3.6.2 && <0.4'
  http-types: ! '>=0.12.2 && <0.13'
  aeson: ! '>=1.4.2.0 && <1.5'
all-versions:
- 0.5.2
- 0.5.5
author: Daniel YU
latest: 0.5.5
description-type: markdown
description: |
  # yam

  Servant based Web Wrapper for Production in Haskell.


  ```Haskell

  import qualified Data.Salak                     as S
  import           Yam

  type API = "hello" :> Get '[PlainText] Text

  service :: ServerT API App
  service = return "world"

  main = start S.empty [] (Proxy :: Proxy API) service


  ```
license-name: BSD-3-Clause
