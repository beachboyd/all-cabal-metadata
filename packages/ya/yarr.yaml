homepage: ''
changelog-type: markdown
hash: 15fda80038a5c659e082395e5cec23f90d6d257b8ca9d0213ea84561ff918839
test-bench-deps: {}
maintainer: Dominic Steinitz <dominic@steinitz.org>
synopsis: Yet another array library
changelog: ! "* Changes in version 0.9.2:\n    * Safe folds -- see \"Data.Yarr.Walk\"\n
  \   * Issue with slice-wise loading with unrolled filling function solved\n* Changes
  in 1.3 (ex. 0.9.3):\n    * IFusion -- mapping/zipping with index\n    * Rename:
  Work -> Walk\n* Changes in 1.3.3.1: This now compiles with ghc 7.8.3 but probably\n
  \ won't compile with earlier versions of ghc. Let me know if this is a\n  requirement
  and I will see what I can do. Even better submit a pull\n  request.\n* Changes in
  1.4.0.0: This works (and will only work) with the\n  breaking change release of
  fixed-vector 0.8.0.0.\n* Changes in 1.4.0.2: Build with GHC 7.10 and 8.0.\n"
basic-deps:
  missing-foreign: ==0.1.1
  base: ! '>=4.6 && <4.10'
  ghc-prim: ! '>=0.3 && <0.6'
  fixed-vector: ! '>=0.8 && <0.9'
  deepseq: ! '>=1.3 && <1.5'
  template-haskell: ! '>=2.8 && <2.12'
  primitive: ! '>=0.6 && <0.7'
all-versions:
- 0.9.1
- 0.9.2
- 1.2.3
- 1.3.1
- 1.3.2
- 1.3.3
- 1.3.3.1
- 1.3.3.2
- 1.3.3.3
- 1.4.0.0
- 1.4.0.1
- 1.4.0.2
author: Roman Leventov
latest: 1.4.0.2
description-type: haddock
description: ! 'Yarr is a new blazing fast dataflow framework (array library),

  mainly intented to process @Storable@s (including all \"primitive\" numeric types)

  and @fixed-vector@s of them, for example coordinates,

  color components, complex numbers.


  Yarr framework is inspired by @repa@ library and inherits its features,

  including shape-polymorphism and auto-parallelism.

  Additionaly, the framework is polymorphic over type and arity

  of fixed-size vectors and supports neat flow operations over them.

  For example, you can convert colored image to greyscale like this:


  > let greyImage = zipElems (\r g b -> 0.21 * r + 0.71 * g + 0.07 * b) image


  In some cases the library is considerably faster than @repa@.

  See benchmark results: <https://github.com/leventov/yarr/blob/master/tests/bench-results.md>


  Shortcoming by design: lack of pure indexing interface.


  To start with, read documentation in the root module: "Data.Yarr".


  [@Yarr!@]'
license-name: MIT
