homepage: ''
changelog-type: markdown
hash: 14ba97ca66b9d4b19118af3eeec3c8a07c6bd407e7c0846156e2c524983d2f45
test-bench-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  hspec: -any
  text: -any
  yaml-pretty-extras: -any
  mtl: -any
  errors: -any
  yaml: -any
maintainer: locallycompact@gmail.com
synopsis: Extra functionality for pretty printing Yaml documents.
changelog: ! '# Changelog for yaml-pretty-extras


  ## v0.0.1.0


  Added ToPrettyYaml typeclass

  Added encodePrettyFile function

'
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  text: -any
  mtl: -any
  errors: -any
  yaml: -any
all-versions:
- '0.0.1.0'
author: Daniel Firth
latest: '0.0.1.0'
description-type: markdown
description: ! "# yaml-pretty-extras\n\nThis library adds a ```toPrettyYaml``` typeclass
  and helper functions.\n\n## Example Usage\n\n```{.haskell}\n{-# LANGUAGE DeriveAnyClass
  \   #-}\n{-# LANGUAGE DeriveGeneric     #-}\n{-# LANGUAGE OverloadedStrings #-}\n\nimport
  Data.Yaml.Pretty.Extras\nimport GHC.Generics\n\ndata Foo = Foo {\n  bar :: Text,\n
  \ quux :: Text\n} deriving (Eq, Show, FromJSON, ToJSON)\n\ninstance ToPrettyYaml
  Foo where\n  fieldOrder = const [\"quux\", \"bar\"]\n\nmain = encodeFilePretty \"foo.yaml\"
  (Foo \"bar\" \"quux\") -- prints out \"quux: quux\\nbar: bar\"\n```\n"
license-name: BSD3
