homepage: https://github.com/blackheaven/amqp-streamly#readme
changelog-type: markdown
hash: f74e6159f3a649cbf0df13705e2391524c44f32089f4a27547a969557439a4df
test-bench-deps:
  bytestring: '>=0.10.10.0 && <0.11'
  testcontainers: ==0.1.*
  base: '>=4.7 && <5'
  amqp: '>=0.19.1 && <0.20'
  hspec: '>=2.7.1 && <2.8'
  text: '>=1.2.4.0 && <1.3'
  process: '>=1.6.8.0 && <1.7'
  amqp-streamly: -any
  streamly: '>=0.7.2 && <0.8'
maintainer: gautier.difolco@gmail.com
synopsis: A simple streamly wrapper for amqp
changelog: |
  # Changelog for amqp-streamly

  ## 0.1.0
   * Creation with `produce` and `consume`
basic-deps:
  base: '>=4.7 && <5'
  amqp: '>=0.19.1 && <0.20'
  text: '>=1.2.4.0 && <1.3'
  streamly: '>=0.7.2 && <0.8'
all-versions:
- 0.1.0
author: Gautier DI FOLCO
latest: 0.1.0
description-type: markdown
description: |
  # amqp-streamly

  A simple wrapper around [amqp](https://hackage.haskell.org/package/amqp/).

  ## Usage
  You can either build a producer, which will publish all the messages of
  a stream:

  ```
  Streamly.drain $ produce channel sendInstructionsStream
  ```

  Or a consumer, which will contain the `Message`s and `Envelope`s of
  a queue:

  ```
  Streamly.drain $ consume channel aQueue NoAck
  ```
license-name: BSD-3-Clause
