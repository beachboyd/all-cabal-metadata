homepage: http://www.serpentine.com/wreq
changelog-type: markdown
hash: 5460a4fb380d0fdcb753816ee2d5b51055a561c6e44f89ec27668eccfcabc299
test-bench-deps:
  http-client: -any
  test-framework-hunit: -any
  bytestring: -any
  lens-aeson: -any
  test-framework: -any
  case-insensitive: -any
  base: ! '>=4.5 && <5'
  time: -any
  base64-bytestring: -any
  aeson-pretty: ! '>=0.8.0'
  unordered-containers: -any
  text: -any
  uuid: -any
  unix-compat: -any
  filepath: -any
  test-framework-quickcheck2: -any
  doctest: -any
  HUnit: -any
  wreq: -any
  containers: -any
  snap-server: ! '>=0.9.4.4'
  lens: -any
  snap-core: ! '>=1.0.0.0'
  network-info: -any
  hashable: -any
  transformers: -any
  temporary: -any
  QuickCheck: ! '>=2.7'
  http-types: -any
  aeson: -any
  vector: -any
  directory: -any
maintainer: bos@serpentine.com
synopsis: An easy-to-use HTTP client library.
changelog: ! "-*- markdown -*-\n\n2018-11-16 0.5.3.0\n\n* Added Postable/Putable on
  aeson encoding\n\n* Added better AWS signing for urls without region\n\n2018-03-01
  0.5.2.1\n\n* Fixed some building issues with older versions\n\n* Removed dependency
  on cryptohash, using cryptonite instead\n\n2018-01-01 0.5.2.0\n\n* Added some HistoriedResponse
  support\n\n* Deprecated withSession, added newSession (to be inline with upstream
  http-client)\n\n* Added same instances for Putable as for Postable (might be merged?)\n\n*
  Added getSessionCookieJar to get cookies from a Session\n\n* Fixed customPayloadMethod
  to follow the method (it was sometimes POST)\n\n2017-12-23 0.5.1.1\n\n* Add awsSessionTokenAuth
  (in addition to the existing awsAuth) to\n  support AWS Session Token Service (AWS
  STS) credentials. These look\n  like regular AWS credentials but have an additional
  session token as\n  a 3rd element. This mechanism is needed to be able to (a) use
  EC2\n  instance profiles, (b) make calls form AWS Lambda, (c) is useful for\n  delegated
  role access (assumeRole within and across accounts), and (d)\n  enables MFA-protected
  access scenarios.\n  See tests/AWS/IAM.hs for a test and simple example.\n\n2017-01-09
  0.5.1.0\n\n* Add Session-specific version of Network.Wreq.customPayloadMethodWith\n\n*
  8.2 GHC compatibility\n\n2017-01-09 0.5.0.0\n\n* Compatible with `http-client` >=
  0.5\n\n* This compatibility change required a small API change: `checkStatus`\n
  \ is now named `checkResponse` for compatibility with the\n  `http-client` package\n\n2015-05-10
  0.4.0.0\n\n* Compatible with GHC 7.10.\n\n* New withAPISession and withSessionControl
  functions make talking to\n  REST services more efficient.\n\n* Added support for
  AWS S3 virtual-host style URLs.\n\n* Added signing support for region specific calls
  to the AWS Security\n  Token Service (AWS STS).\n\n* The introduction of AWS support
  accidentally introduced unwanted AWS\n  headers and computation into all requests.
  This has been fixed.\n\n\n2014-12-11 0.3.0.1\n\n* Bump lower bound on http-client
  to 0.3.0.1\n\n\n2014-12-02 0.3.0.0\n\n* Support for Amazon Web Services request
  signing\n\n* New customMethod, customMethodWith functions allow use of arbitrary\n
  \ HTTP verbs\n\n* httpProxy, basicAuth, oauth2Bearer, oauth2Token: removed Maybe
  from\n  result types, changed documentation to suggest use of (?~)\n\n\n2014-08-25
  0.2.0.0\n\n* Support for lens 4.4\n\n\n2014-04-22 0.1.0.0\n\n* Initial release.\n"
basic-deps:
  http-client: ! '>=0.5.3.2'
  exceptions: ! '>=0.5'
  bytestring: ! '>=0.9'
  lens-aeson: -any
  case-insensitive: -any
  base: ! '>=4.5 && <5'
  time: ! '>=1.5'
  unordered-containers: -any
  text: -any
  memory: -any
  containers: -any
  lens: ! '>=4.5'
  authenticate-oauth: ! '>=1.5'
  ghc-prim: -any
  http-client-tls: ! '>=0.3.3'
  mime-types: -any
  cryptonite: -any
  hashable: -any
  base16-bytestring: -any
  attoparsec: ! '>=0.11.1.0'
  http-types: ! '>=0.8'
  aeson: ! '>=0.7.0.3'
  template-haskell: -any
  psqueues: ! '>=0.2'
  time-locale-compat: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.0.1'
- '0.4.0.0'
- '0.4.1.0'
- '0.5.0.0'
- '0.5.0.1'
- '0.5.1.0'
- '0.5.2.0'
- '0.5.2.1'
- '0.5.3.0'
author: Bryan O'Sullivan <bos@serpentine.com>
latest: '0.5.3.0'
description-type: markdown
description: ! "# wreq: a Haskell web client library [![Build Status](https://travis-ci.org/bos/wreq.svg)](https://travis-ci.org/bos/wreq)\n\n`wreq`
  is a library that makes HTTP client programming in Haskell\neasy.\n\n# Features\n\n*
  Simple but powerful `lens`-based API\n\n* Over 100 tests, and built on reliable
  libraries like [`http-client`](http://hackage.haskell.org/package/http-client/)\n
  \ and [`lens`](https://lens.github.io/)\n\n* Session handling includes connection
  keep-alive and pooling, and\n  cookie persistence\n\n* Automatic decompression\n\n*
  Powerful multipart form and file upload handling\n\n* Support for JSON requests
  and responses, including navigation of\n  schema-less responses\n\n* Basic and OAuth2
  bearer authentication\n\n* Amazon Web Services (AWS) request signing (Version 4)\n\n*
  AWS signing supports sending requests through the\n  [Runscope Inc.](https://www.runscope.com)
  Traffic Inspector\n\n# Tutorials\n\nSee [the tutorials](http://www.serpentine.com/wreq/)
  for a quick-start.\n\n# Is it done?\n\nNo!  See [`TODO.md`](TODO.md) for a rather
  long list of ideas.\n"
license-name: BSD3
