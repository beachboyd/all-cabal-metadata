homepage: https://github.com/decomputed/euler
changelog-type: markdown
hash: 49e11d5591374a1c34c8ec2bf704c5498218a33c476297f3e8b96be49e3caf12
test-bench-deps:
  hlint: ==1.9.*
  base: ==4.*
  hspec: ==2.1.*
  euler: ==0.9.*
  criterion: ==1.0.2.*
  process: ==1.2.*
  xml: ==1.3.*
  regex-posix: ==0.95.*
  directory: ==1.2.*
maintainer: luis@decomputed.com
synopsis: Mathematics utilities for Haskell
changelog: ! "Change Log\n==========\n0.9.2 Luis Rodrigues Soares <luis@decomputed.com>
  Apr 16 2015\n    * Removes logging information.\n    * Builds with GHC 7.10.\n\n0.8.1
  Luis Rodrigues Soares <luis@decomputed.com> Mar 19 2015\n    * Logs more information
  while running.\n    * Documentation update.\n\n0.8.0 Luis Rodrigues Soares <luis@decomputed.com>
  Mar 15 2015\n    * Adds examples of build scripts that use both `cabal` and `runhaskell`;\n
  \   * Makes the HPC script more resilient to a build done with `cabal` vs a build
  done with `runhaskell`;\n    * Removes dependency on `cabal` for the haddock phase.\n\n0.7.0
  Luis Rodrigues Soares <luis@decomputed.com> Mar 13 2015\n    * Fixes for HPC test-suite.\n\n0.6.0
  Luis Rodrigues Soares <luis@decomputed.com> Mar 7 2015\n    * Makes happy a required
  build tool;\n    * Fixes GHC warnings.\n\n0.5.0 Luis Rodrigues Soares <luis@decomputed.com>
  Mar 7 2015\n    * Adds `changelog.md`;\n    * Adds Criterion benchmarks;\n    *
  Adds support for travis build.\n\n0.4.0 Luis Rodrigues Soares <luis@decomputed.com>
  Mar 6 2015\n    * Adds full documentation to the Primes module;\n    * Made the
  default haddock threshold become 100%;\n    * Brought down the limit for prime number
  generation during spec test phase;\n    * Removed temporary files;\n    * Updated
  dependencies;\n    * Changed formatting;\n    * Made script to run documentation;\n
  \   * Makes quick check tests run more cases;\n    * Updated build phases;\n    *
  Full test coverage;\n    * Adds quickcheck tests as well as HPC coverage.\n\n0.3.3
  Luis Rodrigues Soares <luis@decomputed.com> Mar 3 2015\n    * Fixed upper bounds
  and lower bounds in dependencies;\n    * Fixed all HLint suggestions;\n    * Added
  HLint to the build;\n    * Fixed all -Wall errors on test phase;\n    * Fixed all
  -Wall errors on compilation.\n\n0.3.0 Luis Rodrigues Soares <luis@decomputed.com>
  Feb 24 2015\n    * Made -Wall default compilation option\n    * Added source-repository
  field to cabal file.\n\n0.2.2 Luis Rodrigues Soares <luis@decomputed.com> Feb 23
  2015\n    * Added a unit test;\n    * Removed warnings from cabal file; Updated
  references to dependencies;\n    * Fixed errors all over the place;\n    * Removed
  unused functions; cleaned up indentation.\n\n0.1.0 Luis Rodrigues Soares <luis@decomputed.com>
  Feb 21 2015\n    * Added description to package;\n    * Fixed module references;\n
  \   * Cabalized the project;\n    * Initial copy of Problem07.hs, from https://github.com/decomputed/projectEuler\n"
basic-deps:
  base: ==4.*
all-versions:
- 0.1.0
- 0.2.2
- 0.3.0
- 0.3.3
- 0.4.0
- 0.5.1
- 0.6.0
- 0.7.0
- 0.8.0
- 0.8.2
- 0.9.2
author: Luis Rodrigues Soares
latest: 0.9.2
description-type: markdown
description: ! "# Euler - Mathematics functions for Haskell.\n\n[![Build Status](https://travis-ci.org/decomputed/euler.svg?branch=master)](https://travis-ci.org/decomputed/euler)\n\n##
  What is this?\n\nThis repo contains functions to help in mathematics calculations
  or puzzles using Haskell. Currently there is only one module, `Numeric.Euler.Primes`,
  which contains implementations of three prime number sieves:\n\n- [Sieve of Erastothenes](https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)\n-
  [Sieve of Sundaram](https://en.wikipedia.org/wiki/Sieve_of_Sundaram)\n- [Sieve of
  Atkin](https://en.wikipedia.org/wiki/Sieve_of_Atkin)\n\nThe current major version
  (0) is stable enough to be used for Project Euler problems but keep in mind that
  the sieves are still not optimized at all. I've been mostly busy trying to make
  a stable build.\n\nYou can also find this package [in Hackage](http://hackage.haskell.org/package/euler).\n\n##
  Dependencies and building\n\nTo install the library you just need the latest `base`,
  so `GHX 7.8` should be more than enough. Just `cabal install euler` from you project
  or add `euler` as a dependency to your `.cabal` file and you should be good to go.\n\nIf
  you want to build the library locally, you'll need a few more things:\n\n### Building
  with `cabal`\n\nYou'll need:\n\n- `GHC >= 7.8`\n- `cabal-install == 1.22.*`\n- `happy
  == 1.19.*` to run `HLint`\n\n`cabal-install` will take care of installing all the
  other dependencies. `Happy` is an executable so you need to get either to you user
  space or through you OS package manager. You then build it like this:\n\n    git
  clone https://github.com/decomputed/euler.git\n    cd euler\n    cabal sandbox init\n
  \   cabal install --only-dependencies --enable-tests --enable-benchmarks --enable-library-coverage\n
  \   cabal build\n    cabal test\n    cabal bench\n\n### Building with `runhaskell`\n\nYou'll
  need:\n\n- `happy == 1.19.*` and `hlint == 1.9.*` to run `HLint`;\n- `hspec == 2.1.*`
  to run the unit tests;\n- `xml == 1.3.*` to run the unit test coverage;\n- `regex-posix
  == 0.95.*` to run the documentation coverage;\n- `criterion == 1.0.2.*` to run the
  benchmarks.\n\nYou need to get these yourself since building it with `runhaskell`
  will not get these dependencies for you. As far as I know. You then build it like
  this:\n\n    runhaskell Setup.hs configure --enable-tests --enable-library-coverage
  --user\n    runhaskell Setup.hs build\n    runhaskell Setup.hs test\n    runhaskell
  Setup.hs bench\n\nHappy hacking!\n:-)\n"
license-name: MIT
