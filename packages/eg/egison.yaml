homepage: http://www.egison.org
changelog-type: ''
hash: 3c72f51a1e6f739b190fe44394273b6cbf163cc42e76969a18091611926a5317
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  base: ! '>=4.0 && <5'
  criterion: ! '>=0.5'
  HUnit: -any
  egison: -any
  mtl: -any
  transformers: -any
  deepseq: -any
  Glob: -any
maintainer: Satoshi Egi <egi@egison.org>
synopsis: Programming language with non-linear pattern-matching against non-free data
changelog: ''
basic-deps:
  ghc: -any
  haskeline: -any
  base: ! '>=4.0 && <5'
  unordered-containers: -any
  text: -any
  filepath: -any
  process: -any
  parsec: ! '>=3.0'
  array: -any
  egison: -any
  containers: -any
  ghc-paths: -any
  regex-tdfa: -any
  mtl: -any
  transformers: -any
  random: -any
  parallel: -any
  vector: -any
  directory: -any
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.1.2.1'
- '0.1.2.2'
- '0.1.2.3'
- '0.1.2.4'
- '0.1.2.5'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.1.0'
- '0.2.1.1'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.0.3'
- '0.3.1.0'
- '0.3.1.1'
- '0.4.0.0'
- '1.0'
- '1.0.1'
- '1.0.2'
- '1.0.3'
- '1.0.4'
- '1.0.5'
- '1.0.6'
- '1.0.7'
- '1.1.0'
- '1.1.1'
- '1.2.0'
- '1.2.1'
- '1.2.2'
- '1.2.3'
- '2.0.0'
- '2.0.1'
- '2.0.2'
- '2.0.3'
- '2.0.4'
- '2.1.0'
- '2.1.1'
- '2.1.2'
- '2.1.3'
- '2.1.4'
- '2.1.5'
- '2.1.6'
- '2.1.7'
- '2.1.8'
- '2.1.9'
- '2.1.10'
- '2.1.11'
- '2.1.12'
- '2.1.13'
- '2.1.14'
- '2.1.15'
- '2.1.16'
- '2.2.0'
- '2.2.1'
- '2.2.2'
- '2.2.3'
- '2.3.0'
- '2.3.1'
- '2.3.2'
- '2.3.3'
- '2.3.4'
- '2.3.5'
- '2.3.6'
- '2.3.7'
- '2.3.8'
- '2.3.9'
- '2.3.10'
- '2.4.0'
- '2.4.1'
- '2.4.2'
- '2.4.3'
- '2.4.4'
- '2.4.5'
- '2.4.6'
- '2.4.7'
- '3.0.0'
- '3.0.1'
- '3.0.2'
- '3.0.3'
- '3.0.4'
- '3.0.5'
- '3.0.6'
- '3.0.7'
- '3.0.8'
- '3.0.9'
- '3.0.10'
- '3.0.11'
- '3.0.12'
- '3.1.0'
- '3.1.1'
- '3.2.0'
- '3.2.1'
- '3.2.2'
- '3.2.3'
- '3.2.4'
- '3.2.5'
- '3.2.6'
- '3.2.7'
- '3.2.8'
- '3.2.9'
- '3.2.10'
- '3.2.11'
- '3.2.12'
- '3.2.13'
- '3.2.14'
- '3.2.15'
- '3.2.16'
- '3.2.17'
- '3.2.18'
- '3.2.19'
- '3.2.20'
- '3.2.21'
- '3.2.22'
- '3.2.23'
- '3.2.24'
- '3.3.0'
- '3.3.1'
- '3.3.2'
- '3.3.3'
- '3.3.4'
- '3.3.5'
- '3.3.6'
- '3.3.7'
- '3.3.8'
- '3.3.9'
- '3.3.10'
- '3.3.11'
- '3.3.12'
- '3.3.13'
- '3.3.14'
- '3.3.15'
- '3.3.16'
- '3.3.17'
- '3.4.0'
- '3.5.0'
- '3.5.1'
- '3.5.2'
- '3.5.3'
- '3.5.4'
- '3.5.5'
- '3.5.6'
- '3.5.7'
- '3.5.8'
- '3.5.9'
- '3.5.10'
- '3.6.0'
- '3.6.1'
- '3.6.2'
- '3.6.3'
- '3.6.4'
- '3.6.5'
- '3.7.0'
- '3.7.1'
- '3.7.2'
- '3.7.3'
- '3.7.4'
- '3.7.5'
- '3.7.6'
- '3.7.7'
- '3.7.8'
author: Satoshi Egi, Ryo Tanaka, Takahisa Watanabe, Kentaro Honda
latest: '3.7.8'
description-type: haddock
description: ! 'An interpreter for Egison, a **pattern-matching-oriented**, purely
  functional programming language.

  We can directly represent pattern-matching against lists, multisets, sets, trees,
  graphs and any kind of data types.


  We can find Egison programs in @lib@ and @sample@ directories.

  This package also include Emacs Lisp file @elisp/egison-mode.el@.


  We can do non-linear pattern-matching against non-free data types in Egison.

  An non-free data type is a data type whose data have no canonical form, a standard
  way to represent that object.

  It enables us to write elegant programs.


  /Twin Primes/


  We can use pattern-matching for enumeration.

  The following code enumerates all twin primes from the infinite list of prime numbers
  with pattern-matching!


  <<https://raw.githubusercontent.com/egison/egison/master/images/twin-primes-w700.png>>


  /Poker Hands/


  The following code is the program that determines poker-hands written in Egison.

  All hands are expressed in a single pattern.


  <<https://raw.githubusercontent.com/egison/egison/master/images/poker-hands-w700.png>>


  /Mahjong/


  We can write a pattern even against mahjong tiles.

  We modularize patterns to represent complex mahjong hands.


  <<https://raw.githubusercontent.com/egison/egison/master/images/mahjong-w700.png>>


  /Graphs/


  We can pattern-match against graphs.

  We can write program to solve the travelling salesman problem in a single pattern-matching
  expression.


  <<https://raw.githubusercontent.com/egison/egison/master/images/salesman-w700.png>>


  Aren''t thsese exciting?

  We can run these demonstrations on our website!

  Please view and try more demonstrations!


  <http://www.egison.org>


  Egison makes programming dramatically simple.

  Please enjoy Egison!'
license-name: MIT
