homepage: https://github.com/lexi-lambda/type-assertions#readme
changelog-type: ''
hash: 2800278519ae64c162e20ec6a32c7cbaa57e52cd58361e5a747513bc6decd0ac
test-bench-deps:
  base: -any
  hspec: -any
  type-assertions: -any
  test-fixture: -any
maintainer: Alexis King
synopsis: Runtime type assertions for testing
changelog: ''
basic-deps:
  base: ! '>=4.9.0.0 && <5'
all-versions:
- 0.1.0.0
author: ''
latest: 0.1.0.0
description-type: markdown
description: ! '# type-assertions [![Build Status](https://travis-ci.org/lexi-lambda/type-assertions.svg?branch=master)](https://travis-ci.org/lexi-lambda/type-assertions)


  This module provides a set of runtime assertions about types that propogates information
  back to the type system, using `Data.Typeable` and `Data.Type.Equality`. These assertions
  are intended to be used in a test suite (and exclusively in a test suite) to create
  monomorphic implementations of polymorphic functions. Specifically, this is intended
  to be used with a package like [test-fixture][] to stub out polymorphic typeclass
  methods with monomorphic implementations.


  For more information, [see the documentation on Hackage][type-assertions].


  [test-fixture]: http://hackage.haskell.org/package/test-fixture

  [type-assertions]: http://hackage.haskell.org/package/type-assertions

'
license-name: ISC
