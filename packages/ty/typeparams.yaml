homepage: http://github.com/mikeizbicki/typeparams/
changelog-type: ''
hash: b1b8cfbeeca66a7912e588249f5c79c318da7dbbe128bdec9e135c9e190d8242
test-bench-deps: {}
maintainer: mike@izbicki.me
synopsis: Lens-like interface for type level parameters; allows unboxed unboxed vectors
  and supercompilation
changelog: ''
basic-deps:
  reflection: ! '>=1.3'
  base: ! '>=4.7 && <5'
  constraints: ! '>=0.3.4'
  tagged: ! '>=0.7'
  ghc-prim: -any
  deepseq: ! '>=1.3'
  template-haskell: -any
  primitive: ! '>=0.5'
  vector: ! '>=0.10'
all-versions:
- 0.0.1.0
- 0.0.2.0
- 0.0.3.0
- 0.0.3.1
- 0.0.4
- 0.0.5
- 0.0.6
author: Mike izbicki
latest: 0.0.6
description-type: haddock
description: ! 'This library provides a lens-like interface for working with type
  parameters. In the code:


  > data Example p1 (p2::Config Nat) (p3::Constraint) = Example


  @p1@, @p2@, and @p3@ are the type parameters.


  Two example uses of this library are for unboxing unboxed vectors and supercompilation-like
  optimizations.   Please see the <https://github.com/mikeizbicki/typeparams#the-typeparams-library
  README file on github> for a detailed description and tutorial.  After reading through
  that, the haddock documentation will make more sense.'
license-name: BSD-3-Clause
