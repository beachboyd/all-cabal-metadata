homepage: https://github.com/Lysxia/type-map
changelog-type: markdown
hash: ba11417d1fb5a99bfce125e4bd7a10e6eeffe05bb0c76f866e32e9a767c4ca13
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  base: ! '>=4.9'
  HUnit: -any
  type-map: -any
maintainer: lysxia@gmail.com
synopsis: Type-indexed maps
changelog: |
  # 0.1.6.0

  - Add `toList`, `toListMap`. (deepfire)

  # 0.1.5.0

  - Add role annotations for all the various type maps.
    Now the parameters have nominal roles.

    Previously, they had phantom roles, which broke uses of `unsafeCoerce`.

  # 0.1.4.0

  - Add `(<:)` to `Dynamic`. (deepfire)

  # 0.1.3.0

  - Add `update` to `Dynamic`. (deepfire)

  # 0.1.2.0

  - Update `Dynamic`
    + Export `empty`
    + Add `size`, `delete`, `union`, `difference`, `intersection`

  # 0.1.1.0

  - Compatible with GHC 8.2
basic-deps:
  base: ! '>=4.7 && <5'
  containers: -any
  ghc-prim: -any
  vector: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.4.0
- 0.1.5.0
- 0.1.6.0
author: Li-yao Xia
latest: 0.1.6.0
description-type: markdown
description: |
  Type-indexed maps [![Hackage](https://img.shields.io/hackage/v/type-map.svg)](https://hackage.haskell.org/package/type-map) [![Build Status](https://travis-ci.org/Lysxia/type-map.svg)](https://travis-ci.org/Lysxia/type-map)
  =================

  Maps whose keys are types.

  This package includes:

  - a dynamic type map using GHC's `Typeable` class,
    with a `Proxy`-based API (`Data.TypeMap.Dynamic`)
    or a `TypeApplications`-based API (`Data.TypeMap.Dynamic.Alt`);
    Supports arbitrary, user-defined mappings between keys and
    types of values via defunctionalization.

  - a static type map, whose type is indexed by its list of keys
    (there are actually multiple implementations with different underlying
    representations (`[]`, `Map`, `Vector`)).

  [Example using the dynamically-typed
  interface](https://github.com/Lysxia/type-map/tree/master/examples/dynamic.hs).

  See also [this package's description on Hackage](https://hackage.haskell.org/package/type-map).

  Related
  -------

  - [typerep-map](https://hackage.haskell.org/package/typerep-map),
    a more performant dynamic type map.

  Internal module policy
  ----------------------

  Modules under `Data.TypeMap.Internal` are not subject to any versioning policy.
  Breaking changes may apply to them at any time.

  If something in those modules seems useful, please report it or create a pull
  request to export it from an external module.
license-name: MIT
