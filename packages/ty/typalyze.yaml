homepage: http://www.decidable.org/haskell/typalyze
changelog-type: ''
hash: 7e47235afe343c76733bd7151aae23f9acb073cc4e2b957c40a094edc22042ab
test-bench-deps: {}
maintainer: mrd@debian.org
synopsis: Analyzes Haskell source files for easy reference
changelog: ''
basic-deps:
  ghc: -any
  bytestring: -any
  base: -any
  filepath: -any
  process: -any
  directory: -any
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.1.1
author: Matthew Danish <mrd@debian.org>
latest: 0.1.1
description-type: text
description: ! "typalyze\n~~~~~~~~\n\nAnalyzes a Haskell source file and collects
  useful information about\nit, which is then output to stdout in a (hopefully) easy-to-parse\nformat.\n\nThe
  current incarnation just obtains information about types over\nsource-spans.  The
  output describes spans of text in files which GHC\nconsiders to have the given type.
  \ For example:\n\nsrc/Main.hs:55:49-54\n  forall a. a -> IO a\n\nmeans that on line
  55 of Main.hs, from column 49-54, whatever is in\nthat region is considered to have
  type \"forall a. a -> IO a\".\n\ntypalyze tries to be smart about packages and modules,
  and\nautomatically attempts to identify the GHC options which will allow\nthe file
  to be parsed and typechecked successfully.\n\nHowever, if this fails, you can supply
  some options to the program to\nhelp it along.  See the output of --help.\n\ntypalyze.el\n~~~~~~~~~~~\n\nInteracts
  with the typalyze program, which aides Haskell development.\n\nC-c C-a C-c   Analyze
  current buffer.\nC-c C-a C-t   Show type of thing at point.\n\nAlso, typalyzes buffer
  whenever it is saved.\n\nhswatch\n~~~~~~~\n\nAlternatively, an external program
  named 'hswatch' can take care of\nupdating typalyze, on file modification, in the
  background.  To get\nthis running in Emacs, type M-x hswatch and select the directory
  tree\nyou want it to keep watch over.\n\nIt requires 'inotify-tools' which only
  works on recent versions of the\nLinux kernel, 2.6.13+.\n"
license-name: BSD-3-Clause
