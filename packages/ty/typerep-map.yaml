homepage: https://github.com/kowainik/typerep-map
changelog-type: markdown
hash: c75a3c95ec7853ce85bd3f5cb56604ca14d060dc68ce671a41f6c5b04e835d35
test-bench-deps:
  dependent-sum: -any
  base: -any
  tasty-hedgehog: -any
  tasty-discover: ! '>=4.1.1'
  dependent-map: -any
  tasty-hspec: -any
  criterion: -any
  hedgehog: -any
  typerep-extra-impls: -any
  ghc-typelits-knownnat: -any
  tasty: -any
  deepseq: -any
  typerep-map: -any
maintainer: xrom.xkov@gmail.com
synopsis: Efficient implementation of a dependent map with types as keys
changelog: ! "Change log\n==========\n\n`typerep-map` uses [PVP Versioning][1].\nThe
  change log is available [on GitHub][2].\n\n# 0.3.0\n\n* [#46](https://github.com/kowainik/typerep-map/issues/46):\n
  \ Make `Show` instance for `TypeRepMap` show keys.\n  Add `keys` function.\n* [#48](https://github.com/kowainik/typerep-map/issues/48):\n
  \ Add `adjust` function for `TypeRepMap` and  `TMap`.\n* [#30](https://github.com/kowainik/typerep-map/issues/30):\n
  \ Rewrite `fromSortedList` to use `Array` and `MutableArray`\n  instead of `IntMap`.\n\n\n#
  0.2.0\n\n* [#43](https://github.com/kowainik/typerep-map/issues/43):\n  Implement
  `IsList` instance for `TypeRepMap`.\n  Add `hoistA` function.\n* [#39](https://github.com/kowainik/typerep-map/issues/39):\n
  \ Implement `hoistWithKey` function.\n  Add `map` function for `TMap`.\n* Drop support
  for `ghc-8.0.2`.\n\n# 0.1.0\n\n* Initially created.\n\n[1]: https://pvp.haskell.org\n[2]:
  https://github.com/kowainik/typerep-map/blob/master/CHANGELOG.md\n"
basic-deps:
  base: ! '>=4.9 && <5'
  containers: -any
  ghc-prim: -any
  primitive: ! '>=0.6.4'
all-versions:
- '0.1.0'
- '0.2.0'
- '0.3.0'
author: Kowainik, Vladislav Zavialov
latest: '0.3.0'
description-type: markdown
description: ! "# typerep-map\n\n![electricity](https://user-images.githubusercontent.com/8126674/44323413-788dd700-a484-11e8-842e-f224cfaa4206.png)\n[![Hackage](https://img.shields.io/hackage/v/typerep-map.svg)](https://hackage.haskell.org/package/typerep-map)\n[![Build
  status](https://secure.travis-ci.org/kowainik/typerep-map.svg)](https://travis-ci.org/kowainik/typerep-map)\n[![MIT
  license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/vrom911/typerep-map/blob/master/LICENSE)\n\n`typerep-map`
  introduces `TMap` and `TypeRepMap` â€” data structures like [`Map`](http://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Map-Lazy.html#t:Map),
  but where types serve as keys, and values have the types specified in the corresponding
  key spots.\n\nFor the more details on the implementation see [this blog post](https://kowainik.github.io/posts/2018-07-11-typerep-map-step-by-step.html).\n\n##
  Usage example\n\n```haskell\nghci> import Data.TMap\n\nghci> tm = insert True $
  one (42 :: Int)\n\nghci> size tm\n2\n\nghci> res = lookup tm\n\nghci> res :: Maybe
  Int\nJust 42\n\nghci> res :: Maybe Bool\nJust True\n\nghci> res :: Maybe String\nNothing\n\nghci>
  lookup (insert \"hello\" tm) :: Maybe String\nJust \"hello\"\n\nghci> member @Int
  tm\nTrue\n\nghci> tm' = delete @Int tm\n\nghci> member @Int tm'\nFalse\n```\n\n##
  Benchmarks\n\nTables below contain comparision with `DMap TypeRep` of ten `lookup`
  operations\non structure with size `10^4`:\n\n|                | ghc-8.2.2 | ghc-8.4.3
  |\n|----------------|-----------|-----------|\n| `DMap TypeRep` | 517.5 ns  | 779.9
  ns  |\n| `typerep-map`  | 205.3 ns  | 187.2 ns  |\n\n ghc-8.2.2 |  ghc-8.4.3\n:---------:|:-----------:\n![DMap
  8.2.2](https://user-images.githubusercontent.com/4276606/42495129-c700f21e-8454-11e8-98b4-ba080259c712.png)
  | ![DMap 8.4.3](https://user-images.githubusercontent.com/4276606/42495168-ebb1d13c-8454-11e8-9d17-f6da29d2169a.png)\n![TMap
  8.2.2](https://user-images.githubusercontent.com/4276606/42494935-3a352d96-8454-11e8-985e-ebc77cc51ca0.png)
  | ![TMap 8.4.3](https://user-images.githubusercontent.com/4276606/42495147-d884bdf4-8454-11e8-887f-9815fd2b8d68.png)\n"
license-name: MIT
