homepage: https://github.com/mtesseract/async-timer#readme
changelog-type: ''
hash: 2f5c4ced218f0bce5872cee1f9eca94647a3ecb05ceacedccef1214cc39d68b7
test-bench-deps:
  async-timer: -any
  test-framework-hunit: -any
  test-framework: -any
  base: -any
  criterion: -any
  HUnit: -any
  containers: -any
  lifted-async: -any
maintainer: mtesseract@silverratio.net
synopsis: Provides API for timer based execution of IO actions
changelog: ''
basic-deps:
  base: ! '>=4.9.1.0 && <5'
  safe-exceptions: ! '>=0.1.5.0 && <0.2'
  monad-control: ! '>=1.0.1.0 && <1.1'
  lifted-base: ! '>=0.2.3.11 && <0.3'
  lifted-async: ! '>=0.9.1.1 && <0.11'
  transformers-base: ! '>=0.4.4 && <0.5'
all-versions:
- '0.1.4.0'
- '0.1.4.1'
author: Moritz Clasmeier
latest: '0.1.4.1'
description-type: markdown
description: ! "# async-timer [![Hackage version](https://img.shields.io/hackage/v/async-timer.svg?label=Hackage)](https://hackage.haskell.org/package/async-timer)
  [![Stackage version](https://www.stackage.org/package/async-timer/badge/lts?label=Stackage)](https://www.stackage.org/package/async-timer)
  [![Build Status](https://travis-ci.org/mtesseract/async-timer.svg?branch=master)](https://travis-ci.org/mtesseract/async-timer)\n\n###
  About\n\nThis is a lightweight package built on top of the async package\nproviding
  easy to use periodic timers. This can be used for executing\nIO actions periodically.\n\n###
  Example:\n\n```haskell\n      let conf = defaultTimerConf & timerConfSetInitDelay
  \ 500 -- 500 ms\n                                  & timerConfSetInterval  1000
  -- 1 s\n    \n      withAsyncTimer conf $ \\ timer -> do\n        forM_ [1..10]
  $ \\_ -> do\n          timerWait timer\n          putStrLn \"Tick\"\n```"
license-name: BSD3
