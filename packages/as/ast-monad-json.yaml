homepage: https://github.com/spica314/ast-monad-json#readme
changelog-type: ''
hash: 3302da0434639d821f2385d9f11feabceef7d14863aff67adb40f8185b5cfb05
test-bench-deps:
  base: -any
  hspec: -any
  text: -any
  ast-monad-json: -any
  ast-monad: -any
maintainer: 8128jp@gmail.com
synopsis: A library for writing JSON
changelog: ''
basic-deps:
  base: '>=4.7 && <5'
  text: -any
  ast-monad: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Masato Mouri
latest: 0.1.0.1
description-type: markdown
description: |+
  # ast-monad-json
  A library for writing JSON

  ## Example
  ```Haskell
  {-# LANGUAGE OverloadedStrings #-}
  module Main where

  import Language.ASTMonad
  import Language.ASTMonad.Json
  import Language.ASTMonad.Json.Renderer
  import qualified Data.Text.Lazy.IO as TL
  import qualified Data.Text.Lazy.Builder as TB

  data Parameter = Parameter { px :: Int, py :: Int }

  jsonCode :: Json Parameter
  jsonCode = do
    "id1" `is` "val1"
    "id2" `is` "val2"
    "flag" `isBool` True
    "point" `isArray` do
      x <- getParam px
      y <- getParam py
      "px" `isNum` x
      "py" `isNum` y

  main :: IO ()
  main = do
    let param = Parameter { px = 123, py = 456 }
    TL.putStrLn $ TB.toLazyText $ renderJson $ buildAST jsonCode param JsonEnvironment
  ```

  The execution result of the above code is

  ```
  {"id1":"val1","id2":"val2","flag":true,"point":{"px":123,"py":456}}
  ```

license-name: BSD-3-Clause
