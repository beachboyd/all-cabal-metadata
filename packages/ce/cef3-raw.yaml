homepage: ''
changelog-type: ''
hash: 651724802a979ad04008b2c61ac4f9ca9664ed233824956735ed889bda83d053
test-bench-deps: {}
maintainer: Maksymilian.Owsianny@gmail.com
synopsis: Raw CEF3 bindings
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5.0'
  bindings-DSL: ! '>=1.0.16 && <1.1'
all-versions:
- 0.1.0
author: Maksymilian Owsianny, Daniel Austin
latest: 0.1.0
description-type: markdown
description: ! "[![Linux Build Status][linux-build-icon]][linux-build]  [![Mac Build
  Status][mac-build-icon]][mac-build]  [![Windows Build Status][windows-build-icon]][windows-build]\n\nHaskell
  bindings to [cef3].\n\nThere is also a WIP [cef3-simple] for some higher level functionality
  of some\ncommon tasks. For usage example you can check the [cef3-example] repo.\n\n##
  Installation\n\nIf you use nix or if you are on windows - see the specific subsections
  below.\n\nHere is a general gist if you'd like to do it in some alternative way.\n\nFirst
  you will need libcef (branch 1750) installed somewhere on your machine.\nFor linux
  or windows 64bit you can download it from the release page of this\nrepo. Alternatively
  you can build it [from source][cef3-1750] if you prefer.\n\nNext you will need to
  tell ghc where the required lib and include dirs are, with\ncabal you can do it
  like so:\n\n```\ncabal configure \\\n  --extra-lib-dirs=\"<cef3-location>/Release\"
  \\\n  --extra-include-dirs=\"<cef3-location>\" \\\n  --extra-include-dirs=\"<cef3-location>/include\"
  \\\n  --extra-include-dirs=\"<cef3-location>/include/capi\"\n```\n\nThen you should
  be able to install and use it.\n\n### Linux - Nix/NixOS\n\nIf you don't have nix:\n\n```\ncurl
  https://nixos.org/nix/install | sh\n```\n\nOtherwise\n\n```\nnix-build default.nix\n```\n\nBeware:\nIt
  takes about 20min and ~800M ram to build it on my machine.\nI will add this package
  to nixpkgs in the future so you will be able\nto automatically download it prebuild
  from binary caches, but for now\nbeware.\n\n### Windows - Stack\n\nYou will need
  to have stack, curl and 7zip installed and in your PATH\nfor `setup.bat` to work.\n\n```\n.\\scripts\\setup.bat\n```\nThis
  will download cef lib and place it in `C:\\cef3-dev`\n\n```\nstack setup\n.\\scripts\\configure.bat\n```\n\nThe
  `configure.bat` will point stack to where `setup.bat` installed\nthe library.\n\nAlternatively
  if you already have cef (branch 1750) installed\nsomewhere you can just point the
  configure in that direction:\n\n```\n.\\scripts\\configure.bat <path-to-cef>\n```\n\nFinally
  run `stack install` and you're golden.\n\n### Mac\nTODO...\n\n---\n\nDisclaimer:
  This bindings are based on one done by Daniel Austin\n[here][bindings-cef3].\n\n[cef3]:
  https://bitbucket.org/chromiumembedded/cef\n[cef3-1750]: https://bitbucket.org/chromiumembedded/cef/branch/1750\n[example]:
  https://github.com/haskell-ui/cef3-raw-example\n[cef3-simple]: https://github.com/haskell-ui/cef3-simple\n[cef3-example]:
  https://github.com/haskell-ui/cef3-example\n[bindings-cef3]: https://github.com/fluffynukeit/bindings-cef3\n\n[linux-build-icon]:
  https://img.shields.io/travis/haskell-ui/cef3-raw/master.svg?label=Linux%20build\n[linux-build]:
  https://travis-ci.org/haskell-ui/cef3-raw\n[mac-build-icon]: https://img.shields.io/badge/Mac%20build-TODO-lightgrey.svg\n[mac-build]:
  https://github.com/haskell-ui/cef3-raw\n[windows-build-icon]: https://img.shields.io/appveyor/ci/MaxOw/cef3-raw/master.svg?label=Windows%20build\n[windows-build]:
  https://ci.appveyor.com/project/MaxOw/cef3-raw\n"
license-name: BSD-3-Clause
