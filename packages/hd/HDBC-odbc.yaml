homepage: https://github.com/hdbc/hdbc-odbc
changelog-type: text
hash: dcf973a2d92dee53b09aedf253345bce7ac0ce2a2dbf3c55e4421fcc2c43c79d
test-bench-deps: {}
maintainer: Anton Dessiatov <anton.dessiatov@gmail.com>
synopsis: ODBC driver for HDBC
changelog: ! "2.4.0.1 - 15 May 2015\r\n\r\n  * Switched to using UTF-8 encoding for
  binding WCHAR_T values on Linux. Earlier version tried\r\n    to use C wchar_t type,
  which confused some (in particular PostgreSQL) drivers.\r\n\r\n2.4.0.0 - 12 Nov
  2014\r\n\r\n  * Changed parameter binding implementation to fix bugs with wide character
  strings and binary\r\n    data not handled well with Microsoft SQL Server on Windows.\r\n\r\n
  \ * Implemented atomic reference counting to avoid race conditions in native code
  when running\r\n    with -threaded\r\n\r\n  * Implemented workaround for the SQL
  Server ODBC Driver deadlock, which occured if cursor over a\r\n    statement that
  was in the process of fetching data over the network got closed.\r\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.3.1.0 && <5'
  time: ! '>=1.2.0.3'
  HDBC: ! '>=2.1.0'
  concurrent-extra: ! '>=0.7.0.8'
  utf8-string: -any
  mtl: -any
all-versions:
- 1.0.1.0
- 1.1.3.0
- 1.1.3.1
- 1.1.4.0
- 1.1.4.1
- 1.1.4.2
- 1.1.4.3
- 1.1.4.4
- 1.1.6.0
- 2.0.0.0
- 2.1.0.0
- 2.2.0.0
- 2.2.3.0
- 2.2.3.1
- 2.2.3.2
- 2.3.1.0
- 2.3.1.1
- 2.4.0.0
- 2.4.0.1
- 2.5.0.0
- 2.5.0.1
author: John Goerzen
latest: 2.5.0.1
description-type: markdown
description: ! "HDBC-ODBC\r\n=========\r\n\r\nWelcome to HDBC, Haskell Database Connectivity.\r\n\r\nThis
  package provides a database backend driver for ODBC.  You should\r\nbe able to use
  any ODBC front-end with it.\r\n\r\nPlease see HDBC itself for documentation on use.\r\n\r\nThis
  package provides one function in module Database.HDBC.ODBC:\r\n\r\n> Connect to
  an ODBC server.\r\n> For information on the meaning of the passed string, please
  see:\r\n> <http://msdn2.microsoft.com/en-us/library/ms715433(VS.85).aspx>\r\n\r\n>
  ```haskell\r\n> connectODBC :: String -> IO Connection\r\n> ```\r\n\r\n\r\nFor example,
  you might use `connectODBC` as follows:\r\n\r\n    connectODBC \"DSN=hdbctest1\"\r\n\r\nFor
  more information about HDBC-ODBC,\r\nplease visit the [wiki](https://github.com/hdbc/hdbc-odbc/wiki).\r\n\r\nDifferences
  from HDBC standard\r\n------------------------------\r\n\r\nNone known at this time.\r\n\r\nMySQL
  note\r\n----------\r\n\r\nImportant note for MySQL users:\r\n\r\nUnless you are
  going to use InnoDB tables, you are strongly encouraged to set\r\n\r\n    Option
  = 262144\r\n\r\nin your odbc.ini (for Unix users), or to disable transaction support
  in your\r\nDSN setup for Windows users.\r\n\r\nIf you fail to do this, the MySQL
  ODBC driver will incorrectly state that it\r\nsupports transactions.  dbTransactionSupport
  will incorrectly return True.\r\ncommit and rollback will then silently fail.  This
  is certainly *NOT* what you\r\nwant.  It is a bug (or misfeature) in the MySQL driver,
  not in HDBC.\r\n\r\nYou should ignore this advice if you are using InnoDB tables.\r\n\r\nFor
  the error \"2013: Mysql server has gone away\" error message, you'll have to\r\nuse
  withRTSSignalsBlocked from the HDBC-mysql package.\r\n\r\nquery conn stmStr binds
  = withRTSSignalsBlocked $ quickQuery conn stmStr binds\r\n\r\nGetting Started\r\n---------------\r\n\r\nHere
  are some instructions to set up ODBC with a sqlite3 backend, and how\r\nto communicate
  with that database with HDBC-ODBC.\r\nThese instructions are written to work with
  Ubuntu 11.10.\r\n\r\nFirst, we'll need to install the appropriate libraries:\r\n\r\n
  \   sudo apt-get install unixodbc unixodbc-dev unixodbc-bin\r\n    sudo apt-get
  install libsqliteodbc\r\n\r\nVerify that the sqlite ODBC drivers have been set up
  correctly:\r\n\r\n    odbcinst -q -d\r\nThis should return:\r\n\r\n    [SQLite]\r\n
  \   [SQLite3]\r\n\r\nNext, fire up the `ODBCConfig` too to set up a new DSN:\r\n\r\n
  \   ODBCConfig\r\n\r\nIf you want to run the HDBC test suite, then set your DSN
  to `hdbctest`,\r\nand set up to connect to a database of your choice, such as an
  empty file\r\nin the `hdbc-odbc/testsrc` directory:\r\n\r\n    touch hdbc-odbc/testsrc/hdbctest.db\r\n\r\nYou
  can check that everything is working appropriately in ghci:\r\n\r\n    ghci> :m
  + Database.HDBC Database.HDBC.ODBC\r\n    ghci> conn <- connectODBC \"DSN=hdbctest\"\r\n
  \   ghci> hdbcDriverName conn\r\n    \"odbc\"\r\n    ghci> hdbcClientVer conn\r\n
  \   \"03.52\"\r\n\r\nYou can then run some tests on your database:\r\n\r\n    cd
  testsrc\r\n    runhaskell runtests.hs\r\n\r\nContributing\r\n------------\r\n\r\nContributions
  are welcome! If you would like to contribute, please fork the the\r\n[github repository](https://github.com/hdbc/hdbc-odbc),
  and submit a pull\r\nrequest.\r\n"
license-name: BSD-3-Clause
