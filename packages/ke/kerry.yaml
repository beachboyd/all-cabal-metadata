homepage: https://github.com/nhibberd/kerry#readme
changelog-type: markdown
hash: c9dc417d548e5d8d2ba1cccf5f7eca60864b2ba81c877435918c4adb80a108ce
test-bench-deps:
  bytestring: ! '>=0.10 && <0.11'
  base: -any
  text: ! '>=1.2 && <1.3'
  temporary-resourcet: ! '>=0.1 && <0.2'
  process: ! '>=1.2 && <1.7'
  hedgehog: ! '>=1.0 && <2.0'
  containers: ! '>=0.5 && <0.7'
  kerry: -any
  mtl: ! '>=2.1 && <2.3'
  mmorph: ! '>=1.0 && <1.2'
  transformers: ! '>=0.5 && <0.6'
  hedgehog-corpus: ! '>=0.1 && <1.0'
  resourcet: ! '>=1.1 && <1.3'
  aeson: ! '>=1.4 && <1.5'
maintainer: Nick Hibberd <nhibberd@gmail.com>
synopsis: Manage and abstract your packer configurations.
changelog: |
  ## Version 0.1.1

  - Ord isntances ([@nhibberd][nhibberd])

  ## Version 0.1

  - Initial Packer types ([@nhibberd][nhibberd])
  - Packer serialization ([@nhibberd][nhibberd])
  - Added 'amazon-ebs' builder type ([@nhibberd][nhibberd])
  - Added 'shell' provisioner ([@nhibberd][nhibberd])
  - Added 'file' provisioner ([@nhibberd][nhibberd])

  ## Version 0.0

  - Started project ([@nhibberd][nhibberd])

  [nhibberd]:
    https://github.com/nhibberd
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  transformers-bifunctors: ! '>=0.1 && <0.2'
  base: ! '>=4.5 && <5'
  aeson-pretty: ! '>=0.8 && <1'
  text: ! '>=1.2 && <1.3'
  containers: ! '>=0.5 && <0.7'
  mmorph: ! '>=1.0 && <1.2'
  transformers: ! '>=0.5 && <0.6'
  errors: ! '>=2.0 && <2.4'
  aeson: ! '>=1.4 && <1.5'
all-versions:
- '0.1'
- 0.1.1
author: Nick Hibberd <nhibberd@gmail.com>
latest: 0.1.1
description-type: markdown
description: |
  kerry
  =====

  [Packer](https://www.packer.io/) configuration and serialization.



  ## Example

  ```haskell

  import           Kerry

  write :: FilePath -> IO ()
  write path =
    writeFile path (renderPacker example)

  example :: Packer
  example =
    Packer {
        variables = [
            UserVariable "name" "example-packer"
          ]
      , builders = [
            Builder (AmazonEBSBuilder $ aws builder) Nothing ssh
          ]
      , provisioners = []
      , postProcessors = []
      }

  ssh :: Communicator
  ssh =
    SSH $ defaultSSHCommunicator "ec2-user"

  aws :: a -> AWS a
  aws builder =
    AWS {
        awsRegion = "us-west-2"
      , awsCredentials = EnvironmentVariables
      , awsBuilder = builder
      }

  builder :: EBS
  builder =
   ebs
     "test"
     (SourceAmiId "ami-fred")
     "m4.xlarge"

  ```
license-name: BSD-3-Clause
