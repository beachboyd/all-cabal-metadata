homepage: https://github.com/jmackie/kesha
changelog-type: markdown
hash: a4417386287522138afc20f3b7c1efd38a5545874ed7feb0811d0519c270711e
test-bench-deps:
  kesha: -any
  bytestring: -any
  base: -any
  hspec: -any
  filepath: -any
  process: -any
  containers: -any
  temporary: -any
  QuickCheck: -any
  directory: -any
maintainer: contact@jmackie.dev
synopsis: Haskell implementation of nix-hash
changelog: "# Changelog\n\nAll notable changes to this project will be documented
  in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand
  this project adheres to the [Haskell Package Versioning Policy](https://pvp.haskell.org/).\n\n##
  [0.1.0.1] - 2020-11-29\n\n### Fixed\n- Reconcile `tested-with` field with `base`
  constraints. This package now\n  supports _and_ is tested with GHC `8.2.2` through
  to `8.10.1`. And this is\n  checked in CI.\n\n## [0.1.0.0] - 2020-11-29\n\nFirst
  cabal release \U0001F389\U0001F973\n"
basic-deps:
  cryptohash-sha1: '>=0.11.100 && <0.12'
  bytestring: '>=0.10.8 && <0.11'
  base: '>=4.10.1 && <4.15'
  text: '>=1.2.3 && <1.3'
  cryptohash-md5: '>=0.11.100 && <0.12'
  filepath: '>=1.4.2 && <1.5'
  containers: '>=0.6.0 && <0.7'
  binary: '>=0.8.6 && <0.9'
  cryptohash-sha256: '>=0.11.101 && <0.12'
  directory: '>=1.3.1 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Jordan Mackie
latest: 0.1.0.1
description-type: markdown
description: |
  # `kesha`

  [![CI](https://github.com/jmackie/kesha/workflows/CI/badge.svg)](https://github.com/jmackie/kesha/actions?query=workflow%3ACI)
  [![Hackage](https://img.shields.io/hackage/v/kesha)](https://hackage.haskell.org/package/kesha)

  A Haskell library for computing the cryptographic hash of any path.

  The implementation is an almost verbatim implementation of `nix-hash`, which is the
  standard tool used by the [Nix](https://nixos.org/nix/) package manager.

  ```haskell
  module Main where

  import qualified Kesha

  main :: IO ()
  main = do
    result <- Kesha.hash "some-path"
    print result
  ```
license-name: MIT
