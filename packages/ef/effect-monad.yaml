homepage: ''
changelog-type: ''
hash: beb621e0816256538892ae3e3670242491b89dcf0b4784a1ee44a2a4f6cd5188
test-bench-deps: {}
maintainer: Dominic Orchard
synopsis: Embeds effect systems and program logics into Haskell using graded monads
  and parameterised monads
changelog: ''
basic-deps:
  type-level-sets: ! '>=0.8.7.0'
  base: <5
all-versions:
- '0.6'
- 0.6.1
- 0.7.0.0
- 0.8.0.0
- 0.8.1.0
author: Dominic Orchard
latest: 0.8.1.0
description-type: haddock
description: ! 'Provides the graded monad structure to Haskell via Control.Effect

  with a number of analogs of familiar monads and some new things:

  Reader, Writer, State, Maybe, Counter, Update

  and a wrapper over normal monads (Control.Effect.Monad). This provides a way

  to embed effect systems into Haskell. For more information see the paper

  \"Embedding effect systems in Haskell\" by Orchard and Petricek

  <http://dorchard.co.uk/publ/haskell14-effects.pdf> (Haskell, 2014)

  Also provides the parameterised monad structure due to Atkey in

  Control.Effect.Parameterised along with some instances:

  AtomicState, SafeFiles, ExtensibleState

  and the examples in <https://github.com/dorchard/effect-monad/tree/master/examples>.

  (note, this package was previously called ''ixmonad'' until September 2014).'
license-name: BSD-3-Clause
