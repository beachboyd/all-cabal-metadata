homepage: ''
changelog-type: markdown
hash: fe1b0a928dc8191d2d5cc69fb38899f12f450c6be8024aabaddb4fa1225def7b
test-bench-deps:
  here: ! '>=1.2.10 && <1.3.0'
  base: -any
  text: -any
  containers: -any
  plots: ! '>=0.1.1.0 && <=0.2'
  colonnade: -any
  mtl: -any
  random-fu: -any
  hvega: -any
  blaze-html: -any
  polysemy: -any
  random-source: -any
  knit-haskell: -any
maintainer: adam_conner_sax@yahoo.com
synopsis: a minimal Rmarkdown sort-of-thing for haskell, by way of Pandoc
changelog: "* v 0.5.0.0\n* Added plots example back since there is a version of plots
  on hackage with \na relaxed upper bound on containers.\n* Changed the Doc effect
  so that instead of Text name, it carries a polymorphic info type.  \nThis is then
  specified in the Pandoc case to be a Text name and set of template var overrides.\nThis
  creates several other changes and will break any multi-doc examples since now \n\"newPandoc\"
  takes a first argument of the type ```PandocInfo``` (which is just a \nproduct of
  a ```Text``` and a ```Map String String```).\n* raised lower bound and relaxed upper
  bound on polysemy\n\nv 0.4.0.0 \n* Added  \n```absorbPandocMonad :: PandocEffects
  r => (forall m. PandocMonad m => m a) -> Sem r a``` \nto ```Knit.Effect.PandocMonad```\n*
  Removed (orphan) instances: ```PandocMonad (Sem r)``` and \n```MonadError PandocError
  (Sem r)``` in favor  of using \n```absorbPandocMonad``` when required.\n* Deprecated
  name \"Random\" in favor of \"RandomFu\" for clarity and \neventual consistency
  with Polysemy\n* Added \n```absorbMonadRandom :: Member RandomFu r => (forall m.
  MonadRandom m => m a) -> Sem r a``` \nto allow some\ninteroperation with actions
  constrained by ```MonadRandom```\n* Removed orphan ```Random.MonadRandom``` instance
  from \n```Knit.Effect.RandomFu``` because orphan instances are bad.\n* Changed return
  type of ```Knit.Report.knitError``` to ```Sem r a``` \n(from ```Sem r ()```)\n*
  Bumped lower bound on polysemy-plugin (because of a buggy version)\n* Bumped lower
  bound on polysemy\n* Removed plots example in \"SimpleExample\" and added a diagrams
  one.  \nWill add plots back once a version issue  with containers is resolved.\n\nv
  0.3.0.1\n* Examples were \"executables\" and are now \"tests\" so that depending
  on \nknit-haskell does not pull in the dependencies of the examples.\n\nv 0.3.0.0
  \n* Added exports of \"Colonnade\" and \"Text.Blaze.Colonnade\" to \n\"Knit.Report.Input.Table.Colonnade\"\n*
  Added \"knitError\" function to Knit.Report to allow user throwing of errors.  \nThese
  will become PandocSomeError and handled as a PandocError.\n* Lowered bound on containers
  (to 0.5.0) to accomodate use of Plots.\n* Added Knit.Report.Input.Visualization.Diagrams.
  \ \nAdds Diagrams from diagrams-lib via SVG backend.\n* Added some more re-exports
  (Colonnade, Diagrams.Prelude) \nfrom Knit.Report to simplify imports on use.\n*
  Added an optional figure caption argument to Hvega and Diagrams inputs. \n(this
  is a breaking change since it requires another argument).\n* Added a state effect
  wrapper to facilitate getting unused ids for figures, etc.\n* Changed id argument
  for Hvega and Diagrams \nvisualizations to \"Maybe Text\" from Text.  \nWill use
  built-in facilities for unique ids when set to Nothing.\n* Visualization \"addXXX\"
  functions now return the figure id (as \"Sem r Text\") \nso it can be referred to
  elsewhere.\n* Added KnitOne and KnitMany constraint-type-aliases to Knit.Report
  \nto simplify constraining doc producing functions.\n* Updated examples.  Added
  a diagrams example to SimpleExample \nand fixed id and caption arguments throughout.\n*
  Bumped upper bounds (network)\n\nv 0.2.0.0\n* Documentation Fixes\n* Added export
  of newPandoc and NamedDoc to Knit.Report to \nfacilitate multi-doc use.\n* Removed
  redundant imports from Knit.Report.Input.Table.Colonnade\n* Added a multi-doc example\n*
  (internal) Removed odd, and no longer necessary, \"LastMember\" \nconstraint from
  knit functions. \n* Updated effects for polysemy 1.2\n\nv 0.1.0.0  \n* Initial version\n\n"
basic-deps:
  http-client: ! '>=0.6.4 && <0.7.0'
  diagrams-lib: ! '>=1.4 && <1.5.0.0'
  polysemy-plugin: ! '>=0.2.0.0 && <0.3.0.0'
  lucid: ! '>=2.9.11 && <2.10'
  bytestring: ! '>=0.10.8 && <0.11'
  case-insensitive: ! '>=1.2.0.11 && <1.3.0.0'
  blaze-colonnade: ! '>=1.2.2 && <1.3.0.0'
  base: ! '>=4.12.0 && <4.13'
  time: ! '>=1.8.0 && <2.0.0'
  base64-bytestring: ! '>=1.0.0.2 && <1.1.0.0'
  aeson-pretty: ! '>=0.8.7 && <0.9'
  text: ! '>=1.2.3 && <1.3'
  network: ! '>=2.8.0.0 && <3.2.0.0'
  logging-effect: ! '>=1.3.3 && <1.4'
  diagrams-svg: ! '>=1.4.1 && <1.5.0.0'
  containers: ! '>=0.5.0 && <0.7'
  pandoc: ! '>=2.7.2 && <2.8'
  colonnade: ! '>=1.1 && <1.3'
  http-client-tls: ! '>=0.3.5.3 && <0.4.0.0'
  network-uri: ! '>=2.6.1.0 && <2.7.0.0'
  mtl: ! '>=2.2.2 && <2.3'
  random-fu: ! '>=0.2.7 && <0.3'
  hvega: ! '>=0.1.0 && <=0.2.0.0'
  blaze-html: ! '>=0.9.1 && <0.10'
  polysemy: ! '>=0.3.0.0 && <0.5.0.0'
  prettyprinter: ! '>=1.2.1 && <1.4'
  random: ! '>=1.1 && <1.2'
  random-source: ! '>=0.3.0 && <0.4'
  svg-builder: ! '>=0.1.1 && <0.2'
  http-types: ! '>=0.12.3 && <0.13.0'
  Glob: ! '>=0.10.0 && <0.11.0'
  directory: ! '>=1.3.3.0 && <1.4.0.0'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.5.0.0
author: Adam Conner-Sax
latest: 0.5.0.0
description-type: haddock
description: |-
  knit-haskell is a beginning attempt at bringing some of the benefits of
  Rmarkdown to Haskell.
  It includes an effects stack
  (using <https://github.com/isovector/polysemy#readme polysemy> rather than mtl)
  which includes logging, randomness
  (via <http://hackage.haskell.org/package/random-fu random-fu>),
  a simplified interface to Pandoc and various writer-like effects to
  intersperse document building with regular code.
  Various helper functions are provided to simplify common operations,
  making it especially straightforward to build
  an HTML document from bits of markdown,
  latex and <http://hackage.haskell.org/package/lucid Lucid>
  or <http://hackage.haskell.org/package/blaze-html Blaze> html.
  Support is also included for including
  <http://hackage.haskell.org/package/hvega hvega> visualizations
  and diagrams from the <https://archives.haskell.org/projects.haskell.org/diagrams/ diagrams>
  package.
  More information is available in the <https://github.com/adamConnerSax/knit-haskell/blob/master/Readme.md readme>.
license-name: BSD-3-Clause
