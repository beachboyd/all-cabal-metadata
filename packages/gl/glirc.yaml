homepage: https://github.com/glguy/irc-core
changelog-type: markdown
hash: b4910cb29fff09dc79c27d77065bc287b31c8dadbb2e8b4f430db3fdc746ee2c
test-bench-deps:
  base: -any
  HUnit: ! '>=1.3 && <1.7'
  glirc: -any
maintainer: emertens@gmail.com
synopsis: Console IRC client
changelog: ! "# Revision history for glirc2\n\n## 2.28\n* Add formatting reference
  to `/palette`\n* Make RTLD flags configurable when loading an extension\n* Update
  client's internal hostname on `RPL_HOSTHIDDEN`\n* Support IRCv3.2 `server-time`
  extension over ZNC-specific one\n* Lots of work on the Lua extension code and documentation\n*
  Added `glirc_user_account` and `glirc_user_channel_modes`\n  extension API entrypoints.\n*
  Added support for `account-notify` and `extended-join`\n* Added configurable \"arguments\"
  to the C extensions\n\n## 2.27\n* Requires GHC 8.4\n* Show channel topic in channel
  on join\n* Fix socket leak when failing to load TLS certificates\n* Add delay when
  indicating sent ping to reduce noise\n* Add support for italics in formatting\n\n##
  2.26\n* Updates for GHC 8.4.1\n* Added `/toggle-show-ping` and `show-ping` configuration
  setting\n  to toggle visibility of the ping round-trip times.\n\n## 2.25\n* `/ignore`
  can list ignores and supports full wildcard masks\n* Updated C extension API\n*
  Improved OTR extension to avoid interacting with ZNC replays\n* Added `protocol-family`
  configuration option. Set to `inet` or\n  `inet6` to force a particular IP protocol.\n\n##
  2.24\n\n* `/query` now takes a message parameter and tab-completes\n  like `/msg`.\n\n##
  2.23\n\n* CONFIGURATION FILE CHANGE: Relative paths are now resolved\n  from the
  directory of the configuration file. The \"~\" alias\n  for the home directory works
  for resolving paths relative\n  to $HOME. Absolute paths are unmodified.\n\n* Support
  `network:#channel` in `/query`\n\n* Add an optional OTR extension. See the `otr-extension/`
  directory\n  and the wiki for more information.\n\n* Extended the C API with `glirc_inject_chat`
  and `chat_entrypoint`\n\n* Smarter WYSIWYG highlighting in text edit box. Nicknames
  are\n  highlighted and `/mode` command parameters get correct placeholders.\n\n*
  Added more information to `/palette`\n\n* Added \"human readable\" labels to `/rtsstats`\n\n##
  2.22\n\n* Added dynamic indentation of wrapped lines. Lines now\n  wrap to where
  the message portion of the line started.\n  This removes `indent-wrapped-lines`
  configuration setting\n* Added pervasive word-boundary oriented line wrapping\n
  \ (beyond what was previously restricted to chat messages)\n* Made nick prefix padding
  configurable to be on left or right.\n  See `nick-padding` setting in `glirc2 --config-format`.\n
  \ In addition this setting is now reconfigurable at runtime\n  via `/reload`\n*
  Added `/oper` command for network operator authentication.\n* Memory savings by
  packing message timestamp information, and\n  using the \"detailed\" image for regular
  expression matching.\n* Added `/rtsstats` command for inspecting the GHC RTS statistics\n*
  Added many minor IRC query commands: `admin`, `info`, `map`, `rules`\n  `motd`,
  `version`, `lusers`, `kill`, `knock`, `list`.\n\n## 2.21.1\n\n* Support for latest
  `config-schema`\n* Adapt extension API to help support stub Rust extension\n\n##
  2.21\n\n* Make metadata toggle `F4` a window-level setting instead of client level\n*
  Add configuration option to hide metadata by default `hide-metadata`\n* Make keymap
  configurable under `key-bindings`, add `/keymap` command\n* Add transient error
  message view, press `ESC` to clear\n* Implement two-column split window mode: `/toggle-layout`
  and `F5`\n* Implement word-boundary based line wrapping\n\n## 2.20.6\n\n* Switch
  to new `config-schema` package for configuration file loading.\n* Add `--config-format`
  flag to executable to show configuration file format.\n\n## 2.20.5\n\n* Add line
  indicating message since previous time window was focused.\n  The palette for this
  is configurable as `line-marker`\n\n## 2.20.4\n\n* Add `/query` alias for `/channel`\n*
  Add `/names` alias for `/users`\n* Update to build on GHC 8.2.1-rc1 with Cabal-2.0.0.0\n\n##
  2.20.3\n\n* Nicer `/help` system, commands are grouped\n* Added `/splits+` and `/splits-`
  for incremental updates to splits\n* Jump-to-activity returns to original window
  after activity is visited\n* Extended activity view makes use of empty space above
  text input\n* Parse the timestamp and duration from `/whois` response\n\n## 2.20.2.1\n\n*
  Support `vty-5.15`\n\n## 2.20.2\n\n* Remove `memory` dependency\n* Add `indent-wrapped-lines`
  setting\n\n## 2.20.1.1\n* Remove macro dependency on happy and alex being installed
  for version information\n\n## 2.20.1\n* Support `vty-5.11.1`\n\n## 2.20\n\n* Move
  from `tls` to `HsOpenSSL` support via the new `hookup` package\n\n## 2.19\n\n* Smarter
  text box tracks \"scroll\" position independently from cursor\n* Added `--full-version`
  flag\n* Remove `regex-tdfa-text` dependency\n* Added `bell-on-mention` client setting\n*
  Added `ExportCApi` cabal flag to help with loading the client in GHCi\n\n## 2.18\n\n*
  Add digraph support under `M-k` and `/digraphs`\n* Add ECDSA-NIST256P-CHALLENGE
  support for Freenode via Tor\n* Load mask list on `/masks`\n* Add `C-x` to change
  to next network window\n* Allow `/clear NETWORK *` to clear all windows for the
  given network\n\n## 2.17\n\n* Add `reconnect-attempts` setting\n* Add persistence
  for `/grep` and `/grepi`\n* Add filter argument to `/windows`\n* Better tab completion
  for `/channel` and `/focus`\n* Isolate and number URLs in view with `/url`\n* Map
  `M-Left` and `M-Right` to backward word and forward word\n\n## 2.16\n\n* Add `/splits`
  to show multiple chat windows simultaneously\n\n## 2.15\n\n* Add `/mentions`\n*
  Add macro argument declarations\n* Add indication when a command is still a prefix
  or not of a valid command\n* Support quoted strings arguments to /exec\n* Add `F4`
  to toggle visibility of metadata lines\n* `tls-insecure` setting was incorrectly
  behaving like normal insecure\n* Add `C-t` to swap characters\n* Add `ESC` to return
  to messages window\n\n## 2.14\n\n* Add `/help`\n* Add `/palette`\n* Add `F3` to
  toggle activity detail bar\n\n## 2.13\n\n* Add disconnect expansion, support expansions
  in `connect-cmds`\n* Add default expansion syntax `${var|default}`\n* Add support
  for multiple nicknames to try on connect\n* Add `ignores` section to configuration\n*
  Add `url-opener` section to configuration and `/url` command\n\n## 2.12\n\n* Remove
  `tls-insecure` configuration option in favor of `tls: yes-insecure`\n* Implement
  fancy command placeholder rendering and argument parsing\n* Improved reconnect logic\n*
  Improved connection error messages\n\n## 2.11\n\n* Add `M-S` to jump to previously
  focused window\n* Add `extra-highlights` section\n* Tab complete server names in
  `/connect`\n* Add `/windows` command for listing active windows\n* Add `glirc_clear_window`
  C API procedure\n* Allow `process_message` callback to drop messages\n* Add optional
  network and channel arguments to `/clear` (intended to assist macros)\n* Automatically
  reconnect on ping timeout\n* Many commands will report message to client window
  on error\n\n## 2.10\n\n* Fixes for multi-line editing\n* Multiple, sequential kills
  all fill the same yank buffer\n\n## 2.9\n\n* Dynamically loadable extensions\n*
  Implement Lua scripting extension\n* Enable support for batch messages\n* Grow metadata
  lines to the right\n\n## 2.8\n\n* Support `vty-5.8`\n* Implement initial support
  for macros\n* Support `znc.in/self-message`\n\n## 2.7\n\n* Switch to `regex-tdfa`
  (easier to install on MacOS than `text-icu`)\n* Tab-complete starts with most recent
  nick\n* Add `/reload`\n* Add custom palette entry for self highlights\n* Add ability
  to set background colors and styles in palette\n\n## 2.6\n\n* `connect-cmds` now
  use actual client commands instead of raw IRC messages. For example `msg user my
  message` or `join #mychannel`\n* Multiple lines can be held in the textbox at once.
  Pasting multiple lines insert those lines into the textbox rather than sending them
  immediately.\n* Added `M-d` and `M-Enter` key bindings\n* Added `name` field to
  server configuration\n* Extract `irc-core` library again\n* Configurable self color\n\n##
  2.5\n\n* Add facilities for hooks that can alter the IRC message stream.\n* Implement
  a hook that handles the ZNC `buffextras` plugin.\n* Implement configurable nick
  color highlight palette.\n* Resolve relative paths starting at the home directory.\n*
  Significantly configurable UI colors\n\n## 2.4\n\n* Support XDG configuration directory,
  e.g. `~/.config/glirc/config`\n* Add more window names. Shift selects second set
  of names.\n* Add `/channel` and `/say`\n* Improve `/focus` tab completion\n\n##
  2.3\n\n* Add commands `/znc`\n* Add initial support for ZNC's playback module and
  `/znc-playback` command\n* Don't consider message seen when in `masklist`, `userlist`,
  or `channelinfo` windows\n* Add terminal bell on command error\n\n## 2.2\n\n* Add
  commands `/ison`, `/userhost`, `/away`, `/notice`, `/ctcp`, `/links`, `/time`, `/stats`\n*
  Added context-sensitive completion to `/mode`\n* Render CTCP messages\n* Memory
  performance improvements\n* Improved logic on nick changes\n* Support for fractional
  flood settings\n* Fixed VTY formatting bug\n* Add counts to the mask and user lists\n\n##
  2.1\n\n* Add red highlighting for own nick\n* Synchronize reply codes with Freenode\n*
  Add textual interpretation of reply codes\n* Add SASL support\n* Add `/channelinfo`
  command\n\n## 2.0\n\n* First version of glirc rewrite\n"
basic-deps:
  semigroupoids: ! '>=5.1 && <5.4'
  free: ! '>=4.12 && <5.2'
  bytestring: ! '>=0.10.8 && <0.11'
  unix: ! '>=2.7 && <2.8'
  split: ! '>=0.2 && <0.3'
  stm: ! '>=2.4 && <2.5'
  base: ==4.11.*
  time: ! '>=1.6 && <1.10'
  base64-bytestring: ! '>=1.0.0.1 && <1.1'
  unordered-containers: ! '>=0.2.7 && <0.3'
  text: ! '>=1.2.2 && <1.3'
  vty: ! '>=5.23.1 && <5.24'
  kan-extensions: ! '>=5.0 && <5.3'
  filepath: ! '>=1.4.1 && <1.5'
  gitrev: ! '>=1.2 && <1.4'
  process: ! '>=1.4.2 && <1.7'
  network: ! '>=2.6.2 && <2.8'
  async: ! '>=2.1 && <2.3'
  containers: ! '>=0.5.7 && <0.7'
  lens: ! '>=4.14 && <4.18'
  config-value: ! '>=0.6 && <0.7'
  regex-tdfa: ! '>=1.2 && <1.3'
  hashable: ! '>=1.2.4 && <1.3'
  attoparsec: ! '>=0.13 && <0.14'
  transformers: ! '>=0.5.2 && <0.6'
  glirc: -any
  HsOpenSSL: ! '>=0.11 && <0.12'
  irc-core: ! '>=2.5 && <2.6'
  config-schema: ! '>=0.4 && <0.6'
  hookup: ! '>=0.2.2 && <0.3'
  template-haskell: ! '>=2.11 && <2.14'
  vector: ! '>=0.11 && <0.13'
  directory: ! '>=1.2.6 && <1.4'
all-versions:
- '2.0'
- '2.1'
- '2.2'
- '2.3'
- '2.4'
- '2.5'
- '2.6'
- '2.7'
- '2.8'
- '2.9'
- '2.10'
- '2.11'
- '2.12'
- '2.13'
- '2.14'
- '2.15'
- '2.16'
- '2.17'
- '2.18'
- '2.19'
- '2.20'
- '2.20.1'
- '2.20.1.1'
- '2.20.2'
- '2.20.2.1'
- '2.20.3'
- '2.20.4'
- '2.20.5'
- '2.20.6'
- '2.21'
- '2.21.1'
- '2.22'
- '2.23'
- '2.24'
- '2.25'
- '2.26'
- '2.27'
- '2.28'
author: Eric Mertens
latest: '2.28'
description-type: markdown
description: ! "GLIRC - Advanced Console IRC Client\n=============\n\n* **glirc**
  [![Hackage](https://img.shields.io/hackage/v/glirc.svg)](https://hackage.haskell.org/package/glirc)
  [![Build Status](https://secure.travis-ci.org/glguy/irc-core.svg)](http://travis-ci.org/glguy/irc-core)\n*
  **irc-core** [![Hackage](https://img.shields.io/hackage/v/irc-core.svg)](https://hackage.haskell.org/package/irc-core)\n*
  **hookup** [![Hackage](https://img.shields.io/hackage/v/hookup.svg)](https://hackage.haskell.org/package/hookup)\n\n[Wiki
  Documentation](https://github.com/glguy/irc-core/wiki)\n\n![](https://raw.githubusercontent.com/wiki/glguy/irc-core/images/screenshot.png)\n\nBuilding\n========\n\nglirc
  uses recent versions of packages, make sure you package databases are\nup-to-date:\n\n```\n$
  cabal update\n```\n\nTo install the latest version from Hackage using cabal-install:\n\n```\n$
  cabal install glirc\n```\n\nBuilding with cabal-install from source checkout\n\n```\n$
  cabal install --dep\n$ cabal build\n```\n\nClient Features\n===============\n\n*
  All views and transformation are dynamic and don't change the underlying model.\n*
  Subsequent joins and parts fold into one line and do not scroll chat messages off
  the screen\n* Ignore support that folds ignored messages into the joins and parts.
  Toggle it off to see previously hidden messages\n* Detailed view to see all the
  messages in a channel in full detail with hostmask and timestamp (F2)\n* Context
  sensitive tab completion\n* Searchable ban, quiet, invex, and exception view separate
  from chat messages\n* Searchable user list, detailed view shows full hostmasks\n*
  WYSIWYG mIRC formatting input\n* Multi-line editing\n* Dynamic, in-place message
  searching\n* Chanserv integration\n* Nicknames in chat messages are colored to match
  messages from that nickname\n* Support for /STATUSMSG/ messages (messages only voice
  or op users can see)\n* Run commands upon connection\n* Command macros\n* CERTFP
  and SASL authentication\n* Split-screen view\n* Configurable color palette\n\nStartup\n=======\n\n```\nglirc
  [FLAGS] INITIAL_NETWORKS...\n  -c PATH  --config=PATH  Configuration file path\n
  \ -!       --noconnect    Disable autoconnecting\n  -h       --help         Show
  help\n  -v       --version      Show version\n```\n\nEnvironment variables\n```\nUSER=<default
  nickname and username>\nIRCPASSWORD=<your irc password>\n```\n\nConfiguration file\n=================\n\nA
  configuration file can currently be used to provide some default values instead
  of\nusing command line arguments. If any value is missing the default will be used.\n\nThe
  default configuration file path is `~/.config/glirc/config`\n\nRelative paths are
  relative to the home directory.\n\nLearn more about this file format at [config-value](http://hackage.haskell.org/package/config-value)\n\n```\n--
  vim: filetype=config-value\n-- Grab the Vim syntax highlighting file from the config-value
  package\n\n-- Learn more about these settings with `glirc2 --config-format`\n\n--
  Defaults used when not specified on command line\ndefaults:\n  nick:            \"yournick\"\n
  \ username:        \"yourusername\"\n  realname:        \"Your real name\"\n  password:
  \       \"IRC server password\"\n  tls:             yes -- or: yes-insecure or no\n
  \                      -- enabling tls automatically uses port 6697\n  tls-client-cert:
  \"/path/to/cert.pem\"\n  tls-client-key:  \"/path/to/cert.key\"\n\n-- Override the
  defaults when connecting to specific servers\nservers:\n  * name: \"fn\"\n    hostname:
  \     \"chat.freenode.net\"\n    sasl-username: \"someuser\"\n    sasl-password:
  \"somepass\"\n    socks-host:    \"socks5.example.com\"\n    socks-port:    8080
  -- defaults to 1080\n    log-dir:       \"/home/myuser/ircLogs\"\n\n  * name: \"example\"\n
  \   hostname:      \"example.com\"\n    port:          7000 -- override the default
  port\n    connect-cmds:\n      * \"join #favoritechannel,#otherchannel\"\n      *
  \"msg mybot another command\"\n\n    -- Specify additional certificates beyond the
  system CAs\n    -- relative to home directory\n    tls-server-cert: \"extra/certificate.pem\"\n\nmacros:\n
  \ * name: \"wipe\"\n    commands:\n      * \"clear\"\n      * \"znc *status clearbuffer
  $channel\"\n\n  * name: \"mysplits\"\n    commands:\n      * \"splits fn:#haskell
  fn:#haskell-offtopic\"\n\n  -- Example use of macro in combination with an extension\n
  \ * name: \"extra\"\n    commands:\n      * \"extension Lua some-parameter $network
  $channel\"\n\nextra-highlights: [\"glirc\", \"lens\"]\n\nnick-padding:\n   side:
  left -- try right if you don't like left padding\n   width: 13\n\nurl-opener: \"open\"
  -- This works on macOS, \"gnome-open\" for GNOME\n\nkey-bindings:\n  * bind: \"C-M-b\"\n
  \   command: \"masks b\"\n\npalette:\n  line-marker: yellow\n  time:\n    fg: [10,10,10]
  -- RGB values for color for timestamps\n    bg: blue\n  nick-colors:\n    [ cyan,
  magenta, green, yellow, blue\n    , bright-cyan, bright-magenta, bright-green, bright-blue\n
  \   , 218,  88,  89, 124, 160, 205, 212, 224 -- reds\n    ,  94, 130, 166, 172,
  208, 214, 216, 180 -- oranges\n    ,  58, 226, 229, 184, 187, 100, 142, 220 -- yellows\n
  \   ,  22,  34,  40,  82,  70,  64,  48,  85 -- greens\n    ,  25,  27,  33,  39,
  \ 51,  80,  81,  75 -- blues\n    ,  69,  61,  56,  54, 129,  93,  99, 147 -- purples\n
  \   ]\n```\n\nConfiguration sections:\n--------\n\n| setting                | type
  \               | description                                                                                |\n|------------------------|---------------------|--------------------------------------------------------------------------------------------|\n|
  `defaults`             | server              | These settings are used for all connections
  \                                               |\n| `servers`              | list
  of servers     | These settings are used to override defaults when the hostname
  matches                     |\n| `palette`              | palette             |
  Client color overrides                                                                     |\n|
  `window-names`         | text                | Names of windows (typically overridden
  on non QWERTY layouts)                              |\n| `nick-padding`         |
  nonnegative integer | Nicks are padded until they have the specified length                                      |\n|
  `indent-wrapped-lines` | nonnegative integer | How far to indent lines when they
  are wrapped                                              |\n| `extra-highlights`
  \    | list of text        | Extra words/nicks to highlight                                                             |\n|
  `extensions`           | list of text        | Filenames of extension to load                                                             |\n|
  `url-opener`           | text                | Command to execute with URL parameter
  for `/url` e.g. gnome-open on GNOME or open on macOS |\n| `ignores`              |
  list of text        | Initial list of nicknames to ignore                                                        |\n|
  `activity-bar`         | yes or no           | Initial setting for visibility of
  activity bar (default no)                                |\n| `bell-on-mention`
  \     | yes or no           | Sound terminal bell on transition from not mentioned
  to mentioned (default no)             |\n| `macros`               | list of macros
  \     | User-configurable client commands                                                          |\n\nServer
  Settings\n---------------\n\n| setting               | type                 | description
  \                                                   |\n|-----------------------|----------------------|----------------------------------------------------------------|\n|
  `name`                | text                 | name of server entry, defaults to
  `hostname`                   |\n| `hostname`            | text                 |
  hostname used to connect and to specify the server             |\n| `port`                |
  number               | port number, defaults to 6667 without TLS and 6697 with TLS
  \   |\n| `nick`                | text or list of text | nicknames to try in order
  \                                     |\n| `username`            | text                 |
  server username                                                |\n| `realname`            |
  text                 | real name / GECOS                                              |\n|
  `password`            | text                 | server password                                                |\n|
  `sasl-username`       | text                 | SASL username                                                  |\n|
  `sasl-password`       | text                 | SASL password (PLAIN mode)                                     |\n|
  `sasl-ecdsa-key`      | text                 | Path ecdsa private key file (ECDSA-NIST256P-CHALLENGE
  mode)    |\n| `tls`                 | yes/yes-insecure/no  | use TLS to connect
  (insecure mode disables certificate checks) |\n| `tls-client-cert`     | text                 |
  path to TLS client certificate                                 |\n| `tls-client-key`
  \     | text                 | path to TLS client key                                         |\n|
  `tls-server-cert`     | text                 | CA certificate to use when validating
  certificates             |\n| `tls-ciphers`         | text                 | OpenSSL
  cipher suite description string                        |\n| `connect-cmds`        |
  list of text         | client commands to send upon connection                        |\n|
  `socks-host`          | text                 | hostname of SOCKS proxy to connect
  through                     |\n| `socks-port`          | number               |
  port number of SOCKS proxy to connect through                  |\n| `chanserv-channels`
  \  | list of text         | list of channels with chanserv op permission                   |\n|
  `flood-penalty`       | number               | cost in seconds per message                                    |\n|
  `flood-threshold`     | number               | threshold in seconds for burst                                 |\n|
  `message-hooks`       | list of text         | names of hooks to enable                                       |\n|
  `reconnect-attempts`  | int                  | number of reconnections to attempt
  on error                    |\n| `autoconnect`         | yes or no            |
  automatically connect at client startup                        |\n| `nick-completion`
  \    | default or slack     | set this to slack to use `@` sigils when completing
  nicks      |\n\nPalette\n-------\n\n| entry                 | type         | description
  \                             |\n|-----------------------|--------------|------------------------------------------|\n|
  `nick-colors`         | list of attr | Use for nick highlights                  |\n|
  `self`                | attr         | our own nickname(s) outside of mentions  |\n|
  `self-highlight`      | attr         | our own nickname(s) in mentions          |\n|
  `time`                | attr         | timestamp on messages                    |\n|
  `meta`                | attr         | metadata (joins/parts/etc.)              |\n|
  `sigil`               | attr         | sigils (+@)                              |\n|
  `label`               | attr         | information labels                       |\n|
  `latency`             | attr         | latency time                             |\n|
  `error`               | attr         | error messages                           |\n|
  `textbox`             | attr         | textbox edges (^$)                       |\n|
  `window-name`         | attr         | current window name                      |\n|
  `activity`            | attr         | activity notification                    |\n|
  `mention`             | attr         | mention notification                     |\n|
  `command`             | attr         | recognized command                       |\n|
  `command-prefix`      | attr         | prefix of known command                  |\n|
  `command-ready`       | attr         | recognized command with arguments filled
  |\n| `command-placeholder` | attr         | command argument placeholder             |\n|
  `window-divider`      | attr         | the dividing line between split windows  |\n|
  `line-marker`         | attr         | the dividing line for new messages       |\n\nText
  Attributes\n---------------\n\nText attributes can be specified either as a single
  foreground color or section of attributes.\n\n* `<number>` - Maps to a terminal
  color\n* `<name>` - Direct selection of standard 16 terminal colors\n* `[red-number,
  blue-number, green-number]` - List of 3 numbers in range 0-255 map to an approximation
  of the RGB color.\n\nAttributes\n\n* `fg` - foreground color\n* `bg` - background
  color\n* `style` - single style or list of styles\n\nStyles\n\n* `blink`\n* `bold`\n*
  `dim`\n* `standout`\n* `reverse-video`\n* `underline`\n\nCommands\n========\n\nClient
  commands\n\n* `/help [command]` - Show in-client help\n* `/exit` - Terminate the
  client\n* `/quit` - Gracefully terminate connection to the current server\n* `/connect
  <name>` - Connect to the given server\n* `/disconnect` - Forcefully terminate connection
  to the current server\n* `/reconnect` - Reconnect to the current server\n* `/reload
  [path]` - Load a new configuration file (optional path)\n* `/palette` - Show the
  client palette\n* `/digraphs` - Show the table of digraphs\n* `/mentions` - Show
  all the highlighted lines across all windows\n* `/extension <extension name> <params...>`
  - Send the given params to the named extension\n* `/exec [-n network] [-c channel]
  <command> <arguments...>` - Execute a command, If no network or channel are provided
  send output to client window, if network and channel are provided send output as
  messages, if network is provided send output as raw IRC messages.\n* `/url [n]`
  - Execute url-opener on the nth URL in the current window (defaults to first)\n\nView
  toggles\n* `/toggle-detail` - toggle full detail view of messages\n* `/toggle-activity-bar`
  - toggle channel names in activity bar\n* `/toggle-metadata` - toggle visibility
  of channel metadata\n* `/toggle-layout` - toggle split-screen layout between 1 and
  2 column view\n\nConnection commands\n\n* `/nick <nick>` - Change nickname\n* `/away
  <message>` - Set away status\n\nWindow management\n\n* `/windows [filter]` - List
  all open windows (filters: networks, channels, users)\n* `/focus <server>` - Change
  focus to server window\n* `/focus <server> <channel>` - Change focus to channel
  window\n* `/clear [network] [channel]` - Clear contents of current or specified
  window\n* `/ignore` - Show all ignore masks\n* `/ignore <mask>...` - Toggle ignore
  status on a list of masks\n* `/channel <channel>` - Change focus to channel on current
  network (alias: `/c`)\n* `/splits [focuses...]` - Enable split-screen view. Focuses
  should be space delimited list of NETWORK:CHANNEL\n* `/splits+ [focuses...]` - Incremental
  addition to splits\n* `/splits- [focuses...]` - Incremental removal from splits\n\nChannel
  membership\n\n* `/join <channel>` - Join a channel (alias: `/j`)\n* `/part` - Part
  from current channel\n\nChat commands\n\n* `/query <target> [<msg>]` - Switch focus
  to target window on current server, optionally send message\n* `/msg <target> <msg>`
  - Send a message on the current server to target\n* `/notice <target> <msg>` - Send
  a notice message on the current server to target\n* `/ctcp <target> <command> <args>`
  - Send a ctcp command on the current server to target\n* `/me <msg>` - Send action
  message to channel\n* `/say <msg>` - Send normal message to channel\n\nChannel management\n\n*
  `/mode <mode> <params>` - Change modes on the current channel (advanced tab completion)\n*
  `/kick <nick>` - Kick a user\n* `/kickban <nick>` - Kick and ban a user\n* `/remove`
  - Gracefully kick a user\n* `/topic <topic>` - Change the topic (tab completion
  for topic)\n* `/invite <nick>` - Invite a user to the current channel\n\nQueries\n\n*
  `/who <query>` - Perform WHO query (use detailed view to see output)\n* `/whois
  <nick>` - Perform WHOIS query\n* `/whowas <nick>` - Perform WHOWAS query\n* `/ison
  <nick>` - Perform ISON query\n* `/userhost <nick>` - Perform USERHOST query\n* `/links
  <server>` - Perform LINKS query\n* `/time` - Perform TIME query\n* `/stats <query>`
  - Perform STATS query\n\nChannel information\n\n* `/users` - Show channel user list\n*
  `/masks <mode>` - Show channel bans(b), quiets(q), exempts(e), or invex(I)\n* `/channelinfo`
  - Show channel topic, creation, url\n\nWindow filters\n\n* `/grep` - Filter chat
  messages using a regular expression\n* `/grepi` - Filter chat messages using a case-insensitive
  regular expression on the message\n\nZNC-specific\n\n* `/znc <module> <parameters>`
  - send command to ZNC module without echoing to all clients\n* `/znc-playback` -
  ZNC playback module - play everything\n* `/znc-playback <time>` - ZNC playback module
  - play everything start at the given time today\n* `/znc-playback <date> <time>`
  - ZNC playback module - play everything start at the given time\n\nLow-level\n\n*
  `/quote <raw command>` - Send a raw IRC command to the server\n\nKeyboard Shortcuts\n==================\n\nNote
  that these keybindings are using *Emacs* syntax. `C-a` means \"hold\ncontrol and
  press A\". `M-a` means \"hold meta key and press A\". On most\nmodern keyboards
  the *Meta* key is labeled *Alt* or *Option*.\n\nWindow navigation\n\n* `C-n` next
  window\n* `C-p` previous window\n* `C-x` next network\n* `M-#` jump to window -
  `1234567890qwertyuiop!@#$%^&*()QWERTYUIOP`\n* `M-a` jump to activity\n* `M-s` jump
  to previous window\n* `ESC` return to messages view (from userlist, masklist, help,
  etc)\n\nEditing\n\n* `C-a` beginning of line\n* `C-e` end of line\n* `C-k` delete
  to end\n* `C-u` delete to beginning\n* `C-d` delete at cursor\n* `C-w` delete word
  backwards\n* `C-y` paste from yank buffer\n* `C-t` swap characters at cursor\n*
  `M-f` forward word\n* `M-b` backward word\n* `M-Right` forward word\n* `M-Left`
  backward word\n* `M-Backspace` delete word backwards\n* `M-d` delete word forwards\n*
  `M-Enter` insert newline\n* `M-k` insert digraph (2-characters before cursor)\n\n*
  `Tab` nickname completion\n\nClient settings\n\n* `F2` toggle detailed view\n* `F3`
  toggle detailed activity bar\n* `F4` toggle metadata visibility\n\nScrolling\n\n*
  `Page Up` scroll up\n* `Page Down` scroll down\n\nFormatting\n\n* `C-b` bold\n*
  `C-c` color\n* `C-v` reverse video\n* `C-_` underline\n* `C-]` italic\n* `C-o` reset
  formatting\n\nMacros\n======\n\nThe `macros` configuration section allows you to
  define\nsequences of commands. These commands can contain expansions.\n\nConfiguration\n-------------\n\n*
  `name` - text - name of macro\n* `arguments` - text - space separated list of argument
  names (suffix name with `?` when optional)\n* `commands` - list of text - commands
  to send after expansion\n\nMacro Expansions\n----------------\n\nVariable names
  and integer indexes can be used when defining commands.\nVariables are specified
  with a leading `$`. For disambiguation a variable\nname can be surrounded by `{}`.
  `$channel` and `${channel}` are\nequivalent. Default values can be provided following
  a pipe: `${var|default}`.\n\n* `channel` - current channel\n* `network` - current
  network name\n* `nick` - current nickname\n\nThe arguments to a command will be
  mapped to integer indexes. The command\nitself is at index zero.\n\n* `0` - command\n*
  `1` - first argument\n* `2` - second argument (etc.)\n\nHooks\n=====\n\nbuffextras\n----------\n\nEnable
  this hook when using ZNC and the `buffextra` module in order to reinterpret\nthis
  module's messages natively in the client.\n"
license-name: ISC
