homepage: ''
changelog-type: text
hash: ad3d0f9fb49c5955e72f322e95b01166a9efbedd448f726752e06d32163a5056
test-bench-deps: {}
maintainer: L. Thomas van Binsbergen <ltvanbinsbergen@acm.org>
synopsis: GLL parser with simple combinator interface
changelog: ! "0.3.0.7 -> 0.3.0.8\n  + export maximumPivots and maximumPivotAtNt\n0.3.0.8
  -> 0.3.0.9\n  + include bit of the input string when showing an error message (without
  whitespace)\n  + exporting <multiple/some/many>SepBy2\n  + exporting within, parens,
  braces, brackets, angles, quotes and dquotes\n  + added character literals to Token
  type\n  + exporting <:=\n  + <<<**> and <**>>> for shortest and longest match, respectively\n
  \   defined some/many and variants using <**>>> and <<<**>\n    disambiguation remains
  very experimental \n0.3.0.9 -> 0.3.0.10\n  + exporting chooses\n0.3.0.10 -> 0.3.0.11\n
  \ + parse option for disabling select test (lookahead)\n\n0.3.0.11 -> 0.4.0.1\n
  \ + replaced parser by reduced descriptor GLL (RGLL)\n  + renamed GLL.Types.Grammar
  to GLL.Types.Derivations\n  + renamed GLL.Types.Abstract to GLL.Types.Grammar\n
  \ + exporting GLL.Types.Grammar, GLL.Types.Derivations, GLL.Combinators.Options,
  GLL.Combinators.Memoisation, GLL.Flags\n\n0.4.0.1 -> 0.4.0.2\n  + generalised `within`\n
  \ + different whitespace and comment handling in predefined lexer\n  + predefined
  lexer handles (nested) comment-blocks\n\n0.4.0.2 -> 0.4.0.3\n  M added hex, octal
  and binary representation to integer literals\n  + added float literals\n  + exporting
  `preferably` and `reluctantly`\n  M renamed `rassoc` to shortest_match\n  M renamed
  `lassoc` to longest_match\n  - removed `assoc`\n  + version of `chooses` that is
  left-biased (w.r.t. alternatives)\n  + generalised arguments of longest_match and
  shortest_match to IsAltExpr \n  + exporting `optionalWithDef`\n\n0.4.0.3 -> 0.4.0.4\n
  \ + `chooses` cannot be given an empty list (runtime error)\n  + updated `base`
  dependency\n\n0.4.0.4 -> 0.4.0.5\n  + relaxed cabal version constraint\n"
basic-deps:
  base: ! '>=4.3.1.0 && <=5'
  text: -any
  TypeCompose: -any
  array: -any
  containers: ! '>=0.4'
  regex-applicative: ! '>=0.3'
  pretty: -any
all-versions:
- '0.3.0.9'
- '0.4.0.2'
- '0.4.0.3'
- '0.4.0.4'
- '0.4.0.5'
author: L. Thomas van Binsbergen
latest: '0.4.0.5'
description-type: haddock
description: ! 'The package gll provides generalised top-down parsing according to
  the

  (R)GLL parsing algorithm [Scott and Johnstone 2016].


  The user can either invoke the GLL

  parser directly by importing "GLL.Parser" and providing a

  value of the Grammar datatype in (exported by "GLL.Parser").

  Alternatively, the user can import "GLL.Combinators" to write combinator expressions

  from which a grammar of the required form is extracted.

  The combinators enable applying arbitrary semantic actions to parse results.

  The documentation of the respective packages provides more information.


  The main motivation for this package

  is the development of Domain Specific Languages (DSLs).

  More specifically: designing DSLs with minimal differences between

  between abstract and concrete syntax (abstract syntax is often ambiguous).


  Please email any questions, comments and suggestions to the

  maintainer.'
license-name: BSD3
