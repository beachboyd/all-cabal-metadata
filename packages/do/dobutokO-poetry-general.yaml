homepage: https://hackage.haskell.org/package/dobutokO-poetry-general
changelog-type: markdown
hash: 7752267794192cb0528100889e72f8bc77f5a4331a44036a04db703199ff16d5
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: Helps to order the 7 or less words (first of all the Ukrainian ones) to
  obtain somewhat suitable for poetry or music text
changelog: |+
  # Revision history for dobutokO-poetry-general

  ## 0.1.0.0 -- 2020-08-16

  * First version. Released on an unsuspecting world.

basic-deps:
  mmsyn3: '>=0.1.5 && <1'
  base: '>=4.7 && <4.15'
  mmsyn7s: '>=0.8 && <1'
  mmsyn6ukr: '>=0.8 && <1'
  vector: '>=0.11 && <0.14'
all-versions:
- 0.1.0.0
author: OleksandrZhabenko
latest: 0.1.0.0
description-type: markdown
description: "Is a part of previous version of the \n[https://hackage.haskell.org/package/dobutokO-poetry-0.11.0.0](dobutokO-poetry)
  package \nversion 0.11.0.0. Now is provided as a general package because of the
  \npossibility using the uniqueness-periods and uniqueness-periods-general \npackages
  provide the same functionality for both cases of Ukrainian and \nsimilar languages.\n\nThere
  are different languages. They have different structure and rules. \nBut there is
  a possibility to create and use (on the one of \nthe existing vastly used and well
  spread languages basis, in this work, \nthe Ukrainian one) the \"phonetic\" language
  more suitable \nfor poetry and music. Even there can be different variants of the
  phonetic \nlanguage. This work proposes to create at least two \nnew \"phonetic\"
  languages on the Ukrainian basis.\n\nImagine, you can understand the information
  in the text no matter of \nthe words order and only with the most needed grammar
  \npreserved (for example, the rule not to separate the preposition and \nthe next
  word is preserved). Understand just like you can \nread the text (after some instruction
  and training might be) \nwith the words where only the first and the last letters
  \nare preserved on their places and the rest are interchangeably mixed. \nSo imagine,
  you can understand (and express your thoughts, \nfeeling, motives and so on) the
  message of the text with no strict \nword order preserved.\n\nIn such a case, you
  can rearrange words (preserving the most important \nrules in this case to reduce
  or even completely \neliminate ambiguity) so that they can obtain more interesting
  phonetic \nsounding. You can try to create poetic (at least somewhat \nrhythmic
  and expressive) text or music. This can be an inspiring and \ndeveloping exercise
  itself. But how can you quickly find out \nwhich combinations are more or less suitable?
  Besides, can the complexity \nof the algorithms be reduced?\n\nThese are some of
  the interesting questions. The work does not at \nthe moment answers them, but is
  experimental, still may be valuable.\n\nUkrainian is the language with no strict
  words order needed (though \nthere do exist some preferences in it) and have rather
  \npleasant sounding. So it can be a good example and instance. Besides \nfor the
  author it is a native language.\n\nEven if you would not like to create and use
  \"phonetic\" languages \nwhere phonetics is of more importance than the grammar,
  then you \ncan evaluate the phonetic potential of the words used in the text \nin
  producing specially sounding texts. This can also be helpful \nin poetry writing
  and other probably related fields.\n"
license-name: MIT
