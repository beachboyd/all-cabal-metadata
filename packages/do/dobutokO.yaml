homepage: https://hackage.haskell.org/package/dobutokO
changelog-type: markdown
hash: 0033a1025d7b31f93c49a8579e4139d2055aeb6cd330e2056fb969b255354360
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: The library is intended to print updated messages on the terminal screen.
changelog: "# Revision history for dobutokO\n\n## 0.1.0.0 -- 2020-02-15\n\n* First
  version. Released on an unsuspecting world.\n\n## 0.1.0.1 -- 2020-02-15\n\n* First
  version revised A. Fixed minor issues in the documentation.\n\n## 0.1.0.2 -- 2020-02-15\n\n*
  First version revised B. Fixed an issue with the style of the documentation for\n'timeIntervalsPHi0'
  function.\n\n## 0.1.0.3 -- 2020-02-17\n\n* First version revised C. Fixed some issues
  with the documentation. \n\n## 0.2.0.0 -- 2020-02-20\n\n* Second version. Changed
  lazy functions to the strict by arguments ones.\n\n## 0.2.0.1 -- 2020-02-20\n\n*
  Second version revised A. Added more information to README.markdown. Fixed issue\nwith
  typos in the CHANGELOG.md file.\n\n## 0.3.0.0 -- 2020-02-20\n\n* Third version.
  There are now two different modules -- one with lazy functions\nand another -- with
  strict ones by their arguments.\n\n## 0.3.1.0 -- 2020-02-20\n\n* Third version revised
  A. Improved the documentation and dobutokO.cabal file.\n\n## 0.3.2.0 -- 2020-05-14\n\n*
  Third version revised B. Changed bounds for the dependencies so that now also GHC
  8.10* series are supported.\n\n"
basic-deps:
  base: '>=4.7 && <4.15'
all-versions:
- 0.3.2.0
author: OleksandrZhabenko
latest: 0.3.2.0
description-type: markdown
description: "          ***** Usage *****\n          -----------------\n\nThe library
  is intended to print updated messages on the terminal screen.\n\nThere are two modules
  with lazy and strict functions by their arguments.\nIn every module there are two
  functions that print messages.\nBesides, there is a set of pure functions to specify
  possible\ninteresting cases for pausing. The functions do not provide exact timing\npossibilities,
  but rather approximate timing behaviour. Do not use them as a\ntimer for anything,
  but use them as an approximation in time to the desired\nconditions. That is so
  because of the laziness of Haskell and so it is rather\nhard to control the time
  moment when the code will be executed.\n\nFor more information, please, refer to
  the module documentation. \n"
license-name: MIT
