homepage: https://hackage.haskell.org/package/dobutokO-poetry
changelog-type: markdown
hash: a4333d9709a5a8d89c4ba34899e2a52c89cd674ae3fa764c83755a3deb1bb8cc
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: Helps to order the 7 or less Ukrainian words to obtain somewhat suitable
  for poetry or music text
changelog: "# Revision history for dobutokO-poetry\n\n## 0.1.0.0 -- 2020-06-01\n\n*
  First version. Released on an unsuspecting world.\n\n## 0.2.0.0 -- 2020-06-01\n\n*
  Second version. Fixed issue with the wrong convertion to the WAV sound file. Added
  mmsyn3 as an explicit dependency (it was implicit) and changed the \nnumber of the
  minimum mmsyn6ukr package version.\n\n## 0.3.0.0 -- 2020-06-02\n\n* Third version.
  Added new generalized functions to the DobutokO.Poetry module and extended with
  them the functionality in the Main module. \n\n## 0.3.1.0 -- 2020-06-02\n\n* Third
  version revised A. Fixed issue with being printed also the second command line argument
  for the Main.main function.\n\n## 0.3.2.0 -- 2020-06-02\n\n* Third version revised
  B. Fixed issues with being not accurate printing.\n\n## 0.4.0.0 -- 2020-06-03\n\n*
  Fourth version. Changed the module structure to simplify the usage in research purposes.
  Added new generalized variants of the functions with different\nnorms and different
  String -> [Int] conversion functions. Some documentation improvements.\n\n## 0.5.0.0
  -- 2020-06-04\n\n* Fifth version. Fixed issues with inappropriate message information
  in some functions. Added new norms and possibility to use non-negative lists and
  to\nsplit them to make possible a technique of multiple metrics united in one function.
  Added generalized variant of the 'uniquenessPeriods' and some additional \nfunctions
  to work with String data in Ukrainian. Some minor code improvements.\n\n## 0.6.0.0
  -- 2020-07-25\n\n* Sixth version. Added three new functions to the DobutokO.Poetry
  module: uniqInMaxPoeticalNLine, uniqNPoeticalNLine and uniqNPoetical2GNLine. They
  are \nsimilar to the respective functions without 'Line' ending in their name but
  prints their output on the same line. \n\n## 0.7.0.0 -- 2020-07-29\n\n* Seventh
  version. Changed the module structure. Added new modules and rewritten the old ones.
  Fixed unexact or not complete documentation for some functions.\n\n## 0.8.0.0 --
  2020-07-31\n\n* Eigth version. Changed the module structure. Removed the module
  DobutokO.Poetry.PrependAppend and added the module DobutokO.Poetry.General with
  more extended \npossibilities. Addad also README.md file with some useful information.
  Some code and documentation improvements.\n\n## 0.8.1.0 -- 2020-07-31\n\n* Eigth
  version revised A. Fixed issue with being not compiled fo GHC versions prior to
  8.4* series. \n\n## 0.9.0.0 -- 2020-08-01\n\n* Ninth version. Fixed issues with
  empty lists in the norms for some variants in DobutokO.Poetry.Norms module. Some
  documentation improvements.\n\n## 0.9.0.1 -- 2020-08-05\n\n* Ninth version revised
  A. Some documentation improvements for README.md file.\n\n## 0.10.0.0 -- 2020-08-14\n\n*
  Tenth version. Added a new module DobutokO.Poetry.Norms.Extended, added a new possibility
  to split norms and to use more complex than just one norm evaluation \nprocedure
  on the each stage of evaluation. Added some new norms to the corresponding modules.
  Some minor code improvements. \n\n## 0.11.0.0 -- 2020-08-15\n\n* Eleventh version.
  Rearranged the library and somewhat changed the executable. Removed deprecated modules
  DobutokO.Poetry.Basic and DobutokO.Poetry \n(instead you can use a generalized variant
  DobutokO.Poetry.General). Added new modules DobutokO.Poetry.Data and DobutokO.Poetry.General.Debug.
  \nAdded more functions to DobutokO.Poetry.Auxiliary module. Fixed issue with norms
  combining in the DobutokO.Poetry.Norms module and added the new function \ncombineNorms
  with the needed functionality. Changed the norm7 function in the DobutokO.Poetry.Norms.Extended
  module. Some documentation improvements. \n\n## 0.12.0.0 -- 2020-08-16\n\n* Twelfth
  version. Divided a package into four different packages: uniqueness-periods, uniqueness-periods-general,
  dobutokO-poetry-general and dobutokO-poetry. \nRemoved mmsyn7s from the dependencies.
  Changed the dependencies. \n\n## 0.13.0.0 -- 2020-08-16\n\n* Thirteenth version.
  Fixed issues with being not compiled. \n\n## 0.14.0.0 -- 2020-08-16\n\n* Fourteenth
  version. Fixed issues with being not compiled. \n\n## 0.15.0.0 -- 2020-08-18\n\n*
  Fifteenth version. Added new functions uniqueness2nG and uniquenessPeriodsN to the
  DobutokO.Poetry.UniquenessPeriodsG module. Some documentation improvements for the
  \nmodule. Changed the dependency boundaries for uniqueness-periods.\n"
basic-deps:
  mmsyn3: '>=0.1.5 && <1'
  base: '>=4.7 && <4.15'
  uniqueness-periods: '>=0.2 && <1'
  mmsyn7s: '>=0.8 && <1'
  dobutokO-poetry-general: '>=0.1 && <1'
  mmsyn6ukr: '>=0.8 && <1'
  vector: '>=0.11 && <0.14'
all-versions:
- 0.15.0.0
author: OleksandrZhabenko
latest: 0.15.0.0
description-type: markdown
description: "There are different languages. They have different structure and rules.
  \nBut there is a possibility to create and use (on the one of \nthe existing vastly
  used and well spread languages basis, in this work, \nthe Ukrainian one) the \"phonetic\"
  language more suitable \nfor poetry and music. Even there can be different variants
  of the phonetic \nlanguage. This work proposes to create at least two \nnew \"phonetic\"
  languages on the Ukrainian basis.\n\nImagine, you can understand the information
  in the text no matter of \nthe words order and only with the most needed grammar
  \npreserved (for example, the rule not to separate the preposition and \nthe next
  word is preserved). Understand just like you can \nread the text (after some instruction
  and training might be) \nwith the words where only the first and the last letters
  \nare preserved on their places and the rest are interchangeably mixed. \nSo imagine,
  you can understand (and express your thoughts, \nfeeling, motives and so on) the
  message of the text with no strict \nword order preserved.\n\nIn such a case, you
  can rearrange words (preserving the most important \nrules in this case to reduce
  or even completely \neliminate ambiguity) so that they can obtain more interesting
  phonetic \nsounding. You can try to create poetic (at least somewhat \nrhythmic
  and expressive) text or music. This can be an inspiring and \ndeveloping exercise
  itself. But how can you quickly find out \nwhich combinations are more or less suitable?
  Besides, can the complexity \nof the algorithms be reduced?\n\nThese are some of
  the interesting questions. The work does not at \nthe moment answers them, but is
  experimental, still may be valuable.\n\nUkrainian is the language with no strict
  words order needed (though \nthere do exist some preferences in it) and have rather
  \npleasant sounding. So it can be a good example and instance. Besides \nfor the
  author it is a native language.\n\nEven if you would not like to create and use
  \"phonetic\" languages \nwhere phonetics is of more importance than the grammar,
  then you \ncan evaluate the phonetic potential of the words used in the text \nin
  producing specially sounding texts. This can also be helpful \nin poetry writing
  and other probably related fields.\n"
license-name: MIT
