homepage: https://github.com/jgm/doclayout
changelog-type: markdown
hash: 2243697b5edae935502f049748a0f0ddc1fc11813b3f6f3a2e5feb75143a90fb
test-bench-deps:
  doclayout: -any
  base: ! '>=4.8 && <5'
  tasty-golden: -any
  text: -any
  criterion: ! '>=1.0 && <1.6'
  mtl: -any
  tasty-hunit: -any
  tasty: -any
maintainer: jgm@berkeley.edu
synopsis: A prettyprinting library for laying out text documents.
changelog: |
  # doclayout

  ## 0.1
basic-deps:
  base: ! '>=4.9 && <5'
  text: -any
  mtl: -any
  safe: -any
all-versions:
- '0.1'
author: John MacFarlane
latest: '0.1'
description-type: markdown
description: |+
  # doclayout

  This is a prettyprinting library designed for laying out
  plain-text documents.  It originated in the pandoc module
  Text.Pandoc.Pretty, and its development has been guided by
  pandoc's needs in rendering wrapped textual documents.

  In supports wrapping of text on breaking spaces, indentation
  and other line prefixes, blank lines, and tabular content.

  Example:

  ``` haskell
  Text.DocLayout> mydoc = hang 2 "- " (text "foo" <+> text "bar")
  Text.DocLayout> putStrLn $ render (Just 20) mydoc
  - foo bar
  Text.DocLayout> putStrLn $ render (Just 10) (prefixed "> " (mydoc $+$ mydoc))
  > - foo
  >   bar
  >
  > - foo
  >   bar
  ```

  The `Doc` type may be parameterized to either `String` or
  (strict or lazy) `Text`, depending on the desired render target.

license-name: BSD-3-Clause
