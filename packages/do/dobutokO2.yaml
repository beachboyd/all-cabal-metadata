homepage: https://hackage.haskell.org/package/dobutokO2
changelog-type: markdown
hash: fd339d74adf8d3a805d60f2a96e14c48025dfa9ca70c7b95bca7ba2ca1859ab1
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: A program and a library to create experimental music from a mono audio and
  a Ukrainian text
changelog: |
  # Revision history for dobutokO2

  ## 0.1.0.0 -- 2020-03-04

  * First version. Released on an unsuspecting world.

  ## 0.2.0.0 -- 2020-03-05

  * Second version. Added the functionality connected with octaves. Some documentation and code improvements.
basic-deps:
  mmsyn3: ! '>=0.1.4 && <1'
  base: ! '>=4.7 && <4.14'
  process: ! '>=1.4 && <1.8'
  mmsyn7ukr: ! '>=0.15.3 && <1'
  mmsyn7s: ! '>=0.6.4 && <1'
  vector: ! '>=0.11 && <0.14'
  directory: ! '>=1.2.5 && <1.6'
all-versions:
- 0.1.0.0
- 0.2.0.0
author: OleksandrZhabenko
latest: 0.2.0.0
description-type: markdown
description: |+
  A program and a library to create experimental music from
  a mono audio and a Ukrainian text. It can also create a timbre
  for the notes.

                  ***** Usage *****
                  -----------------

  You can use it as a library or an executable.

  For the executable you enter in the terminal:

  dobutokO2 {1 | 2} {name-of-the-file-to-be-recorded-to-obtain-sound-information-from-without-file-extension} {Ukrainian text}

  After its executing (it takes some time) there is a file "end.wav" in the directory.
  This is the resulting melody generated.

  The program now lifts the frequencies to the octave with the number, which you
  can specify during its execution.

  ** Note:

  * Better to execute in the RAM. Need rather a lot of space on the disk for
  the resulting file "end.wav" and auxiliary files (MBs) for a short sound
  in the second command line arguments.

license-name: MIT
