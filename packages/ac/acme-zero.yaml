homepage: https://github.com/ion1/acme-zero-one
changelog-type: ''
hash: 52e9f69a39d7b5c0aee9a314361b8cf4c25dcd166aa3007d9ad7c7aebe562a6c
test-bench-deps: {}
maintainer: Johan Kiviniemi <devel@johan.kiviniemi.name>
synopsis: The absorbing element of package dependencies
changelog: ''
basic-deps:
  acme-zero: ==0
all-versions:
- 0.0.1
- 0.0.2
author: Johan Kiviniemi <devel@johan.kiviniemi.name>
latest: 0.0.2
description-type: markdown
description: ! "# `acme-zero` and `acme-one`\n\n[Cabal][cabal] package dependencies
  form a commutative monoid with an absorbing\nelement. They satisfy the following
  axioms:\n\n[cabal]: https://www.haskell.org/cabal/users-guide/developing-packages.html\n\n*
  **Associativity**\n\n  For all dependencies `a`, `b` and `c`,\n\n  ```\n  (a , b)
  , c = a , (b , c)\n  ```\n\n  In fact, the Cabal syntax does not even allow you
  to use the parentheses for\n  this reason.\n\n* **Commutativity**\n\n  For all dependencies
  `a` and `b`,\n\n  ```\n  a , b = b , a\n  ```\n\n* **Identity element**\n\n  For
  all dependencies `a`,\n\n  ```\n  acme-one , a = a\n  a , acme-one = a\n  ```\n\n
  \ Depending on [`acme-one`][acme-one] has no additional effect.\n\n* **Absorbing
  element**\n\n  For all dependencies `a`,\n\n  ```\n  acme-zero , a = acme-zero\n
  \ a , acme-zero = acme-zero\n  ```\n\n  Depending on [`acme-zero`][acme-zero] in
  addition has the same effect as\n  *only* depending on `acme-zero`.\n\n[acme-one]:
  \ https://hackage.haskell.org/package/acme-one\n[acme-zero]: https://hackage.haskell.org/package/acme-zero\n"
license-name: LicenseRef-PublicDomain
