homepage: ''
changelog-type: ''
hash: 84a38e7a84c8bb874092689b8eaeb6f3aade2b01384580591056b8d382ee23dd
test-bench-deps: {}
maintainer: Alex Mason <axman6@gmail.com>
synopsis: Mutable variables with Exception handling and concurrency support.
changelog: ''
basic-deps:
  base: ! '>=4.0.0.0 && <6.0.0.0'
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
- 0.0.5.1
author: Alex Mason
latest: 0.0.5.1
description-type: haddock
description: ! 'AVars emulate mutable variables, by providing a queue based

  interface to interacting with the variable. Each variable runs

  a ''handler'' function, which reads requests from a queue and

  processes them one by one. They can be used in concurrent

  systems safely, and should handle exceptions thrown by

  modifying functions gracefully.

  There is also an unsafe interface through Data.AVar.Unsafe,

  which will throw any errors encountered while modifying

  the variable.

  New in this version:

  * Fixed a (MASSIVE) mistake where i had forgotten to export the newAVar function.

  * Gave in and exported Data.AVar.Internal'
license-name: BSD-3-Clause
