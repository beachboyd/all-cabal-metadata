homepage: http://github.com/ekmett/either/
changelog-type: markdown
hash: 665f950019fbffe7e7f10b89404708e34f93c06774fa62ba160f54e028c3fe2f
test-bench-deps:
  either: -any
  test-framework: ! '>=0.8.1.1 && <0.9'
  base: -any
  test-framework-quickcheck2: ! '>=0.3.0.3 && <0.4'
  QuickCheck: ! '>=2.9 && <2.12'
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Combinators for working with sums
changelog: ! "5.0.1 [2018.07.03]\n------------------\n* Make the `Semigroup`, `Apply`,
  and `Applicative` instances for `Validation`\n  lazier.\n* Make `vap` lazier in
  its second argument.\n* Introduce `vapm`, an even lazier version of `vap` which
  requires a\n  `Monoid` constraint. Also add `apm`, a counterpart for `Validation`.\n*
  Use `test-framework` and `QuickCheck` in the test suite.\n\n5\n-\n* Changed the
  semantics of the `Validation` `Alt` and `Alternative` instances to collect errors.\n
  \ The previous implementation did not correctly abide the laws.\n* Added `vap`,
  for when users want validation like semantics but don't want to convert back and
  forth to validation all the time. Similarly, added `ealt` to give either's `Alt`
  semantics to validation.\n* Dropped the deprecated `Control.Monad.Trans.Either`.
  \ Use `Control.Monad.Trans.Except` from `transformers` and/or\n  `transformers-compat`
  instead.\n\n4.5\n----\n* Add `MMonad` instance for `EitherT`\n* Deprecate `Control.Monad.Trans.Either`
  in favor of `Control.Monad.Trans.Except`\n* Add `firstEitherT`\n\n4.4.1.1\n-------\n*
  Fixed building on newer GHCs. (type synonyms require explicit foralls for unused
  variables these days)\n\n4.4.1\n-----\n* `transformers` 0.5 support\n* Documentation
  fixes\n\n4.4\n---\n* Support `mmorph`\n\n4.3.4.1\n-------\n* Support `MonadRandom`
  0.4\n\n4.3.4\n-----\n* Support `bifunctors` 5, `profunctors` 5, and `semigroupoids`
  5.\n\n4.3.3.3\n-------\n* Fixed and enhanced documentation for `eitherToError`.\n\n4.3.3.2\n-------\n*
  Support `exceptions` 0.8\n\n4.3.3.1\n-------\n* Support `exceptions` 0.7\n\n4.3.3\n-----\n*
  Added `eitherToError`.\n\n4.3.2.1\n-------\n* Support `monad-control` 1.0\n\n4.3.2\n-----\n*
  Added `Validation`.\n\n4.3.0.2\n-------\n* Updated MonadRandom support.\n\n4.3.0.1\n-------\n*
  Fixed import of `MonadCatch` to support versions of `base` before 4.6\n\n4.3\n---\n*
  Inverted dependency between `free` and `either`.\n\n4.2\n---\n* Added instances
  for `MonadThrow`, `MonadCatch`.\n\n4.1\n---\n* Added instances for `MonadBase`,
  `MonadBaseControl`, and `MonadTransControl`.\n\n4.0\n---\n* Updated dependencies.\n\n3.4.2\n-----\n*
  Added 'Data.Either.Combinators'.\n\n3.4.1\n-----\n* Trustworthy despite UndecidableInstances\n\n3.4\n---\n*
  Delegate `fail` to the underlying `Monad`, rather than `error`.\n\n3.3\n---\n* Inverted
  roles between `Semigroup` and `Alt`. This let us write `Alternative` and `MonadPlus`
  instances that are compatible.\n* Removed the `Functor` constraint on most instances
  in exchange for incurring a `Monad` constraint on `Traversable`. `EitherT`\n  is
  after all, a `Monad` transformer first and foremost.\n\n3.2\n---\n* Changed the
  `Semigroup` to use a `Semigroup` to combine `Left` branches. Left `Alt` untouched,
  so you can mix and match.\n\n3.1\n---\n* Added instances for `mtl` classes and `MonadRandom`.\n*
  The meaning of `mapEitherT` has changed to match `mapErrorT` in the `mtl`. The old
  `mapEitherT` is now `bimapEitherT`.\n\n3.0.3\n-----\n* Started `CHANGELOG`\n"
basic-deps:
  semigroupoids: ! '>=4 && <6'
  base: ! '>=4 && <5'
  semigroups: ! '>=0.8.3.1 && <1'
  bifunctors: ! '>=4 && <6'
  mtl: ! '>=2.0 && <2.3'
  profunctors: ! '>=4 && <6'
all-versions:
- '0.1'
- '0.2.1'
- '0.2.2'
- '0.2.2.1'
- '0.2.2.2'
- '0.2.2.3'
- '0.2.3'
- '0.2.3.1'
- '0.3'
- '0.3.0.1'
- '3.0'
- '3.0.1'
- '3.0.2'
- '3.0.3'
- '3.1'
- '3.2'
- '3.3'
- '3.4'
- '3.4.1'
- '3.4.2'
- '4.0'
- '4.1'
- '4.1.1'
- '4.1.2'
- '4.3'
- '4.3.0.1'
- '4.3.0.2'
- '4.3.1'
- '4.3.2'
- '4.3.2.1'
- '4.3.3'
- '4.3.3.1'
- '4.3.3.2'
- '4.3.4'
- '4.3.4.1'
- '4.4'
- '4.4.1'
- '4.4.1.1'
- '4.5'
- '5'
- '5.0.1'
author: Edward A. Kmett
latest: '5.0.1'
description-type: markdown
description: ! 'either

  ======


  [![Hackage](https://img.shields.io/hackage/v/either.svg)](https://hackage.haskell.org/package/either)
  [![Build Status](https://secure.travis-ci.org/ekmett/either.png?branch=master)](http://travis-ci.org/ekmett/either)


  Contact Information

  -------------------


  Contributions and bug reports are welcome!


  Please feel free to contact me through github or on the #haskell IRC channel on
  irc.freenode.net.


  -Edward Kmett

'
license-name: BSD3
