homepage: https://github.com/haskell-numerics/hmatrix-sundials
changelog-type: markdown
hash: 7dd3e48722691ade172ba1de3532675dc57f262eb1f999f795eb7ee3322b886e
test-bench-deps:
  diagrams-lib: -any
  inline-c: ! '>=0.6 && <0.7'
  base: ! '>=4.10 && <4.11'
  diagrams-rasterific: -any
  hspec: -any
  containers: ! '>=0.5 && <0.6'
  plots: -any
  lens: -any
  hmatrix: ! '>=0.18'
  template-haskell: ! '>=2.12 && <2.13'
  vector: ! '>=0.12 && <0.13'
maintainer: dominic@steinitz.org
synopsis: hmatrix interface to sundials
changelog: ! "# Revision history for hmatrix-sundials\n\n## 0.19.0.0  -- 2018-04-21\n\n*
  First version. Released on an unsuspecting world. Just Runge-Kutta\n  methods to
  start with.\n\n## 0.19.1.0  -- 2018-08-14\n\n* Methods in CVODE: Adams-Moulton and
  Backward Differentiation\n  Formulas (BDFs).\n* An experimental interface for finding
  when a variable has crossed a\n  certain value.\n"
basic-deps:
  inline-c: ! '>=0.6 && <0.7'
  base: ! '>=4.10 && <4.11'
  containers: ! '>=0.5 && <0.6'
  hmatrix: ! '>=0.18'
  template-haskell: ! '>=2.12 && <2.13'
  vector: ! '>=0.12 && <0.13'
all-versions:
- 0.19.0.0
- 0.19.1.0
author: Dominic Steinitz
latest: 0.19.1.0
description-type: markdown
description: ! 'An interface to the Runge-Kutta methods:

  [ARKode](https://computation.llnl.gov/projects/sundials/arkode) and

  the methods in

  [CVode](https://computation.llnl.gov/projects/sundials/cvode)


  The interface is almost certainly going to change. Sundials gives a

  rich set of "combinators" for controlling the solution of your problem

  and reporting on how it performed. The idea is to initially mimic

  hmatrix-gsl and add extra, richer functions but ultimately upgrade the

  whole interface both for sundials and for gsl.

'
license-name: BSD-3-Clause
