homepage: https://github.com/haskell-numerics/hmatrix-sundials
changelog-type: markdown
hash: 4cae03f7dc8c984506cf3b3fd3711039cb39129e31bd86983ba532787ecfd52c
test-bench-deps:
  diagrams-lib: -any
  bytestring: -any
  inline-c: -any
  split: -any
  base: ==4.12.*
  hmatrix-sundials: -any
  diagrams-rasterific: -any
  hspec: -any
  clock: ! '>=0.7.1'
  containers: -any
  plots: -any
  lens: -any
  cassava: -any
  optparse-applicative: -any
  hmatrix: -any
  template-haskell: ! '>=2.14 && <2.15'
  vector: -any
maintainer: dominic@steinitz.org
synopsis: hmatrix interface to sundials
changelog: |
  # Revision history for hmatrix-sundials

  ## 0.19.0.0  -- 2018-04-21

  * First version. Released on an unsuspecting world. Just Runge-Kutta
    methods to start with.

  ## 0.19.1.0  -- 2018-08-14

  * Methods in CVODE: Adams-Moulton and Backward Differentiation
    Formulas (BDFs).
  * An experimental interface for finding when a variable has crossed a
    certain value.
basic-deps:
  inline-c: -any
  split: -any
  base: ! '>=4.12 && <4.13'
  containers: -any
  deepseq: -any
  hmatrix: -any
  template-haskell: ! '>=2.14 && <2.15'
  vector: -any
all-versions:
- 0.19.0.0
- 0.19.1.0
- 0.20.1.0
author: Dominic Steinitz
latest: 0.20.1.0
description-type: markdown
description: |
  An interface to the Runge-Kutta methods:
  [ARKode](https://computation.llnl.gov/projects/sundials/arkode) and
  the methods in
  [CVode](https://computation.llnl.gov/projects/sundials/cvode)

  The interface is almost certainly going to change. Sundials gives a
  rich set of "combinators" for controlling the solution of your problem
  and reporting on how it performed. The idea is to initially mimic
  hmatrix-gsl and add extra, richer functions but ultimately upgrade the
  whole interface both for sundials and for gsl.
license-name: BSD-3-Clause
