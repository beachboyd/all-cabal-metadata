homepage: https://github.com/mstksg/hmatrix-backprop#readme
changelog-type: markdown
hash: 6e4fb131fb909efe2ed764b857d73a815c8af3dcfc7bcbac9da174cbda8c1b39
test-bench-deps:
  microlens-platform: -any
  base: ! '>=4.7 && <5'
  vector-sized: ! '>=0.6'
  hmatrix-backprop: -any
  hmatrix-vector-sized: ! '>=0.1.1'
  hedgehog: -any
  hmatrix: ! '>=0.18'
  finite-typelits: -any
  backprop: ! '>=0.2.4'
  microlens: -any
maintainer: justin@jle.im
synopsis: hmatrix operations lifted for backprop
changelog: ! "Changelog\n=========\n\nVersion 0.1.2.2\n---------------\n\n*May 28,
  2018*\n\n<https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.2.2>\n\n*
  \  Fix compatibility with *backprop-0.2.4.0*.\n*   Rewrote most of *Numeric.LinearAlgebra.Static.Backprop*
  module to require\n    `Backprop` constraints on everything instead of `Num` constraints\n*
  \  Re-ordered constraint orders on various functions.  *Potentially breaking\n    change*
  if TypeApplications are used.\n*   Removed redundant dependency on *finite-typelits*.\n\nVersion
  0.1.2.1\n---------------\n\n*May 1, 2018*\n\n<https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.2.1>\n\n*
  \  Updated for compatibility with *backprop-0.2.0.0*\n*   Orphan instances added
  for types in *Numeric.LinearAlgebra.Static*.\n\nVersion 0.1.2.0\n---------------\n\n*Mar
  30, 2018*\n\n<https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.2.0>\n\n*
  \  `zipWithVector` family rewritten in the same way as `dvmap`/`dvmap` were\n    for
  version 0.1.1.0, which is a breaking API change.  However, again, it is\n    unlikely
  that any code using the previous versions compiled at all, so in\n    practicality,
  no actual code that previously worked is now breaking.\n\nVersion 0.1.1.0\n---------------\n\n*Mar
  25, 2018*\n\n<https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.1.0>\n\n*
  \  `dvmap`/`dmmap` family rewritten, which is a breaking API change.  Previous\n
  \   version of `dvmap`/`dmmap` would not even compile at all if used, though,\n
  \   because of nonsensical constraints, so it is likely that no code that\n    previously
  worked is now breaking.\n*   *backprop* types re-exported for convenience\n\n*Internal*\n\n*
  \  Rewrote much code to use `isoVar` instead of `opIso`, for increased clarity\n
  \   and cleanliness.  Requires *backprop-0.1.4.0*.\n\nVersion 0.1.0.0\n---------------\n\n*Feb
  10, 2018*\n\n<https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.0.0>\n\n*
  \  Initial release\n"
basic-deps:
  base: ! '>=4.7 && <5'
  vector-sized: ! '>=0.6'
  hmatrix-vector-sized: ! '>=0.1.1'
  ghc-typelits-knownnat: -any
  ghc-typelits-natnormalise: -any
  hmatrix: ! '>=0.18'
  backprop: ! '>=0.2.4'
  microlens: -any
  vector: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.2.1'
- '0.1.2.2'
author: Justin Le
latest: '0.1.2.2'
description-type: markdown
description: ! "hmatrix-backprop\n================\n\n[![hmatrix-backprop on Hackage](https://img.shields.io/hackage/v/hmatrix-backprop.svg?maxAge=2592000)](https://hackage.haskell.org/package/hmatrix-backprop)\n[![Build
  Status](https://travis-ci.org/mstksg/hmatrix-backprop.svg?branch=master)](https://travis-ci.org/mstksg/hmatrix-backprop)\n\n*[hmatrix][]*
  operations lifted for *[backprop][]*, along with orphan instances\nof `Backprop`.\n\n[hmatrix]:
  http://hackage.haskell.org/package/hmatrix\n[backprop]: http://hackage.haskell.org/package/backprop\n\nMeant
  to act as a drop-in replacement to the API of\n[Numeric.LinearAlgebra.Static][static].
  \ Just change your imports, and your\nfunctions are automatically backpropagatable.
  \ Useful types are all\nre-exported.\n\n[static]: https://hackage.haskell.org/package/hmatrix-0.18.2.0/docs/Numeric-LinearAlgebra-Static.html\n\nFormulas
  for gradients come from the following papers:\n\n*   <https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf>\n*
  \  <http://www.dtic.mil/dtic/tr/fulltext/u2/624426.pdf>\n*   <http://www.cs.cmu.edu/~zkolter/course/15-884/linalg-review.pdf>\n*
  \  <https://arxiv.org/abs/1602.07527>\n\nSome functions are not yet implemented!
  \ See module documentation for details.\nPR's definitely appreciated :)\n\nTests\n-----\n\nCurrently
  numeric tests are implemented as property tests using hedgehog, but\nit is possible
  that the answers might differ from the true values by an amount\nundetectable by
  property tests.\n\nAll functions currently are tested except for the higher-order
  functions.\n\nThey are tested by \"nudging\" components of inputs and checking if
  the change in\nthe function outputs match what is expected from the backpropagated
  gradient.\n\nTODO\n----\n\n1.  Now that new backprop no longer requires `Num`, we
  can lift normal hmatrix\n    operations as well.\n1.  Statically sized convolutions.
  \ Should probably add this to hmatrix instead\n    first, though.\n\n\n"
license-name: BSD3
