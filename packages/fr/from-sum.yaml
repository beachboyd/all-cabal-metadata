homepage: https://github.com/cdepillabout/from-sum
changelog-type: markdown
hash: 7ddedfd4602adc2a6bdd6a2ad72de930a2598abc4422a6aeaf84225a729f7f78
test-bench-deps:
  base: -any
  doctest: -any
  Glob: -any
maintainer: cdep.illabout@gmail.com
synopsis: Canonical fromMaybeM and fromEitherM functions.
changelog: |2

  ## 0.2.2.0

  *   Added new functions maybeToEither, maybeToEitherOr, and eitherToMaybe for
      converting between `Maybe` and `Either`.
      [#1](https://github.com/cdepillabout/from-sum/pull/1)
basic-deps:
  base: ! '>=4.6 && <5'
  transformers: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
author: Dennis Gosnell
latest: 0.2.2.0
description-type: markdown
description: |2

  Control.FromSum
  ===============

  [![Build Status](https://secure.travis-ci.org/cdepillabout/from-sum.svg)](http://travis-ci.org/cdepillabout/from-sum)
  [![Hackage](https://img.shields.io/hackage/v/from-sum.svg)](https://hackage.haskell.org/package/from-sum)
  [![Stackage LTS](http://stackage.org/package/from-sum/badge/lts)](http://stackage.org/lts/package/from-sum)
  [![Stackage Nightly](http://stackage.org/package/from-sum/badge/nightly)](http://stackage.org/nightly/package/from-sum)
  ![BSD3 license](https://img.shields.io/badge/license-BSD3-blue.svg)

  This Haskell module exports the `fromEitherM` and `fromMaybeM` convenience
  functions.

  ```haskell
  fromMaybeM :: m a -> Maybe a -> m a

  fromEitherM :: (e -> m a) -> Either e a -> m a
  ```

  `fromEitherM leftAction eitherValue` is the same as `either leftAction pure
  eitherValue`.

  `fromMaybeM nothingAction maybeValue` is the same as `maybe nothingAction pure
  maybeValue`.

  ## Usage

  ```haskell
  >>> import Control.FromSum (fromEitherM, fromMaybeM)
  >>> fromMaybeM [] $ Just 5
  [5]
  >>> fromMaybeM [] Nothing
  []
  >>> fromEitherM (\s -> [length s]) $ Right 5
  [5]
  >>> fromEitherM (\s -> [length s]) $ Left "foo"
  [3]
  ```
license-name: BSD-3-Clause
