homepage: ''
changelog-type: markdown
hash: 67e45603be12bd8265c1b2c2d29acecf1b3bb2e430d922d2dff09be10ce755bc
test-bench-deps:
  htoml: -any
  base: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  criterion: -any
  Frames: -any
  HUnit: -any
  pipes: ! '>=4.1.5 && <4.4'
  regex-applicative: -any
  transformers: -any
  temporary: -any
  pretty: -any
  template-haskell: -any
  directory: -any
maintainer: acowley@gmail.com
synopsis: Data frames For working with tabular data files
changelog: ! '# 0.3.0


  - Pervasive use of `pipes` for CSV data loading


  This provides better exception handling (file handles should be closed more reliably),
  and offers an interface point for customized handling of input texts. An example
  of this latter point is working with particular file encodings.


  A breaking change is that operations that previously returned `IO` values now return
  `MonadSafe` constrained values.


  - Adaptation of `Data.Vinyl.Curry.runcurry` to the Frames `Record` type

  This simply strips the column name information from a row before applying the function
  from `vinyl`.


  # 0.2.1


  - Refactored to use the `CoRec` type provided by `vinyl` >= 0.6.0


  - Fixed bug in typing mostly-numeric columns

  Such columns must be represented as `Text`. Previously, we strove a bit too hard
  to avoid falling back to `Text` resulting in dropping rows containing non-numeric
  values for columns we crammed into a numeric type.


  - Minor optimization of CSV parsing

  In particular, dealing with RFC4180 style quoting


  - GHC-8.2.1 compatibility


  # 0.1.10


  - Added CSV output functions: `produceCSV` and `writeCSV`

  - Added an Eq instance for the `Frame` type



  # 0.1.9


  Fixed column type inference bug that led the inferencer to prefer `Bool` too strongly.


  This was fallout from typing columns whose values are all 0 or 1 as `Bool`.


  # 0.1.6


  Re-export `Frames.CSV.declareColumn` from `Frames`. This makes it much

  easier to manually define column types.


  # 0.1.4


  Use `microlens` instead of `lens-family-core` for demos.


  # 0.1.3


  GHC-8.0.1 compatibility


  # 0.1.2.1


  Improved documentation based on suggestions by Alexander Kjeldaas


  # 0.1.2


  Fixed bug in `Monoid` instance of `Frame` (@dalejordan)


  # 0.1.1.0


  Added `frameConsA`, `frameSnoc`, and `RecordColumns` to help with

  changing row types.


  # 0.1.0.0


  Initial version pushed to hackage.

'
basic-deps:
  pipes-text: ! '>=0.0.2.5 && <0.1'
  base: ! '>=4.8 && <4.11'
  pipes-bytestring: ! '>=2.1.6 && <2.2'
  pipes-group: ! '>=1.0.8 && <1.1'
  text: ! '>=1.1.1.0'
  vinyl: ! '>=0.6 && <0.8'
  pipes-parse: ! '>=3.0 && <3.1'
  pipes: ! '>=4.1 && <5'
  ghc-prim: ! '>=0.3 && <0.6'
  readable: ! '>=0.3.1'
  transformers: -any
  pipes-safe: ! '>=2.2.6 && <2.3'
  template-haskell: -any
  primitive: ! '>=0.6 && <0.7'
  vector: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.1.1'
- '0.1.2'
- '0.1.2.1'
- '0.1.3'
- '0.1.4'
- '0.1.6'
- '0.1.8'
- '0.1.9'
- '0.2.0'
- '0.2.1'
- '0.2.1.1'
- '0.3.0'
author: Anthony Cowley
latest: '0.3.0'
description-type: haddock
description: ! 'User-friendly, type safe, runtime efficient tooling for

  working with tabular data deserialized from

  comma-separated values (CSV) files. The type of

  each row of data is inferred from data, which can

  then be streamed from disk, or worked with in

  memory.'
license-name: BSD3
