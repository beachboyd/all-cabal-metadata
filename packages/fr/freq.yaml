homepage: https://github.com/chessai/freq
changelog-type: ''
hash: 6f50016c0c72a167c4702d5308d68611b23b437c5edd6996bd0058ff094e4b7c
test-bench-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  hedgehog: -any
  gauge: -any
  containers: -any
  freq: -any
maintainer: dcartwright@layer3com.com
synopsis: Are you ready to get freaky?
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4.9 && <5.0'
  containers: -any
  freq: -any
  primitive: ! '>=0.6.1'
all-versions:
- '0.0.0'
- '0.1.0.0'
author: Daniel Cartwright
latest: '0.1.0.0'
description-type: markdown
description: ! "# freq\n\n## About\nThis is a simple cryptanalytic frequency analysis
  tool that uses [english character digrams](https://en.wikipedia.org/wiki/Bigram)
  as a probabilistic model for scoring ByteStrings according to their randomness (0..1,
  0 being the most random, 1 being the least random).\n\n## Uses\nI currently use
  this to validate domain names, and so the training data available consists of about
  6.5 Megabytes of Public Domain 19th and 20th century English novels. You can feed
  any training data you wish to 'freq' to achieve different results.\n\n## Improvements\nTo
  improve further on the accuracy of this approach, I will experiment with a generalised
  dynamic n-gram approach, which will sacrifice slightly in performance for a potentially
  large gain in accuracy. \n\n## Further\nSee my implementation of the [Linear Hadamard
  Spectral Test](https://github.com/chessai/lhst) for a different approach to a similar
  problem with much higher variance in the potentially random data, where a trained
  approach might be less accurate.\n"
license-name: MIT
