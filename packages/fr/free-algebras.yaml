homepage: https://github.com/coot/free-algebras#readme
changelog-type: markdown
hash: fb70953655e0bf6ca46e90ad4243e2fcac69b08dfe1f4cef26fbd83d722032ee
test-bench-deps:
  free: -any
  groups: -any
  data-fix: -any
  base: ! '>=4.9 && <5'
  kan-extensions: -any
  hedgehog: -any
  constraints: -any
  dlist: -any
  containers: -any
  free-algebras: -any
  natural-numbers: -any
  mtl: -any
  transformers: -any
maintainer: profunctor@pm.me
synopsis: Free algebras in Haskell.
changelog: ! "# Changelog for free-algebras\n\n## Version 0.0.7.0\n- Poly kinded `Control.Algebra.Free.FreeAlgebra`
  and\n  `Control.Algebra.Free2.FreeAlgebra2`\n- removed actions (MSet, SSet), use
  `monoid-extras` or `semigroups-actions`\n  packages\n\n## Version 0.0.6.0\n- `Num
  a => SSet (Sum a) a` and `Num a => SSet (Product a) a` instances\n- `Num a => MSet
  (Sum a) a` and `Num a => MSet (Product a) a` instances\n- removed some overlapping
  instances for `SSet` and `MSet`\n- `Control.Algebra.Free2` module, see `free-category`
  package for applications.\n\n## Version 0.0.5.1\n- Improved documentation\n\n##
  Version 0.0.5.0\n- `FreeAlgebra` renamed `proof` to `codom`, added `Proof` smart
  constructor `proof`.\n- `FreeAlgebra` instance for `Identity` functor\n- generic
  `Free` type\n- `DList` and `FreeGroup` based on `DList`, `FreeGroupL`\n- documentation
  on strictness / laziness improved\n\n## Version 0.0.4.0\n\n- `S` new type wrapper
  in `SSet`, and overlappable instance for\n  `SSet s a => SSet (S s) (Endo a)`\n-
  `foldrFree` and friends\n- `foldrMSet`\n- documented intersection with `monad-mmorph`
  package.\n\n## Version 0.0.3.0\n\n- Breaking change: changed proofs in FreeAlgebra
  and FreeAlgebra1 class; now\n  using `FreeAlgebra` and `FreeAlgebra1` classes let
  us deduce an adjunction.\n- Monadicity example\n\n## Version 0.0.2.0\n- Simplified
  `Proof` type.\n\n## Unreleased changes\n"
basic-deps:
  free: ! '>=4.0 && <6.0'
  groups: ! '>=0.3 && <0.5'
  data-fix: <0.3
  base: ! '>=4.9 && <5'
  kan-extensions: ! '>=4.1 && <6.0'
  constraints: ! '>=0.8 && <0.11.0'
  dlist: ! '>=0.8 && <0.9'
  containers: ! '>=0.4.2 && <0.7'
  natural-numbers: ! '>=0.1 && <0.2'
  mtl: ! '>=2.2 && <2.3'
  transformers: ! '>=0.5 && <0.6'
all-versions:
- '0.0.1.0'
- '0.0.2.0'
- '0.0.3.0'
- '0.0.4.0'
- '0.0.5.0'
- '0.0.5.1'
- '0.0.6.0'
- '0.0.7.0'
author: Marcin Szamotulski
latest: '0.0.7.0'
description-type: markdown
description: ! '# Free Algebras

  [![Maintainer: coot](https://img.shields.io/badge/maintainer-coot-lightgrey.svg)](http://github.com/coot)

  [![CircleCI](https://circleci.com/gh/coot/free-algebras/tree/master.svg?style=svg)](https://circleci.com/gh/coot/free-algebras/tree/master)


  Universal algebra approach (which is compatible with categorical approach) to

  free algebras (including higher order structures like functors, applicative

  functors or monads).  Mathematical introduction alongside with some Haskell

  ideas can be found

  [here](https://marcinszamotulski.me/posts/free-monads.html).


  For an example check out [this](https://github.com/coot/free-algebras/blob/master/examples/src/Network/TCP.hs).

'
license-name: MPL-2.0
