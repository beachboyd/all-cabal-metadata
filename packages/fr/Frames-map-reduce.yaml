homepage: ''
changelog-type: markdown
hash: 6d58ea99b0bdb1433d8f7f13afa0edec7b63ea1bf054c63d1c0bf11327ac3f9a
test-bench-deps:
  base: -any
  text: ! '>=1.2.3 && <1.3'
  Frames: -any
  vinyl: -any
  Frames-map-reduce: -any
  foldl: -any
  random: ! '>=1.1 && <1.2'
  vector: -any
maintainer: adam_conner_sax@yahoo.com
synopsis: Frames wrapper for map-reduce-folds and some extra folds helpers.
changelog: "v 0.3.0.0\n* Added Combinator for aggregation in Frames.Aggregation along
  with helpers to create folds over data cols, promote simple functions to\nrecord
  functions to be used in aggregations, combine key aggregations.\n* Added ```toRecordFold```
  to the Folds modules to simplify making record to record folds from record to Type
  folds. See examples.\n* Added an example of its use in the example.\n* Added the
  full record/functor generalization in Frames.Aggregation.General\n* Added the specialization
  to ```Maybe``` in Frames.Aggregation.Maybe\n* Cleanup of unneccesary imports\n*
  Suppressed Orphan Instance warnings about Hashable instances for ```Record``` and
  general record types.  These\ninstances should properly be in Vinyl.\n* Bumped some
  upper bounds for GHC 8.8.  Still can't compile with 8.8+ until discrimination is
  updated.\n\nv 0.2.0.0 \n* Added Combinators for ```record (Maybe :. ElField) rs```
  (Much thanks to Tim Pierson, @o1lo01ol1o, for the idea and the work!).\n* Added
  Combinators polymorphic in record type (```Rec```, ```ARec``` or ```SRec``` are
  supported) and composed interpretation functor ```f :. ElField```\n* ```Maybe :.
  ElField``` case now uses the general case in order to avoid code duplication\n*
  ```Record``` case still uses separate code because the amount of new coercion code
  required was enough to not seem worth the re-use of the polymorphic case.\n\nv 0.1.0.2
  \n* Changed example from \"executable\" to \"test-suite\".  Now it doens't need
  to be built and its dependencies don't leak to library users.\n\nv 0.1.0.1\n* lowered
  containers lower bound\n* rasied some outdated upper bounds (profunctors, hashable)\n\nv
  0.1.0.0\n* Initial hackage release\n"
basic-deps:
  newtype: ! '>=0.2 && <0.3'
  base: ! '>=4.12.0 && <4.14'
  map-reduce-folds: ! '>=0.1.0.0 && <0.1.0.5'
  Frames: ! '>=0.6.1 && <0.7'
  containers: ! '>=0.5.0 && <0.7'
  vinyl: ! '>=0.11.0 && <0.13'
  foldl: ! '>=1.4.5 && <1.5'
  hashable: ! '>=1.2.7 && <1.4'
  profunctors: ! '>=5.3 && <5.6'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
- 0.3.0.0
author: Adam Conner-Sax
latest: 0.3.0.0
description-type: haddock
description: |-
  Frames-map-reduce provides some helpers for using the map-reduce-folds library with vinyl records and Frames.
  These include functions for filtering Frames, splitting records into key columns and data columns and
  recombining key columns with other columns after reducing.
  This package also provides some tools for building folds over records from folds over each column,
  e.g, summing multiple numerical columns into a multi-column result.
license-name: BSD-3-Clause
