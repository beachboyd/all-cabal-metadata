homepage: https://github.com/sjoerdvisscher/free-functors
changelog-type: text
hash: e014b2fc61ba235d5e7c63e3ab8cb52eb76dd795d92d99ec679523bd68a372f7
test-bench-deps: {}
maintainer: sjoerd@w3future.com
synopsis: Free functors, adjoint to functors that forget class constraints.
changelog: ! "CHANGELOG\n\n0.8.3 -> 0.8.4\n  - Updated to constraints-0.10\n  - Updated
  for GHC 8.4\n    - Updated to base-4.11\n    - Updated to template-haskell-2.13\n
  \   - `Semigroup` is now a superclass of `Monoid`\n\n0.8.2 -> 0.8.3\n  - Added Data.Functor.Free.TH
  to other-modules\n  \n0.8.1 -> 0.8.2\n  - Support for `deriveInstances` for classes
  which have one or more superclasses\n  - `deriveInstances` now also derives the
  `HasSuperClasses` instance\n  - Expose internal `ShowHelper` datatype\n  \n0.8 ->
  0.8.1\n  - Added HHCofree\n  - Changes towards support for `SuperClass1` in TH code
  for `Free`\n  \n0.7.2 -> 0.8\n  - Updated for GHC 8.2\n    - Updated to base-4.10\n
  \   - Updated to template-haskell-2.12\n    - Updated to algebraic-classes-0.8\n\n0.7.1
  -> 0.7.2\n  - Fixed Traversable instance of `Free c`\n\n0.7 -> 0.7.1\n  - Rewritten
  SuperClass1\n\n0.6.5 -> 0.7\n  - Allow contravariant uses of HFree\n  - Added HHFree
  for free profunctors/categories/arrows\n  - Updated to base-4.9\n  - Updated to
  template-haskell-2.11\n  - Updated to comonad-5\n  - Updated to constraints-0.9\n
  \ - Updated to algebraic-classes-0.7\n\n0.6.4.1 -> 0.6.5\n  - Updated to transformers-0.5.0.0\n
  \ - Updated to constraints-0.6\n\n0.6.4 -> 0.6.4.1\n  - Raise lower bounds of template-haskell\n\n0.6.3.3
  -> 0.6.4\n  - Updated to algebraic-classes 0.6\n  - Updated to template-haskell-2.10.0.0\n\n0.6.3.2
  -> 0.6.3.3\n  - Updated to void 0.7\n\n0.6.3.1 -> 0.6.3.2\n  - Updated to constraints
  0.4\n\n0.6.2 -> 0.6.3.1\n  - Updated to comonad 4.2\n  - Updated to transformers
  0.4.1.0\n\n0.6.1.1 -> 0.6.2\n  - Updated to template-haskell-2.9.0.0\n  - Added
  instance Applicative (HFree Monad f)\n\n0.6.1 -> 0.6.1.1\n  - Added a changelog\n\n0.6
  -> 0.6.1\n  - Updated to comonad-4.0\n  - Added convert to Data.Functor.HCofree\n"
basic-deps:
  base: ==4.12.*
  comonad: ==5.*
  bifunctors: ==5.*
  contravariant: ==1.5.*
  transformers: ==0.5.*
  template-haskell: ==2.14.*
  profunctors: ==5.*
  algebraic-classes: ==0.9.*
all-versions:
- '0'
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '0.5'
- '0.6'
- '0.6.1'
- '0.6.1.1'
- '0.6.2'
- '0.6.3'
- '0.6.3.1'
- '0.6.3.2'
- '0.6.3.3'
- '0.6.4'
- '0.6.4.1'
- '0.6.5'
- '0.7'
- '0.7.1'
- '0.7.2'
- '0.8'
- '0.8.1'
- '0.8.2'
- '0.8.3'
- '0.8.4'
- '0.9'
- '1.0'
- '1.0.1'
author: Sjoerd Visscher
latest: '1.0.1'
description-type: haddock
description: ! 'A free functor is a left adjoint to a forgetful functor. It used to
  be the case

  that the only category that was easy to work with in Haskell was Hask itself, so

  there were no interesting forgetful functors.


  But the new ConstraintKinds feature of GHC provides an easy way of creating

  subcategories of Hask. That brings interesting opportunities for free (and cofree)
  functors.


  The examples directory contains an implementation of non-empty lists as free semigroups,

  and automata as free actions. The standard example of free higher order functors
  is free monads,

  and this definition can be found in Data.Functor.HFree.'
license-name: BSD3
