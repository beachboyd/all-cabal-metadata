homepage: https://pandoc.org
changelog-type: text
hash: 1188f8ab9721a4f15383ebcda63f6ecccd0b055234fcc5ca0fb7cdcd095ca8c6
test-bench-deps:
  zip-archive: ! '>=0.2.3.4 && <0.4'
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4.2 && <5'
  tasty-golden: ! '>=2.3 && <2.4'
  time: ! '>=1.5 && <1.10'
  base64-bytestring: ! '>=0.1 && <1.1'
  Diff: ! '>=0.2 && <0.4'
  text: ! '>=0.11 && <1.3'
  executable-path: ! '>=0.0 && <0.1'
  filepath: ! '>=1.1 && <1.5'
  criterion: ! '>=1.0 && <1.6'
  process: ! '>=1.2.3 && <1.7'
  pandoc-types: ! '>=1.17.5 && <1.18'
  xml: ! '>=1.3.12 && <1.4'
  containers: ! '>=0.4.2.1 && <0.6'
  weigh: ! '>=0.0 && <0.1'
  base-compat: ! '>=0.9'
  pandoc: -any
  tasty-quickcheck: ! '>=0.8 && <0.11'
  mtl: ! '>=2.2 && <2.3'
  tasty-hunit: ! '>=0.9 && <0.11'
  temporary: ! '>=1.1 && <1.4'
  tasty: ! '>=0.11 && <1.2'
  QuickCheck: ! '>=2.4 && <2.12'
  hslua: ! '>=0.9.5 && <0.9.6'
  Glob: ! '>=0.7 && <0.10'
  directory: ! '>=1 && <1.4'
maintainer: John MacFarlane <jgm@berkeley.edu>
synopsis: Conversion between markup formats
changelog: ! "pandoc (2.2.3)\n\n  * RST reader: improve parsing of inline interpreted
  text roles (#4811).\n\n    + Use a Span with class \"title-reference\" for the default\n
  \     title-reference role.\n    + Use `B.text` to split up contents into `Space`s,
  `SoftBreak`s,\n      and `Str`s for `title-reference`.\n    + Use Code with class
  \"interpreted-text\" instead of Span and Str for\n      unknown roles.  (The RST
  writer has also been modified to round-trip\n      this properly.)\n    + Disallow
  blank lines in interpreted text.\n    + Backslash-escape now works in interpreted
  text.\n    + Backticks followed by alphanumerics no longer end interpreted text.\n
  \   + Remove support for nested inlines (Francesco Occhipinti).\n      RST does
  not allow nested emphasis, links, or other inline\n      constructs.  This fixes
  several bugs (#4581, #4561, #4792).\n\n  * Org reader: fix parsers relying on `parseFromString`
  (#4784, Albert\n    Krewinkel).  Emphasis was not parsed when it followed directly
  after\n    some block types (e.g., lists).\n\n  * Markdown reader: Allow unquoted
  numbers and booleans as YAML mapping\n    keys.  Previously in 2.2.2 you could not
  do\n    ```\n    ---\n    0: bar\n    ...\n    ```\n    but only\n    ```\n    ---\n
  \   '0': bar\n    ...\n    ```\n    With this change, both forms work.\n\n  * DocBook
  reader: metadata handling improvements.\n    Now we properly parse title and subtitle
  elements that are direct\n    children of book and article (as well as children
  of bookinfo,\n    articleinfo, or info).  We also now use the `subtitle` metadata\n
  \   field for subtitles, rather than tacking the subtitle on to the\n    title.\n\n
  \ * RST writer:\n\n    + Allow images to be directly nested within links (#4810,
  Francesco\n      Occhipinti).\n    + Use `titleblock` instead of `title` variable
  for title block (#4803,\n      Francesco Occhipinti).  `titleblock` contains a properly
  formatted\n      title and subtitle (using top-level headers).  `title` and\n      `subtitle`
  variables are still available and just contain the\n      title and subtitle text.
  \ Note that this change will require an\n      update to custom rst templates.\n
  \   + Render Code with class \"interpreted-text\" as interpreted text role.\n\n
  \ * MediaWiki writer: Avoid extra blank line in tables with empty cells\n    (#4794).
  \ Note that the old output is semantically identical, but the\n    new output looks
  better.\n\n  * Lua Utils module: add function `blocks_to_inlines` (#4799, Albert\n
  \   Krewinkel).  Exposes a function converting which flattenes a list of\n    blocks
  into a list of inlines. An example use case would be the\n    conversion of Note
  elements into other inlines.\n\n  * RST template:  use `titleblock` instead of `title`.
  \ Users of\n    custom RST templates will want to update this.\n\n  * LaTeX template:
  Moved some beamer code in default.latex template.\n    This change allows beamer
  themes to change the template and font (as\n    Metropolis does) (#4450).\n\n  *
  Better error message on `-t pdf -o out.pdf` (#1155, Mauro Bieg).\n\n  * Added test
  case for #4669 to repository.\n\n  * INSTALL.md: Fix broken link for cabal-install
  (#4806, ChanHoHo).\n\n  * MANUAL.txt:\n\n    + Add beamer info for slide backgrounds
  (#4802, John Muccigrosso).\n    + Clarify when `csquotes` is used in LaTeX writer
  (#4514).\n    + Add `commonmark` to list of output formats where `raw_tex` has an\n
  \     effect (see #4527).\n\n\npandoc (2.2.2.1)\n\n  * Fix regression finding templates
  in user data directory (#4777).\n    Under version 2.2.1 and prior pandoc found
  latex templates in the\n    templates directory under the data directory, but this
  broke in 2.2.2.\n\n  * Fix for bug in parsing `\\input` in `rawLaTeXBlock` and\n
  \   `rawLaTeXInline` (#4781). (This primarily affects the markdown\n    reader,
  and other readers that accept raw tex.)\n    Starting in 2.2.2, everything after
  an `\\input` (or `\\include`)\n    in a markdown file would be parsed as raw LaTeX.\n\n
  \ * MANUAL:\n\n    + Clarify `gfm` vs `markdown_github` (#4783, Mauro Bieg).\n    *
  Use `keywords` instead of `tags` in YAML metadata example (#4779).\n      Unlike
  `tags`, `keywords` is used in some of the writers\n      and default templates.\n\n
  \ * Add missing `rollingLinks` option to revealjs template (#4778,\n    Igor Khorlo).\n\npandoc
  (2.2.2)\n\n  * Use HsYAML instead of yaml for translations and YAML metadata (#4747).\n
  \   yaml wraps a C library; HsYAML is pure Haskell.  Advances #4535.\n\n    Note:
  HsYAML implements YAML 1.2, in which the valid true\n    values are `true`, `True`,
  `TRUE`.  This means a change in\n    the semantics of YAML metadata that could affect
  users:\n    `y`, `yes`, and `on` no longer count as true values.\n\n  * Fix regression:
  make `--pdf-engine` work with full paths (#4681, Mauro\n    Bieg).\n\n  * CommonMark
  reader: Handle `ascii_identifiers` extension (#4742,\n    Anders Waldenborg).  Non-ascii
  characters were not stripped from\n    identifiers even if the `ascii_identifiers`
  extension was\n    enabled (which is is by default for gfm).\n\n  * TikiWiki reader:
  Improve list parsing (#4722, Mauro Bieg).\n    Remove trailing Space from list items.
  \ Parse lists that have no space\n    after marker.\n\n  * LaTeX reader:\n\n    +
  Treat `lilypond` as a verbatim environment (#4725).\n    + Parse figure label into
  Image id (#4700, Mauro Bieg).\n    + Beamer: Allow \"noframenumbering\" option (#4696,
  Raymond Ehlers).\n    + Allow spaces around `\\graphicspath` arguments (#4698).\n
  \   + Handle includes without surrounding blanklines (#4553).\n      In addition,
  `\\input` can now be used in an inline context,\n      e.g. to provide part of a
  paragraph, as it can in LaTeX.\n    + In `rawLaTeXBlock`, handle macros that resolve
  to a\n      `\\begin` or `\\end` (#4667).\n    + In `rawLaTeXBlock`, don't expand
  macros in macro definitions (#4653).\n      Note that this only affected LaTeX in
  markdown.\n    + Tighten up reading of beamer overlay specifications (#4669).\n
  \     Ideally we'd turn these on only when reading beamer, but currently\n      beamer
  is not distinguished from latex as an input format.\n      This commit also activates
  parsing of overlay specifications\n      after commands in general (e.g. `\\item`),
  since they can occur\n      in many contexts in beamer.\n    + Parse more siunitx
  unit commands (#4296, #4773).\n    + Be more forgiving in key/value option parsing
  (#4761).\n\n  * Markdown reader:\n\n    + Allow empty code spans, e.g. `` ` ` ``.\n
  \   + Emojis are now wrapped in Spans with class `emoji` and\n      attribute `data-emoji`
  (Anders Waldenborg, #4743).\n      This allows the writer to handle them in a special
  way\n      (e.g. using a special font, or just rendering the\n      emoji name).\n\n
  \ * Muse reader (Alexander Krotov, except where indicated):\n\n    + Get rid of
  non-exhaustive pattern match warning (Mauro Bieg).\n    + Add support for floating
  images.\n    + Add support for images with specified width.\n    + Parse image URLs
  without \"guard\" and \"takeExtension\".\n    + Split link and image parsing into
  separate functions.\n    + Parse links starting with \"URL:\" explicitly instead
  of trying to strip\n      \"URL:\" prefix after parsing.\n\n  * Texinfo writer:
  Use `@sup` and `@sub` instead of custom macros (#4728,\n    Alexander Krotov).\n\n
  \ * Markdown writer: Preserve `implicit_figures` with attributes, even if\n    `implicit_attributes`
  is not set, by rendering in raw HTML (#4677).\n\n  * Markdown and commonmark/github
  writers now respect the `emoji`\n    extension.  So, `-f markdown+emoji -t markdown+emoji`
  now leaves\n    `:smile:` as `:smile:` rather than converting it to a smile\n    character.\n\n
  \ * Docx writer: Be sensitive to `toc` in YAML metadata (#4645).\n\n  * ODT/OpenDocument
  writer: Make internal links work (#4358).\n    This adds proper bookmarks to the
  headers with non-null IDs.\n\n  * EPUB writer: Properly escape pagetitle.  Previously
  we weren't\n    escaping `&` and other XML characters in the pagetitle, so a title\n
  \   containing a `&` would be invalid.\n\n  * AsciiDoc Writer: Eescape square brackets
  at start of line (#4545,\n    Mauro Bieg).\n\n  * RST writer:\n\n    + Don't treat
  'example' as a syntax name (#4748).\n      This fixes conversions from org with
  example blocks.\n    + Support `--number-sections` via the `section-numbering`\n
  \     directive in standalone output.\n\n  * reveal.js writer and template: reuse
  mathjax URL\n    provided by the argument to `--mathjax` or the normal pandoc default,\n
  \   rather than a hard-coded one in the template (#4701).\n\n  * LaTeX writer:\n\n
  \   + Properly handle footnotes in table captions (#4683).\n      Refactored code
  from figure captions to use in both places.\n    + In beamer output, fix single
  digit column percentage (#4690, Mauro\n      Bieg).\n\n  * FB2 writer (Alexander
  Krotov):\n\n    + Convert Plain to Para in annotation (#2424).\n    + Fix order
  of items in title-info (#2424).\n\n  * Custom writer: fix error message on script
  failure (Albert Krewinkel).\n    Error messages produced by Lua were not displayed
  by Pandoc.\n\n  * Text.Pandoc.Emoji now exports `emojiToInline`, which returns a
  Span\n    inline containing the emoji character and some attributes with metadata\n
  \   (class `emoji`, attribute `data-emoji` with emoji name).  (API change,\n    Anders
  Waldenborg, #4743).\n\n  * Text.Pandoc.PDF:\n\n    + Revert fix for #4484 (only
  compress images on last run, #4755).\n      This will mean some increase in the
  time it takes to\n      produce an image-heavy PDF with xelatex, but it will\n      make
  tables of contents correct, which is more important.\n    + Fix logic error in `runTeXProgram`.
  \ We were running the tex program\n      one more time than requested.  This should
  speed up PDF production.\n\n  * Allow `--template` to take a URL as argument.\n\n
  \ * Text.Pandoc.Highlighting: Add missing re-export of `breezeDark`\n    highlighting
  style (#4687, Adrian Sieber, API change).\n\n  * Clarify macOS install in INSTALL.md
  (#4661).  Make the binary package\n    installer the recommended method, and note
  that on some older versions of\n    macOS, homebrew installs from source and takes
  a lot of disk space\n    (#4664, Ian).\n\n  * MANUAL:\n\n    + Clarify EPUB linked
  media (#4756, Mauro Bieg)\n    + Update manual for \"true\" YAML values.  Now that
  we're using HsYAML and\n      YAML 1.2, the valid true values are `true`, `True`,
  `TRUE`.  NOTE!\n      `y`, `yes`, `on` no longer count as true values.\n    + Document
  `-F` as alias for `--filter` (thanks to Gandalf Saxe).\n    + Update manual on how
  math is rendered in LaTeX.\n    + Add proxy description (#4131, Mauro Bieg).\n    +
  Clarify that `--toc` requires `--standalone` (#4703).\n    + Update citation styles
  link (#4699, wiefling).\n\n  * In API docs, clarify how `Ext_east_asian_line_breaks`
  extension works\n    (kaizshang91).  Note that it will not take effect when readers/writers\n
  \   are called as libraries (#4674).\n\n  * Improved translations/fr (#4766, lux-lth).\n\n
  \ * Removed inadvertently added `.orig` files from repository (#4648).\n\n  * Remove
  `network-uri` flag and use 'Network.Socket'.\n    This removes a compiler warning.
  \ There is no need for the old\n    `network-uri` flag, since network 2.6 was released
  in 2014.\n\n  * Add stack.lts10.yaml, stack.lts11.yaml.  use lts-12 in stack.yaml.\n\n
  \ * Bump upper bounds for dependent packages.\n\n  * Exclude foundation 0.0.21 for
  ghc 7.10.  Otherwise cabal gets\n    confused because of the way ghc 7.10 is excluded
  in foundation's\n    cabal file.  This can be removed when haskell-foundation/foundation#500\n
  \   is fixed.\n\n  * Require cabal-version >= 2.0.  This is needed for haddock-library.\n\n\npandoc
  (2.2.1)\n\n  * Restored and undeprecated gladtex for HTML math (#4607).\n\n    +
  Added `GladTeX` constructor to `Text.Pandoc.Options.HTMLMathMethod`\n      [API
  change, reverts removal in v2.2]\n    + Restored and undeprecated `--gladtex` option,
  removed in v2.2.\n\n  * LaTeX reader:  Handle `$` in `/text{..}` inside math (#4576).\n\n
  \ * Org reader: Fix image filename recognition (Albert Krewinkel).\n    Use a function
  from the filepath library to check whether a string is a\n    valid file name.  The
  custom validity checker that was used before gave\n    wrong results (e.g. for absolute
  file paths on Windows,\n    kawabata/ox-pandoc#52).\n\n  * FB2 reader: Replace some
  errors with warnings (Alexander Krotov).\n\n  * HTML writer:\n\n    + Strip links
  from headers when creating TOC (#4340).\n      Otherwise the TOC entries will not
  link to the sections.\n    + Fix regression with tex math environments in HTML +
  MathJax (#4639).\n\n  * Muse writer (Alexander Krotov): Add support for left-align
  and\n    right-align classes (#4542).\n\n  * Docx writer: Support underline (#4633).\n\n
  \ * Text.Pandoc.Parsing: Lookahead for non-whitespace after\n    `singleQuoteStart`
  and `doubleQuoteStart` (#4637).\n\n  * `test-pandoc-utils.lua`:  more robust testing
  on both windows\n    and \\*nix. Previously the pipe tests were only run if\n    `\\bin/false`
  and `/bin/sed` were present, which they aren't\n    in default MacOS and Windows
  systems.  Fixed by using `tr`\n    and `false`, which should always be in the path
  on a \\*nix\n    system, and `find` and `echo` for Windows.\n\n  * Text.Pandoc.Shared:
  add `uriPathToPath`.\n    This adjusts the path from a file: URI in a way that is
  sensitive\n    to Windows/Linux differences.  Thus, on Windows,\n    `/c:/foo` gets
  interpreted as `c:/foo`, but on Linux,\n    `/c:/foo` gets interpreted as `/c:/foo`.
  \ See #4613.\n\n  * Use `uriPathToPath` with file: URIs (#4613).\n\n  * Revert piping
  HTML to pdf-engine (Mauro Bieg, #4413).  Use a temp\n    file as before.\n\n  *
  Text.Pandoc.Class: Catch IO errors when writing media files\n    and issue a warning,
  rather than an error (Francesco Occhipinti, #4559).\n\n  * Don't lowercase custom
  writer filename (Alexander Krotov, #4610).\n\n  * MANUAL (Mauro Bieg):\n\n    +
  Clarify truthiness in template variables (#2281).\n    + Clarify pipe table width
  calculation (#4520).\n\n  * ConTeXt template: New Greek fallback typeface (Pablo
  Rodríguez, #4405).\n    CMU Serif gives better typographic results than the previous\n
  \   Greek fallback DejaVu Serif.\n\n  * Make HTML template polyglot (#4606, OvidiusCicero),
  by making\n    `<link rel=\"stylesheet\" href=\"$css$\">` self-closing.\n\n  * Use
  texmath 0.11, allowing better translation of non-ASCII\n    characters in math (#4642).\n\npandoc
  (2.2)\n\n  * New input format: `fb2` (FictionBook2) (Alexander Krotov).\n\n  * Make
  `--ascii` work for all XML formats (ICML, OPML, JATS,...),\n    and for `ms` and
  `man`.\n\n  * Remove deprecated `--latexmathml`, `--gladtex`, `--mimetex`, `--jsmath`,
  `-m`,\n    `--asciimathml` options.\n\n  * New module Text.Pandoc.Readers.FB2, exporting
  readFB2 (Alexander\n    Krotov, API change).\n\n  * Markdown reader:\n\n    + Allow
  empty key-value attributes, like `title=\"\"` (#2944).\n    + Handle table w/o following
  blank line in fenced div (#4560).\n    + Remove \"fallback\" for `doubleQuote` parser.
  \ Previously the\n      parser tried to be efficient -- if no end double quote was
  found,\n      it would just return the contents.  But this could backfire in a\n
  \     case `**this should \"be bold**`, since the fallback would return\n      the
  content `\"be bold**` and the closing boldface delimiter\n      would never be encountered.\n
  \   + Improve computation of the relative width of the last column in a\n      multiline
  table, so we can round-trip tables without constantly\n      shrinking the last
  column.\n\n  * EPUB reader:\n\n    + Fix images with space in file path (#4344).\n\n
  \ * LaTeX reader:\n\n    + Properly resolve section numbers with `\\ref` and chapters
  (#4529).\n    + Parse sloppypar environment (#4517, Marc Schreiber).\n    + Improve
  handling of raw LaTeX (for markdown etc.) (#4589, #4594).\n      Previously there
  were some bugs in how macros were handled.\n    + Support `\\MakeUppercase`, `\\MakeLowercase',
  `\\uppercase`, `\\lowercase`,\n      and also `\\MakeTextUppercase` and `\\MakeTextLowercase`
  from textcase\n      (#4959).\n\n  * Textile reader:\n\n    + Fixed tables with
  no body rows (#4513).\n      Previously these raised an exception.\n\n  * Mediawiki
  reader:\n\n    + Improve table parsing (#4508).  This fixes detection of table\n
  \     attributes and also handles `!` characters in cells.\n\n  * DocBook reader:\n\n
  \   + Properly handle title in `section` element (#4526).\n      Previously we just
  got `section_title` for `section` (though `sect1`,\n      `sect2`, etc. were handled
  properly).\n    + Read tex math as output by asciidoctor (#4569, Joe Hermaszewski).\n\n
  \ * Docx reader:\n\n    + Combine adjacent CodeBlocks with the same attributes into\n
  \     a single CodeBlock.  This prevents a multiline codeblock in\n      Word from
  being read as different paragraphs.\n\n  * RST reader:\n\n    + Allow < 3 spaces
  indent under directives (#4579).\n    + Fix anonymous redirects with backticks (#4598).\n\n
  \ * Muse reader (Alexander Krotov):\n\n    + Add support for Text::Amuse multiline
  headings.\n    + Add `<math>` tag support.\n    + Add support for `<biblio>` and
  `<play>` tags.\n    + Allow links to have empty descriptions.\n    + Require block
  `<literal>` tags to be on separate lines.\n    + Allow `-` in anchors.\n    + Allow
  verse to be indented.\n    + Allow nested footnotes.\n    + Internal improvements.\n\n
  \ * Muse writer (Alexander Krotov):\n\n    + Escape `>` only at the beginning of
  a line.\n    + Escape `]` in image title.\n    + Escape `]` brackets in URLs as
  `%5D`.\n    + Only escape brackets when necessary.\n    + Escape ordered list markers.\n
  \   + Do not escape list markers unless preceded by space.\n    + Escape strings
  starting with space.\n    + Escape semicolons and markers after line break.\n    +
  Escape `;` to avoid accidental comments.\n    + Don't break headers, line blocks
  and tables with line breaks.\n    + Correctly output empty headings.\n    + Escape
  horizontal rule only if at the beginning of the line.\n    + Escape definition list
  terms starting with list markers.\n    + Place header IDs before header.\n    +
  Improve span writing.\n    + Do not join Spans in normalization.\n    + Don't align
  ordered list items.\n    + Remove key-value pairs from attributes before normalization.\n
  \   + Enable `--wrap=preserve` for all tests by default.\n    + Reduced `<verbatim>`
  tags in output.\n    + Internal changes.\n\n  * RST writer:\n\n    + Use more consistent
  indentation (#4563).  Previously we\n      used an odd mix of 3- and 4-space indentation.
  \ Now we use 3-space\n      indentation, except for ordered lists, where indentation
  must\n      depend on the width of the list marker.\n    + Flatten nested inlines
  (#4368, Francesco Occhipinti).\n      Nested inlines are not valid RST syntax, so
  we flatten them following\n      some readability criteria discussed in #4368.\n\n
  \ * EPUB writer:\n\n    + Ensure that `pagetitle` is always set, even when structured
  titles\n      are used.  This prevents spurious warnings about empty title\n      elements
  (#4486).\n\n  * FB2 writer (Alexander Krotov):\n\n    + Output links inline instead
  of producing notes.  Previously all links\n      were turned into footnotes with
  unclickable URLs inside.\n    + Allow emphasis and notes in titles.\n    + Don't
  intersperse paragraph with empty lines.\n    + Convert metadata value `abstract`
  to book annotation.\n    + Use `<empty-line />` for `HorizontalRule` rather than
  `LineBreak`.\n      FB2 does not have a way to represent line breaks inside paragraphs;\n
  \     previously we used `<empty-line />` elements, but these are not allowed\n
  \     inside paragraphs.\n\n  * Powerpoint writer (Jesse Rosenthal):\n\n    + Handle
  Quoted Inlines (#4532).\n    + Simplify code with `ParseXml`.\n    + Allow fallback
  options when looking for placeholder type.\n    + Check reference-doc for all layouts.\n
  \   + Simplify speaker notes logic.\n    + Change notes state to a simpler per-slide
  value.\n    + Remove `Maybe` from `SpeakerNotes` in `Slide`. `mempty`\n      means
  no speaker notes.\n    + Add tests for improved speaker notes.\n    + Handle speaker
  notes earlier in the conversion process.\n    + Keep notes with related blocks (#4477).
  \ Some blocks automatically\n      split slides (imgs, tables, `column` divs). We
  assume that any\n      speaker notes immediately following these are connected to
  these\n      elements, and keep them with the related blocks, splitting after them.\n
  \   + Remove `docProps/thumbnail.jpeg` in data dir (Jesse Rosenthal, #4588).\n      It
  contained a nonfree ICC color calibration profile and is not needed\n      for production
  of a powerpoint document.\n\n  * Markdown writer:\n\n    + Include a blank line
  at the end of the row in a single-row multiline\n      table, to prevent it from
  being interpreted as a simple table (#4578).\n\n  * CommonMark writer:\n\n    +
  Correctly ignore LaTeX raw blocks when `raw_tex` is not\n      enabled (#4527, quasicomputational).\n\n
  \ * EPUB writer:\n\n    + Add `epub:type=\"footnotes\"` to notes section in EPUB3
  (#4489).\n\n  * LaTeX writer:\n\n    + In beamer, don't use format specifier for
  default ordered lists\n      (#4556).  This gives better results for styles that
  put ordered list\n      markers in boxes or circles.\n    + Update `\\lstinline`
  delimiters (#4369, Tim Parenti).\n\n  * Ms writer:\n\n    + Use `\\f[R]` rather
  than `\\f[]` to reset font (#4552).\n    + Use `\\f[BI]` and `\\f[CB]` in headers,
  instead of `\\f[I]` and `\\f[C]`,\n      since the header font is automatically
  bold (#4552).\n    + Use `\\f[CB]` rather than `\\f[BC]` for monospace bold (#4552).\n
  \   + Create pdf anchor for a Div with an identifier (#4515).\n    + Escape `/`
  character in anchor ids (#4515).\n    + Improve escaping for anchor ids: we now
  use _uNNN_ instead of uNNN\n      to avoid ambiguity.\n\n  * Man writer:\n\n    +
  Don't escape U+2019 as `'` (#4550).\n\n  * Text.Pandoc.Options:\n\n    + Removed
  `JsMath`, `LaTeXMathML`, and `GladTeX` constructors from\n    `Text.Pandoc.Options.HTMLMathMethod`
  [API change].\n\n  * Text.Pandoc.Class:\n\n    + `writeMedia`: unescape URI-escaping
  in file path.  This avoids\n      writing things like `file%20one.png` to the file
  system.\n\n  * Text.Pandoc.Parsing:\n\n    + Fix `romanNumeral` parser (#4480).
  \ We previously accepted 'DDC'\n      as 1100.\n    + `uri`: don't treat `*` characters
  at end as part of URI (#4561).\n\n  * Text.Pandoc.MIME:\n\n    + Use the alias `application/eps`
  for EPS (#2067).\n      This will ensure that we retain the eps extension after
  reading the\n      image into a mediabag and writing it again.\n\n  * Text.Pandoc.PDF:\n\n
  \   + Use `withTempDir` in `html2pdf`.\n    + With `xelatex`, don't compress images
  til the last run (#4484).\n      This saves time for image-heavy documents.\n    +
  Don't try to convert EPS files (#2067).  `pdflatex` converts them\n      itself,
  and JuicyPixels can't do it.\n    + For `pdflatex`, use a temp directory in the
  working directory.\n      Otherwise we can have problems with the EPS conversion
  pdflatex\n      tries to do, which can't operate on a file above the working\n      directory
  without `--shell-escape`.\n\n  * Changes to tests to accommodate changes in pandoc-types.\n
  \   In <https://github.com/jgm/pandoc-types/pull/36> we changed\n    the table builder
  to pad cells.  This commit changes tests\n    (and two readers) to accord with this
  behavior.\n\n  * Set default extensions for `beamer` same as `latex`.\n\n  * LaTeX
  template:\n\n    + Add `beameroption` variable (#4359, Étienne Bersac).\n    + Use
  `pgfpages` package; this is needed for notes on second\n      screen in beamer (Étienne
  Bersac).\n    + Add `background-image` variable (#4601, John Muccigrosso).\n\n  *
  reveal.js template: Add `background-image` variable (#4600,\n    John Muccigrosso).\n\n
  \ * ms template: Fix date.  Previously `.ND` was used, but this only\n    works
  if you have a title page, which we don't.  Thanks to @teoric.\n\n  * Removed pragmas
  for unused extensions (#4506, Anabra).\n\n  * Fix bash completion for `--print-default-data-file`
  (#4549).\n    Previously this looked in the filesystem, even if pandoc\n    was
  compiled with `embed_data_files` (and sometimes it looked\n    in a nonexistent
  build directory).  Now the bash completion\n    script just includes a hard-coded
  list of data file names.\n\n  * MANUAL:\n\n    + Clarify template vs metadata variables
  (#4501, Mauro Bieg).\n    + Fix raw content example (#4479, Mauro Bieg).\n    +
  Specify that you use html for raw output in epub.\n    + Add examples for raw docx
  blocks (#4472, Tristan Stenner).\n      The documentation states that the target
  format name should match\n      the output format, which isn't the case for `docx`/`openxml`
  and\n      some others.\n    + Don't say that `empty_paragraphs` affects markdown
  output (#4540).\n    + Consolidate input/output format documentation (#4577, Mauro
  Bieg).\n\n  * New README template. Take in/out formats from manual.\n\n  * Fix example
  in lua-filters docs (#4459, HeirOfNorton).\n\n  * Use the `-threaded` GHC flag when
  building benchmarks (#4587,\n    Francesco Occhipinti).\n\n  * Bump temporary upper
  bound to 1.4.\n\n  * Use pandoc-citeproc 0.14.3.1.\n\n  * Use texmath-0.10.1.2 (fixes
  escapes in math in ms, #4597).\n\n  * Removed old lib directory.  This was used
  for something long ago,\n    but plays no role now.\n\n  * Removed unneeded data
  file `LaTeXMathML.js`.\n\n  * Create 64- and 32-bit versions of Windows binary packages.\n\npandoc
  (2.1.3)\n\n  * Docx reader (Jesse Rosenthal):\n\n    + Add tests for nested smart
  tags.\n    + Parse nested smart tags.\n    + Make unwrapSDT into a general `unwrap`
  function that can unwrap both\n      nested SDT tags and smartTags. This makes the
  SmartTags constructor in\n      the Docx type unnecessary, so we remove it (#4446).\n
  \   + Remove unused `docxWarnings` (Alexander Krotov).\n\n  * RST reader: Allow
  unicode bullet characters (#4454).\n\n  * Haddock reader:  Better table handling,
  using haddock-library's\n    new table support, if compiled against a version that\n
  \   includes it.  Note that tables with col/rowspans will not\n    translate well
  into Pandoc.\n\n  * Muse reader (Alexander Krotov):\n\n    + Require closing tag
  to have the same indentation as opening.\n    + Do not reparse blocks inside unclosed
  block tag (#4425).\n    + Parse `<class>` tag (supported by Emacs Muse).\n    +
  Do not produce empty Str element for unindented verse lines.\n    + Don't allow
  footnote references inside links.\n    + Allow URL to be empty.\n    + Require that
  comment semicolons are in the first column (#4551).\n    + Various internal improvements.\n\n
  \ * LaTeX reader:\n\n    + Add support to parse unit string of `\\SI` command (closes
  #4296,\n      Marc Schreiber).\n\n  * Haddock writer:  In the writer, we now render
  tables always as\n    grid tables, since Haddock supports these.\n\n  * DokuWiki
  writer: rewrite backSlashLineBreaks (#4445, Mauro Bieg).\n\n  * Docx writer: Fixed
  formatting of `DefaultStyle` ordered lists in\n    docx writer.  We want decimal
  for the top level, not lower roman.\n\n  * RST writer:\n\n    + Strip whitespace
  at beginning and ending of inline containers\n      (#4327, Francesco Occhipinti).\n
  \   + Filter out empty inline containers (#4434).  There is nothing in\n      RST
  that corresponds to e.g. `Emph []`, so we just ignore elements\n      like this
  (Francesco Occhipinti).\n\n  * Muse writer (Alexander Krotov):\n\n    + Support
  spans with anchors.\n    + Replace smallcaps with emphasis before normalization.\n
  \   + Output smallcaps as emphasis.\n    + Expand Cite before list normalization.\n
  \   + Write empty inline lists as `<verbatim></verbatim>`.\n    + Remove empty Str
  from the beginning of inline lists during normalization.\n    + Escape \"-\" to
  avoid creating bullet lists.\n    + Fix math expansion for more than one expression
  per paragraph.\n    + Expand math before inline list normalization.\n\n  * Dokuwiki
  writer: fix LineBreaks in Tables (#4313, Mauro Bieg).\n\n  * Ms writer:\n\n    +
  Asciify pdf anchors, since unicode anchors don't work (#4436).\n      Internal links
  should be converted automatically, so this shouldn't\n      affect users directly.\n
  \   + Don't escape hyphens as `\\-`; that's for a minus sign (#4467).\n\n  * Beamer
  writer: put hyperlink after `\\begin{frame}` and not in the title\n    (#4307).
  \ If it's in the title, then we get a titlebar on slides with\n    the `plain` attribute,
  when the id is non-null.  This fixes a regression\n    in 2.0.\n\n  * EPUB writer:
  Remove notes from TOC in nav.xhtml (#4453, Mauro Bieg).\n\n  * JATS writer: Remove
  extraneous, significant whitespace (#4335,\n    Nokome Bentley).\n\n  * html2pdf:
  inject base tag with current working directory (#4413, Mauro\n    Bieg).  This helps
  ensure that linked resources are included.\n\n  * Add Semigroup instances for everything
  for which we defined a\n    Monoid instance previously (API change):\n\n    + Text.Pandoc.Class.FileTree.\n
  \   + Text.Pandoc.Translations.Translations.\n    + Text.Pandoc.Extensions.Extensions.\n
  \   + Text.Pandoc.Readers.Odt.StyleReader.Styles.\n    + Text.Pandoc.Pretty.Doc.\n
  \   + Text.Pandoc.MediaBag.MediaBag.\n\n  * Add custom Prelude to give clean code
  for Monoid and Semigroup\n    that works with ghc 7.10-8.4.  The custom Prelude
  (`prelude/Prelude`)\n    is used for ghc versions < 8.4.  `NoImplicitPrelude` is
  used\n    in all source files, and Prelude is explicitly imported\n    (this is
  necessary for ghci to work properly with the custom prelude).\n\n  * Text.Pandoc.Writers.Shared
  (Francesco Occhipinti):\n\n    + Export `stripLeadingTrailingSpace`.\n    + Don't
  wrap lines in grid tables when `--wrap=none` (#4320).\n    + `gridTable`: Don't
  wrap lines in tables when `--wrap=none`.  Instead,\n      expand cells, even if
  it results in cells that don't respect relative\n      widths or surpass page column
  width.  This change affects RST,\n      Markdown, and Haddock writers.\n\n  * Raise
  error if someone tries to print docx, odt, etc. template (#4441).\n\n  * LaTeX template:
  Provide `bidi` package's option using\n    `\\PassOptionsToPackage`  (#4357, Václav
  Haisman).  This avoid a\n    clash when   `polyglossia` loads it first and then
  it is loaded again\n    for XeLaTeX.\n\n  * ConTeXt template: Added `pdfa` variable
  to generate PDF/A (#4294, Henri\n    Menke).  Instructions on how to install the
  ICC profiles on ConTeXt\n    standalone can be found in the wiki:\n    <http://wiki.contextgarden.net/PDFX#ICC_profiles>.\n
  \   If the ICC profiles are not available the log will contain error\n    messages.\n\n
  \ * Use latest pandoc-types, skylighting\n\n  * Use latest pandoc-citeproc in binary
  package.\n\n  * Bump upper bound for time, criterion, haddock-library, exceptions,\n
  \   http-types, aeson, haddock-library.\n\n  * Bump upper bound tasty-quickcheck
  0.10 (#4429, Felix Yan).\n\n  * pandoc.cabal:  fix up other-extensions and language
  fields.\n    Language is now consistently `Haskell2010`, and other-extensions\n
  \   is consistently `NoImplicitPrelude`. Everything else to be specified\n    in
  the module header as needed.\n\n  * Removed `old-locale` flag and Text.Pandoc.Compat.Time.\n
  \   This is no longer necessary since we no longer support ghc 7.8.\n\n  * Make
  `weigh-pandoc` into a benchmark program.\n    Remove `weigh-pandoc` flag.  `weigh-pandoc`
  is now built (and run)\n    automatically when you build (and run) benchmarks.\n\n
  \ * MANUAL: add instructions for background images reveal.js (#4325, John\n    Muccigrosso).\n\n
  \ * appveyor: use VS 2013 environment instead of VS 2015 for Windows builds.\n\n\npandoc
  (2.1.2)\n\n  * Markdown reader:\n\n    + Fix parsing bug with nested fenced divs
  (#4281).  Previously we allowed\n      \"nonindent spaces\" before the opening and
  closing `:::`, but this\n      interfered with list parsing, so now we require the
  fences to be flush with\n      the margin of the containing block.\n\n  * Commonmark
  reader:\n\n    + `raw_html` is now on by default.  It can be disabled explicitly\n
  \     using `-f commonmark-raw_html`.\n\n  * Org reader (Albert Krewinkel):\n\n
  \   + Move citation tests to separate module.\n    + Allow changing emphasis syntax
  (#4378).  The characters allowed before\n      and after emphasis can be configured
  via `#+pandoc-emphasis-pre` and\n      `#+pandoc-emphasis-post`, respectively. This
  allows to change which\n      strings are recognized as emphasized text on a per-document
  or even\n      per-paragraph basis.  Example:\n\n          #+pandoc-emphasis-pre:
  \"-\\t ('\\\"{\"\n          #+pandoc-emphasis-post: \"-\\t\\n .,:!?;'\\\")}[\"\n\n
  \ * LaTeX reader:\n\n    + Fixed comments inside citations (#4374).\n    + Fix regression
  in package options including underscore (#4424).\n    + Make `--trace` work.\n    +
  Fixed parsing of `tabular*` environment (#4279).\n\n  * RST reader:\n\n    + Fix
  regression in parsing of headers with trailing space (#4280).\n\n  * Muse reader
  (Alexander Krotov):\n\n    + Enable `<literal>` tags even if amuse extension is
  enabled.\n      Amusewiki disables <literal> tags for security reasons.\n      If
  user wants similar behavior in pandoc, RawBlocks and RawInlines\n      can be removed
  or replaced with filters.\n    + Remove space prefix from `<literal>` tag contents.\n
  \   + Do not consume whitespace while looking for closing end tag.\n    + Convert
  alphabetical list markers to decimal in round-trip test.\n      Alphabetical lists
  are an addition of Text::Amuse.\n      They are not present in Emacs Muse and can
  be ambiguous\n      when list starts with \"i.\", \"c.\" etc.\n    + Allow `<quote>`
  and other tags to be indented.\n    + Allow single colon in definition list term.\n
  \   + Fix parsing of verse in lists.\n    + Improved parsing efficiency.  Avoid
  `parseFromString`.\n      Lists are parsed in linear instead of exponential time
  now.\n    + Replace ParserState with MuseState.\n    + Prioritize lists with roman
  numerals over alphabetical lists.\n      This is to make sure \"i.\" starts a roman
  numbered list,\n      instead of a list with letter \"i\" (followed by \"j\", \"k\",
  ...\").\n    + Fix directive parsing.\n    + Parse definition lists with multiple
  descriptions.\n    + Parse next list item before parsing more item contents.\n    +
  Fixed a bug: headers did not terminate lists.\n    + Move indentation parsing from
  `definitionListItem` to `definitionList`.\n    + Paragraph indentation does not
  indicate nested quote.\n      Muse allows indentation to indicate quotation or alignment,\n
  \     but only on the top level, not within a <quote> or list.\n    + Require that
  block tags are on separate lines.\n      Text::Amuse already explicitly requires
  it anyway.\n    + Fix matching of closing inline tags.\n    + Various internal changes.\n
  \   + Fix parsing of nested definition lists.\n    + Require only one space for
  nested definition list indentation.\n    + Do not remove trailing whitespace from
  `<code>`.\n    + Fix parsing of trailing whitespace.  Newline after whitespace now\n
  \     results in softbreak instead of space.\n\n  * Docx reader (Jesse Rosenthal,
  except where noted):\n\n    + Handle nested sdt tags (#4415).\n    + Don't look
  up dependent run styles if `+styles` is enabled.\n    + Move pandoc inline styling
  inside custom-style span.\n    + Read custom styles (#1843).  This will read all
  paragraph and\n      character classes as divs and spans, respectively. Dependent
  styles\n      will still be resolved, but will be wrapped with appropriate style\n
  \     tags. It is controlled by the `+styles` extension (`-f docx+styles`).\n      This
  can be used in conjunction with the `custom-style` feature in the\n      docx writer
  for a pandoc-docx editing workflow. Users can convert from\n      an input docx,
  reading the custom-styles, and then use that same input\n      docx file as a reference-doc
  for producing an output docx file. Styles\n      will be maintained across the conversion,
  even if pandoc doesn't\n      understand them.\n    + Small change to Fields hyperlink
  parser.  Previously, unquoted string\n      required a space at the end of the line
  (and consumed it). Now we\n      either take a space (and don't consume it), or
  end of input.\n    + Pick table width from the longest row or header (Francesco
  Occhipinti,\n      #4360).\n\n  * Muse writer (Alexander Krotov):\n\n    + Change
  verse markup: `> ` instead of `<verse>` tag.\n    + Remove empty strings during
  inline normalization.\n    + Don't indent nested definition lists.\n    + Use unicode
  quotes for quoted text.\n    + Write image width specified in percent in Text::Amuse
  mode.\n    + Don't wrap displayMath into `<verse>`.\n    + Escape nonbreaking space
  (`~~`).\n    + Join code with different attributes during normalization.\n    +
  Indent lists inside Div.\n    + Support definitions with multiple descriptions.\n\n
  \ * Powerpoint writer (Jesse Rosenthal):\n\n    + Use table styles This will use
  the default table style in the\n      reference-doc file. As a result they will
  be easier when using\n      in a template, and match the color scheme.\n    + Remove
  empty slides.  Because of the way that slides were split, these\n      could be
  accidentally produced by comments after images.  When animations\n      are added,
  there will be a way to add an empty slide with either\n      incremental lists or
  pauses.\n    + Implement syntax highlighting.  Note that background colors can't\n
  \     be implemented in PowerPoint, so highlighting styles that require\n      these
  will be incomplete.\n    + New test framework for pptx.  We now compare the output
  of the\n      Powerpoint writer with files that we know to (a) not be corrupt,\n
  \     and (b) to show the desired output behavior (details below).\n    + Add `notesMaster`
  to `presentation.xml` if necessary.\n    + Ignore links and (end)notes in speaker
  notes.\n    + Output speaker notes.\n    + Read speaker note templates conditionally.
  \ If there are speaker\n      notes in the presentation, we read in the notesMasters
  templates\n      from the reference pptx file.\n    + Fix deletion track changes
  (#4303, Jesse Rosenthal).\n\n  * Markdown writer: properly escape @ to avoid capture
  as citation\n    (#4366).\n\n  * LaTeX writer:\n\n    + Put hypertarget inside figure
  environment (#4388).\n      This works around a problem with the endfloat package
  and\n      makes pandoc's output compatible with it.\n    + Fix image height with
  percentage (#4389).  This previously caused\n      the image to be resized to a
  percentage of textwidth, rather than\n      textheight.\n\n  * ConTeXt writer (Henri
  Menke):\n\n    + New section syntax and support `--section-divs` (#2609).\n      `\\section[my-header]{My
  Header}` ->\n      `\\section[title={My Header},reference={my-header}]`.\n      The
  ConTeXt writer now supports the `--section-divs` option to\n      write sections
  in the fenced style, with `\\startsection` and\n      `\\stopsection`.\n    + xtables:
  correct wrong usage of caption (Henri Menke).\n\n  * Docx writer:\n\n    + Fix image
  resizing with multiple images (#3930, Andrew Pritchard).\n    + Use new golden framework
  (Jesse Rosenthal).\n    + Make more deterministic to facilitate testing (Jesse Rosenthal).\n
  \     - `getUniqueId` now calls to the state to get an incremented digit,\n        instead
  of calling to P.uniqueHash.\n      - we always start the PRNG in mkNumbering/mkAbstractNum
  with the same\n        seed (1848), so our randoms should be the same each time.\n
  \   + Fix ids in comment writing (Jesse Rosenthal).  Comments from\n      `--track-changes=all`
  were producing corrupt docx, because the\n      writer was trying to get id from
  the `(ID,_,_)` field of\n      the attributes, and ignoring the \"id\" entry in
  the key-value pairs. We\n      now check both.\n\n  * Ms writer: Added papersize
  variable.\n\n  * TEI writer:\n\n    + Use `height` instead of `depth` for images
  (#4331).\n    + Ensure that id prefix is always used.\n    + Don't emit `role` attribute;
  that was a leftover from the\n      Docbook writer.\n    + Use 'xml:id', not 'id'
  attribute (#4371).\n\n  * AsciiDoc writer:\n\n    + Do not output implicit heading
  IDs (#4363, Alexander\n      Krotov).  Convert to `asciidoc-auto_identifiers` for
  old behaviour.\n\n  * RST writer:\n\n    + Remove `blockToRST'` moving its logic
  into `fixBlocks`\n      (Francesco Occhipinti).\n    + Insert comment between lists
  and quotes (#4248, Francesco Occchipinti).\n\n  * RST template: remove definition
  of 'math' role as raw.\n    This used to be needed prior to v 0.8 of docutils, but\n
  \   now math support is built-in.\n\n  * Slides: Use divs to set incremental/non-incremental
  (#4381,\n    Jesse Rosenthal).  The old method (list inside blockquote) still\n
  \   works, but we are encouraging the use of divs with class\n    `incremental`
  or `nonincremental`.\n\n  * Text.Pandoc.ImageSize:\n\n    + Make image size detection
  for PDFs more robust (#4322).\n    + Determine image size for PDFs (#4322).\n    +
  EMF Image size support (#4375, Andrew Pritchard).\n\n  * Text.Pandoc.Extensions:\n\n
  \   + Add `Ext_styles` (Jesse Rosenthal, API change).  This will be used in\n      the
  docx reader (defaulting to off) to read pargraph and character\n      styles not
  understood by pandoc (as divs and spans, respectively).\n    + Made `Ext_raw_html`
  default for `commonmark` format.\n\n  * Text.Pandoc.Parsing:\n\n    + Export `manyUntil`
  (Alexander Krotov, API change).\n    + Export improved `sepBy1` (Alexander Krotov).\n
  \   + Export list marker parsers: `upperRoman`, `lowerRoman`,\n      `decimal`,
  `lowerAlpha`, `upperAlpha` (Alexander Krotov, API change).\n\n  * Tests/Lua: fix
  tests on windows (Albert Krewinkel).\n\n  * Lua: register script name in global
  variable (#4393).  The name of the Lua\n    script which is executed is made available
  in the global Lua variable\n    `PANDOC_SCRIPT_FILE`, both for Lua filters and custom
  writers.\n\n  * Tests: Abstract powerpoint tests out to OOXML tests (Jesse Rosenthal).\n
  \   There is very little pptx-specific in these tests, so we abstract out\n    the
  basic testing function so it can be used for docx as well. This\n    should allow
  us to catch some errors in the docx writer that slipped\n    by the roundtrip testing.\n\n
  \ * Lua filters: store constructors in registry (Albert Krewinkel).  Lua\n    functions
  used to construct AST element values are stored in the Lua\n    registry for quicker
  access. Getting a value from the registry is much\n    faster than getting a global
  value (partly to idiosyncrasies of hslua);\n    this change results in a considerable
  performance boost.\n\n  * Documentation:\n\n    + `doc/org.md` Add draft of Org-mode
  documentation (Albert Krewinkel).\n    + `doc/lua-filters.md`: document global vars
  set for filters\n      (Albert Krewinkel).\n    + INSTALL.md: mention Stack version.
  (#4343, Adam Brandizzi).\n    + MANUAL: add documentation on custom styles (Jesse
  Rosenthal).\n    + MANUAL.txt: Document incremental and nonincremental divs (Jesse\n
  \     Rosenthal).  Blockquoted lists are still described, but fenced divs are\n
  \     presented in preference.\n    + MANUAL.txt: document header and footer variables
  (newmana).\n    + MANUAL.txt: self-contained implies standalone (#4304, Daniel Lublin).\n
  \   + CONTRIBUTING.md: label was renamed. (#4310, Alexander Brandizzi).\n\n  * Require
  tagsoup 0.14.3 (#4282), fixing HTML tokenization bug.\n\n  * Use latest texmath.\n\n
  \ * Use latest pandoc-citeproc.\n\n  * Allow exceptions 0.9.\n\n  * Require aeson-pretty
  0.8.5 (#4394).\n\n  * Bump blaze-markup, blaze-html lower bounds to 0.8, 0.9 (#4334).\n\n
  \ * Update tagsoup to 0.14.6 (Alexander Krotov, #4282).\n\n  * Removed ghc-prof-options.
  \ As of cabal 1.24, sensible defaults are used.\n\n  * Update default.nix to current
  nixpkgs-unstable for hslua-0.9.5 (#4348,\n    jarlg).\n\n\npandoc (2.1.1)\n\n  *
  Markdown reader:\n\n    + Don't coalesce adjacent raw LaTeX blocks if they are separated
  by a\n      blank line.  See lierdakil/pandoc-crossref#160.\n    + Improved `inlinesInBalancedBrackets`
  (#4272, jgm/pandoc-citeproc#315).\n      The change both improves performance and
  fixes a regression whereby\n      normal citations inside inline notes and figure
  captions were not\n      parsed correctly.\n\n  * RST reader:\n\n    + Better handling
  for headers with an anchor (#4240).  Instead of creating a\n      Div containing
  the header, we put the id directly on the header.\n      This way header promotion
  will work properly.\n    + Add aligned environment when needed in math (#4254).
  \ `rst2latex.py`\n      uses an `align*` environment for math in `.. math::` blocks,
  so this\n      math may contain line breaks.  If it does, we put the math in an\n
  \     `aligned` environment to simulate `rst2latex.py`'s behavior.\n\n  * HTML reader:\n\n
  \   + Fix col width parsing for percentages < 10% (#4262, n3fariox).\n\n  * LaTeX
  reader:\n\n    + Advance source position at end of stream.\n    + Pass through macro
  defs in `rawLaTeXBlock` even if the `latex_macros`\n      extension is set (#4246).
  \ This reverts to earlier behavior and is\n      probably safer on the whole, since
  some macros only modify things in\n      included packages, which pandoc's macro
  expansion can't modify.\n    + Fixed pos calculation in tokenizing escaped space.\n
  \   + Allow macro definitions inside macros (#4253).  Previously we went into\n
  \     an infinite loop with\n      ```\n      \\newcommand{\\noop}[1]{#1}\n      \\noop{\\newcommand{\\foo}[1]{#1}}\n
  \     \\foo{hi}\n      ```\n    + Fix inconsistent column widths (#4238).  This
  fixes a bug whereby column\n      widths for the body were different from widths
  for the header in some\n      tables.\n\n  * Docx reader (Jesse Rosenthal):\n\n
  \   + Parse hyperlinks in `instrText` tags (#3389, #4266).  This was a form of\n
  \     hyperlink found in older versions of word. The changes introduced for\n      this,
  though, create a framework for parsing further fields in MS Word\n      (see the
  spec, ECMA-376-1:2016, §17.16.5, for more on these fields).\n      We introduce
  a new module, `Text.Pandoc.Readers.Docx.Fields` which\n      contains a simple parsec
  parser. At the moment, only simple hyperlink\n      fields are accepted, but that
  can be extended in the future.\n\n  * Muse reader (Alexander Krotov):\n\n    + Parse
  `~~` as non-breaking space in Text::Amuse mode.\n    + Refactor list parsing.\n\n
  \ * Powerpoint writer (Jesse Rosenthal):\n\n    + Change reference to `notesSlide`
  to `endNotesSlide`.\n    + Move image sizing into `picProps`.\n    + Improve table
  placement.\n    + Make our own `_rels/.rels` file.\n    + Import reference-doc images
  properly.\n    + Move `Presentation.hs` out of `PandocMonad`.\n    + Refactor into
  separate modules.  T.P.W.Powerpoint.Presentation\n      defines the Presentation
  datatype and goes Pandoc->Presentation;\n      T.P.W.Pandoc.Output goes Presentation->Archive.\n
  \     Text.Pandoc.Writers.Powerpoint a thin wrapper around the two modules.\n    +
  Avoid overlapping blocks in column output.\n    + Position images correctly in two-column
  layout.\n    + Make content shape retrieval environment-aware.\n    + Improve image
  handling.  We now determine image and caption placement\n      by getting the dimensions
  of the content box in a given layout.\n      This allows for images to be correctly
  sized and positioned in a\n      different template.  Note that images without captions
  and headers are\n      no longer full-screened. We can't do this dependably in different\n
  \     layouts, because we don't know where the header is (it could be to\n      the
  side of the content, for example).\n    + Read presentation size from reference
  file.  Our presentation size is\n      now dependent on the reference/template file
  we use.\n    + Handle (sub)headers above slidelevel correctly.  Above the slidelevel,\n
  \     subheaders will be printed in bold and given a bit of extra space\n      before
  them. Note that at the moment, no distinction is made between\n      levels of headers
  above the slide header, though that can be changed.\n    + Check for required files.
  \ Since we now import from reference/dist\n      file by glob, we need to make sure
  that we're getting the files we\n      need to make a non-corrupt Powerpoint. This
  performs that check.\n    + Improve templating using `--reference-doc`.  Templating
  should work\n      much more reliably now.\n    + Include Notes slide in TOC.\n
  \   + Set notes slide header to slide-level.\n    + Add table of contents.  This
  is triggered by the `--toc` flag. Note\n      that in a long slide deck this risks
  overrunning the text box. The user\n      can address this by setting `--toc-depth=1`.\n
  \   + Set notes slide number correctly.\n    + Clean up adding metadata slide.  We
  want to count the slide numbers\n      correctly if it's in there.\n    + Add anchor
  links.  For anchor-type links (`[foo](#bar)`) we produce\n      an anchor link.
  In powerpoint these are links to slides, so we keep\n      track of a map relating
  anchors to the slides they occur on.\n    + Make the slide number available to the
  blocks.  For anchors,\n      block-processing functions need to know what slide
  number\n      they're in. We make the `envCurSlideId` available to blocks.\n    +
  Move `curSlideId` to environment.\n    + Allow setting `toc-title` in metadata.\n
  \   + Link notes to endnotes slide.\n\n  * Markdown writer:\n\n    + Fix cell width
  calculation (#4265).  Previously we could get\n      ever-lengthening cell widths
  when a table was run repeatedly through\n      `pandoc -f markdown -t markdown`.\n\n
  \ * LaTeX writer:\n\n    + Escape `&` in lstinline (Robert Schütz).\n\n  * ConTeXt
  writer:\n\n    + Use xtables instead of Tables (#4223, Henri Menke).\n      Default
  to xtables for context output.  Natural Tables are used\n      if the new `ntb`
  extension is set.\n\n  * HTML writer:\n\n     + Fixed footnote backlinks with `--id-prefix`
  (#4235).\n\n  * `Text.Pandoc.Extensions`:  Added `Ext_ntb` constructor (API change,\n
  \   Henri Menke).\n\n  * `Text.Pandoc.ImageSize`: add derived `Eq` instance to `Dimension`\n
  \   (Jesse Rosenthal, API change).\n\n  * Lua filters (Albert Krewinkel):\n\n    +
  Make `PANDOC_READER_OPTIONS` available.\n      The options which were used to read
  the document are made available to\n      Lua filters via the `PANDOC_READER_OPTIONS`
  global.\n    + Add lua module `pandoc.utils.run_json_filter`, which runs a JSON
  filter\n      on a Pandoc document.\n    + Refactor filter-handling code into `Text.Pandoc.Filter.JSON`,\n
  \     `Text.Pandoc.Filter.Lua`, and `Text.Pandoc.Filter.Path`.\n    + Improve error
  messages.  Provide more context about the task\n      which caused an error.\n\n
  \ * data/pandoc.lua (Albert Krewinkel):\n\n    + Accept singleton inline as a list.
  \ Every constructor which accepts a\n      list of inlines now also accepts a single
  inline element for\n      convenience.\n    + Accept single block as singleton list.
  Every constructor which accepts\n      a list of blocks now also accepts a single
  block element for\n      convenience.  Furthermore, strings are accepted as shorthand
  for\n      `{pandoc.Str \"text\"}` in constructors.\n    + Add attr, listAttributes
  accessors.  Elements with\n      attributes got an additional `attr` accessor. Attributes
  were\n      accessible only via the `identifier`, `classes`, and `attributes`,\n
  \     which was in conflict with the documentation, which indirectly states\n      that
  such elements have the an `attr` property.\n    + Drop `_VERSION`.  Having a `_VERSION`
  became superfluous, as this\n      module is closely tied to the pandoc version,
  which is available via\n      `PANDOC_VERSION`.\n    + Fix access to Attr components.
  \ Accessing an Attr value (e.g.,\n      ` Attr().classes`) was broken; the more
  common case of accessing it via\n      an Inline or Block element was unaffected
  by this.\n\n  * Move `metaValueToInlines` to from Docx writer to\n    `Text.Pandoc.Writers.Shared`,
  so it can be used by other writers\n    (Jesse Rosenthal).\n\n  * MANUAL.txt:\n\n
  \   + Clarify otherlangs in LaTeX (#4072).\n    + Clarify `latex_macros` extension.\n
  \   + Recommend use of `raw_attribute` extension in header includes (#4253).\n\n
  \ * Allow latest QuickCheck, tasty, criterion.\n\n  * Remove custom prelude and
  ghc 7.8 support.\n\n  * Reduce compiler noise (exact paths for compiled modules).\n\npandoc
  (2.1)\n\n  * Allow filters and lua filters to be interspersed (#4196).  Previously\n
  \   we ran all lua filters before JSON filters.  Now we run filters in\n    the
  order they are presented on the command line, whether lua or JSON.\n    There are
  two incompatible API changes: The type of `applyFilters`\n    has changed, and `applyLuaFilters`
  has been removed.  `Filter` is\n    also now exported.\n\n  * Use latest skylighting
  and omit the `missingIncludes` check, fixing\n    a major performance regression
  in earlier releases of the 2.x series\n    (#4226).  Behavior change: If you use
  a custom syntax definition that\n    refers to a syntax you haven't loaded, pandoc
  will now complain when\n    it is highlighting the text, rather than doing a check
  at the start.\n    This change dramatically speeds up invocations of pandoc on short\n
  \   inputs.\n\n  * Text.Pandoc.Class: make `FileTree` opaque (don't export\n    `FileTree`
  constructor).  This forces users to interact with it using\n    `insertInFileTree`
  and `getFileInfo`, which normalize file names.\n\n  * Markdown reader:\n\n    +
  Rewrite `inlinesInBalancedBrackets`.  The rewrite is much more\n      direct, avoiding
  `parseFromString`.  And it performs significantly\n      better; unfortunately,
  parsing time still increases exponentially\n      (see #1735).\n    + Avoid parsing
  raw tex unless `\\` + letter seen.  This seems to\n      help with the performance
  problem, #4216.\n\n  * LaTeX reader: Simplified a check for raw tex command.\n\n
  \ * Muse reader (Alexander Krotov):\n\n    + Enable round trip test (#4107).\n    +
  Automatically translate `#cover` into `#cover-image`.\n      Amusewiki uses #cover
  directive to specify cover image.\n\n  * Docx reader (Jesse Rosenthal):\n\n    +
  Allow for insertion/deletion of paragraphs (#3927).\n      If the paragraph has
  a deleted or inserted paragraph break (depending\n      on the track-changes setting)
  we hold onto it until the next\n      paragraph. This takes care of accept and reject.
  For this we introduce\n      a new state which holds the ils from the previous para
  if necessary.\n      For `--track-changes=all`, we add an empty span with class\n
  \     `paragraph-insertion`/`paragraph-deletion` at the end of the paragraph\n      prior
  to the break to be inserted or deleted.\n    + Remove unused anchors (#3679).  Docx
  produces a lot of anchors with\n      nothing pointing to them---we now remove these
  to produce cleaner\n      output. Note that this has to occur at the end of the
  process\n      because it has to follow link/anchor rewriting.\n    + Read multiple
  children of `w:sdtContents`.\n    + Combine adjacent anchors.  There isn't any reason
  to have numerous\n      anchors in the same place, since we can't maintain docx's\n
  \     non-nesting overlapping. So we reduce to a single anchor.\n    + Improved
  tests.\n\n  * Muse writer (Alexander Krotov): don't escape URIs from AST\n\n  *
  Docx writer:\n\n    + Removed redundant subtitle in title (Sebastian Talmon).\n
  \   + `firstRow` table definition compatibility for Word 2016 (Sebastian\n      Talmon).
  \ Word 2016 seems to use a default value of \"1\" for table\n      headers, if there
  is no firstRow definition (although a default\n      value of 0 is documented),
  so all tables get the first Row formatted\n      as header.  Setting the parameter
  to 0 if the table has no header\n      row fixes this for Word 2016\n    + Fix custom
  styles with spaces in the name (#3290).\n\n  * Powerpoint writer (Jesse Rosenthal):\n\n
  \   + Ignore Notes div for parity with other slide outputs.\n    + Set default slidelevel
  correctly.  We had previously defaulted to\n      slideLevel 2. Now we use the correct
  behavior of defaulting to the\n      highest level header followed by content. We
  change an expected test\n      result to match this behavior.\n    + Split blocks
  correctly for linked images.\n    + Combine adjacent runs.\n    + Make inline code
  inherit code size.  Previously (a) the code size\n      wasn't set when we force
  size, and (b) the properties was set from\n      the default, instead of inheriting.\n
  \   + Simplify `replaceNamedChildren` function.\n    + Allow linked images.  The
  following markdown:\n      `[![Image Title](image.jpg)](http://www.example.com)`\n
  \     will now produce a linked image in the resulting PowerPoint file.\n    + Fix
  error with empty table cell.  We require an empty `<a:p>` tag,\n      even if the
  cell contains no paragraphs---otherwise PowerPoint\n      complains of corruption.\n
  \   + Implement two-column slides.  This uses the columns/column div\n      format
  described in the pandoc manual. At the moment, only two\n      columns (half the
  screen each) are allowed. Custom widths are not\n      supported.\n    + Added more
  tests.\n\n  * OpenDocument/ODT writers: improved rendering of formulas (#4170, oltolm).\n\n
  \ * Lua filters (Albert Krewinkel):\n\n    + `data/pandoc.lua`: drop 'pandoc-api-version'
  from Pandoc objects\n    + The current pandoc-types version is made available to
  Lua programs in\n      the global `PANDOC_API_VERSION`. It contains the version
  as a list of\n      numbers.\n    + The pandoc version available as a global `PANDOC_VERSION`
  (a list\n      of numbers).\n    + `data/pandoc.lua`: make `Attr` an `AstElement`.\n
  \   + `data/pandoc.lua`: make all types subtypes of `AstElement`.\n      `Pandoc`,
  `Meta`, and `Citation` were just plain functions and did\n      not set a metatable
  on the returned value, which made it difficult\n      to amend objects of these
  types with new behavior. They are now\n      subtypes of AstElement, meaning that
  all their objects can gain\n      new features when a method is added to the behavior
  object\n      (e.g., `pandoc.Pandoc.behavior`).\n    + `data/pandoc.lua`: split
  type and behavior tables.  Clearly distinguish\n      between a type and the behavioral
  properties of an instance of that\n      type. The behavior of a type (and all its
  subtypes) can now be\n      amended by adding methods to that types `behavior` object,
  without\n      exposing the type objects internals.  E.g.:\n      ```lua\n      pandoc.Inline.behavior.frob
  = function () print'42' end\n      local str = pandoc.Str'hello'\n      str.frob()
  -- outputs '42'\n      ```\n    + `data/pandoc.lua`: fix Element inheritance.  Extending
  all elements\n      of a given type (e.g., all inline elements) was difficult, as
  the\n      table used to lookup unknown methods would be reset every time a\n      new
  element of that type was created, preventing recursive property\n      lookup. This
  is was changed in that all methods and attributes of\n      supertypes are now available
  to their subtypes.\n    + `data/pandoc.lua`: fix attribute names of Citation (#4222).
  \ The\n      fields were named like the Haskell fields, not like the documented,\n
  \     shorter version.  The names are changed to match the documentation\n      and
  Citations are given a shared metatable to enable simple\n      extensibility.\n
  \   + `data/pandoc.lua`: drop function `pandoc.global_filter`.\n    + Bump `hslua`
  version to 0.9.5.  This version fixes a bug that made it\n      difficult to handle
  failures while getting lists or a Map from Lua.\n      A bug in pandoc, which made
  it necessary to always pass a tag when\n      using MetaList or MetaBlock, is fixed
  as a result. Using the pandoc\n      module's constructor functions for these values
  is now optional\n      (if still recommended).\n    + Stop exporting `pushPandocModule`
  (API change).  The introduction\n      of `runPandocLua` renders direct use of this
  function obsolete.\n    + Update generation of module docs for lua filters.\n    +
  `Lua.Module.Utils`: make stringify work on `MetaValues` (John\n      MacFarlane).
  \ I'm sure this was intended in the first place,\n      but currently only `Meta`
  is supported.\n\n  * Improve benchmarks.\n\n    + Set the default extensions properly.\n
  \   + Improve benchmark argument parsing.  You can now say\n      `make bench BENCHARGS=\"markdown
  latex reader\"` and both the\n      markdown and latex readers will be benchmarked.\n\n
  \ * MANUAL.txt simplify and add more structure (Mauro Bieg).\n\n  * Generate README.md
  from template and MANUAL.txt.\n    `make README.md` will generate the README.md
  after changes\n    to MANUAL.txt have been made.\n\n  * Update copyright notices
  to include 2018 (Albert Krewinkel).\n\npandoc (2.0.6)\n\n  * Added `jats` as an
  input format.\n\n    + Add Text.Pandoc.Readers.JATS, exporting `readJATS` (API\n
  \     change) (Hamish Mackenzie).\n    + Improved citation handling in JATS reader.
  \ JATS citations\n      are now converted to pandoc citations, and JATS ref-lists\n
  \     are converted into a `references` field in metadata, suitable\n      for use
  with pandoc-citeproc. Thus a JATS article with embedded\n      bibliographic information
  can be processed with pandoc and\n      pandoc-citeproc to produce a formatted bibliography.\n\n
  \ * Allow `--list-extensions` to take an optional FORMAT argument.\n    This lists
  the extensions set by default for the selected FORMAT.\n    The extensions are now
  alphabetized, and the `+` or `-`\n    indicating the default setting comes before,
  rather than after,\n    the extension.\n\n  * Markdown reader:\n\n    + Preserve
  original whitespace between blocks.\n    + Recognize `\\placeformula` as context.\n
  \   + Be pickier about table captions.  A caption starts with a `:` which\n      can't
  be followed by punctuation.  Otherwise we can falsely interpret\n      the start
  of a fenced div, or even a table header line like\n      `:--:|:--:`, as a caption.\n
  \   + Always use four space rule for example lists.  It would be awkward\n      to
  indent example list contents to the first non-space character after\n      the label,
  since example list labels are often long.  Thanks to\n      Bernhard Fisseni for
  the suggestion.\n    + Improve raw tex parsing.  Note that the Markdown reader is
  also\n      affected by the `latex_macros` extension changes described below\n      under
  the LaTeX reader.\n\n  * LaTeX reader:\n\n    + `latex_macros` extension changes
  (#4179).  Don't pass through macro\n      definitions themselves when `latex_macros`
  is set.  The macros\n      have already been applied.  If `latex_macros` is enabled,
  then\n      `rawLaTeXBlock` in Text.Pandoc.Readers.LaTeX will succeed in parsing\n
  \     a macro definition, and will update pandoc's internal macro map\n      accordingly,
  but the empty string will be returned.\n    + Export `tokenize`, `untokenize` (API
  change).\n    + Use `applyMacros` in `rawLaTeXBlock`, `rawLaTeXInline`.\n    + Refactored
  `inlineCommand`.\n    + Fix bug in tokenizer.  Material following `^^` was\n      dropped
  if it wasn't a character escape.  This only affected\n      invalid LaTeX, so we
  didn't see it in the wild, but it appeared\n      in a QuickCheck test failure.\n
  \   + Fix regression in LateX tokenization (#4159).  This mainly affects the\n      Markdown
  reader when parsing raw LaTeX with escaped spaces.\n    + Add tests of LaTeX tokenizer.\n
  \   + Support `\\foreignlanguage` from babel.\n    + Be more tolerant of `&` character
  (#4208).  This allows us to parse\n      unknown tabular environments as raw LaTeX.\n\n
  \ * Muse reader (Alexander Krotov):\n\n    + Parse anchors immediately after headings
  as IDs.\n    + Require that note references does not start with 0.\n    + Parse
  empty comments correctly.\n\n  * Org reader (Albert Krewinkel):\n\n    + Fix asterisks-related
  parsing error (#4180).\n    + Support minlevel option for includes (#4154).  The
  level of headers\n      in included files can be shifted to a higher level by specifying
  a\n      minimum header level via the `:minlevel` parameter. E.g.\n      `#+include:
  \"tour.org\" :minlevel 1` will shift the headers in\n      tour.org such that the
  topmost headers become level 1 headers.\n    + Break-up org reader test file into
  multiple modules.\n\n  * OPML reader:\n\n    + Enable raw HTML and other extensions
  by default for notes\n      (#4164).  This fixes a regression in 2.0.  Note that
  extensions can\n      now be individually disabled, e.g.  `-f opml-smart-raw_html`.\n\n
  \ * RST reader:\n\n    + Allow empty list items (#4193).\n    + More accurate parsing
  of references (#4156).  Previously we erroneously\n      included the enclosing
  backticks in a reference ID (#4156).  This\n      change also disables interpretation
  of syntax inside references, as\n      in docutils.  So, there is no emphasis in
  `` `my *link*`_ ``.\n\n  * Docx reader:\n\n    + Continue lists after interruption
  (#4025, Jesse Rosenthal).\n      Docx expects that lists will continue where they
  left off after an\n      interruption and introduces a new id if a list is starting
  again. So\n      we keep track of the state of lists and use them to define a \"start\"\n
  \     attribute, if necessary.\n    + Add tests for structured document tags unwrapping
  (Jesse Rosenthal).\n    + Preprocess Document body to unwrap `w:sdt` elements (Jesse
  Rosenthal,\n      #4190).\n\n  * Plain writer:\n\n    + Don't linkify table of contents.\n\n
  \ * RST writer:\n\n    + Fix anchors for headers (#4188).  We were missing an `_`.\n\n
  \ * PowerPoint writer (Jesse Rosenthal):\n\n    + Treat lists inside BlockQuotes
  as lists.  We don't yet produce\n      incremental lists in PowerPoint, but we should
  at least treat lists\n      inside BlockQuotes as lists, for compatibility with
  other slide formats.\n    + Add ability to force size.  This replaces the more specific\n
  \     `blockQuote runProp`, which only affected the size of blockquotes. We\n      can
  use this for notes, etc.\n    + Implement notes.  This currently prints all notes
  on a final slide.\n      Note that at the moment, there is a danger of text overflowing
  the\n      note slide, since there is no logic for adding further slides.\n    +
  Implement basic definition list functionality to PowerPoint writer.\n    + Don't
  look for default template file for Powerpoint (#4181).\n    + Add pptx to isTextFormat
  list.  This is used to check standalone\n      and not writing to the terminal.\n
  \   + Obey slide level option (Jesse Rosenthal).\n    + Introduce tests.\n\n  *
  Docx writer:\n\n    + Ensure that `distArchive` is the one that comes with pandoc\n
  \     (#4182).  Previously a `reference.docx` in `~/.pandoc` (or the user data\n
  \     dir) would be used instead, and this could cause problems because a\n      user-modified
  docx sometimes lacks vital sections that we count\n      on the `distArchive` to
  supply.\n\n  * Org writer:\n\n    + Do not wrap \"-\" to avoid accidental bullet
  lists (Alexander Krotov).\n    + Don't allow fn refs to wrap to beginning of line
  (#4171, with help from\n      Alexander Krotov).  Otherwise they can be interpreted
  as footnote\n      definitions.\n\n  * Muse writer (Alexander Krotov):\n\n    +
  Don't wrap note references to the next line (#4172).\n\n  * HTML writer:\n\n    +
  Use br elements in line blocks instead of relying on CSS\n      (#4162).  HTML-based
  templates have had the custom CSS for\n      `div.line-block` removed.  Those maintaining
  custom templates will want\n      to remove this too.  We still enclose line blocks
  in a div with class\n      `line-block`.\n\n  * LaTeX writer:\n\n    + Use `\\renewcommand`
  for `\\textlatin` with babel (#4161).\n      This avoids a clash with a deprecated
  `\\textlatin` command defined\n      in Babel.\n    + Allow fragile=singleslide
  attribute in beamer slides (#4169).\n    + Use `\\endhead` after `\\toprule` in
  headerless tables (#4207).\n\n  * FB2 writer:\n\n    + Add cover image specified
  by `cover-image` meta (Alexander Krotov,\n      #4195).\n\n  * JATS writer (Hamish
  Mackenzie):\n\n    + Support writing `<fig>` and `<table-wrap>` elements\n      with
  `<title>` and `<caption>` inside them by using Divs with class set\n      to one
  of `fig`, `table-wrap` or `caption` (Hamish Mackenzie).  The\n      title is included
  as a Heading so the constraint on where Heading can\n      occur is also relaxed.\n
  \   + Leave out empty alt attributes on links.\n    + Deduplicate image mime type
  code.\n    + Make `<p>` optional in `<td>` and `<th>` (#4178).\n    + Self closing
  tags for empty xref (#4187).\n    + Improve support for code language.\n\n  * Custom
  writer:\n\n    + Use init file to setup Lua interpreter (Albert Krewinkel).\n      The
  same init file (`data/init`) that is used to setup the Lua\n      interpreter for
  Lua filters is also used to setup the interpreter of\n      custom writers.lua.\n
  \   + Define instances for newtype wrapper (Albert Krewinkel).  The custom\n      writer
  used its own `ToLuaStack` instance definitions, which made\n      it difficult to
  share code with Lua filters, as this could result\n      in conflicting instances.
  \ A `Stringify` wrapper is introduced to\n      avoid this problem.\n    + Added
  tests for custom writer.\n    + Fixed definition lists and tables in `data/sample.lua`.\n\n
  \ * Fixed regression: when target is PDF, writer extensions were being\n    ignored.
  \ So, for example, `pandoc -t latex-smart -o file.pdf`\n    did not work properly.\n\n
  \ * Lua modules (Albert Krewinkel):\n\n    + Add `pandoc.utils` module, to hold
  utility functions.\n    + Create a Haskell module Text.Pandoc.Lua.Module.Pandoc
  to\n      define the `pandoc` lua module.\n    + Make a Haskell module for each
  Lua module. Move definitions for the\n      `pandoc.mediabag` modules to a separate
  Haskell module.\n    + Move `sha1` from the main `pandoc` module to `pandoc.utils`.\n
  \   + Add function `pandoc.utils.hierarchicalize` (convert list of\n      Pandoc
  blocks into (hierarchical) list of Elements).\n    + Add function `pandoc.utils.normalize_date`
  (parses a date and\n      converts it (if possible) to \"YYYY-MM-DD\" format).\n
  \   + Add function `pandoc.utils.to_roman_numeral` (allows conversion\n      of
  numbers below 4000 into roman numerals).\n    + Add function `pandoc.utils.stringify`
  (converts any AST element\n      to a string with formatting removed).\n    + `data/init.lua`:
  load `pandoc.utils` by default\n    + Turn pipe, read into full Haskell functions.
  \ The `pipe` and `read`\n      utility functions are converted from hybrid lua/haskell
  functions\n      into full Haskell functions. This avoids the need for intermediate\n
  \     `_pipe`/`_read` helper functions, which have dropped.\n    + pandoc.lua: re-add
  missing MetaMap function.  This was a bug\n      introduced in version 2.0.4.\n\n
  \ * Text.Pandoc.Class: Add `insertInFileTree` [API change].  This gives\n    a pure
  way to insert an ersatz file into a `FileTree`.  In addition, we\n    normalize
  paths both on insertion and on lookup.\n\n  * Text.Pandoc.Shared: export `blocksToInlines'`
  (API change, Maura Bieg).\n\n  * Text.Pandoc.MIME: Add opus to MIME type table as
  audio/ogg (#4198).\n\n  * Text.Pandoc.Extensions:   Alphabetical order constructors
  for\n    `Extension`.  This makes them appear in order in `--list-extensions`.\n\n
  \ * Allow lenient decoding of latex error logs, which are not always\n    properly
  UTF8-encoded (#4200).\n\n  * Update latex template to work with recent versions
  of beamer.\n    The old template produced numbered sections with some recent\n    versions
  of beamer.  Thanks to Thomas Hodgson.\n\n  * Updated reference.docx (#4175).  Instead
  of just \"Hello, world\", the\n    document now contains exemplars of most of the
  styles that have an\n    effect on pandoc documents.  This makes it easier to see
  the effect\n    of style changes.\n\n  * Removed `default.theme` data file (#4096).
  \ It is no longer needed now\n    that we have `--print-highlight-style`.\n\n  *
  Added `stack.lts9.yaml` for building with lts 9 and ghc 8.0.2.\n    We still need
  this for the alpine static linux build, since\n    we don't have ghc 8.2.2 for that
  yet.\n\n  * Removed `stack.pkg.yaml`.  We only really need `stack.yaml`; we\n    can
  put flag settings for pandoc-citeproc there.\n\n  * Makefile: Add 'trypandoc' and
  'pandoc-templates' targets to\n    make releases easier.\n\n  * MANUAL.txt:\n\n
  \   + Add note on what formats have `+smart` by default.\n    + Use native syntax
  for custom-style (#4174, Mauro Bieg).\n    + Introduce dedicated Extensions section,
  since some extensions\n      affect formats other than markdown (Mauro Bieg, #4204).\n
  \   + Clarify default html output for `--section-divs` (Richard Edwards).\n\n  *
  filters.md: say that Text.Pandoc.JSON comes form pandoc-types.\n    Closes jgm/pandoc-website#16.\n\n
  \ * epub.md: Delete removed `-S` option from command (#4151, Georger Araújo).\n\npandoc
  (2.0.5)\n\n  * Fix a bug in 2.0.4, whereby pandoc could not read the theme files\n
  \   generated with `--print-highlight-style` (#4133).  Improve JSON\n    serialization
  of styles.\n\n  * Fix CSS issues involving line numbers (#4128).\n    Highlighted
  code blocks are now enclosed in a div with class `sourceCode`.\n    Highlighting
  CSS no longer sets a generic color for pre and code; we only\n    set these for
  class `sourceCode`.\n\n  * `--pdf-engine-opt`: fix bug where option order was reversed
  (#4137).\n\n  * Add PowerPoint (pptx) writer (Jesse Rosenthal).\n    It works following
  the standard Pandoc conventions for making other\n    sorts of slides. Caveats:\n\n
  \   + Syntax highlighting is not yet implemented. (This is difficult\n      because
  there are no character classes in Powerpoint.)\n    + Footnotes and Definition lists
  are not yet implemented. (Notes will\n      usually take the form of a final slide.\n
  \   + Image placement and auto-resizing has a few glitches.\n    + Reference powerpoint
  files don't work dependably from the command\n      line. This will be implemented,
  but at the moment users are advised\n      to change themes from within Powerpoint.\n\n
  \ * Create shared Text.Pandoc.Writers.OOXML module (Jesse Rosenthal).\n    This
  is for functions used by both Powerpoint and Docx writers.\n\n  * Add default pptx
  data for Powerpoint writer (Jesse Rosenthal).\n\n  * Add `empty_paragraphs` extension.\n\n
  \   + Deprecate `--strip-empty-paragraphs` option.  Instead we now\n      use an
  `empty_paragraphs` extension that can be enabled on\n      the reader or writer.
  \ By default, disabled.\n    + Add `Ext_empty_paragraphs` constructor to `Extension`.\n
  \   + Revert \"Docx reader: don't strip out empty paragraphs.\"\n      This reverts
  commit d6c58eb836f033a48955796de4d9ffb3b30e297b.\n    + Implement `empty_paragraphs`
  extension in docx reader and writer,\n      opendocument writer, HTML reader and
  writer.\n    + Add tests for `empty_paragraphs` extension.\n\n  * Markdown reader:\n\n
  \   + Don't parse native div as table caption (#4119).\n    + Improved computation
  of column widths in pipe tables.\n      Pipe tables with lines longer than the text
  width (as set\n      by `--columns`) are now scaled to text width, with the relative\n
  \     widths of columns determined by the ratios between the\n      header lines.
  \ Previously we computed column widths using\n      the ratio of header line lengths
  to column width, so that\n      tables with narrow header lines were extremely thin,
  which\n      was very rarely the desired result.\n\n  * LaTeX reader: fix `\\` before
  newline (#4134).  This should be a space,\n    as long as it's not followed by a
  blank line. This has been fixed at the\n    tokenizer level.\n\n  * Muse reader
  (Alexander Krotov):\n\n    + Add test for `#disable-tables` directive in Emacs mode.\n
  \   + Don't allow emphasis to be preceded by letter.\n    + Add underline support
  in Emacs Muse mode..\n    + Support multiline directives in Amusewiki mode\n\n  *
  Man writer: omit internal links (#4136).  That is, just print the link\n    text
  without the URL.\n\n  * Markdown reader: accept processing instructions as raw HTML
  (#4125).\n\n  * Lua filters (Albert Krewinkel):\n\n    + Use script to initialize
  the interpreter.  The file `init.lua` is\n      used to initialize the Lua interpreter
  which is used in Lua filters.\n      This gives users the option to require libraries
  which they want to\n      use in all of their filters, and to extend default modules.\n
  \   + Fix package loading for Lua 5.1.  The list of package searchers is\n      named
  `package.loaders` in Lua 5.1 and LuaJIT, and `package.searchers`\n      in Lua 5.2
  and later.\n    + Refactor lua module handling.  The integration with Lua's package/module\n
  \     system is improved: A pandoc-specific package searcher is prepended to\n      the
  searchers in `package.searchers`. The modules `pandoc` and\n      `pandoc.mediabag`
  can now be loaded via `require`.\n    + Bump lower bound of hslua.  The release
  hslua 0.9.3 contains a new\n      function which makes using Haskell functions as
  package loaders much\n      easier.\n\n  * reveal.js template:  add title-slide
  identifier to title slide (#4120).\n    This allows it to be styled more easily.\n\n
  \ * LaTeX template: Added support for `pagestyle` variable (#4135,\n    Thomas Hodgson)\n\n
  \ * Add `-threaded` to ghc-options for executable (#4130, fixes a build\n    error
  on linux).\n\n\npandoc (2.0.4)\n\n  * Add `--print-highlight-style` option.  This
  generates a JSON version\n    of a highlighting style, which can be saved as a `.theme`
  file, modified,\n    and used with `--highlight-style` (#4106, #4096).\n\n  * Add
  `--strip-empty-paragraphs` option.  This works for any input format.\n    It is
  primarily intended for use with docx and odt documents where\n    empty paragraphs
  have been used for inter-paragraph spaces.\n\n  * Support `--webtex` for `gfm` output.\n\n
  \ * Recognize `.muse` file extension.\n\n  * Support beamer `\\alert` in LaTeX reader.
  Closes #4091.\n\n  * Docx reader: don't strip out empty paragraphs (#2252).\n    Users
  who have a conversion pipeline from docx may want to consider adding\n    `--strip-empty-paragraphs`
  to the command line.\n\n  * Org reader (Albert Krewinkel): Allow empty list items
  (#4090).\n\n  * Muse reader (Alexander Krotov):\n\n    + Parse markup in definition
  list terms.\n    + Allow definition to end with EOF.\n    + Make code blocks round
  trip.\n    + Drop common space prefix from list items.\n    + Add partial round
  trip test.\n    + Don't interpret XML entities.\n    + Remove `nested`.\n    + Parse
  `~~` as non-breaking space in Emacs mode.\n    + Correctly remove indentation from
  notes.  Exactly one space is\n      required and considered to be part of the marker.\n
  \   + Allow list items to be empty.\n    + Add ordered list test.\n    + Add more
  multiline definition tests.\n    + Don't allow blockquotes within lists.\n    +
  Fix reading of multiline definitions.\n    + Add inline `<literal>` support.\n    +
  Concatenate inlines of the same type\n\n  * Docx writer: allow empty paragraphs
  (#2252).\n\n  * CommonMark/gfm writer:\n\n    + Use raw html for native divs/spans
  (#4113).  This allows a pandoc\n      markdown native div or span to be rendered
  in gfm using raw html tags.\n    + Implement `raw_html` and `raw_tex` extensions.
  \ Note that `raw_html`\n      is enabled by default for `gfm`, while `raw_tex` is
  disabled by default.\n\n  * Muse writer (Alexander Krotov):\n\n    + Test that inline
  math conversion result is normalized.\n      Without normalization this test produced\n
  \     `<em>a</em><em>b</em><em>c</em>`.\n    + Improve inline list normalization
  and move to writer.\n    + Escape hash symbol.\n    + Escape `----` to avoid accidental
  horizontal rules.\n    + Escape only `</code>` inside code tag.\n    + Additional
  `<verbatim>` is not needed as `<code>` is verbatim already.\n\n  * LaTeX writer:\n\n
  \   + Allow specifying just width or height for image size.\n      Previously both
  needed to be specified (unless the image was\n      being resized to be smaller
  than its original size).\n      If height but not width is specified, we now set
  width to\n      textwidth. If width but not height is specified, we now set\n      height
  to textheight.  Since we have `keepaspectratio`, this\n      yields the desired
  result.\n    + Escape `~` and `_` in code with `--listings` (#4111).\n\n  * HTML
  writer: export `tagWithAttributes`.  This is a helper allowing\n    other writers
  to create single HTML tags.\n\n  * Let papersizes `a0`, `a1`, `a2`, ... be case-insensitive
  by\n    converting the case as needed in LaTeX and ConTeXt writers.\n\n  * Change
  `fixDisplayMath` from `Text.Pandoc.Writers.Shared`\n    so that it no longer produces
  empty `Para`'s as an artifact.\n\n  * `Text.Pandoc.Shared.blocksToInlines`:  rewrote
  using builder.\n    This gives us automatic normalization, so we don't get\n    for
  example two consecutive Spaces.\n\n  * Include default CSS for 'underline' class
  in HTML-based templates.\n\n  * revealjs template:  add `tex2jax` configuration
  for the\n    math plugin.  With the next release of reveal.js, this will\n    fix
  the problem of `$`s outside of math contexts being\n    interpreted as math delimiters
  (#4027).\n\n  * `pandoc.lua` module for use in lua filters (Albert Krewinkel):\n\n
  \   + Add basic lua List module (#4099, #4081).  The List module is\n      automatically
  loaded, but not assigned to a global variable. It can be\n      included in filters
  by calling `List = require 'List'`.  Lists of blocks,\n      lists of inlines, and
  lists of classes are now given `List` as a metatable,\n      making working with
  them more convenient.  E.g., it is now possible to\n      concatenate lists of inlines
  using Lua's concatenation operator `..`\n      (requires at least one of the operants
  to have `List` as a metatable):\n\n          function Emph (emph)\n            local
  s = {pandoc.Space(), pandoc.Str 'emphasized'}\n            return pandoc.Span(emph.content
  .. s)\n          end\n\n      The `List` metatable is assigned to the tables which
  get passed to\n      the constructors `MetaBlocks`, `MetaInline`, and `MetaList`.
  This\n      enables the use of the resulting objects as lists.\n    + `Lua/StackInstances`:
  push Pandoc and Meta via constructor.\n      Pandoc and Meta elements are now pushed
  by calling the respective\n      constructor functions of the pandoc Lua module.
  This makes serialization\n      consistent with the way blocks and inlines are pushed
  to lua and allows\n      to use List methods with the `blocks` value.\n    + Add
  documentation for pandoc.List in `lua-filters.md`.\n\n  * Use latest tagsoup.  This
  fixes a bug in parsing HTML tags with\n    `&` (but not a valid entity) following
  them (#4094, #4088).\n\n  * Use skylighting 0.4.4.1, fixing the color of unmarked
  code text\n    when `numberLines` is used (#4103).\n\n  * Make `normalizeDate` more
  forgiving (Mauro Bieg, #4101), not\n    requiring a leading 0 on single-digit days.\n\n
  \ * Fix `--help` output for `--highlight-style` to include `FILE` (Mauro\n    Bieg,
  #4095).\n\n  * Clearer deprecation warning for `--latexmathml, --asciimathml, -m`.\n
  \   Previously we only mentioned `--latexmathml`, even if `-m` was\n    used.\n\n
  \ * Changelog: fix description of lua filters in 2.0 release\n    (Albert Krewinkel).
  \ Lua filters were initially run *after* conventional\n    (JSON) filters.  However,
  this was changed later to make it easier to deal\n    with files in the mediabag.
  The changelog is updated to describe that\n    feature of the 2.0 release correctly.\n\n
  \ * Change Generic JSON instances to TemplateHaskell (Jasper Van der Jeugt,\n    #4085).
  \ This reduces compile time and memory usage significantly.\n\n  * `lua-filters.md`:
  Added tikz filter example.\n\n  * Create alternative zip file for macOS binaries.\n\n
  \ * Create alternative zip file for Windows binaries.\n\n  * Update INSTALL.md since
  we now provide zips for binaries.\n\n  * Relax `http-types` dependency (Justus Sagemüller,
  #4084).\n\n  * Add `epub.md`, `getting-started.md` to docs.  These used to live
  in\n    the website repo.\n\n  * Add `packages` target to Makefile.\n\n  * Bump
  bounds for binary, http-types, tasty-hunit\n\npandoc (2.0.3)\n\n  * Lua filters:
  preload text module (Albert Krewinkel, #4077).\n    The `text` module is preloaded
  in lua. The module contains some UTF-8\n    aware string functions, implemented
  in Haskell.  The module is loaded on\n    request only, e.g.:\n\n        text =
  require 'text'\n        function Str (s)\n          s.text = text.upper(s.text)\n
  \         return s\n        end\n\n  * Allow table-like access to attributes in
  lua filters (Albert Krewinkel,\n    #4071).  Attribute lists are represented as
  associative lists in Lua. Pure\n    associative lists are awkward to work with.
  A metatable is attached to\n    attribute lists, allowing to access and use the
  associative list as if\n    the attributes were stored in as normal key-value pair
  in table.\n    Note that this changes the way `pairs` works on attribute lists.
  Instead\n    of producing integer keys and two-element tables, the resulting iterator\n
  \   function now returns the key and value of those pairs.  Use `ipairs` to\n    get
  the old behavior.  Warning: the new iteration mechanism only works if\n    pandoc
  has been compiled with Lua 5.2 or later (current default: 5.3).\n\n  * Text.Pandoc.Parsing.uri:
  \ allow `&` and `=` as word characters (#4068).\n    This fixes a bug where pandoc
  would stop parsing a URI with an\n    empty attribute:  for example, `&a=&b=` wolud
  stop at `a`.\n    (The uri parser tries to guess which punctuation characters\n
  \   are part of the URI and which might be punctuation after it.)\n\n  * Introduce
  `HasSyntaxExtensions` typeclass (Alexander Krotov, #4074).\n\n    + Added new `HasSyntaxExtensions`
  typeclass for `ReaderOptions` and\n      `WriterOptions`.\n    + Reimplemented `isEnabled`
  function from `Options.hs` to accept both\n      `ReaderOptions` and `WriterOptions`.\n
  \   + Replaced `enabled` from `CommonMark.hs` with new `isEnabled`.\n\n  * Add `amuse`
  extension (Alexander Krotov) to enable Amuse wiki\n    behavior for `muse`.  New
  `Ext_amuse` constructor for\n    `Extension`. Note: this is switched on by default;
  for\n    Emacs behavior, use `muse-amuse`.\n\n  * Muse reader (Alexander Krotov):\n\n
  \   + Count only one space as part of list item marker.\n    + Produce SoftBreaks
  on newlines. Now wrapping can be preserved\n      with `--wrap=preserve`.\n    +
  Add Text::Amuse footnote extensions.  Footnote end is indicated by\n      indentation,
  so footnotes can be placed anywhere in the text,\n      not just at the end of it.\n
  \   + Accept Emacs Muse definition lists when `-amuse`.\n      Emacs Muse does not
  require indentation.\n\n  * HTML reader:\n\n    + Ensure we don't produce level
  0 headers (#4076), even for chapter\n      sections in epubs.  This causes problems
  because writers aren't set\n      up to expect these.\n    + Allow spaces after
  `\\(` and before `\\)` with `tex_math_single_backslash`.\n      Previously `\\(
  \\frac{1}{a} < \\frac{1}{b} \\)` was not parsed as math in\n      `markdown` or
  `html` `+tex_math_single_backslash`.\n    + Parse div with class `line-block` as
  LineBlock.\n    + Don't fail with block-level content in figcaption (Mauro Bieg,
  #4183).\n\n  * MANUAL: clarify that math extensions work with HTML.\n    Clarify
  that `tex_math_dollars` and `tex_math_single_backslash`\n    will work with HTML
  as well as Markdown.\n\n  * Creole reader: Fix performance issue for longer lists
  (Sascha Wilde,\n    #4067).\n\n  * RST reader: better support for 'container' directive
  (#4066).\n    Create a div, incorporate name attribute and classes.\n\n  * LaTeX
  reader:\n\n    + Support column specs like `*{2}{r}` (#4056).  This is equivalent
  to\n      `rr`.  We now expand it like a macro.\n    + Allow optional args for parbox
  (#4056).\n    + Allow optional arguments on `\\footnote` (#4062).\n\n  * EPUB writer:
  Fixed path for cover image (#4069).  It was previously\n    `media/media/imagename`,
  and should have been `media/imagename`.\n\n  * Markdown writer: fix bug with doubled
  footnotes in grid tables\n    (#4061).\n\n  * LaTeX template:  include natbib/biblatex
  after polyglossia (#4073).\n    Otherwise we seem to get an error; biblatex wants
  polyglossia\n    language to be defined.\n\n  * Added examples to lua filters documentation.\n\n\npandoc
  (2.0.2)\n\n  * Deprecated ancient HTML math methods: `--latexmathml`, `--gladtex`,\n
  \   `--mimetex`, `--jsmath`.\n\n  * Fixed URIs in `data/jats.csl`.  They were being
  rendered twice,\n    leading to invalid XML in default JATS output with pandoc-citeproc.\n\n
  \ * `lua-filters.md`: use real-world man page filter as example.\n\n  * Add lua
  filter functions `walk_inline` and `walk_block`\n    in the pandoc module, to apply
  filters inside particular\n    inline and block elements.\n\n  * Refactored some
  code from `Text.Pandoc.Lua.PandocModule`\n    into new internal module `Text.Pandoc.Lua.Filter`.\n\n
  \ * Markdown reader:\n\n    + Allow fenced code blocks to be indented 1-3 spaces
  (#4011).\n      This brings our handling of them into alignment with CommonMark's.\n
  \   + Fix YAML metadata with \"chomp\" (`|-`).  Previously if a\n      YAML block
  under `|-` contained a blank line, pandoc would\n      not parse it as metadata.\n\n
  \ * Removed `etc.` from abbreviations file.  Often `etc.` ends a\n    sentence,
  and we want the period to be treated as a\n    sentence-ending period.\n\n  * Fix
  regression with `--metadata` (#4054).  Values specified with\n    `--metadata` should
  replace a metadata value set in the document\n    itself, rather than creating a
  list including a new value.\n\n  * EPUB writer:\n\n    + Fix EPUB OCF structure.
  \ #3720 had been improperly implemented.\n    + Fix modified paths for raw HTML
  tags (src, poster, etc.)\n      (#4050, #4055). This had not been updated for the
  new EPUB\n      container layout, with a separate text/ subdirectory.\n    + Fix
  image paths with empty `--epub-subdirectory`.\n\n  * Miscellaneous code cleanup
  (Alexander Krotov).\n\n  * Use pandoc-types 1.17.3, which adds `Walkable` instances\n
  \   for `[Block] Block` and `[Inline] Inline`.\n\n  * Remove obsolete `stack.full.yaml`
  (#4052).\n\n  * Change to using pandoc-citeproc 0.12.1 in binary packages.\n\n  *
  Consolidate math output method documentation (#4049, Mauro Bieg).\n\n  * `MANUAL.txt`:
  fix header level of \"Extension: emoji\" (Albert Krewinkel).\n\n  * Use lua filter
  to generate man page from `MANUAL.txt`, replacing old\n    Haskell filters.  This
  is easier and faster.\n\n  * Improved `INSTALL.md`.\n\n  * Update commands to extract
  deb archive on Linux (#4043, Salim B).\n\n\npandoc (2.0.1.1)\n\n  * Improved fix
  to #3989 (parsing of HTML tags containing\n    `>` in an attribute or comment).
  The previous fix (in 2.0.1) only\n    worked in certain cases.\n\n  * FB2 writer
  (Alexander Krotov):\n\n    + Add `unrecognised` genre to `<title-info>`\n      (Alexander
  Krotov).  XML schema requires at least one genre.\n    + Remove `<annotation>` from
  `<body>`.\n\n  * CommonMark writer: fix strikethrough for `gfm` (#4038).\n\n  *
  Use texmath 0.10, which adds support for a wider range of\n    symbols and fixes
  default column alignments in MathML\n    and OMML.\n\n  * Highlighting fixes, using
  skylighting 0.4.3.2:\n\n    + Fix invalid CSS.\n    + Support `lineAnchors` (or
  `line-anchors`) in HTML code blocks.\n    + Ensure that code lines don't get duplicate
  identifiers (#4031).\n      The line identifiers are built using the code block's
  identifier\n      as a prefix. If the code block has null identifier, we use\n      `cb1`,
  `cb2`, etc.\n\n  * Added a few abbreviations to `data/abbreviations`,\n    and sorted
  the list (#3984, Wandmalfarbe).\n\n  * Improved support for columns in HTML writer
  (#4028).\n\n    + Remove `width` attribute from the `div`.\n    + Remove space between
  `<div class=\"column\">` elements,\n      since this prevents columns whose widths
  sum to 100%\n      (the space takes up space).\n    + Move as much as possible of
  the CSS to the template.\n    + Ensure that all the HTML-based templates (including
  epub)\n      contain the CSS for columns.\n    + Columns default to 50% width unless
  they are given a width\n      attribute.  So if you want two equal-width columns,
  you\n      can use a div with class `column` and no `width` attribute.\n\n  * SelfContained:
  use `base64` for css links with media attribute (#4026).\n    This fixes `--self-contained`
  with S5.\n\n  * Improve `pandoc-template-mode.el` (Vaclav Haisman).\n\n  * Issue
  INFO, not WARNING, when a .sty file cannot be\n    read in LaTeX reader.  It is
  normally not an issue requiring\n    a fix from the user if .sty files are not found.\n\n
  \ * INSTALL.md: MacOS instructions needed xar -f (adam234).\n\n  * MANUAL.txt:\n\n
  \   + Clarify that --setext-headers doesn't affect gfm output (#4035).\n    + Clarify
  what is needed to open and close a div in `fenced_divs`\n      (#4039, Tristano
  Ajmone).\n    + Removed reference to `default.beamer` in docs (#4024).\n      Also
  added mention of other templates affecting PDF output\n      with different settings.\n\npandoc
  (2.0.1)\n\n  * Fixed regression in parsing of HTML comments in markdown and other\n
  \   non-HTML formats (`Text.Pandoc.Readers.HTML.htmlTag`) (#4019).\n    The parser
  stopped at the first `>` character, even if it wasn't\n    the end of the comment.\n\n
  \ * Creole reader (Sascha Wilde):\n\n    + Fix some minor typos and formatting.\n
  \   + Add additional test on nowiki-block after para.\n    + Fix lists with trailing
  white space.\n\n  * LaTeX reader: handle `%` comment right after command.\n    For
  example, `\\emph%`.\n\n  * Markdown reader:  make sure fenced div closers work in
  lists.\n    Previously the following failed:\n\n        ::: {.class}\n        1.
  one\n        2. two\n        :::\n\n    and you needed a blank line before the closing
  `:::`.\n\n  * Make `fenced_divs` affect the Markdown writer.  If `fenced_divs` is\n
  \   enabled, Divs will be rendered as fenced divs.\n\n  * LaTeX/Beamer writer: support
  \"blocks\" inside columns and other Divs\n    (#4016).\n\n  * HTML Writer: consistently
  use dashed class-names (Mauro Bieg, #3556).\n    Note: this change may require some
  changes in CSS rules.\n    `footnoteRef` has become `footnote-ref`, `titleslide`
  has\n    become `title-slide`, and `footnoteBack` has become `footnote-back`.\n\n
  \ * JATS writer: Properly pass through author metadata (#4020).\n\n  * FB2 writer
  (Alexander Krotov):\n\n    + Write blocks outside of `<p>` in definitions.\n    +
  Make bullet lists consistent with ordered lists, repeating\n      the marker for
  the outer list rather than indenting sublists,\n      since indentation does not
  work in readers.\n    + Add new style FB2 tests.\n\n  * `Text.Pandoc.ImageSize`:
  Add `Millimeter` constructor to `Dimension`\n    (#4012) [API change]. Now sizes
  given in 'mm' are no longer converted\n    to 'cm'.\n\n  * Revise documentation
  of small caps syntax (Andrew Dunning, #4013).\n\n  * Fix broken reference links
  in manual (Andrew Dunning, #4014)\n\n  * Fixed example of slide columns structure
  in changelog (#4015).\n    Also documented this feature in MANUAL.txt.\n\n\npandoc
  (2.0.0.1)\n\n  * EPUB writer:\n\n    + Fixed filepaths for nonstandard epub-subdirectory
  values.\n    + Ensure that epub2 is recognized as a non-text format,\n      so that
  a template is used.\n    + Don't include \"prefix\" attribute for ibooks for epub2.\n
  \     It doesn't validate.\n    + Fix stylesheet paths; previously we had an incorrect\n
  \     stylesheet path for the cover page and nav page.\n\n  * LaTeX reader:\n\n
  \   + Insert space when needed in macro expansion (#4007).\n      Sometimes we need
  to insert a space after a control sequence\n      to prevent it merging with a following
  letter.\n    + Allow unbraced arguments for macros (#4007).\n    + Allow body of
  macro definition to be unbraced (#4007).\n\n  * Linux package build: ensure that
  pandoc-citeproc is statically linked.\n\n  * trypandoc: add native, ms.\n\npandoc
  (2.0)\n\n  [new features]\n\n  * New output format `ms` (groff ms). Complete support,
  including\n    tables, math, syntax highlighting, and PDF bookmarks. The writer
  uses\n    texmath's new eqn writer to convert math to eqn format, so a ms file\n
  \   produced with this writer should be processed with `groff -ms -e` if\n    it
  contains math.\n\n  * New output format `jats` (Journal Article Tag Suite).  This
  is an XML\n    format used in archiving and publishing articles.  Note that a\n
  \   URI-encoded CSL stylesheet (`data/jats.csl`) is added automatically\n    unless
  a stylesheet is specified using `--css`.\n\n  * New output format `gfm` (GitHub-flavored
  CommonMark) (#3841).\n    This uses bindings to GitHub's fork of cmark, so it should
  parse\n    gfm exactly as GitHub does (excepting certain postprocessing\n    steps,
  involving notifications, emojis, etc.).  `markdown_github`\n    has been deprecated
  in favor of `gfm`.\n\n  * New output format `muse` (Emacs Muse) (Alexander Krotov,
  #3489).\n\n  * New input format `gfm` (GitHub-flavored CommonMark) (#3841).\n    This
  uses bindings to GitHub's fork of cmark.  `markdown_github`\n    has been deprecated
  in favor of `gfm`.\n\n  * New input format `muse` (Emacs Muse) reader (Alexander
  Krotov, #3620).\n\n  * New input format `tikiwiki` (TikiWiki markup) (rlpowell,
  #3800).\n\n  * New input format `vimwiki` (Vimwiki markup) (Yuchen Pei, #3705).\n
  \   Note that there is a new data file, `data/vimwiki.css`, which can\n    be used
  to display the HTML produced by this reader and\n    pandoc's HTML writer in the
  style of vimwiki's own HTML\n    export.\n\n  * New input format `creole` (Creole
  1.0) (#3994, Sascha Wilde).\n\n  * New syntax for Divs, with `fenced_divs` extension
  enabled by\n    default (#168).  This gives an attractive, plain-text way to create\n
  \   containers for block-level content.\n\n  * Added new syntax for including raw
  content in any output format,\n    enabled by the `raw_attribute` extension (which
  is on by default\n    for `markdown` and `multimarkdown`).  The syntax is the same
  as\n    for fenced code blocks or code inlines, only with `{=FORMAT}` for\n    attributes,
  where `FORMAT` is the name of the output format\n    (e.g., `ms`, `html`).\n\n  *
  Implement multicolumn support for slide formats (#1710).\n    The structure expected
  is:\n\n        :::::::::::::: {.columns}\n        ::: {.column width=\"40%\"}\n
  \       contents...\n        :::\n        ::: {.column width=\"60%\"}\n        contents...\n
  \       :::\n        ::::::::::::::\n\n    Support has been added for beamer and
  all HTML slide formats.\n\n  * Allows line comments in templates, beginning with
  `$--` (#3806).\n    (Requires doctemplates 0.2.1.)\n\n  * Add `--eol=crlf|lf|native`
  flag and writer option to control line endings\n    (Stefan Dresselhaus, #3663,
  #2097).\n\n  * Add `--log` option to save log messages in JSON format to a file
  (#3392).\n\n  * Add `--request-header` option, to set request headers when pandoc\n
  \   makes HTTP requests to fetch external resources. For example:\n    `--request-header
  User-Agent:blah`.\n\n  * Added lua filters (Albert Krewinkel, #3514).  The new `--lua-filter`\n
  \   option works like `--filter` but takes pathnames of special lua filters\n    and
  uses the lua interpreter baked into pandoc, so that no external\n    interpreter
  is needed.  Note that lua filters are all applied before\n    regular filters, regardless
  of their position on the command line.\n    For documentation of lua filters, see
  `doc/lua-filters.md`.\n\n  * Set `PANDOC_READER_OPTIONS` in environment where filters
  are run.\n    This contains a JSON representation of `ReaderOptions`, so filters\n
  \   can access it.\n\n  * Support creation of pdf via groff `ms` and pdfroff.\n
  \   `pandoc -t ms -o output.pdf input.txt`.\n\n  * Support for PDF generation via
  HTML and `weasyprint` or `prince`\n    (Mauro Bieg, #3909).  `pandoc -t html5 -o
  output.pdf --pdf-engine=prince`.\n\n  * Added `--epub-subdirectory` option (#3720).
  \ This specifies the\n    subdirectory in the OCF container that holds the EPUB
  specific content.\n    We now put all EPUB related content in an `EPUB/` subdirectory
  by default\n    (later this will be configurable).\n\n    ```\n      mimetype\n
  \     META-INF/\n        com.apple.ibooks.display-options.xml\n        container.xml\n
  \     EPUB/ <<--configurable-->>\n        fonts/ <<--static-->>\n        font.otf\n
  \     media/ <<--static-->>\n        cover.jpg\n        fig1.jpg\n      styles/
  <<--static-->>\n        stylesheet.css\n      content.opf\n      toc.ncx\n      text/
  <<--static-->>\n        ch001.xhtml\n    ```\n\n  * Added `--resource-path=SEARCHPATH`
  command line option (#852).\n    SEARCHPATH is separated by the usual character,
  depending on OS\n    (: on unix, ; on windows).  Default resource path is just working\n
  \   directory.  However, the working directory must be explicitly\n    specified
  if the `--resource-path` option is used.\n\n  * Added `--abbreviations=FILE` option
  for custom abbreviations file\n    (#256).  Default abbreviations file (`data/abbreviations`)
  contains\n    a list of strings that will be recognized by pandoc's\n    Markdown
  parser as abbreviations.  (A nonbreaking space will\n    be inserted after the period,
  preventing a sentence space in\n    formats like LaTeX.) Users can override the
  default by putting a file\n    abbreviations in their user data directory (`~/.pandoc`
  on *nix).\n\n  * Allow a theme file as argument to `--highlight-style`.\n    Also
  include a sample, `default.theme`, in `data/`.\n\n  * Allow `--syntax-definition`
  option for dynamic loading of syntax\n    highlighting definitions (#3334).\n\n
  \ * Lists in `markdown` by default now use the CommonMark variable\n    nesting
  rules (#3511). The indentation required for a block-level\n    item to be included
  in a list item is no longer fixed, but is\n    determined by the first line of the
  list item.  To be included in\n    the list item, a block must be indented to the
  level of the first\n    non-space content after the list marker. Exception: if are
  5 or more\n    spaces after the list marker, then the content is interpreted as
  an\n    indented code block, and continuation paragraphs must be indented\n    two
  spaces beyond the end of the list marker.  See the CommonMark\n    spec for more
  details and examples.\n\n    Documents that adhere to the four-space rule should,
  in most cases,\n    be parsed the same way by the new rules.  Here are some examples\n
  \   of texts that will be parsed differently:\n\n        - a\n          - b\n\n
  \   will be parsed as a list item with a sublist; under the four-space\n    rule,
  it would be a list with two items.\n\n        - a\n\n              code\n\n    Here
  we have an indented code block under the list item, even though it\n    is only
  indented six spaces from the margin, because it is four spaces\n    past the point
  where a continuation paragraph could begin.  With the\n    four-space rule, this
  would be a regular paragraph rather than a code\n    block.\n\n        - a\n\n                code\n\n
  \   Here the code block will start with two spaces, whereas under\n    the four-space
  rule, it would start with `code`.  With the four-space\n    rule, indented code
  under a list item always must be indented eight\n    spaces from the margin, while
  the new rules require only that it\n    be indented four spaces from the beginning
  of the first non-space\n    text after the list marker (here, `a`).\n\n    This
  change was motivated by a slew of bug reports from people\n    who expected lists
  to work differently (#3125, #2367, #2575, #2210,\n     #1990, #1137, #744, #172,
  #137, #128) and by the growing prevalance\n    of CommonMark (now used by GitHub,
  for example).  Those who\n    prefer the old behavior can use `-f markdown+four_space_rule`.\n\n
  \ * Added `four_space_rule` extension.  This triggers the old pandoc\n    parsing
  rule for content nested under list items (the \"four space\n    rule\").\n\n  *
  Added `spaced_reference_links` extension (#2602).  It allows whitespace\n    between
  the two parts of a reference link:  e.g.\n\n        [a] [b]\n\n        [b]: url\n\n
  \   This was previously enabled by default; it is now forbidden by default.\n\n
  \ * Add `space_in_atx_header` extension (#3512).  This is enabled by default\n    in
  pandoc and GitHub markdown but not the other flavors.\n    This requires a space
  between the opening #'s and the header\n    text in ATX headers (as CommonMark does
  but many other implementations\n    do not).  This is desirable to avoid falsely
  capturing things like\n\n        #hashtag\n\n    or\n\n        #5\n\n  * Add `sourcefile`
  and `outputfile` template variables (Roland Hieber,\n    #3431).\n\n  * Allow ibooks-specific
  metadata in epubs (#2693).  You can now have\n    the following fields in your YAML
  metadata, and it will be treated\n    appropriately in the generated EPUB:\n\n    ```\n
  \     ibooks:\n        version: 1.3.4\n        specified-fonts: false\n        ipad-orientation-lock:
  portrait-only\n        iphone-orientation-lock: landscape-only\n        binding:
  true\n        scroll-axis: vertical\n    ```\n\n\n  [behavior changes]\n\n  * Reader
  functions no longer presuppose that CRs have been\n    stripped from the input.
  (They strip CRs themselves, before\n    parsing, to simplify the parsers.)\n\n  *
  Added support for translations (localization) (#3559).\n    Currently this only
  affects the LaTeX reader, for things\n    like `\\figurename`.  Translation data
  files for 46 languages\n    can be found in `data/translations`.\n\n  * Make `--ascii`
  work with DocBook output too.\n\n  * Rename `--latex-engine` to `--pdf-engine`,\n
  \   and `--latex-engine-opt` to `--pdf-engine-opt`.\n\n  * Removed `--parse-raw`
  and `readerParseRaw`.  These were confusing.\n    Now we rely on the `+raw_tex`
  or `+raw_html` extension with latex or html\n    input.  Thus, instead of `--parse-raw
  -f latex` we use `-f latex+raw_tex`,\n    and instead of `--parse-raw -f html` we
  use `-f html+raw_html`.\n\n  * With `--filter` R filters are now recognized, even
  if they are\n    not executable (#3940, #3941, Andrie de Vries).\n\n  * Support
  SVG in PDF output, converting with `rsvg2pdf` (#1793).\n\n  * Make epub an alias
  for epub3, not epub2.\n\n  * Removed `--epub-stylesheet`; use `--css` instead (#3472,
  #847).\n    Multiple stylesheets may be used.  Stylesheets will be taken both from\n
  \   `--css` and from the `stylesheet` metadata field (which can contain\n    either
  a file path or a list of them).\n\n  * `--mathml` and MathML in HTMLMathMethod no
  longer take an argument.\n    The argument was for a bridge JavaScript that used
  to be necessary\n    in 2004.  We have removed the script already.\n\n  * `--katex`
  improvements.  The latest version is used, and the\n    autoload script is loaded
  by default.\n\n  * Change MathJax CDN default since old one is shutting down (#3544).\n
  \   Note:  The new URL requires a version number, which we'll have\n    to update
  manually in subsequent pandoc releases in order to\n    take advantage of mathjax
  improvements.\n\n  * `--self-contained`: don't incorporate elements with `data-external=\"1\"`\n
  \   (#2656).  You can leave an external link as it is by adding the attribute\n
  \   data-external=\"1\" to the element.  Pandoc will then not try to\n    incorporate
  its content when `--self-contained` is used.  This is\n    similar to a feature
  already supported by the EPUB writer.\n\n  * Allow `--extract-media` to work with
  non-binary input formats\n    (#1583, #2289).  If `--extract-media` is supplied
  with a non-binary\n    input format, pandoc will attempt to extract the contents
  of all\n    linked images, whether in local files, data: uris, or external uris.\n
  \   They will be named based on the sha1 hash of the contents.\n\n  * Make `papersize:
  a4` work regardless of the case of `a4`.\n    It is converted to `a4` in LaTeX and
  `A4` in ConTeXt.\n\n  * Make `east_asian_line_breaks` affect all readers/writers
  (#3703).\n\n  * Underlined elements are now treated consistently by readers\n    (#2270,
  hftf); they are always put in a Span with class `underline`.\n    This allows the
  user to treat them differently from other emphasis,\n    using a filter.  Docx,
  Org, Textile, Txt2Tags, and HTML readers\n    have been changed.\n\n  * Improved
  behavior of `auto_identifiers` when there are explicit ids\n    (#1745).  Previously
  only autogenerated ids were added to the list\n    of header identifiers in state,
  so explicit ids weren't taken\n    into account when generating unique identifiers.
  \ Duplicated\n    identifiers could result.  This simple fix ensures that explicitly
  given\n    identifiers are also taken into account.\n\n  * Use `table-of-contents`
  for contents of toc, make `toc` a boolean\n    (#2872).  Changed markdown, rtf,
  and HTML-based templates accordingly.\n    This allows you to set `toc: true` in
  the metadata; this\n    previously produced strange results in some output formats.\n
  \   For backwards compatibility, `toc` is still set to the\n    toc contents.  But
  it is recommended that you update templates\n    to use `table-of-contents` for
  the toc contents and `toc`\n    for a boolean flag.\n\n  * Change behavior with
  binary format output to stdout.\n    Previously, for binary formats, output to stdout
  was disabled\n    unless we could detect that the output was being piped (and not\n
  \   sent to the terminal).  Unfortunately, such detection is not\n    possible on
  Windows, leaving windows users no way to pipe binary\n    output.  So we have changed
  the behavior in the following way:\n\n    + Output to stdout is allowed when it
  can be determined that\n      the output is being piped (on non-Windows platforms).\n
  \   + If the `-o` option is not used, binary output is never sent\n      to stdout
  by default; instead, an error is raised.\n    + If `-o -` is used, binary output
  is sent to stdout, regardless\n      of whether it is being piped. This works on
  Windows too.\n\n  * Better error behavior:  uses of `error` have been replaced by\n
  \   raising of `PandocError`, which can be trapped and handled by the\n    calling
  program.\n\n  * Removed `hard_line_breaks` extension from `markdown_github` (#3594).\n
  \   GitHub has two Markdown modes, one for long-form documents like READMEs\n    and
  one for short things like issue comments. In issue comments, a line\n    break is
  treated as a hard line break. In README, wikis, etc., it is\n    treated as a space
  as in regular Markdown.  Since pandoc is more likely to\n    be used to convert
  long-form documents from GitHub Markdown,\n    `-hard_line_breaks` is a better default.\n\n
  \ * Include `backtick_code_blocks` extension in `mardkown_mmd` (#3637).\n\n  * Escape
  `MetaString` values (as added with `-M/--metadata` flag) (#3792).\n    Previously
  they would be transmitted to the template without any\n    escaping.  Note that
  `--M title='*foo*'` yields a different result from\n\n        ---\n        title:
  *foo*\n        ---\n\n    In the latter case, we have emphasis; in the former case,
  just\n    a string with literal asterisks (which will be escaped\n    in formats,
  like Markdown, that require it).\n\n  * Allow `em`, `cm`, `in` for image height/width
  in HTML, LaTeX (#3450).\n\n  * HTML writer: Insert `data-` in front of unsupported
  attributes.  Thus,\n    a span with attribute `foo` gets written to HTML5 with `data-foo`,
  so\n    it is valid HTML5.  HTML4 is not affected.  This will allow us to use\n
  \   custom attributes in pandoc without producing invalid HTML. (With help\n    from
  Wandmalfarbe, #3817.)\n\n  * Plain writer:  improved super/subscript rendering.
  \ We now\n    handle more non-digit characters for which there are\n    sub/superscripted
  unicode characters.  When unicode\n    sub/superscripted characters are not available,
  we use\n    `_(..)` or `^(..)` (#3518).\n\n  * Docbook, JATS, TEI writers: print
  INFO message when omitting interior\n    header (#3750).  This only applies to section
  headers inside list items,\n    e.g., which were otherwise silently omitted.\n\n
  \ * Change to `--reference-links` in Markdown writer (#3701).  With\n    `--reference-location`
  of `section` or `block`, pandoc will now repeat\n    references that have been used
  in earlier sections.  The Markdown\n    reader has also been modified, so that *exactly*
  repeated references\n    do not generate a warning, only references with the same
  label but\n    different targets.  The idea is that, with references after every
  block,\n    one might want to repeat references sometimes.\n\n  * ODT/OpenDocument
  writer:\n\n    + Support `lang` attribute (#1667).\n    + Added support for `--toc`
  (#2836).  Thanks to @anayrat.\n\n  * Docx writer:\n\n    + `lang` meta, see #1667
  (Mauro Bieg, #3515).\n    + Change `FigureWithCaption` to `CaptionedFigure` (iandol,
  #3658).\n    + Use `Table` rather than `Table Normal` for table style (#3275).\n
  \     `Table Normal` is the default table style and can't be modified.\n    + Pass
  through comments (#2994).  We assume that comments are defined as\n      parsed
  by the docx reader:\n\n        I want <span class=\"comment-start\" id=\"0\" author=\"Jesse
  Rosenthal\"\n        date=\"2016-05-09T16:13:00Z\">I left a comment.</span>some
  text to\n        have a comment <span class=\"comment-end\" id=\"0\"></span>on it.\n\n
  \     We assume also that the id attributes are unique and properly\n      matched
  between comment-start and comment-end.\n    + Bookmark improvements.  Bookmark start/end
  now surrounds content rather\n      than preceding it.  Bookmarks generated for
  Div with id\n      (jgm/pandoc-citeproc#205).\n    + Add `keywords` metadata to
  docx document properties (Ian).\n\n  * RST writer: support unknown interpreted text
  roles by\n    parsing them as `Span` with `role` attributes (#3407).  This\n    way
  they can be manipulated in the AST.\n\n  * HTML writer:\n\n    + Line block: Use
  class instead of style attribute (#1623).  We now\n      issue `<div class=\"line-block\">`
  and include a default definition\n      for `line-block` in the default templates,
  instead of hard-coding a\n      `style` on the div.\n    + Add class `footnoteBack`
  to footnote back references (Timm Albers).\n      This allows for easier CSS styling.\n
  \   + Render SmallCaps as span with smallcaps class (#1592), rather than\n      using
  a style attribute directly.  This gives the user more flexibility\n      in styling
  small caps in CSS.\n    + With reveal.js we use `data-src` instead of `src` for
  images for\n      lazy loading.\n    + Special-case `.stretch` class for images
  in reveal.js (#1291).\n      Now in reveal.js, an image with class `stretch` in
  a paragraph\n      by itself will stretch to fill the whole screen, with no\n      caption
  or figure environment.\n\n  * Added warnings for non-rendered blocks to writers.\n\n
  \ * Writers now raise an error on template failure.\n\n  * When creating a PDF via
  LaTeX, warn if the font is missing some\n    characters (#3742).\n\n  * Remove initial
  check for PDF-creating program (#3819).\n    Instead, just try running it and raise
  the exception if it\n    isn't found at that point.  This improves things for users
  of Cygwin\n    on Windows, where the executable won't be found by `findExecutable`\n
  \   unless `.exe` is added.  The same exception is raised as before, but\n    at
  a later point.\n\n  * Readers issue warning for duplicate header identifiers (#1745).\n
  \   Autogenerated header identifiers are given suffixes so as not to clash\n    with
  previously used header identifiers. But they may still coincide with\n    an explicit
  identifier that is given for a header later in the document,\n    or with an identifier
  on a div, span, link, or image. We now issue\n    a warning in this case, so users
  can supply an explicit identifier.\n\n  * CommonMark reader now supports `emoji`,
  `hard_line_breaks`, `smart`,\n    and `raw_html` extensions.\n\n  * Markdown reader:\n\n
  \   + Don't allow backslash + newline to affect block structure (#3730).\n      Note
  that as a result of this change, the following, which formerly\n      produced a
  header with two lines separated by a line break, will\n      now produce a header
  followed by a paragraph:\n\n        # Hi\\\n        there\n\n      This may affect
  some existing documents that relied on\n      this undocumented and unintended behavior.
  \ This change makes pandoc\n      more consistent with other Markdown implementations,
  and with itself\n      (since the two-space version of a line break doesn't work
  inside ATX\n      headers, and neither version works inside Setext headers).\n\n
  \   + A space between the opening # and the header is now required for\n      pandoc
  and GitHub markdown (but not the other flavors). Disable\n      the `space_in_atx_header`
  extension (#3512) to restore the\n      original behavior.\n\n\n  * Org reader (Albert
  Krewinkel, unless noted):\n\n    + Support `table.el` tables (#3314).\n    + Support
  macros (#3401).\n    + Support the `#+INCLUDE:` file inclusion mechanism (#3510).\n
  \     Recognized include types are `example`, `export`, `src`, and\n      normal
  org file inclusion.  Advanced features like line numbers\n      and level selection
  are not implemented yet.\n    + Interpret more meta value as inlines.  The values
  of the following\n      meta variables are now interpreted using org-markup instead
  of\n      treating them as pure strings: `keywords` (comma-separated list of\n      inlines),
  `subtitle` (inline values), `nocite` (inline values, can\n      be repeated).\n
  \   + Support `\\n` export option (#3940).  This turns all newlines in the\n      text
  into hard linebreaks.\n\n  * RST reader:\n\n    + Improved admonition support (#223).
  \ We no longer add an\n      `admonition` class, we just use the class for the type
  of admonition,\n      `note` for example.  We put the word corresponding to the
  label in\n      a paragraph inside a `Div` at the beginning of the admonition with\n
  \     class `admonition-title`.  This is about as close as we can get to\n      RST's
  own output.\n    + Initial support of `.. table` directive.  This allows adding
  captions\n      to tables.\n    + Support `.. line-block` directive.  This is deprecated
  but may still\n      be in older documents.\n    + Support scale and align attributes
  of images (#2662).\n    + Implemented implicit internal header links (#3475).\n
  \   + Support RST-style citations (#853).  The citations appear at the end\n      of
  the document as a definition list in a special div with id\n      `citations`. Citations
  link to the definitions.\n    + Recurse into bodies of unknown directives (#3432).\n
  \     In most cases it's better to preserve the content than\n      to emit it.
  \ This isn't guaranteed to have good results;\n      it will fail spectacularly
  for unknown raw or verbatim directives.\n    + Handle chained link definitions (#262).
  \ For example,\n\n          .. _hello:\n          .. _goodbye: example.com\n\n      Here
  both `hello` and `goodbye` should link to `example.com`.\n    + Support anchors
  (#262).  E.g.\n\n          `hello`\n\n          .. _hello:\n\n          paragraph\n\n
  \     This is supported by putting \"paragraph\" in a `Div` with id `hello`.\n    +
  Support `:widths:` attribute for table directive.\n    + Implement csv-table directive
  (#3533).  Most attributes are supported,\n      including `:file:` and `:url:`.\n
  \   + Support unknown interpreted text roles by parsing them as Span\n      with
  \"role\" attributes (#3407).  This way they can be manipulated in\n      the AST.\n\n
  \ * HTML reader: parse a span with class `smallcaps` as `SmallCaps`.\n\n  * LaTeX
  reader:\n\n    + Implemented `\\graphicspath` (#736).\n    + Properly handle column
  prefixes/suffixes.  For example, in\n      `\\begin{tabular}{>{$}l<{$}>{$}l<{$}
  >{$}l<{$}}`\n      each cell will be interpreted as if it has a `$`\n      before
  its content and a `$` after (math mode).\n    + Handle komascript `\\dedication`
  (#1845).  It now adds a\n      `dedication` field to metadata.  It is up to the
  user to supply\n      a template that uses this variable.\n    + Support all `\\textXX`
  commands, where XX = `rm`, `tt`, `up`, `md`,\n      `sf`, `bf` (#3488).  Spans with
  a class are used when there is\n      nothing better.\n    + Expand `\\newenvironment`
  macros (#987).\n    + Add support for LaTeX subfiles package (Marc Schreiber, #3530).\n
  \   + Better support for subfigure package (#3577).\n      A figure with two subfigures
  turns into two pandoc\n      figures; the subcaptions are used and the main caption\n
  \     ignored, unless there are no subcaptions.\n    + Add support for \\vdots (Marc
  Schreiber, #3607).\n    + Add basic support for hyphenat package (Marc Schreiber,
  #3603).\n    + Add basic `\\textcolor` support (Marc Schreiber).\n    + Add support
  for `tabularx` environment (Marc Schreiber, #3632).\n    + Better handling of comments
  inside math environments (#3113).\n      This solves a problem with commented out
  `\\end{eqnarray}` inside\n      an eqnarray (among other things).\n    + Parse tikzpicture
  as raw verbatim environment if `raw_tex` extension\n      is selected (#3692).  Otherwise
  skip with a warning.  This is better\n      than trying to parse it as text!\n    +
  Add `\\colorbox` support (Marc Schreiber).\n    + Set identifiers on Spans used
  for `\\label`.\n    + Have `\\setmainlanguage` set `lang` in metadata.\n    + Support
  etoolbox's `\\ifstrequal`.\n    + Support `plainbreak`, `fancybreak` et al from
  the memoir class\n      (bucklereed, #3833).\n    + Support `\\let`.  Also, fix
  regular macros so they're expanded at the\n      point of use, and NOT also the
  point of definition.  `\\let` macros,\n      by contrast, are expanded at the point
  of definition.  Added an\n      `ExpansionPoint` field to `Macro` to track this
  difference.\n    + Support simple `\\def` macros.  Note that we still don't support\n
  \     macros with fancy parameter delimiters, like `\\def\\foo#1..#2{...}`.\n    +
  Support \\chaptername, \\partname, \\abstractname, etc.  (#3559,\n      obsoletes
  #3560).\n    + Put content of `\\ref`, `\\label`, `\\eqref` commands into `Span`
  with\n      attributes, so they can be handled in filters (Marc Schreiber, #3639)\n
  \   + Add Support for `glossaries` and `acronym` package (Marc Schreiber,\n      #3589).
  Acronyms are not resolved by the reader, but acronym and\n      glossary information
  is put into attributes on Spans so that they\n      can be processed in filters.\n
  \   + Use `Link` instead of `Span` for `\\ref`.  This makes more sense\n      semantically
  and avoids unnecessary `Span [Link]` nestings when\n      references are resolved.\n
  \   + Rudimentary support for `\\hyperlink`.\n    + Support `\\textquoteleft|right`,
  `\\textquotedblleft|right` (#3849).\n    + Support `\\lq`, `\\rq`.\n    + Implement
  `\\newtoggle`, `\\iftoggle`, `\\toggletrue|false` from etoolbox\n      (#3853).\n
  \   + Support `\\RN` and `\\Rn`, from biblatex (bucklereed, #3854).\n    + Improved
  support for `\\hyperlink`, `\\hypertarget` (#2549).\n    + Support `\\k` ogonek
  accent.\n    + Improve handling of accents.  Handle ogonek, and fall back correctly\n
  \     with forms like `\\\"{}`.\n    + Better support for ogonek accents.\n    +
  Support for `\\faCheck` and `\\faClose` (Marc Schreiber, #3727).\n    + Support
  for `xspace` (Marc Schreiber, #3797).\n    + Support `\\setmainlanguage` or `\\setdefaultlanguage`
  (polyglossia)\n      and `\\figurename`.\n    + Better handling of `\\part` in LaTeX
  (#1905).  Now we parse chapters as\n      level 0 headers, and parts as level -1
  headers.  After parsing, we\n      check for the lowest header level, and if it's
  less than 1 we bump\n      everything up so that 1 is the lowest header level.  So
  `\\part` will\n      always produce a header; no command-line options are needed.\n
  \   + Add block version of `\\textcolor` (Marc Schreiber).\n    + `\\textcolor`
  works as inline and block command (Marc Schreiber).\n    + `\\textcolor` will be
  parse as span at the beginning of a paragraph\n      (Marc Schreiber).\n    + Read
  polyglossia/babel `\\text(LANG){...}` (bucklereed)\n    + Improved handling of include
  files in LaTeX reader (#3971).\n      Previously `\\include` wouldn't work if the
  included file\n      contained, e.g., a begin without a matching end.\n    + Support
  `\\expandafter` (#3983).\n    + Handle `\\DeclareRobustCommand` (#3983).  Currently
  it's just treated\n      as a synonym for `\\newcommand`.\n    + Handle `\\lettrine`
  (Mauro Bieg).\n\n  * Math improvements due to updates in texmath:\n\n    + Improved
  handling of accents and upper/lower delimiters.\n    + Support for output in GNU
  eqn format (used with *roff).\n    + Allow `\\boldsymbol` + a token without braces,
  and similarly\n      with other styling commands.\n    + Improve parsing of `\\mathop`
  to allow multi-character operator names.\n    + Add thin space after math operators
  when \"faking it with\n      unicode.\"\n\n  * `walk` is now used instead of `bottomUp`
  in the `ToJSONFilter`\n    instance for `a -> [a]` (pandoc-types).  Note that behavior\n
  \   will be slightly different, since `bottomUp`'s treatment of\n    a function
  `[a] -> [a]` is to apply it to each sublist of a\n    list, while walk applies it
  only to maximal sublists.\n    Usually the latter behavior is what is wanted, and
  the\n    former can be simulated when needed.  But there may be\n    existing filters
  that need to be rewritten in light of the\n    new behavior.  Performance should
  be improved.\n\n  * There are some changes to syntax highlighting due to revisions\n
  \   in the `skylighting` library:\n\n    + Support for `powershell` has been added,
  and many syntax\n      definitions have been updated.\n    + Background colors have
  been added to the `kate` style.\n    + The way highlighted code blocks are formatted
  in HTML has\n      been changed (David Baynard), in ways that may require\n      changes
  in hard-coded CSS affecting highlighting.\n      (If you haven't included hard-coded
  highlighting CSS in\n      your template, you needn't change anything.)\n\n\n  [API
  changes]\n\n  * New module `Text.Pandoc.Class` (Jesse Rosenthal, John MacFarlane).\n
  \   This contains definitions of the `PandocMonad` typeclass, the\n    `PandocIO`
  and `PandocPure` monads, and associated functions.\n\n  * Changed types of all writers
  and readers.\n\n    + We now use `Text` instead of `String` in the interface (#3731).\n
  \     (We have not yet changed the internals of most readers to work\n      with
  `Text`, but making this change in the API now opens up a\n      path to doing that.)\n
  \   + The result is now of form `m a` with constraint `PandocMonad m`.\n      Readers
  and writers can be combined to form monadic values which\n      can be run using
  either `runIO` or `runPure`.  If `runIO` is used,\n      then both readers and writers
  will be able to do IO when needed\n      (for include files, for example); if `runPure`
  is used,\n      then the functions are pure and will not touch IO.\n    + Where
  previously you used\n      `writeRST def (readMarkdown def \"[foo](url)\")`, now
  you\n      would use\n      `runPure $ readMarkdown def (pack \"[foo](url)\") >>=
  writeRST def`.\n\n  * New module `Text.Pandoc.Readers` (Albert Krewinkel).  This\n
  \   contains reader helper functions formerly defined in the\n    top-level `Text.Pandoc`
  module.\n\n    + Changed `StringReader` -> `TextReader`.\n    + `getReader` now
  returns a pair of a reader and\n      `Extensions`, instead of building the extensions
  into the\n      reader (#3659).  The calling code must explicitly set\n      `readerExtensions`
  using the `Extensions` returned.  The\n      point of the change is to make it possible
  for the calling\n      code to determine what extensions are being used.\n\n  *
  New module `Text.Pandoc.Writers` (Albert Krewinkel).\n    This contains writer helper
  functions formerly defined in the\n    top-level `Text.Pandoc` module.\n\n    +
  Changed `StringWriter` -> `TextWriter`.\n    + `getWriter` now returns a pair of
  a reader and\n      `Extensions`, instead of building the extensions into the\n
  \     reader (#3659).  The calling code must explicitly set\n      `readerExtensions`
  using the `Extensions` returned.  The\n      point of the change is to make it possible
  for the calling\n      code to determine what extensions are being used.\n\n  *
  New module `Text.Pandoc.Lua`, exporting `runLuaFilter` (Albert Krewinkel,\n    #3514).\n\n
  \ * New module `Text.Pandoc.App`.  This abstracts out the functionality\n    of
  the command line program (`convertWithOpts`), so it can be reproduced\n    e.g.
  in a desktop or web application.  Instead of exiting, we throw errors\n    (#3548),
  which are caught (leading to exit) in pandoc.hs, but allow other\n    users of `Text.Pandoc.App`
  to recover.  `pandoc.hs` is now a 2-liner.\n    The module also exports some utility
  functions for parsing options\n    and running filters.\n\n  * New module `Text.Pandoc.Logging`
  (exported module) (#3392).\n    This now contains the `Verbosity` definition previously
  in\n    `Text.Pandoc.Options`, as well as a new `LogMessage` datatype that will\n
  \   eventually be used instead of raw strings for warnings.  This will enable\n
  \   us, among other things, to provide machine-readable warnings if desired.\n    Include
  ToJSON instance and showLogMessage.  This gives us the possibility\n    of both
  machine-readable and human-readable output for log messages.\n\n  * New module `Text.Pandoc.BCP47`,
  with `getLang`, `Lang(..)`, `parseBCP47`.\n\n  * New module `Text.Pandoc.Translations`,
  exporting `Term`,\n    `Translations`, `readTranslations`.\n\n  * New module `Text.Pandoc.Readers.LaTeX.Types',
  exporting `Macro`, `Tok`,\n    `TokType`, `Line`, `Column`.\n\n  * `Text.Pandoc.Error`:
  added many new constructors for `PandocError`.\n\n  * Expose some previously private
  modules (#3260).  These are often\n    helpful to people writing their own reader
  or writer modules:\n\n    + `Text.Pandoc.Writers.Shared`\n    + `Text.Pandoc.Parsing`\n
  \   + `Text.Pandoc.Asciify`\n    + `Text.Pandoc.Emoji`\n    + `Text.Pandoc.ImageSize`\n
  \   + `Text.Pandoc.Highlighting`\n`\n  * New module `Text.Pandoc.Extensions` (Albert
  Krewinkel):\n    Extension parsing and processing functions were defined in the
  top-level\n    `Text.Pandoc` module.  These functions are moved to the Extensions\n
  \   submodule as to enable reuse in other submodules.\n\n  * Add `Ext_raw_attribute`
  constructor for `Extension`.\n\n  * Add `Ext_fenced_divs` constructor for `Extension'.\n\n
  \ * Add `Ext_four_space_rule` constructor in `Extension`.\n\n  * Add `Ext_gfm_auto_identifiers`
  constructor for `Extension`.\n\n  * Add `Monoid` instance for `Extensions`.\n\n
  \ * Add `Text.Pandoc.Writers.Ms`, exporting `writeMs`.\n\n  * Add `Text.Pandoc.Writers.JATS`,
  exporting `writeJATS`.\n\n  * Add `Text.Pandoc.Writers.Muse`, exporting `writeMuse`.\n\n
  \ * Add `Text.Pandoc.Readers.Muse`, exporting `readMuse`.\n\n  * Add `Text.Pandoc.Readers.TikiWiki`,
  exporting `readTikiWiki`.\n\n  * Add `Text.Pandoc.Readers.Vimwiki`, exporting `readVimwiki`.\n\n
  \ * Add `Text.Pandoc.Readers.Creole`, exporting `readCreole`.\n\n  * Export `setVerbosity`
  from `Text.Pandoc`.\n\n  * `Text.Pandoc.Pretty`: Add `Eq` instance for `Doc`.\n\n
  \ * `Text.Pandoc.XML`: `toEntities`: changed type to `Text -> Text`.\n\n  * `Text.Pandoc.UTF8`:\n\n
  \   + Export `fromText`, `fromTextLazy`, `toText`, `toTextLazy`.\n      Define `toString`,
  `toStringLazy` in terms of them.\n    + Add new functions parameterized on `Newline`:
  `writeFileWith`,\n      `putStrWith`, `putStrLnWith`, `hPutStrWith`, `hPutStrLnWith`.\n\n
  \ * `Text.Pandoc.MediaBag`: removed `extractMediaBag`.\n\n  * `Text.Pandoc.Highlighting`:\n\n
  \   + `highlighting` now returns an Either rather than Maybe.\n      This allows
  us to display error information returned by the skylighting\n      library.  Display
  a warning if the highlighting library throws an error.\n    + Add parameter for
  `SyntaxMap` to `highlight`.\n\n  * `Text.Pandoc.Writers.Math`:\n\n    + Export `defaultMathJaxURL`,
  `defaultKaTeXURL`.  This will ensure that\n      we only need to update these in
  one place.\n\n  * `Text.Pandoc.SelfContained`:\n\n    + Removed `WriterOptions`
  parameter from `makeSelfContained`.\n    + Put `makeSelfContained` in PandocMonad
  instead of IO.  This removes\n      the need to pass MediaBag around and improves
  exceptions.  It also\n      opens up the possibility of using makeSelfContained
  purely.\n    + Export `makeDataURI`.\n\n  * `Text.Pandoc.ImageSize`:\n\n    + Export
  `lengthToDim`, new function `scaleDimension`.\n    + Export `inEm` from ImageSize
  (#3450).\n    + Change `showFl` and `show` instance for `Dimension` so\n      extra
  decimal places are omitted.\n    + Added `Em` as a constructor of `Dimension`.\n
  \   + Add `WriterOptions` parameter to `imageSize` signature (Mauro Bieg).\n\n  *
  `Text.Pandoc.Templates`:\n\n    + Change type of `renderTemplate'`.  Now it runs
  in `PandocMonad`\n      and raises a proper `PandocTemplateError` if there are problems,
  rather\n      than failing with uncatchable `error`.\n    + Change signature of
  `getDefaultTemplate`.  Now it runs in any instance\n      of `PandocMonad`, and
  returns a `String` rather than an `Either` value.\n      And it no longer takes
  a `datadir` parameter, since this can be\n      retrieved from `CommonState`.\n\n
  \ * `Text.Pandoc.Options`:\n\n    + Added `writerEpubSubdirectory` to `WriterOptions`
  (#3720).\n      The EPUB writer now takes its EPUB subdirectory from this option.\n
  \   + In `WriterOptions`, rename `writerLaTeXEngine` to `writerPdfEngine`\n      and
  `writerLaTeXArgs` to `writerPdfArgs` (Mauro Bieg, #3909).\n    + Add `writerSyntaxMap`
  to `WriterOptions`.\n    + Removed `writerEpubStylesheet` from `WriterOptions`.\n
  \   + Remove `writerUserDataDir` from `WriterOptions`.  It is now carried\n      in
  `CommonState` in `PandocMonad` instances.  (And thus it can be used\n      by readers
  too.)\n    + Changed `writerEpubMetadata` to a `Maybe String`.\n    + Removed `readerApplyMacros`
  from `ReaderOptions`.  Now we just check\n      the `latex_macros` reader extension.\n
  \   + FromJSON/ToJSON instances for `ReaderOptions`.\n    + In `HTMLMathMethod`,
  the `KaTeX` contsructor now takes only\n      one string (for the KaTeX base URL),
  rather than two.\n    + Removed `writerSourceURL` from `WriterOptions`.  We now
  use\n      `stSourceURL` in `CommonState`, which is set by `setInputFiles`.\n\n
  \ * `Text.Pandoc.Shared`:\n\n    + `tabFilter` now takes a `Text`, not `String`.\n
  \   + `openURL`: Changed type from an Either.  Now it will just raise\n      an
  exception to be trapped later.\n    + Remove `normalizeSpaces` (#1530).\n    + Remove
  `warn`.  (Use `report` from `Text.Pandoc.Class` instead.)\n    + Export a new function
  `crFilter`.\n    + Add `eastAsianLineBreakFilter` (previously in Markdown reader).\n
  \   + Provide custom `isURI` that rejects unknown schemes.\n      (Albert Krewinkel,
  #2713).  We also export the set of known\n      `schemes`.  The new function replaces
  the function of the same name\n      from `Network.URI`, as the latter did not check
  whether a scheme is\n      well-known.  All official IANA schemes (as of 2017-05-22)
  are\n      included in the set of known schemes.  The four non-official schemes\n
  \     `doi`, `isbn`, `javascript`, and `pmid` are kept.\n    + Remove `err`.\n    +
  Remove `readDataFile`, `readDefaultDataFile`, `getReferenceDocx`,\n      `getReferenceODT`.
  These now live in `Text.Pandoc.Class`,\n      where they are defined in terms of
  `PandocMonad`\n      primitives and have different signatures.\n    + Remove `openURL`.
  \ Use `openURL` from `Text.Pandoc.Class` instead.\n    + Add `underlineSpan`.\n\n
  \ * `Text.Pandoc.Readers.HTML`: export new `NamedTag` class.\n\n  * `Text.Pandoc.Readers.Markdown`:
  remove `readDocxWithWarnings`.\n     With the new API one can simply use `getLog`
  after running\n     the reader.\n\n  * `Text.Pandoc.Readers.LaTeX`: Changed types
  for `rawLaTeXInline`\n     and `rawLaTeXBlock`.  (Both now return a `String`, and
  they are\n     polymorphic in state.)\n\n\n  [bug fixes and under-the-hood improvements]\n\n
  \ * TEI writer: Added identifiers on `<div>` elements.\n\n  * DokuWiki reader: Better
  handling for code block in list item (#3824).\n\n  * Custom writer: Remove old preprocesesor
  conditionals (Albert Krewinkel).\n\n  * ZimWiki writer: Removed internal formatting
  from note and table cells,\n    because ZimWiki does not support it (Alex Ivkin,
  #3446).\n\n  * MediaWiki writer:\n\n    + Updated list of syntax highlighting languages
  (#3461).\n      Now `r` gets you `<source>` rather than `<code>` (among others).\n
  \   + Add display attribute on `<math>` tags (#3452).  This allows display\n      math
  to be rendered properly.\n    + Remove newline before `</ref>` (#2652).\n    + Don't
  softbreak lines inside list items (#3531).\n\n  * Org writer:\n\n    + Reduce to
  two spaces after bullets (#3417, Albert Krewinkel).\n    + Add unit tests (Alexander
  Krotov).\n    + Stop using raw HTML to wrap divs (Albert Krewinkel, #3771).\n    +
  Do not strip `#` from Org anchor links (Alexander Krotov).\n\n  * CommonMark writer:\n\n
  \   + Avoid excess blank lines at end of output.\n    + Prefer pipe tables to HTML
  tables even if it means losing relative\n      column width information (#3734).\n
  \   + Support table, strikethrough extensions, when enabled (as with gfm).\n      Note
  that we bypass the commonmark writer from cmark and construct our\n      own pipe
  tables, with better results.\n    + Properly support `--wrap=none`.\n    + Use smallcaps
  class for `SmallCaps` (#1592).\n    + Omit \"fig:\" prefix in image titles.  This
  is used internally to\n      indicate internal figures.\n\n  * RST writer:\n\n    +
  Properly handle table captions.\n    + Don't wrap lines in in definition list terms.
  \ Wrapping is not allowed.\n    + Implemented `+/-smart` and improved escaping with
  `+smart`.\n    + Add empty comments when needed to avoid including a blockquote\n
  \     in the indented content of a preceding block (#3675).\n    + Improve grid
  table output, fix bug with empty rows (#3516).\n      Uses the new `gridTable` in
  Writers.Shared, which is here\n      improved to better handle 0-width cells.\n
  \   + Remove space at beginning/end of RST code span (#3496).  Otherwise\n      we
  get invalid RST.  There seems to be no way to escape the space.\n    + Add header
  anchors when header has non-standard id (#3937).\n    + Correctly handle inline
  code containing backticks, using a `:literal:`\n      role (#3974).\n    + Don't
  backslash-escape word-internal punctuation (#3978).\n\n  * Markdown writer:\n\n
  \   + Don't include variables in metadata blocks.  Previously variables set\n      on
  the command line were included in e.g. YAML metadata, contrary to\n      documentation
  and intentions.\n    + Improved escaping with `+smart`.\n    + Fixed grid tables
  embedded in grid tables (#2834).\n    + Use span with class 'smallcaps' for SmallCaps,
  instead of a style\n      attribute as before (#1592).\n    + Escape initial `%`
  in a paragraph if the `pandoc_title_blocks`\n      extension is enabled (#3454).
  \ Otherwise in a document starting with\n      a literal `%` the first line is wrongly
  interpreted as a title.\n    + Fixed false ordered lists in YAML metadata (#3492,
  #1685).  Now we\n      properly escape things that would otherwise start ordered
  lists,\n      such as\n\n          ---\n          title: 1. inline\n          ...\n
  \   + Better handling of tables with empty columns (#3337).  We now\n      calculate
  the number of columns based on the longest row (or the\n      length of aligns or
  widths).\n    + Escape unordered list markers at beginning of paragraph (#3497),
  to\n      avoid false interpretation as a list.\n    + Escape `|` appropriately.\n
  \   + Ensure space before list at top level (#3487).\n    + Avoid spurious blanklines
  at end of document after tables and list,\n      for example.\n    + Fixed bugs
  in simple/multiline list output (#3384).\n      Previously we got overlong lists
  with `--wrap=none`.  This is fixed.\n      Previously a multiline list could become
  a simple list (and would\n      always become one with `--wrap=none`).\n    + Don't
  emit a simple table if `simple_tables` disabled (#3529).\n    + Case-insensitive
  reference links (David A Roberts, #3616).\n      Ensure that we do not generate
  reference links whose labels differ only\n      by case.  Also allow implicit reference
  links when the link\n      text and label are identical up to case.\n    + Put space
  before reference link definitions (Mauro Bieg, #3630).\n    + Better escaping for
  links (David A. Roberts, #3619).  Previously the\n      Markdown writer would sometimes
  create links where there were none\n      in the source.  This is now avoided by
  selectively escaping bracket\n      characters when they occur in a place where
  a link might be created.\n    + Added missing `\\n` (David A. Roberts, #3647).\n
  \   + Fixed duplicated reference links with `--reference-links`\n      and `--reference-location=section`
  (#3674).  Also ensure that there\n      are no empty link references `[]`.\n    +
  Avoid inline surround-marking with empty content (#3715).\n      E.g. we don't want
  `<strong></strong>` to become `****`.\n      Similarly for emphasis, super/subscript,
  strikeout.\n    + Don't allow soft break in header (#3736).\n    + Make sure `plain`,
  `markdown_github`, etc. work for raw.\n      Previously only `markdown` worked.
  \ Note: currently a raw block labeled\n      `markdown_github` will be printed for
  any `markdown` format.\n    + Ensure that `+` and `-` are escaped properly so they
  don't cause\n      spurious lists (#3773).  Previously they were only\n      if
  succeeded by a space, not if they were at end of line.\n    + Use pipe tables if
  `raw_html` disabled and `pipe_tables` enabled,\n      even if the table has relative
  width information (#3734).\n    + Markdown writer: don't crash on `Str \"\"`.\n
  \   + Make `Span` with null attribute transparent.  That is, we don't use\n      brackets
  or `<span>` tags to mark spans when there are no attributes;\n      we simply output
  the contents.\n    + Escape pipe characters when `pipe_tables` enabled (#3887).\n
  \   + Better escaping of `<` and `>`.  If `all_symbols_escapable` is set,\n      we
  backslash escape these.  Otherwise we use entities as before.\n    + When writing
  plain, don't use `&nbsp;` to separate list and indented\n      code.  There's no
  need for it in this context, since this isn't to be\n      interpreted using Markdown
  rules.\n    + Preserve classes in JS obfuscated links (Timm Albers, #2989).\n      HTML
  links containing classes originally now preserve them when using\n      JavaScript
  email obfuscation.\n    + Render `SmallCaps` as a native span when `native_spans`
  are enabled.\n    + Always write attributes with `bracketed_spans` (d-dorazio).\n\n
  \ * Man writer:\n\n    + Fix handling of nested font commands (#3568).  Previously
  pandoc emitted\n      incorrect markup for bold + italic, for example, or bold +
  code.\n    + Avoid error for definition lists with no definitions (#3832).\n\n  *
  DocBook writer:\n\n    + Fix internal links with `writerIdentifierPrefix opt`\n
  \     (#3397, Mauro Bieg).\n\n  * Docx writer:\n\n    + Don't include bookmarks
  on headers unless non-null id (#3476).\n    + Support 9 levels of headers (#1642).\n
  \   + Allow 9 list levels (#3519).\n    + Don't take `distArchive` from datadir
  (#3322).  The docx writer takes\n      components from the distribution's version
  of `reference.docx` when it\n      can't find them in a user's custom `reference.docx`.
  \ Previously, we\n      allowed a `reference.docx` in the data directory (e.g. `~/.pandoc`)\n
  \     to be used as the distribution's reference.docx.  This led to a\n      bizarre
  situation where pandoc would produce a good docx using\n      `--template ~/.pandoc/ref.docx`,
  but if `ref.docx` were moved to\n      `~/.pandoc/reference.docx`, it would then
  produce a corrupted docx.\n    + Fixed handling of soft hyphen (0173) (#3691).\n
  \   + Better handling of keywords (#3719).\n    + Cleaner code for handling dir
  and style attributes for `Div`.\n    + Use `Set` for dynamic styles to avoid duplicates.\n
  \   + Removed redundant element from data/docx/word/numbering.xml.\n      The elements
  we need are generated when the document is\n      compiled; this didn't do anything.\n
  \   + Activate `evenAndOddHeaders` from reference docx (#3901,\n      Augustín Martín
  Barbero).\n\n  * ODT/OpenDocument writer:\n\n    + Calculate aspect ratio for percentage-sized
  images (Mauro Bieg, #3239).\n    + Use more widely available bullet characters (#1400).
  \ The old\n      characters weren't available in some font sets.  These seem to
  work\n      well on Windows and Linux versions of LibreOffice.\n    + Wider labels
  for lists (#2421).  This avoids overly narrow labels for\n      ordered lists with
  `()` delimiters.  However, arguably it creates\n      overly wide labels for bullets.
  \ Also, lists now start flush with\n      the margin, rather than indented.\n    +
  Fixed dropped elements in some ordered lists (#2434).\n\n  * FB2 writer:\n\n    +
  Don't render `RawBlock` as code.\n    + Don't fail with an error on interior headers
  (e.g. in list) (#3750).\n      Instead, omit them with an INFO message.\n    + Add
  support for \"lang\" metadata (Alexander Krotov, #3625).\n    + Format `LineBlock`
  as poem (Alexander Krotov).  Previously writer\n      produced one paragraph with
  `<empty-line/>` elements, which are not\n      allowed inside `<p>` according to
  FB2 schema.\n    + Replace `concatMap` with `cMap` (Alexander Krotov).\n    + Write
  FB2 lists without nesting blocks inside `<p>` (Alexander\n      Krotov, #4004)\n\n
  \ * HTML writer:\n\n    + Make sure `html4`, `html5` formats work for raw blocks/inlines.\n
  \   + Render raw inline environments when `--mathjax` used (#3816).\n      We previously
  did this only with raw blocks, on the assumption\n      that math environments would
  always be raw blocks. This has changed\n      since we now parse them as inline
  environments.\n    + Ensure we don't get two style attributes for width and height.\n
  \   + Report when not rendering raw inline/block.\n    + Issue warning if no title
  specified and template used (#3473).\n    + Info message if `lang` is unspecified
  (#3486).\n    + Removed unused parameter in `dimensionsToAttributeList`.\n    +
  Avoid two class attributes when adding `uri` class (#3716).\n    + Fix internal
  links with `writerIdentifierPrefix opt` (#3397, Mauro\n      Bieg).\n    + Use revealjs's
  math plugin for mathjax (#3743).  This is a thin\n      wrapper around mathjax that
  makes math look better on revealjs.\n    + Slidy:  use h1 for all slides, even if
  they were originally\n      level 2 headers (#3566).  Otherwise the built-in table
  of contents\n      in Slidy breaks.\n\n  * LaTeX writer:\n\n    + Don't render LaTeX
  images with data: URIs (#3636).  Note that\n      `--extract-media` can be used
  when the input contains data: URIs.\n    + Make highlighted code blocks work in
  footnotes (Timm Albers).\n    + Don't use figure inside table cell (#3836).\n    +
  Use proper code for list enumerators (#3891).  This should fix problems\n      with
  lists that don't use arabic numerals.\n    + Always add hypertarget when there's
  a non-empty identifier (#2719).\n      Previously the hypertargets were only added
  when there was actually\n      a link to that identifier.\n    + Use `%` after hypertarget
  before code block.\n    + Add `\\leavevmode` before hypertarget at start of paragraph
  (#2704,\n      fixes formatting problems in beamer citations).\n    + Don't use
  `lstinline` in \\item[..] (#645).  If you do, the contents\n      of item disappear
  or are misplaced.  Use `\\texttt` instead.\n    + Fix problem with escaping in `lstinline`
  (#1629).  Previously the\n      LaTeX writer created invalid LaTeX when `--listings`
  was specified and\n      a code span occurred inside emphasis or another construction.\n
  \   + Fix error with line breaks after empty content (#2874).  LaTeX\n      requires
  something before a line break, so we insert a `~` if no\n      printable content
  has yet been emitted.\n    + Use BCP47 parser.\n    + Fixed detection of otherlangs
  (#3770).  We weren't recursing into\n      inline contexts.\n    + Handle language
  in inline code with `--listings` (#3422).\n    + Write euro symbol directly in LaTeX
  (Andrew Dunning, #3801).\n      The textcomp package allows pdfLaTeX to parse `€`
  directly, making the\n      `\\euro` command unneeded.\n    + Fixed footnotes in
  table captions (#2378).  Note that if the table has\n      a first page header and
  a continuation page header, the notes will\n      appear only on the first occurrence
  of the header.\n    + In `writeBeamer` output, allow hyperlinks to frames (#3220).\n
  \     Previously you could link to a header above or below slide level but\n      not
  *to* slide level.  This commit changes that.  Hypertargets are\n      inserted inside
  frame titles; technically the reference is to just\n      after the title, but in
  normal use (where slides are viewed full\n      screen in a slide show), this does
  not matter.\n    + Remove `\\strut` at beginning of table cells (#3436).  This fixes
  a\n      problem with alignment of lists in table cells.  The `\\strut` at the\n
  \     end seems to be enough to avoid the too-close spacing that motivated\n      addition
  of the strut  in #1573.\n    + Add partial siunitx Support (Marc Schreiber, #3588).\n\n
  \ * ConTeXt writer:\n\n    + Refactored to use BCP47 module.\n    + Remove unnecessary
  `$` (Alexander Krotov, #3482).\n    + Use header identifiers for chapters (#3968).\n\n
  \ * EPUB writer:\n\n    + `title_page.xhtml` is now put in `text/`.\n    + Don't
  strip formatting in TOC (#1611).\n\n  * Textile reader:\n\n    + Fix bug for certain
  links in table cells (#3667).\n    + Allow 'pre' code in list item (#3916).\n\n
  \ * HTML reader:\n\n    + Added warnings for ignored material (#3392).\n    + Better
  sanity checks to avoid parsing unintended things as\n      raw HTML in the Markdown
  reader (#3257).\n    + Revise treatment of `li` with `id` attribute (#3596).  Previously
  we\n      always added an empty div before the list item, but this created\n      problems
  with spacing in tight lists.  Now we do this: If the list\n      item contents begin
  with a `Plain` block, we modify the `Plain`\n      block by adding a `Span` around
  its contents.  Otherwise, we add a\n      `Div` around the contents of the list
  item (instead of adding an\n      empty `Div` to the beginning, as before).\n    +
  Add `details` tag to list of block tags (#3694).\n    + Removed `button` from block
  tag list (#3717).  It is already in the\n      `eitherBlockOrInlineTag` list, and
  should be both places.\n    + Use `Set`s instead of lists for block tag lookup.\n
  \   + Rewrote to use `Text` throughout.  Effect on memory usage is modest\n      (<
  10%).\n    + Use the lang value of `<html>` to set the lang meta value (bucklereed,\n
  \     #3765).\n    + Ensure that paragraphs are closed properly when the parent
  block\n      element closes, even without `</p>` (#3794).\n    + Parse `<figure>`
  and `<figcaption>` (Mauro Bieg, #3813).\n    + Parse `<main>` like `<div role=main>`
  (bucklereed, #3791).\n      `<main>` closes `<p>` and behaves like a block element
  generally\n    + Support column alignments (#1881).  These can be set either\n      with
  a `width` attribute or with `text-width` in a `style` attribute.\n    + Modified
  state type to be an instance of `HasLogMessages`, so\n      `registerHeader` can
  issue warnings.\n    + `</td>` or `</th>` should close any open block tag (#3991).\n
  \   + `<td>` should close an open `<th>` or `<td>`.\n    + `htmlTag` improvements
  (#3989).  We previously failed on cases\n      where an attribute contained a `>`
  character. This patch fixes the\n      bug, which especially affects raw HTML in
  Markdown.\n\n  * Txt2Tags reader:\n\n    + Newline is not indentation (Alexander
  Krotov).\n\n  * MediaWiki reader:\n\n    + Allow extra hyphens after `|-` in tables
  (#2649).\n    + Allow blank line after table start (#2649).\n    + Fixed more table
  issues (#2649).\n    + Ensure that list starts begin at left margin (#2606).  Including
  when\n      they're in tables or other list items.\n    + Make smart double quotes
  depend on `smart` extension (#3585).\n    + Don't do curly quotes inside `<tt>`
  contexts (#3585).  Even if `+smart`.\n    + Modified state type to be an instance
  of `HasLogMessages`, so\n      `registerHeader` can issue warnings.\n\n  * TWiki
  reader (Alexander Krotov):\n\n    + Remove unnecessary `$` (#3597).\n    + Simplify
  `linkText` (#3605).\n\n  * EPUB reader:\n\n    + Minor refactoring, avoiding explicit
  MediaBag handling.\n      This all works behind the scenes in CommonState plumbing.\n\n
  \ * Docx reader:\n\n    + Don't drop smartTag contents (#2242).\n    + Handle local
  namespace declarations (#3365).  Previously we didn't\n      recognize math, for
  example, when the xmlns declaration occurred on\n      the element and not the root.\n
  \   + More efficient trimSps (#1530).  Replacing `trimLineBreaks`.  This\n      does
  the work of `normalizeSpaces` as well, so we avoid the need for\n      that function
  here.\n    + Avoid 0-level headers (Jesse Rosenthal, #3830).  We used to parse\n
  \     paragraphs styled with \"HeadingN\" as \"nth-level header.\" But if a\n      document
  has a custom style named \"Heading0\", this will produce a\n      0-level header,
  which shouldn't exist. We only parse this style\n      if N>0. Otherwise we treat
  it as a normal style name, and\n      follow its dependencies, if any.\n    + Add
  tests for avoiding zero-level header (Jesse Rosenthal).\n\n  * ODT reader:\n\n    +
  Replaced `collectRights` with Rights from `Data.Either`.\n    + Remove dead code
  (Albert Krewinkel).\n\n  * Org reader (Albert Krewinkel, unless noted).\n\n    +
  Don't allow tables inside list items (John MacFarlane, #3499).\n    + Disallow tables
  on list marker lines (#3499).\n    + Convert markup at beginning of footnotes (John
  MacFarlane, #3576).\n    + Allow emphasized text to be followed by `[` (#3577).\n
  \   + Handle line numbering switch for src blocks.\n      The line-numbering switch
  that can be given to source blocks (`-n` with\n      an start number as an optional
  parameter) is parsed and translated to a\n      class/key-value combination used
  by highlighting and other readers and\n      writers.\n    + Stop adding rundoc
  prefix to src params.  Source block parameter names\n      are no longer prefixed
  with `rundoc`. This was intended to simplify\n      working with the rundoc project,
  a babel runner. However, the rundoc\n      project is unmaintained, and adding those
  markers is not the reader's\n      job anyway.  The original language that is specified
  for a source\n      element is now retained as the `data-org-language` attribute
  and only\n      added if it differs from the translated language.\n    + Allow multi-word
  arguments to src block params (#3477).  The reader now\n      correctly parses src
  block parameter list even if parameter arguments\n      contain multiple words.\n
  \   + Avoid creating `nullMeta` by applying `setMeta` directly\n      (Alexander
  Krotov).\n    + Replace `sequence . map` with `mapM`.\n    + Fix smart parsing behavior.
  \ Parsing of smart quotes and special\n      characters can either be enabled via
  the `smart` language extension or\n      the `'` and `-` export options. Smart parsing
  is active if either the\n      extension or export option is enabled.  Only smart
  parsing of special\n      characters (like ellipses and en and em dashes) is enabled
  by default,\n      while smart quotes are disabled.  Previously, all smart parsing
  was\n      disabled unless the language extension was enabled.\n    + Subject full
  doc tree to headline transformations (Albert Krewinkel,\n      #3695).  Emacs parses
  org documents into a tree structure, which is\n      then post-processed during
  exporting. The reader is changed to do the\n      same, turning the document into
  a single tree of headlines starting\n      at level 0.\n    + Fix cite parsing behaviour
  (Herwig Stuetz).  Until now, `org-ref`\n      cite keys included special characters
  also at the end. This caused\n      problems when citations occur right before colons
  or at the end of\n      a sentence.  With this change, all non alphanumeric characters
  at\n      the end of a cite key are ignored.  This also adds `,` to the list\n      of
  special characters that are legal in cite keys to better mirror\n      the behaviour
  of org-export.\n    + Fix module names in haddock comments.  Copy-pasting had lead
  to\n      haddock module descriptions containing the wrong module names.\n    +
  Recognize babel result blocks with attributes (#3706).  Babel\n      result blocks
  can have block attributes like captions and names.\n      Result blocks with attributes
  were not recognized and were parsed\n      as normal blocks without attributes.\n
  \   + Include tags in headlines.  The Emacs default is to include tags in the\n
  \     headline when exporting.  Instead of just empty spans, which contain the\n
  \     tag name as attribute, tags are rendered as small caps and wrapped in\n      those
  spans.  Non-breaking spaces serve as separators for multiple tags.\n    + Respect
  export option for tags (#3713).  Tags are appended to\n      headlines by default,
  but will be omitted when the `tags` export option\n      is set to nil.\n    + Use
  `tag-name` attribute instead of `data-tag-name`.\n    + Use `org-language` attribute
  rather than `data-org-language`.\n    + Modified state type to be an instance of
  `HasLogMessages`, so\n      `registerHeader` can issue warnings.\n    + End footnotes
  after two blank lines.  Footnotes can not only be\n      terminated by the start
  of a new footnote or a header, but also by two\n      consecutive blank lines.\n
  \   + Update emphasis border chars (#3933).  The org reader was updated to\n      match
  current org-mode behavior: the set of characters which are\n      acceptable to
  occur as the first or last character in an org emphasis\n      have been changed
  and now allows all non-whitespace chars at the\n      inner border of emphasized
  text (see `org-emphasis-regexp-components`).\n\n  * RST reader:\n\n    + Fixed small
  bug in list parsing (#3432).  Previously the parser didn't\n      handle properly
  this case:\n\n          * - a\n            - b\n          * - c\n            - d\n
  \   + Handle multiline cells in simple tables (#1166).\n    + Parse list table directive
  (Keiichiro Shikano, #3432).\n    + Make use of `anyLineNewline` (Alexander Krotov,
  #3686).\n    + Use `anyLineNewline` in `rawListItem` (Alexander Krotov, #3702).\n
  \   + Reorganize block parsers for ~20% faster parsing.\n    + Fixed `..include::`
  directive (#3880).\n    + Handle blank lines correctly in line blocks (Alexander
  Krotov, #3881).\n      Previously pandoc would sometimes combine two line blocks
  separated\n      by blanks, and ignore trailing blank lines within the line block.\n
  \   + Fix indirect hyperlink targets (#512).\n\n  * Markdown reader:\n\n    + Allow
  attributes in reference links to start on next line (#3674).\n    + Parse YAML metadata
  in a context that sees footnotes defined in\n      the body of the document (#1279).\n
  \   + When splitting pipe table cells, skip tex math (#3481).\n      You might have
  a `|` character inside math.  (Or for that matter\n      something that the parser
  might mistake for raw HTML.)\n    + Treat span with class `smallcaps` as SmallCaps.\n
  \     This allows users to specify small caps in Markdown this way:\n      `[my
  text]{.smallcaps}` (#1592).\n    + Fixed internal header links (#2397).\n      This
  patch also adds `shortcut_reference_links` to the list\n      of mmd extensions.\n
  \   + Treat certain environments as inline\n      when they occur without space
  surrounding them (#3309, #2171).\n      E.g. equation, math.  This avoids incorrect
  vertical space\n      around equations.\n    + Optimized `nonindentSpaces`.  Makes
  the benchmark go from 40 to 36 ms.\n    + Allow latex macro definitions indented
  1-3 spaces.\n      Previously they only worked if nonindented.\n    + Improved parsing
  of indented raw HTML blocks (#1841).\n      Previously we inadvertently interpreted
  indented HTML as\n      code blocks.  This was a regression.  We now seek to determine
  the\n      indentation level of the contents of an HTML block, and (optionally)\n
  \     skip that much indentation.  As a side effect, indentation may be\n      stripped
  off of raw HTML blocks, if `markdown_in_html_blocks` is\n      used. This is better
  than having things interpreted as indented\n      code blocks.\n    + Fixed smart
  quotes after emphasis (#2228).  E.g. in `*foo*'s 'foo'`.\n    + Warn for notes defined
  but not used (#1718).\n    + Use `anyLineNewline` (Alexander Krotov).\n    + Interpret
  YAML metadata as Inlines when possible (#3755).  If\n      the metadata field is
  all on one line, we try to interpret it as\n      Inlines, and only try parsing
  as Blocks if that fails.  If it\n      extends over one line (including possibly
  the `|` or `>` character\n      signaling an indented block), then we parse as Blocks.
  \ This was\n      motivated by some German users finding that `date: '22. Juin 2017'`\n
  \     got parsed as an ordered list.\n    + Fixed spurious parsing as citation as
  reference def (#3840).\n      We now disallow reference keys starting with `@` if
  the\n      `citations` extension is enabled.\n    + Parse `-@roe` as suppress-author
  citation (pandoc-citeproc#237).\n      Previously only `[-@roe]` (with brackets)
  was recognized as\n      suppress-author, and `-@roe` was treated the same as `@roe`.\n
  \   + Fixed parsing of fenced code after list when there is no intervening\n      blank
  line (#3733).\n    + Allow raw latex commands starting with `\\start` (#3558).  Previously\n
  \     these weren't allowed because they were interpreted as starting\n      ConTeXt
  environments, even without a corresponding `\\stop`...\n    + Added `inlines`, `inlines1`.\n
  \   + Require nonempty alt text for `implicit_figures` (#2844).\n      A figure
  with an empty caption doesn't make sense.\n    + Removed texmath macro material;
  now all this is handled\n      in the LaTeX reader functions.\n    + Fixed bug with
  indented code following raw LaTeX (#3947).\n\n  * LaTeX reader:\n\n    + Rewrote
  LaTeX reader with proper tokenization (#1390,\n      #2118, #3236, #3779, #934,
  #982).  This rewrite is primarily\n      motivated by the need to get macros working
  properly.  A side benefit\n      is that the reader is significantly faster.  We
  now tokenize the\n      input text, then parse the token stream.  Macros modify
  the token\n      stream, so they should now be effective in any context, including\n
  \     math. Thus, we no longer need the clunky macro processing\n      capacities
  of texmath.\n    + Parse `\\,` to `\\8198` (six-per-em space) (Henri Werth).\n    +
  Allow `\\newcommand\\foo{blah}` without braces.\n    + Support `\\lstinputlisting`
  (#2116).\n    + Issue warnings when skipping unknown latex commands (#3392).\n    +
  Include contents of `\\parbox`.\n    + Allow `\\hspace` and `\\vspace` to count
  as raw block or inline.\n      Previously we would refuse to parse anything as raw
  inline if\n      it was in the `blockCommands` list.  Now we allow exceptions\n
  \     if they're listed under ignoreInlines in inlineCommands.\n      This should
  make it easier e.g. to include an `\\hspace`\n      between two side-by-side raw
  LaTeX tables.\n    + Don't drop contents of `\\hypertarget`.\n    + Handle spaces
  before `\\cite` arguments.\n    + Allow newpage, clearpage, pagebreak in inline
  contexts as well as\n      block contexts (#3494).\n    + Treat `{{xxx}}` the same
  as `{xxx}` (#2115).\n    + Use `pMacroDefinition` in macro (for more direct parsing).\n
  \     Note that this means that `macro` will now parse one\n      macro at a time,
  rather than parsing a whole group together.\n    + Fixed failures on \\ref{}, \\label{}
  with `+raw_tex`.  Now these\n      commands are parsed as raw if `+raw_tex`; otherwise,
  their argument\n      is parsed as a bracketed string.\n    + Don't crash on empty
  `enumerate` environment (#3707).\n    + Handle escaped `&` inside table cell (#3708).\n
  \   + Handle block structure inside table cells (#3709).  `minipage` is no\n      longer
  required.\n    + Handle some width specifiers on table columns (#3709).  Currently\n
  \     we only handle the form `0.9\\linewidth`.  Anything else would have\n      to
  be converted to a percentage, using some kind arbitrary assumptions\n      about
  line widths.\n    + Make sure `\\write18` is parsed as raw LaTeX.  The change is
  in the\n      LaTeX reader's treatment of raw commands, but it also affects the\n
  \     Markdown reader.\n    + Fixed regression with starred environment names (#3803).\n
  \   + Handle optional args in raw `\\titleformat` (#3804).\n    + Improved heuristic
  for raw block/inline.  An unknown command at the\n      beginning of the line that
  could be either block or inline is\n      treated as block if we have a sequence
  of block commands followed by\n      a newline or a `\\startXXX` command (which
  might start a raw ConTeXt\n      environment).\n    + Don't remove macro definitions
  from the output, even if\n      `Ext_latex_macros` is set, so that macros will be
  applied.\n      Since they're only applied to math in Markdown, removing the macros\n
  \     can have bad effects.  Even for math macros, keeping them should be\n      harmless.\n
  \   + Removed `macro`.  It is no longer necessary, since the\n      `rawLaTeXBlock`
  parser will parse macro definitions.  This also avoids\n      the need for a separate
  `latexMacro` parser in the Markdown reader.\n    + Use `label` instead of `data-label`
  for label in caption (#3639).\n    + Fixed space after \\figurename etc.\n    +
  Resolve references to section numbers.\n    + Fix `\\let\\a=0` case, with single
  character token.\n    + Allow `@` as a letter in control sequences.  `@` is commonly
  used\n      in macros using `\\makeatletter`.  Ideally we'd make the tokenizer\n
  \     sensitive to `\\makeatletter` and `\\makeatother`, but until then this\n      seems
  a good change.\n    + Track header numbers and correlate with labels.\n    + Allow
  `]` inside group in option brackets (#3857).\n    + lstinline with braces can be
  used (verb cannot be used with braces)\n      (Marc Schreiber, #3535).\n    + Fix
  keyval function: pandoc did not parse options in braces correctly\n      (Marc Schreiber,
  #3642).\n    + When parsing raw LaTeX commands, include trailing space (#1773).\n
  \     Otherwise things like `\\noindent foo` break and turn into\n      `\\noindentfoo`.
  \ Affects `-f latex+raw_tex` and `-f markdown` (and other\n      formats that allow
  `raw_tex`).\n    + Don't treat \"...\" as Quoted (#3958).  This caused quotes to
  be omitted in\n      `\\texttt` contexts.\n    + Add tests for existing `\\includegraphics`
  behaviour (Ben Firshman).\n    + Allow space before `=` in bracketd options (Ben
  Firshman).\n    + Be more forgiving in parsing command options.  This was needed,
  for\n      example, to make some minted options work.\n    + Strip off quotes in
  `\\include` filenames.\n\n  * Added `Text.Pandoc.CSV`, simple (unexported) CSV parser.\n\n
  \ * `Text.Pandoc.PDF`:\n\n    + Got `--resource-path` working with PDF output (#852).\n
  \   + Fetch images when generating PDF via context (#3380).\n      To do this, we
  create the temp directory as a subdirectory\n      of the working directory. Since
  context mk IV by default looks\n      for images in the parent directory, this works.\n
  \   + Use `report` instead of `warn`, make it sensitive to verbosity settings.\n
  \   + Use `fillMediaBag` and `extractMedia` to extract media to temp dir.\n      This
  reduces code duplication.\n    + `html2pdf`: use stdin instead of intermediate HTML
  file\n    + Removed useless `TEXINPUTS` stuff for `context2pdf`.  mkiv context\n
  \     doesn't use `TEXINPUTS`.\n\n  * `Text.Pandoc.Pretty`:\n\n    + Simplified
  definition of `realLength`.\n    + Don't error for blocks of size < 1.  Instead,
  resize to 1 (see #1785).\n\n  * `Text.Pandoc.MIME`:\n\n    + Use `application/javascript`
  (not `application/x-javascript`).\n    + Added `emf` to mimeTypes with type `application/x-msmetafile`
  (#1713).\n\n  * `Text.Pandoc.ImageSize`:\n\n    + Improve SVG image size code (Marc
  Schreiber, #3580).\n    + Make `imageSize` recognize basic SVG dimensions (Mauro
  Bieg, #3462).\n\n  * Use `Control.Monad.State.Strict` throughout.  This gives 20-30%
  speedup\n    and reduction of memory usage in most of the writers.\n\n  * Use `foldrWithKey`
  instead of deprecated `foldWithKey`.\n\n  * `Text.Pandoc.SelfContained`:\n\n    +
  Fixed problem with embedded fonts (#3629).\n    + Refactored getData from `getDataURI`
  in `SelfContained`.\n    + Don't use data URIs for script or style (#3423).  Instead,
  just use\n      script or style tags with the content inside.  The old method with\n
  \     data URIs prevents certain optimizations outside pandoc.  Exception:\n      data
  URIs are still used when a script contains `</script>` or a\n      style contains
  `</`.\n    + SelfContained: Handle URL inside material retrieved from a URL\n      (#3629).
  \ This can happen e.g. with an @import of a google web font.\n      (What is imported
  is some CSS which contains an url reference\n      to the font itself.) Also, allow
  unescaped pipe (|) in URL.\n    + Load resources from `data-src` (needed for lazy
  loading in\n      reveal.js slide shows).\n    + Handle `data-background-image`
  attribute on section (#3979).\n\n  * `Text.Pandoc.Parsing`:\n\n    + Added `indentWith`
  (Alexander Krotov, #3687).\n    + Added `stateCitations` to `ParserState`.\n    +
  Removed `stateChapters` from `ParserState`.\n    + In `ParserState`, make `stateNotes'`
  a Map, add `stateNoteRefs`.\n    + Added `gobbleSpaces` and `gobbleAtMostSpaces`.\n
  \   + Adjusted type of `insertIncludedFile` so it can be used with token\n      parser.\n
  \   + Replace old texmath macro stuff from Parsing.  Use Macro from\n      Text.Pandoc.Readers.LaTeX.Types
  instead.\n    + Export `insertIncludedFile`.\n    + Added `HasLogMessages`, `logMessage`,
  `reportLogMessages` (#3447).\n    + Replace partial with total function (Albert
  Krewinkel).\n    + Introduce `HasIncludeFiles` type class (Albert Krewinkel).  The\n
  \     `insertIncludeFile` function is generalized to work with all parser\n      states
  which are instances of that class.\n    + Add `insertIncludedFilesF` which returns
  F blocks (Albert Krewinkel).\n      The `insertIncludeFiles` function was generalized
  and renamed\n      to `insertIncludedFiles'`; the specialized versions are based
  on that.\n    + `many1Till`: Check for the end condition before parsing (Herwig\n
  \     Stuetz).  By not checking for the end condition before the first\n      parse,
  the parser was applied too often, consuming too much of the\n      input. This only
  affects `many1Till p end` where `p` matches on a\n      prefix of `end`.\n    +
  Provide `parseFromString` (#3690).  This is a version of\n      `parseFromString`
  specialied to ParserState, which resets\n      `stateLastStrPos` at the end.  This
  is almost always what we want.\n      This fixes a bug where `_hi_` wasn't treated
  as emphasis in the\n      following, because pandoc got confused about the position
  of the\n      last word: `- [o] _hi_`.\n    + Added `takeP`, `takeWhileP` for efficient
  parsing of `[Char]`.\n    + Fix `blanklines` documentation (Alexander Krotov, #3843).\n
  \   + Give less misleading line information with `parseWithString`.\n      Previously
  positions would be reported past the end of the chunk.\n      We now reset the source
  position within the chunk and report\n      positions \"in chunk.\"\n    + Add `anyLineNewline`
  (Alexander Krotov).\n    + Provide shared F monad functions for Markdown and Org
  readers\n      (Albert Krewinkel).  The `F` monads used for delayed evaluation\n
  \     of certain values in the Markdown and Org readers are based on a\n      shared
  data type capturing the common pattern of both `F` types.\n    + Add `returnF` (Alexander
  Krotov).\n    + Avoid parsing `Notes:**` as a bare URI (#3570).  This avoids parsing\n
  \     bare URIs that start with a scheme + colon + `*`, `_`, or `]`.\n    + Added
  `readerAbbreviations` to `ParserState`.  Markdown reader\n      now consults this
  to determine what is an abbreviation.\n    + Combine grid table parsers (Albert
  Krewinkel, #3638).  The grid table\n      parsers for markdown and rst was combined
  into one single\n      parser `gridTable`, slightly changing parsing behavior of
  both\n      parsers: (1) The markdown parser now compactifies block content\n      cell-wise:
  pure text blocks in cells are now treated as paragraphs\n      only if the cell
  contains multiple paragraphs, and as plain blocks\n      otherwise. Before, this
  was true only for single-column tables. (2)\n      The rst parser now accepts newlines
  and multiple blocks in header\n      cells.\n    + Generalize tableWith, gridTableWith
  (Albert Krewinkel).\n      The parsing functions `tableWith` and `gridTableWith`
  are generalized\n      to work with more parsers. The parser state only has to be
  an\n      instance of the `HasOptions` class instead of requiring a concrete\n      type.
  Block parsers are required to return blocks wrapped into a\n      monad, as this
  makes it possible to use parsers returning results\n      wrapped in `Future`s.\n\n
  \ * `Text.Pandoc.Shared`:\n\n    + Simplify `toRomanNumeral` using guards (Alexander
  Krotov, #3445)\n    + `stringify`: handle Quoted better (#3958).  Previously we
  were losing\n      the quotation marks in Quoted elements.\n\n  * `Text.Pandoc.Writers.Shared`:\n\n
  \   + Export `metaToJSON'`, `addVariablesToJSON` (#3439).\n      This allows us
  to add the variables AFTER using the metadata\n      to generate a YAML header (in
  the Markdown writer).\n    + Added `unsmartify` (previously in RST writer).\n      Undo
  literal double curly quotes.  Previously we left these.\n    + Generalize type of
  `metaToJSON` so it can take a Text.  Previously a\n      String was needed as argument;
  now any ToJSON instance will do.\n    + Added `gridTable` (previously in Markdown
  writer).\n    + `gridTable`: Refactored to use widths in chars.\n    + `gridTable`:
  \ remove unnecessary extra space in cells.\n    + Fixed `addVariablesToJSON`.  It
  was previously not allowing multiple\n      values to become lists.\n    + Pipe
  tables: impose minimum cell size (see #3526).\n\n\n  [default template changes]\n\n
  \ * HTML templates (including EPUB and HTML slide show templates):\n\n    + Make
  default.html5 polyglot markup conformant (John Luke Bentley,\n      #3473).  Polyglot
  markup is HTML5 that is also valid XHTML. See\n      <https://www.w3.org/TR/html-polyglot>.
  \ With this change, pandoc's\n      html5 writer creates HTML that is both valid
  HTML5 and valid XHTML.\n    + Regularized CSS in html/epub/html slide templates
  (#3485).\n      All templates now include `code{white-space: pre-wrap}`\n      and
  CSS for `q` if `--html-q-tags` is used.  Previously some templates\n      had `pre`
  and others `pre-wrap`; the `q` styles were only sometimes\n      included.\n    +
  CSS for `.smallcaps`, (Mauro Bieg, #1592)\n    + `default.revealjs`: make `history`
  default to true.\n    + `default.revealjs`: use lazy loading (#2283).\n    + `default.revealjs`:
  add `mathjax` variable and some conditional code\n      to use the MathJaX plugin.\n
  \   + `default.slidy` uses `https` instead of `http` (ickc, #3848).\n    + `default.dzslides`:
  Load Google Font using HTTPS by default\n      (Yoan Blanc).\n\n  * DocBook5 template:
  Use `lang` and `subtitle` variables (Jens Getreu,\n    #3855).\n\n  * LaTeX/Beamer
  template:\n\n    + Combine LaTeX/Beamer templates (Andrew Dunning, #3878).\n      `default.beamer`
  has been removed; beamer now uses the\n      `default.latex` template.  Beamer-specific
  parts are conditional\n      on the `beamer` variable set by the writer. Note that\n
  \     `pandoc -D beamer` will return this (combined) template.\n    + Use `xcolor`
  for `colorlinks` option (Andrew Dunning, #3877).\n      Beamer loads `xcolor` rather
  than `color`, and thus the\n      `dvipsnames` option doesn't take effect. This
  also provides a wider\n      range of colour selections with the `svgnames` option.\n
  \   + Use starred versions of `xcolor` names (Andrew Dunning).\n      Prevents changes
  to documents defined using the `dvipsnames` list (e.g.\n      `Blue` gives a different
  result with svgnames enabled).\n    + Load `polyglossia` after header-includes (#3898).
  \ It needs to be\n      loaded as late as possible.\n    + Use `unicode-math` (Vaclav
  Haisman).  Use `mathspec` with only\n      XeLaTeX on request.\n    + Don't load
  `fontspec` before `unicode-math` (over there).\n      The `unicode-math` package
  loads `fontspec` so explicit loading of\n      `fontspec` before `unicode-math`
  is not necessary.\n    + Use `unicode-math` by default in default.latex template.
  \ mathspec will\n      be used in xelatex if the `mathspec` variable is set; otherwise\n
  \     unicode-math will be used (Václav Haisman).\n    + Use `dvipsnames` options
  when `colorlinks` specified (otherwise\n      we get an error for `maroon`) (Thomas
  Hodgson).\n    + Added beamer `titlegraphic` and `logo` variables (Thomas Hodgson).\n
  \   + Fix typo in fix for notes in tables (#2378, zeeMonkeez).\n    + Fix `hyperref`
  options clash (Andrew Dunning, #3847) Avoids an options\n      clash when loading
  a package (e.g. `tufte-latex`) that uses\n      `hyperref` settings different from
  those in the template.\n    + Add `natbiboptions` variable (#3768).\n    + Fix links
  inside captions in LaTeX output with links-as-notes\n      (Václav Haisman, #3651).
  \ Declare our redefined `\\href` robust.\n    + Load `parskip` before `hyperref`
  (Václav Haisman, #3654).\n    + Allow setting Japanese fonts when using LuaLaTeX
  (Václav Haisman,\n      #3873).  by using the `luatexja-fontspec` and `luatexja-preset`\n
  \     packages. Use existing `CJKmainfont` and `CJKoptions` template\n      variables.
  Add `luatexjafontspecoptions` for `luatexja-fontspec`\n      and `luatexjapresetoptions`
  for `luatexja-preset`.\n    + Added `aspectratio` variable to beamer template (Václav
  Haisman,\n      #3723).\n    + Modified template.latex to fix XeLaTex being used
  with tables\n      (lwolfsonkin, #3661).  Reordered `lang` variable handling to\n
  \     immediately before `bidi`.\n\n  * ConTeXt template: Improved font handling:
  `simplefonts` is now\n    obsolete in ConTeXt (Pablo Rodríguez).\n\n\n  [documentation
  improvements]\n\n  * MANUAL.txt:\n\n    + Add URL for Prince HTML > PDF engine (Ian,
  #3919).\n    + Document that content above slide-level will be omitted in\n      slide
  shows.  See #3460, #2265.\n    + Explain `--webtex` SVG url (Mauro Bieg, #3471)\n
  \   + Small clarification in YAML metadata section.\n    + Document that html4 is
  technically XHTML 1.0 transitional.\n    + Remove refs to highlighting-kate (#3672).\n
  \   + Document ibooks specific epub metadata.\n    + Clarify that mathml is used
  for ODT math.\n    + Mention limitations of Literate Haskell Support (#3410,\n      Joachim
  Breitner).\n    + Add documentation of limitations of grid tables (Stephen\n      McDowell,
  #3864).\n    + Clarify that meta-json contains transformed values (Jakob Voß,\n
  \     #3491) Make clear that template variable `meta-json` does not\n      contain
  plain text values or JSON output format but field values\n      transformed to the
  selected output format.\n\n  * COPYRIGHT:\n\n    + Clarify that templates are dual-licensed.\n
  \   + Clarify that pandoc-types is BSD3 licensed.\n    + List new files not written
  by jgm (Albert Krewinkel).\n    + Update dates in copyright notices (Albert Krewinkel).
  \ This follows\n      the suggestions given by the FSF for GPL licensed software.\n
  \     <https://www.gnu.org/prep/maintain/html_node/Copyright-Notices.html>\n\n  *
  INSTALL.md:\n\n    + Improved instructions for tests with patterns.\n    + Put RPM-based
  distros on separate point (Mauro Bieg, #3449)\n\n  * CONTRIBUTING.md:\n\n    + Fixed
  typos (Wandmalfarbe, #3479).\n    + Add \"ask on pandoc-discuss\" (Mauro Bieg).\n\n
  \ * Add lua filter documentation in `doc/lua-filters.md`.  Note that the\n    end
  of this document is autogenerated from `data/pandoc.lua`\n    using `make doc/lua-filters.md`,
  which uses `tools/ldoc.ltp`\n    (Albert Krewinkel).\n\n  * Add `doc/filters.md`.
  This is the old scripting tutorial from\n    the website.\n\n  * Add `doc/using-the-pandoc-api.md`
  (#3289).  This gives an introduction\n    to using pandoc as a Haskell library.\n\n\n
  \ [build infrastructure improvements]\n\n  * Removed `data/templates` submodule.
  \ Templates are now a subtree\n    in `data/templates`.  This removes the need to
  do `git submodule\n    update`.\n\n  * Renamed `tests` -> `test`.\n\n  * Remove
  `https` flag.  Always build with HTTPS support.\n\n  * Use `file-embed` instead
  of `hsb2hs` to embed data files when\n    `embed_data_files` flag is set.  `file-embed`
  gives us better dependency\n    tracking:  if a data file changes, ghc/stack/cabal
  know to recompile\n    the Data module.  This also removes `hsb2hs` as a build dependency.\n\n
  \ * Add `custom-setup` stanza to pandoc, lowercase field names.\n\n  * Add `static`
  Cabal flag.\n\n  * Name change OSX -> MacOS.  Add a -MacOS suffix to mac package
  rather\n    than -OSX.  Changed local names from osx to macos.\n\n  * make_macos_package.sh
  - Use strip to reduce executable size.\n\n  * Revised binary linux package.  Now
  a completely static executable\n    is created, using Docker and alpine.  We create
  both a deb and a\n    tarball.  The old `deb` directory has been replaced with a
  `linux`\n    directory.  Running `make` in the `linux` directory should\n    perform
  the build, putting the binary packages in `artifacts/`.\n\n  * `linux/control.in`:
  add `Replaces:`, so existing pandoc-citeproc and\n    pandoc-data packages will
  be uninstalled; this package provides\n    both (#3822).  Add latex packages as
  'suggested', update\n    description.\n\n  * Remove cpphs build requirement -- it
  is no longer needed.\n\n  * Replaced `{deb,macos,windows}/stack.yaml` with `stack.pkg.yaml`.\n\n
  \ * Name change OSX -> macOS (ickc, #3869).\n\n  * Fix casing of Linux, UNIX, and
  Windows (ickc).\n\n  * `.travis.yml`:  create a source dist and do cabal build and
  test there.\n    That way we catch errors due to files missing from the data\n    section
  of pandoc.cabal.\n\n  * Makefile:\n\n    + Split `make haddock` from `make full`.\n
  \   + Add BRANCH variable for winpkg.\n    + Add `lint` target.\n    + Improve `make
  full`. Disable optimizations.\n      Build everything, inc. trypandoc and benchmarks.
  \ Use parallel build.\n    + Allow `make test` to take `TESTARGS`.\n\n  * Added
  new command tests (`Tests.Command`), using small text files\n    in `test/command/`.
  \ Any files added in this directory will be treated\n    as shell tests (see smart.md
  for an example).  This makes it very easy\n    to add regression tests etc.\n\n
  \ * Test fixes so we can find data files.  In old tests & command tests,\n    we
  now set the environment variable `pandoc_datadir`.  In lua tests,\n    we set the
  datadir explicitly.\n\n  * Refactored `compareOutput` in docx writer test.\n\n  *
  Consolidated some common functions in `Tests.Helper`.\n\n  * Small change to unbalanced
  bracket test to speed up test suite.\n\n  * Speed up Native writer quickcheck tests.\n\n
  \ * Use tasty for tests rather than test-framework.\n\n  * Add simple Emacs mode
  to help with Pandoc templates editing.\n    (Václav Haisman, #3889). `tools/pandoc-template-mode.el`\n\n\npandoc
  (1.19.2)\n\n  * Use skylighting library instead of highlighting-kate for syntax\n
  \   highlighting. Skylighting is faster and more accurate (#3363).\n    Later we'll
  be able to add features like warning messages, dynamic\n    loading of xml syntax
  definitions, and dynamic loading of themes.\n\n  * Added a new highlight style,
  `breezeDark`.\n\n  * Text.Pandoc.Highlighting: Update list of `listings` languages
  (#3374).\n    This allows more languages to be used when using the `--listings`\n
  \   option.\n\n  * OpenDocument writer:\n\n    + Small refactoring.  Removed separate
  'parent' parameter in paraStyle.\n    + Don't profilerate text styles unnecessarily
  (#3371).\n      This change makes the writer create only as many temporary\n      text
  styles as are absolutely necessary. It also consolidates\n      adjacent nodes with
  the same style.\n\n  * Org reader (Albert Krewinkel):\n\n    + Allow short hand
  for single-line raw blocks (Albert Krewinkel,\n      #3366).  Single-line raw blocks
  can be given via `#+FORMAT: raw line`,\n      where `FORMAT` must be one of `latex`,
  `beamer`, `html`, or `texinfo`.\n    + Accept org-ref citations followed by commas
  (Albert Krewinkel).\n      Bugfix for an issue which, whenever the citation was
  immediately\n      followed by a comma, prevented correct parsing of org-ref citations.\n
  \   + Ensure emphasis markup can be nested.  Nested emphasis markup (e.g.\n      `/*strong
  and emphasized*/`) was interpreted incorrectly in that the\n      inner markup was
  not recognized.\n    + Remove pipe char irking the haddock coverage tool (Albert
  Krewinkel).\n\n  * Docx reader: Empty header should be list of lists (Jesse Rosenthal).\n
  \   In the past, the docx reader wrote an empty header as an empty list. It\n    should
  have the same width as a row (and be filled with empty cells).\n\n  * MediaWiki
  reader:\n\n    + Improved handling of display math (#3362).  Sometimes display math
  is\n      indented with more than one colon.  Previously we handled these cases\n
  \     badly, generating definition lists and missing the math.\n    + Fix quotation
  mark parsing (#3336, tgkokk).  Change MediaWiki reader's\n      behavior when the
  smart option is parsed to match other readers'\n      behavior.\n\n  * Markdown
  reader:\n\n    + Fixed `-f markdown_github-hard_line_breaks+escaped_line_breaks`\n
  \     (#3341).  Previously this did not properly enable escaped line breaks.\n    +
  Disallow space between inline code and attributes (#3326, #3323,\n      Mauro Bieg).\n\n
  \ * DocBook5 writer: make id attribute xml:id, fixes #3329 (#3330, Mauro Bieg).\n\n
  \ * Added some test cases for ODT reader (#3306, #3308, Hubert Plociniczak).\n\n
  \ * LaTeX writer: allow tables with empty cells to count as \"plain.\"\n    This
  addresses a problem of too-wide tables when empty cells\n    are used.  Thanks to
  Joost Kremers for reporting the issue.\n\n  * Org writer: prefix footnote numbers
  with `fn:` (Albert Krewinkel).\n    Unprefixed numbers where used by older org-mode
  versions, but are no\n    longer supported.\n\n  * HTML writer: don't process pars
  with empty RawInline, (#1040, #3327,\n    Mauro Bieg).\n\n  * Markdown writer: Fix
  display math with `--webtex` (#3298).\n\n  * Fix sample.lua so it properly handles
  raw blocks/inlines (#3358,\n    bumper314).\n\n  * Templates:\n\n    + default.latex:
  Moved geometry after hyperref (Václav Haisman).\n      Otherwise PDF sizes can be
  wrong in some circumstances.\n    + Copied a few changes from default.latex to default.beamer\n
  \     (Wandmalfarbe).\n    + default.latex, default.beamer: Changed position of
  `\\VerbatimNotes`\n      and `fancyvrb`.  This fixes hyperlinks on footnotes in
  documents\n      that contain verbatim in notes (#3361).  (Note: the beamer template\n
  \     was updated to match the LaTeX template, but at this point verbatim\n      in
  notes seems not to work in beamer.)\n    + default.latex: Allow passing `microtypeoptions`
  to microtype\n      (Václav Haisman).\n    + default.latex: Add hyphen option to
  url package.\n    + default.docbook5: Fix namespace declarations (Mauro Bieg).\n\n
  \ * Moved `make_osx_package.sh` to `osx/` directory.\n\n  * Travis continuous integration:\n\n
  \   + Fix false positives with dist build.\n    + Speed improvements (Kolen Cheung,
  #3304, #3357).\n\n  * MANUAL.txt:\n\n    + Clarify that blank space is needed around
  footnotes (#3352).\n    + Fixed typo (#3351, Alexey Rogechev).\n    + Note that
  `--wrap=auto` does not work in HTML output.\n    + Default `--columns` width is
  72, not 80.\n    + Fixed broken links (#3316, Kolen Cheung).\n    + Document usage
  of `@*` in nocite section (#3333, John Muccigrosso).\n\n  * INSTALL.md:\n\n    +
  Indent code so it's properly formatted (#3335, Bheesham Persaud).\n    + Added instructions
  for extracting binary from OSX, Windows packages.\n\n  * CONTRIBUTING.md: Describe
  labels currently used in issue tracker\n    (Albert Krewinkel).  The labels have
  changed over time, the list of\n    labels is updated to reflect the current set
  of labels used in the\n    issue tracker.\n\n  * Rearrange and extend badges in
  README (Albert Krewinkel, #3354)\n\n  * Bumped version bounds for dependencies.\n\n\npandoc
  (1.19.1)\n\n  * Set `PANDOC_VERSION` environment variable for filters (#2640).\n
  \   This allows filters to check the pandoc version that produced\n    the JSON
  they are receiving.\n\n  * Docx reader: Ensure one-row tables don't have header
  (#3285,\n    Jesse Rosenthal).  Tables in MS Word are set by default to have\n    special
  first-row formatting, which pandoc uses to determine whether\n    or not they have
  a header. This means that one-row tables will, by\n    default, have only a header
  -- which we imagine is not what people\n    want. This change ensures that a one-row
  table is not understood to\n    be a header only.  Note that this means that it
  is impossible to\n    produce a header-only table from docx, even though it is legal\n
  \   pandoc. But we believe that in nearly all cases, it will be an\n    accidental
  (and unwelcome) result\n\n  * HTML reader:\n\n    + Fixed some bad regressions in
  HTML table parser (#3280).\n      This regression leads to the introduction of empty
  rows\n      in some circumstances.\n    + Understand `style=width:` as well as `width`
  in `col` (#3286).\n\n  * RST reader:\n\n    + Print warnings when keys, substitition,
  notes not found.\n      Previously the parsers failed and we got raw text.  Now
  we get a\n      link with an empty URL, or empty inlines in the case of a note or\n
  \     substitution.\n\n    + Fix hyperlink aliases (#3283).\n\n  * Man writer: Ensure
  that periods are escaped at beginning of line\n    (#3270).\n\n  * LaTeX writer:
  Fix unnumbered headers when used with `--top-level`\n    (#3272, Albert Krewinkel).
  \ Fix interaction of top-level divisions\n    `part` or `chapter` with unnumbered
  headers when emitting LaTeX.  Headers\n    are ensured to be written using stared
  commands (like `\\subsection*{}`).\n\n  * LaTeX template: use comma not semicolon
  to separate keywords for\n    `pdfkeywords`.  Thanks to Wandmalfarbe.\n\n  * Markdown
  writer: Fixed incorrect word wrapping (#3277).  Previously pandoc\n    would sometimes
  wrap lines too early due to this bug.\n\n  * Text.Pandoc.Pretty:  Added `afterBreak`
  [API change].  This makes it\n    possible to insert escape codes for content that
  needs escaping at the\n    beginning of a line.\n\n  * Removed old MathMLInHTML.js
  from 2004, which should no longer\n    be needed for MathML with modern browsers.\n\n
  \ * Fixed tests with dynamic linking (#2709).\n\n  * Makefile: Use stack instead
  of cabal for targets.  This is just\n    a convenience for developers.\n\n  * Fixed
  bash completion of filenames with space (#2749).\n\n  * MANUAL: improved documentation
  on how to create a custom `reference.docx`.\n\n  * Fix minor spelling typos in the
  manual (#3273, Anthony Geoghegan)\n\npandoc (1.19)\n\n  * Changed resolution of
  filter paths.\n\n    + We now first treat the argument of `--filter` as a full (absolute\n
  \     or relative) path, looking for a program there. If it's found, we\n      run
  it.\n    + If not, and if it is a simple program name or a relative path, we\n      try
  resolving it relative to `$DATADIR/filters`.\n    + If this fails, then we treat
  it as a program name and look in the\n      user's PATH.\n    + Removed a hardcoded
  '/' that may have caused problems with\n      Windows paths.\n\n    Previously if
  you did `--filter foo` and you had `foo` in your path and\n    also an executable
  `foo` in your working directory, the one in the path\n    would be used. Now the
  one in the working directory is used.\n\n    In addition, when you do `--filter
  foo/bar.hs`, pandoc will now find a\n    filter `$DATADIR/filters/foo/bar.hs` --
  assuming there isn't a\n    `foo/bar.hs` relative to the working directory.\n\n
  \ * Allow `file://` URIs as arguments (#3196). Also improved default reader\n    format
  detection. Previously with a URI ending in .md or .markdown,\n    pandoc would assume
  HTML input. Now it treats these as markdown.\n\n  * Allow to overwrite top-level
  division type heuristics (#3258,\n    Albert Krewinkel). Pandoc uses heuristics
  to determine the most\n    reasonable top-level division type when emitting LaTeX
  or\n    Docbook markup. It is now possible to overwrite this implicitly set\n    top-level
  division via the `top-level-division` command line parameter.\n\n  * Text.Pandoc.Options
  \\[API changes\\]:\n\n    + Removed `writerStandalone` field in `WriterOptions`,
  made\n      `writerTemplate` a `Maybe` value. Previously setting\n      `writerStandalone
  = True` did nothing unless a template was provided\n      in writerTemplate. Now
  a fragment will be generated if\n      `writerTemplate` is `Nothing`; otherwise,
  the specified template\n      will be used and standalone output generated.\n    +
  `Division` has been renamed `TopLevelDivision` (#3197). The\n      `Section`, `Chapter`,
  and `Part` constructors were renamed to\n      `TopLevelSection`, `TopLevelChapter`,
  and\n      `TopLevelPart`, respectively. An additional `TopLevelDefault`\n      constructor
  was added, which is now also the new default value of\n      the `writerTopLevelDivision`
  field in `WriterOptions`.\n\n  * Improved error if they give wrong arg to `--top-level-division`.\n\n
  \ * Use new module from texmath to lookup MS font codepoints in Docx reader.\n    Removed
  unexported module Text.Pandoc.Readers.Docx.Fonts. Its code now\n    lives in texmath
  (0.9).\n\n  * DocBook reader: Fixed xref lookup (#3243). It previously only worked\n
  \   when the qnames lacked the docbook namespace URI.\n\n  * HTML reader:\n\n    +
  Improved table parsing (#3027). We now check explicitly for non-1\n      rowspan
  or colspan attributes, and fail when we encounter them.\n      Previously we checked
  that each row had the same number of cells,\n      but that could be true even with
  rowspans/colspans. And there are\n      cases where it isn't true in tables that
  we can handle fine -- e.g.\n      when a tr element is empty. So now we just pad
  rows with empty cells\n      when needed.\n    + Treat `<math>` as MathML by default
  unless something else is\n      explicitly specified in xmlns. Provided it parses
  as MathML,\n      of course. Also fixed default which should be to inline math if
  no\n      display attribute is used.\n    + Only treat \"a\" element as link if
  it has href (#3226). Otherwise\n      treat as span.\n\n  * Docx reader (Jesse Rosenthal):\n\n
  \   + Add a placeholder value for CHART. We wrap `[CHART]` in a\n      `<span class=\"chart\">`.
  Note that it maps to inlines because, in\n      docx, anything in a drawing tag
  can be part of a larger paragraph.\n    + Be more specific in parsing images We
  not only want `w:drawing`,\n      because that could also include charts. Now we
  specify\n      `w:drawing/pic:pic`. This shouldn't change behavior at all, but it's\n
  \     a first step toward allowing other sorts of drawing data as well.\n    + Abstract
  out function to avoid code repetition.\n    + Update tests for img title and alt
  (#3204).\n    + Handle Alt text and titles in images. We use the \"description\"
  field\n      as alt text and the \"title\" field as title. These can be accessed\n
  \     through the \"Format Picture\" dialog in Word.\n    + Docx reader utils: handle
  empty namespace in `elemName`. Previously,\n      if given an empty namespace `(elemName
  ns \"\" \"foo\")` `elemName`\n      would output a QName with a `Just \"\"` namespace.
  This is never what\n      we want. Now we output a `Nothing`. If someone *does*
  want a\n      `Just \"\"` in the namespace, they can enter the QName\n      value
  explicitly.\n\n  * ODT reader/writer:\n\n    + Inline code when text has a special
  style (Hubert Plociniczak). When\n      a piece of text has a text `Source_Text`
  then we assume that this is\n      a piece of the document that represents a code
  that needs to\n      be inlined. Adapted the writer to also reflect that change.\n
  \     Previously it was just writing a 'preformatted' text using a\n      non-distinguishable
  font style. Code blocks are still not recognized\n      by the ODT reader. That's
  a separate issue.\n    + Infer table's caption from the paragraph (#3224,\n      Hubert
  Plociniczak). ODT's reader always put empty captions for the\n      parsed tables.
  This commit\n\n        1.  checks paragraphs that follow the table definition\n
  \       2.  treats specially a paragraph with a style named 'Table'\n        3.
  \ does some postprocessing of the paragraphs that combines tables\n            followed
  immediately by captions\n\n      The ODT writer used the `TableCaption` style for
  the caption\n      paragraph.  This commit follows the OpenOffice approach which
  allows\n      for appending captions to table but uses a built-in style named\n
  \     `Table` instead of `TableCaption`. Users of a custom `reference.odt`\n      should
  change the style's name from `TableCaption` to `Table`.\n\n  * ODT reader: Infer
  tables' header props from rows (#3199,\n    Hubert Plociniczak). ODT reader simply
  provided an empty header list\n    which meant that the contents of the whole table,
  even if not empty, was\n    simply ignored. While we still do not infer headers
  we at least have to\n    provide default properties of columns.\n\n  * Markdown
  reader:\n\n    +   Allow reference link labels starting with `@...` if `citations`\n
  \       extension disabled (#3209). Example: in\n\n            \\[link text\\]\\[@a\\]\n\n
  \       `link text` isn't hyperlinked because `[@a]` is parsed as\n        a citation.
  Previously this happened whether or not the `citations`\n        extension was enabled.
  Now it happens only if the `citations`\n        extension is enabled.\n    +   Allow
  alignments to be specified in Markdown grid tables. For\n        example,\n\n            +-------+---------------+--------------------+\n
  \           | Right    | Left                 | Centered |\n            +=========:+:=================+:=============:+\n
  \           | Bananas | $1.34         | built-in wrapper |\n            +-------+---------------+--------------------+\n\n
  \   +   Allow Small Caps elements to be created using bracketed spans (as\n        they
  already can be using HTML-syntax spans) (#3191, Kolen Cheung).\n\n  * LaTeX reader:\n\n
  \   + Don't treat `\\vspace` and `\\hspace` as block commands (#3256).\n      Fixed
  an error which came up, for example, with `\\vspace` inside\n      a caption. (Captions
  expect inlines.)\n    + Improved table handling. We can now parse all of the tables
  emitted\n      by pandoc in our tests. The only thing we don't get yet are\n      alignments
  and column widths in more complex tables. See #2669.\n    + Limited support for
  minipage.\n    + Allow for `[]`s inside LaTeX optional args. Fixes cases like:\n
  \   + Handle BVerbatim from fancyvrb (#3203).\n    + Handle hungarumlaut (#3201).\n
  \   + Allow beamer-style `<...>` options in raw LaTeX (also in Markdown)\n      (#3184).
  This allows use of things like `\\only<2,3>{my content}` in\n      Markdown that
  is going to be converted to beamer.\n\n  * Use pre-wrap for code in dzslides template
  (Nicolas Porcel). Otherwise\n    overly long code will appear on every slide.\n\n
  \ * Org reader (Albert Krewinkel):\n\n    +   Respect column width settings (#3246).
  Table column properties can\n        optionally specify a column's width with which
  it is displayed in\n        the buffer. Some exporters, notably the ODT exporter
  in org-mode\n        v9.0, use these values to calculate relative column widths.
  The org\n        reader now implements the same behavior. Note that the org-mode\n
  \       LaTeX and HTML exporters in Emacs don't support this feature yet,\n        which
  should be kept in mind by users who use the column\n        widths parameters.\n
  \   +   Allow HTML attribs on non-figure images (#3222). Images which are\n        the
  only element in a paragraph can still be given HTML attributes,\n        even if
  the image does not have a caption and is hence not a figure.\n        The following
  will add set the `width` attribute of the image to\n        `50%`:\n\n            +ATTR\\_HTML:
  :width 50%\n            =======================\n\n            \\[\\[file:image.jpg\\]\\]\n\n
  \   +   Support `ATTR_HTML` for special blocks (#3182). Special\n        blocks
  (i.e. blocks with unrecognized names) can be prefixed with an\n        `ATTR_HTML`
  block attribute. The attributes defined in that\n        meta-directive are added
  to the `Div` which is used to represent the\n        special block.\n    +   Support
  the `todo` export option. The `todo` export option allows to\n        toggle the
  inclusion of TODO keywords in the output. Setting this to\n        `nil` causes
  TODO keywords to be dropped from headlines. The default\n        is to include the
  keywords.\n    +   Add support for todo-markers. Headlines can have optional\n        todo-markers
  which can be controlled via the `#+TODO`, `#+SEQ_TODO`,\n        or `#+TYP_TODO`
  meta directive. Multiple such directives can be\n        given, each adding a new
  set of recognized todo-markers. If no\n        custom todo-markers are defined,
  the default `TODO` and `DONE`\n        markers are used. Todo-markers are conceptually
  separate from\n        headline text and are hence excluded when autogenerating\n
  \       headline IDs. The markers are rendered as spans and labelled with\n        two
  classes: One class is the markers name, the other signals the\n        todo-state
  of the marker (either `todo` or `done`).\n\n  * LaTeX writer:\n\n    + Use `\\autocites*`
  when \"suppress-author\" citation used.\n    + Ensure that simple tables have simple
  cells (#2666). If cells\n      contain more than a single Plain or Para, then we
  need to set\n      nonzero widths and put contents into minipages.\n    + Remove
  invalid inlines in sections (#3218, Hubert Plociniczak).\n\n  * Markdown writer:\n\n
  \   + Fix calculation of column widths for aligned multiline tables\n      (#1911,
  Björn Peemöller). This also fixes excessive CPU and memory\n      usage for tables
  when `--columns` is set in such a way that cells\n      must be very tiny. Now cells
  are guaranteed to be big enough so that\n      single words don't need to line break,
  even if this pushes the line\n      length above the column width.\n    + Use bracketed
  form for native spans when `bracketed_spans`\n      enabled (#3229).\n    + Fixed
  inconsistent spacing issue (#3232). Previously a tight bullet\n      sublist got
  rendered with a blank line after, while a tight ordered\n      sublist did not.
  Now we don't get the blank line in either case.\n    + Fix escaping of spaces in
  super/subscript (#3225). Previously two\n      backslashes were inserted, which
  gave a literal backslash.\n    + Adjust widths in Markdown grid tables so that they
  match\n      on round-trip.\n\n  * Docx writer:\n\n    + Give full detail when there
  are errors converting tex math.\n    + Handle title text in images (Jesse Rosenthal).
  We already handled\n      alt text. This just puts the image \"title\" into the
  docx\n      \"title\" attr.\n    + Fixed XML markup for empty cells (#3238). Previously
  the Compact\n      style wasn't being applied properly to empty cells.\n\n  * HTML
  writer:\n\n    + Updated `renderHtml` import from blaze-html.\n\n  * Text.Pandoc.Pretty:\n\n
  \   + Fixed some bugs that caused blank lines in tables (#3251). The bugs\n      caused
  spurious blank lines in grid tables when we had things like\n      `blankline $$
  blankline`.\n    + Add exported function `minOffet` \\[API change\\] (Björn Peemöller).\n
  \   + Added error message for illegal call to `block` (Björn Peemöller).\n\n  *
  Text.Pandoc.Shared:\n\n    + Put `warn` in MonadIO.\n    + `fetchItem`: Better handling
  of protocol-relative URL (#2635). If\n      URL starts with `//` and there is no
  \"base URL\" (as there would be\n      if a URL were used on the command line),
  then default to http:.\n\n  * Export Text.Pandoc.getDefaultExtensions \\[API change\\]
  (#3178).\n\n  * In --version, trap error in `getAppUserDataDirectory` (#3241). This\n
  \   fixes a crash with `pandoc --version` on unusual systems with no real\n    user
  (e.g. SQL Server 2016).\n\n  * Added weigh-pandoc for memory usage diagnostics (#3169).\n\n
  \ * Use correct mime types for woff and woff2 (#3228).\n\n  * Remove make\\_travis\\_yml.hs
  (#3235, Kolen Cheung).\n\n  * changelog: Moved an item that was misplaced in the
  1.17.2 section to the\n    1.18 section where it belongs.\n\n  * CONTRIBUTING.md:
  minor change in wording and punctuation (#3252,\n    Kolen Cheung).\n\n  * Further
  revisions to manual for `--version` changes (#3244).\n\n\npandoc (1.18)\n\n  * Added
  `--list-input-formats`, `--list-output-formats`,\n    `--list-extensions`, `--list-highlight-languages`,
  and\n    `--list-highlight-styles` (#3173).  Removed list of highlighting\n    languages
  from `--version` output.  Removed list of input and output\n    formats from default
  `--help` output.\n\n  * Added `--reference-location=block|section|document` option\n
  \   (Jesse Rosenthal).  This determines whether Markdown link references\n    and
  footnotes are placed at the end of the document, the end of the\n    section, or
  the end of the top-level block.\n\n  * Added `--top-level-division=section|chapter|part`
  (Albert Krewinkel).\n    This determines what a level-1 header corresponds to in
  LaTeX,\n    ConTeXt, DocBook, and TEI output.  The default is `section`.\n    The
  `--chapters` option has been deprecated in favor of\n    `--top-level-division=chapter`.\n\n
  \ * Added `LineBlock` constructor for `Block` (Albert Krewinkel).  This\n    is
  now used in parsing RST and Markdown line blocks, DocBook\n    `linegroup`/`line`
  combinations, and Org-mode `VERSE` blocks.\n    Previously `Para` blocks with hard
  linebreaks were used.  `LineBlock`s\n    are handled specially in the following
  output formats: AsciiDoc\n    (as `[verse]` blocks), ConTeXt (`\\startlines`/`\\endlines`),\n
  \   HTML (`div` with a style), Markdown (line blocks if `line_blocks`\n    is enabled),
  Org-mode (`VERSE` blocks), RST (line blocks). In\n    other output formats, a paragraph
  with hard linebreaks is emitted.\n\n  * Allow binary formats to be written to stdout
  (but not to tty) (#2677).\n    Only works on posix, since we use the unix library
  to check whether\n    output is to tty.  On Windows, pandoc works as before and
  always requires\n    an output file parameter for binary formats.\n\n  * Changed
  JSON output format (Jesse Rosenthal).  Previously we used\n    generically generated
  JSON, but this was subject to change depending\n    on the version of aeson pandoc
  was compiled with.  To ensure stability,\n    we switched to using manually written
  ToJSON and FromJSON\n    instances, and encoding the API version.  **Note:**  pandoc
  filter\n    libraries will need to be revised to handle the format change.\n    Here
  is a summary of the essential changes:\n\n    + The toplevel JSON format is now
  `{\"pandoc-api-version\" :\n      [MAJ, MIN, REV], \"meta\" : META, \"blocks\":
  BLOCKS}`\n      instead of `[{\"unMeta\": META}, [BLOCKS]]`.\n      Decoding fails
  if the major and minor version numbers don't\n      match.\n    + Leaf nodes no
  longer have an empty array for their \"c\" value.\n      Thus, for example, a `Space`
  is encoded as `{\"t\":\"Space\"}`\n      rather than `{\"t\":\"Space\",\"c\":[]}`
  as before.\n\n  * Removed `tests/Tests/Arbitrary.hs` and added a `Text.Pandoc.Arbitrary`\n
  \   module to pandoc-types (Jesse Rosenthal).  This makes it easier\n    to use
  QuickCheck with pandoc types outside of pandoc itself.\n\n  * Add `bracketed_spans`
  Markdown extension, enabled by default\n    in pandoc `markdown`.  This allows you
  to create a native span\n    using this syntax:  `[Here is my span]{#id .class key=\"val\"}`.\n\n
  \ * Added `angle_brackets_escapable` Markdown extension (#2846).\n    This is needed
  because github flavored Markdown has a slightly\n    different set of escapable
  symbols than original Markdown;\n    it includes angle brackets.\n\n  * Export `Text.Pandoc.Error`
  in `Text.Pandoc` [API change].\n\n  * Print highlighting-kate version in `--version`.\n\n
  \ * `Text.Pandoc.Options`:\n\n    + `Extension` has new constructors `Ext_brackted_spans`
  and\n      `Ext_angle_brackets_escapable` [API change].\n    + Added `ReferenceLocation`
  type [API change] (Jesse Rosenthal).\n    + Added `writerReferenceLocation` field
  to `WriterOptions` (Jesse\n      Rosenthal).\n\n  * `--filter`:  we now check `$DATADIR/filters`
  for filters before\n    looking in the path (#3127, Jesse Rosenthal, thanks to Jakob\n
  \   Voß for the idea).  Filters placed in this directory need not\n    be executable;
  if the extension is `.hs`, `.php`, `.pl`, `.js`,\n    or `.rb`, pandoc will run
  the right interpreter.\n\n  * For `--webtex`, replace deprecated Google Chart API
  by CodeCogs as\n    default (Kolen Cheung).\n\n  * Removed `raw_tex` extension from
  `markdown_mmd` defaults (Kolen Cheung).\n\n  * Execute .js filters with node (Jakob
  Voß).\n\n  * Textile reader:\n\n    + Support `bc..` extended code blocks (#3037).
  \ Also, remove trailing\n      newline in code blocks (consistently with Markdown
  reader).\n    + Improve table parsing.  We now handle cell and row attributes, mostly\n
  \     by skipping them.  However, alignments are now handled properly.\n      Since
  in pandoc alignment is per-column, not per-cell, we\n      try to devine column
  alignments from cell alignments.\n      Table captions are also now parsed, and
  textile indicators\n      for thead and tfoot no longer cause parse failure.  (However,\n
  \     a row designated as tfoot will just be a regular row in pandoc.)\n    + Improve
  definition list parsing.  We now allow multiple terms\n      (which we concatenate
  with linebreaks).  An exponential parsing\n      bug (#3020) is also fixed.\n    +
  Disallow empty URL in explicit link (#3036).\n\n  * RST reader:\n\n    + Use Div
  instead of BlockQuote for admonitions (#3031).\n      The Div has class `admonition`
  and (if relevant) one of the\n      following:  `attention`, `caution`, `danger`,
  `error`, `hint`,\n      `important`, `note`, `tip`, `warning`.  **Note:** This will
  change\n      the rendering of some RST documents!  The word (\"Warning\", \"Attention\",\n
  \     etc.) is no longer added; that must be done with CSS or a filter.\n    + A
  Div is now used for `sidebar` as well.\n    + Skip whitespace before note (Jesse
  Rosenthal, #3163).  RST requires a\n      space before a footnote marker. We discard
  those spaces so that footnotes\n      will be adjacent to the text that comes before
  it. This is in line with\n      what rst2latex does.\n    + Allow empty lines when
  parsing line blocks (Albert Krewinkel).\n\n  * Markdown reader:\n\n    + Allow empty
  lines when parsing line blocks (Albert Krewinkel).\n    + Allow attributes on autolinks
  (#3183, Daniele D'Orazio).\n\n  * LaTeX reader:\n\n    + More robust parsing of
  unknown environments (#3026).\n      We no longer fail on things like `^` inside
  options for tikz.\n    + Be more forgiving of non-standard characters, e.g. `^`
  outside of math.\n      Some custom environments give these a meaning, so we should
  try not to\n      fall over when we encounter them.\n    + Drop duplicate `*` in
  bibtexKeyChars (Albert Krewinkel)\n\n  * MediaWiki reader:\n\n    + Fix for unquoted
  attribute values in mediawiki tables (#3053).\n      Previously an unquoted attribute
  value in a table row\n      could cause parsing problems.\n    + Improved treatment
  of verbatim constructions (#3055).\n      Previously these yielded strings of alternating
  Code and Space\n      elements; we now incorporate the spaces into the Code.  Emphasis\n
  \     etc. is still possible inside these.\n    + Properly interpret XML tags in
  pre environments (#3042).  They are meant\n      to be interpreted as literal text.\n\n
  \ * EPUB reader:  don't add root path to data: URIs (#3150).\n    Thanks to @lep
  for the bug report and patch.\n\n  * Org reader (Albert Krewinkel):\n\n    + Preserve
  indentation of verse lines (#3064).  Leading spaces in verse\n      lines are converted
  to non-breaking spaces, so indentation is preserved.\n    + Ensure image sources
  are proper links.  Image sources as those in plain\n      images, image links, or
  figures, must be proper URIs or relative file\n      paths to be recognized as images.
  \ This restriction is now enforced\n      for all image sources.  This also fixes
  the reader's usage of uncleaned\n      image sources, leading to `file:` prefixes
  not being deleted from\n      figure images.  Thanks to @bsag for noticing this
  bug.\n    + Trim verse lines properly (Albert Krewinkel).\n    + Extract meta parsing
  code to module.  Parsing of meta-data is well\n      separable from other block
  parsing tasks.  Moving into new module to\n      get small files and clearly arranged
  code.\n    + Read markup only for special meta keys.  Most meta-keys should be read\n
  \     as normal string values, only a few are interpreted as marked-up text.\n    +
  Allow multiple, comma-separated authors.  Multiple authors can be\n      specified
  in the `#+AUTHOR` meta line if they are given as a\n      comma-separated list.\n
  \   + Give precedence to later meta lines.  The last meta-line of any given\n      type
  is the significant line.  Previously the value of the first line\n      was kept,
  even if more lines of the same type were encountered.\n    + Read LaTeX_header as
  header-includes.  LaTeX-specific header commands\n      can be defined in `#+LaTeX_header`
  lines.  They are parsed as\n      format-specific inlines to ensure that they will
  only show up in LaTeX\n      output.\n    + Set documentclass meta from LaTeX_class.\n
  \   + Set classoption meta from LaTeX_class_options.\n    + Read HTML_head as header-includes.
  \ HTML-specific head content can be\n      defined in `#+HTML_head` lines.  They
  are parsed as format-specific\n      inlines to ensure that they will only show
  up in HTML output.\n    + Respect `author` export option.  The `author` option controls
  whether\n      the author should be included in the final markup.  Setting\n      `#+OPTIONS:
  author:nil` will drop the author from the final meta-data\n      output.\n    +
  Respect `email` export option.  The `email` option controls whether the\n      email
  meta-field should be included in the final markup. Setting\n      `#+OPTIONS: email:nil`
  will drop the email field from the final\n      meta-data output.\n    + Respect
  `creator` export option.  The `creator` option controls whether\n      the creator
  meta-field should be included in the final markup.  Setting\n      `#+OPTIONS: creator:nil`
  will drop the creator field from the final\n      meta-data output.  Org-mode recognizes
  the special value `comment` for\n      this field, causing the creator to be included
  in a comment.  This is\n      difficult to translate to Pandoc internals and is
  hence interpreted the\n      same as other truish values (i.e. the meta field is
  kept if it's\n      present).\n    + Respect unnumbered header property (#3095).
  \ Sections the `unnumbered`\n      property should, as the name implies, be excluded
  from the automatic\n      numbering of section provided by some output formats.
  \ The Pandoc\n      convention for this is to add an \"unnumbered\" class to the
  header.  The\n      reader treats properties as key-value pairs per default, so
  a special\n      case is added to translate the above property to a class instead.\n
  \   + Allow figure with empty caption (Albert Krewinkel, #3161).\n      A `#+CAPTION`
  attribute before an image is enough to turn an image into\n      a figure. This
  wasn't the case because the `parseFromString` function,\n      which processes the
  caption value, would fail on empty values. Adding\n      a newline character to
  the caption value fixes this.\n\n  * Docx reader:\n\n    + Use XML convenience functions
  (Jesse Rosenthal).\n      The functions `isElem` and `elemName` (defined in Docx/Util.hs)
  make\n      the code a lot cleaner than the original XML.Light functions, but they\n
  \     had been used inconsistently. This puts them in wherever applicable.\n    +
  Handle anchor spans with content in headers.  Previously, we would only\n      be
  able to figure out internal links to a header in a docx if the\n      anchor span
  was empty. We change that to read the inlines out of the\n      first anchor span
  in a header.\n    + Let headers use existing id.  Previously we always generated
  an id for\n      headers (since they wouldn't bring one from Docx). Now we let it
  use an\n      existing one if possible. This should allow us to recurs through anchor\n
  \     spans.\n    + Use all anchor spans for header ids.  Previously we only used
  the first\n      anchor span to affect header ids. This allows us to use all the
  anchor\n      spans in a header, whether they're nested or not (#3088).\n    + Test
  for nested anchor spans in header.  This ensures that anchor spans\n      in header
  with content (or with other anchor spans inside) will resolve\n      to links to
  a header id properly.\n\n  * ODT reader (Hubert Plociniczak)\n\n    + Include list's
  starting value.  Previously the starting value of\n      the lists' items has been
  hardcoded to 1. In reality ODT's list\n      style definition can provide a new
  starting value in one of its\n      attributes.\n    + Infer caption from the text
  following the image.\n      Frame can contain other frames with the text boxes.\n
  \   + Add `fig:` to title for Image with a caption (as expected\n      by pandoc's
  writers).\n    + Basic support for images in ODT documents.\n    + Don't duplicate
  text for anchors (#3143).  When creating an anchor\n      element we were adding
  its representation as well as the original\n      content, leading to text duplication.\n\n
  \ * DocBook writer:\n\n    + Include an anchor element when a div or span has an
  id (#3102).\n      Note that DocBook does not have a class attribute, but at least
  this\n      provides an anchor for internal links.\n\n  * LaTeX writer:\n\n    +
  Don't use * for unnumbered paragraph, subparagraph.  The starred\n      variants
  don't exist.  This helps with part of #3058...it gets rid of\n      the spurious
  `*`s.  But we still have numbers on the 4th and 5th level\n      headers.\n    +
  Properly escape backticks in verbatim (#3121, Jesse Rosenthal).\n      Otherwise
  they can cause unintended ligatures like `` ?` ``.\n    + Handle NARRAOW NO-BREAK
  SPACE into LaTeX (Vaclav Zeman) as `\\,`.\n    + Don't include `[htbp]` placement
  for figures (#3103, Václav Haisman).\n      This allows figure placement defaults
  to be changed by the user\n      in the template.\n\n  * HTML writer (slide show
  formats): In slide shows, don't change slide title\n    to level 1 header (#2221).\n\n
  \ * TEI writer: remove heuristic to detect book template (Albert Krewinkel).\n    TEI
  doesn't have `<book>` elements but only generic `<divN>` division\n    elements.
  Checking the template for a trailing `</book>` is nonsensical.\n\n  * MediaWiki
  writer:  transform filename with underscores in images (#3052).\n    `foo bar.jpg`
  becomes `foo_bar.jpg`. This was already done\n    for internal links, but it also
  needs to happen for images.\n\n  * ICML writer: replace partial function (!!) in
  table handling (#3175,\n    Mauro Bieg).\n\n  * Man writer: allow section numbers
  that are not a single digit (#3089).\n\n  * AsciiDoc writer: avoid unnecessary use
  of \"unconstrained\" emphasis\n    (#3068).  In AsciiDoc, you must use a special
  form of emphasis\n    (double `__`) for intraword emphasis.  Pandoc was previously
  using\n    this more than necessary.\n\n  * EPUB writer:  use stringify instead
  of plain writer for metadata\n    (#3066).  This means that underscores won't be
  used for emphasis,\n    or CAPS for bold.  The metadata fields will just have unadorned\n
  \   text.\n\n  * Docx Writer:\n\n    + Implement user-defined styles (Jesse Rosenthal).
  \ Divs and Spans\n      with a `custom-style` key in the attributes will apply the
  corresponding\n      key to the contained blocks or inlines.\n    + Add ReaderT
  env to the docx writer (Jesse Rosenthal).\n    + Clean up and streamline RTL behavior
  (Jesse Rosenthal, #3140).\n      You can set `dir: rtl` in YAML metadata, or use
  `-M dir=rtl`\n      on the command line.  For finer-grained control, you can set\n
  \     the `dir` attribute in Div or Span elements.\n\n  * Org writer (Albert Krewinkel):\n\n
  \   + Remove blank line after figure caption.  Org-mode only treats an image\n      as
  a figure if it is directly preceded by a caption.\n    + Ensure blank line after
  figure.  An Org-mode figure should be surrounded\n      by blank lines.  The figure
  would be recognized regardless, but images\n      in the following line would unintentionally
  be treated as figures as\n      well.\n    + Ensure link targets are paths or URLs.
  \ Org-mode treats links as\n      document internal searches unless the link target
  looks like a URL or\n      file path, either relative or absolute.  This change
  ensures that this\n      is always the case.\n    + Translate language identifiers.
  \ Pandoc and Org-mode use different\n      programming language identifiers.  An
  additional translation between\n      those identifiers is added to avoid unexpected
  behavior.  This fixes a\n      problem where language specific source code would
  sometimes be output\n      as example code.\n    + Drop space before footnote markers
  (Albert Krewinkel, #3162).\n      The writer no longer adds an extra space before
  footnote markers.\n\n  * Markdown writer:\n\n    + Don't emit HTML for tables unless
  `raw_html` extension is set (#3154).\n      Emit `[TABLE]` if no suitable table
  formats are enabled and raw HTML\n      is disabled.\n    + Check for the `raw_html`
  extension before emitting a raw HTML block.\n    + Abstract out note/ref function
  (Jesse Rosenthal).\n    + Add ReaderT monad for environment variables (Jesse Rosenthal).\n\n
  \ * HTML, EPUB, slidy, revealjs templates: Use `<p>` instead of `<h1>` for\n    subtitle,
  author, date (#3119).  Note that, as a result of this change,\n    authors may need
  to update CSS.\n\n  * revealjs template:  Added `notes-server` option\n    (jgm/pandoc-templates#212,
  Yoan Blanc).\n\n  * Beamer template:\n\n    + Restore whitespace between paragraphs.
  This was\n      a regression in the last release (jgm/pandoc-templates#207).\n    +
  Added `themeoptions` variable (Carsten Gips).\n    + Added `beamerarticle` variable.
  \ This causes the `beamerarticle`\n      package to be loaded in beamer, to produce
  an article from beamer\n      slides.  (Carsten Gips)\n    + Added support for `fontfamilies`
  structured variable\n      (Artem Klevtsov).\n    + Added hypersetup options (Jake
  Zimmerman).\n\n  * LaTeX template:\n\n    + Added dummy definition for `\\institute`.\n
  \     This isn't a standard command, and we want to avoid a crash when\n      `institute`
  is used with the default template.\n    + Define default figure placement (Václav
  Haisman), since pandoc\n      no longer includes `[htbp]` for figures.  Users with
  custom templates\n      will want to add this. See #3103.\n    + Use footnote package
  to fix notes in tables (jgm/pandoc-templates#208,\n      Václav Haisman).\n\n  *
  Moved template compiling/rendering code to a separate library.\n    `doctemplates`.
  \ This allows the pandoc templating system to be\n    used independently.\n\n  *
  Text.Pandoc.Error: Fix out of index error in `handleError`\n    (Matthew Pickering).
  \ The fix is to not try to show the exact line when\n    it would cause an out-of-bounds
  error as a result of included files.\n\n  * Text.Pandoc.Shared: Add `linesToBlock`
  function (Albert Krewinkel).\n\n  * Text.Pandoc.Parsing.emailAddress: tighten up
  parsing of email\n    addresses.  Technically `**@user` is a valid email address,
  but if we\n    allow things like this, we get bad results in markdown flavors\n
  \   that autolink raw email addresses (see #2940).  So we exclude a few\n    valid
  email addresses in order to avoid these more common bad cases.\n\n  * Text.Pandoc.PDF:
  \ Don't crash with nonexistent image (#3100).  Instead,\n    emit the alt text,
  emphasized.  This accords with what the ODT writer\n    currently does.  The user
  will still get a warning about a nonexistent\n    image.\n\n  * Fix example in API
  documentation (#3176, Thomas Weißschuh).\n\n  * Tell where to get tarball in INSTALL
  (#3062).\n\n  * Rename README to MANUAL.txt and add GitHub-friendly README.md\n
  \   (Albert Krewinkel, Kolen Cheung).\n\n  * Replace COPYING with Markdown version
  COPYING.md from GNU (Kolen Cheung).\n\n  * MANUAL.txt:\n\n    + Put note on structured
  vars in separate paragraph (#2148, Albert\n      Krewinkel).  Make it clearer that
  structured author variables require a\n      custom template\n    + Note that `--katex`
  works best with `html5` (#3077).\n    + Fix the LaTeX and EPUB links in manual (Morton
  Fox).\n    + Document `biblio-title` variable.\n\n  * Improve spacing of footnotes
  in `--help` output (Waldir Pimenta).\n\n  * Update KaTeX to v0.6.0 (Kolen Cheung).\n\n
  \ * Allow latest dependencies.\n\n  * Use texmath 0.8.6.6 (#3040).\n\n  * Allow
  http-client 0.4.30, which is the version in stackage lts.\n    Previously we required
  0.5.\n    Remove CPP conditionals for earlier versions.\n\n  * Remove support for
  GHC < 7.8 (Jesse Rosenthal).\n\n    + Remove Compat.Monoid.\n    + Remove an inline
  monad compatibility macro.\n    + Remove Text.Pandoc.Compat.Except.\n    + Remove
  directory compat.\n    + Change constraint on mtl.\n    + Remove unnecessary CPP
  condition in UTF8.\n    + Bump base lower bound to 4.7.\n    + Remove 7.6 build
  from .travis.yaml.\n    + Bump supported ghc version in CONTRIBUTING.md.\n    +
  Add note about GHC version support to INSTALL.\n    + Remove GHC 7.6 from list of
  tested versions (Albert Krewinkel).\n    + Remove TagSoup compat.\n    + Add EOL
  note to time compat module.  Because time 1.4 is a boot library\n      for GHC 7.8,
  we will support the compatibility module as long as we\n      support 7.8. But we
  should be clear about when we will no longer need\n      it.\n    + Remove blaze-html
  CPP conditional.\n    + Remove unnecessary CPP in custom Prelude.\n\npandoc (1.17.2)\n\n
  \ * Added Zim Wiki writer, template and tests. `zimwiki` is now\n    a valid output
  format. (Alex Ivkin)\n\n  * Changed email-obfuscation default to no obfuscation
  (#2988).\n    + `writerEmailObfuscation` in `defaultWriterOptions` is now\n      `NoObfuscation`.\n
  \   + the default for the command-line `--email-obfuscation` option is\n      now
  `none`.\n\n  * Docbook writer: Declare xlink namespace in Docbook5 output (Ivo Clarysse).\n\n
  \ * Org writer:\n\n    + Support arbitrary raw inlines (Albert Krewinkel).\n      Org
  mode allows arbitrary raw inlines (\"export snippets\" in Emacs\n      parlance)
  to be included as `@@format:raw foreign format text@@`.\n    + Improve Div handling
  (Albert Krewinkel).  Div blocks handling is\n      changed to make the output look
  more like idiomatic org mode:\n        - Div-wrapped content is output as-is if
  the div's attribute is the\n          null attribute.\n        - Div containers
  with an id but neither classes nor key-value pairs\n          are unwrapped and
  the id is added as an anchor.\n        - Divs with classes associated with greater
  block elements are\n          wrapped in a `#+BEGIN`...`#+END` block.\n        -
  The old behavior for Divs with more complex attributes is kept.\n\n  * HTML writer:\n\n
  \   + Better support for raw LaTeX environments (#2758).\n      Previously we just
  passed all raw TeX through when MathJax was used for\n      HTML math.  This passed
  through too much.  With this patch, only raw\n      LaTeX environments that MathJax
  can handle get passed through.\n      This patch also causes raw LaTeX environments
  to be treated\n      as math, when possible, with MathML and WebTeX output.\n\n
  \ * Markdown writer:  use raw HTML for simple, pipe tables with linebreaks\n    (#2993).
  \ Markdown line breaks involve a newline, and simple and pipe\n    tables can't
  contain one.\n\n  * Make --webtex work with the Markdown writer (#1177).\n    This
  is a convenient option for people using\n    websites whose Markdown flavors don't
  provide for math.\n\n  * Docx writer:\n\n    + Set paragraph to FirstPara after
  display math (Jesse Rosenthal).\n      We treat display math like block quotes,
  and apply FirstParagraph style\n      to paragraphs that follow them. These can
  be styled as the user\n      wishes. (But, when the user is using indentation, this
  allows for\n      paragraphs to continue after display math without indentation.)\n
  \   + Use actual creation time as doc prop (Jesse Rosenthal).\n      Previously,
  we had used the user-supplied date, if available, for Word's\n      document creation
  metadata. This could lead to weird results, as in\n      cases where the user post-dates
  a document (so the modification might be\n      prior to the creation). Here we
  use the actual computer time to set the\n      document creation.\n\n  * LaTeX writer:\n\n
  \   + Don't URI-escape image source (#2825).  Usually this is a local file,\n      and
  replacing spaces with `%20` ruins things.\n    + Allow 'standout' as a beamer frame
  option (#3007).\n      `## Slide title {.standout}`.\n\n  * RST reader: Fixed links
  with no explicit link text.  The link\n    `` `<foo>`_ `` should have `foo` as both
  its link text and its URL.\n    See RST spec at <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#embedded-uris-and-aliases>\n
  \   Closes Debian #828167 -- reported by Christian Heller.\n\n  * Textile reader:\n\n
  \   + Fixed attributes (#2984).  Attributes can't be followed by\n      a space.
  \ So, `_(class)emph_` but `_(noclass) emph_`.\n    + Fixed exponential parsing bug
  (#3020).\n    + Fix overly aggressive interpretation as images (#2998).\n      Spaces
  are not allowed in the image URL in textile.\n\n  * LaTeX reader:\n\n    + Fix `\\cite`
  so it is a NormalCitation not AuthorInText.\n    + Strip off double quotes around
  image source if present (#2825).\n      Avoids interpreting these as part of the
  literal filename.\n\n  * Org reader:\n\n    + Add semicolon to list of special chars
  (Albert Krewinkel)\n      Semicolons are used as special characters in citations
  syntax.  This\n      ensures the correct parsing of Pandoc-style citations: `[prefix;
  @key;\n      suffix]`.  Previously, parsing would have failed unless there was a
  space\n      or other special character as the last <prefix> character.\n    + Add
  support for \"Berkeley-style\" cites (Albert Krewinkel, #1978).\n      A specification
  for an official Org-mode citation syntax was drafted by\n      Richard Lawrence
  and enhanced with the help of others on the orgmode\n      mailing list.  Basic
  support for this citation style is added to the\n      reader.\n    + Support arbitrary
  raw inlines (Albert Krewinkel).\n      Org mode allows arbitrary raw inlines (\"export
  snippets\" in Emacs\n      parlance) to be included as `@@format:raw foreign format
  text@@`.\n    + Remove partial functions (Albert Krewinkel, #2991).\n      Partial
  functions like `head` lead to avoidable errors and should be\n      avoided.  They
  are replaced with total functions.\n    + Support figure labels (Albert Krewinkel,
  #2496, #2999).\n      Figure labels given as `#+LABEL: thelabel` are used as the
  ID of the\n      respective image.  This allows e.g. the LaTeX to add proper `\\label`\n
  \     markup.\n    + Improve tag and properties type safety (Albert Krewinkel).\n
  \     Specific newtype definitions are used to replace stringly typing of tags\n
  \     and properties.  Type safety is increased while readability is improved.\n
  \   + Parse as headlines, convert to blocks (Albert Krewinkel).\n      Emacs org-mode
  is based on outline-mode, which treats documents as trees\n      with headlines
  are nodes.  The reader is refactored to parse into a\n      similar tree structure.
  \ This simplifies transformations acting on\n      document (sub-)trees.\n    *
  Refactor comment tree handling (Albert Krewinkel).\n      Comment trees were handled
  after parsing, as pattern matching on lists\n      is easier than matching on sequences.
  \ The new method of reading\n      documents as trees allows for more elegant subtree
  removal.\n    * Support archived trees export options (Albert Krewinkel).\n      Handling
  of archived trees can be modified using the `arch` option.\n      Archived trees
  are either dropped, exported completely, or collapsed to\n      include just the
  header when the `arch` option is nil, non-nil, or\n      `headline`, respectively.\n
  \   * Put export setting parser into module (Albert Krewinkel).\n      Export option
  parsing is distinct enough from general block parsing to\n      justify putting
  it into a separate module.\n    * Support headline levels export setting (Albert
  Krewinkel).\n      The depths of headlines can be modified using the `H` option.
  \ Deeper\n      headlines will be converted to lists.\n    * Replace ugly code with
  view pattern (Albert Krewinkel).\n      Some less-than-smart code required a pragma
  switching of overlapping\n      pattern warnings in order to compile seamlessly.
  \ Using view patterns\n      makes the code easier to read and also doesn't require
  overlapping\n      pattern checks to be disabled.\n    * Fix parsing of verbatim
  inlines (Albert Krewinkel, #3016).\n      Org rules for allowed characters before
  or after markup chars were not\n      checked for verbatim text.  This resultet
  in wrong parsing outcomes of\n      if the verbatim text contained e.g. space enclosed
  markup characters as\n      part of the text (`=is_substr = True=`).  Forcing the
  parser to update\n      the positions of allowed/forbidden markup border characters
  fixes this.\n\n  * LaTeX template: fix for obscure hyperref/xelatex issue.\n    Here's
  a minimal case:\n\n        \\documentclass[]{article}\n        \\usepackage{hyperref}\n
  \       \\begin{document}\n        \\section{\\%á}\n        \\end{document}\n\n
  \   Without this change, this fails on the second invocation of xelatex.\n    This
  affects inputs this like `# %á` with pdf output via xelatex.\n\n  * trypandoc:  call
  results 'html' instead of 'result'.\n    This is for better compatibility with babelmark2.\n\n
  \ * Document MultiMarkdown as input/output format (Albert Krewinkel, #2973).\n    MultiMarkdown
  was only mentioned as a supported Markdown dialect but not\n    as a possible input
  or output format.  A brief mention is added\n    everywhere the other supported
  markdown dialects are mentioned.\n\n  * Document Org mode as a format containing
  raw HTML (Albert Krewinkel)\n    Raw HTML is kept when the output format is Emacs
  Org mode.\n\n  * Implement `RawInline` and `RawBlock` in sample lua custom writer
  (#2985).\n\n  * Text.Pandoc.Shared:\n\n    + Introduce blocksToInlines function
  (Jesse Rosenthal).\n      This is a lossy function for converting `[Block] -> [Inline]`.
  Its main\n      use, at the moment, is for docx comments, which can contain arbitrary\n
  \     blocks (except for footnotes), but which will be converted to spans.\n      This
  is, at the moment, pretty useless for everything but the basic\n      `Para` and
  `Plain` comments. It can be improved, but the docx reader\n      should probably
  emit a warning if the comment contains more than this.\n    + Add BlockQuote to
  blocksToInlines (Jesse Rosenthal).\n    + Add further formats for `normalizeDate`
  (Jesse Rosenthal).\n      We want to avoid illegal dates -- in particular years
  with greater than\n      four digits. We attempt to parse series of digits first
  as `%Y%m%d`, then\n      `%Y%m`, and finally `%Y`.\n    + `normalizeDate` should
  reject illegal years (Jesse Rosenthal).\n      We only allow years between 1601
  and 9999, inclusive. The ISO 8601\n      actually says that years are supposed to
  start with 1583, but MS Word\n      only allows 1601-9999. This should stop corrupted
  word files if the date\n      is out of that range, or is parsed incorrectly.\n
  \   + Improve year sanity check in normalizeDate (Jesse Rosenthal).\n      Previously
  we parsed a list of dates, took the first one, and then\n      tested its year range.
  That meant that if the first one failed, we\n      returned nothing, regardless
  of what the others did. Now we test for\n      sanity before running `msum` over
  the list of Maybe values. Anything\n      failing the test will be Nothing, so will
  not be a candidate.\n\n  * Docx reader:\n\n    + Add simple comment functionality.
  (Jesse Rosenthal).\n      This adds simple track-changes comment parsing to the
  docx reader. It is\n      turned on with `--track-changes=all`. All comments are
  converted to\n      inlines, which can list some information. In the future a warning
  will be\n      added for comments with formatting that seems like it will be excessively\n
  \     denatured.  Note that comments can extend across blocks. For that reason\n
  \     there are two spans: `comment-start` and `comment-end`.  `comment-start`\n
  \     will contain the comment. `comment-end` will always be empty.  The two\n      will
  be associated by a numeric id.\n    + Enable warnings in top-level reader (Jesse
  Rosenthal).\n      Previously we had only allowed for warnings in the parser. Now
  we allow\n      for them in the `Docx.hs` as well. The warnings are simply concatenated.\n
  \   + Add warning for advanced comment formatting. (Jesse Rosenthal).\n      We
  can't guarantee we'll convert every comment correctly, though we'll\n      do the
  best we can. This warns if the comment includes something other\n      than Para
  or Plain.\n    + Add tests for warnings. (Jesse Rosenthal).\n    + Add tests for
  comments (Jesse Rosenthal).\n      We test for comments, using all track-changes
  options. Note that we\n      should only output comments if `--track-changes=all`.
  We also test for\n      emitting warnings if there is complicated formatting.\n\n
  \ * README: update to include track-changes comments. (Jesse Rosenthal)\n\n  * Improved
  Windows installer - don't ignore properties set on command-line.\n    See #2708.
  \ Needs testing to see if this resolves the issue.\n    Thanks to @nkalvi.\n\n  *
  Process markdown extensions on command line in L->R order (#2995).\n    Previously
  they were processed, very unintuitively, in R->L\n    order, so that `markdown-tex_math_dollars+tex_math_dollars`\n
  \   had `tex_math_dollars` disabled.\n\n  * Added `secnumdepth` variable to LaTeX
  template (#2920).\n\n  * Include table of contents in README.html in Windows package.\n\n
  \ * Writers: treat SoftBreak as space for stripping (Jesse Rosenthal)\n    In Writers.Shared,
  we strip leading and trailing spaces for display\n    math. Since SoftBreak's are
  treated as spaces, we should strip those\n    too.\n\n  * beamer, latex templates:
  \ pass biblatexoptions directly in package load.\n    This allows runtime optinos
  to be used.  Fixes jgm/pandoc-citeproc#201\n\n  * CPP workaround for deprecation
  of `parseUrl` in http-client.\n\n  * Removed some redundant class constraints.\n\n
  \ * make_oxs_package.sh - use OSX env variable.\n\n  * Replaced INSTALL with INSTALL.md,
  incorporating INSTALL and the\n    old installing page from website.\n\n  * Added
  `winpkg` target to Makefile.  This downloads the windows package\n    from appveyor
  and signs it using the key.\n\n  * Document Org mode as a format containing raw
  TeX (Albert Krewinkel).\n    Raw TeX is kept verbatim when the output format is
  Emacs Org mode.\n\n  * Support math with haddock-library >= 1.4.\n\n  * Removed
  `-rtsopts` from library stanza.  It has no effect, and Hackage\n    wouldn't accept
  the package.\n\n  * Update library dependency versions.\n\npandoc (1.17.1)\n\n  *
  New output format: `docbook5` (Ivo Clarysse).\n\n  * `Text.Pandoc.Options`: Add
  `writerDocBook5` to `WriterOptions`\n    (API change).\n\n  * Org writer:\n\n    +
  Add :PROPERTIES: drawer support (Albert Krewinkel, #1962).\n      This allows header
  attributes to be added to org documents in the form\n      of `:PROPERTIES:` drawers.
  \ All available attributes are stored as\n      key/value pairs.  This reflects
  the way the org reader handles\n      `:PROPERTIES:` blocks.\n    + Add drawer capability
  (Carlos Sosa).  For the implementation of the\n      Drawer element in the Org Writer,
  we make use of a generic Block\n      container with attributes.  The presence of
  a `drawer` class defines\n      that the `Div` constructor is a drawer. The first
  class defines the\n      drawer name to use.  The key-value list in the attributes
  defines\n      the keys to add inside the Drawer.  Lastly, the list of Block elements\n
  \     contains miscellaneous blocks elements to add inside of the Drawer.\n    +
  Use `CUSTOM_ID` in properties (Albert Krewinkel).  The `ID` property is\n      reserved
  for internal use by Org-mode and should not be used.\n      The `CUSTOM_ID` property
  is to be used instead, it is converted to the\n      `ID` property for certain export
  format.\n\n  * LaTeX writer:\n\n    + Ignore `--incremental` unless output format
  is beamer (#2843).\n    + Fix polyglossia to babel env mapping (Mauro Bieg, #2728).\n
  \     Allow for optional argument in square brackets.\n    + Recognize `la-x-classic`
  as Classical Latin (Andrew Dunning).\n      This allows one to access the hyphenation
  patterns in CTAN's\n      hyph-utf8.\n    + Add missing languages from hyph-utf8
  (Andrew Dunning).\n    + Improve use of `\\strut` with `\\minipage` inside tables\n
  \     (Jose Luis Duran).  This improves spacing in multiline\n      tables.\n    +
  Use `{}` around options containing special chars (#2892).\n    + Avoid lazy `foldl`.\n
  \   + Don't escape underscore in labels (#2921).  Previously they were\n      escaped
  as `ux5f`.\n    + brazilian -> brazil for polyglossia (#2953).\n\n  * HTML writer:
  Ensure mathjax link is added when math appears in footnote\n    (#2881).  Previously
  if a document only had math in a footnote, the\n    MathJax link would not be added.\n\n
  \ * EPUB writer: set `navpage` variable on nav page.\n    This allows templates
  to treat it differently.\n\n  * DocBook writer:\n\n    + Use docbook5 if `writerDocbook5`
  is set (Ivo Clarysse).\n    + Properly handle `ulink`/`link` (Ivo Clarysse).\n\n
  \ * EPUB reader:\n\n    + Unescape URIs in spine (#2924).\n    + EPUB reader:  normalise
  link id (Mauro Bieg).\n\n  * Docx Reader:\n\n    + Parse `moveTo` and `moveFrom`
  (Jesse Rosenthal).\n      `moveTo` and `moveFrom` are track-changes tags that are
  used when a\n      block of text is moved in the document. We now recognize these
  tags and\n      treat them the same as `insert` and `delete`, respectively. So,\n
  \     `--track-changes=accept` will show the moved version, while\n      `--track-changes=reject`
  will show the original version.\n    + Tests for track-changes moving (Jesse Rosenthal).\n\n
  \ * ODT, EPUB, Docx readers: throw `PandocError` on unzip failure\n    (Jesse Rosenthal)
  Previously, `readDocx`, `readEPUB`, and `readOdt`\n    would error out if zip-archive
  failed. We change the archive extraction\n    step from `toArchive` to `toArchiveOrFail`,
  which returns an Either value.\n\n  * Markdown, HTML readers:  be more forgiving
  about unescaped `&` in\n    HTML (#2410).  We are now more forgiving about parsing
  invalid HTML with\n    unescaped `&` as raw HTML.  (Previously any unescaped `&`\n
  \   would cause pandoc not to recognize the string as raw HTML.)\n\n  * Markdown
  reader:\n\n    + Added bracket syntax for native spans (#168).\n    + Fix pandoc
  title blocks with lines ending in 2 spaces (#2799).\n    + Added `-s` to markdown-reader-more
  test.\n\n  * HTML reader: fixed bug in `pClose`.  This caused exponential parsing\n
  \   behavior in documnets with unclosed tags in `dl`, `dd`, `dt`.\n\n  * MediaWiki
  reader: Allow spaces before `!` in MediaWiki table header\n    (roblabla).\n\n  *
  RST reader: Support `:class:` option for code block in RST reader\n    (Sidharth
  Kapur).\n\n  * Org reader (all Albert Krewinkel, except where noted otherwise):\n\n
  \   + Stop padding short table rows.\n      Emacs Org-mode doesn't add any padding
  to table rows.  The first\n      row (header or first body row) is used to determine
  the column count,\n      no other magic is performed.\n    + Refactor rows-to-table
  conversion.  This refactors\n      the codes conversing a list table lines to an
  org table ADT.\n      The old code was simplified and is now slightly less ugly.\n
  \   + Fix handling of empty table cells, rows (Albert Krewinkel, #2616).\n      This
  fixes Org mode parsing of some corner cases regarding empty cells\n      and rows.
  \ Empty cells weren't parsed correctly, e.g. `|||` should be\n      two empty cells,
  but would be parsed as a single cell containing a pipe\n      character.  Empty
  rows where parsed as alignment rows and dropped from\n      the output.\n    + Fix
  spacing after LaTeX-style symbols.\n      The org-reader was dropping space after
  unescaped LaTeX-style symbol\n      commands: `\\ForAll \\Auml` resulted in `∀Ä`
  but should give `∀ Ä`\n      instead.  This seems to be because the LaTeX-reader
  treats the\n      command-terminating space as part of the command.  Dropping the
  trailing\n      space from the symbol-command fixes this issue.\n    + Print empty
  table rows.  Empty table rows should not\n      be dropped from the output, so row-height
  is always set to be at least 1.\n    + Move parser state into separate module.\n
  \     The org reader code has become large and confusing.  Extracting smaller\n
  \     parts into submodules should help to clean things up.\n    + Add support for
  sub/superscript export options.\n      Org-mode allows to specify export settings
  via `#+OPTIONS` lines.\n      Disabling simple sub- and superscripts is one of these
  export options,\n      this options is now supported.\n    + Support special strings
  export option Parsing of special strings\n      (like `...` as ellipsis or `--`
  as en dash) can be toggled using the `-`\n      option.\n    + Support emphasized
  text export option.  Parsing of emphasized text can\n      be toggled using the
  `*` option.  This influences parsing of text marked\n      as emphasized, strong,
  strikeout, and underline.  Parsing of inline math,\n      code, and verbatim text
  is not affected by this option.\n    + Support smart quotes export option.  Reading
  of smart quotes can be\n      toggled using the `'` option.\n    + Parse but ignore
  export options. All known export options are parsed\n      but ignored.\n    + Refactor
  block attribute handling.  A parser state attribute was used\n      to keep track
  of block attributes defined in meta-lines.  Global state\n      is undesirable,
  so block attributes are no longer saved as part of the\n      parser state.  Old
  functions and the respective part of the parser state\n      are removed.\n    +
  Use custom `anyLine`.  Additional state changes need to be made after\n      a newline
  is parsed, otherwise markup may not be recognized correctly.\n      This fixes a
  bug where markup after certain block-types would not be\n      recognized.\n    +
  Add support for `ATTR_HTML` attributes (#1906).\n      Arbitrary key-value pairs
  can be added to some block types using a\n      `#+ATTR_HTML` line before the block.
  \ Emacs Org-mode only includes these\n      when exporting to HTML, but since we
  cannot make this distinction here,\n      the attributes are always added.  The
  functionality is now supported\n      for figures.\n    + Add `:PROPERTIES:` drawer
  support (#1877).\n      Headers can have optional `:PROPERTIES:` drawers associated
  with them.\n      These drawers contain key/value pairs like the header's `id`.
  \ The\n      reader adds all listed pairs to the header's attributes; `id` and\n
  \     `class` attributes are handled specially to match the way `Attr` are\n      defined.
  \ This also changes behavior of how drawers of unknown type\n      are handled.
  \ Instead of including all unknown drawers, those are not\n      read/exported,
  thereby matching current Emacs behavior.\n    + Use `CUSTOM_ID` in properties.  See
  above on Org writer changes.\n    + Respect drawer export setting.  The `d` export
  option can be used\n      to control which drawers are exported and which are discarded.\n
  \     Basic support for this option is added here.\n    + Ignore leading space in
  org code blocks (Emanuel Evans, #2862).\n      Also fix up tab handling for leading
  whitespace in code blocks.\n    + Support new syntax for export blocks.  Org-mode
  version 9\n      uses a new syntax for export blocks.  Instead of `#+BEGIN_<FORMAT>`,\n
  \     where `<FORMAT>` is the format of the block's content, the new\n      format
  uses `#+BEGIN_export <FORMAT>` instead.  Both types are\n      supported.\n    +
  Refactor `BEGIN...END` block parsing.\n    + Fix handling of whitespace in blocks,
  allowing content to be indented\n      less then the block header.\n    + Support
  org-ref style citations.  The *org-ref* package is an\n      org-mode extension
  commonly used to manage citations in org\n      documents.  Basic support for the
  `cite:citeKey` and\n      `[[cite:citeKey][prefix text::suffix text]]` syntax is
  added.\n    + Split code into separate modules, making for cleaner code and\n      better
  decoupling.\n\n  * Added `docbook5` template.\n\n  * `--mathjax` improvements:\n\n
  \   + Use new CommonHTML output for MathJax (updated default MathJax URL,\n      #2858).\n
  \   + Change default mathjax setup to use `TeX-AMS_CHTML` configuration.\n      This
  is designed for cases where the input is always TeX and maximal\n      conformity
  with TeX is desired.  It seems to be smaller and load faster\n      than what we
  used before.  See #2858.\n    + Load the full MathJax config to maximize loading
  speed (KolenCheung).\n\n  * Bumped upper version bounds to allow use of latest packages\n
  \   and compilation with ghc 8.\n\n  * Require texmath 0.8.6.2.  Closes several
  texmath-related bugs (#2775,\n    #2310, #2310, #2824).  This fixes behavior of
  roots, e.g.\n    `\\sqrt[3]{x}`, and issues with sub/superscript positioning\n    and
  matrix column alignment in docx.\n\n  * README:\n\n    + Clarified documentation
  of `implicit_header_references` (#2904).\n    + Improved documentation of `--columns`
  option.\n\n  * Added appveyor setup, with artifacts (Jan Schulz).\n\n  * stack.yaml
  versions: Use proper flags used for texmath, pandoc-citeproc.\n\n  * LaTeX template:
  support for custom font families (vladipus).\n    Needed for correct polyglossia
  operation with Cyrillic fonts and perhaps\n    can find some other usages.  Example
  usage in YAML metadata:\n\n          fontfamilies:\n          - name: \\cyrillicfont\n
  \           font: Liberation Serif\n          - name: \\cyrillicfonttt\n            options:
  Scale=MatchLowercase\n            font: Liberation\n\n  * Create unsigned msi as
  build artifact in appveyor build.\n\n  * On travis, test with ghc 8.0.1; drop testing
  for ghc 7.4.1.\n\npandoc (1.17.0.3)\n\n  * LaTeX writer: Fixed position of label
  in figures (#2813).\n    Previously the label wasn't in the right place, and `\\ref`\n
  \   wouldn't work properly.\n  * Added .tei test files to pandoc.cabal so they'll
  be included\n    in tarball (#2811).\n  * Updated copyright dates.\n\npandoc (1.17.0.2)\n\n
  \ * Fixed serious regression in `htmlInBalanced`, which caused\n    newlines to
  be omitted in some raw HTML blocks in Markdown\n    (#2804).\n\npandoc (1.17.0.1)\n\n
  \ * File scope is no longer used when there are no input files (i.e.,\n    when
  input comes from stdin).  Previously file scope was triggered\n    when the `json`
  reader was specified and input came from `stdin`,\n    and this caused no output
  to be produced.  (Fix due to Jesse Rosenthal;\n    thanks to Fedor Sheremetyev for
  calling the bug to our attention.)\n  * Improved documentation of templates (#2797).\n\npandoc
  (1.17)\n\n  * Added `--file-scope` option (Jesse Rosenthal).\n    By default pandoc
  operates on multiple files by first concatenating\n    them (around extra line breaks)
  and then processing the joined file. So\n    it only parses a multi-file document
  at the document scope. This has the\n    benefit that footnotes and links can be
  in different files, but for\n    some purposes it is useful to parse the individual
  files first\n    and then combine their outputs (e.g. when the files use footnotes\n
  \   or links with the same labels).  The `--file-scope` option causes\n    pandoc
  to parse the files first, and then combine the parsed output,\n    instead of combining
  before parsing. `--file-scope` is selected\n    automatically for binary input files
  (which cannot be concatenated)\n    and for pandoc json.\n\n  * Add TEI Writer (Chris
  Forster) and `tei` output format.\n\n  * Added a general `ByteStringReader` with
  warnings, used by the docx\n    reader (API change, Jesse Rosenthal).\n\n  * Add
  `readDocxWithWarnings` (API change, Jesse Rosenthal).\n\n  * Changed type of `Shared.uniqueIdent`'s
  argument from `[String]`\n    to `Set String.` This avoids performance problems
  in documents with\n    many identically named headers (API change, #2671).\n\n  *
  Removed `tex_math_single_backslash` from `markdown_github` options\n    (#2707).\n\n
  \ * Make language extensions as well as full language names\n    trigger syntax
  highlighting.  For example, `py` will now work as\n    well as `python` (jgm/highlighting-kate#83).\n\n
  \ * Added `institute` variable to latex, beamer templates (Fraser\n    Tweedale,
  Josef Svenningsson).\n\n  * Docx reader (Jesse Rosenthal):\n\n    + Handle alternate
  content.  Some word functions (especially graphics)\n      give various choices
  for content so there can be backwards compatibility.\n    + Don't turn numbered
  headers into lists.\n    + Docx Reader: Add state to the parser, for warnings\n
  \   + Update feature checklist in source code.\n    + Get rid of `Modifiable` typeclass.\n
  \   + Add tests for adjacent hyperlinks.\n    + Add a \"Link\" modifier to `Reducible`.
  We want to make sure that\n      links have their spaces removed, and are appropriately
  smushed\n      together (#2689).\n\n  * HTML reader:\n\n    + Fixed behavior of
  base tag (#2777).\n      If the base path does not end with slash, the last component\n
  \     will be replaced.  E.g. base = `http://example.com/foo`\n      combines with
  `bar.html` to give `http://example.com/bar.html`.\n      If the href begins with
  a slash, the whole path of the base\n      is replaced.  E.g. base = `http://example.com/foo/`
  combines\n      with `/bar.html` to give `http://example.com/bar.html`.\n    + Rewrote
  `htmlInBalanced`.  This version avoids an exponential\n      performance problem
  with `<script>` tags, and it should be faster\n      in general (#2730).\n    +
  Properly handle an empty cell in a simple table (#2718).\n    + Handle multiple
  `<meta>` tags with same name.  Put them in a list\n      in the metadata so they
  are all preserved, rather than (as before)\n      throwing out all but one..\n\n
  \ * Markdown reader:\n\n    + Improved pipe table parsing (#2765).\n    + Allow
  `+` separators in pipe table cells.  We already allowed\n      them in the header,
  but not in the body rows, for some reason.\n      This gives compatibility with
  org-mode tables.\n    + Don't cross line boundary parsing pipe table row.\n      Previously
  an Emph element could be parsed across the newline\n      at the end of the pipe
  table row.\n    + Use `htmlInBalanced` for `rawVerbatimBlock`, for better\n      performance
  (#2730).\n    + Fixed bug with smart quotes around tex math.\n\n  * LaTeX reader:\n\n
  \   + Handle interior `$` characters in math (#2743).  For example,\n      `$$\\hbox{$i$}$$`.\n
  \   + `inlineCommand` now gobbles an empty `{}` after any command (#2687).\n      This
  gives better results when people write e.g. `\\TeX{}` in Markdown.\n    + Properly
  handle LaTeX \"math\" environment as inline math (#2171).\n\n  * Textile reader:
  Support `>`, `<`, `=`, `<>` text alignment attributes.\n    Closes #2674.\n\n  *
  Org reader (Albert Krewinkel):\n\n    + Prefix even empty figure names with \"fig:\"
  (#2643).  The\n      convention used by pandoc for figures is to mark them by prefixing\n
  \     the name with `fig:`.  The org reader failed to do this if a figure\n      had
  no name.\n    + Refactor link-target processing (#2684).\n\n  * ConTeXt writer:
  Fix whitespace at line beginning in line blocks (#2744).\n    Thanks to @c-foster.\n\n
  \ * HTML writer: Don't include alignment attribute for default table columns.\n
  \   Previously these were given \"left\" alignment.  Better to leave off\n    alignment
  attributes altogether (#2694).\n\n  * Markdown writer: Use hyphens for YAML metadata
  block bottom line, for\n    better compatibility with other Markdown flavors (Henrik
  Tramberend).\n\n  * LaTeX writer:\n\n    + Use image identifier to create a label
  and hypertarget for\n      figures (Mauro Bieg).\n    + Avoid double toprule in
  headerless table with caption (#2742).\n    + Clean up options parser (Jesse Rosenthal).\n
  \   + Treat `memoir` template with `article` option as article, instead\n      of
  treating all `memoir` templates as books.\n    + Allow more flexible table alignment
  (Henrik Tramberend, #2665).\n      New default is not to include `[c]` option (which
  is the default\n      anyway if no positioning is specified).  Now LaTeX emplates
  can\n      control the overall table alignment in a document by setting the\n      longtable
  length variables `LTleft` and `LTright`.  For example,\n      `\\setlength\\LTleft\\parindent\\setlength\\LTright\\fill`\n
  \     will create left-aligned tables that respect paragraph indentation.\n\n  *
  Docx writer: Handle image alt text (#2754, Mauro Bieg).\n\n  * Org writer - pass
  through RawInline with format \"org\".\n\n  * DokuWiki writer: use `$$` for display
  math.\n\n  * Custom writer: Pass attributes parameter to CaptionedImage (#2697).\n\n
  \ * Make protocol-relative URIs work again (#2737).\n\n  * make_osx_package.sh:
  \ Use env variable for developer id certs.\n\n  * Raise `tagsoup` lower bound to
  0.13.7 to fix entity-related\n    problems (#2734).\n\n  * Allow `zip-archive` 0.3.\n\n
  \ * Allow `aeson` 0.11.\n\npandoc (1.16.0.2)\n\n  * Depend on deepseq rather than
  deepseq-generics (fpco/stackage#1096).\n\n  * Fixed regression in latex smart quote
  parsing (#2645).\n    In cases where a match was not found for a quote, everything\n
  \   from the open quote to the end of the paragraph was being dropped.\n\npandoc
  (1.16.0.1)\n\n  * Fixed regression with `--latex-engine` (#2618).  In 1.16 `--latex-engine`\n
  \   raises an error if a full path is given.\n\n  * Org reader: Fix function dropping
  subtrees tagged `:noexport`\n    (Albert Krewinkel, #2628):\n\n  * Markdown reader:
  renormalize table column widths if they exceed 100%\n    (#2626).\n\n  * Textile
  reader:  don't allow block HTML tags in inline contexts.\n    The reader previously
  did allow this, following redcloth,\n    which happily parses\n\n        Html blocks
  can be <div>inlined</div> as well.\n\n    as\n\n        <p>Html blocks can be <div>inlined</div>
  as well.</p>\n\n    This is invalid HTML.  The above sample now produces;\n\n        <p>Html
  blocks can be</p>\n        <div>\n        <p>inlined</p>\n        </div>\n        <p>as
  well.</p>\n\n  * Improved default template lookup for custom lua scripts (#2625).\n
  \   Previously, if you tried to do `pandoc -s -t /path/to/lua/script.lua`,\n    pandoc
  would look for the template in\n    `~/.pandoc/templates/default./path/to/lua/script.lua`.\n
  \   With this change it will look in the more reasonable\n    `~/.pandoc/templates/default.script.lua`.
  \ This makes it possible to\n    store default templates for custom writers.\n\n
  \ * RST, Markdown writers: Fixed rendering of grid tables with blank rows\n    (#2615).\n\n
  \ * LaTeX writer: restore old treatment of Span (#2624).  A Span is\n    now rendered
  with surrounding `{}`, as it was before 1.16.\n\n  * Entity handling fixes: improved
  handling of entities like\n    `&lang;` that require a trailing semicolon.  Allow
  uppercase\n    `x` in numerical hexadecimal character references, working\n    around
  a tagsoup bug.\n\n  * `stack.yaml` - use lts-4.0, but with older aeson to avoid
  excessive\n    memory use on compile.  With aeson 0.10 we were getting an out of\n
  \   memory error on a 2GB Ubuntu 64-bit VM.\n\n  * Improved deb package creation
  script. Made `DPKGVER` work.\n    Renamed `COMMIT` to `TREE`.  You should now be
  able to do\n    `TREE=1.16.0.1 DPKGVER=2 make deb`.\n\n\npandoc (1.16)\n\n  * Added
  `Attr` field to `Link` and `Image` (Mauro Bieg, #261, API change).\n\n    + Added
  syntax for link and image attributes to pandoc's Markdown.\n    + Updated readers
  and writers to use link and image attributes\n      when appropriate.\n    + Support
  image attributes in Docx, Textile, RST readers.\n\n  * Renamed link attribute extensions.
  \ The old `link_attributes` is\n    now `mmd_link_attributes`, and `link_attributes`
  now enables the\n    new pandoc-style link and image attributes (API change).\n
  \   Note: this change could break some existing workflows.\n\n  * Implemented `SoftBreak`
  and new `--wrap` option (#1701, API change).\n    Added threefold wrapping option.\n\n
  \   + Command line option: deprecated `--no-wrap`, added\n      `--wrap=[auto|none|preserve]`\n
  \   + Added `WrapOption`, exported from `Text.Pandoc.Options`\n    + Changed type
  of `writerWrapText` in `WriterOptions` from\n      `Bool` to `WrapOption`.\n    +
  Modified `Text.Pandoc.Shared` functions to allow `SoftBreak`.\n    + Supported `SoftBreak`
  in readers and writers.\n\n  * Text.Pandoc.Options:  Added `writerDpi` to `WriterOptions`
  (API\n    change, Mauro Bieg).\n\n  * Added `--dpi` command-line option (Mauro Bieg).\n\n
  \ * Rationalized behavior of `--no-tex-ligatures` and `--smart` (#2541).\n    This
  change makes `--no-tex-ligatures` affect the LaTeX reader\n    as well as the LaTeX
  and ConTeXt writers.  If it is used,\n    the LaTeX reader will parse characters
  `` ` ``, `'`, and `-`\n    literally, rather than parsing ligatures for quotation
  marks\n    and dashes.  And the LaTeX writer will print unicode quotation\n    mark
  and dash characters literally, rather than converting\n    them to the standard
  ASCII ligatures.  Note that `--smart` has\n    no effect on the LaTeX reader.  `--smart`
  is still the default\n    for all input formats when LaTeX or ConTeXt is the output
  format,\n    *unless* `--no-tex-ligatures` is used.\n\n    Some examples to illustrate
  the logic:\n\n    ```\n    % echo \"'hi'\" | pandoc -t latex\n    `hi'\n    % echo
  \"'hi'\" | pandoc -t latex --no-tex-ligatures\n    'hi'\n    % echo \"'hi'\" | pandoc
  -t latex --no-tex-ligatures --smart\n    ‘hi’\n    % echo \"'hi'\" | pandoc -f latex
  --no-tex-ligatures\n    <p>'hi'</p>\n    % echo \"'hi'\" | pandoc -f latex\n    <p>’hi’</p>\n
  \   ```\n\n  * Removed deprecated options `--offline` and `--html5`.\n\n  * Fixed
  language code for Czech (`cs` not `cz`) (#2597).\n\n  * Implemented `east_asian_line_breaks`
  extension (#2586).\n    In `Text.Pandoc.Options`, added `Ext_east_asian_line_breaks`
  constructor\n    to `Extension` (API change).  This extension is like\n    `ignore_line_breaks`,
  but smarter -- it only ignores line breaks\n    between two East Asian wide characters.
  \ This makes it better suited\n    for writing with a mix of East Asian and non-East
  Asian scripts.\n\n  * Added support for PDF creation via `wkhtmltopdf`.\n    To
  use this: `pandoc -t html5 -o result.pdf` (and add `--mathjax`\n    if you have
  math.) Margins can be set using the variables\n    `margin-top`, `margin-bottom`,
  `margin-left`, `margin-right`.\n    Other styling can be done through CSS.\n\n  *
  Fixed cite key parsing regression (jgm/pandoc-citeproc#201).\n    We were capturing
  final colons as in `[@foo: bar]`; the citation id\n    was being parsed as `@foo:`.\n\n
  \ * ICML writer:\n\n    + Fixed image syntax for local files (#2589).\n    + Changed
  type of `writeICML` (Mauro Bieg).\n      API change:  It is now `WriterOptions ->
  Pandoc -> IO String`.\n      Also handle new image attributes.\n    + Intersperse
  line breaks instead of appending them to\n      every `ParagraphStyleRange` (Mauro
  Bieg, #2501).\n    + Add `Cite` style to citations (Mauro Bieg).\n    + Added figure
  handling (#2590, Mauro Bieg).\n    + Better handling of math.  Instead of just printing
  the raw tex,\n      we now try to fake it with unicode characters.\n\n  * HTML writer:
  Include `example` class for example lists (#2524).\n\n  * ODT/OpenDocument writer:
  improved image attributes (Mauro Bieg).\n\n    + Support for percentage widths/heights\n
  \   + Use `Attr` instead of title to get dimensions from ODT walker\n      to `writeOpenDocument`.\n\n
  \ * AsciiDoc writer:\n\n    + Support anchors in spans and divs with id elements\n
  \     (jgm/pandoc-citeproc#143).\n    + Fixed code blocks (#1861).\n\n  * Haddock
  writer:  omit formatting inside links, which isn't supported\n    by Haddock (#2515).\n\n
  \ * MediaWiki writer:  Fixed spacing issues in table cells.\n\n    + Start cell
  on new line unless it's a single Para or Plain\n      (#2606).\n    + For single
  Para or Plain, insert a space after the `|` to\n      avoid problems when the text
  begins with a character like\n      `-` (#2604).\n\n  * Beamer writer: mark frame
  as fragile when it contains verbatim (#1613).\n\n  * LaTeX writer:\n\n    + Add
  support for GAP highlighting using listings (Raniere Silva).\n    + Consider `header-includes`
  content as well as templates\n      when determining whether to use csquotes (Andreas
  Lööw).\n    + Create defaults for geometry using `margin-left` etc.\n      If `geometry`
  has no value, but `margin-left`, `margin-right`,\n      `margin-top`, and/or `-margin-bottom`
  are given, a default value\n      for `geometry` is created from these.  Note that
  these variables\n      already affect PDF production via HTML5 with `wkhtmltopdf`.\n\n
  \ * ConTeXt writer: set default layout based on `margin-left`, etc.\n    This sets
  up `\\setuplayout` based on the variables `margin-left`,\n    `margin-right`, `margin-bottom`,
  and `margin-top`, if no layout\n    is given.\n\n  * Docx writer:  better handling
  of PDF images.  Previously we tried\n    to get the image size from the image even
  if an explicit size was\n    specified.  Since we still can't get image size for
  PDFs, this made\n    it impossible to use PDF images in docx.  Now we don't try
  to get\n    the image size when a size is already explicitly specified.\n\n  * Markdown
  writer:  use raw HTML for link/image attributes when\n    the `link_attributes`
  extension is unset and `raw_html` is set (#2554).\n\n  * MediaWiki reader: interpret
  markup inside `<tt>`, `<code>` (#2607).\n\n  * LaTeX reader:\n\n    + Improved smart
  quote parsing (#2555). This fixes redering of\n      unmatched quotes.\n    + Use
  curly quotes for unmatched ` (#2555).\n    + Allow blank space between braced arguments
  of commands (#2592).\n\n  * Markdown reader:\n\n    + Improved pipe table relative
  widths.  Previously pipe table\n      columns got relative widths (based on the
  header underscore lines)\n      when the source of one of the rows was greater in
  width than the\n      column width.  This gave bad results in some cases where much
  of\n      the width of the row was due to nonprinting material (e.g. link\n      URLs).
  \ Now pandoc only looks at printable width (the width of a\n      plain string version
  of the source), which should give better results.\n      Thanks to John Muccigrosso
  for bringing up the issue.\n    + Fixed parsing bug with macros.  Previously macro
  definitions in\n      indented code blocks were being parsed as macro definitions,
  not code.\n\n  * Textile reader:  skip over attribute in image source (#2515).\n
  \   We don't have a place yet for styles or sizes on images, but\n    we can skip
  the attributes rather than incorrectly taking them\n    to be part of the filename.\n\n
  \ * Docx reader: Handle dummy list items (Jesse Rosenthal).\n    These come up when
  people create a list item and then delete the\n    bullet. It doesn't refer to any
  real list item, and we used to ignore\n    it.\n\n  * CommonMark reader/writer rewritten
  to use latest `cmark`.\n\n  * Fixed Emoji character definitions (#2523).  There
  were many bugs in the\n    definitions.\n\n  * `Text.Pandoc.CSS`:\n\n    + Added
  `pickStylesToKVs` function to extract multiple properties at\n      once (API change,
  Mauro Bieg).\n    + Parse CSS that doesn't contain the optional semicolon (Mauro
  Bieg).\n\n  * `trypandoc`: sort drop-down lists.\n\n  * Beamer template:\n\n    +
  Made `\\euro` conditional on presence of character.\n      for xelatex and lualatex,
  as it is for pdflatex (Andrew Dunning).\n    + Moved `header-includes` before setting
  of title (Thomas Hodgson),\n      to match the LaTeX template (jgm/pandoc-templates#168).\n
  \   + Added `section-titles` variable (defaults to true)\n      to enable/suppress
  section title pages in beamer\n      slide shows (Thomas Hodgson).\n    + Moved
  beamer themes after fonts, so that themes can\n      change fonts.  (Previously
  the fonts set were being\n      clobbered by lmodern.sty.) (Thomas Hodgson).\n\n
  \ * Beamer/LaTeX template changes (Thomas Hodgson):\n    + Added `thanks` variable\n
  \   + Use `parskip.sty` when `indent` isn't set (fall back to using\n      `setlength`
  as before if `parskip.sty` isn't available).\n    + Use `biblio-style` with biblatex.\n
  \   + Added `biblatexoptions` variable.\n\n  * LaTeX template changes:\n\n    +
  Added `paper` after `$papersize$` variable in latex template.\n      Thus you can
  say `papersize: a4` and the latex will contain\n      `a4paper`.  This change may
  break some existing workflows; if\n      you currently specify `a4paper`, you'll
  get `a4paperpaper` which\n      is meaningless.  However, the change seems worth
  it, as it will\n      make the `papersize` variable work uniformly across ConTeXt,
  LaTeX,\n      and html->pdf via wkhtmltopdf.\n    + Only pass options to color package
  if `colorlinks` is set\n      (Andrew Dunning).\n    + Make definition of `\\euro`
  conditional in xelatex/lualatex,\n      as it is already for pdflatex (Andrew Dunning).\n
  \   + Removed setting of `subject` in PDF metadata.\n      This used to be set to
  the subtitle, but really the subtitle\n      need not give the subject.  Also, `subtitle`
  can contain formatting,\n      so we'd need, at least, a plain text version for
  this.\n    + Moved `header-includes` before setting of `\\title`, `\\author`,\n
  \     etc.  This allows these macros to be redefined.\n    + Use `\\subtitle` command
  for `subtitle`, instead of tacking it\n      on to the title as before.  We give
  a no-op fallback definition if it\n      is not defined.  This change should produce
  much better results\n      in classes that support `\\subtitle`.  With the default
  article\n      class, which does not define `\\subtitle`, subtitles will no\n      longer
  be printed unless the user defines `\\subtitle` and\n      redefines `\\maketitle`.\n
  \   + Moved redefinitions of `\\paragraph` and `\\subparagraph` to\n      before
  header-includes.\n\n  * Context template:\n\n    + Use `simplefonts` for font loading
  (Paolo Rodríguez).  This is\n      needed for things to work on ConTeXt stable from
  TeXLive 2015.\n    + Revert use of `\\setuphead` in title block (Andrew Dunning,\n
  \     Rik Kabel).\n\n  * Update LaTeX/ConTeXt link colour usage (Andrew Dunning).\n\n
  \ * Fixed man template so disabling hyphenation actually works.\n    The command
  needs to come after .TH.\n\n  * Added 'navigation' variable to beamer template (#2543).\n
  \   Valid values are `empty` (the default), `horizontal`, `vertical`,\n    and `frame`.
  \ Note that this changes the default behavior from\n    `horizontal` to `empty`.
  \ Closes #2543.\n\n  * Added `toc` to HTML slide format templates (Andrew Dunning),\n
  \   so that `--toc` creates a contents slide.\n\n  * Added `stack.full.yaml` to
  build `pandoc-citeproc` as well.\n\n  * Allow pipe tables with no body rows (#2556).\n
  \   Previously this raised a runtime error.\n\n  * Shared: Improved `fetchItem`
  so that `C:/Blah/Blah.jpg` isn't treated\n    as URL.  The Haskell URI parsing routines
  will accept \"C:\" as a\n    scheme, so we rule that out manually.  This helps with\n
  \   `--self-contained` and absolute Windows paths.\n\n  * Define a `meta-json` variable
  for all writers (#2019).  This contains\n    a JSON version of all the metadata,
  in the format selected for the\n    writer.  So, for example, to get just the YAML
  metadata, you can run\n    pandoc with the following custom template: `$meta-json$`.
  \ The intent\n    is to make it easier for static site generators and other tools
  to get\n    at the metadata.\n\n  * Document limitations of --self-contained (#2553).\n\n
  \ * Improved Citations section of README (#2551).  Added information\n    about
  `link-citations` and a link to the pandoc-citeproc man page.\n\n  * `ImageSize`:
  use `safeRead` instead of `readMaybe`, which isn't\n    in base < 4.6.\n\n  * Allow
  .adoc file extension for AsciiDoc (Andrew Dunning).\n\n  * Improved implicit pandoc-citeproc
  inclusion.\n    The filter pandoc-citeproc is automatically used when\n    `--bibliography`
  is specified on the command line, unless\n    `--natbib` or `--biblatex` is used.
  \ However, previously this\n    only worked if `--bibliography` was spelled out
  in full, and not\n    if `--biblio` was used.\n\n  * reveal.js: Interpret pauses
  correctly for all headers (#2530).\n    Previously, when using headers below the
  slide level, pauses are left\n    uninterpreted into pauses. In my opinion, unexpected
  behavior but\n    intentional looking at the code.\n\n  * Remove redundant `center`
  variable for reveal.js (Andrew Dunning).\n\n  * Parsing: Add `extractIdClass`, modified
  type of `KeyTable` (Mauro\n    Bieg, API change).\n\n  * ImageSize:  Added functions
  for converting between image dimensions\n    (Mauro Bieg).\n\n  * Use lts-3.18 in
  stack.yaml.  This avoids Windows build\n    issues with the HTTP library.\n\n  *
  Bump version bounds for dependencies.\n\npandoc (1.15.2.1)\n\n  * Added two missing
  test files, and `stack.yaml`, to\n    `extra-source-files` so they're included in
  the source tarball.\n\n  * reveal.js template: Fixed parallaxBackground options.\n
  \   `parallaxBackgroundHorizontal` and `parallaxBackgroundVertical`\n    need integer
  values, not strings.  (Vaughn Iverson)\n\npandoc (1.15.2)\n\n  * `pandoc my.md -t
  context -o my.pdf` will now create a PDF using\n    ConTeXt rather than LaTeX (#2463).\n\n
  \ * Fixed omitted `url(...)` in CSS data-uri with `--self-contained` (#2489).\n\n
  \ * Added `emoji` Markdown extension, enabled by default in `markdown_github`\n
  \   (#2523).  Added `Ext_emoji` to `Extension` in `Text.Pandoc.Options`\n    (API
  change).\n\n  * `Text.Pandoc.Readers.HTML.parseTags`: Fixed over-eager raw HTML
  inline\n    parsing (#2469).  Tightened up the inline HTML parser so it disallows\n
  \   TagWarnings.\n\n  * Derive `Generic` instances for the types in `Text.Pandoc.Options`.\n\n
  \ * Org reader:\n\n    + Fix paragraph/list interaction (Albert Krewinkel, #2464).\n
  \     Paragraphs can be followed by lists, even if there is no blank line\n      between
  the two blocks.  However, this should only be true if the\n      paragraph is not
  within a list, were the preceding block should be\n      parsed as a plain instead
  of paragraph (to allow for compact lists).\n      Thanks to @rgaiacs for bringing
  this up.\n    + Allow toggling header args (Albert Krewinkel, #2269).\n      Org-mode
  allows to skip the argument of a code block header argument if\n      it's toggling
  a value.  Argument-less headers are now recognized,\n      avoiding weird parsing
  errors.\n    + Fix markup parsing in headers (Albert Krewinkel, #2504).\n      Markup
  as the very first item in a header wasn't recognized.  This was\n      caused by
  an incorrect parser state: positions at which inline markup\n      can start need
  to be marked explicitly by changing the parser state.\n      This wasn't done for
  headers.  The proper function to update the state\n      is now called at the beginning
  of the header parser, fixing this issue.\n    + Fix emphasis rules for smart parsing
  (Albert Krewinkel, #2513).\n      Smart quotes, ellipses, and dashes should behave
  like normal quotes,\n      single dashes, and dots with respect to text markup parsing.\n
  \   + Require whitespace around definition list markers (#2518).\n      This rule
  was not checked before, resulting in bugs with footnotes\n      and some link types.\n\n
  \ * Markdown reader:\n\n    + Pipe tables with long lines now get relative cell
  widths (#2471).\n      If a pipe table contains a line longer than the column width
  (as set by\n      `--columns` or 80 by default), relative widths are computed based
  on the\n      widths of the separator lines relative to the column width.  This
  should\n      solve persistent problems with long pipe tables in LaTeX/PDF output,
  and\n      give more flexibility for determining relative column widths in other\n
  \     formats, too.  For narrower pipe tables, column widths of 0 are used,\n      telling
  pandoc not to specify widths explicitly in output formats that\n      permit this.\n
  \   + Improved parser for `mmd_title_block`.  We now allow blank metadata\n      fields.
  \ These were explicitly disallowed before.\n    + Citation keys can now contain
  `://`, so URLs and DOIs can be used\n      as citation keys (jgm/pandoc-citeproc#166).\n\n
  \ * Beamer template:  fix incompatibility of section slides with natbib.\n    Natbib
  (and presumably biblatex) bibliography commands create\n    their own section.  Since
  these are in frame environments,\n    we have an incompatibility with the `\\AtBeginSection`
  macro\n    which creates a special frame when a new section occurs.\n    (We can't
  have a frame inside another frame.) This change disables\n    `\\AtBeginSection`
  inside bibliography slides.  Thinks to Yihui Xie for\n    bringing the problem to
  my attention.  This supersedes #145.  See\n    discussion there.\n\n  * Textile
  reader:  don't do smart punctuation unless explicitly asked\n    (#2480).  Note
  that although smart punctuation is part of the textile\n    spec, it's not always
  wanted when converting from textile\n    to, say, Markdown.  So it seems better
  to make this an option.\n\n  * LaTeX reader: Handle `comment` environment (Arata
  Mizuki).\n    The `comment` environment is handled in a similar way to the\n    `verbatim`
  environment, except that its content is discarded.\n\n  * Docx reader:  Follow relationships
  correctly in foot/endnotes (#2258,\n    Jesse Rosenthal).  This fixes a problem
  with links in notes.\n\n  * LaTeX and ConTeXt writers: support `lang` attribute
  on divs and spans\n    (Mauro Bieg).  For LaTeX, also collect `lang` and `dir` attributes
  on\n    spans and divs to set the `lang`, `otherlangs` and `dir` variables if\n
  \   they aren’t set already.  See #895.\n\n  * LaTeX writer:\n\n    + Use proper
  command for `\\textarabic` (Mauro Bieg).\n    + Added `de-CH-1901`, fixed `el-polyton`
  in `toPloyglossia` (Nick Bart).\n    + Use `\\hypertarget` and `\\hyperlink` for
  links.  This works correctly\n      to link to Div or Span elements.  We now don't
  bother defining `\\label`\n      for Div or Span elements.  Closes jgm/pandoc-citeproc#174.\n
  \   + Avoid footnotes in list of figures (#1506).\n    + Properly handle footnotes
  in captions (#1506).\n    + Add `\\protect` to `\\hyperlink` (#2490).  Thanks to
  Hadrien Mary.\n    + Set `colorlinks` if `linkcolor`, `urlcolor`, `citecolor`, or\n
  \     `toccolor` is set (#2508).\n\n  * Textile writer: support start number in
  ordered lists (#2465).\n\n  * OpenDocument writer:  Allow customization of opendocument\n
  \   automatic styles.  Automatic styles can now be inserted in the\n    template,
  which now provides the enclosing `<office:automatic-styles>`\n    tags (#2520).\n\n
  \ * Docx writer:  insert space between footnote reference and note (#2527).\n    This
  matches Word's default behavior.\n\n  * EPUB writer:  don't download linked media
  when `data-external` attribute\n    set (#2473).  By default pandoc downloads all
  linked media and includes it\n    in the EPUB container.  This can be disabled by
  setting `data-external` on\n    the tags linking to media that should not be downloaded.
  \ Example:\n\n        <audio controls=\"1\">\n          <source src=\"http://example.com/music/toccata.mp3\"\n
  \                 data-external=\"1\" type=\"audio/mpeg\">\n          </source>\n
  \       </audio>\n\n  * HTML writer:  use width on whole table if col widths sum
  to < 100%.\n    Otherwise some browsers display the table with the columns\n    separated
  far apart.\n\n  * AsciiDoc template:  Fix `author` and `date`; add `keywords`,\n
  \   `abstract` (Andrew Dunning).\n\n  * HTML-based templates (Andrew Dunning):\n\n
  \   + Use en dash instead of hyphen between title prefix and title.\n    + Add `keywords`
  to metadata.\n    + Add `lang`, `dir`, `quotes` where missing.\n    + Always make
  author and date display conditional.\n    + Updated dzslides template from source.\n\n
  \ * Man template: make \"generated by\" comment conditional.\n\n  * LaTeX, Beamer
  templates:\n\n    + Add `babel-otherlangs` for language divs/spans; `babel-newcommands`,\n
  \     filled by commands that make babel understand the polyglossia-style\n      language
  directives (Mauro Bieg, #137).\n    + Improved formatting of conditionals; `$for$`
  is always provided to allow\n      multiple options (Andrew Dunning, #141).\n    +
  Use `Ligatures=TeX` rather than `Mapping=tex-text` with `fontspec`\n      to improve
  support for LuaTeX (Andrew Dunning, #135).\n    + Revise `hyperref` usage (Andrew
  Dunning, #139, #141):\n        - use same options for all LaTeX engines;\n        -
  add `subtitle` and `keywords` to PDF metadata;\n        - do not override `hyperref`
  link coloring without user input, effectively making\n          the `hidelinks`
  option the default (removed as a separate variable);\n        - link colors can
  be enabled (using a slightly darker version of the old\n          defaults) using
  a new `colorlinks` variable, automatically used by\n          the LaTeX writer when
  custom colors are specified;\n        - `pdfborder={0 0 0}` is automatically set
  by `hyperref` with\n          `colorlinks`, and is only applied if `colorlinks`
  is disabled.\n\n  * ConTeXt template (Andrew Dunning):\n\n    + New variables for
  controlling styles: `linkstyle`, `linkcolor`,\n      `linkcontrastcolor`, `layout`,
  `pagenumbering`, `whitespace`, `indenting`,\n      `interlinespace`, `headertext`,
  `footertext`, `mainfont`, `sansfont`,\n      `monofont`, `mathfont`, `fontsize`.\n
  \   + Default template no longer supports MkII.\n    + Improve writing of title
  block (suppressing numbering of first page).\n    + Add `title` `subtitle`, `author`,
  `date`, `keywords` to PDF metadata.\n    + Support `subtitle`, `abstract`.\n    +
  Support list of figures (`lof`), list of tables (`lot`).\n    + Disable link styling
  by default.\n    + Define styles for all section types.\n    + Enable microtype.\n
  \   + Improved formatting of conditionals.\n\n  * Beamer template:  added code to
  prevent slide breaks inside paragraphs\n    (#2422, thanks to Nick Bart).  This
  will matter, in practice, only when\n    `allowframebreaks` is used.  It is especially
  helpful for bibliography\n    slides.\n\n  * OpenDocument template:  Add `<office:automatic-styles>`
  tag around\n    automatic styles.  The writer now longer provides this (see #2520).\n\n
  \ * Restored Text.Pandoc.Compat.Monoid.\n\n  * Do not export (<>) from custom Prelude.
  \ The Prelude now matches\n    base 4.8 Prelude's API.\n\n  * Don't use custom prelude
  with ghc 7.10.  Use the custom prelude\n    only for earlier versions.  This change
  makes `stack ghci` and\n    `cabal repl` work (#2503), at least with ghc 7.10.\n\n
  \ * Changed § to % in operators from Odt.Arrows.Utils (#2457).\n    This prevents
  problems building haddocks with \"C\" locale.\n\n  * Change default for old-locale
  flag to False.\n\n  * Use stack in deb, osx, and Windows package generators.\n\n
  \ * Added Vagrantfile for building deb in vm.\n    This should help in automating
  binary package creation.  'make package'\n    will make the package.  'make package
  COMMIT=blah' will make the package\n    from commit blah.\n\n  * README:\n\n    +
  Consistent capitalization for pandoc and Markdown.\n    + Fixed `auto_identifiers`
  examples (Benoit Schweblin).\n    + Improved documentation of template variables
  (Andrew Dunning).\n\npandoc (1.15.1.1)\n\n  * `Text.Pandoc.Data`:  store paths in
  dataFiles using posix separators.\n    This way we have uniform separators, whether
  on Windows or Linux.\n    This should solve a problem where on some Windows versions\n
  \   the data files weren't being found (#2459).\n\npandoc (1.15.1)\n\n  * `pandocVersion`
  is now defined in `Text.Pandoc.Shared`\n    and reexported from `Text.Pandoc` (Alex
  Vong).  This allows\n    writers to access it.  (Alex Vong) (API change)\n\n  *
  For `markdown_mmd`, add: `implicit_figures`, `superscripts`,\n    `subscripts` (#2401).\n\n
  \ * Added `odt` as input format (Martin Linnemann).  Added new module\n    `Text.Pandoc.Reader.ODT`
  (API change). Fully implemented features:\n    Paragraphs, Headers, Basic styling,
  Unordered lists, Ordered lists,\n    External Links, Internal Links, Footnotes,
  Endnotes, Blockquotes.\n    Partly implemented features: Citations, Tables.\n\n
  \ * Markdown Reader:\n\n    + Add basic tests for each header style (Ophir Lifshitz).\n
  \   + Add implicit header ref tests for headers with spaces (Ophir Lifshitz).\n
  \   + Skip spaces in headers (Ophir Lifshitz).\n    + Handle 'id' and 'class' in
  parsing key/value attributes (#2396).\n      `# Header {id=\"myid\" class=\"foo
  bar\"}`\n      is now equivalent to `# Header {#myid .foo .bar}`.\n    + Use '='
  instead of '#' for atx-style headers in markdown+lhs.\n      (Kristof Bastiaensen)\n
  \   + Pipe tables: allow indented columns.  Previously the left-hand column\n      could
  not start with 4 or more spaces indent.  This was inconvenient\n      for right-aligned
  left columns.  Note that the first (header column)\n      must still have 3 or fewer
  spaces indentation, or the table will be\n      treated as an indented code  block.\n
  \   + Fix regression:  allow HTML comments containing `--`.\n      Technically this
  isn't allowed in an HTML comment, but\n      we've always allowed it, and so do
  most other implementations.\n      It is handy if e.g. you want to put command line
  arguments\n      in HTML comments.\n\n  * LaTeX reader:\n\n    + Don't eat excess
  whitespace after macros with only optional\n      arguments (#2446).\n    + Support
  longtable (#2411).\n    + Implement `\\Cite` (#2335).\n    + Support abstract environment.
  \ The abstract populates an\n      `abstract` metadata field.\n    + Properly handle
  booktabs lines.  Lines aren't part of the\n      pandoc table model, so we just
  ignore them (#2307).\n\n  * HTML reader:\n\n    + Handle type attribute on ol, e.g.
  `<ol type=\"i\">` (#2313).\n    + Updated for new automatic header attributes.\n
  \   + Add auto identifiers if not present on headers.  This makes\n      TOC linking
  work properly.\n    + Detect `font-variant` with `pickStyleAttrProps` (Ophir Lifshitz).\n
  \   + Test `<ol>` type, class, and inline list-style(-type) CSS\n      (Ophir Lifshitz).\n
  \   + Better handling of \"section\" elements (#2438).  Previously\n      `<section>`
  tags were just parsed as raw HTML blocks.  With\n      this change, section elements
  are parsed as Div elements with\n      the class \"section\".\n\n  * MediaWiki reader:
  \ handle unquoted table attributes (#2355).\n\n  * DocBook reader:\n\n    + Added
  proper support for DocBook `xref` elements (Frerich Raabe).\n      Added `dbContent`
  field to reader state, so we can lookup\n      cross refs.\n    + Handle `informalexample`
  (#2319).\n\n  * Docx Reader:\n\n    + Create special punctuation test (Ophir Lifshitz).\n
  \   + Parse soft, no-break hyphen elements (Ophir Lifshitz).\n    + Updated headers
  test (Ophir Lifshitz). Replaced `styles.xml`\n      in `headers.docx` with pandoc's
  current `styles.xml`, which\n      contains styles for Heading 1 through 6. Added
  Heading 4\n      through 7 to the test document. Note that Heading 7 is not\n      parsed
  as a Heading because there is no Heading 7 style.\n\n  * RST reader:  better handling
  of indirect roles.\n    Previously the parser failed on this kind of case\n\n        ..
  role:: indirect(code)\n\n        .. role:: py(indirect)\n           :language: python\n\n
  \       :py:`hi`\n\n    Now it correctly recognizes `:py:` as a code role.\n\n  *
  Org reader:\n\n    + Add auto identifiers if not present on headers\n      (#2354,
  Juliusz Gonera).\n    + Allow verse blocks to contain empty lines (#2402,\n      Albert
  Krewinkel).\n\n  * EPUB reader:  stop mangling external URLs (#2284).\n\n  * RST
  writer:\n\n    + Don't insert `\\ ` when complex expression in matched pairs.\n
  \     E.g. `` [:sup:`3`] `` is okay; you don't need `` [:sup:`3`\\ ] ``.\n    +
  Ensure that `\\ ` is inserted when needed before Cite and Span\n      elements that
  begin with a \"complex\" element (jgm/pandoc-citeproc#157).\n    + Normalize headers
  only in \"standalone\" mode (#2394).\n\n  * Haddock writer: escape `*` and `^` (G.
  Bataille).\n\n  * Markdown writer:\n\n    + In TOC, add links to headers (#829).\n
  \   + Use unicode super/subscripts for digits in plain output\n      (when the `superscripts`
  and `subscripts` extensions are\n      not enabled).\n\n  * Docx writer:\n\n    +
  Moved invalid character stripping to `formattedString`.\n      This avoids an inefficient
  generic traversal (#2356).\n    + Use user data directory for `reference.docx` archive.\n
  \     This allows the test suite to work without installing pandoc first.\n      It
  also brings the docx writer in line with the odt writer.\n    + Tests:  docx writer
  tests now use `../data` for data directory.\n      This allows tests to be run without
  installing first.\n    + Tests: Use real jpg (not empty) for docx tests to avoid
  warning.\n\n  * LaTeX writer:\n\n    + Fixed detection of 'chapters' from template.\n
  \     If a documentclass isn't specified in metadata, but the\n      template has
  a hardwired bookish documentclass, act as if\n      `--chapters` was used.  This
  was the default in earlier\n      versions, but it has been broken for a little
  while.\n    + Correctly recognize book documentclass in metadata (#2395).\n    +
  Set language-related variables automatically, depending\n      on the value of the
  `lang` field, which is now always\n      assumed to be in BCP47 format (Mauro Bieg,
  #1614, #2437).\n    + Add `\\protect` to `\\hyperdef` in inline context.  This way
  we\n      don't get an error when this is used as a moveable argument (#2136).\n
  \   + Support all frame attributes in Beamer.\n    + Percent-encode more special
  characters in URLs (#1640, #2377).\n      The special characters are '<','>','|','\"','{','}','[',']','^',
  '`'.\n\n  * HTML writer:\n\n    + Update KaTeX JS and CSS versions (Emily Eisenberg).\n
  \   + For dzslides, add `role=\"note\"` for speaker notes (#1693).\n    + Percent-encode
  more special characters in URLs (#1640, #2377).\n      The special characters are
  '<','>','|','\"','{','}','[',']','^', '`'.\n    + Render Div with class `section`
  as `<section>` in HTML5.\n\n  * EPUB writer:\n\n    + In TOC, replace literal `<br/>`
  with space (#2105).\n    + With `--webtex`, include image file rather than `data:`
  URI (#2363).\n\n  * Native writer: format Div properly, with blocks separated.\n\n
  \ * Support bidirectional text output with XeLaTeX, ConTeXt and HTML\n    (#2191,
  Mauro Bieg).\n\n  * Reference Docx:\n\n    + Add missing Header 6 style (steel blue)
  (Ophir Lifshitz).\n    + Correct `outlineLvl` for Header styles (Ophir Lifshitz).\n\n
  \ * Templates\n\n    + Beamer:  Add `innertheme`, `outertheme` variables\n      (Guilhem
  Bonnefille, #121). Add space after colon in figure caption.\n      Integrate recent
  font and language updates from LaTeX template;\n      allow use of `mainfont` variable
  for changing the slide text\n      in XeTeX and LuaTeX (Andrew Dunning, #131).\n
  \   + LaTeX:  Add `mainfontoptions`, `sansfontoptions`,\n      `monofontoptions`,
  `mathfontoptions`, `fontfamilyoptions`\n      (Andrew Dunning, #122).  Support handling
  of bidirectional\n      text (Mauro Bieg, #120). Improve reliability of superscripts/subscripts\n
  \     under XeTeX and prevent letters and numbers from appearing on a\n      different
  baseline by removing use of the `realscripts` package\n      (via `xltxtra`).  To
  restore use of OpenType characters for these\n      features under XeTeX or LuaTeX,
  add `\\usepackage{realscripts}` to\n      `header-includes` (Andrew Dunning, #130).
  \ Remove redundant\n      reference to `xunicode` (Andrew Dunning, #130).  Add `fontenc`,\n
  \     `indent`, `subparagraph` variables (Andrew Dunning).\n      Allow use of `hidelinks`
  variable for `hyperref` package (Hugo Roy,\n      #113).  Prevent package clash
  with `tufte-latex` and other classes that\n      include `hyperref` or `color` (Xavier
  Olive, #115).\n    + ConTeXt:  Support handling of bidirectional text (Mauro Bieg,
  #120).\n    + LaTeX and ConTeXt: Use more specific language variables.\n      Instead
  of directly using `lang`, we now use `babel-lang` and\n      `polyglossia-lang`
  and `context-lang`.  These variables are set by\n      the writers to the necessary
  values, based on the `lang` variable\n      (which now always takes a value in BCP47
  format). (Mauro Bieg, #114,\n      #129).\n    + HTML:  Support handling of bidirectional
  text (Mauro Bieg, #120).\n      Move HTML5 shiv after CSS and fix URL (Andrew Dunning).\n
  \     Add dir attribute in html5 (Andrew Dunning).\n    + reveal.js: Add `controls`,
  `progress` variables (Grégoire Pineau, #127).\n      Add `width`, `height` variables
  (Andrew Dunning).  Update template\n      from 3.1 source (Andrew Dunning).  All
  configuration options are now\n      available as variables, but are only be included
  if set (reveal.js\n      uses defaults otherwise).\n    + man: Added comment stating
  that the page is autogenerated by pandoc,\n      giving version.  Added `adjusting`
  and `hyphenate` variables\n      (Alex Vong, #123).\n\n  * epub.css: added selectors
  for nested emphasis (Pablo Rodriguez).\n\n  * MediaBag:  ensure that `/` is always
  used as path separator.\n\n  * `sample.lua`: define `CaptionedImage`, add newline
  at end (#2393).\n\n  * Added `--bash-completion` option.  This generates a bash
  completion\n    script.  To use: `eval \"$(pandoc --bash-completion)\"`.\n\n  *
  Text.Pandoc.Error: Define Typeable and Exception instances\n    for PandocError
  (#2386).\n\n  * Text.Pandoc.Parsing: `toKey`: strip off outer brackets.\n    This
  makes keys with extra space at the beginning and end\n    work:  e.g.\n\n        [foo]:
  bar\n\n        [ foo ]\n\n    will now be a link to bar (it wasn't before).\n\n
  \ * Text.Pandoc: disable `auto_identifiers` for epub.\n    The epub writer inserts
  its own auto identifiers;\n    this is more complex due to splitting into \"chapter\"
  files.\n\n  * Renamed Text.Pandoc.Compat.Locale -> Text.Pandoc.Compat.Time.\n    It
  now reexports Data.Time.\n\n  * Use custom Prelude to avoid compiler warnings.\n\n
  \   + The (non-exported) prelude is in prelude/Prelude.hs.\n    + It exports Monoid
  and Applicative, like base 4.8 prelude,\n      but works with older base versions.\n
  \   + It exports (<>) for mappend.\n    + It hides 'catch' on older base versions.\n\n
  \ * Added a `stack.ymal` and stack install instructions to INSTALL.\n\n  * Clarified
  what is \"out of scope\" in README and CONTRIBUTING.md.\n\n  * Added note to CONTRIBUTING.md
  about ghc versions and travis.\n\n  * Clarify docs on block quotes.  The space after
  `>` is optional (#2346).\n\n  * Removed obsolete reference to default.csl (#2372).\n\n
  \ * List all styles in manual for `--reference-docx` (Chris Black)\n\n  * Don't
  capitalize header links in man page.\n\n  * Added section on repl to CONTRIBUTING.md.\n\n
  \ * README:  Added space after backslash in image example (#2329).\n\n  * Document
  details of citation locator terms (Nick Bart).\n\n  * Fixed some internal links
  in README (#2309).\n\n  * Improve CSL documentation, variables documentations,\n
  \   links, and cross-references in README. (Andrew Dunning)\n\n  * Fix build failure
  with `--flags=-https` (Sergei Trofimovich).\n\n  * Use `newManager` instead of `withManager`
  in recent `http-client`.\n    This avoids a deprecation warning.\n\n  * Allow building
  with latest versions of http-types,\n    HUnit, criterion, syb, aeson.\n\n  * Updated
  benchmark program for new criterion API.\n\n  * Setup.hs: rewrite so as not to use
  process, directory, filepath.\n    Using anything outside base is dangerous, since
  older\n    versions of ghc may link against two different versions.\n\n  * Added
  appveyor (Windows continuous integration) builds.\n\n  * New `.travis.yml`.  Autgenerated
  using `make_travis_yml.hs`.\n    This script has been modified in a few ways, e.g.
  to add `GHCOPTS`.\n    `make .travis.yml` regenerates it based on the tested-with\n
  \   field of the cabal file.\n\npandoc (1.15.0.6)\n\n  * `--self-contained`:  Fixed
  overaggressive CSS minimization (#2301, 2286).\n    Previously `--self-contained`
  wiped out all spaces in CSS,\n    including semantically significant spaces.  This
  was a regression\n    from 1.14.x.\n\n  * Markdown reader: don't allow bare URI
  links or autolinks in link\n    label (#2300).  Added test cases.\n\n  * `Text.Pandoc.Parsing`,
  `uri`: Improved bare autolink detection (#2299).\n    Previously we disallowed `-`
  at the end of an autolink,\n    and disallowed the combination `=-`.  This commit
  liberalizes the\n    rules for allowing punctuation in a bare URI, and adds test
  cases.\n    One potential drawback is that you can no longer put a bare\n    URI
  in em dashes like this:\n    `this uri---http://example.com---is an example.`\n
  \   But in this respect we now match github's treatment of bare URIs.\n\n  * HTML
  writer:  support speaker notes in dzslides.\n    With this change `<div class=\"notes\">`
  and also `<div class=\"notes\"\n    role=\"note\">` will be output if `-t dzslides`
  is used. So we can\n    have speaker notes in dzslides too.  Thanks to maybegeek.\n\n
  \ * Updated dzslides template.\n\n  * Improved documentation of options to print
  system default files (#2298).\n    `--print-default-data-file` and `--print-default-template`.\n\n
  \ * DokuWiki writer: use `$..$` for Math instead of `<math>..</math>`\n    (Tiziano
  Müller).  MathJax seems currently to be the only maintained\n    math rendering
  extension for DokuWiki.\n\n  * `Text.Pandoc.Shared`: Changed `hierarchicalize` so
  it treats references\n    div as top-level header (#2294).  This fixes a bug with
  `--section-divs`,\n    where the final references section added by pandoc-citeproc,
  enclosed in\n    its own div, got nested in the div for the section previous to
  it.\n\n  * Allow vector 0.11.\n\n  * Require cmark > 0.4.\n\npandoc (1.15.0.5)\n\n
  \ * HTML writer: Fixed email javascript obfuscation with `mailto:`\n    URLs (#2280).
  \ This fixes a potential security issue.  Because\n    single quotes weren't being
  escaped in the link portion, a\n    specially crafted email address could allow
  javascript code injection.\n\n  * Markdown/HTML readers:  Avoid parsing partial
  URLs like\n    `<www.pandoc.org/blah#foo>` as HTML tags (#2277).\n\n  * RST reader:
  \ allow inline formatting in definition list field\n    names (Lars-Dominik Braun).\n\n
  \ * PDF:  Make sure `--latex-engine-opt` goes before the filename\n    on the command
  line.  LaTeX needs the argument to come after\n    the options (#1779).\n\n  * CommonMark
  writer: fixed tags used for super/subscript.\n\n  * ConTeXt template:  activate
  hanging indent for definition lists\n    (Mauro Bieg).\n\n  * Make cabal require
  `hsb2hs` >= 0.3.1 if `embed_data_files` specified.\n    This is done by adding `hookedPrograms`
  in `Setup.hs`, which allows us\n    to include `hsb2hs` in Build-Tools in cabal.\n\n
  \ * Improved Windows installer (thanks to nkalvi).\n\n    + When per-machine installation
  is chosen, the system path\n      is updated instead of the user's.\n    + An appropriate
  default is used for per-machine installation\n      directory.\n    + Admin privileges
  are no longer required for a per-user install\n\n  * Travis:  unpack sdist for build
  to catch packaging bugs.\n\n  * Improved documentation on where user templates go
  (#2272).\n\npandoc (1.15.0.4)\n\n  * Added pandoc.1 man page to the repository.
  \ It is no longer\n    built as part of the cabal build process. (This proved too\n
  \   fragile.)  pandoc.1 can be regenerated (`make man/pandoc.1`)\n    when `README`
  is changed.\n\n  * Copying of the man page now respects `--destdir` (#2262).\n\n
  \ * Improved error messages for filters.  User is now informed if\n    the filter
  requires an interpreter that isn't found in the path,\n    or if the filter returns
  an error status.\n\npandoc (1.15.0.3)\n\n  * Ensure target directory is created
  when installing man page.\n\npandoc (1.15.0.2)\n\n  * Added files needed for building
  man page to Extra-Source-Files.\n\npandoc (1.15.0.1)\n\n  * Man page is now built
  and installed as part of the cabal build\n    process. Removed Makefile target for
  man page.\n\npandoc (1.15)\n\n  * Man page changes:\n\n    + Removed `--man1`, `--man5`
  options (breaking change).\n    + Removed `Text.Pandoc.ManPages` module (breaking
  API change).\n    + Makefile target for `man/man1/pandoc.1`.  This uses pandoc to\n
  \     create the man page from README using a custom template and filters.\n    +
  Added `man/` directory with template and filters needed to build\n      man page.\n
  \   + We no longer have two man pages: `pandoc.1` and `pandoc_markdown.5`.\n      Now
  there is just pandoc.1, which has all the content from README.\n      This change
  was needed because of the extensive cross-references\n      between parts of the
  README.\n    + Removed old `data/pandoc.1.template` and\n      `data/pandoc_markdown.5.template`.\n\n
  \ * OpenDocument writer: Do not add a carriage return after a hard\n    line break
  (Michael Chladek).\n\n  * ConTeXt writer:\n\n    + use `\\goto` for internal links.\n
  \   + Added a `%` at end for `\\reference` to avoid spurious space.\n\n  * Ignore
  sandbox on 'make quick'\n\npandoc (1.14.1)\n\n  * Added `--man1` and `--man5` options
  to pandoc, allowing pandoc\n    to generate its own man pages.  Man pages are no
  longer automatically\n    generated in the build process (the process for this was
  too complex\n    and prone to failure, #2190).  The `make-pandoc-man-pages` executable\n
  \   has been removed.  The `man/` directory has been removed, and man page\n    templates
  have been moved to `data/`.  NOTE TO PACKAGERS:  You will no\n    longer find pandoc's
  man pages in `man/`, but you can generate them using\n    `pandoc --man1 > pandoc.1`
  and `pandoc --man5 > pandoc_markdown.5`.\n\n  * Added new unexported module:  `Text.Pandoc.ManPages`.\n\n
  \ * `README` now acts like a data file (even though it isn't in\n    `data/`).  So,
  for example, `pandoc --print-default-data-file README`\n    will produce the README.)
  \ This change was required for the `--man1`\n    and `--man5` options, since the
  man pages are produced from the\n    README, but it may be useful for other purposes
  as well.\n\n  * Allow `reference.docx` and `reference.odt` to be used with\n    `--print-default-data-file`
  and to shadow defaults if placed in\n    the user data directory.  Note that as
  of 1.14, we no longer\n    include these files as data files; instead, we include
  their\n    components.  This change causes pandoc to behave as if it has\n    these
  data files; they are constructed on demand when needed\n    using `getDefaultReferenceDocx`
  and `getDefaultReferenceODT`.\n\n  * Fixed regression in CSS parsing with `--self-contained`
  (#2224).\n    Pandoc 1.14.0.x used css-text to parse the CSS, but its parser\n    silently
  drops big sections of CSS.  This commit replaces the\n    use of css-text with a
  small but principled CSS preprocessor,\n    which removes whitespace and comments
  and replaces `url()` with\n    base 64 data when possible.\n\n  * Use `https://`
  instead of `//` for MathJax and KaTeX CDN URLs (#1920).\n    This will allow math
  to work when pages are being viewed locally.\n\n  * `Text.Pandoc.Options`:  Export
  `plainExtensions`.\n    These are the extensions used in `plain` output.\n\n  *
  LaTeX reader: Don't parse `_` and `^` as sub/superscript outside of\n    math mode;
  treat them as regular inline text.  Normally these will\n    cause an error in LaTeX,
  but there are contexts (e.g. `alltt`\n    environments) where they are allowed.\n\n
  \ * HTML reader:  allow `<body>` to close `<head>`.\n\n  * DocBook reader: support
  `mediaobject`s and `figures` (#2184, Mauro Bieg).\n\n  * RST reader: Fix reference
  names with special characters\n    (Lars-Dominik Braun).\n\n  * Textile writer:
  \ escape `+` and `-` as entities (#2225).\n\n  * DokuWiki writer: Use proper `<code>`
  tags for code blocks (#2213).\n\n  * Plain writer:  don't use symbols for super/subscript
  (#2237).\n    Simplified code by using `plainExtensions`.\n\n  * InDesign writer:
  Properly escape URLs containing more than one\n    colon character (gohai).\n\n
  \ * Docx writer: Make sure we use dist version of `reference.docx`\n    (and not
  the user's version) for certain settings.  Taking some\n    settings values from
  a user-supplied reference.docx can lead to\n    corruption.  This fixes a regression
  from the last release (#2249).\n\n  * `Text.Pandoc.Shared`: exports `getDefaultReferenceDocx`
  and\n    `getDefaultReferenceODT` (API change).  These functions have been\n    removed
  from the Docx and ODT writers.\n\n  * LaTeX template (Xavier Olive):\n    + Added
  `CJKmainfont` and `CJKoptions` variables.\n    + Allow dvipsnames (e.g. `MidnightBlue`)
  for colors (Xavier Olive).\n\n  * Epub templates:  use `author.role`, not `author.type`.\n\n
  \ * Bump cmark version to >= 0.3.4.\n\n  * Improved Windows installer (#2205, thanks
  to nkalvi).\n    Users can now select a per-user or systemwide install, and can
  set\n    the installation path.  At the end of installation, the install location\n
  \   is given.  The install location is also now given in the list of\n    installed
  programs in Control Panel.  Cleaner WiX syntax is used for\n    setting the path.\n\n
  \ * Added `download_stats` target to Makefile.\n\npandoc (1.14.0.4)\n\n  * Added
  missing commonmark template.\n\n  * Improved try pandoc (moved button, show raw
  command).\n\npandoc (1.14.0.3)\n\n  * Allow compilation with syb 0.5.*.\n\n  * Custom
  writer:  fixed some compiler warnings for ghc < 7.10.\n\npandoc (1.14.0.2)\n\n  *
  Allow building with hslua 0.4.\n\npandoc (1.14.0.1)\n\n  * Fixed problem with building
  of `reference.docx` and `reference.odt`\n    when the `embed_data_files` flag is
  used.  Instead of having a phase\n    of the build where `reference.docx` and `reference.odt`
  are created\n    from their constituent data files, we now construct these archives\n
  \   from their constituents when a `docx` or `odt` is built.  The\n    constituent
  files have been moved from `extra-source-files` to\n    `data-files`, and `reference.docx`
  and `reference.odt` have been\n    removed. Users can create their own `reference.docx`
  or\n    `reference.odt` by using pandoc to create a simple `docx` or `odt`.\n    `make-reference-files.hs`
  has been removed, simplifying the build\n    process (#2187)\n\n  * Don't include
  generated man pages in extra-source-files (#2189).\n\n  * Bumped upper bound for
  aeson.\n\n  * ConTeXt writer:  create internal link anchors for Div elements with\n
  \   identifiers.  (This is needed for linked citations to work.)\n\npandoc (1.14)\n\n
  \ [new features]\n\n  * Added `commonmark` as input and output format.\n\n  * Added
  `--verbose` flag for debugging output in PDF production (#1840,\n    #1653).\n\n
  \ * Allow wildcards in `--epub-embed-font` arguments (#1939).\n\n  * Added `--latex-engine-opt`
  option (#969, #1779, Sumit Sahrawat).\n\n  * Added `shortcut_reference_links` extension
  (Konstantin Zudov, #1977).\n    This is enabled by default for those markdown flavors
  that\n    support reading shortcut reference links, namely: `markdown`,\n    `markdown_strict`,
  `markdown_github`, `markdown_php`.\n    If the extension is enabled, the reader
  parses shortcut reference\n    links like `[foo]`, and the writer creates such links
  unless doing\n    so would cause problems.  Users of markdown flavors that support\n
  \   shortcut reference links should not notice a difference in reading\n    markdown,
  but the markdown pandoc produces may differ.\n    If shortcut links are not desired,
  the extension can be disabled\n    in the normal way.\n\n  [behavior changes]\n\n
  \ * `--toc` is now supported for `docx` output (#458, Nikolay Yakimov).\n    A \"dirty\"
  TOC is created at the beginning of document.\n    It can be regenerated after the
  document has been opened.\n\n  * An implicit `--filter pandoc-citeproc` is now triggered
  only when the\n    `--bibliography` option is used, and not when the `bibliography`\n
  \   field in metadata is specified (#1849).\n\n  * Markdown reader:\n\n    + Reference
  links with `implicit_header_references` are no longer\n      case-sensitive (#1606).\n
  \   + Definition lists no longer require indentation for first line (#2087).\n      Previously
  the body of the definition (after the `:` or `~` marker)\n      needed to be in
  column 4.  This commit relaxes that requirement,\n      to better match the behavior
  of PHP Markdown Extra.  So, now\n      this is a valid definition list:\n\n            foo\n
  \           : bar\n    + Resolve a potentially ambiguity with table captions:\n\n
  \           foo\n\n              : bar\n\n              -----\n              table\n
  \             -----\n\n      Is \"bar\" a definition, or the caption for the table?
  \ We'll count\n      it as a caption for the table.\n    + Disallow headerless pipe
  tables (#1996), to conform to GFM and PHP\n      Markdown Extra.  Note:  If you
  have been using headerless pipe tables,\n      this change may cause existing tables
  to break.\n    + Allow pipe tables with header but no body (#2017).\n    + Allow
  a digit as first character of a citation key (Matthias Troffaes).\n      See https://github.com/jgm/pandoc-citeproc/issues/97\n\n
  \ * LaTeX reader:\n\n    + Don't limit includes to `.tex` extension (#1882).\n      If
  the extension is not `.tex`, it must be given explicitly in\n      the `\\input`
  or `\\include`.\n\n  * Docx reader:\n\n    + Allow numbering in the style file.
  \ This allows inherited styles\n      with numbering (lists) (Jesse Rosenthal).\n\n
  \ * Org reader:\n\n    + Support smart punctuation (Craig Bosma).\n    + Drop trees
  with a :noexport: tag (Albert Krewinkel). Trees having a\n      `:noexport:` tag
  set are not exported.  This mirrors org-mode.\n    + Put header tags into empty
  spans (Albert Krewinkel, #2160).\n      Org mode allows headers to be tagged: `*
  Headline  :TAG1:TAG2`.\n      Instead of being interpreted as part of the headline,
  the tags are now\n      put into the attributes of empty spans.  Spans without textual
  content\n      won't be visible by default, but they are detectable by filters.
  \ They\n      can also be styled using CSS when written as HTML.\n    + Generalize
  code block result parsing (Albert Krewinkel).\n      Previously, only code blocks
  were recognized as result blocks;\n      now, any kind of block can be the result.\n\n
  \ * Append newline to the LineBreak in Dokuwiki, HTML, EPUB,\n    LaTeX, MediaWiki,
  OpenDocument, Texinfo writers (#1924, Tim Lin).\n\n  * HTML writer:\n\n    + Add
  \"inline\" or \"display\" class to math spans (#1914).\n      This allows inline
  and display math to be styled differently.\n    + Include raw latex blocks if `--mathjax`
  specified (#1938).\n    + Require highlighting-kate >= 0.5.14 (#1903).\n      This
  ensures that all code blocks will be wrapped in a `div`\n      with class `sourceCode`.
  \ Also, the default highlighting CSS\n      now adds `div.sourceCode { x-overflow:
  auto; }`, which means\n      that code blocks (even with line numbers) will acquire
  a scroll\n      bar on screens too small to display them (e.g. mobile phones).\n
  \     See also jgm/highlighting-kate#65.\n\n  * LaTeX writer:\n\n    + Use a declaration
  for tight lists (Jose Luis Duran, Joseph\n      Harriott). Previously, pandoc hard-coded
  some commands to make\n      tight lists in LaTeX.  Now we use a custom command
  instead,\n      allowing the styling to be changed in a macro in the header.\n      (Note:
  \ existing templates may need to be modified to include\n      the definition of
  this macro.  See the current template.)\n    + Beamer output: if the header introducing
  a slide has the\n      class `fragile`, add the `[fragile]` option to the slide
  (#2119).\n\n  * MediaWiki writer:\n\n    + Use `File:` instead of the deprecated
  `Image:` for images and\n      other media files (Greg Rundlett).\n\n  * DocBook
  writer:\n\n    + Render a `Div (id,_,_) [Para _]` element as a `para` element\n
  \     with an `id` attribute.  This makes links to citations work in\n      DocBook
  with pandoc-citeproc.\n\n  * RST writer:\n\n    + Normalize headings to sequential
  levels (Nikolay Yakimov).\n      This is pretty much required by docutils.\n    +
  Treat headings in block quotes, etc as rubrics (Nikolay Yakimov).\n    + Better
  handling of raw latex inline (#1961).  We use\n      `` :raw-latex:`...` `` and
  add a definition for this role to\n      the template.\n\n  * EPUB writer:\n\n    +
  Remove `linear=no` from cover `itemref` (#1609).\n    + Don't use `sup` element
  for epub footnotes (#1995).\n      Instead, just use an a element with class `footnoteRef`.\n
  \     This allows more styling options, and provides better results\n      in some
  readers (e.g. iBooks, where anything inside the a\n      tag breaks popup footnotes).\n
  \   + Take TOC title from `toc-title` metadata field.\n\n  * Docx writer:\n\n    +
  Implemented `FirstParagraph` style (Jesse Rosenthal).\n      Following the ODT writer,
  we add the `FirstParagraph` style to the\n      first text paragraph following an
  image, blockquote, table, heading,\n      or beginning of document.  This allows
  it to be styled differently.\n      The default is for it to be the same as `Normal`.\n
  \   + Added `BodyText` style (Jesse Rosenthal).\n      We apply a `BodyText` style
  to all unstyled paragraphs. This is,\n      essentially, the same as `Normal`, except
  that since not everything\n      inherits from `BodyText` (the metadata won't, for
  example, or\n      the headers or footnote numbers), we can change the text in the
  body\n      without having to make exceptions for everything.  If we do want to\n
  \     change *everything*, we can still do it through `Normal`.\n    + Altered `Blockquote`
  style slightly (Jesse Rosenthal).\n      Since `BlockQuote` derives from `BodyText`,
  we just want to specify\n      by default that it won't indent, regardless of what
  `BodyText` does.\n      Note that this will not produce any visible difference in
  the default\n      configuration.\n    + Take TOC title from `toc-title` metadata
  field (Nikolay Yakimov).\n    + Added a style to figure images (Nikolay Yakimov).\n
  \     Figures with empty captions use style `Figure`.\n      Figures with nonempty
  captions use style `Figure with Caption`, which\n      is based on `Figure`, and
  additionally has `keepNext` set.\n\n  * ODT writer:\n\n    + Added figure captions
  (Nikolay Yakimov). The following styles are\n      used for figures:\n      `Figure`
  -- for figure with empty caption),\n      `FigureWithCaption` (based on `Figure`)
  -- for figure with caption,\n      `FigureCaption` (based on `Caption`) -- for figure
  captions.\n      Also, `TableCaption` (based on `Caption`) is used for table captions.\n\n
  \ [API changes]\n\n  * New `Text.Pandoc.Error` module with `PandocError` type\n
  \   (Matthew Pickering).\n\n  * All readers now return `Either PandocError Pandoc`
  instead of `Pandoc`\n    (Matthew Pickering).  This allows better handling of errors.\n\n
  \ * Added `Text.Pandoc.Writers.CommonMark`, exporting `writeCommonMark`.\n\n  *
  Added `Text.Pandoc.Readers.CommonMark`, exporting `readCommonMark`.\n\n  * Derive
  `Data` and `Typeable` instances for `MediaBag`, `Extension`,\n    `ReaderOptions`,
  `EPUBVersion`, `CiteMethod`, `ObfuscationMethod`,\n    `HTMLSlideVariant`, `TrackChanges`,
  `WriterOptions` (Shabbaz\n    Youssefi).\n\n  * New `Ext_shortcut_reference_links`
  constructor for `Extension`\n    (Konstantin Zudov).\n\n  [bug fixes]\n\n  * Markdown
  reader:\n\n    + Allow smart `'` after inline math (#1909, Nikolay Yakimov).\n    +
  Check for tex macros after indented code (#1973).\n    + Rewrote `charsInBalancedBrackets`
  for efficiency.\n    + Make sure a closing `</div>` doesn't get included in a\n
  \     definition list item (#2127).\n    + Don't parse bracketed text as citation
  if it might be a link,\n      image, or footnote (Nikolay Yakimov).\n    + Require
  space after key in mmd title block (#2026, Nikolay\n      Yakimov).  Require space
  after key-value delimiter colon in mmd title\n      block.\n    + Require nonempty
  value in mmd title block (Nikolay Yakimov).\n    + Disable all metadata block extensions
  when parsing\n      metadata field values (#2026, Nikolay Yakimov).  Otherwise we\n
  \     could get a mmd title block inside YAML metadata, for example.\n\n  * HTML
  reader:\n\n    + Improve self-closing tag detection in `htmlInBalanced` (#2146).\n
  \   + Handle tables with `<th>` in body rows (#1859, Mauro Bieg).\n    + Fixed `htmlTag`
  (#1820).  If the tag parses as a comment, we check\n      to see if the input starts
  with `<!--`. If not, it's bogus comment\n      mode and we fail `htmlTag`.\n    +
  Handle `base` tag; if it has an `href` value, this is added to\n      all relative
  URLs in links and images.\n\n  * DocBook reader:\n\n    + Look inside \"info\" elements
  for section titles (#1931).\n\n  * Docx reader:\n\n    + Parse images in deprecated
  vml format (Jesse Rosenthal).\n    + Allow sub/superscript verbatims (Jesse Rosenthal).\n
  \     Verbatim usually shuts off all other run styles, but we don't want it\n      to
  shut off sub/superscript.\n\n  * LaTeX reader:\n\n    + Handle `tabular*` environment
  (#1850).\n      Note that the table width is not actually parsed or taken into\n
  \     account, but pandoc no longer chokes on it.\n    + Ignore options in `\\lstinline`
  rather than raising error (#1997).\n    + Add some test cases for simple tables
  (Mathias Schenner).\n    + Handle valign argument in tables (Mathias Schenner) (currently\n
  \     we just ignore this).\n    + Allow non-empty colsep in tables (Mathias Schenner).\n
  \     The `tabular` environment allows non-empty column separators\n      with the
  \"@{...}\" syntax. Previously, pandoc would fail to\n      parse tables if a non-empty
  colsep was present. With this\n      commit, these separators are still ignored,
  but the table gets\n      parsed. A test case is included.\n    + Recognize `\\newpage`
  as a block command.\n    + Allow block content in \\title{} (#2001).\n    + Check
  for block-level newcommand aliases in blockCommand (Nikolay\n      Yakimov).\n    +
  Guard against paragraph starting with inline macro (Nikolay Yakimov).\n    + Properly
  gobble spaces after `\\\\` (#2007).\n\n  * Textile reader:\n\n    +  Handle newlines
  in table cells, and empty cells (#1919).\n\n  * Org reader:\n\n    + Allow image
  links with non-image targets (Hans-Peter Deifel).\n      This matches behavior of
  Org-Mode for links like\n      `[[http://example.com][https://www.haskell.org/static/img/logo.png]]`.\n\n
  \ * Docbook writer:\n\n    + Don't print empty id attributes (thanks to Steve Horne).\n\n
  \ * HTML writer:\n\n    + Fixed list-style-type for numbered example lists.\n      Should
  be \"decimal,\" not \"example\" (#1902).\n    + Do not omit missing `alt` attribute
  on `img` tag (#1131,\n      Konstantin Zudov).\n    + Allow multiple colgroups in
  table (#2122).\n    + In revealjs, ensure that lists in speaker notes don't add
  \"fragment\"\n      classes, which can cause additional keypresses to be needed
  to\n      advance a slide (#1394).\n\n  * LaTeX writer:\n\n    + Don't escape `$`
  in URL (#1913).\n    + Don't use listings in headers (Matthew Pickering, #1963).\n
  \   + Recognize book documentclass if set in metadata (#1971).\n      This sets
  `--chapters` implicitly if the documentclass in metadata\n      is a book documentclass.
  \ Previously this was done only if a book\n      documentclass was set in a variable.\n
  \   + Add a `\\label` in `\\hyperdef` for Div, Span (or links don't work).\n    +
  Make `mainlang` work when `lang` is in metadata (#2174).\n\n  * Texinfo writer:\n\n
  \   + Fix wrapping by using breakable spaces (Tim Lin).\n\n  * RST writer:\n\n    +
  Fixed toc depth in RST writer.  Previously the depth was being\n      rendered as
  a floating point number with a decimal point.\n\n  * Markdown writer:\n\n    + Improved
  escaping (#2086).  `<` should not be escaped as `\\<`, for\n      compatibility
  with original Markdown.  We now escape `<` and `>`\n      with entities.  Also,
  we now backslash-escape square brackets.\n    + Avoid introducing spurious list
  items through wrapping (#1946).\n    + Don't emit span tags if plain or raw HTML
  disabled.\n\n  * MediaWiki writer:\n\n    + Convert spaces to underscores in wikilink
  URL (#1982), like MediaWiki.\n\n  * AsciiDoc writer:\n\n    + Insert some needed
  blank lines (#1860).\n    + Avoid wrapping after list marker (#1858).\n\n  * EPUB
  writer:\n\n    + Properly handle internal links to IDs in spans, divs (#1884).\n
  \   + Use plain writer for metadata dc: fields (#2121).\n      This gives better
  results when we have, e.g. multiple paragraphs.\n      Note that tags aren't allowed
  in these fields.\n    + Properly handle image links without an extension (#1855).\n
  \   + Improved chapter splitting and internal link rewriting (#1887,\n      #2162,
  #2163).  This will ensure that internal links work and\n      that the references
  section produced by pandoc-citeproc is\n      in its own chapter.\n    + Fixed handling
  of svg images (#2183).\n\n  * ICML writer:\n\n    + Better handling of raw blocks
  and inlines (#1951).\n      Previously these were always escaped and printed verbatim.\n
  \     Now they are ignored unless the format is `icml`, in which\n      case they
  are passed through unescaped.\n    + Fixed image URIs in ICML output (gohai).\n\n
  \ * Custom writer:\n\n    + Raise error if loadstring returns an error status.\n
  \   + Raise `PandocLuaException` instead of using 'error'.\n      Eventually we'll
  change the return type so that no exception\n      is involved, but at least this
  can be trapped.\n    + Use UTF-8 aware bytestring conversion.\n    + Set foreign
  encoding to UTF-8 (Nikolay Yakimov, #2101, #1634).\n      Also factored out ByteString,
  since it's only used as an intermediate\n      representation.\n\n  * Docx writer:\n\n
  \   + Copy hyphenation settings from reference.docx (Nikolay Yakimov).\n    + Filter
  out illegal XML characters (#1992, Matthew Pickering).\n    + Added `noProof` to
  docx syntax highlighting `SourceCode` style.\n    + Added footnotes id -1 and 0
  (Jesse Rosenthal).\n      Word uses, by default, footnotes with id -1 and 0 for
  separators. If a\n      user modifies `reference.docx`, they will end up with a
  `settings.xml`\n      file that references these footnotes, but no such footnotes
  in the\n      document. This will produce a corruption error. Here we add these
  to the\n      document and `settings.xml` file, so future modifications won't break\n
  \     the file.\n    + Handle lists correctly inside table cells (Jesse Rosenthal).\n
  \     Previously we didn't transform lists inside table cells.\n    + Set firstRow
  information in tables (Nikolay Yakimov).\n    + Don't replace `SourceCode` style
  in `reference.docx` if it is defined\n      there (Nikolay Yakimov, #1872).  If
  `--no-highlight` specified, remove\n      any `SourceCode` and `*Tok` styles in
  `reference.docx`.\n    + Attempt to match international style names (#1607, Nikolay
  Yakimov).\n    + Set these styles as custom (Nikolay Yakimov): `Author`, `Abstract`,\n
  \     `Compact`, `Image Caption`, `Table Caption`, `Definition Term`,\n      `Definition`,
  `First Paragraph`.\n    + Rename these styles to correspond with Word `Normal.dotm`
  (Nikolay\n      Yakimov): `Block Quote -> Block Text`, `Link -> Hyperlink`,\n      `Footnote
  Ref -> Footnote Reference`.\n    + Added `Caption` style (Nikolay Yakimov).\n    +
  Changed these styles' inheritance (Nikolay Yakimov):\n      `Image Caption <- Caption`,
  `Table Caption <- Caption`.\n    + Remove `SourceCode` style from `reference.docx`
  (#1872).\n      This is added automatically by the docx writer.\n    + Added toc
  heading style to `reference.docx` (Nikolay Yakimov).\n\n  * `Text.Pandoc.PDF`\n\n
  \   + Don't suggest \"Try xelatex\" if xelatex already in use (Mauro Bieg,\n      #1832).\n
  \   + More comprehensible errors on image conversion (#2067).\n      EPS can't be
  supported without shelling out to something like\n      ImageMagick, but at least
  we can avoid mysterious error messages.\n\n  * `Text.Pandoc.Shared`:\n\n    + Make
  safeRead safe (#1801, Matthew Pickering).\n    + Added `mapLeft`, `hush` (Matthew
  Pickering).\n\n  * `Text.Pandoc.Pretty`:\n\n    + Remove partial function (Matthew
  Pickering).\n\n  * `Text.Pandoc.SelfContained`:\n\n    + Add `;charset=utf-8` to
  script mime type if missing (#1842).\n    + Improved building of data URIs (#1940).
  \ Now base64 is used except\n      for `text/*` mime types.\n    + `cssURLs` no
  longer tries to fetch fragment URLs (#2121).\n    + Properly handle data URIs in
  css urls (#2129).\n      Use a proper CSS parser (adds dependency on `text-css`).\n\n
  \ * `Text.Pandoc.UTF8`:\n\n    + Better handling of bare CRs in input files (#2132).\n
  \     Previously we just stripped them out; now we convert\n      other line ending
  styles to LF line endings.\n\n  * `Text.Pandoc.ImageSize`:\n\n    + Fixed some exif
  header parsing bugs (#1834).\n    + Make imageSize return an Either, not a Maybe
  (#1834).\n      Use `runGetOrFail` (with `binary >= 0.7`) to return `Left` on\n
  \     parse failure (rather than `error`).\n    + Improved warnings when image size
  can't be determined.\n    + Removed error landmines (Matthew Pickering).\n\n  *
  Added woff2 to MIME types (Alfred Wechselberger).\n\n  * pandoc:  When a binary
  input format is used, warn that file\n    arguments past the first one are being
  ignored (Matthew Pickering).\n\n  [template changes]\n\n  * LaTeX template:\n\n
  \   + Degrade gracefully if `\\paragraph` not defined.\n    + Include `grffile`
  together with `graphicx` (#2074).\n      This properly handles filenames containing
  spaces and dots.\n    + Redefine `\\paragraph`, `\\subparagraph`...  to behave more\n
  \     like section headers (#1658).\n    + Import hyperref before polyglossia to
  avoid an error with xelatex,\n      \"please load package hyperref before bidi package\"
  (Nick Bart).\n    + Added `toccolor` variable to control link color in toc (Kaixhin).\n\n
  \ * LaTeX, Beamer templates:\n\n    + Provide `\\tightlist`, which is now used by
  the LaTeX writer.\n    + Use polyglossia in beamer (#85).\n    + Use `bibliography`
  instead of `biblio-files`\n      (#1661).  Also use `\\addbibresource` instead of
  `\\bibliography` for\n      biblatex.\n    + Added `setotherlanguages` in polyglossia.
  This uses an `otherlang`\n      variable that is derived from a comma-separated
  list in `lang`;\n      the last language is `mainlang` and the others are `otherlang`.\n\n
  \ * EPUB templates:\n\n    + Use `div`, not `p`, for \"rights\" on title page.\n
  \   + Added header-includes, include-before, include-after (#1987).\n\n  * OpenDocument
  template:\n\n    + Use `text:p` instead of `text:h` for title.\n      Using `text:h`
  causes problems with numbering.  Closes #2059.\n      Thanks to @nkalvi for diagnosing
  this.\n\n  * reveal.js template:\n\n    + Link to non-minified css, js.  The minified
  versions no longer\n      ship with the library.\n    + Correctly include style
  CSS (#1949).\n    + New configurable options options: `center`, `maxScale`, `slideNuber`\n
  \     (Dmitry Smirnov, pandoc-templates#89).\n    + Moved custom CSS after theme.
  \ This allows custom CSS to modify\n      themes, instead of being replaced by them.\n
  \   + Allow `center` to be set to false.\n\n  [under the hood improvements]\n\n
  \ * Removed pre-built `reference.docx` and `reference.odt` (Nikolay\n    Yakimov).
  \ Instead the repository now includes the component text files,\n    and the zipped
  binaries are built from these using a helper\n    program, `make-reference-files`.
  \ This should make maintenance of\n    these components easier going forward.\n\n
  \ * `Text.Pandoc.Parsing`:\n\n    + Added new `<+?>` combinator (Nikolay Yakimov).\n
  \   + Added `stateHeaderKeys` to `ParserState`.\n\n  * `make_deb.sh` fixes:\n\n
  \   + Detect architecture.\n    + Add Installed-Size to debian package control file
  (#1900).\n    + Use `fakeroot` to get permissions right.\n    + Use `mkdir` and
  `cp` instead of `install`.\n    + Set permissions of directories to 755.\n    +
  Install in `/usr` rather than `/usr/local`.\n    + Compress man pages.\n    + Combine
  copyright files for `pandoc`, `pandoc-citeproc`.\n\n  * Added `Text.Pandoc.Compat.Locale`
  and `old-locale` flag\n    to assist with transition to `time` 1.5.\n\n  * Updated
  CONTRIBUTING.md with information about issue tags (Matthew\n    Pickering).\n\n
  \ * Updated travis installs to the new sudo-less syntax (Tim Lin).\n\n  * Updated
  dependency version bounds.\n\n  * EPUB tests:  don't use `joinPath`, which varies
  across platforms.\n    Instead, use a forward-slash to join paths, regardless of
  the\n    platform. This matches the way `MediaBag` now works.\n\n  * Clarify JSON
  input and output in usage message (Caleb McDaniel).\n\n  * Improved INSTALL instructions.\n\n
  \ * Always build man pages.  Removed make-pandoc-man-pages flag.\n\n  * Makefile:
  \ removed man target, now that we generate man pages by default.\n\n  * README:\n\n
  \   + Fixed typos (J. Lewis Muir).\n    + Added documentation on backtick_code_blocks
  (#2135, Nikolay Yakimov).\n    + Added note on in-field markup in biblio databases
  (Nick Bart).\n    + Fixed misleading example of raw HTML block.\n    + Various minor
  formatting and consistency fixes for the program\n      options (Andreas Lööw).\n
  \   + Made definition lists for options all \"loose\" for consistency.\n    + Added
  YAML biblio format to table, and note on `pandoc-citeproc`'s\n      `--bib2json`
  and `--bib2yaml` options (Nick Bart).\n    + Removed obsolete reference to `mods2yaml`
  (Nick Bart).\n    + Added section on syntax highlighting.\n    + Documented `toccolor`
  variable.\n\npandoc (1.13.2.1)\n\n  * Updated to build with ghc 7.10.1.\n\n  * Bumped
  package upper bounds for filepath, blaze-html,\n    blaze-markup.\n\npandoc (1.13.2)\n\n
  \ * TWiki Reader: add new new twiki reader (API change, Alexander Sulfrian).\n\n
  \ * Markdown reader:\n\n    + Better handling of paragraph in div (#1591).\n      Previously
  text that ended a div would be parsed as Plain\n      unless there was a blank line
  before the closing div tag.\n    + Don't treat a citation as a reference link label
  (#1763).\n    + Fix autolinks with following punctuation (#1811).\n      The price
  of this is that autolinked bare URIs can no longer\n      contain `>` characters,
  but this is not a big issue.\n    + Fix `Ext_lists_without_preceding_blankline`
  bug (#1636, Artyom).\n    + Allow `startnum` to work without `fancy_lists`. Formerly\n
  \     `pandoc -f markdown-fancy_lists+startnum` did not work properly.\n\n  * RST
  reader (all Daniel Bergey):\n\n    + Parse quoted literal blocks (#65).  RST quoted
  literal blocks are\n      the same as indented literal blocks (which pandoc already
  supports)\n      except that the quote character is preserved in each line.\n    +
  Parse RST class directives. The class directive accepts one or more\n      class
  names, and creates a Div value with those classes.  If the\n      directive has
  an indented body, the body is parsed as the children of\n      the Div.  If not,
  the first block following the directive is made a\n      child of the Div. This
  differs from the behavior of rst2xml, which\n      does not create a Div element.
  \ Instead, the specified classes are\n      applied to each child of the directive.
  \ However, most Pandoc Block\n      constructors to not take an Attr argument, so
  we can't duplicate this\n      behavior.\n    + Warn about skipped directives.\n
  \   + Literal role now produces Code. Code role should have \"code\" class.\n    +
  Improved support for custom roles\n\n        - Added `sourceCode` to classes for
  `:code:` role, and anything\n          inheriting from it.\n        - Add the name
  of the custom role to classes if the Inline\n          constructor supports Attr.\n
  \       - If the custom role directive does not specify a parent role,\n          inherit
  from the `:span:` role.\n\n      This differs somewhat from the `rst2xml.py` behavior.
  \ If a custom\n      role inherits from another custom role, Pandoc will attach
  both\n      roles' names as classes.  `rst2xml.py` will only use the class of\n
  \     the directly invoked role (though in the case of inheriting from a\n      `:code:`
  role with a `:language:` defined, it will also provide the\n      inherited language
  as a class).\n    + Warn about ignored fields in role directives.\n\n  * LaTeX reader:\n\n
  \   + Parse label after caption into a span instead of\n     inserting an additional
  paragraph of bracketed text (#1747).\n    + Parse math environments as inline when
  possible (#1821).\n    + Better handling of `\\noindent` and `\\greektext` (#1783).\n
  \   + Handle `\\texorpdfstring` more gracefully.\n    + Handle `\\cref` and `\\sep`
  (Wikiwide).\n    + Support `\\smartcite` and `\\Smartcite` from biblatex.\n\n  *
  HTML reader:\n\n    + Retain display type of MathML output (#1719, Matthew Pickering).\n
  \   + Recognise `<br>` tags inside `<pre>` blocks (#1620, Matthew Pickering).\n
  \   + Make `embed` tag either block or inline (#1756).\n\n  * DocBook reader:\n\n
  \   + Handle `keycombo`, `keycap` (#1815).\n    + Get string content in inner tags
  for literal elements (#1816).\n    + Handle `menuchoice` elements better, with a
  `>` between (#1817).\n    + Include `id` on section headers (#1818).\n    + Document/test
  \"type\" as implemented (Brian O'Sullivan).\n    + Add support for calloutlist and
  callout (Brian O'Sullivan).\n      We treat a calloutlist as a bulleted list. This
  works well in practice.\n    + Add support for `classname` (Bryan O'Sullivan).\n\n
  \ * Docx reader:\n\n    + Fix window path for image lookup (Jesse Rosenthal).\n
  \     Don't use os-sensitive \"combine\", since we always want the paths in our\n
  \     zip-archive to use forward-slashes.\n    + Single-item headers in ordered
  lists are headers (Jesse Rosenthal).\n      When users number their headers, Word
  understands that as a single item\n      enumerated list. We make the assumption
  that such a list is, in fact,\n      a header.\n    + Rewrite rewriteLink to work
  with new headers (Jesse Rosenthal).\n      There could be new top-level headers
  after making lists, so we have to\n      rewrite links after that.\n    + Use polyglot
  header list (Jesse Rosenthal).\n      We're just keeping a list of header formats
  that different languages\n      use as their default styles. At the moment, we have
  English, German,\n      Danish, and French. We can continue to add to this.\n      This
  is simpler than parsing the styles file, and perhaps less\n      error-prone, since
  there seems to be some variations, even within a\n      language, of how a style
  file will define headers.\n    + Remove header class properly in other langs (Jesse
  Rosenthal).\n      When we encounter one of the polyglot header styles, we want
  to remove\n      that from the par styles after we convert to a header. To do that,
  we\n      have to keep track of the style name, and remove it appropriately.\n    +
  Account for external link URLs with anchors. Previously, if a URL\n      had an
  anchor, the reader would incorrectly identify it as an\n      internal link and
  return only the anchor as URL. (Caleb McDaniel)\n    + Fix for Issue #1692 (i18n
  styles) (Nikolay Yakimov).\n\n  * Org reader:\n\n    + Added state changing blanklines
  (Jesse Rosenthal).\n      This allows us to emphasize at the beginning of a new
  paragraph (or, in\n      general, after blank lines).\n    + Fixed bug with bulleted
  lists:\n\n        - a\n        - b\n        * c\n\n      was being parsed as a list,
  even though an unindented `*`\n      should make a heading.  See\n      <http://orgmode.org/manual/Plain-lists.html#fn-1>.\n
  \   + Org reader: absolute, relative paths in link (#1741, Albert\n      Krewinkel).
  The org reader was too restrictive when parsing links;\n      some relative links
  and links to files given as absolute paths\n      were not recognized correctly.\n
  \   + Org reader:  allow empty links (jgm/gitit#471, Albert Krewinkel).\n      This
  is important for use in gitit, which uses empty links\n      for wikilinks.\n    +
  Respect indent when parsing Org bullet lists (#1650, Timothy\n      Humphries).
  \ Fixes issue with top-level bullet list parsing.\n    + Fix indent issue for definition
  lists (Timothy Humphries,\n      see #1650, #1698, #1680).\n    + Parse multi-inline
  terms correctly in definition list (#1649,\n      Matthew Pickering).\n    + Fix
  rules for emphasis recognition (Albert Krewinkel).\n      Things like `/hello,/`
  or `/hi'/` were falsy recognized as emphasised\n      strings.  This is wrong, as
  `,` and `'` are forbidden border chars and\n      may not occur on the inner border
  of emphasized text.\n    + Drop COMMENT document trees (Albert Krewinkel).\n      Document
  trees under a header starting with the word `COMMENT` are\n      comment trees and
  should not be exported.  Those trees are dropped\n      silently (#1678).\n    +
  Properly handle links to `file:target` (Albert Krewinkel).\n      Org links like
  `[[file:target][title]]` were not handled correctly,\n      parsing the link target
  verbatim.  The org reader is changed such that\n      the leading `file:` is dropped
  from the link target (see #756, #1812).\n    + Parse LaTeX-style MathML entities
  (#1657, Albert Krewinkel).\n      Org supports special symbols which can be included
  using LaTeX syntax,\n      but are actually MathML entities.  Examples for this
  are\n      `\\nbsp` (non-breaking space), `\\Aacute` (the letter A with accent acute)\n
  \     or `\\copy` (the copyright sign ©)\n\n  * EPUB reader:\n\n    + URI handling
  improvements. Now we outsource most of the work to\n      `fetchItem'`. Also, do
  not include queries in file extensions (#1671).\n\n  * LaTeX writer:\n\n    + Use
  `\\texorpdfstring` for section captions when needed (Vaclav Zeman).\n    + Handle
  consecutive linebreaks (#1733).\n    + Protect graphics in headers (Jesse Rosenthal).\n
  \     Graphics in `\\section`/`\\subsection` etc titles need to be `\\protect`ed.\n
  \   + Put `~` before header in list item text (Jesse Rosenthal).\n      Because
  of the built-in line skip, LaTeX can't handle a section header\n      as the first
  element in a list item.\n    + Avoid using reserved characters as `\\lstinline`
  delimiters (#1595).\n    + Better handling of display math in simple tables (#1754).\n
  \     We convert display math to inline math in simple tables,\n      since LaTeX
  can't deal with display math in simple tables.\n    + Escape spaces in code (#1694,
  Bjorn Buckwalter).\n\n  * MediaWiki writer:\n\n    + Fixed links with URL = text.
  Previously these were rendered as bare\n      words, even if the URL was not an
  absolute URL (#1825).\n\n  * ICML writer:\n\n    + Don't force all citations into
  footnotes.\n\n  * RTF writer:\n\n    + Add blankline at end of output (#1732, Matthew
  Pickering).\n\n  * RST writer:\n\n    + Ensure blank line after figure.\n    + Avoid
  exces whitespace after last list item (#1777).\n    + Wrap line blocks with spaces
  before continuations (#1656).\n    + Fixed double-rendering of footnotes in RST
  tables (#1769).\n\n  * DokuWiki writer:\n\n    + Better handling of block quotes.
  This change ensures that\n      multiple paragraph blockquotes are rendered using
  native `>`\n      rather than as HTML (#1738).\n    + Fix external images (#1739).
  Preface relative links with \":\",\n      absolute URIs without. (Timothy Humphries)\n\n
  \ * HTML writer:\n\n    + Use protocol-relative URL for mathjax.\n    + Put newline
  btw img and caption paragraph.\n    + MathML now outputted with tex annotation (#1635,
  Matthew Pickering).\n    + Add support for KaTeX HTML math (#1626, Matthew Pickering).\n
  \     This adds `KaTeX` to `HTMLMathMethod` (API change).\n    + Don't double render
  when `email-obfuscation=none` (#1625, Matthew\n      Pickering).\n    + Make header
  attributes work outside top level (#1711).\n      Previously they only appeared
  on top level header elements.\n      Now they work e.g. in blockquotes.\n\n  * ODT
  writer:\n\n    + Correctly handle images without extensions (#1729).\n    + Strip
  querystring in ODT write (#1682, Todd Sifleet).\n\n  * FB2 writer:\n\n    + Add
  newline to output.\n\n  * EPUB writer:\n\n    + Don't add `sourceURL` to absolute
  URIs (#1669).\n    + Don't use unsupported `opf:title-type` for epub2.\n    + Include
  \"landmarks\" section in nav document for epub3 (#1757).\n    + Removed playOrder
  from navpoint elements in ncx file (#1760).\n      These aren't required, and they
  make manual modification of epubs\n      difficult.\n    + Extract title even from
  structured title.\n    + Don't include nav node in spine unless `--toc` was requested.\n
  \     Previously we included it in the spine with `linear=\"no\"`, leading\n      to
  odd results in some readers (#1593).\n    + Fixed absolute URI detection (#1672).\n
  \   + Correctly resolve relative URIs (#1671).\n    + Use regular page template
  for `nav.xhtml`, including doctype (#1759).\n\n  * Docx writer:\n\n    + Put docx
  table captions above tables (#1641, Nikolay Yakimov).\n    + Get the page width
  from the reference docx file, and use\n      it to scale images that are too large
  to fit (Grégory Bataille).\n    + Partial fix for #1607 (Nikolay Yakimov). International
  heading styles\n      are inferred based on `<w:name val=\"heading #\">` fallback,
  if there\n      are no en-US \"Heading#\" styles\n    + Look in user data dir for
  archive `reference.docx`.\n    + Renumber header and footer relationships to avoid
  collisions (Jesse\n      Rosenthal). We previously took the old relationship names
  of the\n      headers and footer in secptr. That led to collisions. We now make\n
  \     a map of availabl names in the relationships file, and then rename\n     in
  secptr.\n\n  * ConTeXt writer:\n\n    + Add function toLabel (Mark Szepieniec).\n
  \     This function can be used to sanitize reference labels so that\n      they
  do not contain any of the illegal characters \\#[]\",{}%()|= .\n      Currently
  only Links have their labels sanitized, because they\n      are the only Elements
  that use passed labels.\n\n  * `Text.Pandoc.Shared`:\n\n    + Moved import of `toChunks`
  outside of CPP conditional (#1590).\n    + Fix `inDirectory` to reset to the original
  directory in case\n      an exception occurs (Freiric Barral).\n\n  * Templates:\n\n
  \   + LaTeX template: load polyglossia before bibtex (jgm/pandoc-templates#70).\n
  \     Thanks to bluebirch.\n    + LaTeX template: Added `\\VerbatimFootnotes` if
  there is verbatim in notes\n      (#1616).\n    + LaTeX template:  Add shorthands=off
  to babel options (#1648).\n    + EPUB, EPUB3 templates: Added `id=\"cover\"` to
  body of cover page.\n      This aids styling, making it possible for example to
  set 0 margins\n      on the title page (#1758).\n    + EPUB, EPUB3 templates:  Handle
  structured metadata on titlepage.\n      Previously we just expected 'title', 'subtitle',
  'author', 'date'.\n      Now we still support those, but also support the format
  recommended\n      for epub metadata in the pandoc README:\n\n            ---\n
  \           title:\n            - type: main\n              text: My Book\n            -
  type: subtitle\n              text: An investigation of metadata\n            creator:\n
  \           - role: author\n              text: John Smith\n            - role:
  editor\n              text: Sarah Jones\n            identifier:\n            -
  scheme: DOI\n              text: doi:10.234234.234/33\n            publisher:  My
  Press\n            rights:  (c) 2007 John Smith, CC BY-NC\n            ...\n\n  *
  `Text.Pandoc.Templates.getDefaultTemplate`:\n    don't fail when called with \"fb2\"
  (#1660).\n\n  * `Text.Pandoc.Parsing`:\n\n    + Fixed `inlineMath` so it handles
  `\\text{..}` containing `$`.\n      For example: `$x = \\text{the $n$th root of
  $y$}` (#1677).\n    + Change `parseFromString` to fail if not all input is consumed.\n
  \     (Matthew Pickering)\n    + Moved `addWarning` from Markdown reader to `Parsing`,
  so it can be\n      used by more readers (API change, Daniel Bergey).\n\n  * `Text.Pandoc.Pretty`:\n\n
  \   +  Improve performance of `realLength` (Matthew Pickering).\n    +  Make CR
  + BLANKLINE = BLANKLINE. This fixes an extra blank line we\n       were getting
  at the end of markdown fragments (as well as rst, org,\n       etc.) (#1705).\n\n
  \ * `Text.Pandoc.MIME`:\n\n    + Add mime type for WebVTT (Jason Ronallo).\n    +
  Changed mime type for `otf` to `application/vnd.ms-opentype` (#1761).\n      This
  is needed for epub3 validation.\n\n  * `Text.Pandoc.MediaBag`:\n\n    + Fix Windows
  specific path problems (#1597).\n\n  * `Text.Pandoc.Shared`:\n\n    + Make `collapseFilePath`
  OS-agnostic (Matthew Pickering).\n\n  * Link the test suite using `-threaded`.\n
  \   This allows the test suite to be run using `+RTS -N`.\n\n  * Added `network`
  dependency under `network-uri` flag in test section.\n\n  * Give better error messages
  when someone tries to convert from\n    pdf, doc, odt (#1683).\n\n  * Added `track`
  to list of tags treated by `--self-contained` (#1664).\n\npandoc (1.13.1)\n\n  *
  Fixed `--self-contained` with Windows paths (#1558).\n    Previously `C:\\foo.js`
  was being wrongly interpreted as a URI.\n\n  * HTML reader:  improved handling of
  tags that can be block or inline.\n    Previously a section like this would be enclosed
  in a paragraph,\n    with RawInline for the video tags (since video is a tag that
  can\n    be either block or inline):\n\n        <video controls=\"controls\">\n
  \          <source src=\"../videos/test.mp4\" type=\"video/mp4\" />\n           <source
  src=\"../videos/test.webm\" type=\"video/webm\" />\n           <p>\n              The
  videos can not be played back on your system.<br/>\n              Try viewing on
  Youtube (requires Internet connection):\n              <a href=\"http://youtu.be/etE5urBps_w\">Relative
  Velocity on\n        Youtube</a>.\n           </p>\n        </video>\n\n    This
  change will cause the video and source tags to be parsed\n    as RawBlock instead,
  giving better output.\n    The general change is this:  when we're parsing a \"plain\"
  sequence\n    of inlines, we don't parse anything that COULD be a block-level tag.\n\n
  \ * Docx reader:\n\n    + Be sensitive to user styles.  Note that \"Hyperlink\"
  is\n      \"blacklisted,\" as we don't want the default underline styling to be\n
  \     inherited by all links by default (Jesse Rosenthal).\n    + Read single paragraph
  in table cell as `Plain` (Jesse Rosenthal).\n      This makes to docx reader's native
  output fit with the way the markdown\n      reader understands its markdown output.\n\n
  \ * Textile writer:  Extended the range of cases where native textile\n    tables
  will be used (as opposed to raw HTML):  we now handle any\n    alignment type, but
  only for simple tables with no captions.\n\n  * Txt2Tags reader:\n\n    + Header
  is now parsed only if standalone flag is set (Matthew Pickering).\n    + The header
  is now parsed as meta information. The first line is the\n      `title`, the second
  is the `author` and third line is the `date`\n      (Matthew Pickering).\n    +
  Corrected formatting of `%%mtime` macro (Matthew Pickering).\n    + Fixed crash
  when reading from stdin.\n\n  * EPUB writer:  Don't use page-progression-direction
  in EPUB2, which\n    doesn't support it.  Also, if page-progression-direction not
  specified\n    in metadata, don't include the attribute even in EPUB3; not including
  it\n    is the same as including it with the value \"default\", as we did before.\n
  \   (#1550)\n\n  * Org writer: Accept example lines with indentation at the beginning\n
  \   (Calvin Beck).\n\n  * DokuWiki writer:\n\n    + Refactor to use Reader monad
  (Matthew Pickering).\n    + Avoid using raw HTML in table cells; instead, use `\\\\`\n
  \     instead of newlines (Jesse Rosenthal).\n    + Properly handle HTML table cell
  alignments, and use spacing\n      to make the tables look prettier (#1566).\n\n
  \ * Docx writer:\n\n    + Bibliography entries get `Bibliography` style (#1559).\n
  \   + Implement change tracking (Jesse Rosenthal).\n\n  * LaTeX writer:\n\n    +
  Fixed a bug that caused a table caption to repeat across all pages\n      (Jose
  Luis Duran).\n    + Improved vertical spacing in tables and made it customizable
  using\n      standard lengths set by booktab.  See\n      <https://groups.google.com/forum/#!msg/pandoc-discuss/qMu6_5lYy0o/ZAU7lzAIKw0J>\n
  \     (Jose Luis Duran).\n    + Added `\\strut` to fix spacing in multiline tables
  (Jose Luis Duran).\n    + Use `\\tabularnewline` instead of `\\\\` in table cells
  (Jose Luis Duran).\n    + Made horizontal rules more flexible (Jose Luis Duran).\n\n
  \ * Text.Pandoc.MIME:\n\n    + Added `MimeType` (type synonym for `String`) and
  `getMimeTypeDef`.\n      Code cleanups (Artyom Kazak).\n\n  * Templates:\n\n    +
  LaTeX template: disable microtype protrusion for typewriter font (#1549,\n      thanks
  lemzwerg).\n\n  * Improved OSX build procedure.\n\n  * Added `network-uri` flag,
  to deal with split of `network-uri` from\n    `network`.\n\n  * Fix build dependencies
  for the `trypandoc` flag, so that they are\n    ignored if `trypandoc` flag is set
  to False (Gabor Pali).\n\n  * Updated README to remove outdated claim that `--self-contained`\n
  \   looks in the user data directory for missing files.\n\npandoc (1.13.0.1)\n\n
  \ * Docx writer:\n\n    + Fixed regression which bungled list numbering (#1544),
  causing\n      all lists to appear as basic ordered lists.\n    + Include row width
  in table rows (Christoffer Ackelman, Viktor Kronvall).\n      Added a property to
  all table rows where the sum of column widths\n      is specified in pct (fraction
  of 5000).  This helps persuade Word\n      to lay out the table with the widths
  we specify.\n\n  * Fixed a bug in Windows 8 which caused pandoc not to find the\n
  \   `pandoc-citeproc` filter (#1542).\n\n  * Docx reader: miscellaneous under-the-hood
  improvements (Jesse Rosenthal).\n    Most significantly, the reader now uses Builder,
  leading to some\n    performance improvements.\n\n  * HTML reader:  Parse appropriately
  styled span as SmallCaps.\n\n  * Markdown writer: don't escape `$`, `^`, `~` when
  `tex_math_dollars`,\n    `superscript`, and `subscript` extensions, respectively,
  are\n    deactivated (#1127).\n\n  * Added `trypandoc` flag to build CGI executable
  used in the online\n    demo.\n\n  * Makefile:  Added 'quick', 'osxpkg' targets.\n\n
  \ * Updated README in templates to indicate templates license.\n    The templates
  are dual-licensed, BSD3 and GPL2+.\n\npandoc (1.13)\n\n  [new features]\n\n  * Added
  `docx` as an input format (Jesse Rosenthal).  The docx\n    reader includes conversion
  of native Word equations to pandoc\n    LaTeX `Math` elements.  Metadata is taken
  from paragraphs at the\n    beginning of the document with styles `Author`, `Title`,
  `Subtitle`,\n    `Date`, and `Abstract`.\n\n  * Added `epub` as an input format
  (Matthew Pickering).  The epub\n    reader includes conversion of MathML to pandoc
  LaTeX `Math`\n    elements.\n\n  * Added `t2t` (Txt2Tags) as an input format (Matthew
  Pickering).\n    Txt2tags is a lightweight markup format described at\n    <http://txt2tags.org/>.\n\n
  \ * Added `dokuwiki` as an output format (Clare Macrae).\n\n  * Added `haddock`
  as an output format.\n\n  * Added `--extract-media` option to extract media contained
  in a zip\n    container (docx or epub) while adjusting image paths to point to the\n
  \   extracted images.\n\n  * Added a new markdown extension, `compact_definition_lists`,
  that\n    restores the syntax for definition lists of pandoc 1.12.x, allowing\n
  \   tight definition lists with no blank space between items, and\n    disallowing
  lazy wrapping.  (See below under behavior changes.)\n\n  * Added an extension `epub_html_exts`
  for parsing HTML in EPUBs.\n\n  * Added extensions `native_spans` and `native_divs`
  to activate\n    parsing of material in HTML span or div tags as Pandoc Span\n    inlines
  or Div blocks.\n\n  * `--trace` now works with the Markdown, HTML, Haddock, EPUB,\n
  \   Textile, and MediaWiki readers.  This is an option intended\n    for debugging
  parsing problems; ordinary users should not need\n    to use it.\n\n  [behavior
  changes]\n\n  * Changed behavior of the `markdown_attribute` extension, to bring\n
  \   it in line with PHP markdown extra and multimarkdown.  Setting\n    `markdown=\"1\"`
  on an outer tag affects all contained tags,\n    recursively, until it is reversed
  with `markdown=\"0\"` (#1378).\n\n  * Revised markdown definition list syntax (#1429).
  \ Both the reader\n    and writer are affected.  This change brings pandoc's definition
  list\n    syntax into alignment with that used in PHP markdown extra and\n    multimarkdown
  (with the exception that pandoc is more flexible about\n    the definition markers,
  allowing tildes as well as colons).  Lazily\n    wrapped definitions are now allowed.
  \ Blank space is required\n    between list items.  The space before a definition
  is used to determine\n    whether it is a paragraph or a \"plain\" element.  **WARNING:
  This change\n    may break existing documents!**  Either check your documents for\n
  \   definition lists without blank space between items, or use\n    `markdown+compact_definition_lists`
  for the old behavior.\n\n  * `.numberLines` now works in fenced code blocks even
  if no language\n    is given (#1287, jgm/highlighting-kate#40).\n\n  * Improvements
  to `--filter`:\n\n    + Don't search PATH for a filter with an explicit path.\n
  \     This fixed a bug wherein `--filter ./caps.py` would run `caps.py` from\n      the
  system path, even if there was a `caps.py` in the working directory.\n    + Respect
  shebang if filter is executable (#1389).\n    + Don't print misleading error message.\n
  \     Previously pandoc would say that a filter was not found,\n      even in a
  case where the filter had a syntax error.\n\n  * HTML reader:\n\n    + Parse `div`
  and `span` elements even without `--parse-raw`,\n      provided `native_divs` and
  `native_spans` extensions are set.\n      Motivation:  these now generate native
  pandoc Div and Span\n      elements, not raw HTML.\n    + Parse EPUB-specific elements
  if the `epub_html_exts`\n      extension is enabled.  These include `switch`, `footnote`,\n
  \     `rearnote`, `noteref`.\n\n  * Org reader:\n\n    + Support for inline LaTeX.
  \ Inline LaTeX is now accepted and parsed by the\n      org-mode reader.  Both math
  symbols (like `\\tau`) and LaTeX commands (like\n      `\\cite{Coffee}`), can be
  used without any further escaping (Albert\n      Krewinkel).\n\n  * Textile reader
  and writer:\n\n    + The `raw_tex` extension is no longer set by default.  You can\n
  \     enable it with `textile+raw_tex`.\n\n  * DocBook reader:\n\n    + Support
  `equation`, `informalequation`, `inlineequation` elements with\n      `mml:math`
  content.  This is converted into LaTeX and put into a Pandoc\n      Math inline.\n\n
  \ * Revised `plain` output, largely following the style of Project\n    Gutenberg:\n\n
  \   + Emphasis is rendered with `_underscores_`, strong emphasis\n      with ALL
  CAPS.\n    + Headings are rendered differently, with space to set them off,\n      not
  with setext style underlines. Level 1 headers are ALL CAPS.\n    + Math is rendered
  using unicode when possible, but without the\n      distracting emphasis markers
  around variables.\n    + Footnotes use a regular `[n]` style.\n\n  * Markdown writer:\n\n
  \   + Horizontal rules are now a line across the whole page.\n    + Prettier pipe
  tables.  Columns are now aligned  (#1323).\n    + Respect the `raw_html` extension.
  \ `pandoc -t markdown-raw_html`\n      no longer emits any raw HTML, including span
  and div tags\n      generated by Span and Div elements.\n    + Use span with style
  for `SmallCaps` (#1360).\n\n  * HTML writer:\n\n    + Autolinks now have class `uri`,
  and email autolinks have class\n      `email`, so they can be styled.\n\n  * Docx
  writer:\n\n    + Document formatting is carried over from `reference.docx`.\n      This
  includes margins, page size, page orientation, header,\n      and footer, including
  images in headers and footers.\n    + Include abstract (if present) with `Abstract`
  style (#1451).\n    + Include subtitle (if present) with `Subtitle` style, rather\n
  \     than tacking it on to the title (#1451).\n\n  * Org writer:\n\n    + Write
  empty span elements with an id attribute as org anchors.\n      For example `Span
  (\"uid\",[],[]) []` becomes `<<uid>>`.\n\n  * LaTeX writer:\n\n    + Put table captions
  above tables, to match the conventional\n      standard.  (Previously they appeared
  below tables.)\n    + Use `\\(..\\)` instead of `$..$` for inline math (#1464).\n
  \   + Use `\\nolinkurl` in email autolinks.  This allows them to be styled\n      using
  `\\urlstyle{tt}`.  Thanks to Ulrike Fischer for the solution.\n    + Use `\\textquotesingle`
  for `'` in inline code.  Otherwise we get\n      curly quotes in the PDF output
  (#1364).\n    + Use `\\footnote<.>{..}` for notes in beamer, so that footnotes\n
  \     do not appear before the overlays in which their markers appear\n      (#1525).\n
  \   + Don't produce a `\\label{..}` for a Div or Span element.  Do produce\n      a
  `\\hyperdef{..}` (#1519).\n\n  * EPUB writer:\n\n    + If the metadata includes
  `page-progression-direction` (which can be\n      `ltr` or `rtl`, the `page-progression-direction`
  attribute will\n      be set in the EPUB spine (#1455).\n\n  * Custom lua writers:\n\n
  \   + Custom writers now work with `--template`.\n    + Removed HTML header scaffolding
  from `sample.lua`.\n    + Made citation information available in lua writers.\n\n
  \ * `--normalize` and `Text.Pandoc.Shared.normalize` now consolidate\n    adjacent
  `RawBlock`s when possible.\n\n  [API changes]\n\n  * Added `Text.Pandoc.Readers.Docx`,
  exporting `readDocx` (Jesse Rosenthal).\n\n  * Added `Text.Pandoc.Readers.EPUB`,
  exporting `readEPUB` (Matthew\n    Pickering).\n\n  * Added `Text.Pandoc.Readers.Txt2Tags`,
  exporting `readTxt2Tags` (Matthew\n    Pickering).\n\n  * Added `Text.Pandoc.Writers.DokuWiki`,
  exporting `writeDokuWiki`\n    (Clare Macrae).\n\n  * Added `Text.Pandoc.Writers.Haddock`,
  exporting `writeHaddock`.\n\n  * Added `Text.Pandoc.MediaBag`, exporting `MediaBag`,
  `lookupMedia`,\n    `insertMedia`, `mediaDirectory`, `extractMediaBag`.  The docx
  and epub\n    readers return a pair of a `Pandoc` document and a `MediaBag` with\n
  \   the media resources they contain.  This can be extracted using\n    `--extract-media`.
  \ Writers that incorporate media (PDF, Docx,\n    ODT, EPUB, RTF, or HTML formats
  with `--self-contained`) will look\n    for resources in the `MediaBag` generated
  by the reader, in addition to\n    the file system or web.\n\n  * `Text.Pandoc.Readers.TexMath`:
  Removed deprecated `readTeXMath`.\n    Renamed `readTeXMath'` to `texMathToInlines`.\n\n
  \ * `Text.Pandoc`: Added `Reader` data type (Matthew Pickering).\n    `readers`
  now associates names of readers with `Reader`\n     structures.  This allows inclusion
  of readers, like the docx\n     reader, that take binary rather than textual input.\n\n
  \ * `Text.Pandoc.Shared`:\n\n    + Added `capitalize` (Artyom Kazak), and replaced
  uses of\n      `map toUpper` (which give bad results for many languages).\n    +
  Added `collapseFilePath`, which removes intermediate `.` and\n      `..` from a
  path (Matthew Pickering).\n    + Added `fetchItem'`, which works like `fetchItem`
  but searches\n      a `MediaBag` before looking on the net or file system.\n    +
  Added `withTempDir`.\n    + Added `removeFormatting`.\n    + Added `extractSpaces`
  (from HTML reader) and generalized its type\n      so that it can be used by the
  docx reader (Matthew Pickering).\n    + Added `ordNub`.\n    + Added `normalizeInlines`,
  `normalizeBlocks`.\n    + `normalize` is now `Pandoc -> Pandoc` instead of\n      `Data
  a :: a -> a`.  Some users may need to change their uses of\n      `normalize` to
  the newly exported `normalizeInlines` or\n      `normalizeBlocks`.\n\n  * `Text.Pandoc.Options`:\n\n
  \   + Added `writerMediaBag` to `WriterOptions`.\n    + Removed deprecated and no
  longer used `readerStrict` in\n      `ReaderOptions`.  This is handled by `readerExtensions`
  now.\n    + Added `Ext_compact_definition_lists`.\n    + Added `Ext_epub_html_exts`.\n
  \   + Added `Ext_native_divs` and `Ext_native_spans`.\n      This allows users to
  turn off the default pandoc behavior of\n      parsing contents of div and span
  tags in markdown and HTML\n      as native pandoc Div blocks and Span inlines.\n\n
  \ * `Text.Pandoc.Parsing`:\n\n    + Generalized `readWith` to `readWithM` (Matthew
  Pickering).\n    + Export `runParserT` and `Stream` (Matthew Pickering).\n    +
  Added `HasQuoteContext` type class (Matthew Pickering).\n    + Generalized types
  of `mathInline`, `smartPunctuation`, `quoted`,\n      `singleQuoted`, `doubleQuoted`,
  `failIfInQuoteContext`,\n      `applyMacros` (Matthew Pickering).\n    + Added custom
  `token` (Matthew Pickering).\n    + Added `stateInHtmlBlock` to `ParserState`.  This
  is used to keep\n      track of the ending tag we're waiting for when we're parsing
  inside\n      HTML block tags.\n    + Added `stateMarkdownAttribute` to `ParserState`.
  This is used\n      to keep track of whether the markdown attribute has been set
  in\n      an enclosing tag.\n    + Generalized type of `registerHeader`, using new
  type classes\n      `HasReaderOptions`, `HasIdentifierList`, `HasHeaderMap` (Matthew\n
  \     Pickering).  These allow certain common functions to be reused\n      even
  in parsers that use custom state (instead of `ParserState`),\n      such as the
  MediaWiki reader.\n    + Moved `inlineMath`, `displayMath` from Markdown reader
  to Parsing,\n      and generalized their types (Matthew Pickering).\n\n  * `Text.Pandoc.Pretty`:\n\n
  \   + Added `nestle`.\n    + Added `blanklines`, which guarantees a certain number
  of blank lines\n      (and no more).\n\n  [bug fixes]\n\n  * Markdown reader:\n\n
  \   + Fixed parsing of indented code in list items.  Indented code\n      at the
  beginning of a list item must be indented eight spaces\n      from the margin (or
  edge of the container), or four spaces\n      from the list marker, whichever is
  greater.\n    + Fixed small bug in HTML parsing with `markdown_attribute`, which\n
  \     caused incorrect tag nesting for input like\n      `<aside markdown=\"1\">*hi*</aside>`.\n
  \   + Fixed regression with intraword underscores (#1121).\n    + Improved parsing
  of inline links containing quote characters (#1534).\n    + Slight rewrite of `enclosure`/`emphOrStrong`
  code.\n    + Revamped raw HTML block parsing in markdown (#1330).\n      We no longer
  include trailing spaces and newlines in the\n      raw blocks.  We look for closing
  tags for elements (but without\n      backtracking).  Each block-level tag is its
  own `RawBlock`;\n      we no longer try to consolidate them (though `--normalize`
  will do so).\n    + Combine consecutive latex environments.  This helps when you
  have\n      two minipages which can't have blank lines between them (#690, #1196).\n
  \   + Support smallcaps through span.\n      `<span style=\"font-variant:small-caps;\">foo</span>`
  will be\n      parsed as a `SmallCaps` inline, and will work in all output\n      formats
  that support small caps (#1360).\n    + Prevent spurious line breaks after list
  items (#1137).  When the\n      `hard_line_breaks` option was specified, pandoc
  would formerly\n      produce a spurious line break after a tight list item.\n    +
  Fixed table parsing bug (#1333).\n    + Handle `c++` and `objective-c` as language
  identifiers in\n      github-style fenced blocks (#1318).\n    + Inline math must
  have nonspace before final `$` (#1313).\n\n  * LaTeX reader:\n\n    + Handle comments
  at the end of tables.  This resolves the issue\n      illustrated in <http://stackoverflow.com/questions/24009489>.\n
  \   + Correctly handle table rows with too few cells.  LaTeX seems to\n      treat
  them as if they have empty cells at the end  (#241).\n    + Handle leading/trailing
  spaces in `\\emph` better.\n      `\\emph{ hi }` gets parsed as `[Space, Emph [Str
  \"hi\"], Space]`\n      so that we don't get things like `* hi *` in markdown output.\n
  \     Also applies to `\\textbf` and some other constructions (#1146).\n    + Don't
  assume preamble doesn't contain environments (#1338).\n    + Allow (and discard)
  optional argument for `\\caption` (James Aspnes).\n\n  * HTML reader:\n\n    + Fixed
  major parsing problem with HTML tables.  Table cells were\n      being combined
  into one cell (#1341).\n    + Fixed performance issue with malformed HTML tables.\n
  \     We let a `</table>` tag close an open `<tr>` or `<td>` (#1167).\n    + Allow
  space between `<col>` and `</col>`.\n    + Added `audio` and `source` in `eitherBlockOrInline`.\n
  \   + Moved `video`, `svg`, `progress`, `script`, `noscript`, `svg` from\n      `blockTags`
  to `eitherBlockOrInline`.\n    + `map` and `object` were mistakenly in both lists;
  they have been removed\n      from `blockTags`.\n    + Ignore `DOCTYPE` and `xml`
  declarations.\n\n  * MediaWiki reader:\n\n    + Don't parse backslash escapes inside
  `<source>` (#1445).\n    + Tightened up template parsing.\n      The opening `{{`
  must be followed by an alphanumeric or `:`.\n      This prevents the exponential
  slowdown in #1033.\n    + Support \"Bild\" for images.\n\n  * DocBook reader:\n\n
  \   + Better handle elements inside code environments.  Pandoc's document\n      model
  does not allow structure inside code blocks, but at least this way\n      we preserve
  the text (#1449).\n    + Support `<?asciidoc-br?>` (#1236).\n\n  * Textile reader:\n\n
  \   + Fixed list parsing. Lists can now start without an intervening\n      blank
  line (#1513).\n    + HTML block-level tags that do not start a line are parsed as\n
  \     inline HTML and do not interrupt paragraphs (as in RedCloth).\n\n  * Org reader:\n\n
  \   + Make tildes create inline code (#1345).  Also relabeled `code` and\n      `verbatim`
  parsers to accord with the org-mode manual.\n    + Respect `:exports` header argument
  in code blocks (Craig Bosma).\n    + Fixed tight lists with sublists (#1437).\n\n
  \ * EPUB writer:\n\n    + Avoid excess whitespace in `nav.xhtml`.  This should improve\n
  \     TOC view in iBooks (#1392).\n    + Fixed regression on cover image.\n      In
  1.12.4 and 1.12.4.2, the cover image would not appear properly,\n      because the
  metadata id was not correct.  Now we derive the id from the\n      actual cover
  image filename, which we preserve rather than using\n      \"cover-image.\"\n    +
  Keep newlines between block elements.  This allows\n      easier diff-ability (#1424).\n
  \   + Use `stringify` instead of custom `plainify`.\n    + Use `renderTags'` for
  all tag rendering.  This properly handles tags\n      that should be self-closing.
  \ Previously `<hr/>` would appear in EPUB\n      output as `<hr></hr>` (#1420).\n
  \   + Better handle HTML media tags.\n    + Handle multiple dates with OPF `event`
  attributes.  Note: in EPUB3 we\n      can have only one dc:date, so only the first
  one is used.\n\n  * LaTeX writer:\n\n    + Correctly handle figures in notes.  Notes
  can't contain figures in\n      LaTeX, so we fake it to avoid an error  (#1053).\n
  \   + Fixed strikeout + highlighted code (#1294).\n      Previously strikeout highlighted
  code caused an error.\n\n  * ConTeXt writer:\n\n    + Improved detection of autolinks
  with URLs containing escapes.\n\n  * RTF writer:\n\n    + Improved image embedding:
  `fetchItem'` is now used to get the\n      images, and calculated image sizes are
  indicated in the RTF.\n    + Avoid extra paragraph tags in metadata (#1421).\n\n
  \ * HTML writer:\n\n    + Deactivate \"incremental\" inside slide speaker notes
  (#1394).\n    + Don't include empty items in the table of contents for\n      slide
  shows.  (These would result from creating a slide\n      using a horizontal rule.)\n\n
  \ * MediaWiki writer:\n\n    + Minor renaming of `st` prefixed names.\n\n  * AsciiDoc
  writer:\n\n    + Double up emphasis and strong emphasis markers in intraword\n      contexts,
  as required by asciidoc (#1441).\n\n  * Markdown writer:\n\n    + Avoid wrapping
  that might start a list, blockquote, or header (#1013).\n    + Use Span instead
  of (hackish) `SmallCaps` in `plainify`.\n    + Don't use braced attributes for fenced
  code (#1416).\n      If `Ext_fenced_code_attributes` is not set, the first class\n
  \     attribute will be printed after the opening fence as a bare word.\n    + Separate
  adjacent lists of the same kind with an HTML comment (#1458).\n\n  * PDF writer:\n\n
  \   + Fixed treatment of data uris for images (#1062).\n\n  * Docx writer:\n\n    +
  Use Compact style for empty table cells (#1353).\n      Otherwise we get overly
  tall lines when there are empty\n      table cells and the other cells are compact.\n
  \   + Create overrides per-image for `media/` in reference docx.\n      This should
  be somewhat more robust and cover more types of images.\n    + Improved `entryFromArchive`
  to avoid an unneeded parse.\n    + Section numbering carries over from reference.docx
  (#1305).\n    + Simplified `abstractNumId` numbering.  Instead of sequential numbering,\n
  \     we assign numbers based on the list marker styles.\n\n  * `Text.Pandoc.Options`:\n\n
  \   + Removed `Ext_fenced_code_attributes` from `markdown_github`\n      extensions.\n\n
  \ * `Text.Pandoc.ImageSize`:\n\n    + Use default instead of failing if image size
  not found\n      in exif header (#1358).\n    + ignore unknown exif header tag rather
  than crashing.\n      Some images seem to have tag type of 256, which was causing\n
  \     a runtime error.\n\n  * `Text.Pandoc.Shared`:\n\n    + `fetchItem`:  unescape
  URI encoding before reading local file (#1427).\n    + `fetchItem`:  strip a fragment
  like `?#iefix` from the extension before\n      doing mime lookup, to improve mime
  type guessing.\n    + Improved logic of `fetchItem`:  absolute URIs are fetched
  from the net;\n      other things are treated as relative URIs if `sourceURL` is
  `Just _`,\n      otherwise as file paths on the local file system.\n    + `fetchItem`
  now properly handles links without a protocol (#1477).\n    + `fetchItem` now escapes
  characters not allowed in URIs before trying\n      to parse the URIs.\n    + Fixed
  runtime error with `compactify'DL` on certain lists (#1452).\n\n  * `pandoc.hs`:
  Don't strip path off of `writerSourceURL`: the path is\n    needed to resolve relative
  URLs when we fetch resources (#750).\n\n  * `Text.Pandoc.Parsing`\n\n    + Simplified
  `dash` and `ellipsis` (#1419).\n    + Removed `(>>~)` in favor of the equivalent
  `(<*)` (Matthew Pickering).\n    + Generalized functions to use `ParsecT` (Matthew
  Pickering).\n    + Added `isbn` and `pmid` to list of recognized schemes (Matthew\n
  \     Pickering).\n\n  [template changes]\n\n  * Added haddock template.\n  * EPUB3:
  \ Added `type` attribute to `link` tags.  They are supposed to\n    be \"advisory\"
  in HTML5, but kindlegen seems to require them.\n  * EPUB3:  Put title page in section
  with `epub:type=\"titlepage\"`.\n  * LaTeX: Made `\\subtitle` work properly (#1327).\n
  \ * LaTeX/Beamer: remove conditional around date (#1321).\n  * LaTeX:  Added `lot`
  and `lof` variables, which can be set to\n    get `\\listoftables` and `\\listoffigures`
  (#1407).  Note that\n    these variables can be set at the command line with `-Vlot
  -Vlof`\n    or in YAML metadata.\n\n  [under the hood improvements]\n\n  * Rewrote
  normalize for efficiency (#1385).\n\n  * Rewrote Haddock reader to use `haddock-library`
  (#1346).\n\n    + This brings pandoc's rendering of haddock markup in line\n      with
  the new haddock.\n    + Fixed line breaks in `@` code blocks.\n    + alex and happy
  are no longer build-depends.\n\n  * Added `Text.Pandoc.Compat.Directory` to allow
  building against\n    different versions of the `directory` library.\n\n  + Added
  `Text.Pandoc.Compat.Except` to allow building against\n    different versions of
  `mtl`.\n\n  * Code cleanup in some writers, using Reader monad to avoid\n    passing
  options parameter around (Matej Kollar).\n\n  * Improved readability in `pandoc.hs`.\n\n
  \ * Miscellaneous code cleanups (Artyom Kazak).\n\n  * Avoid `import Prelude hiding
  (catch)` (#1309, thanks to Michael\n    Thompson).\n\n  * Changed `http-conduit`
  flag to `https`.  Depend on `http-client`\n    and `http-client-tls` instead of
  `http-conduit`.  (Note:  pandoc still\n    depends on `conduit` via `yaml`.)\n\n
  \ * Require `highlighting-kate >= 0.5.8.5` (#1271, #1317, Debian #753299).\n    This
  change to highlighting-kate means that PHP fragments no longer need\n    to start
  with `<?php`.  It also fixes a serious bug causing failures with\n    ocaml and
  fsharp.\n\n  * Require latest `texmath`.  This fixes `\\tilde{E}` and allows\n    `\\left`
  to be used with `]`, `)` etc. (#1319), among many other\n    improvements.\n\n  *
  Require latest `zip-archive`.  This has fixes for unicode path names.\n\n  * Added
  tests for plain writer.\n\n  * `Text.Pandoc.Templates`:\n\n    + Fail informatively
  on template syntax errors.\n      With the move from parsec to attoparsec, we lost
  good error\n      reporting.  In fact, since we weren't testing for end of input,\n
  \     malformed templates would fail silently.  Here we revert back to\n      Parsec
  for better error messages.\n    + Use `ordNub` (#1022).\n\n  * Benchmarks:\n\n    +
  Made benchmarks compile again (Artyom Kazak).\n    + Fixed so that the failure of
  one benchmark does not prevent others\n      from running (Artyom Kazak).\n    +
  Use `nfIO` instead of the `getLength` trick to force full evaluation.\n    + Changed
  benchmark to use only the test suite, so that benchmarks\n      run more quickly.\n\n
  \ * Windows build script:\n\n    + Add `-windows` to file name.\n    + Use one install
  command for pandoc, pandoc-citeproc.\n    + Force install of pandoc-citeproc.\n\n
  \ * `make_osx_package`:  Call zip file `pandoc-VERSION-osx.zip`.\n    The zip should
  not be named `SOMETHING.pkg.zip`, or OSX finder\n    will extract it into a folder
  named `SOMETHING.pkg`, which it\n    will interpret as a defective package (#1308).\n\n
  \ * `README`:\n\n    + Made headers for all extensions so they have IDs and can
  be\n      linked to (Beni Cherniavsky-Paskin).\n    + Fixed typos (Phillip Alday).\n
  \   + Fixed documentation of attributes (#1315).\n    + Clarified documentation
  on small caps (#1360).\n    + Better documentation for `fenced_code_attributes`
  extension\n      (Caleb McDaniel).\n    + Documented fact that you can put YAML
  metadata in a separate file\n      (#1412).\n\n\npandoc (1.12.4.2)\n\n  * Require
  highlighting-kate >= 0.5.8.  Fixes a performance regression.\n\n  * Shared:  `addMetaValue`
  now behaves slightly differently:\n    if both the new and old values are lists,
  it concatenates their\n    contents to form a new list.\n\n  * LaTeX reader:\n\n
  \   + Set `bibliography` in metadata from `\\bibliography` or\n      `\\addbibresource`
  command.\n    + Don't error on `%foo` with no trailing newline.\n\n  * Org reader:\n\n
  \   + Support code block headers (`#+BEGIN_SRC ...`) (Albert Krewinkel).\n    +
  Fix parsing of blank lines within blocks (Albert Krewinkel).\n    + Support pandoc
  citation extension (Albert Krewinkel).  This can\n      be turned off by specifying
  `org-citations` as the input format.\n\n  * Markdown reader:\n\n    + `citeKey`
  moved to `Text.Pandoc.Parsing` so it can be used by\n      other readers (Albert
  Krewinkel).\n\n  * `Text.Pandoc.Parsing`:\n\n    + Added `citeKey` (see above).\n
  \   + Added `HasLastStrPosition` type class and `updateLastStrPos`\n      and `notAfterString`
  functions.\n\n  * Updated copyright notices (Albert Krewinkel).\n\n  * Added default.icml
  to data files so it installs with the package.\n\n  * OSX package:\n\n    + The
  binary is now built with options to ensure that it can be\n      used with OSX 10.6+.\n
  \   + Moved OSX package materials to osx directory.\n    + Added OSX package uninstall
  script, included in the zip container\n      (thanks to Daniel T. Staal).\n\npandoc
  (1.12.4)\n\n  * Made it possible to run filters that aren't executable (#1096).\n
  \   Pandoc first tries to find the executable (searching the path\n    if path isn't
  given).  If it fails, but the file exists and has\n    a `.py`, `.pl`, `.rb`, `.hs`,
  or `.php` extension, pandoc runs the filter\n    using the appropriate interpreter.
  \ This should make it easier to\n    use filters on Windows, and make it more convenient
  for everyone.\n\n  * Added Emacs org-mode reader (Albert Krewinkel).\n\n  * Added
  InDesign ICML Writer (Mauro Bieg).\n\n  * MediaWiki reader:\n\n    + Accept image
  links in more languages (Jaime Marquínez Ferrándiz).\n    + Fixed bug in certain
  nested lists (#1213).  If a level 2 list was\n      followed by a level 1 list,
  the first item of the level 1 list\n      would be lost.\n    + Handle table rows
  containing just an HTML comment (#1230).\n\n  * LaTeX reader:\n\n    + Give better
  location information on errors, pointing to line\n      numbers within included
  files (#1274).\n    + LaTeX reader:  Better handling of `table` environment (#1204).\n
  \     Positioning options no longer rendered verbatim.\n    + Better handling of
  figure and table with caption (#1204).\n    + Handle `@{}` and `p{length}` in tabular.
  \ The length is not actually\n      recorded, but at least we get a table (#1180).\n
  \   + Properly handle `\\nocite`.  It now adds a `nocite` metadata\n      field.
  \ Citations there will appear in the bibliography but not\n      in the text (unless
  you explicitly put a `$nocite$` variable\n      in your template).\n\n  * Markdown
  reader:\n\n    + Ensure that whole numbers in YAML metadata are rendered without\n
  \     decimal points.  (This became necessary with changes to aeson\n      and yaml
  libraries.  aeson >= 0.7 and yaml >= 0.8.8.2 are now required.)\n    + Fixed regression
  on line breaks in strict mode (#1203).\n    + Small efficiency improvements.\n    +
  Improved parsing of nested `div`s.  Formerly a closing `div` tag\n      would be
  missed if it came right after other block-level tags.\n    + Avoid backtracking
  when closing `</div>` not found.\n    + Fixed bug in reference link parsing in `markdown_mmd`.\n
  \   + Fixed a bug in list parsing (#1154).  When reading a raw list\n      item,
  we now strip off up to 4 spaces.\n    + Fixed parsing of empty reference link definitions
  (#1186).\n    + Made one-column pipe tables work (#1218).\n\n  * Textile reader:\n\n
  \   + Better support for attributes.  Instead of being ignored, attributes\n      are
  now parsed and included in Span inlines.  The output will be a bit\n      different
  from stock textile: e.g. for `*(foo)hi*`, we'll get\n      `<em><span class=\"foo\">hi</span></em>`
  instead of\n      `<em class=\"foo\">hi</em>`.  But at least the data is not lost.\n
  \   + Improved treatment of HTML spans (%) (#1115).\n    + Improved link parsing.
  \ In particular we now pick up on attributes.\n      Since pandoc links can't have
  attributes, we enclose the whole link in\n      a span if there are attributes (#1008).\n
  \   + Implemented correct parsing rules for inline markup (#1175, Matthew\n      Pickering).\n
  \   + Use Builder (Matthew Pickering).\n    + Fixed list parsing bug (#1500).\n
  \   + Don't allow inline formatting to extend over newlines.\n      This matches
  the behavior of RedCarpet, avoids some ugly bugs,\n      and improves performance.\n\n
  \ * DocBook reader:\n\n    + Better treatment of `formalpara`.  We now emit the
  title (if present)\n      as a separate paragraph with boldface text (#1215).\n
  \   + Set metadata `author` not `authors`.\n    + Added recognition of `authorgroup`
  and `releaseinfo` elements (#1214,\n      Matthew Pickering).\n    + Converted current
  meta information parsing in DocBook to a more\n      extensible version which is
  aware of the more recent meta\n      representation (Matthew Pickering).\n\n  *
  HTML reader:\n\n    + Require tagsoup 0.13.1, to fix a bug with parsing of script
  tags\n      (#1248).\n    + Treat processing instructions & declarations as block.
  \ Previously\n      these were treated as inline, and included in paragraph tags
  in HTML\n      or DocBook output, which is generally not what is wanted (#1233).\n
  \   + Updated `closes` with rules from HTML5 spec.\n    + Use Builder (Matthew Pickering,
  #1162).\n\n  * RST reader:\n\n    + Remove duplicate `http` in PEP links (Albert
  Krewinkel).\n    + Make rst figures true figures (#1168, CasperVector)\n    + Enhanced
  Pandoc's support for rST roles (Merijn Verstaaten).\n      rST parser now supports:
  all built-in rST roles, new role definition,\n      role inheritance, though with
  some limitations.\n    + Use `author` rather than `authors` in metadata.\n    +
  Better handling of directives.  We now correctly handle field\n      lists that
  are indented more than three spaces.  We treat an\n      `aafig` directive as a
  code block with attributes, so it can be\n      processed in a filter (#1212).\n\n
  \ * LaTeX writer:\n\n    + Mark span contents with label if span has an ID (Albert
  Krewinkel).\n    + Made `--toc-depth` work well with books in latex/pdf output (#1210).\n
  \   + Handle line breaks in simple table cells (#1217).\n    + Workaround for level
  4-5 headers in quotes.  These previously produced\n      invalid LaTeX: `\\paragraph`
  or `\\subparagraph` in a `quote` environment.\n      This adds an `mbox{}` in these
  contexts to work around the problem.\n      See <http://tex.stackexchange.com/a/169833/22451>
  (#1221).\n    + Use `\\/` to avoid en-dash ligature instead of `-{}-` (Vaclav Zeman).\n
  \     This is to fix LuaLaTeX output. The `-{}-` sequence does not avoid the\n      ligature
  with LuaLaTeX but `\\/` does.\n    + Fixed string escaping in `hyperref` and `hyperdef`
  (#1130).\n\n  * ConTeXt writer:  Improved autolinks (#1270).\n\n  * DocBook writer:\n\n
  \   + Improve handling of hard line breaks in Docbook writer\n      (Neil Mayhew).
  \ Use a `<literallayout>` for the entire paragraph, not\n      just for the newline
  character.\n    + Don't let line breaks inside footnotes influence the enclosing\n
  \     paragraph (Neil Mayhew).\n    + Distinguish tight and loose lists in DocBook
  output, using\n      `spacing=\"compact\"` (Neil Mayhew, #1250).\n\n  * Docx writer:
  \ When needed files are not present in the user's\n    `reference.docx`, fall back
  on the versions in the `reference.docx`\n    in pandoc's data files. This fixes
  a bug that occurs when a\n    `reference.docx` saved by LibreOffice is used. (#1185)\n\n
  \ * EPUB writer:\n\n    + Include extension in epub ids.  This fixes a problem with
  duplicate\n      extensions for fonts and images with the same base name but different\n
  \     extensions (#1254).\n    + Handle files linked in raw `img` tags (#1170).\n
  \   + Handle media in `audio` source tags (#1170).\n      Note that we now use a
  `media` directory rather than `images`.\n    + Incorporate files linked in `video`
  tags (#1170).  `src` and `poster`\n      will both be incorporated into `content.opf`
  and the epub container.\n\n  * HTML writer:\n\n    + Add colgroup around col tags
  (#877).  Also affects EPUB writer.\n    + Fixed bug with unnumbered section headings.
  \ Unnumbered section\n      headings (with class `unnumbered`) were getting numbers.\n
  \   + Improved detection of image links. Previously image links with\n      queries
  were not recognized, causing `<embed>` to be used instead\n      of `<img>`.\n\n
  \ * Man writer:  Ensure that terms in definition lists aren't line wrapped\n    (#1195).\n\n
  \ * Markdown writer:\n\n    + Use proper escapes to avoid unwanted lists (#980).
  \ Previously we used\n      0-width spaces, an ugly hack.\n    + Use longer backtick
  fences if needed (#1206).  If the content contains a\n      backtick fence and there
  are attributes, make sure longer fences are\n      used to delimit the code.  Note:
  \ This works well in pandoc, but github\n      markdown is more limited, and will
  interpret the first string of three\n      or more backticks as ending the code
  block.\n\n  * RST writer:  Avoid stack overflow with certain tables (#1197).\n\n
  \ * RTF writer:  Fixed table cells containing paragraphs.\n\n  * Custom writer:\n\n
  \   + Correctly handle UTF-8 in custom lua scripts (#1189).\n    + Fix bugs with
  lua scripts with mixed-case filenames and\n      paths containing `+` or `-` (#1267).
  \ Note that `getWriter`\n      in `Text.Pandoc` no longer returns a custom writer
  on input\n      `foo.lua`.\n\n  * AsciiDoc writer:  Handle multiblock and empty
  table cells\n    (#1245, #1246).  Added tests.\n\n  * `Text.Pandoc.Options`: Added
  `readerTrace` to `ReaderOptions`\n\n  * `Text.Pandoc.Shared`:\n\n    + Added `compactify'DL`
  (formerly in markdown reader) (Albert Krewinkel).\n    + Fixed bug in `toRomanNumeral`:
  \ numbers ending with '9' would\n      be rendered as Roman numerals ending with
  'IXIV' (#1249).  Thanks to\n      Jesse Rosenthal.\n    + `openURL`: set proxy with
  value of http_proxy env variable (#1211).\n      Note:  proxies with non-root paths
  are not supported, due to\n      limitations in `http-conduit`.\n\n  * `Text.Pandoc.PDF`:\n\n
  \   + Ensure that temp directories deleted on Windows (#1192).  The PDF is\n      now
  read as a strict bytestring, ensuring that process ownership will\n      be terminated,
  so the temp directory can be deleted.\n    + Use `/` as path separators in a few
  places, even on Windows.\n      This seems to be necessary for texlive (#1151, thanks
  to Tim Lin).\n    + Use `;` for `TEXINPUTS` separator on Windows (#1151).\n    +
  Changes to error reporting, to handle non-UTF8 error output.\n\n  * `Text.Pandoc.Templates`:\n\n
  \   + Removed unneeded datatype context (Merijn Verstraaten).\n\n    + YAML objects
  resolve to \"true\" in conditionals (#1133).\n      Note:  If `address` is a YAML
  object and you just have `$address$`\n      in your template, the word `true` will
  appear, which may be\n      unexpected.  (Previously nothing would appear.)\n\n
  \ * `Text.Pandoc.SelfContained`:\n\n    + `mkSelfContained` now takes just two arguments,
  `WriterOptions` and\n      the string.\n    * It no longer looks in data files.
  \ This only made sense when we\n      had copies of slidy and S5 code there.\n    *
  `fetchItem'` is used instead of the nearly duplicate `getItem`.\n    + Handle `poster`
  attribute in `video` tags (#1188).\n\n  * `Text.Pandoc.Parsing`:\n\n    + Made `F`
  an instance of Applicative (#1138).\n    + Added `stateCaption`.\n    + Added `HasMacros`,
  simplified other typeclasses.\n      Removed `updateHeaderMap`, `setHeaderMap`,
  `getHeaderMap`,\n      `updateIdentifierList`, `setIdentifierList`, `getIdentifierList`.\n
  \   + Changed the smart punctuation parser to return `Inlines`\n      rather than
  `Inline` (Matthew Pickering).\n    + Changed `HasReaderOptions`, `HasHeaderMap`,
  `HasIdentifierList`\n      from typeclasses of monads to typeclasses of states.
  \ This simplifies\n      the instance definitions and provides more flexibility.
  \ Generalized\n      type of `getOption` and added a default definition.  Removed\n
  \     `askReaderOption`.  Added `extractReaderOption`.  Added\n      `extractHeaderMap`
  and `updateHeaderMap` in `HasHeaderMap`.\n      Gave default definitions for `getHeaderMap`,
  `putHeaderMap`,\n      `modifyHeaderMap`.  Added `extractIdentifierList` and\n      `updateIdentifierList`
  in `HasIdentifierList`.  Gave defaults\n      for `getIdentifierList`, `putIdentifierList`,
  and\n      `modifyIdentifierList`.  The ultimate goal here is to allow different\n
  \     parsers to use their own, tailored parser states (instead of\n      `ParserState`)
  while still using shared functions.\n\n  * Template changes:\n\n    + LaTeX template:
  Use `fontenc` package only with `pdflatex` (#1164).\n    + LaTeX template:  Add
  `linestretch` and `fontfamily` variables.\n    + LaTeX template:  Conditionalize
  author and date commands.\n    + Beamer template: Consistent styles for figure and
  table captions\n      (aaronwolen).\n    + LaTeX and beamer template:  Adjust widths
  correctly for oversized\n      images.  Use `\\setkeys{Gin}{}` to set appropriate
  defaults for\n      `\\includegraphics` (Yihui Xie, Garrick Aden-Buie).  Load\n
  \     `upquote` only after `fontenc` (Yihui Xie).\n    + Beamer template: Added
  caption package (#1200).\n    + Beamer template:  changes for better unicode handling
  (KarolS).\n    + DocBook template:  use `authorgroup` if there are authors.\n    +
  revealjs template: Move `include-after` to end (certainlyakey).\n    + revealjs
  template: Fixed PDF print function (#1220, kevinkenan).\n\n  * Bumped version bounds
  of dependencies.\n\n  * Added a `--trace` command line option, for debugging backtracking\n
  \   bugs.  So far this only works with the markdown reader.\n\n  * MathMLinHTML:
  \ Fixed deprecation warning (#362, gwern, Albert Krewinkel).\n\n  * Updated travis
  script to test with multiple GHC versions.\n\n  * Force failure of a Travis build
  if GHC produces warnings (Albert\n    Krewinkel).\n\n  * Add `.editorconfig` (Albert
  Krewinkel).\n    See <http://editorconfig.org/> for details.\n\n  * Give more useful
  error message if '-t pdf' is specified (#1155).\n\n  * Added `Cite`, `SmallCaps`
  to `Arbitrary` instance (#1269).\n\n  * Allow `html4` as a synonym of `html` as
  a reader (it already works\n    as a writer).\n\n  * README:\n\n    + Added an explanation
  of how to use YAML metadata to\n      force items to appear in the bibliography
  without citations in\n      the text (like LaTeX `\\nocite`).\n    + Added note
  to `--bibtex/--natbib`: not for use in making PDF\n      (#1194, thanks to nahoj).\n
  \   + Added explanatory notes about `--natbib` and `--biblatex`.\n    + Added specification
  of legal syntax for citation keys.\n    + Fixed variable defaults documentation
  (Albert Krewinkel).\n\n  * Removed copyright statements for files that have been
  removed\n    (Albert Krewinkel).\n\n  * Moved some doc files from `data-files` to
  `extra-source-files` (#1123).\n    They aren't needed at runtime.  We keep README
  and COPYRIGHT in data\n    to ensure that they'll be available on all systems on
  which pandoc\n    is installed.\n\n  * Use cabal sandboxes in Windows build script.\n\npandoc
  (1.12.3.3)\n\n  * To changes to source; recompiled tarball with latest alex and\n
  \   happy, so they will work with GHC 7.8.\n\npandoc (1.12.3.2)\n\n  * Bumped version
  bounds for blaze-html, blaze-markup.\n\n  * ImageSize:  Avoid use of lookAhead,
  which is not in binary >= 0.6\n    (#1124).\n\n  * Fixed mediawiki ordered list
  parsing (#1122).\n\n  * HTML reader:  Fixed bug reading inline math with `$$` (#225).\n\n
  \ * Added support for LaTeX style literate Haskell code blocks in rST\n    (Merijn
  Verstraaten).\n\npandoc (1.12.3.1)\n\n  * Relaxed version constraint on binary,
  allowing the use of binary 0.5.\n\npandoc (1.12.3)\n\n  * The `--bibliography` option
  now sets the `biblio-files` variable.\n    So, if you're using `--natbib` or `--biblatex`,
  you can just use\n    `--bibliography=foo.bib` instead of `-V bibliofiles=foo`.\n\n
  \ * Don't run pandoc-citeproc filter if `--bibliography` is\n    used together with
  `--natbib` or `--biblatex` (Florian Eitel).\n\n  * Template changes:\n\n    + Updated
  beamer template to include booktabs.\n    + Added `abstract` variable to LaTeX template.\n
  \   + Put `header-includes` after `title` in LaTeX template (#908).\n    + Allow
  use of `\\includegraphics[size]` in beamer.\n      This just required porting a
  macro definition from the default\n      LaTeX template to the default beamer template.\n\n
  \ * `reference.docx`:  Include `FootnoteText` style.\n    Otherwise Word ignores
  the style, even when specified in the `pPr`.\n    (#901)\n\n  * `reference.odt`:
  \ Tidied `styles.xml`.\n\n  * Relaxed version bounds for dependencies.\n\n  * Added
  `withSocketsDo` around http conduit code in `openURL`,\n    so it works on Windows
  (#1080).\n\n  * Added `Cite` function to `sample.lua`.\n\n  * Markdown reader:\n\n
  \   + Fixed regression in title blocks (#1089).\n      If author field was empty,
  date was being ignored.\n    + Allow backslash-newline hard line breaks in grid
  and\n      multiline table cells.\n    + Citation keys may now start with underscores,
  and may contain\n      underscores adjacent to internal punctuation.\n\n  * LaTeX
  reader:\n\n    + Add support for `Verb` macro (jrnold) (#1090).\n    + Support babel-style
  quoting: `` \"`...\"' ``.\n\n  * Properly handle script blocks in strict mode.  (That
  is,\n    `markdown-markdown_in_html_blocks`.) Previously a spurious\n    `<p>` tag
  was being added (#1093).\n\n  * Docbook reader: Avoid failure if `tbody` contains
  no `tr` or `row`\n    elements.\n\n  * LaTeX writer:\n\n    + Factored out function
  for table cell creation.\n    + Better treatment of footnotes in tables.\n      Notes
  now appear in the regular sequence, rather than in the\n      table cell.  (This
  was a regression in 1.10.)\n\n  * HTML reader: Parse name/content pairs from meta
  tags as metadata.\n    Closes #1106.\n\n  * Moved `fixDisplayMath` from Docx writer
  to `Writer.Shared`.\n\n  * OpenDocument writer:  Fixed `RawInline`, `RawBlock` so
  they don't escape.\n\n  * ODT writer:  Use mathml for proper rendering of formulas.\n
  \   Note:  LibreOffice's support for this seems a bit buggy.  But\n    it should
  be better than what we had before.\n\n  * RST writer: Ensure no blank line after
  def in definition list (#992).\n\n  * Markdown writer: Don't use tilde code blocks
  with braced attributes in\n    `markdown_github` output.  A consequence of this
  change is that the\n    backtick form will be preferred in general if both are enabled.
  \ That\n    is good, as it is much more widespread than the tilde form.  (#1084)\n\n
  \ * Docx writer:  Fixed problem with some modified reference docx files.\n    Include
  `word/_rels/settings.xml.rels` if it exists, as well as other\n    `rels` files
  besides the ones pandoc generates explicitly.\n\n  * HTML writer:\n\n    + With
  `--toc`, headers no longer link to themselves (#1081).\n    + Omit footnotes from
  TOC entries.  Otherwise we get doubled\n      footnotes when headers have notes!\n\n
  \ * EPUB writer:\n\n    + Avoid duplicate notes when headings contain notes.\n      This
  arose because the headings are copied into the metadata\n      \"title\" field,
  and the note gets rendered twice.  We strip the\n      note now before putting the
  heading in \"title\".\n    + Strip out footnotes from toc entries.\n    + Fixed
  bug with `--epub-stylesheet`.  Now the contents of\n      `writerEpubStylesheet`
  (set by `--epub-stylesheet`)\n      should again work, and take precedence over
  a stylesheet specified\n      in the metadata.\n\n  * `Text.Pandoc.MIME`: Added
  `wmf`, `emf`.\n\n  * `Text.Pandoc.Shared`:  `fetchItem` now handles image URLs beginning\n
  \   with `//`.\n\n  * `Text.Pandoc.ImageSize`:  Parse EXIF format JPEGs.  Previously\n
  \   we could only get size information for JFIF format, which led\n    to squished
  images in Word documents. Closes #976.\n\n  * Removed old `MarkdownTest_1.0.3` directory
  (#1104).\n\npandoc (1.12.2.1)\n\n  * Markdown reader:  Fixed regression in list
  parser, involving\n    continuation lines containing raw HTML (or even verbatim
  raw HTML).\n\npandoc (1.12.2)\n\n  * Metadata may now be included in YAML blocks
  in a markdown document.\n    For example,\n\n        ---\n        title:\n        -
  type: main\n          text: My Book\n        - type: subtitle\n          text: An
  investigation of metadata\n        creator:\n        - role: author\n          text:
  John Smith\n        - role: editor\n          text: Sarah Jones\n        identifier:\n
  \       - scheme: DOI\n          text: doi:10.234234.234/33\n        publisher:
  \ My Press\n        rights:  (c) 2007 John Smith, CC BY-NC\n        cover-image:
  img/mypic.jpg\n        ...\n\n    Metadata may still be provided using `--epub-metadata`;
  it will\n    be merged with the metadata in YAML blocks.\n\n  * EPUB writer:\n\n
  \   + `meta` tags are now used instead of `opf` attributes for EPUB3.\n    + Insert
  \"svg\" property as needed in opf (EPUB 3).\n    + Simplify `imageTypeOf` using
  `getMimeType`.\n    + Add properties attribute to `cover-image` item for EPUB 3.\n
  \   + Don't include node for `cover.xhtml` if no cover!\n    + Ensure that same
  identifier is used throughout (#1044).\n      If an identifier is given in metadata,
  we use that; otherwise\n      we generate a random uuid.\n    + Add cover reference
  to guide element (EPUB 2) (Shaun Attfield).\n      Fixes an issue with Calibre putting
  the cover at the end of the book\n      if the spine has `linear=\"no\"`.  Apparently
  this is best practice\n      for other converters as well:\n      <http://www.idpf.org/epub/20/spec/OPF_2.0.1_draft.htm#Section2.6>.\n
  \   + Allow `stylesheet` in metadata.  The value is a path to the stylesheet.\n
  \   + Allow partial dates:  `YYYY`, `YYYY-MM`.\n\n  * Markdown writer:  Fix rendering
  of tight sublists (#1050).\n    Previously a spurious blank line was included after
  a tight sublist.\n\n  * ODT writer:  Add `draw:name` attribute to `draw:frame` elements
  (#1069).\n    This is reported to be necessary to avoid an error from recent\n    versions
  of Libre Office when files contain more than one image\n    Thanks to wmanley for
  reporting and diagnosing the problem.\n\n  * ConTeXt writer:  Don't hardcode figure/table
  placement and numbering.\n    Instead, let this be set in the template, using `\\setupfloat`.\n
  \   Thanks to on4aa and Aditya Mahajan for the suggestion (#1067).\n\n  * Implemented
  CSL flipflopping spans in DOCX, LaTeX, and HTML writers.\n\n  * Fixed bug with markdown
  intraword emphasis.  Closes #1066.\n\n  * Docbook writer:  Hierarchicalize block
  content in metadata.\n    Previously headers just disappeared from block-level metadata\n
  \   when it was used in templates.  Now we apply the 'hierarchicalize'\n    transformation.
  \ Note that a block headed by a level-2 header will\n    turn into a `<sect1>` element.\n\n
  \ * OpenDocument writer:  Skip raw HTML (#1035).\n    Previously it was erroneously
  included as verbatim text.\n\n  * HTML/EPUB writer, footnotes:  Put `<sup>` tag
  inside `<a>` tags.\n    This allows better control of formatting, since the `<a>`\n
  \   tags have a distinguishing class (#1049).\n\n  * Docx writer:\n\n    + Use mime
  type info returned by fetchItem.\n    + Fixed core metadata (#1046).\n      Don't
  create empty date nodes if no date given.\n      Don't create multiple `dc:creator`
  nodes; instead separate by\n      semicolons.\n    + Fix URL for core-properties
  in `_rels/.rels` (#1046).\n\n  * Plain writer: don't print `<span>` tags.\n\n  *
  LaTeX writer:\n\n    + Fix definition lists with internal links in terms (#1032).\n
  \     This fix puts braces around a term that contains an internal\n      link,
  to avoid problems with square brackets.\n    + Properly escape pdftitle, pdfauthor
  (#1059).\n    + Use booktabs package for tables (thanks to Jose Luis Duran).\n\n
  \ * Updated beamer template.  Now references should work properly\n    (in a slide)
  when `--biblatex` or `--natbib` is used.\n\n  * LaTeX reader:\n\n    + Parse contents
  of curly quotes or matched `\"` as quotes.\n    + Support `\\textnormal` as span
  with class `nodecor`.\n      This is needed for pandoc-citeproc.\n    + Improved
  citation parsing.  This fixes a run-time error that occurred\n      with `\\citet{}`
  (empty list of keys).  It also ensures that empty keys\n      don't get produced.\n\n
  \ * MediaWiki reader:  Add automatic header identifiers.\n\n  * HTML reader:\n\n
  \   + Use pandoc `Div` and `Span` for raw `<div>`, `<span>` when\n      `--parse-raw`.\n
  \   + Recognize `svg` tags as block level content (thanks to MinRK).\n    + Parse
  LaTeX math if appropriate options are set.\n\n  * Markdown reader:\n\n    + Yaml
  block must start immediately after `---`.  If there's a blank\n      line after
  `---`, we interpreted it as a horizontal rule.\n    + Correctly handle empty bullet
  list items.\n    + Stop parsing \"list lines\" when we hit a block tag.\n      This
  fixes exponential slowdown in certain input, e.g.\n      a series of lists followed
  by `</div>`.\n\n  * Slides:  Preserve `<div class=\"references\">` in references
  slide.\n\n  * `Text.Pandoc.Writer.Shared`:\n\n    + Fixed bug in `tagWithAttrs`.
  \ A space was omitted before key-value\n      attributes, leading to invalid HTML.\n
  \   + `normalizeDate`: Allow dates with year only (thanks to Shaun Attfield).\n
  \   + Fixed bug in `openURL` with `data:` URIs.  Previously the base-64\n      encoded
  bytestring was returned.  We now decode it so it's a proper\n      image!\n\n  *
  DocBook reader:  Handle numerical attributes starting with decimal.\n    Also use
  `safeRead` instead of `read`.\n\n  * `Text.Pandoc.Readers.TexMath`: Export `readTeXMath'`,
  which attends\n    to display/inline.  Deprecate `readTeXMath`, and use `readTeXMath'`\n
  \   in all the writers.  Require `texmath >= 0.6.5.2`.\n\n  * `Text.Pandoc.MIME`:\n\n
  \   + Add entry for `jfif`.\n    + In looking up extensions, drop the encoding info.\n
  \     E.g. for 'image/jpg;base64' we should lookup 'image/jpg'.\n\n  * Templates:
  \ Changed how array variables are resolved.  Previously if\n    `foo` is an array
  (which might be because multiple values were set on\n    the command line), `$foo$`
  would resolve to the concatenation of the\n    elements of foo.  This is rarely
  useful behavior.  It has been changed\n    so that the first value is rendered.
  \ Of course, you can still iterate\n    over the values using `$for(foo)$`.  This
  has the result that you can\n    override earlier settings using `-V` by putting
  new values later on the\n    command line, which is useful for many purposes.\n\n
  \ * `Text.Pandoc`:  Don't default to `pandocExtensions` for all writers.\n\n  *
  Allow \"epub2\" as synonym for \"epub\", \"html4\" for \"html\".\n\n  * Don't look
  for slidy files in data files with `--self-contained`.\n\n  * Allow `https:` command
  line arguments to be downloaded.\n\n  * Fixed `make_osx_package.sh` so data files
  embedded in `pandoc-citeproc`.\n\npandoc (1.12.1)\n\n  * `Text.Pandoc.Definition`:
  \ Changed default JSON serialization format.\n    Instead of `{\"Str\": \"foo\"}`,
  for example, we now have `{\"t\": \"Str\",\n    \"c\": \"foo\"}`.  This new format
  is easier to work with outside of Haskell.\n    Incidentally, \"t\" stands for \"tag\",
  \"c\" for \"contents\".\n\n  * MediaWiki reader: Trim contents of `<math>` tags,
  to avoid problems\n    when converting to markdown (#1027).\n\n  * LaTeX reader:\n\n
  \   + Ensure that preamble doesn't contribute to the text of\n      the document.\n
  \   + Fixed character escaping in \\url{}.  Previously `\\~` wasn't handled\n      properly,
  among others.\n    + Parse `{groups}` as `Span`.  This is needed for accurate conversion
  of\n      bibtex titles, since we need to know what was protected from\n      titlecase
  conversions.\n\n  * LaTeX writer:\n\n    + Specially escape non-ascii characters
  in labels.\n      Otherwise we can get compile errors and other bugs when\n      compiled
  with pdflatex (#1007).  Thanks to begemotv2718 for the fix.\n    + Add link anchors
  for code blocks with identifiers (#1025).\n\n  * Throughout the code, use `isURI`
  instead of `isAbsoluteURI`.\n    It allows fragments identifiers.\n\n  * Slide formats:\n\n
  \   + A Div element with class \"notes\" is treated as speaker\n      notes.  Currently
  beamer goes to `\\note{}`, revealjs to\n      `<aside class=\"notes\">`, and the
  notes are simply suppressed in\n      other formats  (#925).\n    + Fixed `. . .`
  (pause) on HTML slide formats.  Closes #1029.\n      The old version caused a pause
  to be inserted before the first\n      material on a slide. This has been fixed.\n
  \   + Removed data files for s5, slideous, slidy.\n      Users of s5 and slideous
  will have to download the needed\n      files, as has been documented for some time
  in the README.\n      By default, slidy code will be sought on the web, as before.\n\n
  \ * HTML writer: Insert command to typeset mathjax only in slideous output\n    (#966,
  #1012).\n\n  * RST writer:  Skip spaces after display math.  Otherwise we get indentation\n
  \   problems, and part of the next paragraph may be rendered as part of the\n    math.\n\n
  \ * OpenDocument writer:  Fix formatting of strikeout code (#995),\n    thanks to
  wilx.  don't use `font-face-decls` variable.\n\n  * Fixed test suite so it works
  with cabal sandboxes.\n\npandoc (1.12.0.2)\n\n  * Removed `stringable` dependency.\n\npandoc
  (1.12.0.1)\n\n  * Allow `--metadata` to be repeated for the same key to form a list.\n
  \   This also has the effect that `--bibliography` can be repeated,\n    as before.\n\n
  \ * Handle boolean values in `--metadata`.  Note that anything not parseable\n    as
  a YAML boolean or string is treated as a literal string.\n    You can get a string
  value with \"yes\", or any of the strings interpretable\n    as booleans, by quoting
  it:\n\n        -M boolvalue=yes -M stringvalue='\"yes\"'\n\n  * LaTeX writer: Don't
  print references if `--natbib` or `--biblatex`\n    option used.\n\n  * DOCX writer:
  Add `settings.xml` to the zip container.  Fixes a bug\n    in which docx files could
  not be read by some versions of Word\n    and LibreOffice (#990).\n\n  * Fixed a
  regression involving slide shows with bibliographies.\n    The Div container around
  references messed up the procedure for carving\n    a document into slides.  So
  we now remove the surrounding Div in\n    `prepSlides`.\n\n  * More informative
  error message when a filter is not found in path.\n\n  * Depend on pandoc-types
  1.12.1.  This provide `ToJSONFilter`\n    instances for `Data a => a -> [a]` and
  `Data a => a -> IO [a]`.\n\n  * Don't use unicode_collation in building OSX package:\n
  \   it adds something like 50MB of dependencies to the package.\n\n  * Declare alex
  and happy as build-tools (#986).\n\npandoc (1.12)\n\n  [new features]\n\n  * Much
  more flexible metadata, including arbitrary fields and structured\n    values.  Metadata
  can be specified flexibly in pandoc markdown using\n    YAML metadata blocks, which
  may occur anywhere in the document:\n\n        ---\n        title: Here is my title.\n
  \       abstract: |\n          This is the abstract.\n\n          1. It can contain\n
  \         2. block content\n             and *inline markup*\n\n        tags: [cat,
  dog, animal]\n        ...\n\n    Metadata fields automatically populate template
  variables.\n\n  * Added `opml` (OPML) as input and output format.  The `_note` attribute,\n
  \   used in OmniOutliner and supported by multimarkdown, is supported.\n    We treat
  the contents as markdown blocks under a section header.\n\n  * Added `haddock` (Haddock
  markup) as input format (David Lazar).\n\n  * Added `revealjs` output format, for
  reveal.js HTML 5 slide shows.\n    (Thanks to Jamie F. Olson for the initial patch.)\n
  \   Nested vertical stacks are used for hierarchical structure.\n    Results for
  more than one level of nesting may be odd.\n\n  * Custom writers can now be written
  in lua.\n\n        pandoc -t data/sample.lua\n\n    will load the script sample.lua
  and use it as a custom writer.\n    (For a sample, do `pandoc --print-default-data-file
  sample.lua`.)\n    Note that pandoc embeds a lua interpreter, so lua need not be\n
  \   installed separately.\n\n  * New `--filter/-F` option to make it easier to run
  \"filters\"\n    (Pandoc AST transformations that operate on JSON serializations).\n
  \   Filters are always passed the name of the output format, so their\n    behavior
  can be tailored to it.  The repository\n    <https://github.com/jgm/pandocfilters>
  contains\n    a python module for writing pandoc filters in python, with\n    a
  number of examples.\n\n  * Added `--metadata/-M` option.\n    This is like `--variable/-V`,
  but actually adds to metadata, not\n    just variables.\n\n  * Added `--print-default-data-file`
  option, which allows printing\n    of any of pandoc's data files. (For example,\n
  \   `pandoc --print-default-data-file reference.odt` will print\n    `reference.odt`.)\n\n
  \ * Added syntax for \"pauses\" in slide shows:\n\n        This gives\n\n        .
  . .\n\n        me pause.\n\n  * New markdown extensions:\n\n    + `ignore_line_breaks`:
  \ causes intra-paragraph line breaks to be ignored,\n      rather than being treated
  as hard line breaks or spaces.  This is useful\n      for some East Asian languages,
  where spaces aren't used between words,\n      but text is separated into lines
  for readability.\n    + `yaml_metadata_block`:  Parse YAML metadata blocks.  (Default.)\n
  \   + `ascii_identifiers`: This will force `auto_identifiers` to use ASCII\n       only.
  (Default for `markdown_github`.) (#807)\n    + `lists_without_preceding_blankline`:
  \ Allow lists to start without\n      preceding blank space.  (Default for `markdown_github`.)
  (#972)\n\n  [behavior changes]\n\n  * `--toc-level` no longer implies `--toc`.\n
  \   Reason: EPUB users who don't want a visible TOC may still want\n    to set the
  TOC level for in the book navigation.\n\n  * `--help` now prints in and out formats
  in alphabetical order, and\n    says something about PDF output (#720).\n\n  * `--self-contained`
  now returns less verbose output (telling you\n    which URLs it is fetching, but
  not giving the full header).  In\n    addition, there are better error messages
  when fetching a URL fails.\n\n  * Citation support is no longer baked in to core
  pandoc. Users who\n    need citations will need to install and use a separate filter\n
  \   (`--filter pandoc-citeproc`).  This filter will take `bibliography`,\n    `csl`,
  and `citation-abbreviations` from the metadata, though it\n    may still be specified
  on the command line as before.\n\n  * A `Cite` element is now created in parsing
  markdown whether or not\n    there is a matching reference.\n\n  * The `pandoc-citeproc`
  script will put the bibliography at the\n    end of the document, as before.  However,
  it will be put inside a `Div`\n    element with class \"references\", allowing users
  some control\n    over the styling of references.  A final header, if any, will\n
  \   be included in the `Div`.\n\n  * The markdown writer will not print a bibliography
  if the\n    `citations` extension is enabled.  (If the citations are formatted\n
  \   as markdown citations, it is redundant to have a bibliography,\n    since one
  will be generated automatically.)\n\n  * Previously we used to store the directory
  of the first input file,\n    even if it was local, and used this as a base directory
  for finding\n    images in ODT, EPUB, Docx, and PDF.  This has been confusing to
  many\n    users.  So we now look for images relative to the current\n    working
  directory, even if the first file argument is in another\n    directory.   Note
  that this change may break some existing workflows.\n    If you have been assuming
  that relative links will be interpreted\n    relative to the directory of the first
  file argument, you'll need\n    to make that the current directory before running
  pandoc. (#942)\n\n  * Better error reporting in some readers, due to changes in
  `readWith`:\n    the line in which the error occurred is printed, with a caret pointing\n
  \   to the column.\n\n  * All slide formats now support incremental slide view for
  definition lists.\n\n  * Parse `\\(..\\)` and `\\[..\\]` as math in MediaWiki reader.\n
  \   Parse `:<math>...</math>` as display math.  These notations are used with\n
  \   the MathJax MediaWiki extension.\n\n  * All writers: template variables are
  set automatically from metadata\n    fields.  However, variables specified on the
  command line with\n    `--variable` will completely shadow metadata fields.\n\n
  \ * If `--variable` is used to set many variables with the same name,\n    a list
  is created.\n\n  * Man writer:  The `title`, `section`, `header`, and `footer` can
  now\n    all be set individually in metadata.  The `description` variable has been\n
  \   removed.  Quotes have been added so that spaces are allowed in the\n    title.
  \ If you have a title that begins\n\n        COMMAND(1) footer here | header here\n\n
  \   pandoc will still parse it into a title, section, header, and\n    footer.  But
  you can also specify these elements explicitly (#885).\n\n  * Markdown reader\n\n
  \   + Added support for YAML metadata blocks, which can come anywhere\n      in
  the document (not just at the beginning).  A document can contain\n      multiple
  YAML metadata blocks.\n    + HTML span and div tags are parsed as pandoc Span and
  Div elements.\n\n  * Markdown writer\n\n    + Allow simple tables to be printed
  as grid tables,\n      if other table options are disabled.  This means you can
  do\n      `pandoc -t markdown-pipe_tables-simple_tables-multiline_tables`\n      and
  all tables will render as grid tables.\n    + Support YAML title block (render fields
  in alphabetical order\n      to make output predictable).\n\n  [API changes]\n\n
  \ * `Meta` in `Text.Pandoc.Definition` has been changed to allow\n    structured
  metadata.  (Note:  existing code that pattern-matches\n    on `Meta` will have to
  be revised.)  Metadata can now contain\n    indefinitely many fields, with content
  that can be a string,\n    a Boolean, a list of `Inline` elements, a list of `Block`\n
  \   elements, or a map or list of these.\n\n  * A new generic block container (`Div`)
  has been added to `Block`,\n    and a generic inline container (`Span`) has been
  added to `Inline`.\n    These can take attributes.  They will render in HTML, Textile,\n
  \   MediaWiki, Org, RST and and Markdown (with `markdown_in_html`\n    extension)
  as HTML `<div>` and `<span>` elements; in other formats\n    they will simply pass
  through their contents.  But they can be\n    targeted by scripts.\n\n  * `Format`
  is now a newtype, not an alias for String.\n    Equality comparisons are case-insensitive.\n\n
  \ * Added `Text.Pandoc.Walk`, which exports hand-written tree-walking\n    functions
  that are much faster than the SYB functions from\n    `Text.Pandoc.Generic`.  These
  functions are now used where possible\n    in pandoc's code.  (`Tests.Walk` verifies
  that `walk` and `query`\n    match the generic traversals `bottomUp` and `queryWith`.)\n\n
  \ * Added `Text.Pandoc.JSON`, which provides `ToJSON` and `FromJSON`\n    instances
  for the basic pandoc types. They use GHC generics and\n    should be faster than
  the old JSON serialization using\n    `Data.Aeson.Generic`.\n\n  * Added `Text.Pandoc.Process`,
  exporting `pipeProcess`.\n    This is a souped-up version of `readProcessWithErrorcode`
  that\n    uses lazy bytestrings instead of strings and allows setting\n    environment
  variables.  (Used in `Text.Pandoc.PDF`.)\n\n  * New module `Text.Pandoc.Readers.OPML`.\n\n
  \ * New module `Text.Pandoc.Writers.OPML`.\n\n  * New module `Text.Pandoc.Readers.Haddock`
  (David Lazar).\n    This is based on Haddock's own lexer/parser.\n\n  * New module
  `Text.Pandoc.Writers.Custom`.\n\n  * In `Text.Pandoc.Shared`, `openURL` and `fetchItem`
  now return an\n    Either, for better error handling.\n\n  * Made `stringify` polymorphic
  in `Text.Pandoc.Shared`.\n\n  * Removed `stripTags` from `Text.Pandoc.XML`.\n\n
  \ * `Text.Pandoc.Templates`:\n\n    + Simplified `Template` type to a newtype.\n
  \   + Removed `Empty`.\n    + Changed type of `renderTemplate`: it now takes a JSON
  context\n      and a compiled template.\n    + Export `compileTemplate`.\n    +
  Export `renderTemplate'` that takes a string instead of a compiled\n      template.\n
  \   + Export `varListToJSON`.\n\n  * `Text.Pandoc.PDF` exports `makePDF` instead
  of `tex2pdf`.\n    The signature of `makePDF` has changed and now contains\n    an
  additional argument for pdf engine options.\n\n  * `Text.Pandoc`:\n\n    + Made
  `toJsonFilter` an alias for `toJSONFilter` from `Text.Pandoc.JSON`.\n    + Removed
  `ToJsonFilter` typeclass.  `ToJSONFilter` from\n      `Text.Pandoc.JSON` should
  be used instead.  (Compiling against\n      pandoc-types instead of pandoc will
  also produce smaller executables.)\n    * Removed the deprecated `jsonFilter` function.\n
  \   + Added `readJSON`, `writeJSON` to the API (#817).\n\n  * `Text.Pandoc.Options`:\n\n
  \   + Added `Ext_lists_without_preceding_blankline`,\n      `Ext_ascii_identifiers`,
  `Ext_ignore_line_breaks`,\n      `Ext_yaml_metadataBlock` to `Extension`.\n    +
  Changed `writerSourceDirectory` to `writerSourceURL` and changed the\n      type
  to a `Maybe`.  `writerSourceURL` is set to 'Just url' when the\n      first command-line
  argument is an absolute URL.  (So, relative links\n      will be resolved in relation
  to the first page.)  Otherwise, 'Nothing'.\n    + All bibliography-related fields
  have been removed from\n      `ReaderOptions` and `WriterOptions`: `writerBiblioFiles`,\n
  \     `readerReferences`, `readerCitationStyle`.\n    + Removed `writerPdfArgs`
  from `WriterOptions`.  These are now\n      passed in as a parameter to `makePDF`.\n\n
  \ * The `Text.Pandoc.Biblio` module has been removed.  Users of the\n    pandoc
  library who want citation support will need to use\n    `Text.CSL.Pandoc` from `pandoc-citeproc`.\n\n\n
  \ [bug fixes]\n\n  * In markdown, don't autolink a bare URI that is followed by
  `</a>`\n    (#937).\n\n  * `Text.Pandoc.Shared`\n\n    + `openURL` now follows redirects
  (#701), properly handles `data:`\n      URIs, and prints diagnostic output to stderr
  rather than stdout.\n    + `readDefaultDataFile`: normalize the paths.  This fixes
  bugs in\n      `--self-contained` on pandoc compiled with `embed_data_files` (#833).\n
  \   + Fixed `readDefaultDataFile` so it works on Windows.\n    + Better error messages
  for `readDefaultDataFile`.  Instead of\n      listing the last path tried, which
  can confuse people who are\n      using `--self-contained`, so now we just list
  the data file name.\n    + URL-escape pipe characters.  Even though these are legal,
  `Network.URI`\n      doesn't regard them as legal in URLs.  So we escape them first
  (#535).\n\n  * Mathjax in HTML slide shows:  include explicit \"Typeset\" call.\n
  \   This seems to be needed for some formats (e.g. slideous) and won't\n    hurt
  in others (#966).\n\n  * `Text.Pandoc.PDF`\n\n    + On Windows, create temdir in
  working directory, since the system\n      temp directory path may contain tildes,
  which can cause\n      problems in LaTeX (#777).\n    + Put temporary output directory
  in `TEXINPUTS` (see #917).\n    + `makePDF` tries to download images that are not
  found locally,\n      if the first argument is a URL (#917).\n    + If compiling
  with `pdflatex` yields an encoding error, offer\n      the suggestion to use `--latex-engine=xelatex`.\n\n
  \ * Produce automatic header identifiers in parsing textile, RST,\n    and LaTeX,
  unless `auto_identifiers` extension is disabled (#967).\n\n  * `Text.Pandoc.SelfContained`:
  \ Strip off fragment, query of relative URL\n     before treating as a filename.
  \ This fixes `--self-contained` when used\n     with CSS files that include web
  fonts using the method described here:\n      <http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/>\n
  \     (#739).  Handle `src` in `embed`, `audio`, `source`, `input` tags.\n\n  *
  `Text.Pandoc.Parsing`: `uri` parser no longer treats punctuation before\n    percent-encoding,
  or a `+` character, as final punctuation.\n\n  * `Text.Pandoc.ImageSize`:  Handle
  EPS (#903).  This change will make\n    EPS images properly sized on conversion
  to Word.\n\n  * Slidy:  Use slidy.js rather than slidy.js.gz.\n    Reason:  some
  browsers have trouble with the gzipped js file,\n    at least on the local file
  system (#795).\n\n  * Markdown reader\n\n    + Properly handle blank line at beginning
  of input (#882).\n    + Fixed bug in unmatched reference links.  The input\n      `[*infile*]
  [*outfile*]` was getting improperly parsed:\n      \"infile\" was emphasized, but
  \"*outfile*\" was literal (#883).\n    + Allow internal `+` in citation identifiers
  (#856).\n    + Allow `.` or `)` after `#` in ATX headers if no `fancy_lists`.\n
  \   + Do not generate blank title, author, or date metadata elements.\n      Leave
  these out entirely if they aren't present.\n    + Allow backtick code blocks not
  to be preceded by blank line (#975).\n\n  * Textile reader:\n\n    + Correctly handle
  entities.\n    + Improved handling of `<pre>` blocks (#927). Remove internal HTML
  tags\n      in code blocks, rather than printing them verbatim. Parse attributes\n
  \     on `<pre>` tag for code blocks.\n\n  * HTML reader: Handle non-simple tables
  (#893).  Column widths are read from\n    `col` tags if present, otherwise divided
  equally.\n\n  * LaTeX reader\n\n    + Support alltt environment (#892).\n    + Support
  `\\textasciitilde`, `\\textasciicircum` (#810).\n    + Treat `\\textsl` as emphasized
  text reader (#850).\n    + Skip positional options after `\\begin{figure}`.\n    +
  Support `\\v{}` for hacek (#926).\n    + Don't add spurious \", \" to citation suffixes.\n
  \     This is added when needed in pandoc-citeproc.\n    + Allow spaces in alignment
  spec in tables, e.g. `{ l r c }`.\n    + Improved support for accented characters
  (thanks to Scott Morrison).\n    + Parse label after section command and set id
  (#951).\n\n  * RST reader:\n\n    + Don't insert paragraphs where docutils doesn't.\n
  \     `rst2html` doesn't add `<p>` tags to list items (even when they are\n      separated
  by blank lines) unless there are multiple paragraphs in the\n      list.  This commit
  changes the RST reader to conform more closely to\n      what docutils does (#880).\n
  \   + Improved metadata.  Treat initial field list as metadata when\n      standalone
  specified.  Previously ALL fields \"title\", \"author\",\n      \"date\" in field
  lists were treated as metadata, even if not at\n      the beginning.  Use `subtitle`
  metadata field for subtitle.\n    + Fixed 'authors' metadata parsing in reST.  Semicolons
  separate\n      different authors.\n\n  * MediaWiki reader\n\n    + Allow space
  before table rows.\n    + Fixed regression for `<ref>URL</ref>`.\n      `<` is no
  longer allowed in URLs, according to the uri parser\n      in `Text.Pandoc.Parsing`.
  \ Added a test case.\n    + Correctly handle indented preformatted text without
  preceding\n      or following blank line.\n    + Fixed `|` links inside table cells.
  \ Improved attribute parsing.\n    + Skip attributes on table rows.  Previously
  we just crashed if\n      rows had attributes, now we ignore them.\n    + Ignore
  attributes on headers.\n    + Allow `Image:` for images (#971).\n    + Parse an
  image with caption in a paragraph by itself as a figure.\n\n  * LaTeX writer\n\n
  \   + Don't use ligatures in escaping inline code.\n    + Fixed footnote numbers
  in LaTeX/PDF tables.  This fixes a bug\n      wherein notes were numbered incorrectly
  in tables (#827).\n    + Always create labels for sections.  Previously the labels
  were only\n      created when there were links to the section in the document (#871).\n
  \   + Stop escaping `|` in LaTeX math.\n      This caused problems with array environments
  (#891).\n    + Change `\\` to `/` in paths.  `/` works even on Windows in LaTeX.\n
  \     `\\` will cause major problems if unescaped.\n    + Write id for code block
  to label attribute in LaTeX when listings\n      is used (thanks to Florian Eitel).\n
  \   + Scale LaTeX tables so they don't exceed columnwidth.\n    + Avoid problem
  with footnotes in unnumbered headers (#940).\n\n  * Beamer writer: when creating
  beamer slides, add `allowframebreaks` option\n      to the slide if it is one of
  the header classes.  It is recommended\n      that your bibliography slide have
  this attribute:\n\n        # References {.allowframebreaks}\n\n    This causes multiple
  slides to be created if necessary, depending\n    on the length of the bibliography.\n\n
  \ * ConTeXt writer: Properly handle tables without captions.  The old output\n    only
  worked in MkII. This should work in MkIV as well (#837).\n\n  * MediaWiki writer:
  Use native mediawiki tables instead of HTML (#720).\n\n  * HTML writer:\n\n    +
  Fixed `--no-highlight` (Alexander Kondratskiy).\n    + Don't convert to lowercase
  in email obfuscation (#839).\n    + Ensure proper escaping in `<title>` and `<meta>`
  fields.\n\n  * AsciiDoc writer:\n\n    + Support `--atx-headers` (Max Rydahl Andersen).\n
  \   + Don't print empty identifier blocks `([[]])` on headers (Max\n      Rydahl
  Andersen).\n\n  * ODT writer:\n\n    + Fixing wrong numbered-list indentation in
  open document format\n      (Alexander Kondratskiy) (#369).\n    + `reference.odt`:
  Added pandoc as \"generator\" in `meta.xml`.\n    + Minor changes for ODF 1.2 conformance
  (#939). We leave the\n      nonconforming `contextual-spacing` attribute, which
  is provided by\n      LibreOffice itself and seems well supported.\n\n  * Docx writer:\n\n
  \   + Fixed rendering of display math in lists.\n      In 1.11 and 1.11.1, display
  math in lists rendered as a new list\n      item.  Now it always appears centered,
  just as outside of lists,\n      and in proper display math style, no matter how
  far indented the\n      containing list item is (#784).\n    + Use `w:br` with `w:type`
  `textWrapping` for linebreaks.\n      Previously we used `w:cr` (#873).\n    + Use
  Compact style for Plain block elements, to\n      differentiate between tight and
  loose lists (#775).\n    + Ignore most components of `reference.docx`.\n      We
  take the `word/styles.xml`, `docProps/app.xml`,\n      `word/theme/theme1.xml`,
  and `word/fontTable.xml` from\n      `reference.docx`, ignoring everything else.
  \ This should help\n      with the corruption problems caused when different versions
  of\n      Word resave the reference.docx and reorganize things.\n    +  Made `--no-highlight`
  work properly.\n\n  * EPUB writer\n\n    + Don't add `dc:creator` tags if present
  in EPUB metadata.\n    + Add `id=\"toc-title\"` to `h1` in `nav.xhtml` (#799).\n
  \   + Don't put blank title page in reading sequence.\n      Set `linear=\"no\"`
  if no title block.  Addresses #797.\n    + Download webtex images and include as
  data URLs.\n      This allows you to use `--webtex` in creating EPUBs.\n      Math
  with `--webtex` is automatically made self-contained.\n    + In `data/epub.css`,
  removed highlighting styles (which\n      are no longer needed, since styles are
  added by the HTML\n      writer according to `--highlighting-style`).  Simplified\n
  \     margin fields.\n    + If resource not found, skip it, as in Docx writer (#916).\n\n
  \ * RTF writer:\n\n    + Properly handle characters above the 0000-FFFF range.\n
  \     Uses surrogate pairs.  Thanks to Hiromi Ishii for the patch.\n    + Fixed
  regression with RTF table of contents.\n    + Only autolink absolute URIs.  This
  fixes a regression, #830.\n\n  * Markdown writer:\n\n    + Only autolink absolute
  URIs.  This fixes a regression, #830.\n    + Don't wrap attributes in fenced code
  blocks.\n    + Write full metadata in MMD style title blocks.\n    + Put multiple
  authors on separate lines in pandoc titleblock.\n      Also, don't wrap long author
  entries, as new lines get treated\n      as new authors.\n\n  * `Text.Pandoc.Templates`:\n\n
  \   + Fixed bug retrieving default template for markdown variants.\n    + Templates
  can now contain \"record lookups\" in variables;\n      for example, `author.institution`
  will retrieve the `institution`\n      field of the `author` variable.\n    + More
  consistent behavior of `$for$`.  When `foo` is not a list,\n      `$for(foo)$...$endfor$`
  should behave like $if(foo)$...$endif$.\n      So if `foo` resolves to \"\", no
  output should be produced.\n      See pandoc-templates#39.\n\n  * Citation processing
  improvements (now part of pandoc-citeproc):\n\n    + Fixed `endWithPunct` The new
  version correctly sees a sentence\n      ending in '.)' as ending with punctuation.
  \ This fixes a bug which\n      led such sentences to receive an extra period at
  the end: '.).'.\n      Thanks to Steve Petersen for reporting.\n    + Don't interfere
  with Notes that aren't citation notes.\n      This fixes a bug in which notes not
  generated from citations were\n      being altered (e.g. first letter capitalized)
  (#898).\n    + Only capitalize footnote citations when they have a prefix.\n    +
  Changes in suffix parsing.  A suffix beginning with a digit gets 'p'\n      inserted
  before it before passing to citeproc-hs, so that bare numbers\n      are treated
  as page numbers by default.  A suffix not beginning with\n      punctuation has
  a space added at the beginning (rather than a comma and\n      space, as was done
  before for not-author-in-text citations).\n      The result is that `\\citep[23]{item1}`
  in LaTeX will be interpreted\n      properly, with '23' treated as a locator of
  type 'page'.\n    + Many improvements to citation rendering, due to fixes in citeproc-hs\n
  \     (thanks to Andrea Rossato).\n    + Warnings are issued for undefined citations,
  which are rendered\n      as `???`.\n    + Fixed hanging behavior when locale files
  cannot be found.\n\n  [template changes]\n\n  * DocBook:  Use DocBook 4.5 doctype.\n\n
  \ * Org: '#+TITLE:' is inserted before the title.\n    Previously the writer did
  this.\n\n  * LaTeX:  Changes to make mathfont work with xelatex.\n    We need the
  mathspec library, not just fontspec, for this.\n    We also need to set options
  for setmathfont (#734).\n\n  * LaTeX: Use `tex-ansi` mapping for `monofont`.\n    This
  ensures that straight quotes appear as straight, rather than\n    being treated
  as curly.  See #889.\n\n  * Made `\\includegraphics` more flexible in LaTeX template.\n
  \   Now it can be used with options, if needed.  Thanks to Bernhard Weichel.\n\n
  \ * LaTeX/Beamer: Added `classoption` variable.\n    This is intended for class
  options like `oneside`; it may\n    be repeated with different options.  (Thanks
  to Oliver Matthews.)\n\n  * Beamer: Added `fonttheme` variable.  (Thanks to Luis
  Osa.)\n\n  * LaTeX: Added `biblio-style` variable (#920).\n\n  * DZSlides: title
  attribute on title section.\n\n  * HTML5: add meta tag to allow scaling by user
  (Erik Evenson)\n\n  [under-the-hood improvements]\n\n  * Markdown reader:Improved
  strong/emph parsing, using the strategy of\n    <https://github.com/jgm/Markdown>.
  \ The new parsing algorithm requires\n    no backtracking, and no keeping track
  of nesting levels.  It will give\n    different results in some edge cases, but
  these should not affect normal\n    uses.\n\n  * Added `Text.Pandoc.Compat.Monoid`.\n
  \   This allows pandoc to compile with `base` < 4.5, where `Data.Monoid`\n    doesn't
  export `<>`.  Thanks to Dirk Ullirch for the patch.\n\n  * Added `Text.Pandoc.Compat.TagSoupEntity`.\n
  \   This allows pandoc to compile with `tagsoup` 0.13.x.\n    Thanks to Dirk Ullrich
  for the patch.\n\n  * Most of `Text.Pandoc.Readers.TeXMath` has been moved to the\n
  \   `texmath` module (0.6.4).  (This allows `pandoc-citeproc` to\n    handle simple
  math in bibliography fields.)\n\n  * Added `Text.Pandoc.Writers.Shared` for shared
  functions used\n    only in writers.  `metaToJSON` is used in writers to create
  a\n    JSON object for use in the templates from the pandoc metadata\n    and variables.
  \ `getField`, `setField`, and `defField` are\n    for working with JSON template
  contexts.\n\n  * Added `Text.Pandoc.Asciify` utility module.\n    This exports functions
  to create ASCII-only versions of identifiers.\n\n  * `Text.Pandoc.Parsing`\n\n    +
  Generalized state type on `readWith` (API change).\n    + Specialize readWith to
  `String` input. (API change).\n    + In `ParserState`, replace `stateTitle`, `stateAuthors`,
  `stateDate`\n      with `stateMeta` and `stateMeta'`.\n\n  * `Text.Pandoc.UTF8`:
  use strict bytestrings in reading.  The use of lazy\n     bytestrings seemed to
  cause problems using pandoc on 64-bit Windows\n     7/8 (#874).\n\n  * Factored
  out `registerHeader` from markdown reader, added to\n    `Text.Pandoc.Parsing`.\n\n
  \ * Removed `blaze_html_0_5` flag, require `blaze-html` >= 0.5.\n    Reason:  <
  0.5 does not provide a monoid instance for Attribute,\n    which is now needed by
  the HTML writer (#803).\n\n  * Added `http-conduit` flag, which allows fetching
  https resources.\n    It also brings in a large number of dependencies (`http-conduit`\n
  \   and its dependencies), which is why for now it is an optional flag\n    (#820).\n\n
  \ * Added CONTRIBUTING.md.\n\n  * Improved INSTALL instructions.\n\n  * `make-windows-installer.bat`:
  Removed explicit paths for executables.\n\n  * `aeson` is now used instead of `json`
  for JSON.\n\n  * Set default stack size to 16M.  This is needed for some large\n
  \   conversions, esp. if pandoc is compiled with 64-bit ghc.\n\n  * Various small
  documentation improvements.\n    Thanks to achalddave and drothlis for patches.\n\n
  \ * Removed comment that chokes recent versions of CPP (#933).\n\n  * Removed support
  for GHC version < 7.2, since pandoc-types now\n    requires at least GHC 7.2 for
  GHC generics.\n\n\npandoc (1.11.1)\n\n  * Markdown reader:\n\n    + Fixed regression
  in which parentheses were lost in link URLs.\n      Added tests.  Closes #786.\n
  \   + Better handling of unmatched double quotes in `--smart` mode.\n      These
  occur frequently in fiction, since it is customary not to\n      close quotes in
  dialogue if the speaker does not change between\n      paragraphs.  The unmatched
  quotes now get turned into literal\n      left double quotes. (No `Quoted` inline
  is generated, however.)\n      Closes #99 (again).\n\n  * HTML writer: Fixed numbering
  mismatch between TOC and sections.\n    `--number-offset` now affects TOC numbering
  as well\n    as section numbering, as it should have all along.  Closes #789.\n\n
  \ * Markdown writer: Reverted 1.11 change that caused citations to be rendered\n
  \   as markdown citations, even if `--bibliography` was specified, unless\n    `citation`
  extension is disabled.  Now, formatted citations are always\n    printed if `--bibliography`
  was specified.  If you want to reformat\n    markdown keeping pandoc markdown citations
  intact, don't use\n    `--bibliography`.  Note that citations parsed from LaTeX
  documents will\n    be rendered as pandoc markdown citations when `--bibliography`
  is not\n    specified.\n\n  * ODT writer: Fixed regression leading to corrupt ODTs.\n
  \   This was due to a change in the `Show` instance for\n    `Text.Pandoc.Pretty.Doc`.
  \ Closes #780.\n\n  * Fixed spacing bugs involving code block attributes in\n    RST
  reader and Markdown writer. Closes #763.\n\n  * Windows package:  Various improvements
  due to Fyodor Sheremetyev.\n\n    + Automatically set installation path (Program
  Files or Local App Data).\n    + Set system PATH environment variable when installing
  for all users.\n    + Pandoc can installed for all users using the following command.\n
  \     `msiexec /i pandoc-1.11.msi ALLUSERS=1`.\n\n  * Bumped QuickCheck version
  bound.\n\npandoc (1.11)\n\n  * Added `--number-offset` option.  (See README for
  description.)\n\n  * Added `--default-image-extension` option.  (See README for
  description.)\n\n  * `--number-sections` behavior change: headers with class `unnumbered`\n
  \   will not be numbered.\n\n  * `--version` now reports the default data directory.\n\n
  \ * `Text.Pandoc.Parsing` is no longer exposed. (API change.)\n\n  * `Text.Pandoc.Highlighting`
  is no longer exposed. (API change.)\n\n  * `Text.Pandoc.Shared`:  Changed type of
  `Element`.  `Sec` now includes\n    a field for `Attr` rather than just `String`.
  \ (API change.)\n\n  * Added `markdown_github` as input format.  This was an accidental\n
  \   omission in 1.10.\n\n  * Added `readerDefaultImageExtension` field to `ReaderOptions`.
  \ (API\n    change.)\n\n  * Added `writerNumberOffset` field in `WriterOptions`.
  (API change.)\n\n  * Beamer template:\n\n    + Fixed captions with longtable.  Thanks
  to Joost Kremers.\n    + Provide `\\Oldincludegraphics` as in LaTeX template (Benjamin
  Bannier).\n\n  * LaTeX template:\n\n    + Load microtype after fonts.  Microtype
  needs to know\n      what fonts are being used.  Thanks to dfc for the patch.\n
  \   + Set `secnumdepth` to 5 if `--number-sections` specified.\n      This yields
  behavior equivalent to the other writers, numbering\n      level 4 and 5 headers
  too.  Closes #753.\n\n  * HTML reader:\n\n    + Handle `<colgroup>` tag.\n    +
  Preserve all header attributes.\n\n  * LaTeX reader:\n\n    + Parse `\\hrule` as
  `HorizontalRule`.  Closes #746.\n    + Parse starred variants of `\\section` etc.
  as headers with\n      attribute `unnumbered`.\n    + Read optional attributes in
  `lstlisting` and `Verbatim` environments.\n      We convert these to pandoc standard
  names, e.g. `numberLines`\n      for `numbers=left`, `startFrom=100` from `firstnumber=100`.\n
  \   + Handle language attribute for lstlistings.\n    + Better support for Verbatim
  and minted environments.  Closes #763.\n\n  * Markdown reader:\n\n    + `-` in an
  attribute context = `.unnumbered`.  The point of this\n      is to provide a way
  to specify unnumbered headers in non-English\n      documents.\n    + Fixed bug
  parsing key/value attributes.  Parsing failed if you\n      had an unquoted attribute
  immediately before the final '}'.\n    + Make backslash escape work in attributes.\n
  \   + Fix title block parsing.  Now if `mmd_title_blocks` is specified,\n      pandoc
  will parse a MMD title block if it sees one, even if\n      `pandoc_title_blocks`
  is enabled.\n    + Refactoring: `litChar` now includes entities, so we don't need\n
  \     to use `fromEntities` e.g. on titles.\n    + Allow spaces around borders in
  pipe tables.  Closes #772.\n    + Allow all punctuation in angle-bracket autolinks.
  \ Previously\n      things like `----` were disallowed, because the uri parser\n
  \     treated them as trailing punctuation.  Closes #768.\n    + Make `implicit_header_references`
  work properly when\n      headers are given explicit identifiers.\n    + Check for
  tables before line blocks.  Otherwise some pipe\n      tables get treated as line
  blocks.\n    + Allow `&` in emails (for entities).\n    + Properly handle entities
  in titles and links.  A markdown link\n      `<http://g&ouml;ogle.com>` should be
  a link to `http://göogle.com`.\n      Closes #723.\n\n  * Textile reader:\n\n    +
  Handle attributes on headers.\n\n  * LaTeX reader:\n\n    + Add `fig:` as title
  for images with captions.\n      This is needed for them to be rendered as figures.
  \ Closes #766.\n    + Never emit an empty paragraph.  See #761.\n    + Handle `\\caption`
  for images in figures.  Closes #766.\n    + Parse `\\section*`, etc. as unnumbered
  sections.\n\n  * HTML writer:\n\n    + Support header attributes.  The attributes
  go on\n      the enclosing `section` or `div` tag if `--section-divs` is specified.\n
  \   + Fixed a regression (only now noticed) in html+lhs output.\n      Previously
  the bird tracks were being omitted.\n\n  * LaTeX writer:\n\n    + Omit lists with
  no items to avoid LaTeX errors.\n    + Support line numbering with `--listings`.\n
  \     If `numberLines` class is present, we add `numbers=left`;\n      if `startFrom`
  is present, we add `firstnumber=`. (#763)\n\n  * ConTeXt writer:\n\n    + Removed
  `\\placecontent`.  This produced a duplicate toc,\n      in conjunction with `\\placelist`.\n
  \   + Use `\\title`, `\\subject` etc. for headers with\n      `unnumbered` class.\n\n
  \ * Textile writer:\n\n    + Support header attributes.\n\n  * Markdown writer:\n\n
  \   + Use grid tables when needed, and if enabled.  Closes #740.\n    + Render citations
  as pandoc-markdown citations.\n      Previously citations were rendered as citeproc-formatted
  citations\n      by default.  Now we render them as pandoc citations, e.g. `[@item1]`,\n
  \     unless the `citations` extension is disabled.\n      If you still want formatted
  citations in your markdown output,\n      use `pandoc -t markdown-citations`.\n\n
  \ * RST writer:\n\n    + Support `:number-lines:` in code blocks.\n\n  * Docx writer:\n\n
  \   + Better treatment of display math.  Display math inside a\n      paragraph
  is now put in a separate paragraph, so it will render\n      properly (centered
  and without extra blank lines around it).\n      Partially addresses #742.\n    +
  Content types and document rels xml files are now created from\n      scratch, rather
  than being taken over from `reference.docx`.\n      This fixes problems that arise
  when you edit the `reference.docx`\n      with Word.\n    + We also now encode mime
  types for each individual image rather\n      than using defaults.  This should
  allow us to handle a wider\n      range of image types (including PDF).   Closes
  #414.\n    + Changed style names in `reference docx`.\n      `FootnoteReference`
  -> `FootnoteRef`, `Hyperlink` -> `Link`.\n      The old names got changed by Word
  when the `reference.docx` was\n      edited.  Closes #414.\n\n  * EPUB writer:\n\n
  \   + Fix section numbering.  Previously the numbering restarted from 1\n      in
  each chapter (with `--number-sections`), though the numbers in\n      the table
  of contents were correct.\n    + Headers with \"unnumbered\" attribute are not numbered.
  \ (Nor do they\n      cause an increment in running numbering.) Section numbers
  now work\n      properly, even when there is material before the first numbered
  section.\n    + Include HTML TOC, even in epub2.  The TOC is included in `<spine>`,\n
  \     but `linear` is set to `no` unless the `--toc` option is specified.\n      Include
  `<guide>` element in OPF.  This should allow the TOC to\n      be usable in Kindles
  when converted with kindlegen. Closes #773.\n\n  * `Text.Pandoc.Parsing`: Optimized
  `oneOfStringsCI`.\n    This dramatically reduces the speed penalty that comes from
  enabling the\n    `autolink_bare_uris` extension.  The penalty is still substantial
  (in one\n    test, from 0.33s to 0.44s), but nowhere near what it used to be.\n
  \   The RST reader is also much faster now, as it autodetects URIs.\n\n  * `Text.Pandoc.Shared`:
  \ `hierarchicalize` will not number section\n    with class \"unnumbered\".  Unnumbered
  sections get `[]` for their\n    section number.\n\n  * `Text.Pandoc.Pretty`:\n\n
  \   + Fixed `chomp` so it works inside `Prefixed` elements.\n    + Changed `Show`
  instance so it is better for debugging.\n\n  * `Text.Pandoc.ImageSize`:  Added `Pdf`
  to `ImageType`.\n\n  * `Text.Pandoc.UTF8`:  Strip off BOM if present.  Closes #743.\n\n
  \ * Windows installer improvements:\n\n    + The installer is now signed with a
  certificate (thanks to\n      Fyodor Sheremetyev).\n    + WiX is used instead of
  InnoSetup.  The installer is now a\n      standard msi file.\n    + The version
  number is now auto-detected, and need not be\n      updated separately.\n\n  * OSX
  installer improvements:\n\n    + The package and pandoc executable are now signed
  with a\n      certificate (thanks to Fyodor Sheremetyev).\n    + RTF version of
  license is used.\n    + Use full path for sysctl in `InstallationCheck` script (jonahbull).\n
  \     Closes #580.\n\n  * Converted COPYING to markdown.\n\n  * pandoc.cabal:  Require
  latest versions of highlighting-kate,\n    texmath, citeproc-hs, zip-archive.\n\npandoc
  (1.10.1)\n\n  * Markdown reader:  various optimizations, leading to a\n    significant
  performance boost.\n\n  * RST reader:  Allow anonymous form of inline links:\n    ``
  `hello <url>`__ `` Closes #724.\n\n  * Mediawiki reader: Don't require newlines
  after tables.\n    Thanks to jrunningen for the patch. Closes #733.\n\n  * Fixed
  LaTeX macro parsing.  Now LaTeX macro definitions are preserved\n    when output
  is LaTeX, and applied when it is another format.\n    Partially addresses #730.\n\n
  \ * Markdown and RST readers:  Added parser to `block` that skips blank\n    lines.
  \ This fixes a subtle regression involving grid tables with\n    empty cells.  Also
  added test for grid table with empty cells.\n    Closes #732.\n\n  * RST writer:
  \ Use `.. code:: language` for code blocks with language.\n    Closes #721.\n\n
  \ * DocBook writer:  Fixed output for hard line breaks, adding a newline\n    between
  `<literallayout>` tags.\n\n  * Markdown writer:  Use an autolink when link text
  matches url.\n    Previously we also checked for a null title, but this\n    test
  fails for links produced by citeproc-hs in bibliographies.\n    So, if the link
  has a title, it will be lost on conversion\n    to an autolink, but that seems okay.\n\n
  \ * Markdown writer:  Set title, author, date variables as before.\n    These are
  no longer used in the default template, since we use\n    titleblock, but we set
  them anyway for those who use custom templates.\n\n  * LaTeX writer:  Avoid extra
  space at start/end of table cell.\n    Thanks to Nick Bart for the suggestion of
  using @{}.\n\n  * `Text.Pandoc.Parsing`:\n\n    + More efficient version of `anyLine`.\n
  \   + Type of `macro` has changed; the parser now returns `Blocks`\n      instead
  of `Block`.\n\n  * Relaxed old-time version bound, allowing 1.0.*.\n\n  * Removed
  obsolete `hsmarkdown` script.  Those who need `hsmarkdown`\n    should create a
  symlink as described in the README.\n\npandoc (1.10.0.5)\n\n  * Markdown reader:
  Try `lhsCodeBlock` before `rawTeXBlock`.  Otherwise\n    `\\begin{code}...\\end{code}`
  isn't handled properly in markdown+lhs.\n    Thanks to Daniel Miot for noticing
  the bug and suggesting the fix.\n\n  * Markdown reader: Fixed bug with headerless
  grid tables.\n    The 1.10 code assumed that each table header cell contains exactly
  one\n    block. That failed for headerless tables (0) and also for tables with\n
  \   multiple blocks in a header cell.  The code is fixed and tests provided.\n    Thanks
  to Andrew Lee for pointing out the bug.\n\n  * Markdown reader: Fixed regressions
  in fenced code blocks. Closes #722.\n\n    + Tilde code fences can again take a
  bare language string\n      (`~~~ haskell`), not just curly-bracketed attributes\n
  \     (`~~~ {.haskell}`).\n    + Backtick code blocks can take the curly-bracketed
  attributes.\n    + Backtick code blocks don't *require* a language.\n    + Consolidated
  code for the two kinds of fenced code blocks.\n\n  * LaTeX template: Use `\\urlstyle{same}`
  to avoid monospace URLs.\n\n  * Markdown writer: Use proportional font for email
  autolinks with\n    obfuscation.  Closes #714.\n\n  * Corrected name of `blank_before_blockquote`
  in README.  Closes #718.\n\n  * `Text.Pandoc.Shared`: Fixed bug in `uri` parser.\n
  \   The bug prevented an autolink at the end of a string (e.g.\n    at the end of
  a line block line) from counting as a link.  Closes #711.\n\n  * Use the `hsb2hs`
  preprocessor instead of TH for embed_data_files.\n    This should work on Windows,
  unlike the TH solution with\n    file-embed.\n\n  * Eliminated use of TH in test
  suite.\n\n  * Added `Text.Pandoc.Data` (non-exported) to hold the association\n
  \   list of embedded data files, if the `embed_data_files` flag is selected.\n    This
  isolates the code that needs special treatment with file-embed or\n    `hsb2hs`.\n\n
  \ * Changes to `make-windows-installer.bat`.\n\n    + Exit batch file if any of
  the cabal-dev installs fail.\n    + There's no longer any need to reinstall `highlighting-kate`.\n
  \   + Don't start with a `cabal update`; leave that to the user.\n    + Force reinstall
  of pandoc.\n\n  * Fixed EPUB writer so it builds with blaze-html 0.4.x. Thanks to\n
  \   Jens Petersen.\n\npandoc (1.10.0.4)\n\n  * Fixed bug with escaped % in LaTeX
  reader. Closes #710.\n\npandoc (1.10.0.3)\n\n  * Added further missing fb2 tests
  to cabal file.\n\npandoc (1.10.0.2)\n\n  * Added fb2 tests to cabal file's extra-source-files.\n\npandoc
  (1.10.0.1)\n\n  * Bump version bounds on test-framework packages.\n\npandoc (1.10)\n\n
  \ [new features]\n\n  * New input formats:  `mediawiki` (MediaWiki markup).\n\n
  \ * New output formats:  `epub3` (EPUB v3 with MathML),\n    `fb2` (FictionBook2
  ebooks).\n\n  * New `--toc-depth` option, specifying how many levels of\n    headers
  to include in a table of contents.\n\n  * New `--epub-chapter-level` option, specifying
  the header\n    level at which to divide EPUBs into separate files.\n    Note that
  this normally affects only performance, not the\n    visual presentation of the
  EPUB in a reader.\n\n  * Removed the `--strict` option.  Instead of using `--strict`,\n
  \   one can now use the format name `markdown_strict` for either input\n    or output.
  \ This gives more fine-grained control that `--strict`\n    did, allowing one to
  convert from pandoc's markdown to strict\n    markdown or vice versa.\n\n  * It
  is now possible to enable or disable specific syntax\n    extensions by appending
  them (with `+` or `-`) to the writer\n    or reader name.  For example,\n\n        pandoc
  -f markdown-footnotes+hard_line_breaks\n\n    disables footnotes and enables treating
  newlines as hard\n    line breaks.  The literate Haskell extensions are now implemented\n
  \   this way as well, using either `+lhs` or `+literate_haskell`.\n    For a list
  of extension names, see the README under\n    \"Pandoc's Markdown.\"\n\n  * The
  following aliases have been introduced for specific\n    combinations of markdown
  extensions:  `markdown_phpextra`,\n    `markdown_github`, `markdown_mmd`, `markdown_strict`.
  \ These aliases\n    work just like regular reader and writer names, and can be
  modified\n    with extension modifiers as described above. (Note that conversion\n
  \   from one markdown dialect to another does not work perfectly,\n    because there
  are differences in markdown parsers besides\n    just the extensions, and because
  pandoc's internal document model is\n    not rich enough to capture all of the extensions.)\n\n
  \ * New `--html-q-tags` option.  The previous default was to use `<q>`\n    tags
  for smart quotes in HTML5.  But `<q>` tags are also valid HTML4.\n    Moreover,
  they are not a robust way of typesetting quotes, since\n    some user agents don't
  support them, and some CSS resets (e.g.\n    bootstrap) prevent pandoc's quotes
  CSS from working properly.\n    We now just insert literal quote characters by default
  in both\n    `html` and `html5` output, but this option is provided for\n    those
  who still want `<q>` tags.\n\n  * The markdown reader now prints warnings (to stderr)
  about\n    duplicate link and note references.  Closes #375.\n\n  * Markdown syntax
  extensions:\n\n    + Added pipe tables.  Thanks to François Gannaz for the initial
  patch.\n      These conform to PHP Markdown Extra's pipe table syntax. A subset\n
  \     of org-mode table syntax is also supported, which means that you can\n      use
  org-mode's nice table editor to create tables.\n\n    + Added support for RST-style
  line blocks. These are\n      useful for verse and addresses.\n\n    + Attributes
  can now be specified for headers, using the same\n      syntax as in code blocks.
  \ (However, currently only the\n      identifier has any effect in most writers.)
  \ For example,\n\n            # My header {#foo}\n\n            See [the header
  above](#foo).\n\n    + Pandoc will now act as if link references have been defined\n
  \     for all headers without explicit identifiers.\n      So, you can do this:\n\n
  \           # My header\n\n            Link to [My header].\n            Another
  link to [it][My header].\n\n      Closes #691.\n\n  * LaTeX reader:\n\n    + Command
  macros now work everywhere, including non-math.\n      Environment macros still
  not supported.\n    + `\\input` now works, as well as `\\include`.  TEXINPUTS is
  used.\n      Pandoc looks recursively into included files for more included files.\n\n
  \ [behavior changes]\n\n  * The Markdown reader no longer puts the text of autolinks
  in a\n    `Code` inline.  This means that autolinks will no longer appear\n    in
  a monospace font.\n\n  * The character `/` can now appear in markdown citation keys.\n\n
  \ * HTML blocks in strict_markdown are no longer required to begin\n    at the left
  margin.  Technically this is required, according to\n    the markdown syntax document,
  but `Markdown.pl` and other markdown\n    processors are more liberal.\n\n  * The
  `-V` option has been changed so that if there are duplicate\n    variables, those
  specified later on the command line take precedence.\n\n  * Tight lists now work
  in LaTeX and ConTeXt output.\n\n  * The LaTeX writer no longer relien on the `enumerate`
  package.\n    Instead, it uses standard LaTeX commands to change the list numbering\n
  \   style.\n\n  * The LaTeX writer now uses `longtable` instead of `ctable`. This
  allows\n    tables to be split over page boundaries.\n\n  * The RST writer now uses
  a line block to render paragraphs containing\n    linebreaks (which previously weren't
  supported at all).\n\n  * The markdown writer now applies the `--id-prefix` to footnote
  IDs.\n    Closes #614.\n\n  * The plain writer no longer uses backslash-escaped
  line breaks\n    (which are not very \"plain\").\n\n  * `Text.Pandoc.UTF8`: Better
  error message for invalid UTF8.\n    Read bytestring and use `Text`'s decodeUtf8
  instead of using\n    `System.IO.hGetContents`.  This way you get a message saying\n
  \   \"invalid UTF-8 stream\" instead of \"invalid byte sequence.\"\n    You are
  also told which byte caused the problem.\n\n  * Docx, ODT, and EPUB writers now
  download images specified by a URL\n    instead of skipping them or raising an error.\n\n
  \ * EPUB writer:\n\n    + The default CSS now left-aligns headers by default, instead
  of\n      centering.  This is more consistent with the rest of the writers.\n    +
  A proper multi-level table of contents is now used in `toc.ncx`.\n      There is
  no longer a subsidiary table of contents at the beginning\n      of each chapter.\n
  \   + Code highlighting now works by default.\n    + Section divs are used by default
  for better semantic markup.\n    + The title is used instead of \"Title Page\" in
  the table of contents.\n      Otherwise we have a hard-coded English string, which
  looks\n      strange in ebooks written in other languages.  Closes #572.\n\n  *
  HTML writer:\n\n    + Put mathjax in span with class \"math\".  Closes #562.\n    +
  Put citations in a span with class \"citation.\" In HTML5, also include\n      a
  `data-cite` attribute with a space-separated list of citation\n      keys.\n\n  *
  `Text.Pandoc.UTF8`:  use universalNewlineMode in reading.\n    This treats both
  `\\r\\n` and `\\n` as `\\n` on input, no matter\n    what platform we're running
  on.\n\n  * Citation processing is now done in the Markdown and LaTeX\n    readers,
  not in `pandoc.hs`.  This makes it easier for library users\n    to use citations.\n\n
  \ [template changes]\n\n  * HTML: Added css to template to preserve spaces in `<code>`
  tags.\n    Thanks to Dirk Laurie.\n\n  * Beamer:  Remove English-centric strings
  in section pages.\n    Section pages used to have \"Section\" and a number as well
  as the\n    section title. Now they just have the title.  Similarly for part\n    and
  subsection.  Closes #566.\n\n  * LaTeX, ConTeXt: Added papersize variable.\n\n  *
  LaTeX, Beamer templates: Use longtable instead of ctable.\n\n  * LaTeX, Beamer templates:
  Don't require 'float' package for tables.\n    We don't actually seem to use the
  '[H]' option.\n\n  * LaTeX:  Use `upquote` package if it is available.  This fixes\n
  \   straight quotes in verbatim environments.\n\n  * Markdown, plain: Fixed titleblock
  so it is just a single string.\n    Previously separate title, author, and date
  variables were used,\n    but this didn't allow different kinds of title blocks.\n\n
  \ * EPUB:\n\n    + Rationalized templates.  Previously there were three different\n
  \     templates involved in epub production. There is now just one\n      template,
  `default.epub` or `default.epub3`. It can now be\n      overridden using `--template`,
  just like other templates.\n      The titlepage is now folded into the default template.\n
  \     A `titlepage` variable selects it.\n    + UTF-8, lang tag, meta tags, title
  element.\n\n  * Added scale-to-width feature to beamer template\n\n  [API changes]\n\n
  \ * `Text.Pandoc.Definition`: Added `Attr` field to `Header`.\n    Previously header
  identifiers were autogenerated by the writers.\n    Now they are added in the readers
  (either automatically or explicitly).\n\n  * `Text.Pandoc.Builder`:\n\n    + `Inlines`
  and `Blocks` are now synonyms for `Many Inline` and\n      `Many Block`.  `Many`
  is a newtype wrapper around `Seq`, with\n      custom Monoid instances for `Many
  Inline` and `Many Block.  This\n      allows `Many` to be made an instance of `Foldable`
  and `Traversable`.\n    + The old `Listable` class has been removed.\n    + The
  module now exports `isNull`, `toList`, `fromList`.\n    + The old `Read` and `Show`
  instances have been removed; derived\n      instances are now used.\n    + Added
  `headerWith`.\n\n  * The readers now take a `ReaderOptions` rather than a `ParserState`\n
  \   as a parameter.  Indeed, not all parsers use the `ParserState` type;\n    some
  have a custom state.  The motivation for this change was to separate\n    user-specifiable
  options from the accounting functions of parser state.\n\n  * New module `Text.Pandoc.Options`.
  \ This includes the `WriterOptions`\n    formerly in `Text.Pandoc.Shared`, and its
  associated\n    data types.  It also includes a new type `ReaderOptions`, which\n
  \   contains many options formerly in `ParserState`, and its associated\n    data
  types:\n\n    + `ParserState.stateParseRaw` -> `ReaderOptions.readerParseRaw`.\n
  \   + `ParserState.stateColumns` -> `ReaderOptions.readerColumns`.\n    + `ParserState.stateTabStop`
  -> `ReaderOptions.readerTabStop`.\n    + `ParserState.stateOldDashes` -> `ReaderOptions.readerOldDashes`.\n
  \   + `ParserState.stateLiterateHaskell` -> `ReaderOptions.readerLiterateHaskell`.\n
  \   + `ParserState.stateCitations` -> `ReaderOptions.readerReferences`.\n    + `ParserState.stateApplyMacros`
  -> `ReaderOptions.readerApplyMacros`.\n    + `ParserState.stateIndentedCodeClasses`
  ->\n      `ReaderOptions.readerIndentedCodeClasses`.\n    + Added `ReaderOptions.readerCitationStyle`.\n\n
  \ * `WriterOptions` now includes `writerEpubVersion`, `writerEpubChapterLevel`,\n
  \   `writerEpubStylesheet`, `writerEpubFonts`, `writerReferenceODT`,\n    `writerReferenceDocx`,
  and `writerTOCDepth`.  `writerEPUBMetadata` has\n    been renamed `writerEpubMetadata`
  for consistency.\n\n  * Changed signatures of `writeODT`, `writeDocx`, `writeEPUB`,
  since they no\n    longer stylesheet, fonts, reference files as separate parameters.\n\n
  \ * Removed `writerLiterateHaskell` from `WriterOptions`, and\n    `readerLiterateHaskell`
  from `ReaderOptions`.  LHS is now handled\n    by an extension (`Ext_literate_haskell`).\n\n
  \ * Removed deprecated `writerXeTeX`.\n\n  * Removed `writerStrict` from `WriterOptions`.
  \ Added `writerExtensions`.\n    Strict is now handled through extensions.\n\n  *
  `Text.Pandoc.Options` exports `pandocExtensions`, `strictExtensions`,\n    `phpMarkdownExtraExtensions`,
  `githubMarkdownExtensions`,\n    and `multimarkdownExtensions`, as well as the `Extensions`
  type.\n\n  * New `Text.Pandoc.Readers.MediaWiki` module, exporting\n    `readMediaWiki`.\n\n
  \ * New `Text.Pandoc.Writers.FB2` module, exporting `writeFB2`\n    (thanks to Sergey
  Astanin).\n\n  * `Text.Pandoc`:\n\n    + Added `getReader`, `getWriter` to `Text.Pandoc`.\n
  \   + `writers` is now an association list `(String, Writer)`.\n      A `Writer`
  can be a `PureStringWriter`, an `IOStringWriter`, or\n      an `IOByteStringWriter`.
  \ ALL writers are now in the 'writers'\n      list, including the binary writers
  and FB2 writer.  This allows\n      code in `pandoc.hs` to be simplified.\n    +
  Changed type of `readers`, so all readers are in IO.\n      Users who want pure
  readers can still get them form the reader\n      modules; this just affects the
  function `getReader` that looks up\n      a reader based on the format name.  The
  point of this change is to\n      make it possible to print warnings from the parser.\n\n
  \ * `Text.Pandoc.Parsing`:\n\n    + `Text.Parsec` now exports all Parsec functions
  used in pandoc code.\n      No other module directly imports Parsec.  This will
  make it easier\n      to change the parsing backend in the future, if we want to.\n
  \   + `Text.Parsec` is used instead of `Text.ParserCombinators.Parsec`.\n    + Export
  the type synonym `Parser`.\n    + Export `widthsFromIndices`, `NoteTable'`, `KeyTable'`,
  `Key'`, `toKey'`,\n     `withQuoteContext`, `singleQuoteStart`, `singleQuoteEnd`,\n
  \    `doubleQuoteStart`, `doubleQuoteEnd`, `ellipses`, `apostrophe`,\n     `dash`,
  `nested`, `F(..)`, `askF`, `asksF`, `runF`, `lineBlockLines`.\n    + `ParserState`
  is no longer an instance of `Show`.\n    + Added `stateSubstitutions` and `stateWarnings`
  to `ParserState`.\n    + Generalized type of `withQuoteContext`.\n    + Added `guardEnabled`,
  `guardDisabled`, `getOption`.\n    + Removed `failIfStrict`.\n    + `lookupKeySrc`
  and `fromKey` are no longer exported.\n\n  * `Data.Default` instances are now provided
  for `ReaderOptions`,\n    `WriterOptions`, and `ParserState`.  `Text.Pandoc` re-exports
  `def`.\n    Now you can use `def` (which is re-exported by `Text.Pandoc`) instead\n
  \   of `defaultWriterOptions` (which is still defined).  Closes #546.\n\n  * `Text.Pandoc.Shared`:\n\n
  \   + Added `safeRead`.\n    + Renamed `removedLeadingTrailingSpace` to `trim`,\n
  \     `removeLeadingSpace` to `triml`, and `removeTrailingSpace` to `trimr`.\n    +
  Count `\\r` as space in `trim` functions.\n    + Moved `renderTags'` from HTML reader
  and `Text.Pandoc.SelfContained`\n      to `Shared`.\n    + Removed `failUnlessLHS`.\n
  \   + Export `compactify'`, formerly in Markdown reader.\n    + Export `isTightList`.\n
  \   + Do not export `findDataFile`.\n    + `readDataFile` now returns a strict ByteString.\n
  \   + Export `readDataFileUTF8` which returns a String, like the\n      old `readDataFile`.\n
  \   + Export `fetchItem` and `openURL`.\n\n  * `Text.Pandoc.ImageSize`: Use strict,
  not lazy bytestrings.\n    Removed `readImageSize`.\n\n  * `Text.Pandoc.UTF8`: Export
  `encodePath`, `decodePath`,\n     `decodeArg`, `toString`, `fromString`, `toStringLazy`,\n
  \    `fromStringLazy`.\n\n  * `Text.Pandoc.UTF8` is now an exposed module.\n\n  *
  `Text.Pandoc.Biblio`:\n\n    + csl parameter now a `String` rather than a `FilePath`.\n
  \   + Changed type of `processBiblio`.  It is no longer in the IO monad.\n      It
  now takes a `Maybe Style` argument rather than parameters for CSL\n      and abbrev
  filenames.  (`pandoc.hs` now calls the functions to parse\n      the style file
  and add abbreviations.)\n\n  * Markdown reader now exports `readMarkdownWithWarnings`.\n\n
  \ * `Text.Pandoc.RTF` now exports `writeRTFWithEmbeddedImages` instead of\n    `rtfEmbedImage`.\n\n
  \ [bug fixes]\n\n  * Make `--ascii` work properly with `--self-contained`.  Closes
  #568.\n\n  * Markdown reader:\n\n    + Fixed link parser to avoid exponential slowdowns.
  \ Closes #620.\n      Previously the parser would hang on input like this:\n\n            [[[[[[[[[[[[[[[[[[hi\n\n
  \     We fixed this by making the link parser parser characters\n      between balanced
  brackets (skipping brackets in inline code spans),\n      then parsing the result
  as an inline list.  One change is that\n\n            [hi *there]* bud](/url)\n\n
  \     is now no longer parsed as a link.  But in this respect pandoc behaved\n      differently
  from most other implementations anyway, so that seems okay.\n\n    + Look for raw
  html/latex blocks before tables.\n      Otherwise the following gets parsed as a
  table:\n\n            \\begin{code}\n            --------------\n            --
  My comment.\n            \\end{code}\n\n      Closes #578.\n\n  * RST reader:\n\n
  \   + Added support for `:target:` on `.. image::` blocks\n      and substitutions.\n
  \   + Field list fixes:\n\n        - Fixed field lists items with body beginning
  after a new line\n          (Denis Laxalde).\n        - Allow any char but ':' in
  names of field lists in RST reader\n          (Denis Laxalde).\n        - Don't
  allow line breaks in field names.\n        - Require whitespace after field list
  field names.\n        - Don't create empty definition list for metadata field lists.\n
  \         Previously a field list consisting only of metadata fields (author,\n
  \         title, date) would be parsed as an empty DefinitionList, which is\n          not
  legal in LaTeX and not needed in any format.\n\n    + Don't recognize inline-markup
  starts inside words.\n      For example, `2*2 = 4*1` should not contain an emphasized\n
  \     section.  Added test case for \"Literal symbols\".  Closes #569.\n    + Allow
  dashes as separator in simple tables.  Closes #555.\n    + Added support for `container`,
  `compound`, `epigraph`,\n      `rubric`, `highlights`, `pull-quote`.\n    + Added
  support for `.. code::`.\n    + Made directive labels case-insensitive.\n    + Removed
  requirement that directives begin at left margin.\n      This was (correctly) not
  in earlier releases; docutils doesn't\n      make the requirement.\n    + Added
  support for `replace::` and `unicode::` substitutions.\n    + Ignore unknown interpreted
  roles.\n    + Renamed image parser to `subst`, since it now handles all\n      substitution
  references.\n\n  * Textile reader:\n\n    + Allow newlines before pipes in table.
  \ Closes #654.\n    + Fixed bug with list items containing line breaks.\n      Now
  pandoc correctly handles hard line breaks inside list items.\n      Previously they
  broke list parsing.\n    + Implemented comment blocks.\n    + Fixed bug affected
  words ending in hyphen.\n    + Properly handle links with surrounding brackets.\n
  \     Square brackets need to be used when the link isn't surrounded by\n      spaces
  or punctuation, or when the URL ending may be ambiguous.\n      Closes #564.\n    +
  Removed nullBlock.  Better to know about parsing problems than\n      to skip stuff
  when we get stuck.\n    + Allow ID attributes on headers.\n    + Textile reader:
  \ Avoid parsing dashes as strikeout.\n      Previously the input\n\n            text--\n
  \           text--\n            text--\n            text--\n\n      would be parsed
  with strikeouts rather than dashes. This fixes\n      the problem by requiring that
  a strikeout delimiting - not be\n      followed by a -.  Closes #631.\n    + Expanded
  list of `stringBreakers`.\n      This fixes a bug on input like \"(_hello_)\" which
  should\n      be a parenthesized emphasized \"hello\".\n      The new list is taken
  from the PHP source of textile 2.4.\n    + Fixed autolinks.  Previously the textile
  reader and writer\n      incorrectly implented RST-style autolinks for URLs and
  email\n      addresses.  This has been fixed.  Now an autolink is done this way:\n
  \     `\"$\":http://myurl.com`.\n    + Fixed footnotes bug in textile.  This affected
  notes occurring\n      before punctuation, e.g. `foo[1].`.  Closes #518.\n\n  *
  LaTeX reader:\n\n    + Better handling of citation commands.\n    + Better handling
  of `\\noindent`.\n    + Added a 'try' in rawLaTeXBlock, so we can handle `\\begin`
  without `{`.\n      Closes #622.\n    + Made `rawLaTeXInline` try to parse block
  commands as well.  This\n      is usually what we want, given how `rawLaTeXInline`
  is used in\n      the markdown and textile readers.  If a block-level LaTeX command\n
  \     is used in the middle of a paragraph (e.g. `\\subtitle` inside a title),\n
  \     we can treat it as raw inline LaTeX.\n    + Handle \\slash command.  Closes
  #605.\n    + Basic `\\enquote` support.\n    + Fixed parsing of paragraphs beginning
  with a group.  Closes #606.\n    + Use curly quotes for bare straight quotes.\n
  \   + Support obeylines environment.  Closes #604.\n    + Guard against \"begin\",
  \"end\" in inlineCommand and\n      blockCommand.\n    + Better error messages for
  environments.  Now it should tell you that\n      it was looking for \\end{env},
  instead of giving \"unknown parse error.\"\n\n  * HTML reader:\n\n    + Added HTML
  5 tags to list of block-level tags.\n    + HTML reader: Fixed bug in `htmlBalanced`,
  which\n      caused hangs in parsing certain markdown input using\n      strict
  mode.\n    + Parse `<q>` as `Quoted DoubleQuote`.\n    + Handle nested `<q>` tags
  properly.\n    + Modified `htmlTag` for fewer false positives.\n      A tag must
  start with `<` followed by `!`,`?`, `/`, or a letter.\n      This makes it more
  useful in the wikimedia and markdown parsers.\n\n  * DocBook reader: Support title
  in \"figure\" element.  Closes #650.\n\n  * MediaWiki writer:\n\n    + Remove newline
  after `<br/>` in translation of `LineBreak`\n      There's no particular need for
  a newline (other than making the\n      generated MediaWiki source look nice to
  a human), and in fact\n      sometimes it is incorrect: in particular, inside an
  enumeration, list\n      items cannot have embedded newline characters. (Brent Yorgey)\n
  \   + Use `<code>` not `<tt>` for Code.\n\n  * Man writer: Escape `-` as `\\-`.\n
  \   Unescaped `-`'s become hyphens, while `\\-`'s are left as ascii minus\n    signs.
  \ That is preferable for use with command-line options.  See\n    <http://lintian.debian.org/tags/hyphen-used-as-minus-sign.html>.
  \ Thanks\n    to Andrea Bolognani for bringing the issue to our attention.\n\n  *
  RST writer:\n\n    + Improved line block output. Use nonbreaking spaces for\n      initial
  indent (otherwise lost in HTML and LaTeX).\n      Allow multiple paragraphs in a
  single line block.\n      Allow soft breaks w continuations in line blocks.\n    +
  Properly handle images with no alt text.  Closes #678.\n    + Fixed bug with links
  with duplicate text.  We now (a) use anonymous\n      links for links with inline
  URLs, and (b) use an inline link instead\n      of a reference link if the reference
  link would require a label that\n      has already been used for a different link.
  \ Closes #511.\n    + Fixed hyperlinked images. Closes #611. Use `:target:`\n      field
  when you have a simple linked image.\n    + Don't add `:align: center` to figures.\n\n
  \ * Texinfo writer:  Fixed internal cross-references.\n    Now we insert anchors
  after each header, and use `@ref` instead of `@uref`\n    for links.  Commas are
  now escaped as `@comma{}` only when needed;\n    previously all commas were escaped.
  \ (This change is needed, in part,\n    because `@ref` commands must be followed
  by a real comma or period.) Also\n    insert a blank line in from of `@verbatim`
  environments.\n\n  * DocBook writer:\n\n    + Made --id-prefix work in DocBook as
  well as HTML.\n      Closes #607.\n    + Don't include empty captions in figures.
  \ Closes #581.\n\n  * LaTeX writer:\n\n    + Use `\\hspace*` for nonbreaking space
  after line break,\n      since `~` spaces after a line break are just ignored.\n
  \     Closes #687.\n    + Don't escape `_` in URLs or hyperref identifiers.\n    +
  Properly escape strings inside \\url{}.  Closes #576.\n    + Use `[fragile]` only
  for slides containing code rendered\n      using listings. Closes #649.\n    + Escape
  `|` as `\\vert` in LaTeX math.  This avoids a clash with\n      highlighting-kate's
  macros, which redefine `|` as a short verbatim\n      delimiter.  Thanks to Björn
  Peemöller for raising this issue.\n    + Use minipage rather than parbox for block
  containers in tables.\n      This allows verbatim code to be included in grid tables.\n
  \     Closes #663.\n    + Prevent paragraphs containing only linebreaks or spaces.\n\n
  \ * HTML writer:\n\n    + Included `highlighting-css` for code spans, too.\n      Previously
  it was only included if used in a code block.  Closes #653.\n    + Improved line
  breaks with `<dd>` tags.  We now put a newline between\n      `</dd>` and `<dd>`
  when there are multiple definitions.\n    + Changed mathjax cdn url so it doesn't
  use https.  (This caused\n      problems when used with `--self-contained`.) See
  #609.\n\n  * EPUB writer:\n\n    + `--number-sections` now works properly.\n    +
  Don't strip meta and link elements in epub metadata.\n      Patch from aberrancy.
  Closes #589.\n    + Fixed a couple validation bugs.\n    + Use ch001, ch002, etc.
  for chapter filenames.  This improves sorting\n      of chapters in some readers,
  which apparently sort ch2 after ch10.\n      Closes #610.\n\n  * ODT writer: properly
  set title property (Arlo O'Keeffe).\n\n  * Docx writer:\n\n    + Fixed bug with
  nested lists.  Previously a list like\n\n            1. one\n                - a\n
  \               - b\n            2. two\n\n      would come out with a bullet instead
  of \"2.\"\n      Thanks to Russell Allen for reporting the bug.\n    + Use `w:cr`
  in `w:r` instead of `w:br` for linebreaks.\n      This seems to fix a problem viewing
  pandoc-generated\n      docx files in LibreOffice.\n    + Use integer ids for bookmarks.
  \ Closes #626.\n    + Added nsid to abstractNum elements.  This helps when merging\n
  \     word documents with numbered or bulleted lists.  Closes #627.\n    + Use separate
  footnotes.xml for notes.\n      This seems to help LibreOffice convert the file,
  even though\n      it was valid docx before.  Closes #637.\n    + Use rIdNN identifiers
  for r:embed in images.\n    + Avoid reading image files again when we've already
  processed them.\n    + Fixed typo in `referenc.docx` that prevented image captions
  from\n      working. Thanks to Huashan Chen.\n\n  * `Text.Pandoc.Parsing`:\n\n    +
  Fixed bug in `withRaw`, which didn't correctly handle the case\n      where nothing
  is parsed.\n    + Made `emailAddress` parser more correct.  Now it is based on RFC
  822,\n      though it still doesn't implement quoted strings in email addresses.\n
  \   + Revised URI parser.  It now allows many more schemes, allows\n      uppercase
  URIs, and better handles trailing punctuation and\n      trailing slashes in bare
  URIs.  Added many tests.\n    + Simplified and improved singleQuoteStart.  This
  makes `'s'`, `'l'`,\n      etc. parse properly.  Formerly we had some English-centric
  heuristics,\n      but they are no longer needed. Closes #698.\n\n  * `Text.Pandoc.Pretty`:
  \ Added wide punctuation range to `charWidth`.\n    This fixes bug with Chinese
  commas in markdown and reST tables, and\n    a bug that caused combining characters
  to be dropped.\n\n  * `Text.Pandoc.MIME`: Added MIME types for .wof and .eot.  Closes
  #640.\n\n  * `Text.Pandoc.Biblio`:\n\n    + Run `mvPunc` and `deNote` on metadata
  too.\n      This fixed a bug with notes on titles using footnote styles.\n    +
  Fixed bug in fetching CSL files from CSL data directory.\n\n  * `pandoc.hs`:  Give
  correct value to `writerSourceDirectory` when a URL\n    is provided.  It should
  be the URL up to the path.\n\n  * Fixed/simplified diff output for tests.\n    Biblio:
  Make sure mvPunc and deNote run on metadata too.\n    This fixed a bug with notes
  on titles using footnote styles.\n\n  [under the hood improvements]\n\n  * We no
  longer depend on `utf8-string`.  Instead we use functions\n    defined in `Text.Pandoc.UTF8`
  that use `Data.Text`'s conversions.\n\n  * Use `safeRead` instead of using `reads`
  directly (various modules).\n\n  * \"Implicit figures\" (images alone in a paragraph)
  are now handled\n    differently.  The markdown reader gives their titles the prefix
  `fig:`; the\n    writers look for this before treating the image as a figure.  Though
  this\n    is a bit of a hack, it has two advantages: (i) implicit figures can be\n
  \   limited to the markdown reader, and (ii) they can be deactivated by turning\n
  \   off the `implicit_figures` extension.\n\n  * `catch` from `Control.Exception`
  is now used instead of the\n    old Preface `catch`.\n\n  * `Text.Pandoc.Shared`:
  \ Improved algorithm for `normalizeSpaces`\n    and `oneOfStrings` (which is now
  non-backtracking).\n\n  * `Text.Pandoc.Biblio`: Remove workaround for `toCapital`.\n
  \   Now citeproc-hs is fixed upstream, so this is no longer needed.\n    Closes
  #531.\n\n  * Textile reader: Improved speed of `hyphenedWords`.\n    This speeds
  up the textile  reader by about a factor of 4.\n\n  * Use `Text.Pandoc.Builder`
  in RST reader, for more flexibility,\n    better performance, and automatic normalization.\n\n
  \ * Major rewrite of markdown reader:\n\n    + Use `Text.Pandoc.Builder` instead
  of lists.  This also\n      means that everything is normalized automatically.\n
  \   + Move to a one-pass parsing strategy, returning values in the reader\n      monad,
  which are then run (at the end of parsing) against the final\n      parser state.\n\n
  \ * In HTML writer, we now use `toHtml` instead of pre-escaping.\n    We work around
  the problem that blaze-html unnecessarily escapes `'`\n    by pre-escaping just
  the `'` characters, instead of the whole string.\n    If blaze-html later stops
  escaping `'` characters, we can simplify\n    `strToHtml` to `toHtml`.  Closes #629.\n\n
  \ * Moved code for embedding images in RTFs from `pandoc.hs` to the\n    RTF writer
  (which now exports `writeRTFWithEmbeddedImages`).\n\n  * Moved citation processing
  from `pandoc.hs` into the readers.\n    This makes things more convenient for library
  users.\n\n  * The man pages are now built by an executable `make-pandoc-man-pages`,\n
  \   which has its own stanza in the cabal file so that dependencies can be\n    handled
  by Cabal. Special treatment in `Setup.hs` ensures that this\n    executable never
  gets installed; it is only used to create the man pages.\n\n  * The cabal file has
  been modified so that the pandoc library is used\n    in building the pandoc executable.
  \ (This required moving `pandoc.hs`\n    from `src` to `.`.)  This cuts compile
  time in half.\n\n  * `-O2` is no longer used in building pandoc.  The performance
  improvement\n    it yields is so slight that it is not worth it.  (Measured with\n
  \   benchmarks on ghc 7.4.)\n\n  * The `executable` and `library` flags have been
  removed.\n\n  * `-threaded` has been removed from ghc-options.\n\n  * Version bounds
  of dependencies have been raised, and the\n    `blaze_html_0_5` flag now defaults
  to True.  Pandoc now compiles on\n    GHC 7.6.\n\n  * We now require base >= 4.2.\n\n
  \ * Integrated the benchmark program into cabal.  One can now do:\n\n        cabal
  configure --enable-benchmarks && cabal build\n        cabal bench --benchmark-option='markdown'
  --benchmark-option='-s 20'\n\n    The benchmark now uses README + testsuite, so
  benchmark results\n    from older versions aren't comparable.\n\n  * Integrated
  test suite with cabal.\n    To run tests, configure with `--enable-tests`, then
  `cabal test`.\n    You can specify particular tests using `--test-options='-t markdown'`.\n
  \   No output is shown unless tests fail.  The Haskell test modules\n    have been
  moved from `src/` to `tests/`.\n\n  * Moved all data files and templates to the
  `data/` subdirectory.\n\n  * Added an `embed_data_files` cabal flag.  This causes
  all\n    data files to be embedded in the binary, so that the binary\n    is self-sufficient
  and can be relocated anywhere, copied on\n    a USB key, etc.  The Windows installer
  now uses this.\n    (Since we no longer have the option to build the executable\n
  \   without the library, this is the only way to get a relocatable\n    binary on
  Windows.)\n\n  * Removed pcre3.dll from windows package.\n    It isn't needed unless
  highlighting-kate is compilled with the\n    `pcre-light` flag. By default, regex-prce-builtin
  is used.\n\n\npandoc (1.9.4.2)\n\n  * Don't encode/decode file paths if base >=
  4.4.\n    Prior to base 4.4, filepaths and command line arguments were treated\n
  \   as unencoded lists of bytes, not unicode strings, so we had to work\n    around
  that by encoding and decoding them. This commit adds CPP\n    checks for the base
  version that intelligibly enable encoding/decoding\n    when needed. Fixes a bug
  with multilingual filenames when pandoc was\n    compiled with ghc 7.4 (#540).\n\n
  \ * Don't generate an empty H1 after hrule slide breaks.\n    We now use a slide-level
  header with contents `[Str \"\\0\"]` to mark\n    an hrule break.  This avoids creation
  of an empty H1 in these\n    contexts.  Closes #484.\n\n  * Docbook reader: Added
  support for \"bold\" emphasis.  Thanks to Mauro Bieg.\n\n  * In make_osx_package.sh,
  ensure citeproc-hs is built with the\n    embed_data_files flag.\n\n  * MediaWiki
  writer: Avoid extra blank lines after sublists (Gavin Beatty).\n\n  * ConTeXt writer:
  Don't escape `&`, `^`, `<`, `>`, `_`,\n    simplified escapes for `}` and `{` to
  `\\{` and `\\}` (Aditya Mahajan).\n\n  * Fixed handling of absolute URLs in CSS
  imports with `--self-contained`.\n    Closes #535.\n\n  * Added webm to mime types.
  Closes #543.\n\n  * Added some missing exports and tests to the cabal file\n    (Alexander
  V Vershilov).\n\n  * Compile with `-rtsopts` and `-threaded` by default.\n\npandoc
  (1.9.4.1)\n\n  * Markdown reader: Added `cf.` and `cp.` to list of likely abbreviations.\n\n
  \ * LaTeX template: Added `linkcolor`, `urlcolor` and `links-as-notes`\n    variables.
  \ Make TOC links black.\n\n  * LaTeX template improvements.\n\n    + Don't print
  date unless one is given explicitly in the document.\n    + Simplified templates.\n
  \   + Use fontenc [T1] by default, and lmodern.\n    + Use microtype if available.\n\n
  \ * Biblio:\n\n    + Add comma to beginning of bare suffix, e.g. `@item1 [50]`.\n
  \     Motivation: `@item1 [50]` should be as close as possible to\n      `[@item1,
  50]`.\n    + Added workaround for a bug in citeproc-hs 0.3.4 that causes footnotes\n
  \     beginning with a citation to be empty.  Closes #531.\n\n  * Fixed documentation
  on mixed lists.  Closes #533.\n\npandoc (1.9.4)\n\n  * Simplified `Text.Pandoc.Biblio`
  and fixed bugs with citations inside\n    footnotes and captions.  We now handle
  note citations by inserting\n    footnotes during initial citation processing, and
  doing a separate\n    pass later to remove notes inside notes.\n\n  * Added 'zenburn'
  highlight style from highlighting-kate.\n\n  * Added Slideous writer. Slideous is
  an HTML + javascript slide show\n    format, similar to Slidy, but works with IE
  7. (Jonas Smedegaard)\n\n  * LaTeX writer:\n\n    + Ensure we don't have extra blank
  lines at ends of cells.\n      This can cause LaTeX errors, as they are interpreted
  as new paragraphs.\n    + More consistent interblock spacing.\n    + Require highlighting-kate
  >= 0.5.1, for proper highlighted inline\n      code in LaTeX.  Closes #527.\n    +
  Ensure that a Verbatim at the end of a footnote is followed by\n      a newline.
  (Fixes a regression in the previous version.)\n    + In default template, use black
  for internal links and TOC.\n      Added commented-out code to use footnotes for
  links, as would\n      be suitable in print output.\n\n  * Beamer writer:  When
  `--incremental` is used, lists inside\n    a block quote should appear all at once.
  \ (This makes Beamer\n    output consistent with the HTML slide show formats.)\n\n
  \ * ConTeXt writer:\n\n    + Escape `%` as `\\letterpercent{}` not `\\letterpercent
  `,\n      to avoid gobbling spaces after the `%` sign.\n    + Ensure space after
  `\\stopformula`.\n\n  * Markdown writer:\n\n    + Use `:` form instead of `~` in
  definition lists, for better\n      compatibility with other markdown implementations.\n
  \   + Don't wrap the term, because it breaks definition lists.\n    + Use a nonzero
  space to prevent false recognition\n      of list marker in ordered lists.  Closes
  #516.\n\n  * Org writer: Add space before language name.  Closes #523.\n\n  * Docx
  writer: Simplified bullet characters so they work properly\n    with Word 2007.
  Closes #520.\n\n  * LaTeX reader: Support `\\centerline`.\n\n  * RST reader:  handle
  figures.  Closes #522.\n\n  * Textile reader: fix for `<notextile>` and `==`.  Closes
  #517.\n    (Paul Rivier)\n\npandoc (1.9.3)\n\n  * Fixed bug in `fromEntities`.  The
  previous version would turn\n    `hi & low you know;` into `hi &`.\n\n  * HTML reader:\n\n
  \   + Don't skip nonbreaking spaces.\n      Previously a paragraph containing just
  `&nbsp;` would be rendered\n      as an empty paragraph. Thanks to Paul Vorbach
  for pointing out the bug.\n    + Support `<col>` and `<caption>` in tables. Closes
  #486.\n\n  * Markdown reader:\n\n    + Don't recognize references inside delimited
  code blocks.\n    + Allow list items to begin with lists.\n\n  * Added basic docbook
  reader (John MacFarlane and Mauro Bieg).\n\n  * LaTeX reader:\n\n    + Handle `\\bgroup`,
  `\\egroup`, `\\begingroup`, `\\endgroup`.\n    + Control sequences can't be followed
  by a letter.\n      This fixes a bug where `\\begingroup` was parsed as `\\begin`\n
  \     followed by `group`.\n    + Parse 'dimension' arguments to unknown commands.
  \ e.g. `\\parindent0pt`\n    + Make `\\label` and `\\ref` sensitive to `--parse-raw`.\n
  \     If `--parse-raw` is selected, these will be parsed as raw latex\n      inlines,
  rather than bracketed text.\n    + Don't crash on unknown block commands (like `\\vspace{10pt}`)\n
  \     inside `\\author`; just skip them.  Closes #505.\n\n  * Textile reader:\n\n
  \   + Implemented literal escapes with `==` and `<notextile>`.  Closes #473.\n    +
  Added support for LaTeX blocks and inlines (Paul Rivier).\n    + Better conformance
  to RedCloth inline parsing (Paul Rivier).\n    + Parse '+text+' as emphasized (should
  be underlined, but this\n      is better than leaving literal plus characters in
  the output.\n\n  * Docx writer: Fixed multi-paragraph list items.  Previously they
  each\n    got a list marker.  Closes #457.\n\n  * LaTeX writer:\n\n    + Added `--no-tex-ligatures`
  option to avoid replacing\n      quotation marks and dashes with TeX ligatures.\n
  \   + Use `fixltx2e` package to provide '\\textsubscript'.\n    + Improve spacing
  around LaTeX block environments:\n      quote, verbatim, itemize, description, enumerate.\n
  \     Closes #502.\n    + Use blue instead of pink for URL links in latex/pdf output.\n\n
  \ * ConTeXt writer: Fixed escaping of `%`.\n    In text, `%` needs to be escaped
  as `\\letterpercent`, not `\\%`\n    Inside URLs, `%` needs to be escaped as `\\%`\n
  \   Thanks to jmarca and adityam for the fix.  Closes #492.\n\n  * Texinfo writer:
  \ Escape special characters in node titles.\n    This fixes a problem pointed out
  by Joost Kremers.  Pandoc used\n    to escape an '@' in a chapter title, but not
  in the corresponding\n    node title, leading to invalid texinfo.\n\n  * Fixed document
  encoding in texinfo template.\n    Resolves Debian Bug #667816.\n\n  * Markdown
  writer:\n\n    + Don't force delimited code blocks to be flush left.\n      Fixes
  bug with delimited code blocks inside lists etc.\n    + Escape `<` and `$`.\n\n
  \ * LaTeX writer: Use `\\hyperref[ident]{text}` for internal links.\n    Previously
  we used `\\href{\\#ident}{text}`, which didn't work on\n    all systems. Thanks
  to Dirk Laurie.\n\n  * RST writer: Don't wrap link references.  Closes #487.\n\n
  \ * Updated to use latest versions of blaze-html, mtl.\n\n\npandoc (1.9.2)\n\n  *
  LaTeX reader:\n\n    + Made `lstlisting` work as a proper verbatim environment.\n
  \   + Fixed bug parsing LaTeX tables with one column.\n\n  * LaTeX writer:\n\n    +
  Use `{}` around `ctable` caption, so that formatting can be used.\n    + Don't require
  eurosym package unless document has a €.\n\n  * LaTeX template: Added variables
  for `geometry`, `romanfont`,\n    `sansfont`, `mathfont`, `mainfont` so users can
  more easily\n    customize fonts.\n\n  * PDF writer:\n\n    + Run latex engine at
  least two times, to ensure\n      that PDFs will have hyperlinked bookmarks.\n    +
  Added PDF metadata (title,author) in LaTeX standalone + PDF output.\n\n  * Texinfo
  writer: retain directories in image paths.  (Peter Wang)\n\n  * RST writer:  Better
  handling of inline formatting, in accord\n    with docutils' \"inline markup recognition
  rules\" (though we don't\n    implement the unicode rules fully). Now `hi*there*hi`
  gets\n    rendered properly as `hi\\ *there*\\ hi`, and unnecessary\n    `\\ ` are
  avoided around `:math:`, `:sub:`, `:sup:`.\n\n  * RST reader:\n\n    + Parse `\\
  ` as null, not escaped space.\n    + Allow `` :math:`...` `` even when not followed
  by blank\n      or `\\`.  This does not implement the complex rule docutils follows,\n
  \     but it should be good enough for most purposes.\n    + Add support for the
  rST default-role directive. (Greg Maslov)\n\n  * Text.Pandoc.Parsing: Added `stateRstDefaultRole`
  field to `ParserState`.\n    (Greg Maslov)\n\n  * Markdown reader: Properly handle
  citations nested in other inline\n    elements.\n\n  * Markdown writer:  don't replace
  empty alt in image with \"image\".\n\n  * DZSlides:  Updated template.html and styles
  in default template.\n    Removed bizarre CSS for `q` in dzslides template.\n\n
  \ * Avoid repeated `id` attribute in section and header in HTML slides.\n\n  * README
  improvements:  new instructions on internal links,\n    removed misleading note
  on reST math.\n\n  * Build system:\n\n    + Fixed Windows installer so that dzslides
  works.\n    + Removed stripansi.sh.\n    + Added .travis.yml for Travis continuous
  integration support..\n    + Fixed upper bound for zlib (Sergei Trofimovich).\n
  \   + Fixed upper bound for test-framework.\n    + Updated haddocks for haddock-2.10
  (Sergei Trofimovich).\n\npandoc (1.9.1.2)\n\n  * Added `beamer+lhs` as output format.\n\n
  \ * Don't escape `<` in `<style>` tags with `--self-contained`.\n    This fixes
  a bug which prevented highlighting from working\n    when using `--self-contained`.\n\n
  \ * PDF: run latex engine three times if `--toc` specified.\n    This fixes page
  numbers in the table of contents.\n\n  * Docx writer: Added TableNormal style to
  tables.\n\n  * LaTeX math environment fixes. `aligned` is now used instead of\n
  \   the nonexistent `aligned*`. `multline` instead of the nonexistent\n    `multiline`.\n\n
  \ * LaTeX writer: Use `\\textasciitilde` for literal `~`.\n\n  * HTML writer: Don't
  escape contents of EQ tags with --gladtex.\n    This fixes a regression from 1.8.\n\n
  \ * Use `<q>` tags for Quoted items for HTML5 output.\n    The quote style can be
  changed by modifying the template\n    or including a css file. A default quote
  style is included.\n\n  * LaTeX reader: Fixed accents (\\~{a}, `\\c{c}`).\n    Correctly
  handle \\^{}. Support \"minted\" as a LaTeX verbatim block.\n\n  * Updated LaTeX
  template for better language support.\n    Use `polyglossia` instead of `babel`
  with xetex.\n    Set `lang` as documentclass option.\n    `\\setmainlanguage` will
  use the last of a comma-separated\n    list of languages. Thanks to François Gannaz.\n\n
  \ * Fixed default LaTeX template so `\\euro` and `€` work.  The\n    `eurosym` package
  is needed if you are using pdflatex.\n\n  * Fixed escaping of period in man writer
  (thanks to Michael Thompson).\n\n  * Fixed list label positions in beamer.\n\n  *
  Set `mainlang` variable in context writer.\n    This parallels behavior of latex
  writer.  `mainlang` is the last\n    of a comma-separated list of languages in lang.\n\n
  \ * EPUB language metadat: convert e.g. `en_US` from locale to `en-US`.\n\n  * Changed
  `-V` so that you can specify a key without a value.\n    Such keys get the value
  `true`.\n\n  * Fixed permissions on installed man pages - thanks Magnus Therning.\n\n
  \ * Windows installer: require XP or higher.  The installer is\n    now compiled
  on a Windows 7 machine, which fixes a problem\n    using citation functions on Windows
  7.\n\n  * OSX package: Check for 64-bit Intel CPU before installing.\n\npandoc (1.9.1.1)\n\n
  \ * Better handling of raw latex environments in markdown.  Now\n\n        \\begin{equation}\n
  \       a_1\n        \\end{equation}\n\n    turns into a raw latex block as expected.\n\n
  \ * Improvements to LaTeX reader:\n\n    + Skip options after block commands.\n
  \   + Correctly handle `{\\\\}` in braced.\n    + Added a needed 'try'.\n    + Citations:
  add `, ` to suffix if it doesn't start with space or\n      punctuation. Otherwise
  we get no space between the year and the\n      suffix in author-date styles.\n\n
  \ * Added two needed data files for S5.  This fixes a problem with\n    `pandoc
  -t s5 --self-contained`.  Also removed `slides.min.js`,\n    which was no longer
  being used.\n\n  * Fixed some minor problems in `reference.docx`:\n    name on \"Date\"
  style, `xCs` instead of `xIs`.\n\n  * Fixed a problem creating docx files using
  a reference docx\n    modified using Word.  The problem seems to be that Word\n
  \   modifies `_rels/.rels`, changing the Type of the Relationship to\n    `docProps/core.xml`.
  Pandoc now changes this back to the correct\n    value if it has been altered, fixing
  the problem.\n\n  * Fixed html5 template so it works properly with highlighting.\n\npandoc
  (1.9.1)\n\n  * LaTeX reader:\n\n    + Fixed regression in 1.9; properly handle escaped
  $ in latex math.\n    + Put LaTeX verse environments in blockquotes.\n\n  * Markdown
  reader:\n\n    + Limit nesting of strong/emph.  This avoids exponential lookahead\n
  \     in parasitic cases, like `a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**`.\n    +
  Improved attributes syntax (inn code blocks/spans):\n      (1) Attributes can contain
  line breaks. (2) Values in key-value\n      attributes can be surrounded by either
  double or single quotes, or\n      left unquoted if they contain no spaces.\n\n
  \ * Don't wrap headers in markdown or RST writers.\n\n  * Added `stateMaxNestingLevel`
  to `ParserState`.\n    We set this to 6, so you can still have `Emph` inside `Emph`,\n
  \   just not indefinitely.\n\n  * More efficient implementation of `nowrap` in `Text.Pandoc.Pretty`.\n\n
  \ * `Text.Pandoc.PDF`:  Only run latex twice if `\\tableofcontents`\n    is present.\n\n
  \ * Require highlighting-kate >= 0.5.0.2, texmath >= 0.6.0.2.\n\npandoc (1.9.0.5)\n\n
  \ * Changed cabal file so that build-depends for the test program\n    are not required
  unless the tests flag is used.\n\n  * LaTeX writer:  insert `{}` between adjacent
  hyphens so they don't\n    form ligatures (dashes) in code spans.\n\npandoc (1.9.0.4)\n\n
  \ * Raised version bound on test-framework to avoid problems\n    compiling tests
  on GHC 7.4.1.\n\n  * LaTeX reader: Use raw LaTeX as fallback inline text for Cites,\n
  \   so citations don't just disappear unless you process with\n    citeproc.  Ignore
  `\\bibliographystyle`, `\\nocite`.\n\n  * Simplified tex2pdf; it will always run
  latex twice to\n    resolve table of contents and hyperrefs.\n\npandoc (1.9.0.3)\n\n
  \ * Require Cabal >= 1.10.\n  * Tweaked cabal file to meet Cabal 1.10 requirements.\n\npandoc
  (1.9.0.2)\n\n  * Allow build with json 0.4 or 0.5.  Otherwise we can't build with\n
  \   ghc 6.12.\n\npandoc (1.9)\n\n  [new features]\n\n  * Added a Microsoft Word
  `docx` writer. The writer includes support\n    for highlighted code and for math
  (which is converted from TeX to OMML,\n    Office's native math markup language,
  using texmath's new OMML module).\n    A new option `--reference-docx` allows the
  user to customize the\n    styles.\n\n  * Added an `asciidoc` writer (<http://www.methods.co.nz/asciidoc/>).\n\n
  \ * Better support for slide shows:\n\n    + Added a `dzslides` writer. DZSlides
  is a lightweight HTML5/javascript\n      slide show format due to Paul Rouget (<http://paulrouget.com/dzslides/>).\n\n
  \   + Added a LaTeX `beamer` writer. Beamer is a LaTeX package for creating\n      slide
  presentations.\n\n    + New, flexible rules for dividing documents into sections
  and slides\n      (see the \"Structuring the slide show\" in the User's Guide).
  \ These\n      are backward-compatible with the old rules, but they allow slide\n
  \     shows to be organized into sections and subsections containing\n      multiple
  slides.\n\n    + A new `--slide-level` option allows users to override defaults\n
  \     and select a slide level below the first header level with content.\n\n  *
  A new `--self-contained` option produces HTML output that does not\n    depend on
  an internet connection or the presence of any external\n    files. Linked images,
  CSS, and javascript is downloaded (or fetched\n    locally) and encoded in `data:`
  URIs. This is useful for making portable\n    `HTML slide shows. The --offline`
  option has been deprecated and is now\n    `treated as a synonym or --self-contained`.\n\n
  \ * Support for PDF output:\n\n    + Removed the old `markdown2pdf`.\n    + `pandoc`
  can now create PDFs (assuming you have latex and a set of\n      appropriate packages
  installed): just specify an output file with the\n      `.pdf` extension.\n    +
  A new option `--latex-engine` allows you to specify `pdflatex`,\n      `xelatex`,
  or `lualatex` as the processor.\n\n  * Highlighting changes:\n\n    + Syntax highlighting
  is now a standard feature; the `highlighting`\n      flag is no longer needed when
  compiling.\n    + A new `--no-highlight` option allows highlighting to be disabled.\n
  \   + Highlighting now works in `docx`, `latex`, and `epub`, as well as\n      `html`,
  `html5`, `dzslides`, `s5`, and `slidy`.\n    + A new `--highlight-style` option
  selects between various highlighting\n      color themes.\n\n  * Internal links
  to sections now work in ConTeXt and LaTeX as well as HTML.\n\n  * LaTeX `\\include`
  and `\\usepackage` commands are now processed,\n    provided the files are in the
  working directory.\n\n  * EPUB improvements:\n\n    + Internal and external links
  now work in EPUB.\n    + Raw HTML is allowed.\n    + New `--epub-embed-font` option.\n
  \   + Customizable templates for EPUB pages offer more control over\n      formatting:
  `epub-page.html`, `epub-coverimage.html`,\n      `epub-titlepage.html`.\n\n  * `--mathml`
  now works with DocBook.\n\n  * Added support for math in RST reader and writer.
  \ Inline math uses the\n    `` :math:`...` `` construct.  Display math uses\n\n
  \       .. math:: ...\n\n    or if the math is multiline,\n\n        .. math::\n\n
  \          ...\n\n    These constructions are now supported now by `rst2latex.py`.\n\n
  \ * GitHub syntax for fenced code blocks is supported in pandoc's\n    markdown.
  \ You can now write\n\n        ```ruby\n        x = 2\n        ```\n\n    instead
  of\n\n        ~~~ {.ruby}\n        x = 2\n        ~~~~\n\n  * Easier scripting:
  \ a new `toJsonFilter` function makes it easier to\n    write Haskell scripts to
  manipulate the Pandoc AST.\n\n  [behavior changes]\n\n  * Fixed parsing of consecutive
  lists in markdown.\n    Pandoc previously behaved like Markdown.pl for consecutive\n
  \   lists of different styles. Thus, the following would be parsed\n    as a single
  ordered list, rather than an ordered list followed\n    by an unordered list:\n\n
  \       1. one\n        2. two\n\n        - one\n        - two\n\n    This change
  makes pandoc behave more sensibly, parsing this as\n    two lists.  Any change in
  list type (ordered/unordered) or in\n    list number style will trigger a new list.
  Thus, the following\n    will also be parsed as two lists:\n\n        1. one\n        2.
  two\n\n        a. one\n        b. two\n\n    Since we regard this as a bug in Markdown.pl,
  and not something\n    anyone would ever rely on, we do not preserve the old behavior\n
  \   even when `--strict` is selected.\n\n  * Dashes work differently with `--smart`:
  `---` is always em-dash,\n    and `--` is always en-dash.  Pandoc no longer tries
  to guess when\n    `-` should be en-dash.  *Note:* This may change how existing
  documents\n    look when processed with pandoc. A new option, `--old-dashes`,\n
  \   is provided for legacy documents.\n\n  * The markdown writer now uses setext
  headers for levels 1-2.\n    The old behavior (ATX headers for all levels) can be
  restored\n    using the new `--atx-headers` option.\n\n  * Links are now allowed
  in markdown image captions.  They are also\n    allowed in links, but will appear
  there as regular text. So,\n\n        [link with [link](/url)](/url)\n\n    will
  turn into\n\n        <p><a href=\"/url\">link with link</a></p>\n\n  * Improved
  handling of citations using `citeproc-hs-0.3.4`.\n    Added `--citation-abbreviations`
  option.\n\n  * Citation keys can no longer end with a punctuation character.\n    This
  means that `@item1.` will be parsed as a citation with key\n    'item1', followed
  by a period, instead of a citation with key\n    'item1.', as was the case previously.\n\n
  \ * In HTML output, citations are now put in a span with class `citation`.\n\n  *
  The markdown reader now recognizes DocBook block and inline tags.\n    It was always
  possible to include raw DocBook tags in a markdown\n    document, but now pandoc
  will be able to distinguish block from\n    inline tags and behave accordingly.
  Thus, for example,\n\n        <sidebar>\n        hello\n        </sidebar>\n\n    will
  not be wrapped in `<para>` tags.\n\n  * The LaTeX parser has been completely rewritten;
  it is now much more\n    accurate, robust, and extensible. However, there are two
  important\n    changes in how it treats unknown LaTeX. (1) Previously, unknown\n
  \   environments became BlockQuote elements; now, they are treated\n    as \"transparent\",
  so `\\begin{unknown}xyz\\end{unknown}` is the\n    same as `xyz`.  (2) Previously,
  arguments of unknown commands\n    were passed through with their braces; now the
  braces are stripped\n    off.\n\n  * `--smart` is no longer selected automatically
  with `man` output.\n\n  * The deprecated `--xetex` option has been removed.\n\n
  \ * The `--html5`/`-5` option has been deprecated. Use `-t html5`\n    instead.
  `html5` and `html5+lhs` are now separate output formats.\n\n  * Single quotes are
  no longer escaped in HTML output.  They do not\n    need to be escaped outside of
  attributes.\n\n  * Pandoc will no longer transform leading newlines in code\n    blocks
  to `<br/>` tags.\n\n  * The ODT writer now sizes images appropriately, using the
  image\n    size and DPI information embedded in the image.\n\n  * `--standalone`
  is once again implicitly for a non-text output format\n    (ODT, EPUB).  You can
  again do `pandoc test.txt -o test.odt`\n    and get a standalone ODT file.\n\n  *
  The Docbook writer now uses `<sect1>`, `<sect2>`, etc. instead of\n    `<section>`.\n\n
  \ * The HTML writer now uses `<del>` for strikeout.\n\n  * In HTML output with `--section-divs`,
  the classes `section` and\n    `level[1,2,..6]` are put on the `div` tags so they
  can be styled.\n    In HTML 5 output with `--section-divs`, the classes\n    `level[1,2,...6]`
  are put on `section` tags.\n\n  * EPUB writer changes:\n\n    + The `lang` variable
  now sets the language\n      in the metadata (if it is not set, we default to the
  locale).\n    + EPUB:  UTF-8 is used rather than decimal entities.\n\n  * Added
  `titleslide` class to title slide in S5 template.\n\n  * In HTML, EPUB, and docx
  metadata, the date is normalized into\n    YYYY-MM-DD format if possible. (This
  is required for validation.)\n\n  * Attributes in highlighted code blocks are now
  preserved in HTML.\n    The container element will have the classes, id, and key-value
  attributes\n    you specified in the delimited code block. Previously these were
  stripped\n    off.\n\n  * The reference backlink in the HTML writer no longer has
  a special\n    `footnoteBacklink` class.\n\n  * The HTML template has been split
  into `html` and `html5` templates.\n\n  * Author and date are treated more consistently
  in HTML templates.\n    Authors are now `<h2>`, date `<h3>`.\n\n  * URLs are hyphenated
  in the ConTeXt writer (B. Scott Michel).\n\n  * In `Text.Pandoc.Builder`, `+++`
  has been replaced by `<>`.\n\n  [bug fixes]\n\n  * Better support for combining
  characters and East Asian wide characters\n    in markdown and reST.\n\n  * Better
  handling of single quotes with `--smart`.\n    Previously `D'oh l'*aide*` would
  be parsed with left and right single\n    quotes instead of apostrophes. This kind
  of error is now fixed.\n\n  * Highlighting: Use `reads` instead of `read` for better
  error handling.\n    Fixes crash on `startNum=\"abc\"`.\n\n  * Added blank comment
  after directives in rst template.\n\n  * Unescape entities in citation `refId`.
  The `refId`s coming\n    from citeproc contain XML numeric entities, and these don't
  match with the\n    citation keys parsed by pandoc. Solution is to unescape them.\n\n
  \ * HTML reader: Fixed bug parsing tables with both thead and tbody.\n\n  * Markdown
  reader:\n\n    + Better handling of escapes in link URLs and titles.\n    + Fixed
  backslash escapes in reference links.\n    + Fixed bug in table/hrule parsing, by
  checking that the top\n      line of a table is not followed by a blank line. This
  bug caused\n      slowdowns on some files with hrules and tables, as pandoc tried
  to\n      interpret the hrules as the tops of multiline tables.\n    + Fixed bug
  in code block attribute parser. Previously the ID attribute\n      got lost if it
  didn't come first. Now attributes can come in any order.\n\n  * RST reader: allow
  footnotes followed by newline without space characters.\n\n  * LaTeX reader:\n\n
  \   + Ignore empty groups {}, { }.\n    + LaTeX reader: Handle \\@.\n    + LaTeX
  reader:  Don't crash on commands like `\\itemsep`.\n    + LaTeX reader:  Better
  handling of letter environments.\n\n  * RST writer: Fixed bug involving empty table
  cells. isSimple was being\n    calculated in a way that assumed there were no non-empty
  cells.\n\n  * ConTeXt writer:\n\n    + Made `--toc` work even without `--number-sections`.\n
  \   + Escape # in link URLs.\n    + Use buffering for footnotes containing code
  blocks.\n    + Changed 'descr' to 'description', fixed alignment.\n\n  * LaTeX writer:\n\n
  \   + Escape euro character.\n    + Don't escape ~ inside href{...}.\n    + Escape
  # in href URLs.\n    + Improved detection of book classes.  We now check the\n      `documentclass`
  variable, and if that is not set, we look through\n      the template itself.  Also,
  we have added the KOMA classes scrreprt\n      and scrbook.  You can now make a
  book using\n      `pandoc -V documentclass:book mybook.txt -o mybook.pdf`\n    +
  LHS files now set the \"listings\" variable, so that the definition\n      of the
  `code` environment will be included in the template.\n    + Links are colored blue
  by default (this can be changed by\n      modifying `hyperref` settings in the template).\n
  \   + Added `lang` variable to LaTeX template.\n\n  * HTML writer:\n\n    + Fixed
  bug in HTML template with html5 and mathml.\n    + Don't use self-closing img, br,
  hr tags for HTML5.\n    + Use `<section>` for footnotes if HTML5.\n    + Update
  HTML templates to use Content-Style-Type meta tag.\n    + Use separate variables
  for meta-date, meta-author.\n      This makes footnotes work in author and date
  fields.\n    + Use 'vertical-align:middle' in WebTeX math for better alignment.\n\n
  \ * S5/slidy writer:  Make footnotes appear on separate slide at end.\n\n  * MIME:
  Added 'layout-cache' to getMimeType. This ensures that the\n    META-INF/manifest.xml
  for ODT files will have everything it needs, so\n    that ODT files modified by
  LibreOffice can be used as `--reference-odt`.\n\n  * `Text.Pandoc.Templates`: Return
  empty string for json template.\n\n  * `Text.Pandoc.Biblio`:\n\n    + Expand citations
  recursively inside nested inlines.\n    + Treat `\\160` as space when parsing locator
  and suffix.\n      This fixes a bug with \"p. 33\" when `--smart` is used. Previously\n
  \     the whole \"p. 33\" would be included in the suffix, with no locator.\n    +
  Put whole author-in-text citation in a Cite.  Previously just the\n      date and
  other info went in the Cite.\n    + Don't add comma+space to prefix if it ends in
  punctuation.\n\n  * Updated chicago-author-date.csl.  The old version did not work\n
  \   properly for edited volumes with no author.\n\n  * EPUB writer:\n\n    + Add
  date to EPUB titlepage and metadata.\n    + Added TOC identifier in EPUB page template.\n
  \   + Don't generate superfluous file `cover-image.jpg`.\n\n  [under the hood improvements]\n\n
  \ * Modified `make_osx_package.sh` to use cabal-dev.\n    Items are no longer installed
  as root.\n    Man pages are zipped and given proper permissions.\n\n  * Modified
  windows installer generator to use cabal-dev.\n\n  * Setup: Making man pages now
  works with cabal-dev (at least on OSX). In\n    Setup.hs we now invoke 'runghc'
  in a way that points it to the correct\n    package databases, instead of always
  falling back to the default user\n    package db.\n\n  * Updated to work with GHC
  7.4.1.\n\n  * Removed dependency on old-time.\n\n  * Removed dependency on dlist.\n\n
  \ * New slidy directory for \"self-contained.\"\n\n  * TeXMath writer:  Use unicode
  thin spaces for thin spaces.\n\n  * Markdown citations: don't strip off initial
  space in locator.\n\n  [API changes]\n\n  * Removed `Apostrophe`, `EmDash`, `EnDash`,
  and `Ellipses`\n    from the native `Inline` type in pandoc-types.  Now we use `Str`\n
  \   elements with unicode.\n\n  * Improvements to `Text.Pandoc.Builder`:\n\n    +
  `Inlines` and `Blocks` are now newtypes (not synonyms for\n      sequences).\n    +
  Instances are defined for `IsString`, `Show`, `Read`, `Monoid`,\n      and a new
  `Listable` class, which allows these to be manipulated\n      to some extent like
  lists. Monoid append includes automatic\n      normalization.\n    + `+++` has been
  replaced by `<>` (mappend).\n\n  * Use blaze-html instead of xhtml for HTML generation.\n
  \   This changes the type of `writeHtml`.\n\n  * `Text.Pandoc.Shared`:\n\n    +
  Added `warn` and `err`.\n    + Removed `unescapeURI`, modified `escapeURI`.\n      (See
  under [behavior changes], above.)\n\n  * Changes in URI escaping:  Previously the
  readers escaped URIs by\n    converting unicode characters to octets and then percent
  encoding.\n    Now unicode characters are left as they are, and `escapeURI` only\n
  \   percent-encodes space characters.  This gives more readable\n    URIs, and works
  well with modern user agents. URIs are no longer unescaped\n    at all on conversion
  to `markdown`, `asciidoc`, `rst`, `org`.\n\n  * New module `Text.Pandoc.SelfContained`.\n\n
  \ * New module `Text.Pandoc.Docx`.\n\n  * New module `Text.Pandoc.PDF`.\n\n  * Added
  `writerBeamer` to `WriterOptions`.\n\n  * Added `normalizeDate` to `Text.Pandoc.Shared`.\n\n
  \ * Added `splitStringWithIndices` in `Text.Pandoc.Shared`.\n    This is like `splitWithIndices`,
  but it is sensitive to distinctions\n    between wide, combining, and regular characters.\n\n
  \ * `Text.Pandoc.Pretty`:\n\n    + Added `chomp` combinator.\n    + Added `beforeNonBreak`
  combinator.  This allows you to include\n      something conditionally on it being
  before a nonblank.\n      Used for RST inline math.\n    + Added `charWidth` function.
  All characters marked W or F in the unicode\n      spec EastAsianWidth.txt get width
  2.\n    + Added `realLength`, based on `charWidth`. `realLength` is now\n      used
  in calculating offsets.\n\n  * New module `Text.Pandoc.Slides`, for common functions
  for breaking\n    a document into slides.\n\n  * Removed `Text.Pandoc.S5`, which
  is no longer needed.\n\n  * Removed `Text.Pandoc.CharacterReferences`.  Moved\n
  \   `characterReference` to `Text.Pandoc.Parsing`.\n    `decodeCharacterReferences`
  is replaced by `fromEntities`\n    in `Text.Pandoc.XML`.\n\n  * Added `Text.Pandoc.ImageSize`.
  \ This is intened for use\n    in `docx` and `odt` writers, so the size and dpi
  of images\n    can be calculated.\n\n  * Removed `writerAscii` in `WriterOptions`.\n\n
  \ * Added `writerHighlight` to `WriterOptions`.\n\n  * Added `DZSlides` to `HTMLSlideVariant`.\n\n
  \ * `writeEPUB` has a new argument for font files to embed.\n\n  * Added `stateLastStrPos`
  to `ParserState`. This lets us keep track\n    of whether we're parsing the position
  immediately after a regular\n    (non-space, non-symbol) string, which is useful
  for distinguishing\n    apostrophes from single quote starts.\n\n  * `Text.Pandoc.Parsing`:\n\n
  \   + `escaped` now returns a `Char`.\n    + Removed `charsInBalanced'`, added a
  character parser as\n      a parameter of `charsInBalanced`.  This is needed for\n
  \     proper handling of escapes, etc.\n    + Added `withRaw`.\n\n  * Added `toEntities`
  to `Text.Pandoc.XML`.\n\n  * `Text.Pandoc.Readers.LaTeX`:\n\n    + Export `handleIncludes`.\n
  \   + Export `rawLaTeXBlock` instead of `rawLaTeXEnvironment'`.\n\n  * Added `ToJsonFilter`
  class and `toJsonFilter` function to\n    `Text.Pandoc`, deprecating the old `jsonFilter`
  function.\n\n  * `Text.Pandoc.Highlighting`:\n\n     + Removed `highlightHtml`,
  `defaultHighlightingCss`.\n     + Export `formatLaTeXInline`, `formatLaTeXBlock`,
  and `highlight`, plus\n       key functions from highlighting-kate.\n     + Changed
  types of highlighting function.  `highlight` returns a\n       `Maybe`, not an `Either`.\n\npandoc
  (1.8.2.1)\n\n  * Relaxed cabal consntraints for test-framework (S. Trofimovich).\n\n
  \ * Relaxed cabal constraints for pandoc-types.\n\n  * Adjusted Arbitrary instance
  to help avoid timeouts in tests.\n\n  * Added `Tests.Writers.Markdown` to cabal
  file.\n\npandoc (1.8.2)\n\n  * Added script to produce OS X package.\n\n  * Made
  `templates` directory a git submodule.  This should make it\n    easier for people
  to revise their custom templates when the default\n    templates change.\n\n  *
  Changed template naming scheme: `FORMAT.template` -> `default.FORMAT`.\n    **Note:**
  If you have existing templates in `~/.pandoc/templates`, you\n    must rename them
  to conform to the new scheme!\n\n  * Fixed smart quotes bug, now handling `'...hi'`
  properly.\n\n  * RST reader:\n\n    + Partial support for labeled footnotes.\n    +
  Improved accuracy of `simpleReferenceName` parser.\n\n  * HTML reader:\n\n    +
  Substitute correct unicode characters for\n      characters in the 128..159 range,
  which are often found even in\n      HTML that purports to be UTF-8.\n\n  * LaTeX
  reader:  Handle `\\subtitle` command (a subtitle is added\n    to the title, after
  a colon and linebreak). Closes #280.\n\n  * Leaner `reference.odt`.\n\n  * Added
  unexported module `Text.Pandoc.MIME` for use in\n    the ODT writer.\n\n  * ODT
  writer:  Construct `manifest.xml` based on archive contents.\n    This fixes a bug
  in ODTs containing images. Recent versions of\n    LibreOffice would reject these
  as corrupt, because `manifest.xml`\n    did not contain a reference to the image
  files.\n\n  * LaTeX writer:\n\n    + Make verbatim environments flush to avoid spurious\n
  \     blank lines.  Closes #277.\n    + Use `\\texttt` and escapes insntead of `\\verb!...!`,
  which\n      is too fragile (doesn't work in command arguments).\n    + Use `\\enquote{}`
  for quotes if the template includes\n      the `csquotes` package. This provides
  better support for\n      local quoting styles. (Thanks to Andreas Wagner for the
  idea.)\n\n  * ConTeXt writer:  Make `\\starttyping`/`\\stoptyping` flush with\n
  \   margin, preventing spurious blank lines.\n\n  * Slidy writer:\n\n    + Use non-minimized
  version of `slidy.css` with `--offline`\n      option, so users can more easily
  edit it.\n    + Also fixed a bug in the CSS that prevented proper centering\n      of
  title (now reported and fixed upstream).\n\n  * S5 writer:\n\n    + Replaced `s5/default/slides.js.{comment,packed}`
  with\n      new compressed `s5/default/slides.min.js`.\n    + Use `data:` protocol
  to embed S5 CSS in `<link>` tags,\n      when `--offline` is specified. Using inline
  CSS didn't\n      work with Chrome or Safari.  This fixes offline\n      S5 on those
  browsers.\n\n  * HTML writer:  Removed English title on footnote backlinks.\n    This
  is incongrous in non-English documents.\n\n  * Docbook writer:\n\n    + Use CALS
  tables.  (Some older docbook software does not work\n      well with XHTML tables.)
  \ Closes #77.\n    + Use `programlisting` tags (instead of `screen`) for code blocks.\n\n
  \ * `markdown2pdf`:\n\n    + Calls latex with `-halt-on-error -interaction nonstopmode`
  instead\n      of `-interaction=batchmode`, which essentially just ignored errors,\n
  \     leading to bad results. Better to know when something is wrong.\n    + Fixed
  issues with non-UTF-8 output of `pdflatex`.\n    + Better error reporting.\n\n  *
  `--mathjax` now takes an optional URL argument. If it is not\n    provided, pandoc
  links directly to the (secure) mathjax CDN,\n    as now recommended (thanks to dsanson).\n\n
  \ * Deprecated `--xetex` option in `pandoc`.  It is no longer needed,\n    since
  the LaTeX writer now produces a file that can be processed by\n    `latex`, `pdflatex`,
  `lualatex`, or `xelatex`.\n\n  * Introduced `--luatex` option to `markdown2pdf`.
  This causes `lualatex`\n    to be used to create the PDF.\n\n  * If a template specified
  with `--template` is not found, look for it\n    in `datadir`.  Also, if no extension
  is provided, supply one based\n    on the writer.  So now you can put your `special.latex`
  template in\n    `~/.pandoc/templates`, and use it from any directory via\n    `pandoc
  -t latex --template special`.\n\n  * Default template improvements:\n\n    + HTML:
  \ Display author and date after title.\n    + HTML:  Made table of contents more
  customizable.  The container\n      for the TOC is now in the template, so users
  can insert a header\n      or other styling. (Thanks to Bruce D'Arcus for the suggestion.)\n
  \   + HTML, Slidy, S5:  Enclose scripts in CDATA tags.\n    + Slidy, S5: Added `s5-url`
  and `slidy-url` variables, instead of\n      hard-coding.  If you want to put your
  slidy files in the slidy\n      subdirectory, for example, you can do\n      `pandoc
  -t slidy -V slidy-url=slidy -s`.\n    + LaTeX: Use `\\and` to separate authors in
  LaTeX documents (reader\n      & writer).  Closes #279.\n    + LaTeX: Use different
  `hyperref` options for `xetex`, fixing\n      problems with unicode bookmarks (thanks
  to CircleCode).\n    + LaTeX: Removed `ucs` package, use `utf8` rather than `utf8x`\n
  \     with `inputenc`.  This covers fewer characters but is more\n      robust with
  other packages, and `ucs` is unmaintained.  Users\n      who need better unicode
  support should use xelatex or lualatex.\n\npandoc (1.8.1.2)\n\n  * Added `--epub-cover-image`
  option.\n\n  * Documented `--biblatex` and `--natbib` options.\n\n  * Allow `--section-divs`
  with slidy output.  Resolves Issue #296.\n\n  * Disallow notes within notes in reST
  and markdown.\n    These previously caused infinite looping and stack overflows.\n
  \   For example:\n\n        [^1]\n\n        [^1]: See [^1]\n\n    Note references
  are allowed in reST notes, so this isn't a full\n    implementation of reST. That
  can come later. For now we need to\n    prevent the stack overflows.  Partially
  resolves Issue #297.\n\n  * EPUB writer: Allow non-plain math methods.\n\n  * Forbid
  ()s in citation item keys.  Resolves Issue #304: problems with\n    `(@item1; @item2)`
  because the final paren was being parsed as part of\n    the item key.\n\n  * Changed
  URI parser so it doesn't include trailing punctuation.\n    So, in RST, `http://google.com.`
  should be parsed as a link followed by a\n    period. The parser is smart enough
  to recognize balanced parentheses, as\n    often occur in wikipedia links: `http://foo.bar/baz_(bam)`.\n\n
  \ * Markdown+lhs reader: Require space after inverse bird tracks, so that\n    HTML
  tags can be used freely at the left margin of a markdown+lhs document.\n    Thanks
  to Conal Elliot for the suggestion.\n\n  * Markdown reader:\n\n    + Improved emph/strong
  parsing; fixes bug found by Perry Wagle.\n    + Fixed bug in footnote order (reported
  by CircleCode).\n\n  * RST reader:\n      + Fixed bug in in field lists with multi-line
  items at the\n        end of the list.\n      + Added parentheses to RST `specialChars`,
  so\n        `(http://google.com)` will be parsed as a link in parens.\n        Resolves
  Issue #291.\n      + Allow `|` followed by newline in RST line block.\n\n  * LaTeX
  reader:\n      + Support `\\dots`.\n      + Gobble option & space after linebreak
  `\\\\[10pt]`.\n\n  * Textile reader:\n      + Make it possible to have colons after
  links.  (qerub)\n      + Make it possible to have colons after links.  (Christoffer
  Sawicki)\n\n  * HTML reader:\n      + Skip spaces after `<b>`, `<emph>`, etc.\n
  \     + Handle tbody, thead in simple tables.  Closes #274.\n      + Implicit `Para`s
  instead of `Plains` in some contexts.\n\n  * OpenDocument writer:  Use special `First
  paragraph` style for\n    first paragraph after most non-paragraph blocks. This
  allows users to\n    specify e.g. that only paragraphs after the first paragraph
  of a block are\n    to be indented. Thanks to Andrea Rossato for the patch. Closes
  #20.\n\n  * LaTeX writer:  use `deVerb` on table and picture captions.\n    Otherwise
  LaTeX complains about `\\verb` inside command argument.\n    Thanks to bbanier for
  reporting the bug.\n\n  * Markdown writer: Insert HTML comment btw list and indented
  code block.\n    This prevents the code block from being interpreted as part of
  the list.\n\n  * EPUB writer: Add a meta element specify the cover.\n    Some EPUB
  e-readers, such as the Nook, require a meta element inside the\n    OPF metadata
  block to ensure the cover image is properly displayed.\n    (Kelsey Hightower)\n\n
  \ * HTML writer: Use embed tag for images with non-image extensions.\n    (e.g.
  \ PDFs).  Closes #264.\n\n  * LaTeX writer: Improved tables.\n\n      + More space
  between lines, top-align cells.\n      + Use ctable package, which allows footnotes
  and\n        provides additional options.\n      + Made cell alignments work in
  multiline tables.\n      + Closes #271, #272.\n\n  * Un-URI-escape image filenames
  in LaTeX, ConTeXt, RTF, Texinfo.\n    Also do this when copying image files into
  EPUBs and ODTs.\n    Closes #263.\n\n  * Changed to github issue tracker.\n\n  *
  Added failing emph/strong markdown test case due to Perry Wagle.\n\n  * Slidy improvements:\n
  \     + Updated to use Slidy2.\n      + Fixed bug, unclosed div tag.\n      + Added
  `duration` variable in template.\n        Setting this activates the timer.\n      +
  Use 'titlepage' instead of 'cover' for title div.\n\npandoc (1.8.1.1)\n\n  * `markdown2pdf`:
  \ Removed some debugging lines accidentally included\n    in the 1.8.1 release.
  With those lines, the temp directory is created\n    in the working directory, and
  it is not deleted.  This fix restores\n    the original behavior.\n\npandoc (1.8.1)\n\n
  \ * Added `--ascii` option.  Currently supported only in HTML writer,\n    which
  it causes to use numerical entities instead of UTF-8.\n\n  * EPUB writer: `--toc`
  now works to provide a table of contents\n    at the beginning of each chapter.\n\n
  \ * LaTeX writer:  Change figure defaults to `htbp`.\n    This prevents \"too many
  unprocessed floats.\"  Resolves\n    Issue #285.\n\n  * `Text.Pandoc.UTF8`:  Encode
  filenames even when using recent\n    base.\n\n  * `markdown2pdf`: Fixed filename
  encoding issues. With help from Paulo\n    Tanimoto. Resolves Issue #286.\n\n  *
  HTML writer: Put line breaks in section divs.\n\n  * `Text.Pandoc.Shared`: Make
  `writerSectionDivs` default to False.\n\npandoc (1.8.0.3)\n\n  * Fixed Source-repository
  stanza in cabal file.\n\npandoc (1.8.0.2)\n\n  * HTML writer:\n\n    + Stringify
  alt text instead of converting to HTML.\n    + Break lines after block elements,
  not inside tags.\n      HTML output now closely resembles that of tidy. Resolves
  Issue #134.\n\n  * Markdown reader: Fixed bug in footnote block parser (pointed
  out\n    by Jesse Rosenthal).  The problem arose when the blank line\n    at the
  end of a footnote block contained indenting spaces.\n\n  * Shared: Improved 'normalize'
  function so it normalizes Spaces too.\n    In normal form, Space elements only occur
  to separate two non-Space\n    elements.  So, we never have [Space], or [, ...,
  Space].\n\n  * Tests:\n\n    + Improved Arbitrary instance.\n    + Added timeout
  for test instances.\n\n  * README:\n\n    + Added section on four-space rule for
  lists.  Resolves Issue #283.\n    + Clarified optional arguments on math options.\n\n
  \ * markdown2pdf: Fixed bug with output file extensions.\n    Previously `markdown2pdf
  test.txt -o test.en.pdf` would produce\n    `test.pdf`, not `test.en.pdf`.  Thanks
  to Paolo Tanimoto for the fix.\n\npandoc (1.8.0.1)\n\n  * Revised Interact.hs so
  that it works with the CPP macros\n    in the UTF8 module.\n\n  * Revised Setup.hs
  so that we don't call MakeManPage.hs unless\n    the man pages are out of date.\n\npandoc
  (1.8)\n\n  [new features]\n\n  * Support for citations using Andrea Rossato's `citeproc-hs`
  0.3.\n    You can now write, for example,\n\n        Water is wet [see @doe99, pp.
  33-35; also @smith04, ch. 1].\n\n    and, when you process your document using `pandoc`,
  specifying\n    a citation style using `--csl` and a bibliography using `--bibliography`,\n
  \   the citation will be replaced by an appropriately formatted\n    citation, and
  a list of works cited will be added to the end\n    of the document.\n\n    This
  means that you can switch effortlessly between different citation\n    and bibliography
  styles, including footnote, numerical, and author-date\n    formats. The bibliography
  can be in any of the following formats: MODS,\n    BibTeX, BibLaTeX, RIS, EndNote,
  EndNote XML, ISI, MEDLINE, Copac, or JSON.\n    See the README for further details.\n\n
  \   Citations are supported in the markdown reader, using a special\n    syntax,
  and in the LaTeX reader, using natbib or biblatex syntax.\n    (Thanks to Nathan
  Gass for the natbib and biblatex support.)\n\n  * New `textile` reader and writer.
  \ Thanks to Paul Rivier for contributing\n    the `textile` reader, an almost complete
  implementation of the textile\n    syntax used by the ruby [RedCloth library](http://redcloth.org/textile).\n
  \   Resolves Issue #51.\n\n  * New `org` writer, for Emacs Org-mode, contributed
  by Puneeth Chaganti.\n\n  * New `json` reader and writer, for reading and writing
  a JSON\n    representation of the native Pandoc AST.  These are much faster\n    than
  the `native` reader and writer, and should be used for\n    serializing Pandoc to
  text.  To convert between the JSON representation\n    and native Pandoc, use `encodeJSON`
  and `decodeJSON` from\n    `Text.JSON.Generic`.\n\n  * A new `jsonFilter` function
  in `Text.Pandoc` makes it easy\n    to write scripts that transform a JSON-encoded
  pandoc document.\n    For example:\n\n        -- removelinks.hs - removes links
  from document\n        import Text.Pandoc\n        main = interact $ jsonFilter
  $ bottomUp removeLink\n                 where removeLink (Link xs _) = Emph xs\n
  \                      removeLink x = x\n\n    To use this to remove links while
  translating markdown to LaTeX:\n\n        pandoc -t json | runghc removelinks.hs
  | pandoc -f json -t latex\n\n  * Attributes are now allowed in inline `Code` elements,
  for example:\n\n        In this code, `ulist ! [theclass \"special\"] << elts`{.haskell}
  is...\n\n    The attribute syntax is the same as for delimited code blocks.\n    `Code`
  inline has an extra argument place for attributes, just like\n    `CodeBlock`. Inline
  code will be highlighted in HTML output, if pandoc\n    is compiled with highlighting
  support. Resolves Issue #119.\n\n  * New `RawBlock` and `RawInline` elements (replacing
  `RawHtml`,\n    `HtmlInline`, and `TeX`) provide lots of flexibility in writing\n
  \   scripts to transform Pandoc documents. Scripts can now change\n    how each
  element is rendered in each output format.\n\n  * You can now define LaTeX macros
  in markdown documents, and pandoc\n    will apply them to TeX math.  For example,\n\n
  \       \\newcommand{\\plus}[2]{#1 + #2}\n        $\\plus{3}{4}$\n\n    yields `3+4`.
  \ Since the macros are applied in the reader, they\n    will work in every output
  format, not just LaTeX.\n\n  * LaTeX macros can also be used in LaTeX documents
  (both in math\n    and in non-math contexts).\n\n  * A new `--mathjax` option has
  been added for displaying\n    math in HTML using MathJax.  Resolves issue #259.\n\n
  \ * Footnotes are now supported in the RST reader. (Note, however,\n    that unlike
  docutils, pandoc ignores the numeral or symbol used in\n    the note; footnotes
  are put in an auto-numbered ordered list.)\n    Resolves Issue #258.\n\n  * A new
  `--normalize` option causes pandoc to normalize the AST\n    before writing the
  document.  This means that, for example,\n    `*hi**there*` will be rendered as
  `<em>hithere</em>`\n    instead of `<em>hi</em><em>there</em>`.  This is not the
  default,\n    because there is a significant performance penalty.\n\n  * A new `--chapters`
  command-line option causes headers\n    in DocBook, LaTeX, and ConTeXt to start
  with \"chapter\" (level one).\n    Resolves Issue #265.\n\n  * In DocBook output,
  `<chapter>` is now used for top-level\n    headers if the template contains `<book>`.
  Resolves Issue #265.\n\n  * A new `--listings` option in `pandoc` and `markdown2pdf`
  causes\n    the LaTeX writer to use the listings package for code blocks.\n    (Thanks
  to Josef Svennigsson for the pandoc patch, and Etienne\n    Millon for the markdown2pdf
  patch.)\n\n  * `markdown2pdf` now supports `--data-dir`.\n\n  * URLs in autolinks
  now have class \"url\" so they can be styled.\n\n  * Improved prettyprinting in
  most formats.  Lines will be wrapped\n    more evenly and duplicate blank lines
  avoided.\n\n  * New `--columns` command-line option sets the column width for\n
  \   line wrapping and relative width calculations for tables.\n\n  * Made `--smart`
  work in HTML, RST, and Textile readers, as well\n    as markdown.\n\n  * Added `--html5`
  option for HTML5 output.\n\n  * Added support for listings package in LaTeX reader\n
  \   (Puneeth Chaganti).\n\n  * Added support for simple tables in the LaTeX reader.\n\n
  \ * Added support for simple tables in the HTML reader.\n\n  * Significant performance
  improvements in many readers and writers.\n\n  [API and program changes]\n\n  *
  Moved `Text.Pandoc.Definition` from the `pandoc` package to a new\n    auxiliary
  package, `pandoc-types`. This will make it possible for other\n    programs to supply
  output in Pandoc format, without depending on the whole\n    pandoc package.\n\n
  \ * Added `Attr` field to `Code`.\n\n  * Removed `RawHtml`, `HtmlInline`, and `TeX`
  elements; added generic\n    `RawBlock` and `RawInline`.\n\n  * Moved generic functions
  to `Text.Pandoc.Generic`. Deprecated\n    `processWith`, replacing it with two functions,
  `bottomUp` and `topDown`.\n    Removed previously deprecated functions `processPandoc`
  and `queryPandoc`.\n\n  * Added `Text.Pandoc.Builder`, for building `Pandoc` structures.\n\n
  \ * `Text.Pandoc` now exports association lists `readers` and `writers`.\n\n  *
  Added `Text.Pandoc.Readers.Native`, which exports `readNative`.\n    `readNative`
  can now read full pandoc documents, block lists, blocks,\n    inline lists, or inlines.
  \ It will interpret `Str \"hi\"`\n    as if it were `Pandoc (Meta [] [] []) [Plain
  [Str \"hi\"]]`.\n    This should make testing easier.\n\n  * Removed deprecated
  `-C/--custom-header` option.\n    Use `--template` instead.\n\n  * `--biblio-file`
  has been replaced by `--bibliography`.\n    `--biblio-format` has been removed;
  pandoc now guesses the format\n    from the file extension (see README).\n\n  *
  pandoc will treat an argument as a URI only if it has an\n    `http(s)` scheme.
  \ Previously pandoc would treat some\n    Windows pathnames beginning with `C:/`
  as URIs.\n\n  * The `--sanitize-html` option and the `stateSanitize` field in\n
  \   `ParserState` have been removed. Sanitization is better done in the\n    resulting
  HTML using `xss-sanitize`, which is based on pandoc's\n    sanitization, but improved.\n\n
  \ * pandoc now adds a newline to the end of its output in fragment\n    mode (=
  not `--standalone`).\n\n  * Added support for `lang` in `html` tag in the HTML template,\n
  \   so you can do `pandoc -s -V lang=es`, for example.\n\n  * `highlightHtml` in
  `Text.Pandoc.Highlighting` now takes\n    a boolean argument that selects between
  \"inline\" and\n    \"block\" HTML.\n\n  * `Text.Pandoc.Writers.RTF` now exports
  `rtfEmbedImage`.\n    Images are embedded in RTF output when possible (png, jpeg).\n
  \   Resolves Issue #275.\n\n  * Added `Text.Pandoc.Pretty`. This is better suited
  for pandoc than the\n    `pretty` package.  Changed all writers that used\n    `Text.PrettyPrint.HughesPJ`
  to use `Text.Pandoc.Pretty` instead.\n\n  * Rewrote `writeNative` using the new
  prettyprinting module. It is\n    now much faster. The output has been made more
  consistent and compressed.\n    `writeNative` is also now sensitive to writerStandalone`,
  and will simply\n    `print a block list if writerStandalone` is False.\n\n  * Removed
  `Text.Pandoc.Blocks`. `Text.Pandoc.Pretty` allows you to define\n    blocks and
  concatenate them, so a separate module is no longer needed.\n\n  * `Text.Pandoc.Shared`:\n\n
  \   + Added `writerColumns`, `writerChapters`, and `writerHtml5` to\n      `WriterOptions`.\n
  \   + Added `normalize`.\n    + Removed unneeded prettyprinting functions:\n      `wrapped`,
  `wrapIfNeeded`, `wrappedTeX`, `wrapTeXIfNeeded`, `hang'`,\n      `BlockWrapper`,
  `wrappedBlocksToDoc`.\n    + Made `splitBy` take a test instead of an element.\n
  \   + Added `findDataFile`, refactored `readDataFile`.\n    + Added `stringify`.
  Rewrote `inlineListToIdentifier` using `stringify`.\n    + Fixed `inlineListToIdentifier`
  to treat '\\160' as ' '.\n\n  * `Text.Pandoc.Readers.HTML`:\n\n    + Removed `rawHtmlBlock`,
  `anyHtmlBlockTag`, `anyHtmlInlineTag`,\n      `anyHtmlTag`, `anyHtmlEndTag`, `htmlEndTag`,
  `extractTagType`,\n      `htmlBlockElement`, `htmlComment`\n    + Added `htmlTag`,
  `htmlInBalanced`, `isInlineTag`, `isBlockTag`,\n      `isTextTag`\n\n  * Moved `smartPunctuation`
  from `Text.Pandoc.Readers.Markdown`\n    to `Text.Pandoc.Readers.Parsing`, and parameterized
  it with\n    an inline parser.\n\n  * Added `nonspaceChar` to `Text.Pandoc.Parsing`.\n\n
  \ * Ellipses are no longer allowed to contain spaces.\n    Previously we allowed
  '. . .', ' . . . ', etc.  This caused\n    too many complications, and removed author's
  flexibility in\n    combining ellipses with spaces and periods.\n\n  * Allow linebreaks
  in URLs (treat as spaces). Also, a string of\n    consecutive spaces or tabs is
  now parsed as a single space. If you have\n    multiple spaces in your URL, use
  `%20%20`.\n\n  * `Text.Pandoc.Parsing`:\n\n    + Removed `refsMatch`.\n    + Hid
  `Key` constructor.\n    + Removed custom `Ord` and `Eq` instances for `Key`.\n    +
  Added `toKey` and `fromKey` to convert between `Key` and `[Inline]`.\n    + Generalized
  type on `readWith`.\n\n  * Small change in calculation of relative widths of table
  columns.\n    If the size of the header > the specified column width, use\n    the
  header size as 100% for purposes of calculating\n    relative widths of columns.\n\n
  \ * Markdown writer now uses some pandoc-specific features when `--strict`\n    is
  not specified: `\\` newline is used for a hard linebreak instead of\n    two spaces
  then a newline. And delimited code blocks are used when\n    there are attributes.\n\n
  \ * HTML writer:  improved gladTeX output by setting ENV appropriately\n    for
  display or inline math (Jonathan Daugherty).\n\n  * LaTeX writer: Use `\\paragraph`,
  `\\subparagraph` for level 4,5 headers.\n\n  * LaTeX reader:\n\n    + `\\label{foo}`
  and `\\ref{foo}` now become `{foo}` instead of `(foo)`.\n    + `\\index{}` commands
  are skipped.\n\n  * Added `fontsize` variable to default LaTeX template.\n    This
  makes it easy to set the font size using `markdown2pdf`:\n    `markdown2pdf -V fontsize=12pt
  input.txt`.\n\n  * Fixed problem with strikeout in LaTeX headers when using\n    hyperref,
  by adding a command to the default LaTeX template\n    that disables `\\sout` inside
  pdf strings. Thanks to Joost Kremers\n    for the fix.\n\n  * The `COLUMNS` environment
  variable no longer has any effect.\n\n  [under-the-hood improvements]\n\n  * Pandoc
  now compiles with GHC 7. (This alone leads to a\n    significant performance improvement,
  15-20%.)\n\n  * Completely rewrote HTML reader using tagsoup as a lexer. The\n    new
  reader is faster and more accurate.  Unlike the\n    old reader, it does not get
  bogged down on some input\n    (Issues #277, 255). And it handles namespaces in
  tags\n    (Issue #274).\n\n  * Replaced `escapeStringAsXML` with a faster version.\n\n
  \ * Rewrote `spaceChar` and some other parsers in Text.Pandoc.Parsing\n    for a
  significant performance boost.\n\n  * Improved performance of all readers by rewriting
  parsers.\n\n  * Simplified Text.Pandoc.CharacterReferences by using\n    entity
  lookup functions from TagSoup.\n\n  * `Text.Pandoc.UTF8` now uses the unicode-aware
  IO functions\n    from `System.IO` if base >= 4.2.  This gives support for\n    windows
  line endings on windows.\n\n  * Remove duplications in documentation by generating
  the\n    pandoc man page from README, using `MakeManPage.hs`.\n\n  * README now
  includes a full description of markdown syntax,\n    including non-pandoc-specific
  parts.  A new `pandoc_markdown`\n    man page is extracted from this, so you can
  look up markdown\n    syntax by doing `man pandoc_markdown`.\n\n  * Completely revised
  test framework (with help from Nathan Gass).\n    The new test framework is built
  when the `tests` Cabal flag is set. It\n    includes the old integration tests,
  but also some new unit and quickcheck\n    tests. Test output has been much improved,
  and you can now specify a glob\n    pattern after `cabal test` to indicate which
  tests should be run;\n    for example `cabal test citations` will run all the citation
  tests.\n\n  * Added a shell script, `stripansi.sh`, for filtering ANSI control\n
  \   sequences from test output: `cabal test | ./stripansi.sh > test.log`.\n\n  *
  Added `Interact.hs` to make it easier to use ghci while developing.\n    `Interact.hs`
  loads `ghci` from the `src` directory, specifying\n    all the options needed to
  load pandoc modules (including\n    specific package dependencies, which it gets
  by parsing\n    dist/setup-config).\n\n  * Added `Benchmark.hs`, testing all readers
  + writers using criterion.\n\n  * Added `stats.sh`, to make it easier to collect
  and archive\n    benchmark and lines-of-code stats.\n\n  * Added upper bounds to
  all cabal dependencies.\n\n  * Include man pages in extra-source-files.  This allows
  users to\n    install pandoc from the tarball without needing to build the man\n
  \   pages.\n\n  [bug fixes]\n\n  * Filenames are encoded as UTF8.  Resolves Issue
  #252.\n\n  * Handle curly quotes better in `--smart` mode. Previously, curly quotes\n
  \   were just parsed literally, leading to problems in some output formats.\n    Now
  they are parsed as `Quoted` inlines, if `--smart` is specified.\n    Resolves Issue
  #270.\n\n  * Text.Pandoc.Parsing: Fixed bug in grid table parser.\n    Spaces at
  end of line were not being stripped properly,\n    resulting in unintended LineBreaks.\n\n
  \ * Markdown reader:\n\n    + Allow HTML comments as inline elements in markdown.\n
  \     So, `aaa <!-- comment --> bbb` can be a single paragraph.\n    + Fixed superscripts
  with links: `^[link](/foo)^` gets\n      recognized as a superscripted link, not
  an inline note followed by\n      garbage.\n    + Fixed regression, making markdown
  reference keys case-insensitive again.\n      Resolves Issue #272.\n    + Properly
  handle abbreviations (like `Mr.`) at the end of a line.\n    + Better handling of
  intraword underscores, avoiding exponential\n      slowdowns in some cases.  Resolves
  Issue #182.\n    + Fixed bug in alignments in tables with blank rows in the header.\n\n
  \ * RST reader:\n\n    + Field lists now allow spaces in field names, and\n      block
  content in field values. (Thanks to Lachlan Musicman\n      for pointing out the
  bug.)\n    + Definition list items are now always `Para` instead of\n      `Plain`,
  matching behavior of `rst2xml.py`.\n    + In image blocks, the description is parsed
  properly and\n      used for the alt attribute, not also the title.\n    + Skip
  blank lines at beginning of file. Resolves\n      Debian #611328.\n\n  * LaTeX reader:\n\n
  \   + Improved parsing of preamble.\n      Previously you'd get unexpected behavior
  on a document that\n      contained `\\begin{document}` in, say, a verbatim block.\n
  \   + Allow spaces between `\\begin` or `\\end` and `{`.\n    + Support `\\L` and
  `\\l`.\n    + Skip comments inside paragraphs.\n\n  * LaTeX writer:\n\n    + Escape
  strings in `\\href{..}`.\n    + In nonsimple tables, put cells in `\\parbox`.\n\n
  \ * OpenDocument writer:  don't print raw TeX.\n\n  * Markdown writer:\n\n    +
  Fixed bug in `Image`.  URI was getting unescaped twice!\n    + Avoid printing extra
  blank lines at the end if there are\n      no notes or references.\n\n  * LaTeX
  and ConTeXt: Escape `[` and `]` as `{[}` and `{]}`.\n    This avoids unwanted interpretation
  as an optional argument.\n\n  * ConTeXt writer: Fixed problem with inline code.
  \ Previously\n    `}` would be rendered `\\type{}}`. Now we check the string for
  '}' and '{'.\n    If it contains neither, use `\\type{}`; otherwise use `\\mono{}`\n
  \   with an escaped version of the string.\n\n  * `:` now allowed in HTML tags.
  Resolves Issue #274.\n\npandoc (1.6)\n\n  [ John MacFarlane ]\n\n  * New EPUB and
  HTML Slidy writers. (Issue #122)\n\n      - EPUB is a standard ebook format, used
  in Apple's iBooks for\n        the iPad and iPhone, Barnes and Noble's nook reader,
  the Sony\n        reader, and many other devices.\n      - Slidy, like S5, is a
  system for producing HTML+javascript slide\n        shows.\n\n  * All input is assumed
  to be UTF-8, no matter what the locale and ghc\n    version, and all output is UTF-8.
  This reverts to pre-1.5 behavior.\n    Also, a BOM, if present, is stripped from
  the input.\n\n  * Markdown now supports grid tables, whose cells can contain\n    arbitrary
  block elements. (Issue #43)\n\n  * Sequentially numbered example lists in markdown
  with `@` marker.\n\n  * Markdown table captions can begin with a bare colon and
  no longer need\n    to include the English word \"table.\" Also, a caption can now
  occur\n    either before or after the table. (Issue #227)\n\n  * New command-line
  options:\n\n      - `--epub-stylesheet` allows you to specify a CSS file that will\n
  \       be used to style your ebook.\n      - `--epub-metadata` allows you to specify
  metadata for the ebook.\n      - `--offline` causes the generated HTML slideshow
  to include all\n        needed scripts and stylesheets.\n      - `--webtex` causes
  TeX math to be converted to images using the\n        Google Charts API (unless
  a different URL is specified).\n      - `--section-divs` causes div tags to be added
  around each section\n        in an HTML document. (Issue #230, 239)\n\n  * Default
  behavior of S5 writer in standalone mode has changed:\n    previously, it would
  include all needed scripts and stylesheets\n    in the generated HTML; now, only
  links are included unless\n    the `--offline` option is used.\n\n  * Default behavior
  of HTML writer has changed. Between 1.2 and 1.5,\n    pandoc would enclose sections
  in div tags with identifiers on the\n    div tags, so that the sections can be manipulated
  in javascript.\n    This caused undesirable interactions with raw HTML div tags.
  So,\n    starting with 1.6, the default is to put the identifiers directly\n    on
  the header tags, and not to include the divs.  The `--section-divs`\n    option
  selects the 1.2-1.5 behavior.\n\n  * API changes:\n\n      - `HTMLMathMethod`: Added
  `WebTeX`, removed `MimeTeX`.\n      - `WriterOptions`: Added `writerUserDataDir`,
  `writerSourceDirectory`,\n        `writerEPUBMetadata` fields. Removed `writerIncludeBefore`,\n
  \       `writerIncludeAfter`.\n      - Added `headerShift` to `Text.Pandoc.Shared`.\n
  \     - Moved parsing code and `ParserState` from `Text.Pandoc.Shared`\n        to
  a new module, `Text.Pandoc.Parsing`.\n      - Added `stateHasChapters` to `ParserState`.\n
  \     - Added `HTMLSlideVariant`.\n      - Made `KeyTable` a map instead of an association
  list.\n      - Added accessors for `Meta` fields (`docTitle`, `docAuthors`,\n        `docDate`).\n
  \     - `Pandoc`, `Meta`, `Inline`, and `Block` have been given `Ord`\n        instances.\n
  \     - Reference keys now have a type of their own (`Key`), with its\n        own
  `Ord` instance for case-insensitive comparison.\n      - Added `Text.Pandoc.Writers.EPUB`.\n
  \     - Added `Text.Pandoc.UUID`.\n      - Removed `Text.Pandoc.ODT`, added `Text.Pandoc.Writers.ODT`.\n
  \       Removed `saveOpenDocumentAsODT`, added `writeODT`.\n      - Added `Text.Pandoc.Writers.Native`
  and `writeNative`.\n        Removed `prettyPandoc`.\n      - Added `Text.Pandoc.UTF8`
  for portable UTF8 string IO.\n      - Removed `Text.Pandoc.Writers.S5` and the `writeS5`
  function.\n        Moved `s5Includes` to a new module, `Text.Pandoc.S5`.\n        To
  write S5, you now use `writeHtml` with `writerSlideVariant`\n        set to `S5Slides`
  or `SlidySlides`.\n\n  * Template changes.  If you use custom templates, please
  update them,\n    particularly if you use syntax highlighting with pandoc. The old
  HTML\n    templates hardcoded highlighting CSS that will no longer work with\n    the
  most recent version of highlighting-kate.\n\n      - HTML template: avoid empty
  meta tag if no date.\n      - HTML template: Use default highlighting CSS from highlighting-kate\n
  \       instead of hard-coding the CSS into the template.\n      - HTML template:
  insert-before text goes before the title, and\n        immediately after the <body>
  tag, as documented. (Issue #241)\n      - Added slidy and s5 templates.\n      -
  Added amssymb to preamble of latex template. (github Issue 1)\n\n  * Removed excess
  newlines at the end of output. Note: because output\n    will not contain an extra
  newline, you may need to make adjustments\n    if you are inserting pandoc's output
  into a template.\n\n  * In S5 and slidy, horizontal rules now cause a new slide,
  so you\n    are no longer limited to one slide per section.\n\n  * Improved handling
  of code in man writer. Inline code is now monospace,\n    not bold, and code blocks
  now use .nf (no fill) and .IP (indented para).\n\n  * HTML reader parses `<tt>`
  as Code. (Issue #247)\n\n  * html+lhs output now contains bird tracks, even when
  compiled without\n    highlighting support. (Issue #242)\n\n  * Colons are now no
  longer allowed in autogenerated XML/HTML identifiers,\n    since they have a special
  meaning in XML.\n\n  * Code improvements in ODT writer.  Remote images are now replaced
  with\n    their alt text rather than a broken link.\n\n  * LaTeX reader improvements:\n\n
  \     - Made latex `\\section`, `\\chapter` parsers more forgiving of\n        whitespace.\n
  \     - Parse `\\chapter{}` in latex.\n      - Changed `rawLaTeXInline` to accept
  `\\section`, `\\begin`, etc.\n      - Use new `rawLaTeXInline'` in LaTeX reader,
  and export `rawLaTeXInline`\n        for use in markdown reader.\n      - Fixes
  bug wherein `\\section{foo}` was not recognized as raw TeX\n        in markdown
  document.\n\n  * LaTeX writer:  images are automatically shrunk if they would extend\n
  \   beyond the page margin.\n\n  * Plain, markdown, RST writers now use unicode
  for smart punctuation.\n\n  * Man writer converts math to unicode when possible,
  as in other writers.\n\n  * `markdown2pdf` can now recognize citeproc options.\n\n
  \ * Command-line arguments are converted to UTF-8. (Issue #234)\n\n  * `Text.Pandoc.TeXMath`
  has been rewritten to use texmath's parser.\n    This allows it to handle a wider
  range of formulas. Also, if a formula\n    cannot be converted, it is left in raw
  TeX; formulas are no longer\n    partially converted.\n\n  * Unicode curly quotes
  are left alone when parsing smart quotes. (Issue\n    #143)\n\n  * Cabal file changes:\n\n
  \     - Removed parsec < 3 restriction.\n      - Added 'threaded' flag for architectures
  where GHC lacks a threaded\n        runtime.\n      - Use 'threaded' only for markdown2pdf;
  it is not needed for pandoc.\n      - Require highlighting-kate 0.2.7.\n\n  * Use
  explicit imports from `Data.Generics`. Otherwise we have a\n    conflict with the
  'empty' symbol, introduced in syb >= 0.2. (Issue #237)\n\n  * New data files:  slidy/slidy.min.js,
  slidy/slidy.min.css, epub.css.\n\npandoc (1.5.1.1)\n\n  [ John MacFarlane ]\n\n
  \ * Fixed uniqueIdent in Shared so that header identifiers work as\n   advertized
  in the README and are are valid XHTML names.\n\npandoc (1.5.1)\n\n  [ John MacFarlane
  ]\n\n  * Fixed treatment of unicode characters in URIs.\n    + Shared now exports
  escapeURI and unescapeURI. These handle\n      UTF8 encoding and decoding as well
  as URI escaping/unescaping.\n    + Shared: uri and emailAddress now return a pair
  of the original\n      parsed text and the escaped URI (in the latter case, with\n
  \     the mailto: prefix).\n    + HTML reader: unsanitaryURI has been modified to
  allow unicode\n      high characters in a URI.\n    + Readers:  All link and image
  URIs are now escaped using\n      escapeURI.\n    + Markdown and RST writers:  unescapeURI
  is used so that URIs\n      in these formats are human-readable.\n\n  * Setup.hs:
  Don't assume that the build directory is \"dist\".\n    Instead, get it from localBuildInfo.\n\n
  \ * OpenDocument writer: Use a Map for stTextStyleAttr.\n    This avoids duplicates
  (and invalid xml). Resolves Issue #222.\n\npandoc (1.5.0.1)\n\n  [ John MacFarlane
  ]\n\n  * HTML writer: Fixed error in math writer (with MathML option)\n    that
  caused an infinite loop for unparsable MathML.\n\npandoc (1.5)\n\n  [ John MacFarlane
  ]\n\n  * Added --mathml option.  When this is selected, pandoc will convert\n    TeX
  math into MathML.\n    + Added data/MathMLinHTML.js, which is included when no URL
  is\n      provided for --mathml.  This allows MathML to be displayed (in\n      better
  browsers) as text/html.\n    + Removed Text.Pandoc.LaTeXMathML.  The module was
  no longer\n      necessary; it was replaced by two lines in pandoc.hs.\n    + Replaced
  LaTeXMathML.js.comment and LaTeXMathML.js.packed with a\n      single combined file,
  LaTeXMathML.js.\n\n  * Added --data-dir option.\n    This specifies a user data
  directory. If not specified, will default\n    to ~/.pandoc on unix or Application
  Data\\pandoc on Windows.\n    Files placed in the user data directory will override
  system default\n    data files.\n\n  * Added Maybe datadir parameter to readDataFile,
  saveOpenDocumentAsODT,\n    latexMathMLScript, s5HeaderIncludes, and getDefaultTemplate.
  If\n    Nothing, no user directory is searched for an override.\n\n  * Added 'plain'
  output format. This is similar to markdown, but\n    removes links, pictures, inline
  formatting, and most anything that\n    looks even vaguely markupish. The function
  writePlain is exported by\n    Text.Pandoc.Writers.Markdown, with which it shares
  most of its code.\n\n  * Allow multi-line titles and authors in meta block.\n    Titles
  may span multiple lines, provided continuation lines\n    begin with a space character.
  \ Separate authors may be put on\n    multiple lines, provided each line after the
  first begins with\n    a space character.  Each author must fit on one line. Multiple\n
  \   authors on a single line may still be separated by a semicolon.\n    Based on
  a patch by Justin Bogner.\n\n  * When given an absolute URI as parameter, pandoc
  will try to fetch\n    the content via HTTP.  So you can do:\n    'pandoc -r html
  -w markdown http://www.fsf.org'\n    Adds dependency on HTTP.\n\n  * Made HTML reader
  much more forgiving.\n    + Incorporated idea (from HXT) that an element can be
  closed\n      by an open tag for another element.\n    + Javascript is partially
  parsed to make sure that a <script>\n      section is not closed by a </script>
  in a comment or string.\n    + More lenient non-quoted attribute values.\n      Now
  we accept anything but a space character, quote, or <>.\n      This helps in parsing
  e.g. www.google.com!\n    + Bare & signs are now parsed as a string.  This is a
  common\n      HTML mistake.\n    + Skip a bare < in malformed HTML.\n\n  * Removed
  html2markdown and hsmarkdown.\n    + html2markdown is no longer needed, since you
  can now pass URI\n      arguments to pandoc and directly convert web pages. (Note,\n
  \     however, that pandoc assumes the pages are UTF8. html2markdown\n      made
  an attempt to guess the encoding and convert them.)\n    + hsmarkdown is pointless
  -- a large executable that could be\n      replaced by 'pandoc --strict'.\n\n  *
  In most writers, an image in a paragraph by itself is now rendered\n    as a figure,
  with the alt text as the caption. (Texinfo, HTML, RST,\n    MediaWiki, Docbook,
  LaTeX, ConTeXt, HTML.) Other images are\n    rendered inline.\n\n  * Depend on extensible-exceptions.
  \ This allows pandoc to be compiled\n    on GHC 6.8.\n\n  * Added --base-header-level
  option.  For example, --base-header-level=2\n    will change level 1 headers to
  level 2, level 2 to level 3, etc.\n    Closes Debian #563416.\n\n  * Incomplete
  support for RST tables (simple and grid).\n    Thanks to Eric Kow. Colspans and
  rowspans not yet supported.\n\n  * Added accessors (docTitle, docAuthors, docDate)
  to Meta type.\n\n  * MediaWiki writer:  format links with relative URLs as wikilinks.\n
  \   The new rule:  If the link target is an absolute URL, an external\n    link
  is created. Otherwise, a wikilink is created.\n\n  * Text.Pandoc.Shared: Export
  uniqueIdent, and don't allow tilde in\n    identifier.  Note:  This may break links
  to sections that involve\n    tildes.\n\n  * Markdown(+lhs) reader:  handle \"inverse
  bird tracks.\"\n    Inverse bird tracks (<) are used for haskell example code that
  is not\n    part of the literate Haskell program.  Resolves Issue #211.\n\n  * LaTeX
  reader:\n    + Recognize '\\ ' (interword space).\n    + Recognize nonbreaking space
  '~'.\n    + Ignore \\section, \\pdfannot, \\pdfstringdef.  Ignore alt title in\n
  \     section headers.  Don't treat \\section as inline LaTeX.\n      Resolves Issue
  #202.\n    + LaTeX reader:  allow any special character to be escaped.\n      Resolves
  Issue #221.\n    + LaTeX reader: treat \\paragraph and \\subparagraph as level 4,
  5\n      headers.  Resolves Issue #207.\n\n  * Use template variables for include-before/after.\n
  \   + These options now imply -s; previously they worked also in fragment\n      mode.\n
  \   + Users can now adjust position of include-before and include-after\n      text
  in the templates.\n    + Default position of include-before moved back (as it was
  before 1.4)\n      before table of contents.\n    + Resolves Issue #217.\n\n  *
  Don't print an empty table header: (all writers).\n    Resolves Issue #210.\n\n
  \ * HTML, Docbook writer: Use tbody, thead, and cols in tables.\n\n  * HTML writer:
  Don't include TOC div if table of contents is empty.\n\n  * Markdown writer:  Fixed
  citations.\n    Previously the markdown writer printed raw citation codes, e.g.\n
  \   [geach1970], rather than the expanded citations provided by\n    citeproc, e.g.
  (Geach 1970). Now it prints the expanded citations.\n    This means that the document
  produced can be processed as a markdown\n    document without citeproc. Thanks to
  dsanson for reporting, and\n    Andrea Rossato for the patch.\n\n  * Improved and
  simplified title block in context template.\n    Previously it caused an error if
  there was no title.\n    This method should also be easier for users to customize.\n\n
  \ * Markdown reader:\n    + Treat p., pp., sec., ch., as abbreviations in smart
  mode.\n    + Disallow blank lines in inline code span.\n    + Allow footnotes to
  be indented < 4 spaces.\n      This fixes a regression.  A test case has been added.\n
  \   + Escape spaces in URLs as %20. Previously they were incorrectly\n      escaped
  as +, which is appropriate only for the query part of\n      a URL. Resolves Issue
  #220.\n    + Require two spaces after capital letter + period for list item.\n      Otherwise
  \"E. coli\" starts a list. This might change the semantics\n      of some existing
  documents, since previously the two-space\n      requirement was only enforced when
  the second word started\n      with a capital letter. But it is consistent with
  the existing\n      documentation and follows the principle of least surprise.\n
  \     Resolves Issue #212.\n\n  * LaTeX template: redefine labelwidth when using
  enumerate package.\n    Otherwise the list labels (numbers) often extend past the
  left\n    margin, which looks bad.\n\n  * Mediawiki writer: Don't print a \"== Notes
  ==\" header before\n    references.  This is too English-centric. Writers can provide
  their\n    own header at the end of the document.\n\n  * Promoted mediawiki headers.
  \ '= head =' is now level 1, '== head =='\n    level 2, etc.  This seems to be correct;
  it's only by convention\n    that wikipedia articles have level 2 headers at most.\n
  \   Patch due to Eric Kow.\n\n  * RunTests.hs: Set LANG to a UTF-8 locale. Use 'pandoc
  --data-dir=' so\n    data files don't need to have been installed. This removes
  the need to\n    set HOME.\n\n  * HTML reader:\n    + Handle spaces before <html>.
  \ Resolves Issue #216.\n    + Be forgiving in parsing a bare list within a list.\n
  \     The following is not valid xhtml, but the intent is clear:\n      <ol>\n      <li>one</li>\n
  \     <ol><li>sub</li></ol>\n      <li>two</li>\n      </ol>\n      We'll treat
  the <ol> as if it's in a <li>.  Resolves Issue #215.\n\n  * Updated INSTALL instructions.
  \ cabal method is now promoted.\n\n  * Updated markdown2pdf man page. It no longer
  says all pandoc options\n    are accepted.\n\n  * README/man pages: Removed advice
  to pipe through tidy before HTML\n    reader.  This is obsolete, now that we have
  a forgiving HTML parser.\n\n  * LaTeX writer: set numbersections template variable,
  so\n    the section numbering options work again.\n\n  * Removed obsolete Makefile.\n\n
  \ * Website: renamed index.txt.in -> index.txt.\n\n  * New batch file to make-windows-installer.\n
  \   + Removed old Makefile.windows\n    + Added make-windows-installer.bat\n    +
  Modified default installer name in pandoc-setup.iss\n\n  * Removed freebsd and macports
  directories.\n    They are no longer up to date.\n\n  * Setup.hs:\n    + Made man
  page building sensitive to build verbosity.\n    + Improved detection of highlighting
  support in test hook.\n    + Install wrapper scripts into cabal bin directory.\n
  \   + Also simplified installManpages.\n    + Setup.hs: install manpages to mandir.
  \ Code borrowed from darcs.\n\n  * Changed default of writerXeTeX to False.\n\n
  \ * HTML writer: don't include empty UL if --toc but no sections.\n    Resolves
  Issue #199.\n\n  * LaTeX writer:\n\n    + If book, report, or memoir documentclass,
  use \\chapter{}\n      for first-level headers. Otherwise use \\section{}.\n    +
  Removed stLink, link template variable. Reason: we now always\n      include hyperref
  in the template.\n\n  * LaTeX template:\n\n    + Only show \\author if there are
  some.\n    + Always include hyperref package. It is used not just for links but\n
  \     for toc, section heading bookmarks, footnotes, etc. Also added\n      unicode=true
  on hyperref options.\n\n  * markdown2pdf: always do at least two runs. hyperref
  bookmarks\n    require this.\n\n  * cabal file: Removed unneeded dependency on template-haskell.\n\n
  \ * Windows installer - fixed bug in data file locations.\n    Resolves Issue #197.\n\n
  \ * Deprecated --custom-header in documentation.\n    Removed old \"Custom Headers\"
  section in README.\n\npandoc (1.4)\n\n  [ John MacFarlane ]\n\n  * Pandoc will now
  compile with either GHC 6.10 or 6.12.\n    + Don't use System.IO.UTF8 when compiling
  with 6.12\n    + Use -fno-warn-unused-do-bind option when compiling with 6.12\n\n
  \ * Replaced old headers with templates.  Now users have much more\n    control
  over the way documents appear in --standalone mode,\n    and writer code is simplified.
  \ Resolves Issues #59, 147.\n    Every effort has been made to retain backwards
  compatibility.\n    So, the --custom-header option should still work as before.\n\n
  \   + Added Text.Pandoc.Templates.  This provides functions for\n      retrieving
  default templates and for rendering templates.\n    + System templates (in the pandoc
  data directory) can be\n      overridden by user templates in $HOME/.pandoc/templates.\n
  \   + Removed Text.Pandoc.DefaultHeaders.\n    + Removed data/headers directory.\n
  \   + Added templates directory.\n    + Added writerTemplate and writerVariables
  fields to WriterOptions.\n    + Removed writerTitlePrefix, writerHeader fields from
  WriterOptions.\n    + Changed --print-default-header to --print-default-template.\n
  \   + Added --template option.\n    + Added -V/--variable option to set custom template
  variables.\n\n  * Pandoc no longer requires Template Haskell.  Resolves Issue #186.\n\n
  \   + Removed need for TH in ODT module. Instead get reference.odt from\n      data
  file at run time.\n    + Removed TH dependency from S5 module. S5 module now exports\n
  \     s5HeaderIncludes, which pandoc.hs includes if writer is s5 and\n      standalone.\n
  \   + Refactored LaTeXMathML not to use TH.\n\n  * Meta is now Meta [Inline] [[Inline]]
  [Inline] rather than\n    Meta [Inline] [String] String. Authors and date in Meta
  are now lists\n    of Inline elements rather than raw strings. This means that they
  can\n    be formatted and can include footnotes. NOTE: This may be a breaking\n
  \   change for those using pandoc as a library.\n\n  * Added readDataFile to Text.Pandoc.Shared.
  \ This retrieves\n    a data file from the user pandoc data directory (~/.pandoc\n
  \   on unix), or, if not found there, from the system data\n    directory ($CABALDIR/shared/pandoc-VERSION/).
  All data\n    files, including templates, LaTeXMathML.js, s5 styles,\n    and reference.odt,
  can be overridden by the user.\n\n  * s5 files moved from data/ui/default to s5/default.\n\n
  \ * Use unicode instead of entities in HTML and XML output.  Resolves\n    Issue
  #163.\n\n  * Prettier HTML footnote references:  put anchor inside sup,\n    instead
  of other way.  Resolves Issue #191. Thanks to\n    infinity0x.\n\n  * Added --xetex
  option to pandoc and markdown2pdf.\n    If --xetex is specified, pandoc produces
  latex suitable for\n    processing by xelatex, and markdown2pdf uses xelatex to
  create\n    the PDF. Resolves Issue #185.\n\n  * RTF writer: multiple authors now
  occupy multiple paragraphs rather\n    than using a line break.\n\n  * Man writer:
  now the \"--after-body\" will come after the \"AUTHORS\"\n    section, whereas before
  it would come before it.  This is a\n    slight break from backwards compatibility.\n\n
  \ * Added --reference-odt option, so users may customize the styles\n    used in
  pandoc-generated ODT files.  Users may also place a\n    default reference.odt in
  the ~\\.pandoc directory.\n\n  * ODT writer:\n    + Indented and line-broke styles.xml
  so it can be modified more easily.\n    + Omitted some unnecessary style declarations.\n
  \   + Don't wrap text in OpenDocument writer.  The tags are too long, making\n      wrapping
  ugly and pointless.\n\n  * LaTeX reader: use \\\\ to separate multiple authors.\n\n
  \ * Markdown reader: use ; as separator between authors.\n    This allows you to
  use ',' within author names: e.g. \"John Jones, Jr.\"\n\n  * S5 writer: use linebreak
  to separate authors in title page.\n\n  * RST reader: Allow :: before lhs code block.
  The RST spec requires the\n    :: before verbatim blocks. This :: should not be
  treated as literal\n    colons. Resolves Issue #189.\n\n  * Documented pandoc 1.3's
  new definition list syntax in README.\n    (An oversight in the last release.)\n\n
  \ * markdown2pdf.hs:\n    + interpret ! in a log as an error line.\n    + --toc
  now works properly.\n\n  * Changes in RunTests.hs:\n    + Use the Diff library rather
  than a local copy of Diff.hs.\n      (This vastly increases performance.) This change
  means that 'cabal\n      test' presupposes that the Diff library is installed.\n
  \   + Removed tests/Diff.hs from cabal file.\n    + Changed RunTests to use local
  environment. We need at least HOME, so\n      pandoc can find its data directory.\n\n
  \ * Updated windows installer to install data files in the app directory.\n\n  *
  Windows installer now installs portable wrappers hsmarkdown and\n    markdown2pdf.\n\npandoc
  (1.3)\n\n  [ John MacFarlane ]\n\n  * Added --id-prefix option (Issue #41). This
  adds a prefix to all\n    automatically generated HTML identifiers, which helps
  prevent\n    duplicate identifiers when you're generating a fragment (say a blog\n
  \   post).\n\n  * Added --indented-code-classes option.  This specifies classes\n
  \   to use for indented code blocks.  (Patch due to buttock; Issue #87.)\n\n  *
  --number-sections now affects HTML output as well as ConTeXt and LaTeX\n    (Issue
  #150).\n\n  * Improved syntax for markdown definition lists (Issue #24).\n    Definition
  lists are now more compatible with PHP Markdown Extra.\n    + You can have multiple
  definitions for a term (but still not\n      multiple terms).\n    + Multi-block
  definitions no longer need a column before each block\n      (indeed, this will
  now cause multiple definitions).\n    + The marker no longer needs to be flush with
  the left margin,\n      but can be indented at or two spaces.  Also, ~ as well as
  :\n      can be used as the marker (this suggestion due to David\n      Wheeler.)\n
  \   + There can now be a blank line between the term and the\n      definitions.\n\n
  \ * Better looking simple tables.  Resolves Issue #180.\n    + Markdown reader:
  simple tables are now given column widths of 0.\n    + Column width of 0 is interpreted
  as meaning: use default column width.\n    + Writers now include explicit column
  width information only\n      for multiline tables.  (Exception:  RTF writer, which
  requires\n      column widths.  In this case, columns are given equal widths,\n
  \     adding up to the text width.)\n    + Simple tables should now look better
  in most output formats.\n\n  * Allow markdown tables without headers (Issue #50).\n
  \   The new syntax is described in README. Also allow optional line of\n    dashes
  at bottom of simple tables.\n\n  * Compensate for width of final table column (Issue
  #144).\n\n  * Treat a backslash followed by a newline as a hard line break\n    in
  markdown.  Resolves Issue #154.  This is a nice alternative\n    to markdown's \"invisible\"
  way of indicating hardline breaks\n    using lines that end with two spaces.\n\n
  \ * Improved performance of markdown reader by ~10% by eliminating the\n    need
  for a separate parsing pass for notes. Raw notes are now stored\n    on the first
  pass (which parses references), then parsed when the\n    note is inserted into
  the AST. The stateNotes field in ParserState\n    is now a list of [(String, String)]
  pairs instead of [(String,\n    [Block])].\n\n  * In markdown reader, treat 4 or
  more * or _ in a row as literal\n    text.  (Trying to parse long strings of * or
  _ as strong or emph\n    leads to exponential performance problems.)\n\n  * Markdown
  reader: Use + rather than %20 for spaces in URLs.\n\n  * Fixed htmlComment parser,
  adding a needed 'try'.\n\n  * Don't print raw HTML in man output.\n\n  * Allow .
  _ and ~ in header identifiers.\n\n  * Specially mark code blocks that were \"literate\"
  in the input.\n    They can then be treated differently in the writers.  This allows\n
  \   authors to distinguish bits of the literate program they are writing\n    from
  source code examples, even if the examples are marked as\n    Haskell for highlighting.
  \ (Issue #174.)\n\n  * Modified html+lhs output to use \"haskell\" highlighter instead\n
  \   of \"literateHaskell\". The highlighting module now adds bird tracks\n    after
  highlighting (for HTML output), if the code block has the\n    \"literate\" class.
  \ This gives better results, because kate's\n    haskell highlighter is much better
  than the literateHaskell\n    highlighter.\n\n  * Fixed handling of footnotes in
  titles (HTML) and headers (LaTeX).\n    (Issue #137.)\n\n  * Support for \"..code-block\"
  directive in RST reader. Not core\n    RST, but used in Sphinx for code blocks annotated
  with syntax\n    information. Thanks to Luke Plant for the patch.\n\n  * Added \"head\"
  to list of block-level HTML tags. Resolves\n    Issue #108.\n\n  * Added stripTags
  to Text.Pandoc.XML.  This is used in the HTML writer.\n\n  * Set utf-8 encoding
  in texinfo headers.\n\n  * Docbook writer: add ids to sections.  Use link for internal
  links.\n    (Issue #60.)\n\n  * Blank lines after lists in MediaWiki writer.\n\n
  \ * Properly handle commented-out list items in markdown.\n    Resolves Issue #142.
  \ Example:\n\n    - a\n    <!--\n    - b\n    -->\n    - c\n\n  * Changed heuristic
  in compactify. compactify has to decide whether a\n    Para that ends a list is
  a Para intentionally, or just because of\n    the blank lines at the end of every
  list. In the latter case the\n    Para is turned to a Plain. The old heuristic was:
  change final Para\n    to Plain iff the other items all end in Plain. This produces
  bad\n    results when, for example, an item contains just a Plain and an HTML\n
  \   comment, as it does in the list above. The new heuristic: change\n    final
  Para to Plain iff the other items don't contain a Para.\n\n  * Added % as an rst
  underline character.  Resolves Issue #173.\n\n  * Fix inline math parser so that
  \\$ is allowed in math.\n    Resolves Issue #169.\n\n  * Translate \\int (integral)
  into unicode when using unicode math\n    method. Resolves Issue #177.\n\n  * markdown2pdf.hs
  improvements:\n    + Use System.IO.UTF8.\n    + Print error messages on last attempt.\n
  \   + Do not create a backup when overwriting a PDF (Issue #166).\n    + Accept
  --longopt=val options.\n    + Added man/man1/markdown2pdf.1 to extra-tmp-files in
  cabal, so that\n      it is properly cleaned.\n\n  * Added haddock comments warning
  that readers assume \\n line endings.\n\n  * Updated COPYRIGHT file.\n\n  * Makefile:
  Changed EXECSBASE so it doesn't pull in hsmarkdown &\n    markdown2pdf. Otherwise
  strip tries to strip shell scripts when you\n    install using 'make'.\n\n  * Changed
  Makefile so it doesn't build Haskell wrappers.\n\n  * Fixed Makefile so it doesn't
  try to build man pages in build-doc.\n\n  * Install pcre3.dll in Windows install
  script; this allows us to\n    package a version of pandoc with highlighting support.\n\npandoc
  (1.2.1)\n\n  [ John MacFarlane ]\n\n  * Fixed regression with --preserveTabs. Brought
  back optPreserveTabs.\n    The trick of setting tabStop to 0 to mean \"preserve
  tabs\" had a bad\n    side effect: strings of 0 spaces were interpreted as indentation.\n
  \   So, with --preserve-tabs, unindented paragraphs were treated as\n    code. Resolves
  Issue #138.\n\n  * HTML writer:  wrap sections in divs.  Resolves Issue #70.\n\n
  \   + hierarchicalize has been rationalized; it builds a hierarchical\n      representation
  of the document from the headers, and simultaneously\n      gives each section a
  unique identifier based on the heading title.\n    + Identifiers are now attached
  to the divs rather than\n      to the headers themselves.\n    + Table of content
  backlinks go to the beginning of the table, rather\n      than to the section reference
  that was clicked.\n    + Code for constructing identifiers has been moved to Text.Pandoc.Shared\n
  \     from the HTML writer, since it is now consumed only by\n      hierarchicalize.\n
  \   + In --strict mode, pandoc just prints bare headings, as before\n      (unless
  --toc has been specified).\n    + In s5 output, it does not wrap sections in divs,
  as that seems to\n      confuse the s5 javascript.\n\n  * Man writer: break lines
  at end of each sentence. groff expects this\n    and treats '.' and '?' differently
  when followed by line ending as\n    opposed to ordinary space. Also, don't escape
  periods. Instead, use\n    zero-width character \\& to avoid unwanted interpretation
  of periods\n    at start of line. Resolves Issue #148.\n\n  * Markdown writer:  Added
  '#' and '>' to list of characters to be\n    escaped in markdown output.  Removed
  '<', as it is not an officially\n    escapable character. This partially resolves
  Issue #96.\n\n  * Make --smart the default for man output format. Otherwise we have\n
  \   trouble dividing lists of endlines into sentences.\n\n  * DocBook writer: Use
  language attribute to indicate source language\n    in code blocks.\n\n  * RST reader:\n\n
  \   + Allow # to continue list, even if the list was started with an\n      explicit
  marker. For example:\n\n        A. my list\n        #. continued\n\n      Resolves
  Issue #140.\n    + Allow continuation lines in line blocks. Also added test cases
  for\n      line blocks for RST reader. Resolves Issue #149.\n    + Allow explicit
  links with spaces in URL: `link <to this>`_\n\n  * Improved LaTeX reader's coverage
  of math modes. Remove displaymath*\n    (which is not in LaTeX) and recognize all
  the amsmath environments\n    that are alternatives to eqnarray, namely equation,
  equation*,\n    gather, gather*, gathered, multline, multline*, align, align*,\n
  \   alignat, alignat*, aligned, alignedat, split. Resolves Issue #103.\n    Thanks
  to shreevatsa.public for the patch.\n\n  * Markdown reader:\n\n    + Allow -, _,
  :, . in markdown attribute names. These are legal in\n      XML attribute names.\n
  \   + Use non-breaking spaces in abbreviations.\n    + Markdown reader: improved
  efficiency of abbreviation parsing.\n      Instead of a separate abbrev parser,
  we just check for\n      abbreviations each time we parse a string. This gives a
  huge\n      performance boost with -S. Resolves Issue #141.\n\n  * Improved efficiency
  of shared parsers:  hexNum, htmlComment,\n    whitespace, indentSpaces.\n\n  * Export
  HTMLMathMethod in Text.Pandoc.\n\n  * Export languagesByExtension in Text.Pandoc.Highlighting.\n\n
  \ * Added new Haskell version of markdown2pdf, due to\n    Paulo Tanimoto.  This
  should be more portable than the old\n    shell script.\n\n  * Made 'pandoc -v'
  more explicit about compiler options.\n    Resolves Issue #139.\n\n  * pandoc.hs:
  \ Made --strict compatible with --standalone, --toc.\n\n  * Use Paths_pandoc to
  get version number, instead of hard-coding it\n    into Text/Pandoc.hs.\n\npandoc
  (1.2)\n\n  [ John MacFarlane ]\n\n  * Added support for literate Haskell. lhs support
  is triggered by\n    '+lhs' suffixes in formats. For example, 'latex+lhs' is literate\n
  \   Haskell LaTeX. '.lhs' files are treated by default as literate\n    markdown.\n\n
  \   + Added stateLiterateHaskell to parser state.\n    + Added parser for lhsCodeBlock
  to Markdown, RST, LaTeX readers.\n    + Added parser for |inline lhs| to LaTeX reader.\n
  \   + Added writerLiterateHaskell to WriterOptions.\n    + Added lhs support to
  Markdown, RST, LaTeX, HTML writers.\n    + Added definition of code environment
  to LaTeX header.\n    + Added tests (run only if highlighting support compiled in).\n
  \   + Documented lhs features in man page and README.\n\n  * In Text.Pandoc.Definition,
  added processWith, processWithM,\n    and queryWith, and deprecated processPandoc
  and queryPandoc\n    for these more general functions.\n\n  * Fixed bug in mediawiki
  writer:  improper closing tags in tables.\n    Thanks to Benct Philip Jonsson for
  reporting the bug.\n\n  * Added --email-obfuscation option.\n\n    + Added writer
  option for email obfuscation.\n    + Implemented email obfuscation options in HTML
  writer.\n    + Added option to option parser.\n    + Documented in README and pandoc
  man page.\n    + Resolves Issue #97.\n\n  * LaTeX writer: fixed bug with empty table
  cells.\n    Resolves Issue #107.  Thanks to rodja.trappe for the patch.\n\n  * Fixed
  bug with header spacing in Markdown and RST writers.\n    A null header (Meta []
  [] []) should not cause a blank line\n    at the beginning of output.  But a blank
  line is needed between\n    a non-null header and the main text.\n\n  * Markdown
  reader: Relax spacing rules for $$ in display math. Now\n    space and newlines
  are allowed after the opening $$ and before the\n    closing $$. However, the display
  math cannot contain an entirely\n    blank line. Resolves Issue #105.\n\n  * Markdown
  reader: Gobble space after Plain blocks containing only\n    raw html inline. Otherwise
  following header blocks are not parsed\n    correctly, since the parser sees blank
  space before them. Resolves\n    Issue #124.\n\n  * Markdown reader: Allow \" as
  well as '' to end a latex double-quote.\n\n  * Conditionally depend on syb and base
  >= 4 if ghc >= 6.10.\n    Resolves Issue #109.\n\n  * Fixed problems in RST and
  markdown output due to bug in pretty-1.0.1.0\n\n    + Added hang' function to Text.Pandoc.Shared;
  this will be used instead\n      of hang, which doesn't work properly in pretty-1.0.1.0.
  \ When pretty\n      is upgraded, we can go back to hang.\n      See  http://article.gmane.org/gmane.comp.lang.haskell.general/16687\n
  \   + Use hang' (and some different techniques) in RST and markdown writers.\n      Some
  output is now a bit different.\n\n  * Brought citeproc support up to date for citeproc-hs-0.2.\n
  \   (Patch by Andrea Rossato.)\n\n  * Moved all haskell source to src subdirectory.
  \ Renamed Main.hs to\n    pandoc.hs.\n\n  * Rewrote hsmarkdown in Haskell for portability
  (src/hsmarkdown.hs).\n    For now, keeping the old shell script too.\n\n  * Added
  TemplateHaskell to Extensions for executable, removed\n    -threaded for library.
  Thanks to duncan.coutts for the bug report.\n    Resolves Issue #121.\n\n  * Moved
  some Extra-Source-Files to Data-Files.\n\n  * Moved tabFilter to Shared.\n\n  *
  In pandoc.hs, removed optPreserveTabs; instead, tabstop of 0 means\n    preserve
  tabs.\n\n  * Minor code cleanup based on hlint suggestions.\n\npandoc (1.1)\n\n
  \ [ John MacFarlane ]\n\n  * Main.hs:\n\n    + Changed date on copyright message
  in Main.hs.\n    + Have the '-v' option print syntax highlighting languages\n      separated
  by commas, and wrapped in lines, instead of in five\n      columns as before.\n\n
  \ * Added --jsmath option.  Resolves Issue #68.\n\n    + Added --jsmath option to
  Main.hs\n    + Added JsMath to HTMLMathMethod in Text.Pandoc.Shared.\n    + Handle
  math appropriately in HTML writer when JsMath selected.\n    + Documented the option
  in README and man page.\n\n  * Text.Pandoc.Shared:  Changed compactify to use a
  better heuristic\n    for tight and loose lists. Final Para is changed to Plain
  if all\n    other list items *end* with a Plain block. Addresses Issue #99.\n\n
  \ * HTML reader:\n\n    + Added colons to protocols in unsanitaryURI. Closes Issue
  #88.\n    + HTML reader: Don't interpret contents of <pre> blocks as markdown.\n
  \     Added rawVerbatimBlock parser.  Resolves Issue #94.\n\n  * Markdown reader:\n\n
  \   + Allow URLs with spaces in them in links and references, but escape\n      them
  as \"%20\".\n    + Allow blank space at the end of horizontal rules.\n\n  * RST
  reader: Modified 'unknownDirective' parser to handle comment\n    blocks correctly,
  and added tests for comment blocks. Resolves Issue\n    #86. Closes Debian Bug #500662.\n\n
  \ * HTML writer:\n\n    + Include classes on tr elements in HTML output:\n      \"header\",
  \"odd\", \"even\".  This allows tables to be styled with\n      lines in alternating
  colors.  Resolves Issue #91.\n    + Enclose all LaTeXMathML bits in <span class=\"LaTeX\">.\n
  \     This prevents parts of the document that are not math from being\n      interpreted
  as math by LaTeXMathML.js.\n\n  * OpenDocument and ODT writers:  Added support for
  HorizontalRule elements,\n    which were formerly ignored.  Resolves Issue #95.\n\n
  \ * Text.Pandoc.Shared:  Modified wrappedTeX to eliminate the line break\n    between
  a footnote and immediately following nonspace characters in\n    LaTeX and ConTeXt
  output. (This gets interpreted as a space, which\n    is not desired in cases like
  `text^[note]---`.)  Resolves Issue #93.\n\n  * Windows installer: Don't require
  admin privileges to run\n    installer.  Modified pandoc-setup.iss, and changed
  modpath.iss to\n    modify HKCU path if user lacks admin privileges.  Also fixed
  case\n    where oldpath is empty (previously this led to the new path\n    beginning
  with a semicolon).\n\n  * Updated INSTALL instructions for Arch packages and OS
  X install using\n    cabal-install.\n\n  * Removed the (now unneeded) debian directory.\n
  \   Removed empty Codec and System directories.\n\n  * Moved odt-styles/ to data/.
  \ Removed unneeded variable in Makefile.\n\n  * Modified Setup.hs so that the \"test\"
  target returns an error status\n    when tests fail, and \"build\" returns a success
  status if\n    the build succeeds.  Resolves Issue #100.\n\n  * Added BUGS to files
  in tarball.\n\n\npandoc (1.0.0.1)\n\n  [ John MacFarlane ]\n\n  * Removed spurious
  reference to pdf output format from pandoc(1) man page.\n\npandoc (1.0)\n\n  [ Andrea
  Rossato ]\n\n  * Added new OpenDocument writer.\n\n  * Added support for SmallCaps
  inline element.\n\n  * Added support for integrating pandoc with citeproc-hs.\n\n
  \   + Added Cite element to definition and writers.\n    + Added Text.Pandoc.Biblio
  module\n    + Note: This support is included only if the 'citeproc'\n      Cabal
  configuration flag is set.\n\n  * Made Pandoc data structure an instance of Typeable.\n
  \   Added new processPandoc and queryPandoc functions, to query\n    or transform
  matching elements in a Pandoc structure.\n\n  [ Peter Wang ]\n\n  * Added new Texinfo
  writer.\n\n  [ John MacFarlane ]\n\n  * Changes to Texinfo writer:\n\n    + No space
  between paragraph and following @verbatim (provides more\n      pleasing appearance
  in text formats)\n    + Blank line consistently after list environments.\n    +
  Removed deVerb.\n    + Use @code instead of @verb for inline code (this solves the
  character\n      escaping problem for texi2dvi and texi2pdf).\n    + Added news
  of Texinfo writer to README.\n    + Added Texinfo to list of formats in man page,
  and removed extra 'groff'.\n    + Added texi & texinfo extensions to Main.hs, and
  fixed bug in determining\n      default output extension.\n    + Modified disallowedInNode
  in Texinfo writer to correct list of disallowed characters.\n\n  * Added tests for
  OpenDocument writer.\n\n  * Added ODT writer (using zip-archive library to package
  output of\n    OpenDocument writer).  Added odt-styles directory with default ODT
  styles.\n\n  * Added new mediawiki writer and tests.\n\n  * Markdown reader: Added
  support for delimited code blocks, with optional\n    syntax highlighting using
  highlighting-kate (if the 'highlighting'\n    configuration option is selected).\n\n
  \   + Currently highlighting is supported only in the HTML writer.\n    + Delimited
  code blocks can have attributes; using the language name as\n      class triggers
  highlighting.\n    + New Attributes parameter in CodeBlock structure.\n    + --version
  now indicates whether syntax highlighting support is compiled\n      in, and prints
  a list of supported languages\n\n  * Removed debian directory. Pandoc is no longer
  a native debian package.\n\n  * Changes to build process:  pandoc can now be built
  from the repository\n    using Cabal.  No unix tools are needed (so, pandoc can
  be built on Windows\n    without Cygwin).\n\n    + Include shell scripts themselves
  in repo, rather than generating from wrappers.\n      Removed wrappers directory
  and wrappers Makefile target.\n    + Text/Pandoc/ASCIIMathML.hs, Text/Pandoc/DefaultHeaders.hs,\n
  \     and Text/Pandoc/Writers/S5.hs are no longer built in Makefile\n      from
  templates in the templates/ directory. Instead, they use template\n      haskell
  to read data at compile time from the relevant files in data/.\n      Template haskell
  functions go in a new module, Text.Pandoc.TH.\n    + man pages are now generated
  in Setup.hs hook, not by Makefile\n    + Makefile 'tarball' target now calls Cabal's
  'sdist'\n    + Added \"Extra-Source-Files\" to pandoc.cabal, so sdist contains everything
  needed\n    + Added \"Build-Type\" field to pandoc.cabal to avoid warning.\n    +
  Added to \"Extra-source-files\" and \"Extra-tmp-files\" in pandoc.cabal,\n      so
  'sdist' and 'clean' will work properly.\n    + Setup.hs now generates man pages
  in a postbuild hook.\n    + Added dependency-checking to Setup.hs, so it only rebuilds
  things\n      that need rebuilding.\n    + Added 'library' and 'executable' configuration
  flags.\n      Cabal can now be told to build just the library or just the executable.\n
  \   + CABALOPTS may now be specified with 'make' to pass Cabal configuration flags.\n
  \     For example:  CABALOPTS=-fhighlighting make\n\n  * Rewrote test suite so it
  doesn't depend on perl or unix tools.\n\n    + Replaced old runtests.pl with a Haskell
  script RunTests.hs.\n    + Added Diff.hs module to be used by RunTests.hs instead
  of unix 'diff'.\n    + Added test hook to Setup.hs, so tests may be run from cabal.\n
  \   + Changed Makefile's 'test' target to run tests via cabal.\n    + Removed old
  generate.sh.\n    + Since we no longer have 'sed' to filter out raw HTML sections\n
  \     from the docbook writer test, or raw LaTeX sections from the\n      context
  writer test, we now just include these sections.\n      They can be taken out if
  it is necessary to process the files.\n    + Updated latex and context writer tests
  to remove extra spaces\n      after '\\\\item'\n    + Added a markdown table reader
  test.\n    + Added markdown-reader-more.txt to test suite, for additional test cases\n
  \     for raw ConTeXt environments and more.\n\n  * Compatibility fixes for CPP,
  Cabal, and haddock:\n\n    + Use CPP in \"Extensions\" field in pandoc.cabal.\n
  \   + Removed use of backslash string continuations in source files.\n\n  * Removed
  pandoc.cabal.ghc66.  We now require Cabal >= 1.2, GHC >= 6.8,\n    base >= 3.\n\n
  \ * Require parsec < 3.\n    The compatibility module in parsec 3.0.0 gives far
  worse performance than\n    parsec 2.1.  Eventually pandoc will be upgraded to use
  the new bytestring\n    version of parsec, and then we'll go to parsec 3.0.0.\n\n
  \ * Removed Text.Regex dependencies by rewriting using plain Haskell\n    (Text.Pandoc.Writers.RTF,
  Text.Pandoc.Writers.HTML, Main.hs)\n\n  * Moved Text.Pandoc.Writers.DefaultHeaders
  -> Text.Pandoc.DefaultHeaders.\n\n  * Makefile:\n\n    + Added 'configure' as dependency
  of 'uninstall-all'.\n      (It uses the Cabal build program.)\n    + Makefile:  only
  use --with-hc-pkg if GHC_PKG is defined.\n      Note that Cabal will automatically
  choose the ghc-pkg appropriate\n      for the compiler selected, so normally specifying
  GHC by itself\n      is sufficient.\n\n  * Removed Text.Pandoc.UTF8 module; instead,
  depend on utf8-string and use\n    its IO and conversion functions.\n\n  * Added
  -Wall to ghc-options in pandoc.cabal.  Cleaned up modules so that\n    everything
  is -Wall clean.\n\n    + Added pragma to HTML writer to avoid deprecation warning
  for use of \"start\" attribute.\n    + Added pragma to Text/Pandoc/Shared.hs to
  get rid of \"orphan instance\" warnings.\n      (These are caused by the Lift instance
  for ByteString.)\n\n  * Changed the comment used to replace unsafe HTML if sanitize-html
  option\n    selected.\n\n  * Made -c/--css option repeatable on the command line
  (like -H, -A, -B).\n\n  * Moved XML-formatting functions to new unexported module
  Text.Pandoc.XML.\n\n  * Escape '\\160' as \"&#160;\", not \"&nbsp;\" in XML.\n    \"nbsp\"
  isn't a predefined XML entity.\n\n  * Fixed bug in RST reader, which would choke
  on: \"p. one\\ntwo\\n\".\n    Added some try's in ordered list parsers.\n\n  * Man
  writer:  don't escape \" as \\\".\n\n  * Allow newline before URL in markdown link
  references.  Resolves Issue #81.\n    Added tests for this issue in new \"markdown-reader-more\"
  tests.\n    Changed RunTests.hs to run these tests.\n\n  * Support for display math.
  \ Resolves Issue #47.\n\n    + Added a DisplayMath/InlineMath selector to Math inlines.\n
  \   + Markdown parser yields DisplayMath for $$...$$.\n    + LaTeX parser yields
  DisplayMath when appropriate.  Removed\n      mathBlock parsers, since the same
  effect is achieved by the math\n      inline parsers, now that they handle display
  math.\n    + Writers handle DisplayMath as appropriate for the format.\n    + Modified
  tests accordingly; added new tests for display math.\n\n  * Use LaTeXMathML instead
  of ASCIIMathML.  LaTeXMathML is closer\n    to LaTeX in its display of math, and
  supports many non-math LaTeX environments.\n\n    + Changed -m option to use LaTeXMathML
  rather than ASCIIMathML.\n    + Modified HTML writer to print raw TeX when LaTeXMathML
  is\n      being used instead of suppressing it.\n    + Removed ASCIIMathML files
  from data/ and added LaTeXMathML.\n    + Replaced ASCIIMathML with LaTeXMathML in
  source files.\n    + Modified README and pandoc man page source.\n    + Added --latexmathml
  option (kept --asciimathml as a synonym\n      for backwards compatibility)\n\n
  \ * Markdown reader: Parse setext headers before atx headers.\n    Test case:\n
  \      # hi\n       ====\n    parsed by Markdown.pl as an H1 header with contents
  \"# hi\".\n\n  * Markdown reader: Treat \"mixed\" lists the same way as Markdown.pl
  does.\n    The marker on the first list item determines the type of the whole\n
  \   list.  Thus, a list like\n       1. one\n       -  two\n       *  three\n    gets
  parsed as a single ordered list.  (Previous versions of pandoc\n    treated this
  as an ordered list with an unordered sublist.)\n\n  * Markdown smart typography:\n\n
  \   + Em dashes no longer eat surrounding whitespace.  Resolves Issue #69.\n    +
  Use nonbreaking spaces after known abbreviations in markdown parser.\n      Thus,
  for example, \"Mr. Brown\" comes out as \"Mr.~Brown\" in LaTeX, and does\n      not
  produce a sentence-separating space.  Resolves Issue #75.\n\n  * Markdown writer:
  Print unicode \\160 literally, rather than as &nbsp;.\n\n  * Treat '\\ ' in (extended)
  markdown as nonbreaking space.\n    Print nonbreaking space appropriately in each
  writer (e.g. ~ in LaTeX).\n\n  * The '--sanitize-html' option now examines URIs
  in markdown links\n    and images, and in HTML href and src attributes.  If the
  URI scheme\n    is not on a whitelist of safe schemes, it is rejected.  The main
  point\n    is to prevent cross-site scripting attacks using 'javascript:' URIs.\n
  \   See http://www.mail-archive.com/markdown-discuss@six.pairlist.net/msg01186.html\n
  \   and http://ha.ckers.org/xss.html.  Resolves Issue #62.\n\n  * HTML writer:\n\n
  \   + Override Text.XHtml's stringToHtml function,\n      so that characters below
  0xff are not converted to numerical entity\n      references. Also convert '\\160'
  to \"&nbsp;\". This should aid readability\n      and editability of the HTML source.
  It does presuppose that the HTML\n      will be served as UTF-8.\n    + In code
  blocks, change leading newlines to <br /> tags.\n      (Some browsers ignore them.)
  \ Resolves Issue #71.\n      See http://six.pairlist.net/pipermail/markdown-discuss/2008-May/001297.html\n
  \   + Use style attributes rather than css classes for strikethrough\n      and
  ordered list styles.  This works better when fragments, rather than\n      standalone
  documents, are generated.\n\n  * HTML reader: Count anything that isn't a known
  block (HTML) tag as an\n    inline tag (rather than the other way around).  Added
  \"html\", \"head\", and\n    \"body\" to list of block tags.  Resolves Issue #66,
  allowing\n    <lj> to count as an inline tag.\n\n  * RTF writer: Fixed bug.  Extra
  spaces were being printed after emphasized,\n    boldface, and other inline elements.
  \ Resolves Issue #64.\n\n  * LaTeX reader:  improvements in raw LaTeX parsing.\n\n
  \   + \"loose punctuation\" (like {}) parsed as Space\n    + Para elements must
  contain more than Str \"\" and Space elements\n    + Added parser for \"\\ignore\"
  command used in literate haskell.\n    + Reworked unknownCommand and rawLaTeXInline:
  when not in \"parse raw\"\n      mode, these parsers simply strip off the command
  part and allow\n      the arguments to be parsed normally.  So, for example,\n      \\blorg{\\emph{hi}}
  will be parsed as Emph \"hi\" rather than\n      Str \"{\\\\emph{hi}}\".\n    +
  Parse lhs \"code\" environments as verbatim.\n      Refactored parsers for verbatim
  environments.\n    + Removed specialEnvironment parser.\n    + parse '{}', if present,
  after \\textless, \\textgreater,\n      \\textbar, \\textbackslash, \\ldots.\n    +
  Parse unescaped special characters verbatim rather than\n      changing them to
  spaces.  This way arguments of unknown\n      commands will appear in braces.\n\n
  \ * Parse raw ConTeXt environments as TeX in markdown reader.\n    Resolves Issue
  #73.\n\n  * Moved BlockWrapper and wrappedBlocksToDoc from ConTeXt writer to Shared.\n\n
  \ * Made some structural changes to parsing of raw LaTeX environments.\n    Previously
  there was a special block parser for LaTeX environments.\n    It returned a Para
  element containing the raw TeX inline. This has\n    been removed, and the raw LaTeX
  environment parser is now used in the\n    rawLaTeXInline parser. The effect is
  exactly the same, except that we\n    can now handle consecutive LaTeX and ConTeXt
  environments not separated\n    by spaces.  This new flexibility is required by
  the example in\n    Issue #73:\n\n        \\placeformula \\startformula\n             L_{1}
  = L_{2}\n        \\stopformula\n\n    API change: The LaTeX reader now exports rawLaTeXEnvironment'
  (which\n    returns a string) rather than rawLaTeXEnvironment (which returns a block\n
  \   element). This is more likely to be useful in other applications.\n\n  * Use
  \\textsubscr instead of \\textsubscript for LaTeX subscript macro.\n    \\textsubscript
  conflicts with a definition in the memoir class.\n    Resolves Issue #65.\n\n  *
  Removed unneeded space after \"\\\\item\" in LaTeX and ConTeXt output.\n\n  * Added
  amsmath package to default LaTeX header. Resolves Issue #48.\n\n  * Added \\setupitemize[autointro]
  to ConTeXt header, to prevent orphaned\n    list introduction lines.\n\n  * Changed
  Float to Double in definition of Table element.\n    (Double is more efficient in
  GHC.)\n\n  * Fixed bug in Markdown parser:  regular $s triggering math mode.\n    For
  example:  \"shoes ($20) and socks ($5).\"\n    The fix consists in two new restrictions:\n\n
  \   + the $ that ends a math span may not be directly followed by a digit.\n    +
  no blank lines may be included within a math span.\n\n    Thanks to Joseph Reagle
  for noticing the bug.\n\n  * Use Data.List's 'intercalate' instead of custom 'joinWithSep'.\n
  \   Removed 'joinWithSep' from Text.Pandoc.Shared.\n\n  * Updated README and man
  pages.  Acknowledge contributors in README.\n    Added paragraph to README about
  producing S5 with separate CSS/javascript.\n\n  * Updated INSTALL to reflect new
  build system (including configuration\n    options) and document new dependencies.
  \ Added note to INSTALL that\n    Cabal >= 1.2 is required for build.  Resolves
  Issue #74.\n\n  * Fixed some haddock documentation errors.\n\n  * Small fix to markdown2pdf
  man page: only input needs to be piped through iconv.\n\npandoc (0.46) unstable;
  urgency=low\n\n  [ John MacFarlane ]\n\n  * Made -H, -A, and -B options cumulative:
  if they are specified\n    multiple times, multiple files will be included.\n\n
  \ * Added optional HTML sanitization using a whitelist.\n    When this option is
  specified (--sanitize-html on the command line),\n    unsafe HTML tags will be replaced
  by HTML comments, and unsafe HTML\n    attributes will be removed.  This option
  should be especially useful\n    for those who want to use pandoc libraries in web
  applications, where\n    users will provide the input.\n\n    + Main.hs:  Added
  --sanitize-html option.\n\n    + Text.Pandoc.Shared:  Added stateSanitizeHTML to
  ParserState.\n\n    + Text.Pandoc.Readers.HTML:\n      - Added whitelists of sanitaryTags
  and sanitaryAttributes.\n      - Added parsers to check these lists (and state)
  to see if a given\n        tag or attribute should be counted unsafe.\n      - Modified
  anyHtmlTag and anyHtmlEndTag to replace unsafe tags\n        with comments.\n      -
  Modified htmlAttribute to remove unsafe attributes.\n      - Modified htmlScript
  and htmlStyle to remove these elements if\n        unsafe.\n\n    + Modified README
  and man pages to document new option.\n\n  * Improved handling of email addresses
  in markdown and reStructuredText.\n    Consolidated uri and email address parsers.
  \ (Resolves Issue #37.)\n\n    + New emailAddress and uri parsers in Text.Pandoc.Shared.\n
  \     - uri parser uses parseURI from Network.URI.\n      - emailAddress parser
  properly handles email addresses with periods\n        in them.\n\n    + Removed
  uri and emailAddress parsers from Text.Pandoc.Readers.RST\n      and Text.Pandoc.Readers.Markdown.\n\n
  \ * Markdown reader:\n\n    + Fixed emph parser so that \"*hi **there***\" is parsed
  as a Strong\n      nested in an Emph. (A '*' is only recognized as the end of the\n
  \     emphasis if it's not the beginning of a strong emphasis.)\n\n    + Moved blockQuote
  parser before list parsers for performance.\n\n    + Modified 'source' parser to
  allow backslash-escapes in URLs.\n      So, for example, [my](/url\\(1\\)) yields
  a link to /url(1).\n      Resolves Issue #34.\n\n    + Disallowed links within links.
  (Resolves Issue #35.)\n      - Replaced inlinesInBalanced with inlinesInBalancedBrackets,
  which\n        instead of hard-coding the inline parser takes an inline parser\n
  \       as a parameter.\n      - Modified reference and inlineNote to use inlinesInBalancedBrackets.\n
  \     - Removed unneeded inlineString function.\n      - Added inlineNonLink parser,
  which is now used in the definition of\n        reference.\n      - Added inlineParsers
  list and redefined inline and inlineNonLink parsers\n        in terms of it.\n      -
  Added failIfLink parser.\n\n    + Better handling of parentheses in URLs and quotation
  marks in titles.\n      - 'source' parser first tries to parse URL with balanced
  parentheses;\n        if that doesn't work, it tries to parse everything beginning
  with\n        '(' and ending with ')'.\n      - source parser now uses an auxiliary
  function source'.\n      - linkTitle parser simplified and improved, under assumption
  that it\n        will be called in context of source'.\n\n    + Make 'block' conditional
  on strictness state, instead of using\n      failIfStrict in block parsers. Use
  a different ordering of parsers\n      in strict mode (raw HTML block before paragraph)
  for performance.\n      In non-strict mode use rawHtmlBlocks instead of htmlBlock.\n
  \     Simplified htmlBlock, since we know it's only called in strict\n      mode.\n\n
  \   + Improved handling of raw HTML.  (Resolves Issue #36.)\n      - Tags that can
  be either block or inline (e.g. <ins>) should\n        be treated as block when
  appropriate and as inline when\n        appropriate. Thus, for example,\n        <ins>hi</ins>\n
  \       should be treated as a paragraph with inline <ins> tags, while\n        <ins>\n
  \       hi\n        </ins>\n        should be treated as a paragraph within <ins>
  tags.\n      - Moved htmlBlock after para in list of block parsers.  This ensures\n
  \       that tags that can be either block or inline get parsed as inline\n        when
  appropriate.\n      - Modified rawHtmlInline' so that block elements aren't treated
  as\n        inline.\n      - Modified para parser so that paragraphs containing
  only HTML tags and\n        blank space are not allowed.  Treat these as raw HTML
  blocks instead.\n\n    + Fixed bug wherein HTML preceding a code block could cause
  it to\n      be parsed as a paragraph.  The problem is that the HTML parser\n      used
  to eat all blank space after an HTML block, including the\n      indentation of
  the code block.  (Resolves Issue #39.)\n      - In Text.Pandoc.Readers.HTML, removed
  parsing of following space\n        from rawHtmlBlock.\n      - In Text.Pandoc.Readers.Markdown,
  modified rawHtmlBlocks so that\n        indentation is eaten *only* on the first
  line after the HTML\n        block.  This means that in\n        <div>\n             foo\n
  \       <div>\n        the foo won't be treated as a code block, but in\n        <div>\n\n
  \           foo\n\n        </div>\n        it will.  This seems the right approach
  for least surprise.\n\n  * RST reader:\n\n    + Fixed bug in parsing explicit links
  (resolves Issue #44).\n      The problem was that we were looking for inlines until
  a '<' character\n      signaled the start of the URL; so, if you hit a reference-style
  link,\n      it would keep looking til the end of the document.  Fix:  change\n
  \     inline => (notFollowedBy (char '`') >> inline).  Note that this won't\n      allow
  code inlines in links, but these aren't allowed in resT anyway.\n\n    + Cleaned
  up parsing of reference names in key blocks and links.\n      Allow nonquoted reference
  links to contain isolated '.', '-', '_', so\n      so that strings like 'a_b_' count
  as links.\n\n    + Removed unnecessary check for following link in str.\n      This
  is unnecessary now that link is above str in the definition of\n      'inline'.\n\n
  \ * HTML reader:\n\n    + Modified rawHtmlBlock so it parses </html> and </body>
  tags.\n      This allows these tags to be handled correctly in Markdown.\n      HTML
  reader now uses rawHtmlBlock', which excludes </html> and </body>,\n      since
  these are handled in parseHtml.  (Resolves Issue #38.)\n\n    + Fixed bug (emph
  parser was looking for `<IT>` tag, not `<I>`).\n\n    + Don't interpret contents
  of style tags as markdown.\n      (Resolves Issue #40.)\n      - Added htmlStyle,
  analogous to htmlScript.\n      - Use htmlStyle in htmlBlockElement and rawHtmlInline.\n
  \     - Moved \"script\" from the list of tags that can be either block or\n        inline
  to the list of block tags.\n\n    + Modified rawHtmlBlock to use anyHtmlBlockTag
  instead of anyHtmlTag\n      and anyHtmlEndTag.  This fixes a bug in markdown parsing,
  where\n      inline tags would be included in raw HTML blocks.\n\n    + Modified
  anyHtmlBlockTag to test for (not inline) rather than\n      directly for block.
  \ This allows us to handle e.g. docbook in\n      the markdown reader.\n\n  * LaTeX
  reader:  Properly recognize --parse-raw in rawLaTeXInline.\n    Updated LaTeX reader
  test to use --parse-raw.\n\n  * HTML writer:\n\n    + Modified rules for automatic
  HTML header identifiers to\n      ensure that identifiers begin with an alphabetic
  character.\n      The new rules are described in README.  (Resolves Issue #33.)\n\n
  \   + Changed handling of titles in HTML writer so you don't get\n      \"titleprefix
  - \" followed by nothing.\n\n  * ConTeXt writer: Use wrappers around Doc elements
  to ensure proper\n    spacing.  Each block element is wrapped with either Pad or
  Reg.\n    Pad'ed elements are guaranteed to have a blank line in between.\n\n  *
  RST writer:\n\n    + Refactored RST writer to use a record instead of a tuple for
  state,\n      and to include options in state so it doesn't need to be passed as\n
  \     a parameter.\n\n    + Use an interpreted text role to render math in restructuredText.\n
  \     See http://www.american.edu/econ/itex2mml/mathhack.rst for the\n      strategy.\n\n
  \ [ Recai Oktaş ]\n\n  * Debian packaging changes:\n\n    + Remove the empty 'include'
  directory in -dev package, which lintian\n      complains about.\n    + Bump Standarts-Version
  to 3.7.3.\n    + Use new 'Homepage:' field to specify the upstream URL on suggestion
  of\n      lintian.\n\n -- Recai Oktaş <roktas@debian.org>  Tue, 08 Jan 2008 05:13:31
  +0200\n\npandoc (0.45) unstable; urgency=low\n\n  [ John MacFarlane ]\n\n  * Simplified
  parsing of reference keys and notes in markdown and RST\n    readers: The Reference
  data structure from Text.Pandoc.Shared is no\n    longer needed, since referenceKey
  and noteBlock parses return strings\n    (as many blank lines as were occupied by
  the key or note) and update\n    state themselves.  getPosition and setPosition
  are now used to ensure\n    that error messages will give the correct line number.
  This yields\n    cleaner (and slightly faster) code, with more accurate parsing
  error\n    messages.\n\n  * Added new Math inline element:\n\n    + Markdown and
  LaTeX readers now convert TeX math into Math elements,\n      not TeX.\n    + This
  allows math to be treated differently from raw TeX in output.\n      TeX elements
  are no longer printed in output formats other than\n      Markdown, LaTeX, and ConTeXt.
  \ But Math elements are always printed.\n\n  * New default handling of math in writers:\n\n
  \   + New module Text.Pandoc.Readers.TeXMath exports readTeXMath, which\n      parses
  raw TeX math and outputs a string of Pandoc inlines that\n      tries to render
  it as far as possible using unicode characters,\n      lapsing into literal TeX
  when needed.\n    + readTeXMath is now used for default HTML output in HTML, S5,
  RTF,\n      and Docbook, if no other method for displaying math in HTML is\n      specified.
  \ Enclosing $'s are no longer printed by default.\n    + By default, math is put
  inside `<span class=\"math\">`. This way it can be\n      distinguished from the
  surrounding text, e.g. put in a different\n      font.\n\n  * New --gladtex and
  --mimetex options for display of math in HTML:\n\n    + If --gladtex is specified,
  math is output between `<eq>` tags, so\n      it can be processed by gladTeX.\n
  \   + If --mimetex is specified, math is put in `<img>` tags with a link\n      to
  the mimetex CGI script (or any other script that takes TeX math\n      as input
  and outputs an image).  The URL of the script may be\n      specified, but defaults
  to /cgi-bin/mimetex.cgi.\n    + HTMLMathMethod structure in WriterOptions keeps
  track of how to\n      display math in HTML output.\n    + Updated README with a
  description of the four options for displaying\n      math in HTML.\n\n  * HTML
  reader:\n\n    + Fixed bug: parser for minimized attributes should not swallow\n
  \     trailing spaces.\n    + Simplified HTML attribute parsing.\n    + Changed
  parsing of code blocks in HTML reader:  `<code>` tag is no\n      longer needed.
  `<pre>` suffices. All HTML tags in the code block\n      (e.g. for syntax highlighting)
  are skipped, because they are not\n      portable to other output formats. A `<code>...</code>`
  block not\n      surrounded by `<pre>` now counts as inline HTML, not a code block.\n
  \   + Remove just one leading and one trailing newline from contents of\n      `<pre>...</pre>`
  in codeBlock parser.\n\n  * Markdown reader:\n\n    + Removed support for box-style
  block quotes.\n    + Require space before title in links and references.\n      This
  fixes a bug in parsing URLs like http://silly/url(withparen).\n    + Improved and
  simplified setextHeader parser.\n    + Fixed logic in smart quote parsing, adding
  some needed 'try'\n      statements.\n    + Fixed smart quote parsing so that unicode
  characters 8216 and 8217\n      are recognized as single quotes, and 8220 and 8221
  as double quotes.\n\n  * RST reader:\n\n    + Fixed bug in parsing of code blocks.
  Previously a full tab indent\n      was required, but RST allows code to be indented
  any amount.\n      Resolves Issue #27.\n    + Allow field lists to be indented.\n
  \   + Parse the contents of field lists instead of treating as a raw string.\n    +
  Represent field lists as definition lists instead of blockquotes.\n    + Fixed bug
  in which metadata would be overridden if the document\n      contained multiple
  field lists.\n    + Parse fields associated with '.. image::' blocks, and use 'alt'\n
  \     field, if given, for image alt and title attributes.\n\n  * LaTeX reader:\n\n
  \   + Modified specialChar so that '\"' characters are parsed.\n    + Fixed a bug
  in parsing of \\[ \\] math blocks (thanks to Mark Kalderon).\n\n  * HTML writer:\n\n
  \   + Changes in handling of math (see above).\n    + Don't produce HTML for table
  of contents if there are\n      no headers. (This would be an empty list, which
  is invalid XHTML.)\n\n  * Markdown writer:\n\n    + Don't print title attribute
  if title is empty. (This differs from\n      the behavior of Markdown.pl, and agrees
  with PHP Markdown. But John\n      Gruber has indicated that he prefers this behavior.)
  Adjusted test\n      suite accordingly.\n    + Fixed incorrect line wrapping in
  paragraphs including hard line\n      breaks. Resolves Issue #25.\n    + Fixed bug
  in markdown writer:  If an ordered list item began with\n      a marker greater
  than 3 characters in width, and the item took more\n      than one line, it would
  appear on the line after the list marker,\n      e.g.:\n\n          (12)\n              My
  list item.\n              Multiline.\n\n      Now it works as follows:\n\n          (12)
  My list item.\n              Multiline.\n\n  * RST writer\n\n    + Fixed bug in
  RST writer's handling of ordered lists. Previously,\n      list items with multiple
  lines would not always line up with\n      single-line list items. Now, list items
  are nested the length of\n      the list marker + 1. This looks better and ensures
  that list items\n      all line up. (Note that list markers are padded to the length
  of\n      the longest list marker in the series.)\n    + Use 3-space indent for
  unordered lists.\n    + If label for a link reference contains a colon, surround
  it by `\n      signs so it won't be interpreted as the end of the link label.\n\n
  \ * LaTeX writer:\n\n    + Cleaner output for footnotes. Footnotes now always begin
  on a new\n      line, and the final } is on a line by itself only when it needs
  to\n      be (i.e. only when the note ends with a Verbatim environment).\n    +
  Added writer options to state, so state doesn't need to be passed as\n      a parameter.\n
  \   + Text wrapping now provided, using wrapTeXIfNeeded.\n\n  * ConTeXt writer:
  \ many improvements for more idiomatic ConTeXt output\n    (thanks to Idris Samawi
  Hamid for suggestions).\n\n    + PrettyPrint module now used for output.\n    +
  Writer options are now in state, so they don't have to be passed as\n      a parameter.\n
  \   + Text wrapping now provided, using wrapTeXIfNeeded.\n    + Better treatment
  of footnotes:  footnotes are always on lines by\n      themselves, and the final
  } is on a line by itself only when\n      it needs to be (after \\stoptyping).\n
  \   + Use \\subject, \\subsubject, ... or \\section, \\subsection, ... for headings,\n
  \     depending on whether --number-sections option is selected.\n    + Extra blank
  line inserted after \\stopitemize\n    + Use new, \"official\" definition of blockquote
  environment. Also, use\n      blank line after \\startblockquote to balance blank
  line at the end.\n    + Both itemized and enumerated lists are now generated using\n
  \     \\start-stopitemize, with appropriate options. Removed definitions\n      of
  ltxenum and ltxitem, which are no longer needed. Provided\n      defaults for itemized
  lists in the preamble. State keeps track of\n      ordered list level, so that when
  default numbering is specified,\n      the appropriate scheme can be used.\n    +
  Changed \\useurl to \\useURL.\n    + Changed link color from red to blue.\n    +
  Use \\subsubsubsubsection etc., since these are supported\n      (up to at least
  sub x 5).\n\n  * Text.Pandoc.Shared:\n\n    + Save and restore position in parseFromString,
  so that accurate\n      error messages can be given.\n    + Improved efficiency
  of romanNumeral parser.\n    + Added wrappedTeX and wrapTeXIfNeeded functions.  These
  ensure\n      that footnotes occur on lines by themselves (to make them\n      easier
  to see and move) and do not screw up line wrapping.\n\n  * Text.Pandoc.UTF8:  modified
  fromUTF8 to strip out the BOM\n    if present.  Windows Notepad and other applications
  insert a\n    BOM at the beginning of a UTF8 file.\n\n  * Main.hs (tabFilter): Treat
  '\\r' at end of line as newline (in\n    addition to \"\\r\\n\" and '\\n').\n\n
  \ * Added a writer option for wrapped text and a command-line option\n    '--no-wrap',
  which disables text wrapping and minimizes whitespace\n    in HTML. (Resolves Issue
  #26.)\n\n    + Added support for '--no-wrap' to Main.hs.\n    + Added wrapIfNeeded
  function to Text.Pandoc.Shared.\n    + Use wrapIfNeeded instead of wrapped in the
  RST, Man, Docbook, and\n      Markdown writers.\n    + Added render and renderFragment
  helpers to HTML writer.\n\n  * Modified html2markdown to run tidy only if the HTML
  cannot be\n    parsed. Previously html2markdown piped all input through tidy\n    before
  passing it to pandoc. This caused problems on certain pages\n    (e.g. http://daringfireball.com/markdown)
  which have well-formed\n    XHTML that causes tidy to choke. The solution is to
  pipe through\n    tidy only if pandoc cannot parse the input by itself. This means\n
  \   that a temp file is now always used, even when input comes from a\n    local
  file or standard input.\n\n  * Removed 'version' constant from Main.hs; added 'pandocVersion'
  to\n    Text.Pandoc library.\n\n  * pandoc.cabal:\n\n    + Modified to work with
  GHC 6.8 and Cabal configurations. (For GHC\n      6.8, pretty and containers must
  be added to Build-Depends, and it\n      is desirable to use the -O2 compiler option.)
  \ Cabal configurations\n      allows one to select options depending on the compiler
  version.\n      For GHC 6.6, the splitBase option can be disabled.\n    + pandoc.cabal.ghc66
  is provided for users with older versions of\n      Cabal, which do not support
  configurations.\n    + Use Ghc-Prof-Options to ensure that '-auto-all' is used when\n
  \     '--enable-(executable|library)-profiling' is specified. Updated\n      PROFILING
  instructions accordingly.\n\n  * Makefile:\n\n    + Makefile now checks GHC version.
  If GHC is 6.6, pandoc.cabal.ghc66\n      is copied to pandoc.cabal, and the old
  pandoc.cabal is copied\n      to pandoc.cabal.orig. Otherwise, pandoc.cabal is copied
  to\n      pandoc.cabal.orig but otherwise unmodified. This way, the Makefile\n      will
  work properly with either GHC 6.6 or 6.8.\n    + Changed BUILDCONF to point to dist/setup-config,
  not .setup-config.\n      This is where current versions of Cabal put it.\n    +
  Added $(BUILDCMD) target, so setup doesn't get compiled every time.\n    + Removed
  dependency of templates on ./templates, which is circular\n      now that templates
  is a subdirectory of the top-level.\n\n  * MacPorts Portfile:\n\n    + Modified
  to install the pandoc library in addition to programs.\n    + Installation must
  be done manually rather than using Makefile's\n      install-all.\n    + Note that
  the library must be registered in the activate phase,\n      after the library files
  have been copied out of the destroot.\n      Cabal generates a 'register.sh' script
  that will do this.\n\n  * debian/control: Added libghc6-network-dev, libghc6-xhtml-dev,
  and\n    libghc6-mtl-dev as dependencies for libghc6-pandoc-dev.\n    Closes: #445235\n\n
  \ * debian/rules:  Converted to UTF-8.\n\n  * Changed pandoc home page to http://johnmacfarlane.net/pandoc/.\n\n
  \ * Updated ASCIIMathML.js to latest version.\n\n  * Directory structure:\n\n    +
  Moved everything from src into the top-level directory.\n    + Changed references
  to source directory in Makefile and\n      pandoc.cabal.*.\n    + Moved ASCIIMathML.js,
  headers, and ui into templates directory.\n    + Modified fillTemplates.pl to reflect
  new paths.\n\n  [ Recai Oktaş ]\n\n  * Makefile: Fixed the issue of having two copies
  of the library\n    documentation under some usage scenarios.\n\n  * Replaced 'ghc'
  with '$(GHC)' in Makefile, and made GHC\n    and GHC_PKG configurable through the
  environment, to support\n    unusual ghc installations.  For example:\n    GHC=/opt/ghc/bin/ghc
  GHC_PKG=/opt/ghc/bin/ghc-pkg make\n\n -- Recai Oktaş <roktas@debian.org>  Sun, 07
  Oct 2007 20:51:43 +0300\n\npandoc (0.44) unstable; urgency=low\n\n  [ John MacFarlane
  ]\n\n  * Fixed bug in HTML writer:  when --toc was used, anchors were put around\n
  \   headers, which is invalid XHTML (block content within inline element).\n    Now
  the anchors are put inside the header tags.  Resolves Issue #23.\n\n  * Added xmlns
  attribute to html element in html writer tests.\n    This attribute is added by
  more recent versions of the\n    xhtml library (>= 3000), and is required for valid
  XHTML.\n\n  [ Recai Oktaş ]\n\n  * On configure, compile 'Setup.hs' to 'setup' and
  use 'setup' as the build\n    command instead of 'runhaskell', which, on some platforms
  (such as s390,\n    alpha, m68k), throws the following error:\n\n        runhaskell
  Setup.hs configure --prefix=/usr\n        ghc-6.6.1: not built for interactive use\n\n
  \   This causes a serious FTBFS bug.  Closes: #440668.\n\n -- Recai Oktaş <roktas@debian.org>
  \ Mon, 03 Sep 2007 18:24:02 +0300\n\npandoc (0.43) unstable; urgency=low\n\n  [
  John MacFarlane ]\n\n  * The focus of this release is performance.  The markdown
  parser\n    is about five times faster than in 0.42, based on benchmarks\n    with
  the TextMate manual.\n\n  * Main.hs: Replaced CRFilter and tabFilter with single
  function\n    tabFilter, which operates on the whole string rather than breaking\n
  \   it into lines, and handles dos-style line-endings as well as tabs.\n\n  * Added
  separate LaTeX reader and native reader tests; removed\n    round-trip tests.\n\n
  \ * Text.Pandoc.Shared:\n\n    + Removed tabsToSpaces and tabsInLine (they were
  used only in Main.hs.)\n    + General code cleanup (to elimante warnings when compiling
  with -Wall.)\n    + Added 'wrapped' function, which helps wrap text into paragraphs,\n
  \     using the prettyprinting library.\n    + Rewrote charsInBalanced and charsInBalanced'.\n
  \       - Documented restriction: open and close must be distinct characters.\n
  \       - Rearranged options for greater efficiency.\n        - Bug fix: Changed
  inner call to charsInBalanced inside\n          charsInBalanced' to charsInBalanced'.\n
  \   + anyLine now requires that the line end with a newline (not eof).\n      This
  is a harmless assumption, since we always add newlines to the\n      end of a block
  before parsing with anyLine, and it yields a 10% speed\n      boost.\n    + Removed
  unnecessary 'try' in anyLine.\n    + Removed unneeded 'try' from romanNumeral parser.\n
  \   + Use notFollowedBy instead of notFollowedBy' in charsInBalanced.\n    + Removed
  unneeded 'try' in parseFromString.\n    + Removed unneeded 'try' from stringAnyCase.
  \ (Now it behaves\n      like 'string'.)\n    + Changed definition of 'enclosed'
  in Text.Pandoc.Shared so that\n      'try' is not automatically applied to the 'end'
  parser. Added\n      'try' in calls to 'enclosed' where needed. Slight speed increase.\n\n
  \ * Writers:\n\n    + Replaced individual wrapping routines in RST, Man, and Markdown\n
  \     writers with 'wrapped' from Text.Pandoc.Shared.\n    + Rewrote LaTeX writer
  to use the prettyprinting library,\n      so we get word wrapping, etc.\n    + Modified
  latex writer tests for new latex writer using prettyprinter.\n    + Fixed bug in
  LaTeX writer: autolinks would not cause\n      '\\usepackage{url}' to be put in
  the document header. Also, changes\n      to state in enumerated list items would
  be overwritten.\n    + In Markdown writer, escape paragraphs that begin with ordered
  list\n      markers, so they don't get interpreted as ordered lists.\n\n  * Text.Pandoc.Reades.LaTeX:\n\n
  \   + Fixed bug in LaTeX reader, which wrongly assumed that the roman\n      numeral
  after \"enum\" in \"setcounter\" would consist entirely of\n      \"i\"s. 'enumiv'
  is legitimate.\n    + LaTeX command and environment names can't contain numbers.\n
  \   + Rearranged order of parsers in inline for slight speed improvement.\n    +
  Added '`' to special characters and 'unescapedChar'.\n\n  * Text.Pandoc.Readers.RST:\n\n
  \   + Removed unneeded try's in RST reader; also minor code cleanup.\n    + Removed
  tabchar.\n    + Rearranged parsers in inline (doubled speed).\n\n  * Text.Pandoc.Readers.Markdown:\n\n
  \   + Skip notes parsing if running in strict mode. (This yields a nice\n      speed
  improvement in strict mode.)\n    + Simplify autolink parsing code, using Network.URI
  to test for\n      URIs. Added dependency on network library to debian/control and\n
  \     pandoc.cabal.\n    + More perspicuous definition of nonindentSpaces.\n    +
  Removed unneeded 'try' in 'rawLine'.\n    + Combined linebreak and whitespace into
  a new whitespace parser, to\n      avoid unnecessary reparsing of space characters.\n
  \   + Removed unnecessary 'try' in 'codeBlock', 'ellipses', 'noteMarker',\n      'multilineRow',
  'dashedLine', 'rawHtmlBlocks'.\n    + Use lookAhead in parsers for setext headers
  and definition lists\n      to see if the next line begins appropriately; if not,
  don't waste\n      any more time parsing.\n    + Don't require blank lines after
  code block. (It's sufficient to\n      end code block with a nonindented line.)\n
  \   + Changed definition of 'emph': italics with '_' must not\n      be followed
  by an alphanumeric character. This is to help\n      prevent interpretation of e.g.
  `[LC_TYPE]: my_type` as\n      `[LC<em>TYPE]:my</em>type`.\n    + Improved Markdown.pl-compatibility
  in referenceLink: the two parts\n      of a reference-style link may be separated
  by one space, but not\n      more... [a] [link], [not]    [a link].\n    + Fixed
  markdown inline code parsing so it better accords with\n      Markdown.pl: the marker
  for the end of the code section is a clump\n      of the same number of `'s with
  which the section began, followed\n      by a non-` character. So, for example,\n
  \        ` h ``` i ` -> `<code>h ``` i</code>`.\n    + Split 'title' into 'linkTitle'
  and 'referenceTitle', since the\n      rules are slightly different.\n    + Rewrote
  'para' for greater efficiency.\n    + Rewrote link parsers for greater efficiency.\n
  \   + Removed redundant 'referenceLink' in definition of inline (it's\n      already
  in 'link').\n    + Refactored escapeChar so it doesn't need 'try'.\n    + Refactored
  hrule for performance in Markdown reader.\n    + More intelligent rearranging of
  'inline' so that most frequently\n      used parsers are tried first.\n    + Removed
  tabchar parser, as whitespace handles tabs anyway.\n\n  * Text.Pandoc.CharacterReferences:\n\n
  \   + Refactored.\n    + Removed unnecessary 'try's for a speed improvement.\n    +
  Removed unnecessary '&' and ';' from the entity table.\n\n  * Build process:\n\n
  \   + Makefile: Get VERSION from cabal file, not Main.hs.\n    + Modified MacPorts
  Portfile:\n        - Depend on haddock\n        - Build and install libraries and
  library documentation in\n          addition to pandoc executable\n        - Added
  template item for md5 sum in Portfile.in.\n        - Incorporated changes from MacPorts
  repository (r28278).\n    + FreeBSD port:  Don't try to generate distinfo in Makefile.\n
  \     It can be made using 'make makesum' in FreeBSD.\n    + Make both freebsd and
  macports targets depend on tarball.\n\n  * Website and documentation:\n\n    + Updated
  INSTALL instructions.\n    + Added pandocwiki demo to website.\n    + Removed local
  references to Portfile, since pandoc is now in the\n      MacPorts repository.\n\n
  -- Recai Oktaş <roktas@debian.org>  Sun, 02 Sep 2007 15:50:11 +0300\n\npandoc (0.42)
  unstable; urgency=low\n\n  [ John MacFarlane ]\n\n  * Main.hs: Use utf8 conversion
  on the extra files loaded with\n    the -H, -C, -B, and -A options.  This fixes
  problems with unicode\n    characters in these files.\n\n  * Exposed Text.Pandoc.ASCIIMathML,
  since it is imported in\n    Text.Pandoc.Readers.HTML and without it we get a linking
  error when\n    using the library.\n\n  * Markdown reader:\n\n    + Added new rule
  for enhanced markdown ordered lists: if the list\n      marker is a capital letter
  followed by a period (including a\n      single-letter capital roman numeral), then
  it must be followed by\n      at least two spaces. The point of this is to avoid
  accidentally\n      treating people's initials as list markers: a paragraph might
  begin,\n      \"B. Russell was an English philosopher,\" and this shouldn't be\n
  \     treated as a list.  Documented change in README.\n    + Blocks that start
  with \"p. \" and a digit are no longer treated\n      as ordered lists (it's a page
  number).\n    + Added a needed 'try' to listItem.\n    + Removed check for a following
  setext header in endline.\n      A full test is too inefficient (doubles benchmark
  time), and the\n      substitute we had before is not 100% accurate.\n    + Don't
  use Code elements for autolinks if --strict specified.\n\n  * LaTeX writer:  When
  a footnote ends with a Verbatim environment, the\n    close } of the footnote cannot
  occur on the same line or an error occurs.\n    Fixed this by adding a newline before
  the closing } of every footnote.\n\n  * HTML writer:\n    + Removed incorrect \"{}\"
  around style information in HTML tables.\n      Column widths now work properly
  in HTML.\n    + If --strict option is specified (and --toc is not), don't include\n
  \     identifiers in headers, for better Markdown compatibility.\n\n  * Build process:\n\n
  \   + Separated $(web_dest) and website targets.\n    + In website, index.txt is
  now constructed from template index.txt.in.\n    + Added freebsd target to Markefile.
  This creates the freebsd Makefile\n      from Makefile.in, and creates distinfo.
  \ Removed Makefile and distinfo\n      from the repository.\n    + Added macport
  target to Makefile. Portfile is built from template\n      Portfile.in.\n    + Removed
  OSX package targets.  (Too many difficulties involving\n      dependencies on dynamic
  libraries.)\n    + More complete INSTALL instructions for all architectures.\n\n
  \ * Website:\n    + Added a programming demo, pandocwiki.\n\n  [ Recai Oktaş ]\n\n
  \ * Do not forget to close pandoc's ITP.  Closes: #391666\n\n -- Recai Oktaş <roktas@debian.org>
  \ Sun, 26 Aug 2007 22:51:32 +0300\n\npandoc (0.41) unstable; urgency=low\n\n  [
  John MacFarlane ]\n\n  * Fixed bugs in HTML reader:\n    + Skip material at end
  *only if* `</html>` is present (previously,\n      only part of the document would
  be parsed if an error was\n      found; now a proper error message is given).\n
  \   + Added new constant eitherBlockOrInline with elements that may\n      count
  either as block-level or as inline. Modified isInline and\n      isBlock to take
  this into account.\n    + Modified rawHtmlBlock to accept any tag (even an inline
  tag):\n      this is innocuous, because rawHtmlBlock is tried only if a regular\n
  \     inline element can't be parsed.\n    + Added a necessary 'try' in definition
  of 'para'.\n\n  * Fixed bug in markdown ordered list parsing.  The problem was that\n
  \   anyOrderedListStart did not check for a space following the\n    ordered list
  marker.  So in 'A.B. 2007' the parser would be\n    expecting a list item, but would
  not find one, causing an error.\n    Fixed a similar bug in the RST reader.  Resolves
  Issue #22.\n\n  * Refactored RST and Markdown readers using parseFromString.\n\n
  \ * LaTeX reader will now skip anything after \\end{document}.\n\n  * Fixed blockquote
  output in markdown writer: previously, block\n    quotes in indented contexts would
  be indented only in the first\n    line.\n\n  * Added note to INSTALL about variations
  in versions of the xhtml\n    library that can lead to failed tests (thanks to Leif
  LeBaron).\n\n -- Recai Oktaş <roktas@debian.org>  Sun, 19 Aug 2007 23:26:07 +0300\n\npandoc
  (0.4) unstable; urgency=low\n\n  [ John MacFarlane ]\n\n  * Added two new output
  formats: groff man pages and ConTeXt. By\n    default, output files with extensions
  \".ctx\" and \".context\" are\n    assumed to be ConTeXt, and output files with
  single-digit extensions\n    are assumed to be man pages.\n\n  * Enhanced ordered
  lists (documented in README, under Lists):\n    + The OrderedList block element
  now stores information about\n      list number style, list number delimiter, and
  starting number.\n    + The readers parse this information when possible.\n    +
  The writers use this information to style ordered lists.\n    + The enhancement
  can be disabled using the --strict option.\n\n  * Added support for tables (with
  a new Table block element). Two kinds\n    of tables are supported: a simple table
  with one-line rows, and a\n    more complex variety with multiline rows. All output
  formats are\n    supported, but only markdown tables are parsed at the moment. The\n
  \   syntax is documented in README.\n\n  * Added support for definition lists (with
  a new DefinitionList block\n    element). All output and input formats are supported.
  The syntax is\n    documented in README.\n\n  * Added support for superscripts and
  subscripts (with new Superscript\n    and Subscript inline elements).  All input
  and output\n    formats.  The syntax is documented in README.\n\n  * Added support
  for strikeout (with a new Strikeout inline element).\n    All input and output formats
  are supported. Thanks to Bradley Kuhn,\n    who contributed a patch. The syntax
  is documented in README. Resolves\n    Issue #18.\n\n  * Added a --toc|--table-of-contents
  option.  This causes an automatically\n    generated table of contents (or an instruction
  that creates one) to\n    be inserted at the beginning of the document. Not supported
  in S5,\n    DocBook, or man page writers.\n\n  * Modified the -m|--asciimathml option:\n\n
  \   + If an optional URL argument is provided, a link is inserted\n      instead
  of the contents of the ASCIIMathML.js script.\n    + Nothing is inserted unless
  the document actually contains\n      LaTeX math.\n\n  * Removed Blank block element
  as unnecessary.\n\n  * Removed Key and Note blocks from the Pandoc data structure.
  All\n    links are now stored as explicit links, and note contents are\n    stored
  with the (inline) notes.\n\n    + All link Targets are now explicit (URL, title)
  pairs; there\n      is no longer a 'Ref' target.\n    + Markdown and RST parsers
  now need to extract data from key and\n      note blocks and insert them into the
  relevant inline elements.\n      Other parsers have been simplified, since there
  is no longer any need\n      to construct separate key and note blocks.\n    + Markdown,
  RST, and HTML writers need to construct lists of\n      notes; Markdown and RST
  writers need to construct lists of link\n      references (when the --reference-links
  option is specified); and\n      the RST writer needs to construct a list of image
  substitution\n      references. All writers have been rewritten to use the State
  monad\n      when state is required.\n    + Several functions (generateReference,
  keyTable,\n      replaceReferenceLinks, replaceRefLinksBlockList, and some auxiliaries\n
  \     used by them) have been removed from Text.Pandoc.Shared, since\n      they
  are no longer needed. New functions and data structures\n      (Reference, isNoteBlock,
  isKeyBlock, isLineClump) have been\n      added. The functions inTags, selfClosingTag,
  inTagsSimple, and\n      inTagsIndented have been moved to the DocBook writer, since
  that\n      is now the only module that uses them. NoteTable is now exported\n      in
  Text.Pandoc.Shared.\n    + Added stateKeys and stateNotes to ParserState; removed
  stateKeyBlocks,\n      stateKeysUsed, stateNoteBlocks, stateNoteIdentifiers, stateInlineLinks.\n
  \   + Added writerNotes and writerReferenceLinks to WriterOptions.\n\n  * Added
  Text.Pandoc module that exports basic readers, writers,\n    definitions, and utility
  functions. This should export everything\n    needed for most uses of Pandoc libraries.
  The haddock documentation\n    includes a short example program.\n\n  * Text.Pandoc.ASCIIMathML
  is no longer an exported module.\n\n  * Added Text.Pandoc.Blocks module to help
  in printing markdown\n    and RST tables.  This module provides functions for working
  with\n    fixed-width blocks of text--e.g., placing them side by side, as\n    in
  a table row.\n\n  * Refactored to avoid reliance on Haskell's Text.Regex library,
  which\n    (a) is slow, and (b) does not properly handle unicode.  This fixed\n
  \   some strange bugs, e.g. in parsing S-cedilla, and improved performance.\n\n
  \   + Replaced 'gsub' with a general list function  'substitute'\n      that does
  not rely on Text.Regex.\n    + Rewrote extractTagType in HTML reader so that it
  doesn't use\n      regexs.\n    + In Markdown reader, replaced email regex test
  with a custom email\n      autolink parser (autoLinkEmail). Also replaced selfClosingTag
  regex\n      with a custom function isSelfClosingTag.\n    + Modified Docbook writer
  so that it doesn't rely on Text.Regex for\n      detecting 'mailto' links.\n    +
  Removed escapePreservingRegex and reamped entity-handling\n      functions in Text.Pandoc.Shared
  and Text.Pandoc.CharacterReferences to\n      avoid reliance on Text.Regex (see
  below on character reference\n      handling changes).\n\n  * Renamed Text.Pandoc.Entities
  as Text.Pandoc.CharacterReferences.\n\n  * Changed handling of XML entities.  Entities
  are now parsed (and unicode\n    characters returned) in the Markdown and HTML readers,
  rather than being\n    handled in the writers.  In HTML and Docbook writers, UTF-8
  is now used\n    instead of entities for characters above 128.  This makes the HTML
  and\n    DocBook output much more readable and more easily editable.\n\n    + Removed
  sgmlHexEntity, sgmlDecimalEntity, sgmlNamedEntity, and\n      sgmlCharacterEntity
  regexes from Text.Pandoc.Shared.\n    + Renamed escapeSGMLChar to escapeCharForXML.
  \ Added escapeStringForXML.\n      Moved both functions to Text.Pandoc.Writers.Docbook.\n
  \   + Added characterReference parser to Text.Pandoc.CharacterReferences.\n      This
  parses a string and return a unicode character.\n    + Rewrote decodeCharacterReferences
  to use the new parser instead of\n      Text.Regex.\n    + Added new charRef parser
  for Markdown and HTML, which replaces the\n      old 'entity' parser. Added '&'
  as a special character in Markdown reader.\n    + Modified HTML and Markdown readers
  to call decodeEntities on all raw\n      strings (e.g. authors, dates, link titles),
  to ensure that no\n      unprocessed entities are included in the native representation
  of\n      the document.  (In the HTML reader, most of this work is done by a\n      change
  in extractAttributeName.)\n    + In XML and Markdown output, escape unicode nonbreaking
  space as '&nbsp;',\n      since a unicode non-breaking space is impossible to distinguish
  visually\n      from a regular space.  (Resolves Issue #3.)\n    + Removed encodeEntitiesNumerical.\n
  \   + Use Data.Map for entityTable and (new) reverseEntityTable, for a\n      slight
  performance boost over the old association list.\n    + Removed unneeded decodeEntities
  from 'str' parser in HTML and\n      Markdown readers.\n\n  * Text.Pandoc.UTF8:
  \ Renamed encodeUTF8 to toUTF8, decodeUTF8 to\n    fromUTF8, for clarity.\n\n  *
  Replaced old haskell98 module names replaced by hierarchical module\n    names,
  e.g. List by Data.List.  Removed haskell98 from dependencies\n    in pandoc.cabal,
  and added mtl (needed for state monad). Substituted\n    xhtml for html.\n\n  *
  Refactored and cleaned up character escaping in writers, using\n    backslashEscapes
  and escapeStringUsing functions.\n\n  * Instead of adding \"\\n\\n\" to the end
  of an input string in Main.hs,\n    this is now done in the readers. This makes
  the libraries behave\n    the way you'd expect from the pandoc program. Resolves
  Issue #10.\n\n  * URLs and email addresses in autolinks are now typeset as Code.\n\n
  \ * In Main.hs, changed putStr to putStrLn -- mainly because MacOS X\n    doesn't
  display the whole output unless there's a line ending.\n\n  * Major code cleanup
  in all modules, for greater consistency, concision,\n    and readability.\n\n  *
  HTML reader:\n\n    + Fixed several bugs (extractTagType, attribute parsing).\n
  \   + Remove Null blocks in lists of blocks when possible.\n    + Allow HTML comments
  as raw HTML inline.\n\n  * Markdown reader:\n\n    + Ordered list items may no longer
  begin with uppercase letters, or\n      letters greater than 'n'.  (This prevents
  first initials and page\n      reference, e.g. 'p. 400', from being parsed as beginning
  lists.)\n      Also, numbers beginning list items may no longer end with ')',\n
  \     which is now allowed only after letters.  Note: These changes\n      may cause
  documents to be parsed differently. Users should take\n      care in upgrading.\n
  \   + Changed autoLink parsing to conform better to Markdown.pl's\n      behavior.
  `<google.com>` is not treated as a link, but\n      `<http://google.com>`, `<ftp://google.com>`,
  and\n      `<mailto:google@google.com>` are.\n    + Cleaned up handling of embedded
  quotes in link titles.  Now these are\n      stored as a '\"' character, not as
  '&quot;'.\n    + Use lookAhead parser for the 'first pass' (looking for reference
  keys),\n      instead of parsing normally, then using setInput to reset input.  This\n
  \     yields a slight performance boost.\n    + Fixed several bugs in smart quote
  recognition.\n    + Fixed bug in indentSpaces (which didn't properly handle\n      cases
  with mixed spaces and tabs).\n    + Consolidated 'text', 'special', and 'inline'
  into 'inline'.\n    + Fixed bug which allowed URL and title to be separated by multiple
  blank\n      lines in links and reference keys.  They can be on separate lines but\n
  \     can't have blank lines between them.\n    + Correctly handle bracketed text
  inside inline footnotes and links,using\n      new function inlinesInBalanced.  Resolves
  Issue #14.\n    + Fixed bug in footnotes: links in footnotes were not being\n      processed.
  Solution: three-stage parse. First, get all the\n      reference keys and add information
  to state. Next, get all the\n      notes and add information to state. (Reference
  keys may be needed\n      at this stage.) Finally, parse everything else.\n    +
  Replaced named constants like 'emphStart' with literals.\n    + Removed an extra
  occurrence of escapedChar in definition of inline.\n\n  * RST reader:\n\n    + Allow
  the URI in a RST hyperlink target to start on the line\n      after the reference
  key.\n    + Added 'try' in front of 'string', where needed, or used a different\n
  \     parser.  This fixes a bug where ````` would not be correctly parsed as\n      a
  verbatim `.\n    + Fixed slow performance in parsing inline literals in RST reader.
  \ The\n      problem was that ``#`` was seen by 'inline' as a potential link or
  image.\n      Fix:  inserted 'notFollowedBy (char '`')' in link parsers.\n      Resolves
  Issue #8.\n    + Use lookAhead instead of getInput/setInput in RST reader.  Removed\n
  \     unneeded getState call, since lookAhead automatically saves and\n      restores
  the parser state.\n    + Allow hyperlink target URIs to be split over multiple lines,
  and\n      to start on the line after the reference. Resolves Issue #7.\n    + Fixed
  handling of autolinks.\n\n  * LaTeX reader:\n\n    + Replaced 'choice [(try (string
  ...), ...]' idiom with 'oneOfStrings',\n      for clarity.\n    + Added clauses
  for tilde and caret. Tilde is \\ensuremath{\\sim}, and\n      caret is \\^{}, not
  \\^ as before.\n    + Added parsing for \\url.\n    + Parse \\texttt{} as code,
  provided there's nothing fancy inside.\n\n  * HTML writer:\n\n    + Modified HTML
  writer to use the Text.XHtml library. This results\n      in cleaner, faster code,
  and it makes it easier to use Pandoc in\n      other projects, like wikis, which
  use Text.XHtml. Two functions are\n      now provided, writeHtml and writeHtmlString:
  the former outputs an\n      Html structure, the latter a rendered string. The S5
  writer is also\n      changed, in parallel ways (writeS5, writeS5String).\n    +
  The Html header is now written programmatically, so it has been\n      removed from
  the 'headers' directory. The S5 header is still\n      needed, but the doctype and
  some of the meta declarations have\n      been removed, since they are written programmatically.
  This change\n      introduces a new dependency on the xhtml package.\n    + Fixed
  two bugs in email obfuscation involving improper escaping\n      of '&' in the `<noscript>`
  section and in `--strict` mode. Resolves\n      Issue #9.\n    + Fixed another bug
  in email obfuscation: If the text to be obfuscated\n      contains an entity, this
  needs to be decoded before obfuscation.\n      Thanks to thsutton for the patch.
  Resolves Issue #15.\n    + Changed the way the backlink is displayed in HTML footnotes.\n
  \     Instead of appearing on a line by itself, it now generally\n      appears
  on the last line of the note.  (Exception:  when the\n      note does not end with
  a Plain or Para block.) This saves space\n      and looks better.\n    + Added automatic
  unique identifiers to headers:\n      - The identifier is derived from the header
  via a scheme\n        documented in README.\n      - WriterState now includes a
  list of header identifiers and a table\n        of contents in addition to notes.\n
  \     - The function uniqueIdentifiers creates a list of unique identifiers\n        from
  a list of inline lists (e.g. headers).\n      - This list is part of WriterState
  and gets consumed by blockToHtml\n        each time a header is encountered.\n    +
  Include CSS for .strikethrough class in header only if strikethrough\n      text
  appears in the document.\n    + If the 'strict' option is specified, elements that
  do not appear in\n      standard markdown (like definition lists) are passed through
  as\n      raw HTML.\n    + Simplified treatment of autolinks, using pattern matching
  instead of\n      conditionals.\n\n  * Markdown writer:\n\n    + Links in markdown
  output are now printed as inline links by default,\n      rather than reference
  links.  A --reference-links option has been added\n      that forces links to be
  printed as reference links.  Resolves Issue #4.\n    + Use autolinks when possible.
  \ Instead of `[site.com](site.com)`,\n      use `<site.com>`.\n\n  * LaTeX writer:\n\n
  \   + Rewrote to use the State monad. The preamble now includes only those\n      packages
  that are actually required, given the document's content.\n      Thus, for example,
  if strikeout is not used, ulem is not required.\n      Modified LaTeXHeader accordingly.\n
  \   + Modified LaTeX writer to insert '\\,' between consecutive quotes.\n    + Removed
  unused function tableRowColumnWidths.\n    + Simplified code for escaping special
  characters.\n    + Leave extra blank line after \\maketitle.\n    + Include empty
  '\\author{}' when no author specified to avoid LaTeX\n      errors.\n    + Include
  fancyvrb code in header only if needed -- that is, only\n      if there is actually
  code in a footnote.\n    + Use \\url{} for autolinks.\n    + Include [mathletters]
  option in ucs package, so that basic unicode\n      Greek letters will work correctly.\n\n
  \ * RST writer:  Force blank line before lists, so that sublists will\n    be handled
  correctly.\n\n  * Docbook writer:  Fixed a bug:  email links with text, like\n    [foo](me@bar.baz),
  were being incorrectly treated as autolinks.\n\n  * Removed Text.ParserCombinators.Pandoc
  and moved all its functions to\n    Text.Pandoc.Shared.\n\n  * Text.Pandoc.Shared:\n\n
  \   + Added defaultWriterOptions.\n    + Added writerTableOfContents to WriterOptions.\n
  \   + Added writerIgnoreNotes option to WriterOptions.  This is needed\n      for
  processing header blocks for a table of contents, since notes on\n      headers
  should not appear in the TOC.\n    + Added prettyprinting for native Table format.\n
  \   + Removed some unneeded imports.\n    + Moved escape and nullBlock parsers from\n
  \     Text.ParserCombinators.Pandoc, since the latter is for\n      general-purpose
  parsers that don't depend on Text.Pandoc.Definition.\n    + Moved isHeaderBlock
  from Text.Pandoc.Writers.HTML.\n    + Moved Element, headerAtLeast, and hierarchicalize
  from Docbook\n      writer, because HTML writer now uses these in constructing a
  table\n      of contents.\n    + Added clauses for new inline elements (Strikeout,
  Superscript,\n      Subscript) to refsMatch.\n    + Removed backslashEscape; added
  new functions escapeStringUsing and\n      backslashEscapes.\n    + Moved failIfStrict
  from markdown reader, since it is now used also\n      by the HTML reader.\n    +
  Added a 'try' to the definition of indentSpaces.\n    + In definition of 'reference',
  added check to make sure it's not a note\n      reference.\n    + Added functions:
  camelCaseToHyphenated, toRomanNumeral,\n      anyOrderedListMarker, orderedListmarker,
  orderedListMarkers,\n      charsInBalanced', withHorizDisplacement, romanNumeral\n
  \   + Fixed a bug in the anyLine parser. Previously it would parse an empty\n      string
  \"\", but it should fail on an empty string, or we get an error\n      when it is
  used inside \"many\" combinators.\n    + Removed followedBy' parser, replacing it
  with the lookAhead parser from\n      Parsec.\n    + Added some needed 'try's before
  multicharacter parsers, especially in\n      'option' contexts.\n    + Removed the
  'try' from the 'end' parser in 'enclosed', so that\n      'enclosed' behaves like
  'option', 'manyTill', etc.\n    + Added lineClump parser, which parses a raw line
  block up to and\n      including any following blank lines.\n    + Renamed parseFromStr
  to parseFromString.\n    + Added a 'try' to the 'end' parser in 'enclosed'.  This
  makes errors in\n      the use of 'enclosed' less likely. Removed some now-unnecessary
  'try's\n      in calling code.\n    + Removed unneeded 'try' in blanklines.\n    +
  Removed endsWith function and rewrote calling functions to use\n      isSuffixOf
  instead.\n    + Added >>~ combinator.\n    + Fixed bug in normalizeSpaces:  Space:Str
  \"\":Space should compress to\n      Space.\n\n  * Refactored runtests.pl; added
  separate tests for tables.\n\n  * Shell scripts:\n\n    + Added -asxhtml flag to
  tidy in html2markdown. This will\n      perhaps help the parser, which expects closing
  tags.\n    + Modified markdown2pdf to run pdflatex a second time if --toc or\n      --table-of-contents
  was specified; otherwise the table of\n      contents won't appear.\n    + Modified
  markdown2pdf to print a helpful message if the 'ulem'\n      LaTeX package is required
  and not found.\n\n  * Changes to build process:\n\n    + Dropped support for compilation
  with GHC 6.4.  GHC 6.6 or higher\n      is now required.\n    + Removed cabalize
  and Pandoc.cabal.in. The repository now contains\n      pandoc.cabal itself.\n    +
  Pandoc.cabal has been changed to pandoc.cabal, because HackageDB\n      likes the
  cabal file to have the same name as the tarball.\n    + Expanded and revised the
  package description in pandoc.cabal.\n      Revised the package synopsis.\n    +
  The tarball built by 'make tarball' now contains files built from\n      templates
  (including man pages and shell scripts), so pandoc can\n      be built directly
  using Cabal tools, without preprocessing.\n    + Executable binaries are now stripped
  before installing.\n    + Man pages are now generated from markdown sources, using
  pandoc's\n      man page writer.\n    + Use HTML version of README (instead of RTF)
  in Mac OS X installer.\n    + Instead of testing for the existence of a pandoc symlink
  in build-exec,\n      use ln -f.\n\n  * Documentation:\n\n    + Updated README and
  man pages with information on new features.\n    + Updated INSTALL instructions
  with some useful clarifications and\n      links.\n    + Updated web content.\n\n
  \ * Added FreeBSD port.\n\n  [ Recai Oktaş ]\n\n  * debian/control:\n\n    + Changed
  pandoc's Build-Depends to include libghc6-mtl-dev and\n      libghc6-xhtml-dev.
  \ Removed libghc6-html-dev.\n    + Suggest texlive-latex-recommended | tetex-extra
  instead of\n      tetex-bin.  This brings in fancyvrb and unicode support.\n\n --
  Recai Oktaş <roktas@debian.org>  Tue, 16 Jan 2007 00:37:21 +0200\n\npandoc (0.3)
  unstable; urgency=low\n\n  [ John MacFarlane ]\n\n  * Changes in pandoc options:\n\n
  \   + Allow options to follow or precede arguments.\n    + Changed '--smartypants'
  to '--smart' and adjusted symbols accordingly.\n    + Added '--strict' option.\n
  \   + Added '-o/--output' option.\n    + Added '--dump-args' and '--ignore-args'
  options (for use in wrappers).\n    + Modified '-v' and '-h' output to go to STDERR,
  not STDOUT, and return\n      error conditions.  This is helpful for writing wrappers.\n
  \   + Added copyright message to '-v' output, modeled after FSF messages.\n    +
  Reformatted usage message so that it doesn't wrap illegibly.\n    + Removed extra
  blanks after '-h' and '-D' output.\n\n  * Added docbook writer.\n\n  * Added implicit
  setting of default input and output format based\n    on input and output filename
  extensions.  These defaults are\n    overridden if explicit input and output formats
  are specified using\n    '-t', '-f', '-r', or '-w' options.  Documented in pandoc(1)
  man page\n    and README.\n\n  * Allow ordered list items to begin with (single)
  letters, as well\n    as numbers.  The list item marker may now be terminated either
  by\n    '.' or by ')'.  This extension to standard markdown is documented\n    in
  README.\n\n  * Revised footnote syntax.  (See README for full details.)  The\n    '[^1]'
  format now standard in markdown extensions is supported,\n    as are inline footnotes
  with this syntax: `^[My note.]`.\n    The earlier footnote syntax `^(1)` is no longer
  supported.\n\n  * Improved HTML representation of footnotes.  All footnotes\n    are
  now auto-numbered and appear in an ordered list at the\n    end of the HTML document.
  \ Since the default appearance is now\n    acceptable, the old footnote styles have
  been removed from the\n    HTML header.\n\n  * Bug fixes:\n\n    + Fixed a serious
  bug in the markdown, LaTeX, and RST readers.\n      These readers ran 'runParser'
  on processed chunks of text to handle\n      embedded block lists in lists and quotation
  blocks.  But then\n      any changes made to the parser state in these chunks was
  lost,\n      as the state is local to the parser.  So, for example, footnotes\n
  \     didn't work in quotes or list items.  The fix:  instead of calling\n      runParser
  on some raw text, use setInput to make it the input, then\n      parse it, then
  use setInput to restore the input to what it was\n      before.  This is shorter
  and more elegant, and it fixes the problem.\n    + Fixed bug in notFollowedBy' combinator
  (adding 'try' before\n      'parser').  Adjusted code that uses this combinator
  accordingly.\n    + Fixed bug in RTF writer that caused improper indentation on\n
  \     footnotes occurring in indented blocks like lists.\n    + Fixed parsing of
  metadata in LaTeX reader.  Now the title, author,\n      and date are parsed correctly.
  \ Everything else in the preamble\n      is skipped.\n    + Modified escapedChar
  in LaTeX reader to allow a '\\' at the end of a\n      line to count as escaped
  whitespace.\n    + Modified LaTeX reader to produce inline links rather than reference\n
  \     links.  Otherwise, links in footnotes aren't handled properly.\n    + Fixed
  handling of titles in links in Markdown reader, so that\n      embedded quotation
  marks are now handled properly.\n    + Fixed Markdown reader's handling of embedded
  brackets in links.\n    + Fixed Markdown reader so that it only parses bracketed
  material\n      as a reference link if there is actually a corresponding key.\n
  \   + Revised inline code parsing in Markdown reader to conform to\n      markdown
  standard.  Now any number of `s can begin inline code,\n      which will end with
  the same number of `s.  For example, to\n      have two backticks as code, write
  ``` `` ```.  Modified Markdown\n      writer accordingly.\n    + Fixed bug in text-wrapping
  routine in Markdown and RST writers.\n      Now LineBreaks no longer cause wrapping
  problems.\n    + Supported hexadecimal numerical entity references as well as\n
  \     decimal ones.\n    + Fixed bug in Markdown reader's handling of underscores
  and other\n      inline formatting markers inside reference labels:  for example,\n
  \     in '[A_B]: /url/a_b', the material between underscores was being\n      parsed
  as emphasized inlines.\n    + Changed Markdown reader's handling of backslash escapes
  so that\n      only non-alphanumeric characters can be escaped.  Strict mode\n      follows
  Markdown.pl in only allowing a select group of punctuation\n      characters to
  be escaped.\n    + Modified HTML reader to skip a newline following a `<br>` tag.\n
  \     Otherwise the newline will be treated as a space at the beginning\n      of
  the next line.\n\n  * Made handling of code blocks more consistent.  Previously,
  some\n    readers allowed trailing newlines, while others stripped them.\n    Now,
  all readers strip trailing newlines in code blocks. Writers\n    insert a newline
  at the end of code blocks as needed.\n\n  * Modified readers to make spacing at
  the end of output more consistent.\n\n  * Minor improvements to LaTeX reader:\n\n
  \   + '\\thanks' now treated like a footnote.\n    + Simplified parsing of LaTeX
  command arguments and options.\n      commandArgs now returns a list of arguments
  OR options (in\n      whatever order they appear).  The brackets are included, and\n
  \     a new stripFirstAndLast function is provided to strip them off\n      when
  needed.  This fixes a problem in dealing with \\newcommand\n      and \\newenvironment.\n\n
  \ * Revised RTF writer:\n\n    + Default font is now Helvetica.\n    + An '\\f0'
  is added to each '\\pard', so that font resizing works\n      correctly.\n\n  *
  Moved handling of \"smart typography\" from the writers to the Markdown\n    and
  LaTeX readers.  This allows great simplification of the writers\n    and more accurate
  smart quotes, dashes, and ellipses.  DocBook can\n    now use `<quote>`.  The '--smart'
  option now toggles an option in\n    the parser state rather than a writer option.
  \ Several new kinds\n    of inline elements have been added: Quoted, Ellipses, Apostrophe,\n
  \   EmDash, EnDash.\n\n  * Changes in HTML writer:\n\n    + Include title block
  in header even when title is null.\n    + Made javascript obfuscation of emails
  even more obfuscatory,\n      by combining it with entity obfuscation.\n\n  * Changed
  default ASCIIMathML text color to black.\n\n  * Test suite:\n\n    + Added --strip-trailing-cr
  option to diff in runtests.pl, for\n      compatibility with Windows.\n    + Added
  regression tests with footnotes in quote blocks and lists.\n\n  * Makefile changes:\n\n
  \   + osx-pkg target creates a Mac OS X package (directory). New osx\n      directory
  contains files needed for construction of the package.\n    + osx-dmg target creates
  a compressed disk image containing the package.\n    + win-pkg target creates Windows
  binary package.\n    + tarball target creates distribution source tarball.\n    +
  website target generates pandoc's website automatically, including\n      demos.
  \ New 'web' directory contains files needed for construction\n      of the website
  (which will be created as the 'pandoc' subdirectory\n      of 'web').\n    + Makefile
  checks to see if we're running Windows/Cygwin; if so,\n      a '.exe' extension
  is added to each executable in EXECS.\n\n  * Removed all wrappers except markdown2pdf
  and html2markdown.\n\n  * Added new wrapper hsmarkdown, to be used as a drop-in
  replacement\n    for Markdown.pl.  hsmarkdown calls pandoc with the '--strict'\n
  \   option and disables other options.\n\n  * Added code to html2markdown that tries
  to determine the character\n    encoding of an HTML file, by parsing the \"Content-type\"
  meta tag.\n\n    + If the encoding can't be determined, then if the content is local,\n
  \     the local encoding is used; if it comes from a URL, UTF-8 is used\n      by
  default.\n    + If input is from STDIN, don't try to determine character encoding.\n
  \   + Encoding can be specified explicitly using '-e' option.\n\n  * Improved warning
  messages in wrappers:\n\n    + Print warning if iconv not available\n    + More
  user-friendly error messages in markdown2pdf, when\n      pdflatex fails.\n\n  *
  Code cleanup:\n\n    + Renamed 'Text/Pandoc/HtmlEntities' module to\n      'Text/Pandoc/Entities'.
  Also changed function names so as\n      not to be HTML-specific.\n    + Refactored
  SGML string escaping functions from HTML and Docbook\n      writers into Text/Pandoc/Shared.
  \ (escapeSGML, stringToSGML)\n    + Removed 'BlockQuoteContext' from ParserContext,
  as it isn't\n      used anywhere.\n    + Removed splitBySpace and replaced it with
  a general, polymorphic\n      splitBy function.\n    + Refactored LaTeX reader for
  clarity (added isArg function).\n    + Converted some CR's to LF's in src/ui/default/print.css.\n
  \   + Added license text to top of source files.\n    + Added module data for haddock
  to source files.\n    + Reformatted code for consistency.\n\n  * Rewrote documentation
  and man pages.  Split README into INSTALL\n    and README.\n\n  * Split LICENSE
  into COPYING and COPYRIGHT.\n\n  * Removed TODO, since we now maintain ToDo on the
  wiki.\n\n  * Made COPYRIGHT in top level a symlink to debian/copyright, to avoid\n
  \   duplication.\n\n  [ Recai Oktaş ]\n\n  * Revamped build process to conform to
  debian standards and created\n    a proper debian package.  Closes: #391666.\n\n
  \ * Modified build process to support GHC 6.6.\n\n    + The package can still be
  compiled using GHC 6.4.2, though because\n      of dependencies the \"make deb\"
  target works only with GHC 6.6+.\n    + The script 'cabalize' is used to create
  an appropriate\n      'Pandoc.cabal' from 'Pandoc.cabal.in', depending on the GHC
  and\n      Cabal versions.\n\n  * Refactored template processing (fillTemplates.pl).\n\n
  \ * Modified wrapper scripts to make them more robust and portable.\n    To avoid
  code duplication and ensure consistency, wrappers are\n    generated via a templating
  system from templates in src/wrappers.\n\n    + Wrappers now accept multiple filenames,
  when appropriate.\n    + Spaces and tabs allowed in filenames.\n    + getopts shell
  builtin is used for portable option parsing.\n    + Improved html2markdown's web
  grabber code, making it more robust,\n      configurable and verbose.  Added '-e',
  '-g' options.\n\n -- Recai Oktaş <roktas@debian.org>  Fri, 05 Jan 2007 09:41:19
  +0200\n\npandoc (0.2) unstable; urgency=low\n\n  * Fixed unicode/utf-8 translation\n\n
  -- John MacFarlane <jgm@berkeley.edu>  Mon,  14 Aug 2006 00:00:00 -0400\n\npandoc
  (0.1) unstable; urgency=low\n\n  * Initial creation of debian package\n\n -- John
  MacFarlane <jgm@berkeley.edu>  Mon,  14 Aug 2006 00:00:00 -0400\n"
basic-deps:
  http-client: ! '>=0.4.30 && <0.6'
  exceptions: ! '>=0.8 && <0.11'
  haddock-library: ! '>=1.6 && <1.7'
  zip-archive: ! '>=0.2.3.4 && <0.4'
  cmark-gfm: ! '>=0.1.1 && <0.2'
  JuicyPixels: ! '>=3.1.6.1 && <3.4'
  bytestring: ! '>=0.9 && <0.11'
  case-insensitive: ! '>=1.2 && <1.3'
  SHA: ! '>=1.6 && <1.7'
  unix: ! '>=2.4 && <2.8'
  split: ! '>=0.2 && <0.3'
  base: ! '>=4.7 && <5'
  time: ! '>=1.5 && <1.10'
  blaze-markup: ! '>=0.8 && <0.9'
  base64-bytestring: ! '>=0.1 && <1.1'
  aeson-pretty: ! '>=0.8.5 && <0.9'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=0.11 && <1.3'
  syb: ! '>=0.1 && <0.8'
  doctemplates: ! '>=0.2.1 && <0.3'
  filepath: ! '>=1.1 && <1.5'
  process: ! '>=1.2.3 && <1.7'
  network: ! '>=2.6'
  parsec: ! '>=3.1 && <3.2'
  data-default: ! '>=0.4 && <0.8'
  pandoc-types: ! '>=1.17.5 && <1.18'
  xml: ! '>=1.3.12 && <1.4'
  containers: ! '>=0.4.2.1 && <0.6'
  hslua-module-text: ! '>=0.1.2 && <0.2'
  base-compat: ! '>=0.9'
  pandoc: -any
  binary: ! '>=0.5 && <0.10'
  skylighting: ! '>=0.7.2 && <0.8'
  HsYAML: ! '>=0.1.1.1 && <0.2'
  http-client-tls: ! '>=0.2.4 && <0.4'
  zlib: ! '>=0.5 && <0.7'
  network-uri: ! '>=2.6 && <2.7'
  mtl: ! '>=2.2 && <2.3'
  blaze-html: ! '>=0.9 && <0.10'
  HTTP: ! '>=4000.0.5 && <4000.4'
  temporary: ! '>=1.1 && <1.4'
  random: ! '>=1 && <1.2'
  deepseq: ! '>=1.3 && <1.5'
  hslua: ! '>=0.9.5 && <0.9.6'
  tagsoup: ! '>=0.14.6 && <0.15'
  http-types: ! '>=0.8 && <0.13'
  Glob: ! '>=0.7 && <0.10'
  aeson: ! '>=0.7 && <1.5'
  safe: ! '>=0.3 && <0.4'
  vector: ! '>=0.10 && <0.13'
  directory: ! '>=1 && <1.4'
  texmath: ! '>=0.11 && <0.12'
all-versions:
- '0.4'
- '0.41'
- '0.42'
- '0.43'
- '0.44'
- '0.45'
- '0.46'
- '1.0'
- '1.0.0.1'
- '1.1'
- '1.2'
- '1.2.1'
- '1.3'
- '1.4'
- '1.5'
- '1.5.0.1'
- '1.5.1'
- '1.5.1.1'
- '1.6'
- '1.6.0.1'
- '1.8'
- '1.8.0.1'
- '1.8.0.2'
- '1.8.0.3'
- '1.8.1'
- '1.8.1.1'
- '1.8.1.2'
- '1.8.2'
- '1.8.2.1'
- '1.9'
- '1.9.0.2'
- '1.9.0.3'
- '1.9.0.4'
- '1.9.0.5'
- '1.9.1'
- '1.9.1.1'
- '1.9.1.2'
- '1.9.2'
- '1.9.3'
- '1.9.4'
- '1.9.4.1'
- '1.9.4.2'
- '1.9.4.3'
- '1.9.4.4'
- '1.9.4.5'
- '1.10'
- '1.10.0.1'
- '1.10.0.2'
- '1.10.0.3'
- '1.10.0.4'
- '1.10.0.5'
- '1.10.1'
- '1.11'
- '1.11.1'
- '1.12'
- '1.12.0.1'
- '1.12.0.2'
- '1.12.1'
- '1.12.2'
- '1.12.2.1'
- '1.12.3'
- '1.12.3.1'
- '1.12.3.2'
- '1.12.3.3'
- '1.12.4'
- '1.12.4.2'
- '1.13'
- '1.13.0.1'
- '1.13.1'
- '1.13.2'
- '1.13.2.1'
- '1.14.1'
- '1.15.0.2'
- '1.15.0.3'
- '1.15.0.4'
- '1.15.0.5'
- '1.15.0.6'
- '1.15.1'
- '1.15.1.1'
- '1.15.2'
- '1.15.2.1'
- '1.16'
- '1.16.0.1'
- '1.16.0.2'
- '1.17'
- '1.17.0.1'
- '1.17.0.2'
- '1.17.0.3'
- '1.17.1'
- '1.17.2'
- '1.18'
- '1.19'
- '1.19.1'
- '1.19.2'
- '1.19.2.1'
- '1.19.2.2'
- '1.19.2.3'
- '1.19.2.4'
- '2.0'
- '2.0.0.1'
- '2.0.1'
- '2.0.1.1'
- '2.0.2'
- '2.0.3'
- '2.0.4'
- '2.0.5'
- '2.0.6'
- '2.1'
- '2.1.1'
- '2.1.2'
- '2.1.3'
- '2.2'
- '2.2.1'
- '2.2.2'
- '2.2.2.1'
- '2.2.3'
author: John MacFarlane <jgm@berkeley.edu>
latest: '2.2.3'
description-type: markdown
description: ! "<!-- Do not edit this file.  It is generated automatically from\nREADME.template
  and MANUAL.txt via the command:\npandoc --lua-filter tools/update-readme.lua README.template
  -o README.md\n-->\n\n# Pandoc\n\n[![github\nrelease](https://img.shields.io/github/release/jgm/pandoc.svg?label=current+release)](https://github.com/jgm/pandoc/releases)\n[![hackage\nrelease](https://img.shields.io/hackage/v/pandoc.svg?label=hackage)](http://hackage.haskell.org/package/pandoc)\n[![homebrew](https://img.shields.io/homebrew/v/pandoc.svg)](http://brewformulas.org/Pandoc)\n[![stackage
  LTS\npackage](http://stackage.org/package/pandoc/badge/lts)](http://stackage.org/lts/package/pandoc)\n[![travis
  build\nstatus](https://img.shields.io/travis/jgm/pandoc/master.svg?label=travis+build)](https://travis-ci.org/jgm/pandoc)\n[![appveyor
  build\nstatus](https://ci.appveyor.com/api/projects/status/nvqs4ct090igjiqc?svg=true)](https://ci.appveyor.com/project/jgm/pandoc)\n[![license](https://img.shields.io/badge/license-GPLv2+-lightgray.svg)](https://www.gnu.org/licenses/gpl.html)\n[![pandoc-discuss
  on google\ngroups](https://img.shields.io/badge/pandoc-discuss-red.svg?style=social)](https://groups.google.com/forum/#!forum/pandoc-discuss)\n\n##
  The universal markup converter\n\nPandoc is a [Haskell](http://haskell.org) library
  for converting from\none markup format to another, and a command-line tool that
  uses this\nlibrary. It can convert *from*\n\n<div id=\"input-formats\">\n\n  - `commonmark`
  ([CommonMark](http://commonmark.org) Markdown)\n  - `creole` ([Creole 1.0](http://www.wikicreole.org/wiki/Creole1.0))\n
  \ - `docbook` ([DocBook](http://docbook.org))\n  - `docx` ([Word docx](https://en.wikipedia.org/wiki/Office_Open_XML))\n
  \ - `epub` ([EPUB](http://idpf.org/epub))\n  - `fb2`\n    ([FictionBook2](http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1)\n
  \   e-book)\n  - `gfm` ([GitHub-Flavored\n    Markdown](https://help.github.com/articles/github-flavored-markdown/)),\n
  \   or the deprecated and less accurate `markdown_github`; use\n    [`markdown_github`](#markdown-variants)
  only if you need extensions\n    not supported in [`gfm`](#markdown-variants).\n
  \ - `haddock` ([Haddock\n    markup](https://www.haskell.org/haddock/doc/html/ch03s08.html))\n
  \ - `html` ([HTML](http://www.w3.org/html/))\n  - `jats` ([JATS](https://jats.nlm.nih.gov)
  XML)\n  - `json` (JSON version of native AST)\n  - `latex` ([LaTeX](http://latex-project.org))\n
  \ - `markdown` ([Pandoc’s Markdown](#pandocs-markdown))\n  - `markdown_mmd`\n    ([MultiMarkdown](http://fletcherpenney.net/multimarkdown/))\n
  \ - `markdown_phpextra` ([PHP Markdown\n    Extra](https://michelf.ca/projects/php-markdown/extra/))\n
  \ - `markdown_strict` (original unextended\n    [Markdown](http://daringfireball.net/projects/markdown/))\n
  \ - `mediawiki` ([MediaWiki\n    markup](https://www.mediawiki.org/wiki/Help:Formatting))\n
  \ - `muse` ([Muse](https://amusewiki.org/library/manual))\n  - `native` (native
  Haskell)\n  - `odt` ([ODT](http://en.wikipedia.org/wiki/OpenDocument))\n  - `opml`
  ([OPML](http://dev.opml.org/spec2.html))\n  - `org` ([Emacs Org mode](http://orgmode.org))\n
  \ - `rst`\n    ([reStructuredText](http://docutils.sourceforge.net/docs/ref/rst/introduction.html))\n
  \ - `t2t` ([txt2tags](http://txt2tags.org))\n  - `textile` ([Textile](http://redcloth.org/textile))\n
  \ - `tikiwiki` ([TikiWiki\n    markup](https://doc.tiki.org/Wiki-Syntax-Text#The_Markup_Language_Wiki-Syntax))\n
  \ - `twiki` ([TWiki\n    markup](http://twiki.org/cgi-bin/view/TWiki/TextFormattingRules))\n
  \ - `vimwiki` ([Vimwiki](https://vimwiki.github.io))\n\n</div>\n\nIt can convert
  *to*\n\n<div id=\"output-formats\">\n\n  - `asciidoc` ([AsciiDoc](http://www.methods.co.nz/asciidoc/))\n
  \ - `beamer` ([LaTeX beamer](https://ctan.org/pkg/beamer) slide show)\n  - `commonmark`
  ([CommonMark](http://commonmark.org) Markdown)\n  - `context` ([ConTeXt](http://www.contextgarden.net/))\n
  \ - `docbook` or `docbook4` ([DocBook](http://docbook.org) 4)\n  - `docbook5` (DocBook
  5)\n  - `docx` ([Word docx](https://en.wikipedia.org/wiki/Office_Open_XML))\n  -
  `dokuwiki` ([DokuWiki markup](https://www.dokuwiki.org/dokuwiki))\n  - `epub` or
  `epub3` ([EPUB](http://idpf.org/epub) v3 book)\n  - `epub2` (EPUB v2)\n  - `fb2`\n
  \   ([FictionBook2](http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1)\n
  \   e-book)\n  - `gfm` ([GitHub-Flavored\n    Markdown](https://help.github.com/articles/github-flavored-markdown/)),\n
  \   or the deprecated and less accurate `markdown_github`; use\n    [`markdown_github`](#markdown-variants)
  only if you need extensions\n    not supported in [`gfm`](#markdown-variants).\n
  \ - `haddock` ([Haddock\n    markup](https://www.haskell.org/haddock/doc/html/ch03s08.html))\n
  \ - `html` or `html5` ([HTML](http://www.w3.org/html/), i.e.\n    [HTML5](http://www.w3.org/TR/html5/)/XHTML
  [polyglot\n    markup](https://www.w3.org/TR/html-polyglot/))\n  - `html4` ([XHTML](http://www.w3.org/TR/xhtml1/)
  1.0 Transitional)\n  - `icml` ([InDesign\n    ICML](http://wwwimages.adobe.com/www.adobe.com/content/dam/acom/en/devnet/indesign/sdk/cs6/idml/idml-cookbook.pdf))\n
  \ - `jats` ([JATS](https://jats.nlm.nih.gov) XML)\n  - `json` (JSON version of native
  AST)\n  - `latex` ([LaTeX](http://latex-project.org))\n  - `man` ([groff\n    man](http://man7.org/linux/man-pages/man7/groff_man.7.html))\n
  \ - `markdown` ([Pandoc’s Markdown](#pandocs-markdown))\n  - `markdown_mmd`\n    ([MultiMarkdown](http://fletcherpenney.net/multimarkdown/))\n
  \ - `markdown_phpextra` ([PHP Markdown\n    Extra](https://michelf.ca/projects/php-markdown/extra/))\n
  \ - `markdown_strict` (original unextended\n    [Markdown](http://daringfireball.net/projects/markdown/))\n
  \ - `mediawiki` ([MediaWiki\n    markup](https://www.mediawiki.org/wiki/Help:Formatting))\n
  \ - `ms` ([groff\n    ms](http://man7.org/linux/man-pages/man7/groff_ms.7.html))\n
  \ - `muse` ([Muse](https://amusewiki.org/library/manual)),\n  - `native` (native
  Haskell),\n  - `odt` ([OpenOffice text\n    document](http://en.wikipedia.org/wiki/OpenDocument))\n
  \ - `opml` ([OPML](http://dev.opml.org/spec2.html))\n  - `opendocument` ([OpenDocument](http://opendocument.xml.org))\n
  \ - `org` ([Emacs Org mode](http://orgmode.org))\n  - `plain` (plain text),\n  -
  `pptx`\n    ([PowerPoint](https://en.wikipedia.org/wiki/Microsoft_PowerPoint)\n
  \   slide show)\n  - `rst`\n    ([reStructuredText](http://docutils.sourceforge.net/docs/ref/rst/introduction.html))\n
  \ - `rtf` ([Rich Text\n    Format](http://en.wikipedia.org/wiki/Rich_Text_Format))\n
  \ - `texinfo` ([GNU Texinfo](http://www.gnu.org/software/texinfo/))\n  - `textile`
  ([Textile](http://redcloth.org/textile))\n  - `slideous` ([Slideous](http://goessner.net/articles/slideous/)
  HTML\n    and JavaScript slide show)\n  - `slidy` ([Slidy](http://www.w3.org/Talks/Tools/Slidy/)
  HTML and\n    JavaScript slide show)\n  - `dzslides` ([DZSlides](http://paulrouget.com/dzslides/)
  HTML5 +\n    JavaScript slide show),\n  - `revealjs` ([reveal.js](http://lab.hakim.se/reveal-js/)
  HTML5 +\n    JavaScript slide show)\n  - `s5` ([S5](http://meyerweb.com/eric/tools/s5/)
  HTML and JavaScript\n    slide show)\n  - `tei` ([TEI Simple](https://github.com/TEIC/TEI-Simple))\n
  \ - `zimwiki` ([ZimWiki\n    markup](http://zim-wiki.org/manual/Help/Wiki_Syntax.html))\n
  \ - the path of a custom lua writer, see [Custom\n    writers](#custom-writers)
  below\n\n</div>\n\nPandoc can also produce PDF output via LaTeX, Groff ms, or HTML.\n\nPandoc’s
  enhanced version of Markdown includes syntax for tables,\ndefinition lists, metadata
  blocks, footnotes, citations, math, and much\nmore. See the User’s Manual below
  under [Pandoc’s\nMarkdown](https://pandoc.org/MANUAL.html#pandocs-markdown).\n\nPandoc
  has a modular design: it consists of a set of readers, which\nparse text in a given
  format and produce a native representation of the\ndocument (an *abstract syntax
  tree* or AST), and a set of writers, which\nconvert this native representation into
  a target format. Thus, adding an\ninput or output format requires only adding a
  reader or writer. Users\ncan also run custom pandoc filters to modify the intermediate
  AST (see\nthe documentation for [filters](https://pandoc.org/filters.html) and\n[lua
  filters](https://pandoc.org/lua-filters.html)).\n\nBecause pandoc’s intermediate
  representation of a document is less\nexpressive than many of the formats it converts
  between, one should not\nexpect perfect conversions between every format and every
  other. Pandoc\nattempts to preserve the structural elements of a document, but not\nformatting
  details such as margin size. And some document elements, such\nas complex tables,
  may not fit into pandoc’s simple document model.\nWhile conversions from pandoc’s
  Markdown to all formats aspire to be\nperfect, conversions from formats more expressive
  than pandoc’s Markdown\ncan be expected to be lossy.\n\n## Installing\n\nHere’s
  [how to install pandoc](INSTALL.md).\n\n## Documentation\n\nPandoc’s website contains
  a full [User’s\nGuide](https://pandoc.org/MANUAL.html). It is also available\n[here](MANUAL.txt)
  as pandoc-flavored Markdown. The website also\ncontains some [examples of the use
  of\npandoc](https://pandoc.org/demos.html) and a limited [online\ndemo](https://pandoc.org/try).\n\n##
  Contributing\n\nPull requests, bug reports, and feature requests are welcome. Please\nmake
  sure to read [the contributor guidelines](CONTRIBUTING.md) before\nopening a new
  issue.\n\n## License\n\n© 2006-2018 John MacFarlane (jgm@berkeley.edu). Released
  under the\n[GPL](http://www.gnu.org/copyleft/gpl.html \"GNU General Public License\"),\nversion
  2 or greater. This software carries no warranty of any kind.\n(See COPYRIGHT for
  full copyright and warranty notices.)\n"
license-name: GPL-2
