homepage: https://github.com/mrkkrp/parser-combinators
changelog-type: markdown
hash: 784ab858e0a814d2aa36785e3c359a393be7ef7be9a37428a59908331249eb80
test-bench-deps: {}
maintainer: Mark Karpov <markkarpov92@gmail.com>
synopsis: Lightweight package providing commonly useful parser combinators
changelog: |
  ## Parser combinators 1.2.0

  * Added `manyTill_` and `someTill_` combinators which work like the older
    `manyTill` and `someTill` except they also return the result of the `end`
    parser.

  * Dropped support for GHC 8.0.

  ## Parser combinators 1.1.0

  * Added support for ternary operators; see `TernR` in
    `Control.Monad.Combinators.Expr`.

  ## Parser combinators 1.0.3

  * Dropped support for GHC 7.10.

  * Added a test suite as a separate package called
    `parser-combinators-tests`.

  ## Parser combinators 1.0.2

  * Defined `liftA2` for `Permutation` manually. The new definition should be
    more efficient.

  * Made inner `Maybe` field in `Permutation` strict.

  ## Parser combinators 1.0.1

  * Cosmetic changes in the source code.

  ## Parser combinators 1.0.0

  * Added the `Control.Monad.Combinators.Expr` module.

  * Dropped the compatibility operators `(<$$>)`, `(<$?>)`, `(<||>)`, and
    `(<|?>)` from `Control.Applicative.Permutations`.

  * Dropped support for GHCs older than 7.10.

  ## Parser combinators 0.4.0

  * Improved the documentation.

  * Re-exported `Control.Applicative.empty` from
    `Control.Applicative.Combinators`.

  * Added the `Control.Monad.Combinators` and
    `Control.Monad.Combinators.NonEmpty` modules which contain more efficient
    versions of the combinators from `Control.Applicative.Combinators` and
    `Control.Applicative.Combinators.NonEmpty` respectively.

  ## Parser combinators 0.3.0

  * Added the `skipCount` combinator.

  * Improved algorithmic efficiency of the `count'` combinator.

  ## Parser combinators 0.2.1

  * Removed the byte order marking at the beginning of the
    `Control.Applicative.Permutations` module.

  ## Parser combinators 0.2.0

  * Added `Control.Applicative.Combinators.NonEmpty` module that exports
    non-empty list versions of combinators that cannot return empty lists.

  * Added `Control.Applicative.Permutations` module that provides generalized
    permutation parser combinators.

  ## Parser combinators 0.1.0

  * Initial release.
basic-deps:
  base: ! '>=4.10 && <5.0'
all-versions:
- 0.1.0
- 0.2.0
- 0.2.1
- 0.3.0
- 0.4.0
- 1.0.0
- 1.0.1
- 1.0.2
- 1.0.3
- 1.1.0
- 1.2.0
author: |-
  Mark Karpov <markkarpov92@gmail.com>
  Alex Washburn <github@recursion.ninja>
latest: 1.2.0
description-type: markdown
description: |
  # Parser combinators

  [![License BSD3](https://img.shields.io/badge/license-BSD3-brightgreen.svg)](http://opensource.org/licenses/BSD-3-Clause)
  [![Hackage](https://img.shields.io/hackage/v/parser-combinators.svg?style=flat)](https://hackage.haskell.org/package/parser-combinators)
  [![Stackage Nightly](http://stackage.org/package/parser-combinators/badge/nightly)](http://stackage.org/nightly/package/parser-combinators)
  [![Stackage LTS](http://stackage.org/package/parser-combinators/badge/lts)](http://stackage.org/lts/package/parser-combinators)
  [![Build Status](https://travis-ci.org/mrkkrp/parser-combinators.svg?branch=master)](https://travis-ci.org/mrkkrp/parser-combinators)

  The package provides common parser combinators defined in terms of
  `Applicative` and `Alternative` without any dependencies but `base`. There
  are also more efficient versions of the combinators defined in terms of
  `Monad` and `MonadPlus`.

  ## Contribution

  Issues, bugs, and questions may be reported in [the GitHub issue tracker for
  this project](https://github.com/mrkkrp/parser-combinators/issues).

  Pull requests are also welcome and will be reviewed quickly.

  ## License

  Copyright © 2017–present Mark Karpov

  Distributed under BSD 3 clause license.
license-name: BSD-3-Clause
