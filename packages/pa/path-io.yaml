homepage: https://github.com/mrkkrp/path-io
changelog-type: markdown
hash: a22a9197c49419326f1c90bc9503301e1f3e5f3325282d95f20eedb631228880
test-bench-deps:
  exceptions: ! '>=0.8 && <0.11'
  path: ! '>=0.5 && <0.7'
  base: ! '>=4.8 && <5.0'
  hspec: ! '>=2.0 && <3.0'
  unix-compat: -any
  transformers: ! '>=0.3 && <0.6'
  path-io: -any
  directory: ! '>=1.2.2 && <1.4'
maintainer: Mark Karpov <markkarpov92@gmail.com>
synopsis: Interface to ‘directory’ package for users of ‘path’
changelog: ! "## Path IO 1.4.0\n\n* Added relative versions of some actions: `listDirRel`,
  `listDirRecurRel`,\n  `walkDirRel`, and `walkDirAccumRel`.\n\n* Dropped support
  for GHC 7.8.\n\n## Path IO 1.3.3\n\n* (Hopefully) fixed test suite failure with
  Cabal 2.0 and GHC 8.2.1.\n\n## Path IO 1.3.2\n\n* Reduce a number of `(MonadIO m,
  MonadThrow m)` constraints to just\n  `MonadIO m` [#27](https://github.com/mrkkrp/path-io/issues/27)\n\n##
  Path IO 1.3.1\n\n* Made `listDirRecur` faster for deep directory trees.\n\n## Path
  IO 1.3.0\n\n* Change the default behavior of recursive traversal APIs to not follow\n
  \ symbolic links. The change affects the following functions:\n  `listDirRecur`,
  `copyDirRecur`, and `copyDirRecur'`.\n\n* Add `isSymlink` which allows to test whether
  a path is a symbolic link.\n\n* Move the type functions `AbsPath` and `RelPath`
  to the `AnyPath` type\n  class (previously they were standalone closed type families,
  now they are\n  associated types of `AnyPath`).\n\n* Improved the documentation
  and metadata.\n\n## Path IO 1.2.3\n\n* Allowed `time-1.7`.\n\n## Path IO 1.2.2\n\n*
  Fixed a bug in `setModificationTime` function that previously called\n  `setAccessTime`
  instead of `setModificationTime` from `directory`.\n\n* Added notes to all pieces
  of API that are conditional (some functions are\n  only available if `directory-1.2.3.0`
  or later is used, now it's mentioned\n  for every such function explicitely).\n\n##
  Path IO 1.2.1\n\n* Allowed `directory-1.3.0.0`.\n\n* Added `getXdgDir`. Only available
  of `directory-1.2.3.0` or later is used.\n\n* Various cosmetic improvements.\n\n##
  Path IO 1.2.0\n\n* Added `walkDir` function to traverse a directory tree with a
  handler.\n\n* Added `walkDirAccum` function which is like `walkDir` but also accepts
  an\n  output writer and returns the accumulated output.\n\n* All recursive traversal
  functions (existing and new) now safely handle\n  directory loops due to symbolic
  or hard links.\n\n* Added “since” notes to public functions in API.\n\n## Path IO
  1.1.0\n\n* Fixed bug in `copyDirRecur` when it was unable to fully copy read-only\n
  \ directories.\n\n* Added `copyDirRecur'` function that works just like `copyDirRecur`,
  but\n  does not preserve directory permissions.\n\n## Path IO 1.0.1\n\n* Fixed bug
  in `copyDirRecur` for non-existing destination paths when\n  directory to copy does
  not contain sub-directories.\n\n* Made `copyDirRecur` try to copy permissions for
  destination directory too\n  (previously it only tried to copy them for sub-directories).\n\n##
  Path IO 1.0.0\n\n* Changed signature of `getAppUserDataDir`, so it takes `String`
  as the\n  first argument.\n\n* Removed deprecated `forgivingAbsence'` function.\n\n*
  Made `findFile` lazier, it stops searching as soon as a file is found.\n\n* Added
  some tests.\n\n## Path IO 0.3.1\n\n* Introduced synonym for `forgivingAbsence'`
  —\n  `ignoringAbsence`. `forgivingAbsence'` is deprecated now, but it's still\n
  \ there.\n\n* Added a handy shortcut `ensureDir` that is defined as\n  `ensureDir
  = createDirIfMissing True`.\n\n* Made `getHomeDir` and `getTempDir` more robust
  when they are influenced by\n  values of environment variables.\n\n## Path IO 0.3.0\n\n*
  Added `forgivingAbsence`, `resolveFile`, and `resolveDir` functions, so\n  the package
  now provides all functionality that `Path.IO` module in Stack\n  has.\n\n* Added
  closed type family `RelPath`, `makeRelative`, and\n  `makeRelativeToCurrentDir`
  functions.\n\n* Fixed signature of `getAppUserDataDir`.\n\n## Path IO 0.2.0\n\n*
  Added functions from `temporary`: `withTempFile`, `withTempDir`,\n  `withSystemTempFile`,
  `withSystemTempDir`, `openTempFile`,\n  `openBinaryTempFile`, and `createTempDir`.
  `temporary` is a lightweight\n  and ubiquitous package, so depending on it should
  be OK.\n\n## Path IO 0.1.1\n\n* Fixed type signatures of `renameFile` and `copyFile`.\n\n##
  Path IO 0.1.0\n\n* Initial release.\n"
basic-deps:
  exceptions: ! '>=0.8 && <0.11'
  path: ! '>=0.5 && <0.7'
  base: ! '>=4.8 && <5.0'
  time: ! '>=1.4 && <1.9'
  unix-compat: -any
  filepath: ! '>=1.2 && <1.5'
  dlist: ! '>=0.8 && <0.9'
  containers: -any
  transformers: ! '>=0.3 && <0.6'
  temporary: ! '>=1.1 && <1.4'
  directory: ! '>=1.2.2 && <1.4'
all-versions:
- '0.1.0'
- '0.1.1'
- '0.2.0'
- '0.3.0'
- '0.3.1'
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '1.2.0'
- '1.2.1'
- '1.2.2'
- '1.3.0'
- '1.3.1'
- '1.3.2'
- '1.3.3'
- '1.4.0'
author: Mark Karpov <markkarpov92@gmail.com>
latest: '1.4.0'
description-type: markdown
description: ! '# Path IO


  [![License BSD3](https://img.shields.io/badge/license-BSD3-brightgreen.svg)](http://opensource.org/licenses/BSD-3-Clause)

  [![Hackage](https://img.shields.io/hackage/v/path-io.svg?style=flat)](https://hackage.haskell.org/package/path-io)

  [![Stackage Nightly](http://stackage.org/package/path-io/badge/nightly)](http://stackage.org/nightly/package/path-io)

  [![Stackage LTS](http://stackage.org/package/path-io/badge/lts)](http://stackage.org/lts/package/path-io)

  [![Build Status](https://travis-ci.org/mrkkrp/path-io.svg?branch=master)](https://travis-ci.org/mrkkrp/path-io)

  [![Build status](https://ci.appveyor.com/api/projects/status/q0orxo6856n18jvg/branch/master?svg=true)](https://ci.appveyor.com/project/mrkkrp/path-io/branch/master)


  This package provides an interface to

  the [`directory`](https://hackage.haskell.org/package/directory) package for

  users of Chris Done''s [`path`](https://hackage.haskell.org/package/path). It

  also implements some missing stuff like recursive scanning and copying of

  directories, working with temporary files/directories, etc.


  Consult Haddocks for usage, which should be trivial.


  ## License


  Copyright © 2016–2018 Mark Karpov


  Distributed under BSD 3 clause license.

'
license-name: BSD3
