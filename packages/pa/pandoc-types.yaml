homepage: http://johnmacfarlane.net/pandoc
changelog-type: text
hash: 5a6b39d5ea2eceaad0ec8b273d4f3aee835a69783493e76be17d415a63f08c77
test-bench-deps:
  test-framework-hunit: ! '>=0.2 && <0.4'
  bytestring: ! '>=0.9 && <0.11'
  test-framework: ! '>=0.3 && <0.9'
  base: ! '>=4.2 && <5'
  string-qq: ==0.0.2
  syb: -any
  test-framework-quickcheck2: ! '>=0.2.9 && <0.4'
  criterion: ! '>=1.0 && <1.5'
  HUnit: ! '>=1.2 && <1.7'
  pandoc-types: -any
  containers: ! '>=0.3'
  QuickCheck: ! '>=2.4 && <2.12'
  aeson: ! '>=0.6.2 && <1.4'
maintainer: jgm@berkeley.edu
synopsis: Types for representing a structured document
changelog: ! "[1.17.4]\n\n  * Add Semigroup instances for Pandoc, Meta, Inlines, Blocks\n
  \   (if base >= 4.9).  This is needed for the library to compile\n    with ghc 8.4.\n
  \ * Bumped criterion upper bound.\n\n[1.17.3.1]\n\n  * Bumped upper bounds for criterion
  and QuickCheck.\n\n[1.17.3]\n\n  * Added Walkable instances for `[Inline] Inline`
  and `[Block] Block`.\n\n[1.17.2]\n\n  * Provide default implementation for walk
  (Albert Krewinkel).\n    The implementations for `walk` and `walkM` are very similar,
  so a\n    default method is provided which implements the former in terms of the\n
  \   latter. This change should not affect performance, as the `Identity`\n    functor,
  which is used in the default definition, is a newtype that\n    should be eliminated
  at compile time.  (This requires a dependency\n    on transformers for ghc 7.8.x.)\n
  \ * Force optimizations when compiling Walk module (Albert Krewinkel).\n  * Add
  `Applicative m` to the context of walkM (Albert Krewinkel).\n    The acceptance
  of AMP makes this a natural change.\n  * Add `Walkable [Block]` and `Walkable [Inline]`
  instances (Albert\n    Krewinkel).\n  * Factored out duplicate code in Walk.\n  *
  Added benchmark.\n  * Text.Pandoc.JSON: Use `walk` instead of `bottomUp` in the\n
  \   `ToJSONFilter` instance for `a -> [a]`.  Note that behavior will be\n    slightly
  different, since bottomUp's treatment of a function `[a] -> [a]`\n    is to apply
  it to each sublist of a list, while walk applies it only to\n    maximal sublists.
  \ Usually the latter behavior is what is wanted, and the\n    former can be simulated
  when needed.  But there may be existing filters\n    that need to be rewritten in
  light of the new behavior.\n\n[1.17.1]\n\n  * Better consistency in simpleTable
  and table (jgm/pandoc#3648).\n    If `headers` is empty, we populate it with empty
  cells, using the rows\n    to determine number of columns.  We also ensure that
  there are numcols\n    alignments and column widths.\n  * Make sure Div and Span
  occur in Arbitrary instances.\n  * Bump dependency upper bounds.\n  * Removed unused
  mapConst.\n\n[1.17.0.5]\n\n  * Allow aeson 1.1.\n  * Added tests for Walk (originally
  from pandoc).\n  * Renamed README -> README.md, fix link (Kolen Cheung).\n\n[1.17.0.4]\n\n
  \ * Re-add Functor constraint to walkM, needed for ghc 7.8.\n  * Turn off redundant-constraints
  warning for Walk (for ghc 8.0.1+).\n  * Added necessary Data.Traversable import.\n
  \ * Allow HUnit 1.5.\n\n[1.17.0.3]\n\n  * More ghc 7.8 compatibility imports.\n\n[1.17.0.2]\n\n
  \ * Added a necessary import from Data.Monoid (for ghc 7.8).\n\n[1.17.0.1]\n\n  *
  Fix compiler warnings around Data.Monoid import on some platforms.\n\n[1.17]\n\n
  \ * Remimplement json encoding of inlines manually (Jesse Rosenthal).\n    This
  is the first step to doing manual encoding and decoding of pandoc\n    JSON. This
  will replace the current generic deriving, which can be a\n    moving target.\n
  \ * Move Arbitrary instances for types from pandoc (Jesse Rosenthal).\n  * Remove
  empty arrays for leaf elements (Jesse Rosenthal).\n    Elements with no children
  (Space, SoftBreak, LineBreak, HorizontalRule,\n    Null) previously had an empty
  array for their \"c\" value. We remove that\n    here.  This is a breaking change
  for the JSON format.\n  * New toplevel JSON format with api-version (Jesse Rosenthal).
  The version\n    number is the pandoc-types version.  The toplevel format was previously:\n\n
  \       [{\"unMeta\": META}, [BLOCKS]]\n\n    It is now:\n\n        {\n         \"pandoc-api-version\"
  : [MAJ, MIN, REV],\n         \"meta\" : META,\n         \"blocks\": BLOCKS\n        }\n\n
  \   Decoding fails if the major and minor version numbers don't match.\n  * Add
  simple quickcheck tests to verify that roundtrip works properly\n    (Jesse Rosenthal).\n
  \ * Add a LineBlock block element (Albert Krewinkel).\n  * Add explicit unit tests
  for encoding and decoding (Jesse Rosenthal).\n  * Fixed warnings in Walk, Builder.\n
  \ * Test with travis and appveyor.\n\n[1.16.1.1]\n\n  * Allow aeson 1.0.*.\n\n[1.16.1]\n\n
  \ * Allow aeson 0.11.*.\n  * Export pandocTypesVersion from Text.Pandoc.Definition.\n\n[1.16.0.1]\n\n
  \ * Use deepseq instead of deepseq-generics.  deepseq now allows deriving\n    generic
  NFData instances, so we don't need deepseq-generics.\n  * Removed unneeded instance,
  use OVERLAPPING pragma for ghc 7.10.\n  * Added CPP so that deepseq-generics is
  used for ghc < 7.10.\n  * Added tested-with, generate .travis.yml using make_travis_yml.hs\n
  \ * Added stack.yaml\n\n[1.16]\n\n* Added Attr field to Image and Link.\n* Added
  SoftBreak constructor to Inline\n"
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4 && <5'
  syb: ! '>=0.1 && <0.8'
  containers: ! '>=0.3'
  ghc-prim: ! '>=0.2'
  transformers: ! '>=0.2 && <0.6'
  deepseq: ! '>=1.4.1 && <1.5'
  QuickCheck: ! '>=2'
  aeson: ! '>=0.6.2 && <1.4'
all-versions:
- '1.7'
- '1.8'
- '1.8.0.2'
- '1.8.2'
- '1.9'
- '1.9.0.1'
- '1.9.0.2'
- '1.9.1'
- '1.10'
- '1.12'
- '1.12.1'
- '1.12.1.1'
- '1.12.1.2'
- '1.12.2'
- '1.12.2.1'
- '1.12.2.2'
- '1.12.2.3'
- '1.12.3'
- '1.12.3.1'
- '1.12.3.2'
- '1.12.3.3'
- '1.12.4'
- '1.12.4.1'
- '1.12.4.2'
- '1.12.4.3'
- '1.12.4.4'
- '1.12.4.5'
- '1.12.4.6'
- '1.12.4.7'
- '1.16'
- '1.16.0.1'
- '1.16.1'
- '1.16.1.1'
- '1.17'
- '1.17.0.1'
- '1.17.0.2'
- '1.17.0.3'
- '1.17.0.4'
- '1.17.0.5'
- '1.17.1'
- '1.17.2'
- '1.17.3'
- '1.17.3.1'
- '1.17.4'
author: John MacFarlane
latest: '1.17.4'
description-type: haddock
description: ! '@Text.Pandoc.Definition@ defines the ''Pandoc'' data

  structure, which is used by pandoc to represent

  structured documents.  This module used to live

  in the pandoc package, but starting with pandoc 1.7, it

  has been split off, so that other packages can use it

  without drawing in all of pandoc''s dependencies, and

  pandoc itself can depend on packages (like citeproc-hs)

  that use them.


  @Text.Pandoc.Builder@ provides functions for building

  up @Pandoc@ structures programmatically.


  @Text.Pandoc.Generic@ provides generic functions for

  manipulating Pandoc documents.


  @Text.Pandoc.Walk@ provides faster, nongeneric functions

  for manipulating Pandoc documents.


  @Text.Pandoc.JSON@ provides functions for serializing

  and deserializing a @Pandoc@ structure to and from JSON.'
license-name: BSD3
