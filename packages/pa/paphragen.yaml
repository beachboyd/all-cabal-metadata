homepage: ''
changelog-type: markdown
hash: 158dfd96613737e34a0a6565e70b66bb9cd4ff3049eb5868993dd52ded33fa9b
test-bench-deps: {}
maintainer: marcelogmillani@gmail.com
synopsis: A passphrase generator.
changelog: ! "# Revision history for paphragen\n\n## 0.1.0.0  -- 2016-12-30\n## 0.2.0.0
  \ -- 2016-12-30\n\n* First version.\n    - A dictionary can be built based on text
  files.\n    - Passphrases with desired entropy are generated.\n    - Uses a stream
  of random bytes for generation.\n* TODO\n    - Check performance of IO operations.\n
  \   - Generate a non-ambiguous dictionary, that is, guarantee that there is only
  one way of generating each passphrase. For example, if `in`, `put` and `input` are
  in the dictionary, the passphrase `input` is ambiguous. In this case, either `in`
  or `put` should be removed.\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.9 && <4.10'
  containers: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
author: Marcelo Garlet Millani
latest: 0.2.0.0
description-type: haddock
description: ! 'A passphrase is a password made with words instead of just letters
  and digits. The advantage over passwords is that they are easier to remember. The
  disadvantage is that they are quite long and people tend to overestimate their security.


  Most tools for password generation that we know just generate a random sequence
  of characters and cannot properly estimate the strength of a passphrase.


  `paphragen` is capable not only of generating passphrases from a given word list,
  it can also build such word lists given sufficient text input (e.g. books, news
  articles...). It also properly computes the strength of the generated password.
  A stream of random bytes can be used in order to achieve cryptographic-quality randomness.'
license-name: GPL-3.0-only
