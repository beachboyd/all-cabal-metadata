homepage: ''
changelog-type: markdown
hash: 42e155089fcaf0a0c0bf50056ae80c27d04cf30a9619dbd08a6d4c2d9efed632
test-bench-deps: {}
maintainer: dan.firth@homotopic.tech
synopsis: Decodes pandoc to dhall.
changelog: |
  # Changelog for pandoc-dhall-decoder

  ## v0.1.0.0

  * Working pandoc decoder for dhall.
basic-deps:
  either: -any
  base: '>=4.7 && <5'
  dhall: -any
  text: -any
  pandoc: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Daniel Firth
latest: 0.1.0.1
description-type: markdown
description: |
  # pandoc-dhall-decoder

  This module allows you to decode a `Pandoc` value using any `Text.Pandoc.Readers` function.

  You should use newtypes like so:

  ```
  newtype MyDoc = MyDoc Pandoc
    deriving stock (Eq, Show, Generic)

  instance D.FromDhall MyDoc where
    autoWith options = fmap MyDoc $ pandocDecoder readMarkdown def options
  ```
license-name: BSD-3-Clause
