homepage: https://github.com/rcook/pansite#readme
changelog-type: ''
hash: 0ab3c83d7190012da59fb6b94ca1d2d995af311f8da32cab58a5fb8f95d2ba07
test-bench-deps:
  base: ! '>=4.7 && <5'
  hspec: -any
  doctest: -any
  pansite: -any
  QuickCheck: -any
  Glob: -any
maintainer: rcook@rcook.org
synopsis: ! 'Pansite: a simple web site management tool'
changelog: ''
basic-deps:
  warp: -any
  shake: -any
  MissingH: -any
  bytestring: -any
  wai: -any
  split: -any
  base: ! '>=4.7 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  vcs-revision: -any
  filepath: -any
  data-default: -any
  pandoc-types: -any
  pansite: -any
  pandoc: -any
  blaze-html: -any
  optparse-applicative: -any
  wai-logger: -any
  http-types: -any
  aeson: -any
  template-haskell: -any
  yaml: -any
  vector: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.2.0.0'
author: Richard Cook
latest: '0.2.0.0'
description-type: markdown
description: ! "# Pansite: a simple web site management tool\n\n## Development\n\nThis
  project uses [Stack][stack], [Pandoc][pandoc], [Warp][warp] and [Shake][shake]\n\n##
  Why are you doing this?\n\nI want a [Hakyll][hakyll]-like static web site generator
  that can be easily used in conjunction with a dynamic site built with [Yesod][yesod].
  I want it to use Pandoc so that I can build rich content, possibly with embedded
  mathematics. I also want it to be responsive, so that when I make changes to the
  underlying Markdown files, I can view the updated output in my browser quickly instead
  of having to wait thirty seconds for the Hakyll build to complete. There are probably
  tools that already do this (probably Hakyll itself can be made to do this), but
  I love reinventing the wheel. So, that's what I'm going to do.\n\nThe system is
  intended to be extensible in the future, so I will put some thought into how to
  extract its core functionality into a library.\n\n## Work in progress\n\nThis project
  is a prototype and, therefore, _should not be used for any real work yet!_\n\n##
  Current features\n\n* Uses Pandoc to render Markdown into HTML (and, also, Microsoft
  Word documents)\n* Supports static resources such as CSS\n* Supports dynamic refresh
  of routes\n* Shake-based build ensure that outputs are correctly maintained as long
  as dependencies are fully specified\n\n## The vision\n\nCurrently Pansite is a trivial
  web app built on top of Warp. Routes are defined in a `.pansite.yaml` file using
  the following schema:\n\n```yaml\n# $(@D) is an automatic variable meaning \"the
  output directory\" (a la GNU Make)\n# All other paths are resolved relative to this
  directory containing this file\n\nroutes:\n- path: \"\"\n  target: $(@D)/index.html\n-
  path: page1\n  target: $(@D)/page1.html\n- path: page2\n  target: $(@D)/page2.html\n-
  path: css/buttondown.css\n  target: buttondown.css\n\ntargets:\n- path: $(@D)/index.html\n
  \ tool: pandoc\n  tool-settings:\n    number-sections: false\n  inputs:\n  - index.md\n
  \ dependencies:\n  - .pansite.yaml\n- path: $(@D)/page1.html\n  tool: pandoc\n  tool-settings:\n
  \   number-sections: false\n  inputs:\n  - page1.md\n  dependencies:\n  - .pansite.yaml\n-
  path: $(@D)/page2.html\n  tool: pandoc\n  tool-settings:\n    mathjax: true\n  inputs:\n
  \ - page2.md\n  dependencies:\n  - .pansite.yaml\n\ntool-settings:\n  pandoc:\n
  \   number-sections: true\n    template-path: template.html\n    vars:\n    - [css,
  css/buttondown.css]\n```\n\nEach `path` entry defines a route that the web app will
  respond to. The `target` key defines the cached content file to return in response
  to this route.\n\nThe cached content files are currently built using [Shake][shake]
  using rules generated from the `.pansite.yaml` file. Thus, the app itself defines
  how to build the cached content files using a simple declarative format. There is
  a silly test site defined under `_app`, specifically in [`_app/.pansite.yaml`][app-example]
  that demonstrates the idea. I do not want to allow the app's content itself to provide
  a Shake build script since I do not want to allow the user-provided content to run
  arbitrary commands on my server. Instead, the simple declarative rules in `.pansite.yaml`
  constrain what the build system can do while still keeping it useful.\n\nCurrently
  this prototype demonstrates the use of a single build tool, namely Pandoc. I intend
  to refactor the code to make it straightforward to specify additional build tools:
  some will be embedded directly, like Pandoc, others can use the Shake's [`cmd`][cmd-hackage]
  function to invoke external processes.\n\nBuild tools currently supported:\n\n*
  Pandoc (`pandoc`): Process input files using Pandoc\n* Copy (`copy`): Copy input
  file to output\n\n## How to run it\n\nBuild it:\n\n```bash\nstack build\n```\n\nRun
  the example site:\n\n```bash\ncd _app/\nstack exec -- pansite --port 3000\n```\n\nIn
  your web browser, navigate to a route defined in `.pansite.yaml`, e.g. `http://localhost:3000/page2`.\n\n##
  Command-line options\n\n```terminal\n$ stack exec -- pansite --help\nPansite development
  server 0.1.0.0.772a2d5 (locally modified)\n\nUsage: pansite ([-p|--port PORT] [-c|--config
  CONFIG]\n                   [-o|--output-dir OUTPUTDIR] | [-v|--version])\n  Run
  Pansite development server\n\nAvailable options:\n  -h,--help                Show
  this help text\n  -p,--port PORT           Port\n  -c,--config CONFIG       Path
  to YAML application configuration file\n  -o,--output-dir OUTPUTDIR\n                           Output
  directory\n  -v,--version             Show version\n```\n\n## Licence\n\nReleased
  under [MIT License][licence]\n\nCopyright &copy; 2017&mdash;2018 Richard Cook\n\n[app-example]:
  _app/.pansite.yaml\n[cmd-hackage]: https://hackage.haskell.org/package/shake-0.15.11/docs/Development-Shake-Command.html\n[gnu-make]:
  https://www.gnu.org/software/make/\n[hakyll]: https://jaspervdj.be/hakyll/\n[licence]:
  LICENSE\n[pandoc]: http://pandoc.org/\n[shake]: http://shakebuild.com/\n[stack]:
  https://haskellstack.org/\n[warp]: https://hackage.haskell.org/package/warp\n[yesod]:
  http://www.yesodweb.com/\n"
license-name: MIT
