homepage: http://github.com/lyokha/styleFromMeta
changelog-type: markdown
hash: 5b4e8086c960a2e393594d315b102f416539e6e16e96880727fed9f23c0ef934
test-bench-deps: {}
maintainer: Alexey Radkov <alexey.radkov@gmail.com>
synopsis: Pandoc filter to customize links, images and paragraphs
changelog: ! "### 0.2.0.0\n\n- Render substitutions using Pandoc's writers.\n- Improved
  matching algorithms in metadata blocks.\n- Implemented a new method of substitution
  using code blocks in metadata. This\n  method must be preferred for all output formats.\n-
  Added verbatim placeholders `$$SRC$$` and `$$TITLE$$`, and placeholder\n  `$$ALT$$`
  in which all formatting is removed.\n\n### 0.1.1.0\n\n- Added support for Pandoc
  2.0.\n- Dropped support for GHC older than 7.8 (pattern synonyms are required).\n\n"
basic-deps:
  MissingH: ! '>=1.0.0'
  bytestring: -any
  base: ! '>=4.7 && <5'
  text: -any
  pandoc-types: ! '>=1.12'
  containers: ! '>=0.2'
  pandoc: ! '>=1.12'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1.0'
- '0.2.0.0'
- '0.2.0.1'
author: Alexey Radkov <alexey.radkov@gmail.com>
latest: '0.2.0.1'
description-type: markdown
description: ! "styleFromMeta\n=============\n\nPandoc filter to apply styles found
  in the metadata of the document to various\nobjects.\n\nStyling is supported for
  following types of objects:\n\n- Standalone and inlined images\n- Links\n- Paragraphs
  (with restrictions, see below)\n\nStyles are read from the metadata of the document:
  they may reside inside the\ndocument or in a separate YAML file. For example,\n\n```yaml\n
  \   ---\n    img_style :\n      html : |\n        ~~~~~\n        <div style=\"clear:
  both; text-align: center; margin-bottom: 16px\">\n        <a href=\"$SRC$\" style=\"margin-left:
  10em;\" alt=\"$ALT$\">\n        <img border=\"0\" src=\"$SRC$\" /></a></div>\n        ~~~~~\n
  \     latex : |\n        ~~~~~\n        \\begin{center}\n        \\includegraphics{$$SRC$$}\n
  \       \\end{center}\n        ~~~~~\n      rst: |\n        ~~~~~\n        .. image::
  $$SRC$$\n           :height: 100px\n           :width: 200 px\n           :scale:
  50 %\n           :alt: $$ALT$$\n           :align: right\n        ~~~~~\n      haddock:
  |\n        ~~~~~\n        <<$$SRC$$ An image $ALT$>>\n        ~~~~~\n    link_style
  :\n      html : |\n        ~~~~~\n        <a href=\"$SRC$\" style=\"margin-left:
  1em; margin-right: 1em;\">$ALT$</a>\n        ~~~~~\n      latex : |\n        ~~~~~\n
  \       \\href{$SRC$}{\\colorbox{green}{$ALT$}}\n        ~~~~~\n    para_style :\n
  \     html : |\n        <span style=\"display: block; margin-bottom: 16px;\"></span>\n
  \   ...\n```\n\ndeclares styles `img_style`, `link_style` and `para_style`. Their
  names (except\nfor the last) are arbitrarily chosen and may be referred from the
  document, for\nexample\n\n```markdown\n    ![$img_style$](../images/an_image.png)\n
  \   [$link_style$ *here*](http://example.com/)\n```\n\nPlaceholders `$ALT$`, `$SRC$`
  and `$TITLE$` from style declarations are to be\nreplaced by corresponding data
  found in the object declaration. In this example\n`*here*` corresponds to `$ALT$`,
  and `http://example.com/` corresponds to\n`$SRC$`. Placeholders `$$SRC$$` and `$$TITLE$$`
  are replaced verbatim, in\n`$$ALT$$` all formatting gets removed. In the example
  `$$SRC$$` is used to keep\nunderscores unescaped as they may reside in image names.\n\nNotice
  that all metablocks contents, with the exclusion of `para_style`, are\nwrapped inside
  code blocks. This let the contents be substituted verbatim for\nany output format.
  However, raw HTML and TeX blocks are well supported by\nPandoc, so we could rewrite
  parts of the example like this:\n\n```yaml\n    ---\n    img_style :\n      html
  : |\n        <div style=\"clear: both; text-align: center; margin-bottom: 16px\">\n
  \       <a href=\"$SRC$\" style=\"margin-left: 10em;\" alt=\"$ALT$\">\n        <img
  border=\"0\" src=\"$SRC$\" /></a></div>\n      latex : |\n        \\begin{center}\n
  \       \\includegraphics{$$SRC$$}\n        \\end{center}\n\n    # ...\n\n    ...\n```\n\nThe
  filter has support for raw HTML and TeX blocks, but this support is not\ncomplete,
  and in some cases substitutions may fail. In addition, Pandoc may\nre-format substitutions.
  That's why this method is not recommended to use.\n\nAs soon as paragraphs do not
  have place where to put extra data, style\n`para_style` is applied to all paragraphs
  in the document. Currently, only\ntransformation to a span block is supported (which
  is probably useful only in\nHTML). Any contents found between opening and closing
  span tags are ignored:\nactual paragraph contents will be inserted inside them.
  Notice that wrapping\ninside code blocks is not allowed in `para_style` block.\n\n"
license-name: BSD3
