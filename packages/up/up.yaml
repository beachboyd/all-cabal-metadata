homepage: https://github.com/thomaseding/up
changelog-type: ''
hash: 5f95500a5d9741a3ba24033b154fc6d153d516992b8b7b6ee4a3439053876791
test-bench-deps: {}
maintainer: Thomas Eding
synopsis: Command-line tool to generate paths for moving upward in a file system
changelog: ''
basic-deps:
  split: ^>=0.2.3.3
  base: ^>=4.12.0.0
  filepath: ^>=1.4.2.1
  lambda-options: ^>=1.0.0.0
  mtl: ^>=2.2.2
  directory: ^>=1.3.3.0
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 1.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.0.3
- 1.0.0.4
- 1.0.0.5
author: Thomas Eding
latest: 1.0.0.5
description-type: markdown
description: "Homepage: [https://github.com/thomaseding/up](https://github.com/thomaseding/up)\r\n\r\nHackage:
  [https://hackage.haskell.org/package/up](https://hackage.haskell.org/package/up)\r\n\r\n\r\n\r\n------\r\n\r\n\r\nInstall
  from git repository:\r\n```\r\n$ cabal configure\r\n$ cabal build\r\n$ cabal install\r\n```\r\n\r\nInstall
  from Hackage.\r\n```\r\n$ cabal update\r\n$ cabal install up\r\n```\r\n\r\nThese
  will install the `up` command.\r\n\r\n--------\r\n\r\nExample usage:\r\n```\r\n$
  cd /home/thomas/code/up/src\r\n$ up thomas\r\n../../..\r\n$ up --absolute thomas\r\n/home/thomas\r\n$
  up ....\r\n../../..\r\n$ up --relative --from-to /abc/def/xyz/ abc\r\n../../..\r\n```\r\n\r\nSee
  `up --help` for more info.\r\n\r\n------------\r\n\r\n`up` generates file path strings,
  but it (by itself) does not change your current working directory. So below is code
  you can add to your shell's config file (e.g. `.bashrc`) to use the `up` program
  to change your directory.\r\n\r\n\r\n```bash\r\ng () {\r\n    local DEST\r\n    DEST=$(up
  \"$@\")\r\n    if [ \"$?\" == '0' ]\r\n    then\r\n        cd \"$DEST\"\r\n    else\r\n
  \       return \"$?\"\r\n    fi\r\n}\r\n```\r\n\r\nExample usage:\r\n```\r\n$ cd
  /home/thomas/code/up/src\r\n$ g thomas\r\n$ pwd\r\n/home/thomas\r\n```\r\n\r\n\r\nFor
  shell autocomplete for the above `g` command, you can add this to your shell's config
  in addition:\r\n```bash\r\n_g () {\r\n    if [ \"$COMP_CWORD\" == \"1\" ]\r\n    then\r\n
  \       local cur=${COMP_WORDS[COMP_CWORD]}\r\n        local parts=\"$(pwd | tr
  '/' ' ')\"\r\n        COMPREPLY=( $(compgen -W \"$parts\" -- $cur) )\r\n    fi\r\n}\r\ncomplete
  -F _g g\r\n```\r\n\r\n\r\n"
license-name: BSD-3-Clause
