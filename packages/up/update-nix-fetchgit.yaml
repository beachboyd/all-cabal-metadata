homepage: https://github.com/expipiplus1/update-nix-fetchgit#readme
changelog-type: markdown
hash: 0ca5d630c2f27d73739b9ec0ba28e21dc69b68d2a414ed8cdc1e61aa542bbbad
test-bench-deps: {}
maintainer: haskell@monoid.al
synopsis: A program to update fetchgit values in Nix expressions
changelog: |+
  # Version [0.1.2.0](https://github.com/expipiplus1/update-nix-fetchgit/compare/0.1.1.0...0.1.2.0)

  * Additions
    * Support updating `fetchFromGitLab`
    * Support updating `fetchgit` and `fetchgitPrivate

  # Version [0.1.1.0](https://github.com/expipiplus1/update-nix-fetchgit/compare/0.1.0.0...0.1.1.0)

  * Changelog started. Previous release was `0.1.0.0`.

  * Additions
    * `update-nix-fetchgit` will pass any extra arguments after the filename to `nix-prefetch-git`:

    ```
    update-nix-fetchgit filename.nix --rev refs/heads/myBranch
    ```

    * `Update.Span` module now exposes `split`

  ---

  `update-nix-fetchgit` uses [PVP Versioning][1].

  [1]: https://pvp.haskell.org

basic-deps:
  bytestring: '>=0.10'
  base: '>=4.7 && <5'
  time: '>=1.5'
  text: '>=1.2'
  update-nix-fetchgit: -any
  process: '>=1.2'
  uniplate: '>=1.6'
  async: '>=2.1'
  hnix: '>=0.8'
  utf8-string: '>=1.0'
  prettyprinter: -any
  transformers: '>=0.4'
  errors: '>=2.1'
  aeson: '>=0.9'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
author: Joe Hermaszewski
latest: 0.1.2.0
description-type: markdown
description: |
  # update-nix-fetchgit

  This is a command-line utility for updating `fetchgit`, `fetchgitPrivate`, and `fetchFromGitHub` calls in [Nix](http://nixos.org/nix/) expressions.  This utility is meant to be used by people maintaining Nix expressions that fetch files from Git repositories.  It automates the process of keeping such expressions up-to-date with the latest upstream sources.

  When you run `update-nix-fetchgit` on a file, it will:

  - Read the file and parse it as a Nix expression.
  - Find all Git fetches (calls to `fetchgit`, `fetchgitPrivate`, `fetchFromGitHub` or `fetchFromGitLab`).
  - Run [`nix-prefetch-git`](https://github.com/NixOS/nixpkgs/blob/master/pkgs/build-support/fetchgit/nix-prefetch-git) to get information about the latest HEAD commit of each repository.
  - Update the corresponding rev, sha256, and version attributes for each repository.
  - Overwrite the original input file.

  Any `version` attribute found in the file will be updated if it is in a set that contains (directly or inderictly) a Git fetch.  The version attribute will be updated to the commit date of the latest HEAD commit in the Git repository, in the time zone of the committer, in "YYYY-MM-DD" format.  If the set contains multiple Git fetches, the latest such date is used.

  When this program fetches information from multiple repositories, it runs multiple instances of `nix-prefetch-git` in parallel.


  # Usage

  Pass the name of the file to be updated as the first argument:

      update-nix-fetchgit filename.nix

  The file will be updated in place.

  ## Extra arguments

  `update-nix-fetchgit` will pass any extra arguments after the filename to `nix-prefetch-git`:

      update-nix-fetchgit filename.nix --rev refs/heads/myBranch


  # Example

  Here is an example of a Nix expression that can be updated by this program:

  ```nix
  { stdenv, fetchgit }:

  stdenv.mkDerivation rec {
    name = "foo-${version}";
    version = "2016-07-13";
    src = fetchgit {
      url = "git://midipix.org/slibtool";
      rev = "4f56fd184ef6020626492a6f954a486d54f8b7ba";
      sha256 = "0nmyp5yrzl9dbq85wyiimsj9fklb8637a1936nw7zzvlnzkgh28n";
    };
  }
  ```

  The `rev`, `sha256`, and `version` attributes will all be updated.


  # Building from source

  The recommended way to build this program from source for development purposes is to download and run `nix-shell` in the top-level source directory and then run `cabal build`.


  # More documentation

  You can run `update-nix-fetchgit --help` or `man update-nix-fetchgit` for more documentation.


  # Authors

  - [expipiplus1](https://github.com/expipiplus1) - I'm `jophish` on Freenode; say hi!
  - [DavidEGrayson](https://github.com/DavidEGrayson)
license-name: BSD-3-Clause
