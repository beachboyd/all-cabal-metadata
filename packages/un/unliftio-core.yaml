homepage: https://github.com/fpco/unliftio/tree/master/unliftio-core#readme
changelog-type: markdown
hash: 9b3e44ea9aacacbfc35b3b54015af450091916ac3618a41868ebf6546977659a
test-bench-deps: {}
maintainer: michael@snoyman.com
synopsis: The MonadUnliftIO typeclass for unlifting monads to IO
changelog: |
  # ChangeLog for unliftio-core

  ## 0.2.0.1

  * Remove faulty default implementation of `withRunInIO` [#56](https://github.com/fpco/unliftio/issues/56)

  ## 0.2.0.0

  * Move `askUnliftIO` out of class [#55](https://github.com/fpco/unliftio/issues/55)

  ## 0.1.2.0

  * Add `wrappedWithRunInIO`.

  ## 0.1.1.0

  * Doc improvements.
  * Inline functions in `Control.Monad.IO.Unlift` module [#4](https://github.com/fpco/unliftio/pull/4).
  * Fully polymorphic `withRunInIO` [#12](https://github.com/fpco/unliftio/pull/12).
  * Move `withRunInIO` into the `MonadUnliftIO` typeclass itself[#13](https://github.com/fpco/unliftio/issues/13)

  ## 0.1.0.0

  * Initial release.
basic-deps:
  base: ! '>=4.5 && <10'
  transformers: ! '>=0.2 && <0.6'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.2.0.0
- 0.2.0.1
author: Michael Snoyman, Francesco Mazzoli
latest: 0.2.0.1
description-type: markdown
description: |
  # unliftio-core

  Provides the core `MonadUnliftIO` typeclass, instances for `base` and
  `transformers`, and basic utility functions. Typically, you'll want to use the
  [unliftio](https://www.stackage.org/package/unliftio) library, which provides
  more functionality (and a much better description).
license-name: MIT
