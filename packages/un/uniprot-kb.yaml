homepage: https://github.com/biocad/uniprot-kb#readme
changelog-type: markdown
hash: 94d0a188a193cb52565fca26b8a19ebea523d4f69879bac5c5136e0c2c3a1be8
test-bench-deps:
  uniprot-kb: -any
  base: ! '>=4.7 && <5'
  hspec: ! '>=2.4.1 && <2.6'
  text: ! '>=0.2 && <1.3'
  attoparsec: -any
  QuickCheck: ! '>=2.9 && <2.12'
  neat-interpolation: ! '>=0.3'
maintainer: pavel@yakovlev.me
synopsis: UniProt-KB format parser
changelog: ! '# Changelog for uniprot-kb


  All notable changes to this project will be documented in this file.


  The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)

  and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).


  ## [Unreleased]


  ## 0.1.0.0

  * Any UniProt-KB file can be parsed

'
basic-deps:
  base: ! '>=4.7 && <5'
  text: ! '>=0.2 && <1.3'
  attoparsec: ! '>=0.10 && <0.14'
all-versions:
- '0.1.0.0'
author: Pavel Yakovlev
latest: '0.1.0.0'
description-type: markdown
description: ! "# uniprot-kb\n\n[![Travis](https://img.shields.io/travis/biocad/uniprot-kb.svg)](https://travis-ci.org/biocad/uniprot-kb)\n[![hackage](https://img.shields.io/hackage/v/uniprot-kb.svg)](https://hackage.haskell.org/package/uniprot-kb)\n[![hackage-deps](https://img.shields.io/hackage-deps/v/uniprot-kb.svg)](https://hackage.haskell.org/package/uniprot-kb)\n\nA
  well-typed UniProt file format parser.\n\n## Documentation\n\nTo build Haddock documentation
  run:\n```\n$ stack haddock\n```\n\n## Usage example\n\nTo use the parser and types
  import:\n```\nÎ»> import Bio.Uniprot\n```\n\nThan you can parse any `Text` of UniProt
  by using `parseRecord` function. The result will be presented by\na `Record` datatype:\n```
  haskell\ndata Record = Record\n  { id   :: ID\n  , ac   :: AC\n  , dt   :: DT\n
  \ , de   :: DE\n  , gn   :: [GN]\n  , os   :: OS\n  , og   :: Maybe OG\n  , oc   ::
  OC\n  , ox   :: Maybe OX\n  , oh   :: [OH]\n  , refs :: [Reference]\n  , cc   ::
  [CC]\n  , dr   :: [DR]\n  , pe   :: PE\n  , kw   :: KW\n  , ft   :: [FT]\n  , sq
  \  :: SQ\n  } deriving (Show, Eq, Ord)\n```\n"
license-name: BSD3
