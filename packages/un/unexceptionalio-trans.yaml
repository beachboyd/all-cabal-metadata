homepage: https://github.com/singpolyma/unexceptionalio-trans
changelog-type: ''
hash: 7dca84a34b9df9f92b68881df9371a60b72666419a892cfbee7fe02da784a22d
test-bench-deps: {}
maintainer: Stephen Paul Weber <singpolyma@singpolyma.net>
synopsis: A wrapper around UnexceptionalIO using monad transformers
changelog: ''
basic-deps:
  unexceptionalio: ==0.5.0
  base: ==4.*
  transformers: -any
all-versions:
- 0.4.0
- 0.5.0
- 0.5.1
author: Stephen Paul Weber <singpolyma@singpolyma.net>
latest: 0.5.1
description-type: haddock
description: |-
  UnexceptionalIO provides a basic type to witness having caught all
  exceptions you can safely handle.  This library builds on that with
  transformers like ExceptT to provide a more ergonomic tool for many
  cases.

  It is intended that you use qualified imports with this library.

  > import UnexceptionalIO.Trans (UIO)
  > import qualified UnexceptionalIO.Trans as UIO
license-name: LicenseRef-OtherLicense
