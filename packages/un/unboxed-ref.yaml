homepage: https://github.com/winterland1989/unboxed-ref
changelog-type: markdown
hash: a1fce8c763c4656fc6fa01db1722b088362bc48eafe1aad508d0dd5e5d668641
test-bench-deps:
  base: ==4.*
  async: -any
  HUnit: -any
  unboxed-ref: -any
maintainer: drkoster@qq.com
synopsis: Fast unboxed references for ST and IO monad
changelog: ! '# Revision history for unboxed-ref


  ## 0.4.0.0  -- 2017-07-17


  * Add atomic operations which return old value, which is useful for building concurrent
  control structures.

'
basic-deps:
  base: ! '>=4.8 && <5.0'
  ghc-prim: ! '>=0.4'
  primitive: -any
all-versions:
- 0.3.0.0
- 0.4.0.0
author: winter
latest: 0.4.0.0
description-type: markdown
description: ! "unboxed-ref\n===========\n\n[![Hackage](https://img.shields.io/hackage/v/unboxed-ref.svg?style=flat)](http://hackage.haskell.org/package/unboxed-ref)\n[![Test
  Status](https://img.shields.io/travis/winterland1989/unboxed-ref.svg)](https://travis-ci.org/winterland1989/unboxed-ref)\n\nThis
  package provide fast unboxed references for `ST` and `IO` monad and atomic operations
  for `IORefU Int` type. Unboxed reference is implemented using single cell `MutableByteArray
  s` to eliminate indirection overhead which `MutVar# s a` carry, on the otherhand
  unboxed reference only support limited type(instances of `Prim` class).\n\nA simple
  diagram could show the difference between `IORef Int` with `IORefU Int`:\n\n```\ndata
  Foo = Foo {-# UNPACK #-} (IORef Int)\n\n        +-----------+    +-------------+
  \   +---------+\n        | Foo |  *  +--->+ MutVar# | * +--->+ I# | i# |\n        +-----------+
  \   +-------------+    +---------+\n\ndata Bar = Bar {-# UNPACK #-} (IORefU Int)\n\n
  \       +-----------+    +------------------------+\n        | Bar |  *  +--->+
  MutableByteArray# | i# |\n        +-----------+    +------------------------+\n```\n\nBenchmark\n---------\n\nModified
  from [this benchmark](https://marcotmarcot.wordpress.com/2010/03/13/performance-of-ioref/).\n\n```bash\n$
  cd bench && cabal build\n$ time ./dist/build/bench-ref/bench-ref\n143\n./dist/build/bench-ref/bench-ref
  \ 19.76s user 0.02s system 99% cpu 19.785 total\n------------------------------------------------------------\n$
  time ./dist/build/bench-unboxed-ref/bench-unboxed-ref\n143\n./dist/build/bench-unboxed-ref/bench-unboxed-ref
  \ 16.66s user 0.02s system 99% cpu 16.694 total\n------------------------------------------------------------\n$
  ./dist/build/bench-unboxed-ref-atomic/bench-unboxed-ref-atomic\n50500000\n------------------------------------------------------------\n$
  ./dist/build/bench-ref-atomic/bench-ref-atomic\n3597361\n```\n"
license-name: BSD-3-Clause
