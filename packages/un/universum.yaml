homepage: https://github.com/serokell/universum
changelog-type: markdown
hash: 607517a521b4bd2527e14969cdf7d6bc8755e227d952bb5591930a14bc8f4b87
test-bench-deps:
  base: ! '>=4.9.1.0 && <5'
  unordered-containers: ! '>=0.2.8.0'
  text: ! '>=1.2.2.2'
  universum: -any
  criterion: ! '>=1.1.4.0'
  semigroups: ! '>=0.18.3'
  containers: ! '>=0.5.7.1'
  mtl: ! '>=2.2.1'
  hashable: ! '>=1.2.6.1'
  deepseq: ! '>=1.4.2.0'
maintainer: Serokell <hi@serokell.io>
synopsis: Custom prelude used in Serokell
changelog: ! "1.0.0\n=====\n\n* [#90](https://github.com/serokell/universum/issues/90):\n
  \ Improve project structure.\n* [#89](https://github.com/serokell/universum/issues/89):\n
  \ Add export of `Universum.Nub` module to `Universum`.\n* Add `listToMaybe` to `Universum.Monad.Reexport`.\n*
  [#81](https://github.com/serokell/universum/issues/81):\n  Make `putText` and `putLText`
  to be versions of `putStr`.\n  Add `putTextLn` and `putLTextLn` -- versions of `putStrLn`.\n*
  [#5](https://github.com/serokell/universum/issues/5):\n  Add safe versions of `head`,
  `tail`, `init`, `last` functions for `NonEmpty` list.\n  Old `head` (which returns
  `Maybe`) is renamed to `safeHead`.\n  Reexports from `safe` are removed.\n* Remove
  `unsnoc` (this function is very slow and shouldn't be used).\n* [#88](https://github.com/serokell/universum/issues/88):\n
  \ Add `HasCallStack =>` to `error` and `undefined` functions.\n* [#58](https://github.com/serokell/universum/issues/58):\n
  \ Make `Element` type family be associated type family.\n  Remove `{-# OVERLAPPABLE
  #-}` instance for `ToList` and `Container`. Add default instances for basic types.\n
  \ Remove `WrappedList` `newtype` because it's not needed anymore.\n  Remove `NontrivialContainer`
  constraint alias.\n* [#56](https://github.com/serokell/universum/issues/56):\n  Make
  `elem` and `notElem` faster for `Set` and `HashSet` by introducing `ElementConstraint`
  associated type family.\n\n0.9.1\n=====\n\n* Change `base` version to be `< 5`.\n\n0.9.0\n=====\n\n*
  [#79](https://github.com/serokell/universum/issues/79):\n  Import '(<>)' from Semigroup,
  not Monoid.\n* Improve travis configartion.\n* [#80](https://github.com/serokell/universum/issues/80):\n
  \ Rename `Container` to `ToList`, `NontrivialContainer` to `Container`.\n  Keep
  `NontrivialContainer` as type alias.\n* Rename `Containers` module to `Container.Class`.\n*
  Move all container-related reexports from `Universum` to `Container.Reexport`.\n*
  Add default implementation of `null` function.\n* Add `WrappedList` newtype with
  instance of `Container`.\n* Improve compile time error messages for disallowed instances.\n\n0.8.0\n=====\n\n*
  [#83](https://github.com/serokell/universum/issues/83):\n  Change the order of types
  in `show` and `print` functions.\n* Move string related reexports and functions
  to `Conv` module.\n* Rename `Conv` module to `String`.\n* Move `print` function
  to `Print` module.\n* [#77](https://github.com/serokell/universum/issues/77):\n
  \ Add `modify'` function to export list.\n\n0.7.1.1\n=======\n\n* [#69](https://github.com/serokell/universum/issues/69):\n
  \ Document `SuperComposition` operator `(...)`.\n\n0.7.1\n=====\n\n* [#68](https://github.com/serokell/universum/issues/68):\n
  \ Separate all 'nub' functions to `Nub` module, add `sortNub` and `unstableNub`
  there.\n* [#54](https://github.com/serokell/universum/issues/54):\n  Reorganize
  .cabal.\n* [#21](https://github.com/serokell/universum/issues/21):\n  Add benchmarks.\n*
  [#65](https://github.com/serokell/universum/issues/65):\n  Use `TypeNats` instead
  of `TypeLits` when possible.\n\n0.7.0\n=====\n\n* [#47](https://github.com/serokell/universum/issues/47):\n
  \ Reexport `put` and `get` for `MonadState`.\n* [#48](https://github.com/serokell/universum/issues/48):\n
  \ Export boxed `Vector` type.\n* [#49](https://github.com/serokell/universum/issues/49):\n
  \ Export `IdentityT` and `runIdentityT`.\n* [#51](https://github.com/serokell/universum/issues/51):\n
  \ Add `fromRight` and `fromLeft` that behave like `fromMaybe` but for `Either`.\n*
  [#52](https://github.com/serokell/universum/issues/52):\n  Add `maybeToMonoid ::
  Monoid m => Maybe m -> m`.\n* Remove `Symbol`-related types for sure.\n* Return
  back seems to be useful function `guardM` removed in `v0.3`.\n* Add `notElem` for
  `NonTrivialContainer`.\n\n0.6.1\n=====\n\n* Fixed version number bug (it had 4 numbers).\n\n0.6.0.0\n=======\n\n*
  [#62](https://github.com/serokell/universum/issues/62):\n  Export exceptions-related
  functions from 'safe-exceptions'.\n\n0.5.1\n=====\n\n* Fix an infinite loop in `decodeUtf8`
  from `Text` to `ByteString.Lazy`.\n\n0.5\n===\n\n* Export `MonadTrans` typeclass.\n*
  Remove `Symbol`-related exports from `GHC.TypeLits`.\n* Remove `SrcLoc` and `Location`
  reexports from `GHC.ExecutionStack`.\n* Add `With` type operator.\n* Add `hashNub`.\n*
  Export strict `StateT` instead of lazy.\n\n0.4.3\n=====\n\n* Assign associativity
  and priority to (...), export typeclass itself.\n\n0.4.2\n=====\n\n* [#25](https://github.com/serokell/universum/issues/25):\n
  \ Add vararg functions composition operator (...).\n* Rewrite `concatMapM` & `concatForM`
  so that they allow traversed\n  and returned-by-function container types differ.\n\n0.4.1\n=====\n\n*
  Reexport `sortWith` from `GHC.Exts`.\n\n0.4\n===\n\n* Add _haddock_ documentation
  with 100% coverage.\n* Rewrite README tutorial.\n* [#37](https://github.com/serokell/universum/issues/37):\n
  \ Add generalized version of `readEither`.\n* [#38](https://github.com/serokell/universum/issues/38):\n
  \ Add `evaluateNF`, `evaluateNF_`, `evaluateWHNF`, `evaluateWHNF_`.\n* [#39](https://github.com/serokell/universum/issues/39):\n
  \ Add lifted versions of `IORef` functions.\n* Remove `foreach`\n* Reexport `(&&&)`
  from `Control.Arrow`.\n* Add lifted version of `readTVarIO`.\n* `interact` and `getContents`
  work with _Lazy Text_.\n* Reexport `MaybeT`, `maybeToExceptT`, `exceptToMaybeT`.\n\n0.3\n===\n\n*
  [#28](https://github.com/serokell/universum/issues/28):\n  Remove `putByteString`
  and `putLByteString`.\n* [#29](https://github.com/serokell/universum/issues/29):\n
  \ Remove `panic`, `FatalError` and `notImplemented`.\n  Rename `NotImplemented`
  into `Undefined`.\n* [#32](https://github.com/serokell/universum/issues/32):\n  Remove
  `orAlt`, `orEmpty`, `liftAA2`, `eitherA`, `purer`, `<<*>>`,\n  `traceIO`, `guardM`,
  `hush`, `tryIO`, `liftM'`, `liftM2'`,\n  `applyN`, `guardedA`,\n  Bifunctor instances
  for tuples of length higher than 2.\n  Generalize `concatMapM`, add `concatForM`
  and operator versions.\n* [#35](https://github.com/serokell/universum/issues/35):\n
  \ Generalize `andM`, `orM`, `allM`, `anyM` over container type.\n\n0.2.2\n=====\n\n*
  [#33](https://github.com/serokell/universum/issues/33):\n  Add `($)` and `Each`
  type operators.\n\n0.2.1\n=====\n\n* [#24](https://github.com/serokell/universum/issues/26):\n
  \ Add `whenNothing`, `whenNothing_`, `whenNothingM`, `whenNothingM_`,\n  `whenLeft`,
  `whenLeftM`, `whenRight`, `whenRightM`,\n  `whenNotNull`, `whenNotNullM`.\n* [#26](https://github.com/serokell/universum/issues/24):\n
  \  Add `usingReader`, `usingReaderT`,\n       `usingState`, `usingStateT`,\n       `executingState`,
  `executingStateT`,\n       `evaluatingState`, `evaluatingStateT`.\n* Remove `maybeToEither`.\n\n0.2\n===\n\n*
  Add `one` (similar to `singleton`).\n* Expose `Symbol` and `Nat` types from `GHC.TypeLits`
  by default.\n* Export `genericLength` and other generic list return functions.\n*
  Rename `msg` to `fatalErrorMessage`.\n* Export `ExceptT`\n* Export `ReaderT`, and
  `StateT` constructors.\n* Export `NonEmpty` type and constructor for Base 4.9 only.\n*
  Export `Data.Semigroup` type and functions for Base 4.9 only.\n* Export `String`.\n\n0.1.13\n======\n\n*
  Add lenses from `microlens`.\n* Add `(<&>)`.\n* Reexport `(&)` from `Data.Function`
  if it's present there instead\n  of always defining our own (this is actually done
  by reexporting it\n  from `Lens.Micro` which does the right thing).\n* Fix a space
  leak in `whenJust`.\n\n0.1.12\n======\n\n* Use custom classes instead of `Foldable`.
  Thanks to this, `length` and similar functions can't anymore be used on tuples or
  `Maybe`, but can be used on e.g. `Text`, `ByteString` and `IntSet`.\n\n* Add `allM`,
  `anyM,` `andM`, `orM`.\n\n* Reexport `fail` and `MonadFail`.\n\n0.1.11\n======\n\n*
  Expose `putByteString` and `putLByteString` monomorphic versions of `putStrLn` functions\n*
  Switch exported `(<>)` to be from `Data.Monoid` instead of Semigroup.\n* Export
  `Hashable`\n\n0.1.10\n======\n\n* Generalize most `IO` functions to `MonadIO`\n*
  Make `die` available for older versions of base\n\n0.1.9\n=====\n\n* Make `sum`
  and `product` strict\n\n0.1.8\n=====\n\n* ``foreach`` for applicative traversals.\n*
  ``hush`` function for error handling.\n* ``tryIO`` function for error handling.\n*
  ``pass`` function for noop applicative branches.\n* Mask ``Handler`` typeclass export.\n*
  Mask ``yield`` function export.\n\n0.1.7\n=====\n\n* Export monadic ``(>>)`` operator
  by default.\n* Add ``traceId`` and ``traceShowId`` functions.\n* Export``reader``
  and ``state``  functions by default.\n* Export lifted ``throwIO`` and ``throwTo``
  functions.\n\n0.1.6\n=====\n\n* Add uncatchable panic exception throwing using Text
  message.\n* Remove ``printf``\n* Remove ``string-conv`` dependency so Stack build
  works without ``extra-deps``.\n* Bring ``Callstack`` machinery in for GHC 8.x.\n*
  Remove ``throw`` and ``assert`` from ``Control.Exception`` exports.\n* Remove ``unsafeShiftL``
  and ``unsafeShiftR`` from ``Data.Bits`` exports.\n* Reexport ``throw`` as ``unsafeThrow``
  via Unsafe module.\n* Hides all Show class functions. Only the Class itself is exported.
  Forbids custom instances that are not GHC derived.\n* Export`` encodeUtf8`` and
  ``decodeUtf8`` functions by default.\n* Adds ``unsnoc`` function.\n\n0.1.5\n=====\n\n*
  Initial release.\n"
basic-deps:
  bytestring: ! '>=0.10.8.1'
  stm: ! '>=2.4.4.1'
  base: ! '>=4.8 && <5'
  unordered-containers: ! '>=0.2.8.0'
  text: ! '>=1.2.2.2'
  safe-exceptions: ! '>=0.1.6.0'
  type-operators: ! '>=0.1.0.4'
  containers: ! '>=0.5.7.1'
  utf8-string: ! '>=1.0.1.1'
  ghc-prim: ! '>=0.5.0.0'
  mtl: ! '>=2.2.1'
  hashable: ! '>=1.2.6.1'
  transformers: ! '>=0.5.2.0'
  text-format: ! '>=0.3.1.1'
  deepseq: ! '>=1.4.2.0'
  microlens-mtl: ! '>=0.1.11.0'
  microlens: ! '>=0.4.8.1'
  vector: ! '>=0.12.0.1'
all-versions:
- '0.1.8'
- '0.1.12'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.3'
- '0.4'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.5'
- '0.5.1'
- '0.5.1.1'
- '0.6.0.0'
- '0.6.1'
- '0.7.0'
- '0.7.1'
- '0.7.1.1'
- '0.8.0'
- '0.9.0'
- '0.9.1'
- '1.0.0'
author: Stephen Diehl, @serokell
latest: '1.0.0'
description-type: haddock
description: Custom prelude used in Serokell
license-name: MIT
