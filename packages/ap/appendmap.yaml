homepage: https://github.com/koterpillar/appendmap#readme
changelog-type: markdown
hash: 11bf07a18be4b68e1eb65d41004fd2df451e1f3e3e427edbb84d47cd0be02412
test-bench-deps:
  base: ! '>=4.7 && <5'
  hspec: -any
  containers: -any
  appendmap: -any
maintainer: a@koterpillar.com
synopsis: Map with a Semigroup and Monoid instances delegating to Semigroup of the
  elements
changelog: ! '# Changelog for appendmap


  ## Unreleased changes


  ## 0.1.3


  * Fix tests on older LTS


  ## 0.1.2


  * Wrappers for lazy and strict versions of `Data.Map`.


  ## 0.1.1


  * Initial release on Hackage.

'
basic-deps:
  base: ! '>=4.7 && <5'
  containers: -any
all-versions:
- '0.1.1'
- '0.1.2'
- '0.1.3'
author: Alexey Kotlyarov
latest: '0.1.3'
description-type: markdown
description: ! "# appendmap\n\n[![Build status](https://img.shields.io/travis/koterpillar/appendmap.svg)](https://travis-ci.org/koterpillar/appendmap)\n[![Hackage](https://img.shields.io/hackage/v/appendmap.svg)](https://hackage.haskell.org/package/appendmap)\n[![Stackage
  LTS](https://www.stackage.org/package/appendmap/badge/lts)](https://www.stackage.org/lts/package/appendmap)\n[![Hackage
  dependencies](https://img.shields.io/hackage-deps/v/appendmap.svg)](https://packdeps.haskellers.com/feed?needle=appendmap)\n\nA
  `Data.Map` wrapper with a `Semigroup` and `Monoid` instances that delegate to\nthe
  individual keys.\n\n```haskell\nimport qualified Data.Map as Map\nimport Data.Map.Append\n\n>
  one = AppendMap $ Map.fromList [(1, \"hello\"), (2, \"goodbye\")]\n> two = AppendMap
  $ Map.fromList [(1, \"world\"), (3, \"again\")]\n\n> unAppendMap (one <> two)\nfromList
  [(1, \"helloworld\"), (2, \"goodbye\"), (3, \"again\")]\n```\n\n## Motivation\n\n`Data.Map`
  has a `Semigroup` instance that keeps the values from the first\nargument in case
  of a key conflict:\n\n```haskell\nimport qualified Data.Map as Map\nimport Data.Map.Append\n\n>
  Map.fromList [(1, \"hello\")] <> Map.fromList [(1, \"goodbye\")]\nfromList [(1,
  \"hello\")]\n```\n\nA different instance has been suggested for a long time\n([1](https://mail.haskell.org/pipermail/libraries/2012-April/017743.html),\n[2](https://ghc.haskell.org/trac/ghc/ticket/1460)),
  but this is a breaking change and hasn't happened yet (as of 2018-08).\n\n## Development\n\nSource
  code is formatted with `hindent` _then_ `stylish-haskell`.\n\n### Releasing\n\n*
  Run `./bumpversion patch|minor|major`. This will create a new version and push\n
  \ it to the repository to be released.\n"
license-name: BSD3
