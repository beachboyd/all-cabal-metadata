homepage: ''
changelog-type: ''
hash: 636c41544dfb162af82b9b9c6af7837eff925a69b7b6737d390a92006979ad01
test-bench-deps: {}
maintainer: Audrey Tang <audreyt@audreyt.org>
synopsis: String encoding conversion with ICU
changelog: ''
basic-deps:
  base: ! '>=2.0 && <2.2'
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
author: Audrey Tang <audreyt@audreyt.org>
latest: 0.0.3
description-type: text
description: ! "Codec.Text.UConv\n================\n\nThis is a Haskell binding to
  the uconv() ICU library function.\n\nThe only module exported is Codec.Text.UConv,
  which provides one function:\n\n  -- | Convert fromCharset toCharset input output\n
  \ convert :: (UConvertible a, UConvertible b, Monad m)\n      => String -> String
  -> a -> m b\n\nwhere fromCharset and toCharset are the names of the input and output\ncharacter
  set encodings, and input and output are the input and output text.\n\nValid UConvertible
  instances include Strings, ByteStrings and Lazy ByteStrings.\n\nAn example program
  to convert the encoding of an input file, similar to the\nuconv program, is given
  in examples/huconv.hs\n\nCharacter set encodings\n-----------------------\n\nTo
  see a list of encoding names which are known by your operating system,\nrun \"uconv
  --list\" in a shell. Likely encodings are listed on the ICU\n\"Converter Explorer\"
  web page:\n\n  http://demo.icu-project.org/icu-bin/convexp\n\nAvailability of uconv()\n-----------------------\n\nThe
  uconv(3) function is provided by IBM's ICU project:\n\n  http://icu-project.org/\n\nYou'd
  need to install ICU first before compiling this library.\n"
license-name: BSD-3-Clause
