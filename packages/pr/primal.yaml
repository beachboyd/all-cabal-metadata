homepage: https://github.com/lehins/primal
changelog-type: markdown
hash: 53f9582b1ece1cce0d543948a4f84c874436ffc9cec4087f089303c318d45114
test-bench-deps:
  base: -any
  primal: -any
  doctest: '>=0.15'
  template-haskell: -any
maintainer: alexey@kuleshevi.ch
synopsis: Primeval world of Haskell.
changelog: |
  # Changelog for `primal`

  ## 0.2.0

  * Addition of `offToCount`, `offForType`, `countToOff` and `countForType`
  * Renamed `offAsProxy` -> `offForProxyTypeOf` and `countAsProxy` -> `countForProxyTypeOf`
  * Rename `fromCount` -> `unCountBytes`, `fromCount#` -> `unCountBytes#`, `fromOff#` ->
    `unOffBytes#`. Addition of `unOffBytes`
  * Fix a big in `readOffAddr#` and `writeOffAddr#` for tuples
  * Fix a big in `writeOffAddr#` for `Either`
  * Fix an overflow bug in functions that use `memcmp`: `memcmpAddr#`,
    `memcmpAddrByteArray#`, `memcmpByteArray#` and `memcmpByteArrayAddr#`

  ## 0.1.0

  * Initial release
basic-deps:
  base: '>=4.8 && <5'
  ghc-prim: -any
  transformers: -any
  deepseq: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
author: Alexey Kuleshevich
latest: 0.2.0.0
description-type: markdown
description: |+
  # primal

  **Warning** - it is still in experimental stage.

  This package attempts to combine best practices from Haskell eco-system on how to deal
  with `RealWorld`, `IO` and `ST`. It also provides quite a few primitive operations through
  FFI and C that are either not available in older GHC or not available at all.

  Unique functionality for unpacking complex types as well as atomic modification of such
  values.

license-name: BSD-3-Clause
