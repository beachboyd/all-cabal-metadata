homepage: ''
changelog-type: markdown
hash: 926a4437d239d453fc629c33ab5512211a6e6fe300c2f86efc6238ac1d587aa1
test-bench-deps: {}
maintainer: csaba.hruska@gmail.com
synopsis: Simple audio library for Windows, Linux, OSX.
changelog: ! '# 0.7.1.0

  - add sampleFromMemoryPcm

  - update stb_vorbis to v1.14


  # 0.7.0.1

  - better haddock


  # 0.7.0

  - use ByteString for in-memory sample loading

  - fix: c++ mixer init caused segfaults sometimes

  - use PulseAudio backend on Linux

'
basic-deps:
  bytestring: ==0.10.*
  base: ==4.*
  filepath: ! '>=1.4 && <2'
  proteaaudio: -any
all-versions:
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.5
- 0.7.0
- 0.7.0.1
- 0.7.1.0
author: Csaba Hruska
latest: 0.7.1.0
description-type: markdown
description: ! "# Overview\n\nProteaAudio is a stereo audio mixer/playback library
  for\n\n- Linux *(PulseAudio)*\n- Macintosh OS X *(CoreAudio)*\n- Windows *(DirectSound)*\n\nSupported
  audio formats:\n- Wav\n- Ogg\n- Raw linear PCM\n\nSamples can be loaded from file
  or memory.\n\n# Example\n\n```haskell\nimport Control.Monad\nimport System.Environment\nimport
  System.FilePath\nimport qualified Data.ByteString as SB\nimport Control.Concurrent\n\nimport
  Sound.ProteaAudio\n\nwaitPayback = do\n  n <- soundActive\n  when  (n > 0) $ do\n
  \   threadDelay 1000000\n    waitPayback\n\nmain = do\n    args <- getArgs\n    filename
  <- case args of\n      a : _ -> pure a\n      _ -> fail \"usage: proteaaudio-play
  SAMPLE_FILE_NAME\"\n\n    result <- initAudio 64 44100 1024 -- max channels, mixing
  frequency, mixing buffer size\n    unless result $ fail \"failed to initialize the
  audio system\"\n\n    -- (A) load sample from file\n    sampleA <- sampleFromFile
  filename 1.0 -- volume\n\n    soundPlay sampleA 1 1 0 1 -- left volume, right volume,
  time difference between left and right, pitch factor for playback\n    waitPayback\n\n
  \   -- (B) load from memory buffer\n    buffer <- SB.readFile filename\n    sampleB
  <- case takeExtension filename of\n      \".ogg\" -> sampleFromMemoryOgg buffer
  1.0\n      \".wav\" -> sampleFromMemoryWav buffer 1.0\n\n    soundPlay sampleB 1
  1 0 1 -- left volume, right volume, time difference between left and right, pitch
  factor for playback\n    waitPayback\n\n    finishAudio\n```\n"
license-name: BSD-3-Clause
