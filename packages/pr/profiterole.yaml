homepage: https://github.com/ndmitchell/profiterole#readme
changelog-type: text
hash: da5d5bda38d1263b0af4f608ee8974f7fae4ddbedc6184df3cc86132c84cbfc1
test-bench-deps: {}
maintainer: Neil Mitchell <ndmitchell@gmail.com>
synopsis: Restructure GHC profile reports
changelog: ! "Changelog for Profiterole\n\n0.1\n    Initial version\n"
basic-deps:
  extra: -any
  base: ! '>=4.6 && <5'
  text: -any
  filepath: -any
  containers: -any
  ghc-prof: -any
  hashable: -any
  scientific: -any
  directory: -any
all-versions:
- '0.1'
author: Neil Mitchell <ndmitchell@gmail.com>
latest: '0.1'
description-type: markdown
description: ! "# Profiterole [![Hackage version](https://img.shields.io/hackage/v/profiterole.svg?label=Hackage)](https://hackage.haskell.org/package/profiterole)
  [![Stackage version](https://www.stackage.org/package/profiterole/badge/lts?label=Stackage)](https://www.stackage.org/package/profiterole)
  [![Linux Build Status](https://img.shields.io/travis/ndmitchell/profiterole.svg?label=Linux%20build)](https://travis-ci.org/ndmitchell/profiterole)
  [![Windows Build Status](https://img.shields.io/appveyor/ci/ndmitchell/profiterole.svg?label=Windows%20build)](https://ci.appveyor.com/project/ndmitchell/profiterole)\n\nScript
  for reading and restructring a GHC profile script.\n\n## The Goal\n\nGiven profile
  data, different ways of looking at it reveal different insights. This tool provides
  one of those insights - in addition to reading the standard profile output and using
  other tools such as [Profiteur](https://hackage.haskell.org/package/profiteur).\n\nProfiterole
  aims to make the profile shorter by combining common subtrees and lifting them to
  the root - e.g. if you call `parseFile` from 7 places in the code, instead of having
  7 pieces of `parseFile` profiling, Profiterole will give you one.\n\nAs an example
  compare [HLint profile input](https://gist.github.com/ndmitchell/308cd9a2774873c9a74ee613ae203b65#file-hlint-prof)
  to [HLint Profiterole output](https://gist.github.com/ndmitchell/ab790bbfa482a70fa2db020fda623309#file-hlint-profiterole-txt).\n\n##
  Usage\n\nTo run, first install (`cabal update && cabal install profiterole`), generate
  a GHC profile the [normal way](https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/profiling.html),
  then run:\n\n    profiterole myprogram.prof\n\nProfiterole will generate `myprogram.profiterole.txt`
  and `myprogram.profiterole.html` - both contain the same information, but the HTML
  has hyperlinks. There are three columns of numbers:\n\n* `TOT` is the total time
  spent in any item under this code, what GHC calls inherited time.\n* `INH` is the
  total time spent in the items that Profiterole did not move out to the top level.\n*
  `IND` is the individual time, just like GHC profiles.\n\nFor large programs, using
  `+RTS -P` (instead of the common `-p`) will give more accurate results.\n"
license-name: BSD-3-Clause
