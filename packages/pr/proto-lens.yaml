homepage: https://github.com/google/proto-lens#readme
changelog-type: markdown
hash: 0bb0324e71814e021f87384f1210f120d9c775b9c159492ad0cf70d9b81a6d8f
test-bench-deps: {}
maintainer: proto-lens@googlegroups.com
synopsis: A lens-based implementation of protocol buffers in Haskell.
changelog: ! "# Changelog for `proto-lens`\n\n## v0.4.0.1\n- Bump the dependencies
  on `base` and `containers` to `0.4.0.1`.\n\n## v0.4.0.0\n- Don't use `data-default`
  for default proto values (#194).\n- Update the proto descriptors to protobuf-3.6.1.\n-
  Use simplified lens-labels instances. (#208)\n\n## v0.3.1.1\n- Bump the lower bound
  on `base` to indicate we require `ghc>=8.0`.\n\n## v0.3.1.0\n- Improve references
  to types/fields in decoding error messages (#187).\n- Bump the dependency on `base`
  for `ghc-8.4.2`.\n- Make `Registry` an instance of `Semigroup`.\n\n## v0.3.0.0\n-
  Remove support for `ghc-7.10`. (#136)\n- Use a `.cabal` file that's auto-generated
  from `hpack`. (#138)\n- Add buildMessageDelimited: size-delimited streams of Messages
  (#102)\n- Add support for parsing `Any` messages in google protobuf text format
  (#124)\n- Use the Tag newtype consistently. (#127)\n- Add support for tracking unknown
  fields. (#129)\n- Improve an error message. (#132)\n- Bundle enum pattern synonyms
  with their type. (#136)\n- Implement proto3-style \"open\" enums. (#137)\n- Consolidate
  `proto-lens-descriptors` into `proto-lens`. (#140)\n- Split the `Message` class
  into separate methods. (#139)\n- Improve an error message when decoding Anys. (#146)\n-
  Refactor the `FieldDescriptorType. (#147)\n- Improve text format error messages.
  (#148)\n- Add module `Data.ProtoLens.Service.Types`. (#154)\n- Add Haddock comments
  to fields. (#172)\n\n## v0.2.2.0\n- Bump the dependency on `base` to support `ghc-8.2.1`.\n\n##
  v0.2.1.0\n- Include `base`'s modules in the reexport list.\n- Use custom-setup in
  packages that depend on `proto-lens-protoc`.\n- Allow `.proto` files to import between
  Haskell packages.\n- Add the `proto-lens-protobuf-types` package.\n\n## v0.2.0.1\n-
  Make the libraries '-Wall -Werror'-clean for the latest\n  version of GHC.\n\n##
  v0.2.0.0\n- Support OverloadedLabels with the new `lens-labels` package.\n- Fix
  codegen for field names that are already camel-cased.\n- Increase version bounds
  to work with Stackage lts-8.\n\n## v0.1.0.5\n- Fix the handling of packed repeated
  fields (#38)\n- Improve space usage and time of decoding (#63)\n- Print fields ordered
  by tag number (#40)\n\n## v0.1.0.4\n- Relaxed dependency constraints on data-default-class
  for\nnew stackage LTS.\n\n## v0.1.0.3\n- In printing and parsing protocol buffers
  use/interpret escape\nsequences in a way compatible with the Protocol Buffer\ndistribution's
  C/C++ escaping style, closing Issues #44 and\n#45. This makes the text output incompatible
  with previous\nversions; earlier versions will misinterpret text written by this\nversion
  and this version will misinterpret text written by\nprevious versions.\n- Support
  reading text protocol buffers with single quote characters\n(') for string delimiters,
  closing Issue #20.\n\n## v0.1.0.2\n- Expose more of protoc-gen-haskell to plugins.\n-
  Support enum aliases.\n- TextFormat prints enum names instead of numbers.\n\n##
  v0.1.0.1\n- Support ghc-8.\n- Handle .proto files without a \"package\" declaration
  (#11).\n\n## v0.1.0.0\n- Initial version.\n"
basic-deps:
  lens-labels: ==0.3.*
  void: ==0.7.*
  bytestring: ==0.10.*
  lens-family: ==1.2.*
  base: ! '>=4.9 && <4.13'
  text: ==1.2.*
  parsec: ==3.1.*
  containers: ! '>=0.5 && <0.7'
  attoparsec: ==0.13.*
  transformers: ! '>=0.4 && <0.6'
  deepseq: ==1.4.*
  pretty: ==1.1.*
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.1.0'
- '0.2.2.0'
- '0.3.0.0'
- '0.3.1.0'
- '0.4.0.0'
- '0.4.0.1'
author: Judah Jacobson
latest: '0.4.0.1'
description-type: haddock
description: ! 'The proto-lens library provides an API for protocol buffers using
  modern Haskell language and library patterns.  Specifically, it provides:


  * Composable field accessors via lenses


  * Simple field name resolution/overloading via type-level literals


  * Type-safe reflection and encoding/decoding of messages via GADTs'
license-name: BSD3
