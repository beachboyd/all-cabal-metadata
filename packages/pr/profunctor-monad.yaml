homepage: https://github.com/Lysxia/profunctor-monad
changelog-type: ''
hash: 6899b42ec064e44a259ab121637cfa04b76a7745bd1a89e6e2463a27f77d220f
test-bench-deps:
  base: -any
  unordered-containers: -any
  mtl: -any
  hashable: -any
  transformers: -any
  profunctor-monad: -any
maintainer: lysxia@gmail.com
synopsis: Monadic bidirectional programming
changelog: ''
basic-deps:
  base: ! '>=4.9 && <4.13'
  constraints: -any
  profunctors: -any
all-versions:
- 0.1.0.0
author: Li-yao Xia
latest: 0.1.0.0
description-type: markdown
description: ! "Bidirectional Programming with Monadic Profunctors\n==================================================\n\nThis
  package provides tools to work with *monadic profunctors*:\ntypes that are both
  monads and profunctors.\n\nApplications\n------------\n\nCurrently known instances
  of monadic profunctors are certain types of\nbidirectional programs, i.e., programs
  that have \"invertible\" interpretations.\n\n- `attoparsec` (parsing) wrapper: [`unparse-attoparsec`](https://github.com/Lysxia/unparse-attoparsec)\n-
  `QuickCheck` (random generation) wrapper: [`gap`](https://github.com/Lysxia/gap)\n-
  `lens` wrapper: [`lens-monad`](https://github.com/Lysxia/lens-monad)\n\nSee also\n--------\n\n-
  [`codec`](https://hackage.haskell.org/package/codec) for a general\n  monadic profunctor
  for bidirectional programming, has implementations for\n  `aeson` and `binary`.
  The idea of monadic profunctors first came from this\n  package.\n\n### More bidirectional
  programming in Haskell\n\n- [`lens`](https://hackage.haskell.org/package/lens)\n-
  [`boomerang`](https://hackage.haskell.org/package/boomerang)\n- [`roundtrip`](https://hackage.haskell.org/package/roundtrip)\n\n###
  Generic programming with monoidal profunctors\n\n- [`product-profunctors`](https://hackage.haskell.org/package/product-profunctors)\n-
  [`one-liner`](https://hackage.haskell.org/package/one-liner)\n"
license-name: MIT
