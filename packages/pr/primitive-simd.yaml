homepage: ''
changelog-type: ''
hash: bb31775a16b4aa5fc53bc43bd14df0eda27d5796101c81dcb40ed4fc119c619b
test-bench-deps:
  base: ! '>=4.6 && <5'
  criterion: -any
  primitive-simd: -any
  random: -any
  deepseq: -any
  vector: -any
maintainer: anselm.scholl@tu-harburg.de
synopsis: SIMD data types and functions
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  ghc-prim: ! '>=0.3.1'
  primitive: ! '>=0.5'
  vector: ! '>=0.10'
all-versions:
- 0.1.0.0
author: Anselm Jonas Scholl
latest: 0.1.0.0
description-type: haddock
description: ! 'This package provides a lifted version of the SIMD data types

  and instructions from ghc-prim.


  The implementation is based on type families to provide a

  uniform interface to all different vector types. Instances

  for numeric operations, ''Prim'', ''Storable'' and unboxed vector

  instances are provided.


  Although not all processors support 256 or 512-bit vectors

  this package provides a uniform interface. Vectors which

  are bigger than supported are modeled by combining smaller

  vectors. If the same code is compiled on a computer supporting

  larger vectors the smaller vectors are replaced by larger

  vectors.


  Note: This package needs to be compiled with LLVM as the NCG

  does not know how to deal with SIMD-instructions. If LLVM is

  not available, use -f no-vec to disable the use of SIMD instructions.

  While this will give you no speedup, it will work with plain

  Haskell (and should even work with GHCJS).'
license-name: BSD-3-Clause
