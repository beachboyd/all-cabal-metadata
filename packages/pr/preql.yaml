homepage: https://github.com/bergey/preql#readme
changelog-type: markdown
hash: 42327c462d0e84f6f0a55ba06de128d594817c34120bc64ba64fc347213d908a
test-bench-deps:
  free: ! '>=5.0.2 && <5.2'
  bytestring: <0.11
  base: ! '>=4.11 && <4.14'
  time: ! '>=1.8.0 && <1.10'
  bytestring-strict-builder: ! '>=0.4.5 && <0.5'
  postgresql-libpq: <0.10
  text: <1.3
  uuid: <1.4
  array: ! '>=0.5.2 && <0.6'
  th-lift-instances: ! '>=0.1.11 && <0.2'
  postgresql-binary: ! '>=0.12.1 && <0.13'
  contravariant: ! '>=1.4.1 && <1.6'
  preql: -any
  mtl: ! '>=2.2.2 && <2.3'
  binary-parser: ! '>=0.5.5 && <0.6'
  tasty-hunit: <0.11
  transformers: ! '>=0.5.5 && <0.6'
  tasty: <1.3
  scientific: ! '>=0.3.6 && <0.4'
  aeson: ! '>=1.3.1 && <1.5'
  template-haskell: ! '>=2.13.0 && <2.16'
  vector: <0.13
maintainer: bergey@teallabs.org
synopsis: safe PostgreSQL queries using Quasiquoters
changelog: |
  # 0.1 (2020-02-29)

  0.1 highlights include:

  - binary wire format
  - check that Postgres sent expected type before decoding
  - Quasiquoter supports mixing numbered & antiquoted params
basic-deps:
  free: ! '>=5.0.2 && <5.2'
  bytestring: ! '>=0.10.8 && <0.11'
  base: ! '>=4.11 && <4.14'
  time: ! '>=1.8.0 && <1.10'
  bytestring-strict-builder: ! '>=0.4.5 && <0.5'
  postgresql-libpq: ! '>=0.9.4 && <0.10'
  text: ! '>=1.2.3 && <1.3'
  uuid: ! '>=1.3.13 && <1.4'
  array: ! '>=0.5.2 && <0.6'
  th-lift-instances: ! '>=0.1.11 && <0.2'
  postgresql-binary: ! '>=0.12.1 && <0.13'
  contravariant: ! '>=1.4.1 && <1.6'
  mtl: ! '>=2.2.2 && <2.3'
  binary-parser: ! '>=0.5.5 && <0.6'
  transformers: ! '>=0.5.5 && <0.6'
  scientific: ! '>=0.3.6 && <0.4'
  aeson: ! '>=1.3.1 && <1.5'
  template-haskell: ! '>=2.13.0 && <2.16'
  vector: ! '>=0.12.0 && <0.13'
all-versions:
- '0.1'
- '0.2'
author: Daniel Bergey
latest: '0.2'
description-type: haddock
description: |
  Before you Post(gres)QL, preql.

  @preql@ provides a low-level interface to PostgreSQL and a quasiquoter that converts
  inline variable names to SQL parameters.  Higher-level interfaces, checking SQL syntax &
  schema, are planned.

  the [quickstart](https://github.com/bergey/preql#quickstart)
  or the [vision](https://github.com/bergey/preql#vision-parsing-sql-in-haskell-quasiquotes)

  Most applications will want to import the top-level module @Preql@.  When writing @SQL@
  instances or your own higher-level abstractions, you may want the lower-level,
  IO-specific functions in @Preql.Wire@, not all of which are re-exported from @Preql@.
license-name: BSD-3-Clause
