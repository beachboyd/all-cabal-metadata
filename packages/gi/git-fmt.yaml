homepage: https://github.com/hjwylde/git-fmt
changelog-type: markdown
hash: 96d1979715bb9d13c2ac5a2698a47c58c755cf6177bd84178fd646efc16f7fa9
test-bench-deps: {}
maintainer: public@hjwylde.com
synopsis: Custom git command for formatting code.
changelog: ! "## Changelog\n\n#### Upcoming\n\n#### v0.4.1.0\n\n*Minor*\n\n* Added
  bash completion for `--mode` and arguments. ([#71](https://github.com/hjwylde/git-fmt/issues/71))\n\n*Revisions*\n\n*
  Changed path outputs to be relative to the root directory. ([#69](https://github.com/hjwylde/git-fmt/issues/69))\n*
  Fixed a bug where `--operate-on` didn't work in subdirectories. ([#69](https://github.com/hjwylde/git-fmt/issues/69))\n\n####
  v0.4.0.0\n\n*Major*\n\n* Extracted omnifmt out to git@github.com:hjwylde/omnifmt.
  ([#41](https://github.com/hjwylde/git-fmt/issues/41))\n\n#### v0.3.1.2\n\n*Revisions*\n\n*
  Fixed a bug causing prettifying to fail across filesystem boundaries. ([#72](https://github.com/hjwylde/git-fmt/issues/72))\n\n####
  v0.3.1.1\n\n*Revisions*\n\n* Fixed a bug causing the program to hang when not in
  the root directory. ([#66](https://github.com/hjwylde/git-fmt/issues/66))\n* Fixed
  a bug that omitted searching the drive for a config file. ([#66](https://github.com/hjwylde/git-fmt/issues/66))\n*
  Fixed a bug where output files could be created outside of the temp directory. ([#68](https://github.com/hjwylde/git-fmt/issues/68))\n\n####
  v0.3.1.0\n\n*Minor*\n\n* Added timeout wrapper for the program command. ([#52](https://github.com/hjwylde/git-fmt/issues/52))\n*
  Added `diff` mode. ([#23](https://github.com/hjwylde/git-fmt/issues/23))\n\n####
  v0.3.0.5\n\n*Revisions*\n\n* Fixed a bug causing prettifying to fail across filesystem
  boundaries. ([#72](https://github.com/hjwylde/git-fmt/issues/72))\n\n#### v0.3.0.4\n\n*Revisions*\n\n*
  Fixed a bug causing the program to hang when not in the root directory. ([#66](https://github.com/hjwylde/git-fmt/issues/66))\n*
  Fixed a bug that omitted searching the drive for a config file. ([#66](https://github.com/hjwylde/git-fmt/issues/66))\n*
  Fixed a bug where output files could be created outside of the temp directory. ([#68](https://github.com/hjwylde/git-fmt/issues/68))\n\n####
  v0.3.0.3\n\n*Revisions*\n\n* Restricted use of `--operate-on-tracked` and `--operate-on
  REF` at the same time. ([#65](https://github.com/hjwylde/git-fmt/issues/65))\n*
  Removed long option for help text (as git overrides it for man pages). ([#65](https://github.com/hjwylde/git-fmt/issues/65))\n\n####
  v0.3.0.2\n\n*Revisions*\n\n* Fixed a bug where passing arguments didn't properly
  narrow down the operation files. ([#64](https://github.com/hjwylde/git-fmt/issues/64))\n\n####
  v0.3.0.1\n\n*Revisions*\n\n* Relaxed version constraints. ([#63](https://github.com/hjwylde/git-fmt/issues/63))\n\n####
  v0.3.0.0\n\n*Major*\n\n* Restricted arguments to being inside the repository. ([#34](https://github.com/hjwylde/git-fmt/issues/34))\n*
  Refactored library to use pipes. ([#32](https://github.com/hjwylde/git-fmt/issues/32))\n*
  Made `Options` and `Version` modules private. ([#62](https://github.com/hjwylde/git-fmt/issues/62))\n*
  Renamed library modules to `Omnifmt`. ([#62](https://github.com/hjwylde/git-fmt/issues/62))\n*
  Refactored pipeline to feed and consume triples. ([#61](https://github.com/hjwylde/git-fmt/issues/61))\n*
  Set default `--operate-on` to `head`. ([#28](https://github.com/hjwylde/git-fmt/issues/28))\n\n*Minor*\n\n*
  Changed \"not found\" status to print as debug message. ([#61](https://github.com/hjwylde/git-fmt/issues/61))\n*
  Added \"unsupported\" status as debug message. ([#61](https://github.com/hjwylde/git-fmt/issues/61))\n*
  Added `--operate-on-tracked` and `--operate-on REF` options. ([#28](https://github.com/hjwylde/git-fmt/issues/28))\n\n####
  v0.2.2.1\n\n*Revisions*\n\n* Fixed a bug causing prettifying to fail across filesystem
  boundaries. ([#72](https://github.com/hjwylde/git-fmt/issues/72))\n\n#### v0.2.2.0\n\n*Minor*\n\n*
  Added `--threads` option to change the number of threads for parallelisation. ([#54](https://github.com/hjwylde/git-fmt/issues/54))\n\n*Revisions*\n\n*
  Added quoting to the command variables during substitution. ([#59](https://github.com/hjwylde/git-fmt/issues/59))\n*
  Changed parallelisation to use the number of capabilities (and processors) for the
  number of\n  threads by default. ([#54](https://github.com/hjwylde/git-fmt/issues/54))\n\n####
  v0.2.1.2\n\n*Revisions*\n\n* Fixed a bug causing prettifying to fail across filesystem
  boundaries. ([#72](https://github.com/hjwylde/git-fmt/issues/72))\n\n#### v0.2.1.1\n\n*Revisions*\n\n*
  Fixed a bug where passing arguments would only work when running in the git directory.
  ([#57](https://github.com/hjwylde/git-fmt/issues/57))\n\n#### v0.2.1.0\n\n*Minor*\n\n*
  Added default use of stdin and stdout when variables not specified in a program
  command. ([#49](https://github.com/hjwylde/git-fmt/issues/49))\n\n#### v0.2.0.2\n\n*Revisions*\n\n*
  Fixed a bug causing prettifying to fail across filesystem boundaries. ([#72](https://github.com/hjwylde/git-fmt/issues/72))\n\n####
  v0.2.0.1\n\n*Revisions*\n\n* Fixed a bug where passing arguments would only work
  when running in the git directory. ([#57](https://github.com/hjwylde/git-fmt/issues/57))\n\n####
  v0.2.0.0\n\n*Major*\n\n* Removed `--list-ugly` and `--dry-run` options. ([#29](https://github.com/hjwylde/git-fmt/issues/29))\n*
  Restricted use of `--quiet` and `--verbose` at the same time. ([#35](https://github.com/hjwylde/git-fmt/issues/35))\n*
  Updated project structure to delegate pretty printing to other binaries. ([#38](https://github.com/hjwylde/git-fmt/issues/38))\n*
  Added a `.omniyaml.yaml` config file. ([#38](https://github.com/hjwylde/git-fmt/issues/38))\n\n*Minor*\n\n*
  Added `--mode` option (either `normal` or `dry-run`). ([#29](https://github.com/hjwylde/git-fmt/issues/29))\n*
  Added `--null` option (use the null terminator as the delimiter for inputs). ([#27](https://github.com/hjwylde/git-fmt/issues/27))\n*
  Added support for directories as arguments (directories include all files within
  recursively). ([#30](https://github.com/hjwylde/git-fmt/issues/30))\n* Added parallelisation.
  ([#48](https://github.com/hjwylde/git-fmt/issues/48))\n\n*Revisions*\n\n* Added
  a warning for when files aren't found. ([#29](https://github.com/hjwylde/git-fmt/issues/29))\n*
  Updated internal use of `git ls-files` to use the null terminator option. ([#27](https://github.com/hjwylde/git-fmt/issues/27))\n*
  Fixed debug log messages to have timestamp and log level on all lines. ([#33](https://github.com/hjwylde/git-fmt/issues/33))\n*
  Tidied up error messages from git. ([#40](https://github.com/hjwylde/git-fmt/issues/40))\n*
  Tidied up error messages from parsing the config. ([#43](https://github.com/hjwylde/git-fmt/issues/43))\n\n####
  v0.1.0.3\n\n*Revisions*\n\n* Fixed a bug where passing arguments would only work
  when running in the git directory. ([#57](https://github.com/hjwylde/git-fmt/issues/57))\n\n####
  v0.1.0.2\n\n*Revisions*\n\n* Fixed a bug where UTF-8 characters in strings weren't
  printed properly. ([#26](https://github.com/hjwylde/git-fmt/issues/26))\n\n####
  v0.1.0.1\n\n*Revisions*\n\n* Fixed a bug where integers were printed as rationals.
  ([#25](https://github.com/hjwylde/git-fmt/issues/25))\n\n#### v0.1.0.0\n\nThis is
  first release of the `git-fmt` binary!\nIt provides a basic syntax for formatting
  files in a git repository.\nCurrently only JSON is supported.\n\n"
basic-deps:
  exceptions: ! '>=0.8'
  extra: ! '>=1.4'
  base: ! '>=4.8 && <5'
  time: ! '>=1.5'
  text: ! '>=1.2'
  filepath: ! '>=1.4'
  process: ! '>=1.2'
  fast-logger: ! '>=2.4'
  pipes: ! '>=4.1'
  pipes-concurrency: ! '>=2.0'
  monad-parallel: ! '>=0.7'
  omnifmt: ! '>=0.1'
  mtl: ! '>=2.2'
  monad-logger: ! '>=0.3'
  temporary: ! '>=1.2'
  optparse-applicative: ! '>=0.11 && <0.13'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.1.0
- 0.2.1.1
- 0.2.1.2
- 0.2.2.0
- 0.2.2.1
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
- 0.3.0.3
- 0.3.0.4
- 0.3.0.5
- 0.3.1.0
- 0.3.1.1
- 0.3.1.2
- 0.4.0.0
- 0.4.1.0
author: Henry J. Wylde
latest: 0.4.1.0
description-type: markdown
description: ! "# git-fmt\n\n[![Project Status: Wip - Initial development is in progress,
  but there has not yet been a stable, usable release suitable for the public.](http://www.repostatus.org/badges/1.0.0/wip.svg)](http://www.repostatus.org/#wip)\n[![Build
  Status](https://travis-ci.org/hjwylde/git-fmt.svg?branch=master)](https://travis-ci.org/hjwylde/git-fmt)\n[![Release](https://img.shields.io/github/release/hjwylde/git-fmt.svg)](https://github.com/hjwylde/git-fmt/releases/latest)\n[![git-fmt
  on Stackage LTS](https://www.stackage.org/package/git-fmt/badge/lts)](https://www.stackage.org/lts/package/git-fmt)\n[![git-fmt
  on Stackage Nightly](https://www.stackage.org/package/git-fmt/badge/nightly)](https://www.stackage.org/nightly/package/git-fmt)\n\nCustom
  git command for formatting code.\ngit-fmt provides a wrapper around [omnifmt](https://github.com/hjwylde/omnifmt),\n
  \   an automatic code formatter.\nIt adds the ability to operate on specific tracked
  files in the repository.\n\nFormatted code is:\n\n* Easier to write: never worry
  about minor formatting concerns while hacking away.\n* Easier to read: when all
  code looks the same you need not mentally convert others' formatting\n  style into
  something you can understand.\n* Easier to maintain: mechanical changes to the source
  don't cause unrelated changes to the file's\n  formatting; diffs show only the real
  changes.\n* Uncontroversial: never have a debate about spacing or brace position
  ever again.\n\n(Bullet points taken from [https://blog.golang.org/go-fmt-your-code](https://blog.golang.org/go-fmt-your-code).)\n\n###
  Installing\n\nInstalling git-fmt is easiest done using either\n    [stack](https://github.com/commercialhaskell/stack)
  (recommended) or\n    [Cabal](https://github.com/haskell/cabal).\n\n**Using stack:**\n\n```bash\nstack
  install git-fmt\nexport PATH=$PATH:~/.local/bin\n```\n\n**Using Cabal:**\n\n```bash\ncabal-install
  git-fmt\nexport PATH=$PATH:~/.cabal/bin\n```\n\n### Usage\n\nThe git-fmt binary
  provides an interface for selecting files and piping them through external\n    pretty-printers.\nIt
  supports both prettifying the files immediately and performing dry-runs to see which
  files are\n    ugly.\nGiven that it uses the [omnifmt](https://github.com/hjwylde/omnifmt)
  library underneath, the syntax\n    and features are quite similar.\nThe main difference
  is that git-fmt restricts files to being tracked by the git repository and that\n
  \   by default it only operates on files in the index.\n\n**The basics:**\n\ngit-fmt
  operates only on tracked git files (thus it implicitly respects the '.gitignore'
  file).\nBy default it operates on files in the index (i.e., `--operate-on head`).\nIt
  is possible to operate on all tracked files (`--operate-on-tracked`) or on a specific
  reference\n    (`--operate-on REF`).\nThe `REF` argument is passed directly into
  `git diff REF --name-only`, so you can even play with\n    ranges such as `master...`.\n\nPassing
  arguments to git-fmt will narrow down the operation files.\nFor example, `git fmt
  --operate-on-tracked src/` will format all tracked files under 'src/' and\n    `git
  fmt --operate-on head src/` will format all files in the index under 'src/'.\n\n**Modes:**\n\ngit-fmt
  can run in three different modes, *normal*, *dry-run* and *diff*.\n\nThe normal
  and dry-run modes act the same as omnifmt.\nDiff mode however uses `git diff` as
  opposed to `diff`.\nBy default the diff isn't paged, so to get output similar to
  `git diff` or `git log` it is\n    recommended to use `[-p|--paginate]`, e.g., `git
  -p fmt -m diff`.\n\n**NB:** it isn't possible to pipe the diff into `git apply`
  due to the destination file path\n    header.\n\n#### Configuration\n\ngit-fmt delegates
  to omnifmt for configuration, see\n    [here](https://github.com/hjwylde/omnifmt#configuration)
  for documentation and examples.\n\n### Auto-completion\n\nAdd the following (depending
  on your shell) to include support for auto-completion.\n\n**Bash:**\n\n```bash\nsource
  <(git-fmt --bash-completion-script `which git-fmt`)\n```\n\n**zsh:**\n\n```zsh\nautoload
  -Uz bashcompinit && bashcompinit\nsource <(git-fmt --bash-completion-script `which
  git-fmt`)\n```\n\n**NB:** auto-completion doesn't work well with git's command macro.
  I.e., `git fmt <TAB>` won't\n    work, but `git-fmt <TAB>` will. [#71](https://github.com/hjwylde/git-fmt/issues/71)
  will remain\n    open until this is addressed.\n\n"
license-name: BSD-3-Clause
