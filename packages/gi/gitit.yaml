homepage: http://gitit.net
changelog-type: text
hash: fb9998759e9c1f70204fc233685fe67958a2f02ead76b008ce245c69ccf6507c
test-bench-deps: {}
maintainer: jgm@berkeley.edu
synopsis: Wiki using happstack, git or darcs, and pandoc.
changelog: ! "Version 0.12.3 released 09 Oct 2018\n\n  * Change hk-pyg.css to highlighting.css
  with new CSS for pandoc 2\n    and skylighting 0.7.4. NOTE:  You must change your
  existing\n    custom.css to refer to highlighting.css instead of\n    hk-pyg.css,
  or highlighted code will not display properly.\n  * Ensure that the proper extensions
  are used for each format.\n  * Add Ext_emoji to readerExtensions (#616).\n  * Add
  Paths_gitit to other-modules to avoid warning.\n  * screen.css: remove special padding
  and border and color for code.\n    This interferes with pandoc's new highlighting.\n
  \ * Fixed static in gitignore\n  * Update stack.yaml, use latest lts-12.\n  * Updates
  for pandoc 2.x (Myron Wu).\n  * Require skylighting >= 0.7.4.\n  * Remove jsMath
  as it was dropped from pandoc >= 2 (#617, Myron Wu).\n  * Add Ext_emoji to readerExtensions
  (#616, Conal Elliott).\n  * Changes to use recent versions of dependencies.\n    Especially
  feed 1.0, which uses a different xml type\n    and requires a new dependency on
  xml-conduit to render it.\n  * Remove support for ghc versions < 8 (Myron Wu).\n
  \ * Bump hoauth2 to 1.3.0 && < 1.6 to catch up with nix and other\n    curated package
  sets (Myron Wu).\n  * Updated mathjax cdn to cloudflare.\n  * Redirect to requested
  wiki page after github oauth callback (Myron Wu).\n  * Use skylighting instead of
  deprecated highlighting-kate.\n\nVersion 0.12.2.1 released 14 Feb 2017\n\n  * Bump
  version bounds for time, pandoc, blaze-html, aeson.\n  * Added MTable plugin (Simon
  Heath).\n    Adds simple but easy-to-use variable-width table syntax.\n  * Fixed
  Subst plugin (Simon Heath, #548).\n  * Fixed Dot plugin (Simon Heath, #568).\n\nVersion
  0.12.2 released 09 Nov 2016\n\n  * Allow pandoc 1.18, tagsoup 0.14, aeson, 1.x.\n\nVersion
  0.12.1.1 released 22 Mar 2016\n\n  * Allow pandoc 1.17 (Phil Ruffwind).\n  * Allow
  aeson 0.11.\n\nVersion 0.12.1 released 17 Feb 2016\n\n  * Use fmap instead of <$>
  so ghc 7.8 won't fail.\n  * Allow latest hoauth2\n  * Fix typo (Chas Leichner).\n
  \ * Allow compiling with pandoc 1.16.x.\n  * Add page for login failure when authorization
  is required for reading\n    (Phil Ruffwind).  When authorization is required to
  read the wiki, the\n    error message from a failed GitHub login cannot be displayed.
  \ Instead it\n    will redirect to GitHub for another OAuth authentication, which
  can lead to\n    a redirect loop.  To avoid this, the user is now redirected to
  a special\n    landing page to display the login failure.  Note: no changes are
  made for\n    the case where authorization is not required to read the wiki.\n  *
  Improve error message of GitHub membership check (Phil Ruffwind).\n  * Add delete-summary
  config variable (Phil Ruffwind).\n    Used to change the commit message when a page
  is deleted.\n  * Use primary GitHub email rather than just the first (Phil Ruffwind).\n
  \   The order in which user emails are returned via the GitHub API is not\n    specified,
  so the first may not be the one that the user prefers,\n    i.e. the so-called \"primary\"
  email.  To fix this problem, we eliminate\n    all emails except for the one marked
  as \"primary\".\n  * Make default theme responsive (Lincoln Mullen, #450).\n    This
  commit makes the default theme responsive. For smaller browsers, it\n    will move
  the sidebar below the main content div and make the sidebar\n    three columns.
  On phones, it will also collapse the sidebar into a\n    single column.\n  * README:
  Tell how to enable rtsopts for disabling GC (norpol).\n\nVersion 0.12.0.1 released
  24 Aug 2015\n\n  * Revert change of curly to straight quote for starting\n    User's
  Guide page (Wouter Oosterveld).\n  * stack.yaml: removed pandoc flag setting.\n\nVersion
  0.12 released 19 Aug 2015\n\n  * Export all modules.\n  * Make executable builds
  depend on the library in cabal file.\n  * Moved library files to src directory.\n
  \ * Added stack.yaml.\n  * Updated README with stack install instructions.\n\nVersion
  0.11.1.1 released 14 Aug 2015\n\n  * Fixed Network.Gitit.Initialize so it compiles
  with older pandoc (#506).\n  * Removed extra import of liftIO in Dot.hs plugin.\n\nVersion
  0.11.1 released 23 Jul 2015\n\n  * Allow `commonmark` as a page type.\n  * Handle
  CommonMark page type on initialization.\n\nVersion 0.11 released 02 Jun 2015\n\n
  \ * Allow page extensions to be configurable (not just `.page`)\n    (Caleb McDaniel).\n
  \   - Added `page-extension` option in config file (Caleb McDaniel).\n    - Added
  new type for `defaultExtension`\n    - Changed `isPageFile` to get extension from
  config\n    - New function `isNotDiscussPageFile`\n    - `pathForPage` must be passed
  extension as String\n    - `isPageFile` now returns GititServerPart Bool instead
  of just Bool.\n  * Reverted some changes to Plugins that caused excessive memory
  use.\n  * Allow pandoc 1.15.\n  * Added missing `<br>` tag in form on registration
  page (Vaughn Iverson).\n  * Show page diffs in feed (Imuli).\n  * Display commit
  messages in feed entry titles (Imuli).\n  * Fix preview button for modern jQuery
  (Imuli).\n  * Feed titles reflect site and page names (Imuli).\n  * Present feed
  in canonical order (recent first, Imuli).\n  * https support for base-url config
  option (Imuli).\n\nVersion 0.10.7 released 02 Jun 2015\n\n  * Fixes to allow building
  with pandoc 1.14. `CommonMark` added\n    as a constructor of `PageType`.  CommonMark
  can now be used as\n    a page format and is also available for page export.\n  *
  Plugins:  added some recommended option flags.\n  * Allow `---` as well as `...`
  to end metadata (#493).\n  * README: changed dead links (Rick Hanson).\n\nVersion
  0.10.6.3 released 08 May 2015\n\n  * README:  use shortcut style markdown links.\n
  \ * Fixed profiling options.\n  * Added .travis.yml.\n  * Allow both time >= 1.5.0.0
  and time < 1.5.0.0 with old-locale\n    (Michal Antkiewicz)\n\nVersion 0.10.6.2
  released 02 April 2015\n\n  * Bumped upper version bounds.\n  * Fix typos in README.markdown
  (Igor Vuk).\n  * Update bug tracker link (Waldir Pimenta).\n\nVersion 0.10.6.1 released
  28 October 2014\n\n  * Added Network.Gitit.Compat.Except to cabal module list.\n\nVersion
  0.10.6 released 28 October 2014\n\n  * Escape HTML characters in user name when
  showing it on a web page.\n    This addresses a security flaw in previous versions,
  pointed out\n    by Davy Stoffel.  A fake password reset email could be provided\n
  \   to users, with the link:\n\n        http://gitit.net/_doResetPassword?reset_code=azeaze&username=\n
  \       davy%3Cscript%3Ealert%281%29%3C/script%3E\n\n    If the person clicked the
  link, the unknown username would be\n    displayed (unescaped), and the javascript
  would run.\n    This fix addresses the flaw, not by preventing the funny user name,\n
  \   but by ensuring that the HTML tags are escaped when the user name\n    is shown
  on the page.\n\n  * Network.Gitit.Initialize: Allow mediawiki for default pages.\n\n
  \ * Enable readerParseRaw for all formats.\n    This will enable things like script
  and iframe tags to get\n    parsed from HTML sources, and unrecognized latex tags
  from LaTeX.\n\n  * Refined github login (Freiric Barral).\n\n  * Include jquery
  sources in sdist tarballs (Anthony Towns).\n\n  * Add support for `mediawiki` as
  a page format (Raymond Gauthier).\n\nVersion 0.10.5.1 released 21 September 2014\n\n
  \ * Added markup help for org mode.  Closes #449.\n\n  * Utils.parsePageType:  Added
  case for \"org\".\n\n  * Allow newer versions of dependencies.\n\nVersion 0.10.5
  released 23 August 2014\n\n  * Added github login option (Freiric Barral).\n\n  *
  Change default math display to mathjax.\n\n  * Relaxed package bounds, fixed compiler
  warnings.\n    Added Network.Gitit.Compat.Except module for compatibility\n    with
  earlier and later mtl versions.\n\n  * Added network-uri flag to accommodate network-uri/network
  split.\n\n  * Fixed failure when loading the Subst plugin (Glenn Searby).\n\n  *
  Added Makefile, for use in installing on server.\n\n  * Include takeBaseName in
  System.FilePath import (Caleb McDaniel).\n\n  * Update README.markdown on Apache
  installation (Peter Gallagher).\n\n  * Add full versions of minified JavaScript
  (#400) (Peter Gallagher).\n\n  * Enable highlighting of patterns that start or end
  with punctuation\n    (Caleb McDaniel).\n\n  * Moved oauth secret to separate config
  file (Freiric Barral).\n\n  * Corrected MathJax CDN URL (Maciek Makowski).\n\nVersion
  0.10.4 released 30 Jun 2014\n\n*   Updated package bounds for happstack (#382),
  pandoc, blaze-html,\n    network.\n\n*   Display EPS as image, not code.\n\n*   Fixed
  recent activity page for binary files (Sergey Koposov).\n\n*   Use normal spaces
  instead of nbsp in activity page (Sergey Koposov).\n\n*   Display a delete link
  next to uploads in file list (rekado).\n\n*   Change _search to use HTTP GET, so
  searches can be linked\n    and refreshed (Joe Hillenbrand).\n\n*   Document mod_proxy_html
  setting in README.  Added a mod_proxy_html\n    configuration directive to insert
  a DOCTYPE string (Johann Visagie).\n\n*   Added new template variables `isdiscusspage`,
  `isarticleUrl`,\n    `discussionUrl`.  This makes it possible to treat discussion
  pages\n    specially in templates, and insert appropriate links (Shane O'Brien).\n\n*
  \  Added template variables `articlename`, `discussionname`,\n    `isarticlepage`
  (Shane O'Brien).\n\n*   Added redirects (#233).  You can now create a redirect page
  by adding\n    a `redirect` field to the metadata of a page (Shane O'Brien).\n\n
  \   - When a user visits a redirect page, they are redirected to the\n      destination
  page.\n    - At the destination page, a message is displayed telling the user\n
  \     that they have been redirected from the source page. A link is\n      provided
  back to the source page, with a parameter to disable the\n      redirect (so that
  it can be edited).\n    - Gitit will detects circular redirects and explain to the
  user\n      what is going on in such cases.\n\n*   Added \"search for pages containing...\"
  option to `createPage`.\n    Changed \"page not found\" page to give the option
  of searching for\n    the page name or creating a page with that name (Shane O'Brien).\n\n*
  \  Set `pgTitle` in `showDiff` (Shane O'Brien).\n\n*   Made the default \"since\"
  for the activity page configurable\n    (Shane O'Brien).\n\n*   Only set the `tabs`
  template variable if there are tabs (Shane O'Brien).\n\n*   Removed access question
  from password reset form. It's only\n    needed for the register form (Shane O'Brien).\n\n*
  \  Added `for` attribute to all labels on forms (Shane O'Brien).\n\n*   Updated
  `pageToString` to use new metadata format (Shane O'Brien).\n\n*   Handlers: Fixed
  duplicate function defn for `fileAnchor`.\n\n*   Added `Org` and `BocBook` to `PageType`
  (API change).  Pages\n    may now be written in Ord mode or DocBook syntax.\n\n*
  \  Allow multiple categories, separated by commas,\n    in a `_category` URL (Caleb
  McDaniel).  The pages in all listed\n    categories will be returned.\n\n*   Added
  filter links for `_category` pages (Cabel McDaniel).\n\n*   Fixed image exports
  in Docx, RTF, slides, PDF (#399, #353).\n\n*   Restored inline syntax highlighting.\n\n*
  \  Fixed highlighting in exports (#356).\n\n*   Added `ICML` and `beamer` as export
  formats (#391).\n\n*   Added github-style backgrounds to code blocks (Joe Hillenbrand).\n\n*
  \  Lighter heading border (like wikimedia) (Joe Hillenbrand).\n\n*   Fixed links
  on activity page (Shane O'Brien).\n\n*   Added markup help for Textile, Org, DocBook
  (#434).\n\n*   Modified plugins/Subst.hs to work with latest pandoc (Tianyi Cui).\n\n*
  \  Fixed wiki links when `base-url` is empty and `absolute-urls` yes\n    (Tianyi
  Cui).\n\n*   README:  document that changes to templates require a restart (Raphael).\n\n\nVersion
  0.10.3.1 released 19 Mar 2013\n\n*   Fixed filename encoding problem affecting caching,\n
  \   for gitit compiled with GHC 7.4 or later.\n\n*   Fixed padding on some buttons
  (akerbos).\n\n*   Specify correct format in header for initial pages (benmachine).\n\nVersion
  0.10.3 released 09 Mar 2013\n\n*   Allow latest versions of pandoc, blaze-html,
  HStringTemplate.\n\n*   Fixed duplicate ids in user box.\n\n*   Added `mathjax-script`
  option, specifies the mathjax script to\n    use. (Dmitry Gerasimov.)\n\n*   Set
  focus on editedText on page load.  (Mathieu Larose.)\n\n*   Added `address` config
  option.  (Matieu Larose.)\n\nVersion 0.10.2 released 09 Feb 2013\n\n*   Updated
  to work with pandoc 1.10.\n\n*   Fixed path for MathMLInHTML.js script.  Closes
  #345.\n    Thanks to tstgruby.\n\n*   Updated interwiki plugin (gwern).\n\n*   Made
  it possible to export pages with images stored in the\n    repository itself (as
  opposed to the static directory).  Thanks\n    to Claudio Bley for the patch.\n\nVersion
  0.10.1.2 released 11 Jan 2013\n\n*   Fixed regression in option parsing.  An earlier
  patch\n    caused the '-f' option not to work.  Closes #336.\n\nVersion 0.10.1.1
  released 01 Jan 2013\n\n*   Allow compilation with directory < 1.2.\n\nVersion 0.10.1
  released 31 Dec 2012\n\n*   Fixed duplicate dropExtension on categoryPage.  (atsuo
  yamada)\n    This created problems with categories containing periods.\n\n*   Fixed
  duplicate unescaping of HTML entities. (atsuo yamada)\n\n*   Supply $revision$ at
  _diff if \"Changes from beginning to...\"\n    (atsuo yamada)\n\n*   MathJax rendering
  is now working in edit preview mode\n    (Dmitry Gerasimov).\n\n*   Upgrade directory
  package dependency to 1.2, and\n    fix compilation issue with GHC 7.6.1 (Bin Jin).\n\n*
  \  Allow metadata keys to include digits, _, -.  Closes #328.\n\n*   Don't read
  config for --help or --version (Ben Millwood).\n    Also involves a refactor of
  options into those that make the program\n    quit immediately, and those that just
  alter the configuration.\n\n*   Updated to use filestore 0.6 (new diff API).\n    Thanks
  to markwright for partial patch.\n\n*   Include format metadata in default installed
  pages.\n    This allows them to continue working when the user changes the\n    default
  page format.  Closes #329.\n\n*   Added explicit path to Gitit User's Guide in default
  front page.\n\n*   Fix Gitit User's Guide link on front page.\n    Previously it
  was broken due to \"smart punctuation.\"\n\n*   Fixed validation messages.  Switched
  from using lookRead \"messages\"\n    to using looks \"message\" for messages.  Closes
  #294.\n\nVersion 0.10.0.2 released 02 Nov 2012\n\n*   Raised version bounds for
  dependencies.\n\n*   Updated post-update script to use new forms of git commands.\n
  \   Closes #317.\n\n*   Fixed withTempDir so it returns to old directory.\n    Closes
  #303.  This is a slightly different solution than the one\n    proposed by tstgruby,
  but it has the advantage that only withTempDir\n    itself needs to be changed.\n\n*
  \  Added nginx example for proxy setup (README) (Andre Kelpe).\n\nVersion 0.10.0.1
  released 07 Jun 2012\n\n*   Fixed double-encoding bug for unicode page names\n    (Alexander
  Vershilov).\n\n*   Require happstack-server >= 7.\n\nVersion 0.10 released 30 May
  2012\n\n*   Changed 'readFileUTF8' so it doesn't encode filename on ghc 7.4.\n\n*
  \  Upgraded for compatibility with blaze-html 0.5.  Closes #299.\n\n*   Improved
  categories. Files are now read strictly to avoid a 'too\n    many open files' error.
  'Page' now exports 'readCategories' instead of\n    'extractCategories'.\n\n*   Require
  filestore 0.5.  This brings in (a) correct handling\n    of unicode paths when compiled
  under GHC 7.4, and (b) a 'limit'\n    parameter for 'history'. The limit parameter
  is essential when\n    gitit is used with very large repositories; otherwise history\n
  \   commands would have to parse the entire log.  Handler functions\n    that use
  'history' have been updated to use the optional\n    'limit' parameter.\n\n*   Atom
  feeds are now limited to 200 entries, to prevent server\n    overload.\n\n*   Indicate
  size of default logo picture in README. Closes #291.\n\n*   Added a README section
  on restricting access.  Closes #292.\n\nVersion 0.9.0.1 released 15 Feb 2012\n\n*
  \  Fixed bug in fromEntities that caused text to be lost in the page\n    source
  after semicolons.  Thanks to Perry Wagle for reporting the bug.\n\n*   Updated code
  to run on happstack 7.\n\n*   Removed dependency on happstack-util; depend on base64-bytestring\n
  \   instead.\n\n*   Updated gitit.cabal to include footnotes.js (Ben Sinclair).\n\nVersion
  0.9 released 29 Feb 2012\n\n*   Gitit now uses the latest pandoc (1.9.x) and happstack-server
  (6.6.x),\n    and compiles on ghc 7.4.1.\n\n*   Added Docx, AsciiDoc, and DZSlides
  as export formats.\n\n*   HTML slide show exports are now \"self-contained\":  they
  embed all\n    required js, css, and images, so they can be used offline.\n\n*   Allow
  spaces in usernames (Juraj Hercek).\n\n*   Improve PDF/RTF exports containing images
  in the wiki.\n    Wikidata paths are translated to absolute ones, so pandoc/pdflatex\n
  \   can find them (Juraj Hercek).\n\n*   Protect against XSS in slide show exports.
  \ Previous versions\n    of gitit sanitized wikipages, but not HTML slide shows.\n\n*
  \  Table of contents is now in a div with ID `TOC`, so it can\n    be styled.\n\n*
  \  Removed letter and word spacing from print.css.\n\n*   Added s5 directory to
  static.  This is needed by pandoc 1.9.\n\n*   Updated Interwiki plugin (gwern).\n\n*
  \  Added `fromEntities` to `Types`, since `decodeCharacterReferences`\n    is no
  longer exported from Pandoc.  Added dependency on tagsoup.\n\n*   Provided `FromReqURI`
  instance for `[String]`, since\n    this is not automatic with recent happstack.\n\nVersion
  0.8.1 released 02 Sep 2011\n\n*   Support mathjax as a math option.\n    Added MathJax
  as MathMethod, and mathjax as an option in\n    the 'math' config field.  Resolves
  GoogleCode 122.\n\n*   Added xss-sanitize configuaration option.\n    Setting it
  to 'no' turns off sanitization, enabling\n    file:// URLs and other things that
  get filtered out\n    by xss-sanitize.\n\n*   Listen interface explanation on help
  file could be more clear (#266)\n    (andyring)\n\n*   Add the new configuration
  option 'absolute-urls'.\n    When turned on, this makes wikilinks absolute w.r.t.
  the base-url.\n    By default, they are relative.  So, for example, in a wiki served\n
  \   at the path 'wiki', on a page Sub/Page, the wikilink '[Cactus]()'\n    will
  produce a link to '/wiki/Cactus' if absolute-urls is on,\n    and otherwise the
  relative link 'Cactus'.  Patch due to lemmih.\n\n*   Change default listen address
  to 0.0.0.0.\n\n*   Serve svg file as image, not source code!\n\n*   Page history:
  \ use 'limit' instead of restricting to past year.\n    limit defaults to 100.  If
  100 are displayed, you'll get a\n    \"Show more...\" link that will increase the
  limit.\n    Also fixed bug that caused a 404 when no history was returned.\n\n*
  \  Require pandoc >= 1.8.2.\n\n*   Allow build with happstack-server 6.2.\n\n*   Updated
  for use with xss-sanitize 0.3, which uses Text.\n    New dependency on text.\n\nVersion
  0.8.0.1 released 07 Jun 2011\n\n* Fixed file upload problem with recent versions
  of directory\n  package. (Thanks to Oliver Braun.)\n\n* Relaxed some version upper
  bounds.\n\nVersion 0.8 released 13 May 2011\n\n* Uses happstack 6.\n\n* Added textile
  and org export formats, textile page format.\n\n* Added support for RPXNow authentication,
  based on a patch from\n  Pasqualino Titto Assini.\n\n* Added `authentication-required`
  field in config.\n\n    * If set to 'modify', authentication is required to modify
  the wiki.\n    * If set to 'read', atuhentication is required to view the wiki.\n
  \   * If set to 'none', authentication is never required, and pages can\n      be
  edited anonymously.\n\n    API changes:\n\n    * currentUser moved to Authentication
  module\n    * requireAuthentication added to Config\n    * Added AuthenticationLevel
  type\n    * requireUser renamed authenticate, parameter for AuthenticationLevel\n
  \     added; requireUserThat renamed authenticateUserThat\n\n* MathML and jsMath
  now work in the preview pane (Sean Seefried).\n\n* Use footnotes.js for fancy footnote
  styling (gwern).\n\n* Added a `--listen` parameter to specify the listen device\n
  \ (Timo B. Hübel).\n\n* Removed withInput.\n\n* Replaced fileContents with filePath
  in Params.\n\n* Fixed bug in uploadForm.js which caused a prefix to be added in
  the\n  default wikiname.\n\n\nVersion 0.7.3.12 released 01 Feb 2011\n\n* Use pandoc
  1.8.\n\n* New export formats: textile, org.\n\n* New page form: textile.\n\nVersion
  0.7.3.11 released 28 Jan 2011\n\n* Allow time 1.2.\n\nVersion 0.7.3.10 released
  26 Jan 2011\n\n* Updated for filestore-0.4.0.2.  Gitit should now compile with ghc
  7.\n  Note:  It may be necessary to supply the --disable-library-for-ghci\n  flag
  to 'cabal install highlighting-kate'.\n\nVersion 0.7.3.9 released 25 Jan 2011\n\n*
  Removed dependency on cautious-file.\n  It no longer seems to be actively maintained,
  and the current\n  configuration does not compile on windows.\n\n* Removed dependency
  on datetime package.\n  It is no longer maintained.\n  Everything can be done just
  as well with the time package.\n\n* Depend on filestore >= 0.4 (without datetime
  dependency).\n\n* Bump version bounds on hslogger, network and HTTP.\n\n* Support
  for GHC 7.0 in Plugins (thanks to Max Bollingbroke).\n\n* Use xss-sanitize for sanitizing
  HTML.\n  Previously pandoc's sanitization was used, but this will be\n  removed
  in the next pandoc release. xss-sanitize is a more complete\n  solution, and also
  prevents people from messing up layout by inserting\n  unbalanced </div>.\n\n* Updated
  Feed module to make it decouplable from gitit.\n\n* jQuery.load wasn't working on
  Safari. Use jQuery.post instead.\n  Also, the convert function was not always in
  scope. (It is only in\n  scope when MathML is enabled?) We check if it is defined
  before\n  calling it.  (Thanks to Sean Seefried.)\n\n* Export Page module.\n\n*
  Templates are in data directory\n\n* Fixed bug in Subst plugin (Lars Petersen).\n
  \ Subst plugin could not deal with non-existing pages, resulting\n  in an server
  error when trying to substitute with an absent file.\n  This patch now creates a
  link to the page in order to create it.\n\n* Added alt attribute to logo.\n\nVersion
  0.7.3.8 released 24 July 2010\n\n* Fixed MathML in Slidy and S5 exports.\n\n* Use
  languagesByFilename instead of languagesByExtension in isSource.\n\nVersion 0.7.3.7
  released 24 July 2010\n\n* Depend on pandoc >= 1.6, highlighting-kate >= 0.2.7.1\n\n*
  Added epub and slidy export formats.\n\n* Require happstack >= 0.5.\n\n* Added google
  math option (uses google charts api).\n  Slightly modified from a patch by lpeterse.\n\n*
  Made WebArchiver plugin more parallel (gwern).\n\n* Fixed Dot plugin to work with
  GHC 6.12.\n  We were having string encoding issues reading the output\n  of dot
  with readProcess. Solution is to pass dot an output\n  filename so we don't have
  to read its output.\n\nVersion 0.7.3.6 released 05 May 2010\n\n* Fixed ODT/PDF export
  for files in subdirectories.  Resolves Issue #81.\n\n* Fix image URLs before calling
  the ODT or PDF processors\n\n* Added plain text export format.\n\n* Raised upper
  bound for datetime, parsec, and happstack dependencies.\n\n* Fix wikilinks to they
  don't get a leading slash.\n  This reverts a bug introduced by 2128afb070b7, which
  added leading\n  slashes to wikilinks, breaking them for people using gitit as a\n
  \ library on a path other than /.\n\nVersion 0.7.3.5 released 21 Mar 2010\n\n* Returned
  to using pandoc's MathML writer option.\n  This is fixed in pandoc 1.5.0.1. Depend
  on pandoc >= 1.5.0.1.\n\nVersion 0.7.3.4 released 21 Mar 2010\n\n* Use custom readFileUTF8
  (exported in Network.Gitit.Util) instead of\n  broken System.IO.UTF8. This way we
  have a uniform solution for GHC\n  6.10 and 6.12, and don't have to use CPP tricks.
  This change fixes\n  categories on GHC 6.12. Resolves Issue #98.\n\nVersion 0.7.3.3
  released 21 Mar 2010\n\n* Reverted to handling math in MathML mode in the old way,
  using\n  a transform, rather than relying on pandoc's MathML writer option.\n  The
  latter was causing amazing CPU and memory usage, for reasons\n  I don't yet understand.
  \ This should fix the problem for now.\n\n* Fixed caching for unicode page names.\n\n*
  Added max-page-size config option. Thanks to Jinjing Wang for the patch.\n\n* Prevented
  _expire/ from failing if the page is not cached.\n\n* Fixed URL encoding for pages.
  (Note: Don't use + for spaces;\n  that breaks the Ctrl-R cache expiration.)\n\nVersion
  0.7.3.2 released 20 Mar 2010\n\n* Fixed editing of pages when max-upload-size=0.\n
  \ max-upload-size should not double as max-page-size.\n  Resolves Issue #96.\n\nVersion
  0.7.3.1 released 20 Mar 2010\n\n* Changed \"In\" to \"in\" in MathMLinJS.js link.\n\nVersion
  0.7.3 released 20 Mar 2010\n\n* Added PDF export option and pdf-export config field.\n
  \ (Based on a patch by gwern.)\n\n* Added markdown export.\n\n* Use pandoc's new
  MathML math mode for more efficient\n  MathML.\n\n* Improved multi-wiki example
  code in haddocks.\n\n* Added session-timeout config setting.\n\n* Config module:
  \ Added readSize (recognizing K,M,G suffix).\n  Previously readNumber always recognized
  K,M,G suffixes,\n  but these only make sense in some contexts (not e.g. for\n  times).\n\n*
  Added Subst plugin (thanks to gwern).\n\n* Added notes on PDF caching and idle.\n\n*
  Fixed table of contents in wiki pages (resolving Issue #91).\n\n* Added pandoc-user-data
  config option, allowing the user\n  to specify a directory with e.g. templates that
  override\n  the defaults used for exported pages.\n\n* Fix filesToClean GHC panic
  when loading plugins on GHC HEAD\n\n* Fixed problem with doubled // in updir links.\n
  \ Resolves Issue #88.\n\n* Updated interwiki plugin.\n\n* Fixed caching for feeds.
  Thanks to brian.sniffen for pointing\n  out the need to normalize the time diff.
  Resolves Issue #87.\n\n* Improved Feed module (gwern).\n\n* Use line anchors from
  highlighting-source, so that you can link\n  directly to a particular line in a
  source file.\n\n* Disable upload functionality if maxUploadSize is 0.\n\n* Exported
  queryGititState, updateGititState, Network.Gitit.Layout.\n  Exported filledPageTemplate.
  (Thanks to tphyahoo.)\n  Split off and expose createDefaultPages.\n  Exposed compilePageTemplate.\n\n*
  Use charset=utf-8 on output from Layout.\n\n* Use isUnescapedInURI with escapeURIString
  rather than isAllowedInURI.\n  The latter does not escape % signs.\n\nVersion 0.7.2
  released 02 Jan 2010\n\n* Now compiles with GHC 6.12.\n\nVersion 0.7.1 released
  02 Jan 2010\n\n* Updated exports to work with pandoc 1.4.\n\n* Began updating to
  work with GHC 6.12. (Still untested; there may\n  be further issues involving filestore.)\n\nVersion
  0.7 released 20 Dec 2009\n\n* Updated cabal file to allow happstack 0.4.\n\n* Added
  support for the new mercurial filestore backend.\n  (Depending on filestore >= 0.3.4.)\n\n*
  Depend on xml >= 1.3.5.  This fixes a bug in the display of\n  mathml.  Previously
  the self-closed tags in matrices with empty\n  cells confused browsers and caused
  them to construct the\n  DOM incorrectly. The problem is fixed by using xml's new\n
  \ ppcElement function to render the MathML without self-closed tags.\n\n* Depend
  on pandoc >= 1.3.\n\n* Properly handle UTF-8 in config files.\n\n* Moved option
  parsing code from Config module to main program.\n  The Config module now exports
  getConfigFromFile instead of\n  getConfigFromOpts. This should be more useful for
  those using gitit as\n  a library.\n\n* Use wikiTitle config field in default HTML
  title.\n\n* Improved search results:\n  + Highlight search terms in search results.\n
  \   Partially resolves Issue #76.\n  + Made search results message uniform when
  no results.\n  + Search: don't match page name against empty patterns.\n  + Allow
  search matches on subdirectory part of page name.\n  + Search:  catch error status
  from filestore search.\n    Filestore <= 0.3.3 does not properly handle the error
  status\n    returned by later versions of 'git grep' when no match is found.\n    The
  problem has been fixed in darcs filestore.\n\n* CSS tweaks:\n  + Removed base-min.css,
  folded necessary styles into screen.css.\n  + Removed 'text-align: left' for th
  from CSS reset.\n\n* Feed improvements:\n  + Modified feed handling so that feeds
  validate.\n  + Perform proper escaping in Feed.hs (thanks to gwern).\n  + Don't
  reveal author email in feeds.\n  + Sitewide feed is /_feed/ (with trailing slash).\n
  \ + Add \"http://\" to base-url config option if needed.\n\n* Use + for spaces in
  URLs linking to wiki pages and folders.\n\n* Updated plugins:\n  + Updated Interwiki
  plugin (gwern).\n  + Modified WebArchiver plugin to make Alexa requests (gwern).\n\nVersion
  0.6.6 released 06 Nov 2009\n\n* Require filestore >= 0.3.3, which closes a security\n
  \ vulnerability.\n\n* Don't allow web file uploads to the static or templates directory,\n
  \ even if these are subdirectories of the repository directory.\n  We don't want
  users uploading new CSS, javascript, or templates\n  that might break the site.\n\n*
  Renamed gitit-dog.png -> logo.png in data/static/img.\n  This way the logo will
  show up even without a local img directory.\n  Thanks to Thomas Hartmann for the
  patch.\n\n* Return 404 when page not found.  Thanks to Richard Fergie.\n\n* Improved
  layout of Export button.\n\n* Added links for atom feeds to sitenav.st and pagetools.st,
  to\n  make the feeds more discoverable.\n\n* Minor code safety improvements.\n\n*
  Check for commit messages consisting of whitespace.\n  Commit messages consisting
  only of whitespace characters are\n  rejected by Git as empty. Gitit should behave
  similarly.\n\n* Allow gitit to start up if custom template directory not found.\n
  \ Thanks to Thomas Hartmann.\n\n* Fixed incorrect usage of nullGroup (a debugging
  function).  Thanks\n  to Thomas Hartmann.\n\nVersion 0.6.5 released 06 Oct 2009\n\n*
  Added metadata to Page and Context, provided askMeta for plugins.\n  This patch
  gives plugins access to all of the key/value pairs\n  in the page metadata block.
  \ Thanks to Dan Cook.\n\n* Added PigLatin plugin to demonstrate use of askMeta.\n\n*
  Display informative message on authentication failure.\n\n* Fixed library stanza
  in cabal file so plugins are properly enabled.\n\nVersion 0.6.4 released 28 Sep
  2009\n\n* Fixed preview javascript so that tex math works properly in\n  preview.\n\nVersion
  0.6.3 released 27 Sep 2009\n\n* Fixed MathML conversion so it doesn't happen when
  exporting to\n  non-HTML output formats.\n\n* Fixed shadowing on page templates:
  previously page.st was always\n  taken from the defaults, even if a modified version
  existed\n  in templates/.\n\n* Modified YUI CSS reset so that ordered list enumerators
  can be\n  styled properly.\n\n* Modified showPage to work with both POST and GET
  requests.\n\nVersion 0.6.2 released 25 Aug 2009\n\n* Use \"reference obfuscation\"
  for emails, rather than javascript\n  obfuscation, which seems to interfere with
  preview.  Resolves\n  Issue #59.\n\nVersion 0.6.1 released 25 Aug 2009\n\nInstructions
  for upgrading from 0.5.3:\n\n- If you were using a Haskell configuration file, you
  will\n  need to create a new configuration file. 'gitit --print-default-config'\n
  \ will print a self-documenting default configuration file in the new\n  format,
  which you can modify.\n\n- If your wiki contains discuss pages of the form 'foo:discuss.page',\n
  \ rename them to '@foo.page'.\n\n- Delete template.html and the static directory
  so that these will\n  be replaced by the newest versions when you run gitit. If
  you have\n  customized these, you should back them up first, then merge your\n  changes
  into the new versions after they are created. (Note that\n  template.html will be
  replaced by a templates/ directory.)\n\nSummary of main changes:\n\n* Added support
  for plugins -- dynamically loaded Haskell programs that\n  transform pages. See
  the haddock documentation for Gitit.Interface for\n  plugin documentation. The plugins
  directory contains several sample\n  plugins.\n\n* Gitit's configuration file is
  now a text file with key-value pairs,\n  rather than a Haskell file.  The default
  configuration file\n  (which can be printed using `gitit --print-default-config`\n
  \ contains comments that document all of the options.\n\n* Pages may now be written
  in (limited dialects of) LaTeX or HTML,\n  as well as markdown and reStructuredText.
  \ The default format\n  is determined by a configuration option, but can be overridden\n
  \ on a per-page basis using metadata (see below).  The default\n  Front Page and
  Help page are created in the default format specified\n  by the configuration file.
  In addition, syntax help is now displayed\n  to the left of the editing box when
  a page is being edited.\n\n* Pages may be written in literate Haskell, using either
  bird\n  style with markdown or reStructuredText, or LaTeX style with\n  LaTeX.  Literate
  Haskell can be made the default or specified on\n  a per-page basis.\n\n* Gitit
  now exports a library, Network.Gitit, that makes it easy for\n  any happstack application
  to embed a gitit wiki.\n\n* Added optional atom feeds, for whole site (at /_feed)\n
  \ and for individual pages (at /_feed/path/to/page).\n  Feeds are cached with a
  configurable expiration time.\n\n* Completely new caching system.  Caching is turned
  off by default and\n  can be enabled by a configuration option.  Complete pages
  are cached\n  on disk and expired when pages are revised through the web interface.\n
  \ When pages are modified directly through a VCS, the cache must be\n  refreshed
  manually, either by pressing Ctrl-R while viewing a page,\n  or by sending an HTTP
  request to /_expire/path/to/page, or by using\n  the included program expireGititPath.
  The new system is much faster\n  than the old in-memory cache, because it avoids
  the considerable\n  overhead of filestore calls to get the current revision id.\n\n*
  To make whole-page caching possible, the user login/out box has been\n  made into
  an ajax request to /_user.  jQuery is now loaded on every\n  page.\n\n* Math is
  converted to MathML by default (using the texmath library),\n  and a javascript
  is linked in that renders it correctly in IE+mathplayer,\n  Firefox, and Opera.
  \ The 'math' configuration setting can alternatively\n  be set to 'jsMath' (to use
  jsMath javascript, which is more portable\n  but ugly and slower) or 'raw' (plain
  LaTeX code).\n\n* Routing changes for better handling of web spiders.  Instead of\n
  \ \"/foo?history\" we now have \"/_history/foo\"; instead of \"/foo?edit\"\n  we
  haev \"/_edit/foo\"; etc.  This makes it possible to exclude web\n  spiders from
  non-cached pages by excluding URLs that start with\n  '/_'.  A default robots.txt
  file is now provided.  Users need not\n  do anything special for this to be enabled.\n\n*
  The authentication system has been revised and made much more\n  flexible. In the
  configuration file, you can specify either\n  'form', 'http', or 'generic' as authentication-method.
  Form\n  authentication is the old form-based gitit authentication system. HTTP\n
  \ authentication presupposes that the wiki pages are locked down under\n  HTTP authentication;
  the gitit user will be set to the username used\n  for HTTP authentication. Generic
  authentication takes the username\n  from the REMOTE_USER request header. When gitit
  is being used as a\n  library, one can specify a custom withUser filter (which determines\n
  \ the logged in user and sets REMOTE_USER accordingly) and a custom\n  authHandler
  (including handlers for /_login, /_logout, and whatever\n  else is needed).\n\n*
  Security fix: Gitit did not verify that a change password request\n  is genuine
  when it receives the final POST. It has been changed to\n  re-verify the reset code,
  otherwise an attacker could simply steal\n  anyone's account by spoofing a POST
  request. (Thanks to Robin Green.)\n\n* template.html has now been replaced by a
  directory, templates/, with\n  separate templates for each component of a page.\n\n*
  Added /_reloadTemplates action that recompiles the templates. (By\n  default the
  templates are compiled only on startup.)\n\n* Gitit's form-based authentication
  now includes a \"password reset\"\n  email.  Slightly modified from a patch from
  Henry Laxen.\n\n* The naming scheme for discussion pages has changed: the discussion\n
  \ page for foo is now @foo, not foo:discuss. Reason: Windows, and\n  thus darcs,
  does not like colons in filenames.\n\n* Improved logging, with configurable verbosity.\n\n*
  Major code reorganization and cleanup.  Gitit has been moved under\n  the Network
  namespace. The old WebT handlers are replaced by new ones\n  in ServerPartT. 'handle'
  has been removed; instead, we use happstack's\n  routing combinators. Configuration
  and filestores are now passed\n  around in a reader monad, in WikiState. (This also
  allows different\n  wikis to have different configurations.) Most handlers have
  been\n  simplified so that they no longer require Page and Params arguments.\n  A
  new function, 'withInput', is used to avoid the need to pass Params\n  between handlers.\n\n*
  The static handler now \"falls back\" to the cabal data directory if the\n  requested
  file is not in \"static\" (or staticDir).  So the user need\n  no longer have a
  copy of the standard gitit CSS, javascript, and\n  image files in \"static\" (unless
  these are to be overridden). This\n  should make updates easier.  By default only
  'custom.css' and\n  'logo.png' are put in the user's static directory.\n\n* Similarly,
  the templates in \"templates\" \"fall back\" to defaults in\n  the cabal data directory.
  \ By default only 'footer.st' is put in\n  the user's static directory.\n\n* Gitit
  State now includes a renderPage function. This is more flexible\n  than storing
  a page template, since the user may want to use a custom\n  page rendering function,
  even one not based on string templates.\n\n* Added Network.Gitit.ContentTransformer
  module (thanks to Anton van\n  Straaten). The ContentTransformer module replaces
  Gitit.Convert. It\n  defines a number of single-purpose combinators that can be
  combined to\n  yield various kinds of content conversions. These are used to define\n
  \ showPage, preview, showHighlightedSource, and other handlers that used\n  to be
  defined in Gitit.hs.\n\n* Verify in delete POST requests that filetodelete parameter
  matches\n  page.\n\n* Fixed revert when called from diff pages. Revert now reverts
  to the\n  older of the two revisions being compared.\n\n* Revamped auto-merging:
  user must now verify an edited page after\n  a merge, even if there were no conflicts.\n\n*
  Fixed Content-Disposition header on export so that filenames have\n  proper extensions.\n\n*
  Updated for happstack-server-0.3.3.  Since this version of happstack\n  supports
  UTF-8, gitit's old manual decoding and encoding were removed.\n\n* Use fileServeStrict
  instead of fileServe.  Resolves Issue #57.\n\n* 'limit' is no longer used in search.
  \ The way it worked before was\n  confusing, since it limited total matches (usually
  to just a few files)\n  rather than limiting the number of matches in each file.\n\n*
  rdgreen's cautious-file library is now used to write the gitit-users\n  file. This
  makes it less likely that the file will be corrupted on\n  a power outage or hardware
  failure.\n\n* Redirects set properly after account creation.  If users go from\n
  \ the Login form to the Register form, they are no longer redirected\n  back to
  the Login form after creating an account.\n\n* indexPage now uses filestore's new
  'directory' function. It shows one\n  directory at a time. Subdirectories link to
  further index pages. This\n  improves on the old javascript folding interface, which
  did not preserve\n  state.  (Thanks to Thomas Hartman for suggestions.)\n\n* URLs
  of the form /a/b/ are now equivalent to /_index/a/b.\n\n* Improvements and bug fixes
  to deleting. Deleting a non-page now works.\n  You get a nice informative message
  if you try to delete a nonexistent\n  page or file.\n\n* Page names containing \"..\",
  \"?\", or \"*\", and '_' at beginning are\n  disallowed. Page names may now contain
  periods.\n\n* The \"Permanent link\" link has been removed. It relied on the sha1\n
  \ parameter always being set, but we've changed that for performance\n  reasons.\n\n*
  Gitit can now be proxied to a subdirectory path. Thanks to Henry Laxen\n  for the
  idea and patches. See README for instructions.\n\n* Performance improvements (mostly
  due to Gwern Branwen):  Pages can be\n  compressed (configurable); unneeded filestore
  calls removed; cache-control:\n  max-age used.\n\n* Moved sidebar to end of HTML
  to make things easier for screen readers.\n\n* Moved search box and go box to templates.\n\n*
  Yahoo YUI CSS framework is now used for better consistency across browsers.\n  CSS
  cleaned up.  Icons for page types removed.\n\n* Fixed handling of 'forUser' parameter
  in 'recent activity'.\n\n* Made default maxUploadSize 10 Mb.\n\n* Renamed AppState
  -> GititState.\n\nVersion 0.5.3 released 1 Feb 2009\n\n* Fixed bug which caused
  jsMath not to load.\n\nVersion 0.5.2 released 1 Feb 2009\n\n* Fixed cookie problem
  caused by empty value fields.\n\nVersion 0.5.1 released 1 Feb 2009\n\n* Major code
  reorganization, making gitit more modular.\n\n* Gitit can now optionally be built
  using Happstack instead of HAppS\n  (just use -fhappstack when cabal installing).\n\n*
  Fixed bug with directories that had the same names as pages.\n\n* Added code from
  HAppS-Extra to fix cookie parsing problems.\n\n* New command-line options for --port,
  --debug.\n\n* New debug feature prints the date, the raw request, and\n  the processed
  request data to standard output on each request.\n\n* Files with \".page\" extension
  can no longer be uploaded.\n\n* Apostrophes and quotation marks now allowed in page
  names.\n\n"
basic-deps:
  ConfigFile: ! '>=1 && <1.2'
  ghc: -any
  bytestring: -any
  gitit: -any
  happstack-server: ! '>=7.0 && <7.6'
  SHA: ! '>1 && <1.7'
  feed: ! '>=1.0 && <1.1'
  split: -any
  xml-conduit: ! '>=1.5 && <1.9'
  HStringTemplate: ! '>=0.6 && <0.9'
  base: ! '>=4.9 && <5'
  hoauth2: ! '>=1.3.0 && <1.8'
  time: ! '>=1.1 && <1.10'
  xhtml: -any
  base64-bytestring: ! '>=0.1 && <1.1'
  text: -any
  uuid: ! '>=1.3 && <1.4'
  json: ! '>=0.4 && <0.10'
  syb: -any
  url: ==2.1.*
  filepath: -any
  process: -any
  recaptcha: ! '>=0.1'
  network: ! '>=2.6'
  parsec: -any
  uri: ! '>=0.1 && <0.2'
  pandoc-types: ! '>=1.17.4.2 && <1.18'
  xml: ! '>=1.3.5'
  containers: -any
  uri-bytestring: ! '>=0.2.3.3 && <=0.4'
  pandoc: ! '>=2.2'
  ghc-paths: -any
  utf8-string: ! '>=0.3 && <1.1'
  old-time: -any
  hslogger: ! '>=1 && <1.3'
  skylighting: ! '>=0.7.4 && <0.8'
  xss-sanitize: ! '>=0.3 && <0.4'
  old-locale: ! '>=1'
  http-client-tls: ! '>=0.2.2 && <0.4'
  zlib: ! '>=0.5 && <0.7'
  network-uri: ==2.6.*
  mtl: -any
  blaze-html: ! '>=0.4 && <0.10'
  HTTP: ! '>=4000.0 && <4000.4'
  random: -any
  http-conduit: ! '>=2.1.6 && <2.4'
  tagsoup: ! '>=0.13 && <0.15'
  pretty: -any
  aeson: ! '>=0.7 && <1.5'
  safe: -any
  filestore: ! '>=0.6 && <0.7'
  directory: -any
all-versions:
- '0.1.0.1'
- '0.1.1'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.2.2.1'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.4.1'
- '0.3.4.2'
- '0.4.1'
- '0.4.1.2'
- '0.4.1.3'
- '0.5'
- '0.5.1'
- '0.5.2'
- '0.5.3'
- '0.6.1'
- '0.6.2'
- '0.6.3'
- '0.6.4'
- '0.6.5'
- '0.6.6'
- '0.7'
- '0.7.1'
- '0.7.2'
- '0.7.2.1'
- '0.7.3'
- '0.7.3.1'
- '0.7.3.2'
- '0.7.3.3'
- '0.7.3.4'
- '0.7.3.5'
- '0.7.3.6'
- '0.7.3.7'
- '0.7.3.8'
- '0.7.3.9'
- '0.7.3.10'
- '0.7.3.11'
- '0.7.3.12'
- '0.8'
- '0.8.0.1'
- '0.8.1'
- '0.9'
- '0.9.0.1'
- '0.10'
- '0.10.0.1'
- '0.10.0.2'
- '0.10.1'
- '0.10.1.1'
- '0.10.1.2'
- '0.10.2'
- '0.10.3'
- '0.10.3.1'
- '0.10.4'
- '0.10.5'
- '0.10.5.1'
- '0.10.6'
- '0.10.6.1'
- '0.10.6.2'
- '0.10.6.3'
- '0.10.7'
- '0.11'
- '0.11.1'
- '0.11.1.1'
- '0.12'
- '0.12.0.1'
- '0.12.1'
- '0.12.1.1'
- '0.12.2'
- '0.12.2.1'
- '0.12.3'
author: John MacFarlane
latest: '0.12.3'
description-type: markdown
description: ! "Gitit\n=====\n\nGitit is a wiki program written in Haskell. It uses
  [Happstack] for\nthe web server and [pandoc] for markup processing. Pages and uploaded\nfiles
  are stored in a [git], [darcs], or [mercurial] repository\nand may be modified either
  by using the VCS's command-line tools or\nthrough the wiki's web interface. By default,
  pandoc's extended version\nof markdown is used as a markup language, but reStructuredText,
  LaTeX, HTML,\nDocBook, or Emacs Org-mode markup can also be used. Pages can be exported
  in a\nnumber of different formats, including LaTeX, RTF, OpenOffice ODT, and\nMediaWiki
  markup.  Gitit can be configured to display TeX math (using\n[texmath]) and highlighted
  source code (using [highlighting-kate]).\n\nOther features include\n\n* plugins:
  dynamically loaded page transformations written in Haskell\n  (see \"Network.Gitit.Interface\")\n\n*
  categories\n\n* TeX math\n\n* syntax highlighting of source code files and code
  snippets (using\n  highlighting-kate)\n\n* caching\n\n* Atom feeds (site-wide and
  per-page)\n\n* a library, \"Network.Gitit\", that makes it simple to include a gitit\n
  \ wiki in any happstack application\n\n[git]: http://git.or.cz\n[darcs]: http://darcs.net\n[mercurial]:
  http://mercurial.selenic.com/\n[pandoc]: http://pandoc.org\n[Happstack]: http://happstack.com\n[highlighting-kate]:
  http://johnmacfarlane.net/highlighting-kate/\n[texmath]: http://github.com/jgm/texmath/tree/master\n\nGetting
  started\n===============\n\nCompiling and installing gitit\n------------------------------\n\nThe
  most reliable way to install gitit from source is to get the\n[stack] tool.  Then
  clone the gitit repository and use stack\nto install:\n\n    git clone https://github.com/jgm/gitit\n
  \   cd gitit\n    stack install\n\nAlternatively, instead of using [stack], you
  can get the\n[Haskell Platform] and do the following:\n\n    cabal update\n    cabal
  install gitit\n\nThis will install the latest released version of gitit.\nTo install
  a version of gitit checked out from the repository,\nchange to the gitit directory
  and type:\n\n    cabal install\n\nThe `cabal` tool will automatically install all
  of the required haskell\nlibraries. If all goes well, by the end of this process,
  the latest\nrelease of gitit will be installed in your local `.cabal` directory.
  You\ncan check this by trying:\n\n    gitit --version\n\nIf that doesn't work, check
  to see that `gitit` is in your local\ncabal-install executable directory (usually
  `~/.cabal/bin`). And make\nsure `~/.cabal/bin` is in your system path.\n\n[stack]:
  https://github.com/commercialhaskell/stack\n[Haskell Platform]: https://www.haskell.org/platform/\n\nRunning
  gitit\n-------------\n\nTo run gitit, you'll need `git` in your system path. (Or
  `darcs` or\n`hg`, if you're using darcs or mercurial to store the wiki data.)\n\nGitit
  assumes that the page files (stored in the git repository) are\nencoded as UTF-8.
  Even page names may be UTF-8 if the file system\nsupports this. So you should make
  sure that you are using a UTF-8 locale\nwhen running gitit. (To check this, type
  `locale`.)\n\nSwitch to the directory where you want to run gitit. This should be
  a\ndirectory where you have write access, since three directories, `static`,\n`templates`,
  and `wikidata`, and two files, `gitit-users` and `gitit.log`,\nwill be created here.
  To start gitit, just type:\n\n    gitit\n\nIf all goes well, gitit will do the following:\n\n
  1.  Create a git repository, `wikidata`, and add a default front page.\n 2.  Create
  a `static` directory containing files to be treated as\n     static files by gitit.\n
  3.  Create a `templates` directory containing HStringTemplate templates\n     for
  wiki pages.\n 4.  Start a web server on port 5001.\n\nCheck that it worked: open
  a web browser and go to\n<http://localhost:5001>.\n\nYou can control the port that
  gitit runs on using the `-p` option:\n`gitit -p 4000` will start gitit on port 4000.
  Additional runtime\noptions are described by `gitit -h`.\n\nUsing gitit\n===========\n\nWiki
  links and formatting\n-------------------------\n\nFor instructions on editing pages
  and creating links, see the \"Help\" page.\n\nGitit interprets links with empty
  URLs as wikilinks. Thus, in markdown\npages, `[Front Page]()` creates an internal
  wikilink to the page `Front\nPage`. In reStructuredText pages, `` `Front Page <>`_
  `` has the same\neffect.\n\nIf you want to link to a directory listing for a subdirectory,
  use a\ntrailing slash:  `[foo/bar/]()` creates a link to the directory for\n`foo/bar`.\n\nPage
  metadata\n-------------\n\nPages may optionally begin with a metadata block.  Here
  is an example:\n\n    ---\n    format: latex+lhs\n    categories: haskell math\n
  \   toc: no\n    title: Haskell and\n      Category Theory\n    ...\n\n    \\section{Why
  Category Theory?}\n\nThe metadata block consists of a list of key-value pairs, each
  on a\nseparate line. If needed, the value can be continued on one or more\nadditional
  line, which must begin with a space. (This is illustrated by\nthe \"title\" example
  above.) The metadata block must begin with a line\n`---` and end with a line `...`
  optionally followed by one or more blank\nlines. (The metadata block is a valid
  YAML document, though not all YAML\ndocuments will be valid metadata blocks.)\n\nCurrently
  the following keys are supported:\n\nformat\n:   Overrides the default page type
  as specified in the configuration file.\n    Possible values are `markdown`, `rst`,
  `latex`, `html`, `markdown+lhs`,\n    `rst+lhs`, `latex+lhs`.  (Capitalization is
  ignored, so you can also\n    use `LaTeX`, `HTML`, etc.)  The `+lhs` variants indicate
  that the page\n    is to be interpreted as literate Haskell.  If this field is missing,\n
  \   the default page type will be used.\n\ncategories\n:   A space or comma separated
  list of categories to which the page belongs.\n\ntoc\n:   Overrides default setting
  for table-of-contents in the configuration file.\n    Values can be `yes`, `no`,
  `true`, or `false` (capitalization is ignored).\n\ntitle\n:   By default the displayed
  page title is the page name.  This metadata element\n    overrides that default.\n\nHighlighted
  source code\n-----------------------\n\nIf gitit was compiled against a version
  of pandoc that has highlighting\nsupport (see above), you can get highlighted source
  code by using\n[delimited code blocks]:\n\n    ~~~ {.haskell .numberLines}\n    qsort
  []     = []\n    qsort (x:xs) = qsort (filter (< x) xs) ++ [x] ++\n                   qsort
  (filter (>= x) xs) \n    ~~~\n\nTo see what languages your pandoc was compiled to
  highlight:\n\n    pandoc -v\n\n[delimited code blocks]: http://pandoc.org/README.html#delimited-code-blocks\n\nConfiguring
  and customizing gitit\n=================================\n\nConfiguration options\n---------------------\n\nUse
  the option `-f [filename]` to specify a configuration file:\n\n    gitit -f my.conf\n\nThe
  configuration can be split between several files:\n\n\tgitit -f my.conf -f additional.conf\n\nOne
  use case is to keep sensible part of the configuration outside of a SCM\n(oauth
  client secret for example).\n\nIf this option is not used, gitit will use a default
  configuration.\nTo get a copy of the default configuration file, which you\ncan
  customize, just type:\n\n    gitit --print-default-config > my.conf\n\nThe default
  configuration file is documented with comments throughout.\n\nThe `static` directory\n----------------------\n\nOn
  receiving a request, gitit always looks first in the `static`\ndirectory (or in
  whatever directory is specified for `static-dir` in\nthe configuration file). If
  a file corresponding to the request is\nfound there, it is served immediately. If
  the file is not found in\n`static`, gitit next looks in the `static` subdirectory
  of gitit's data\nfile (`$CABALDIR/share/gitit-x.y.z/data`). This is where default
  css,\nimages, and javascripts are stored. If the file is not found there\neither,
  gitit treats the request as a request for a wiki page or wiki\ncommand.\n\nSo, you
  can throw anything you want to be served statically (for\nexample, a `robots.txt`
  file or `favicon.ico`) in the `static`\ndirectory. You can override any of gitit's
  default css, javascript, or\nimage files by putting a file with the same relative
  path in `static`.\nNote that gitit has a default `robots.txt` file that excludes
  all\nURLs beginning with `/_`.\n\nNote:  if you set `static-dir` to be a subdirectory
  of `repository-path`,\nand then add the files in the static directory to your repository,
  you\ncan ensure that others who clone your wiki repository get these files\nas well.
  \ It will not be possible to modify these files using the web\ninterface, but they
  will be modifiable via git.\n\nUsing a VCS other than git\n--------------------------\n\nBy
  default, gitit will store wiki pages in a git repository in the\n`wikidata` directory.
  \ If you'd prefer to use darcs instead of git,\nyou need to add the following field
  to the configuration file:\n\n    repository-type: Darcs\n\nIf you'd prefer to use
  mercurial, add:\n\n    repository-type: Mercurial\n\nThis program may be called
  \"darcsit\" instead of \"gitit\" when a darcs\nbackend is used.\n\nNote:  we recommend
  that you use gitit/darcsit with darcs version\n2.3.0 or greater.  If you must use
  an older version of darcs, then\nyou need to compile the filestore library without
  the (default)\nmaxcount flag, before (re)installing gitit:\n\n    cabal install
  --reinstall filestore -f-maxcount\n    cabal install --reinstall gitit\n\nOtherwise
  you will get an error when you attempt to access your\nrepository.\n\nChanging the
  theme\n------------------\n\nTo change the look of the wiki, you can modify `custom.css`
  in\n`static/css`.\n\nTo change the look of printed pages, copy gitit's default `print.css`\nto
  `static/css` and modify it.\n\nThe logo picture can be changed by copying a new
  PNG file to\n`static/img/logo.png`. The default logo is 138x155 pixels.\n\nTo change
  the footer, modify `templates/footer.st`.\n\nFor more radical changes, you can override
  any of the default\ntemplates in `$CABALDIR/share/gitit-x.y.z/data/templates` by
  copying\nthe file into `templates`, modifying it, and restarting gitit. The \n`page.st`
  template is the master template; it includes the others. \nInterpolated variables
  are surrounded by `$`s, so `literal $` must \nbe backslash-escaped.\n\nAdding support
  for math\n-----------------------\n\nTo write math on a markdown-formatted wiki
  page, just enclose it\nin dollar signs, as in LaTeX:\n\n    Here is a formula:  $\\frac{1}{\\sqrt{c^2}}$\n\nYou
  can write display math by enclosing it in double dollar signs:\n\n    $$\\frac{1}{\\sqrt{c^2}}$$\n\nGitit
  can display TeX math in three different ways, depending on the\nsetting of `math`
  in the configuration file:\n\n1.  `mathjax` (default): Math will be rendered using
  the [MathJax] javascript.\n\n2.  `mathml`: Math will be converted to MathML using\n
  \   [texmath]. This method works with IE+mathplayer, Firefox, and\n    Opera, but
  not Safari.\n\n3.  `raw`: Math will be rendered as raw LaTeX codes.\n\n[MathJax]:
  https://www.mathjax.org/\n\nRestricting access\n------------------\n\nIf you want
  to limit account creation on your wiki, the easiest way to do this\nis to provide
  an `access-question` in your configuration file. (See the commented\ndefault configuration
  file.)  Nobody will be able to create an account without\nknowing the answer to
  the access question.\n\nAnother approach is to use HTTP authentication. (See the
  config file comments on\n`authentication-method`.)\n\nAuthentication through github\n-----------------------------\n\nIf
  you want to authenticate the user from github through oauth2, you need to\nregister
  your app with github to obtain a OAuth client secret and add the\nfollowing section
  to your configuration file:\n\n```\n[Github]\noauthclientid: 01239456789abcdef012\noauthclientsecret:
  01239456789abcdef01239456789abcdef012394\noauthcallback: http://mysite/_githubCallback\noauthoauthorizeendpoint:
  https://github.com/login/oauth/authorize\noauthaccesstokenendpoint: https://github.com/login/oauth/access_token\n##
  Uncomment if you are checking membership against an organization and change\n##
  gitit-testorg to this organization:\n# github-org: gitit-testorg\n```\n\nThe github
  authentication uses the scope `user:email`. This way, gitit gets the\nemail of the
  user, and the commit can be assigned to the right author if the\nwikidata repository
  is pushed to github. Additionally, it uses `read:org` if you\nuses the option `github-org`
  to check membership against an organization.\n\nTo push your repository to gitub
  after each commit, you can add the file\n`post-commit` with the content below in
  the .git/hooks directory of your\nwikidata repository.\n\n```\n#!/bin/sh\ngit push
  origin master 2>> logit\n```\n\nPlugins\n=======\n\nPlugins are small Haskell programs
  that transform a wiki page after it\nhas been converted from Markdown or another
  source format. See the example\nplugins in the `plugins` directory. To enable a
  plugin, include the path to the\nplugin (or its module name) in the `plugins` field
  of the configuration file.\n(If the plugin name starts with `Network.Gitit.Plugin.`,
  gitit will assume that\nthe plugin is an installed module and will not look for
  a source file.)\n\nPlugin support is enabled by default. However, plugin support
  makes\nthe gitit executable considerably larger and more memory-hungry.\nIf you
  don't need plugins, you may want to compile gitit without plugin\nsupport.  To do
  this, unset the `plugins` Cabal flag:\n\n    cabal install --reinstall gitit -f-plugins\n\nNote
  also that if you compile gitit for executable profiling, attempts\nto load plugins
  will result in \"internal error: PAP object entered!\"\n\nAccessing the wiki through
  git\n==============================\n\nAll the pages and uploaded files are stored
  in a git repository. By\ndefault, this lives in the `wikidata` directory (though
  this can be\nchanged through configuration options). So you can interact with the\nwiki
  using git command line tools:\n\n    git clone ssh://my.server.edu/path/of/wiki/wikidata\n
  \   cd wikidata\n    vim Front\\ Page.page  # edit the page\n    git commit -m \"Added
  message about wiki etiquette\" Front\\ Page.page\n    git push\n\nIf you now look
  at the Front Page on the wiki, you should see your changes\nreflected there.  Note
  that the pages all have the extension `.page`.\n\nIf you are using the darcs or
  mercurial backend, the commands will\nbe slightly different.  See the documentation
  for your VCS for\ndetails.\n\nPerformance\n===========\n\nCaching\n-------\n\nBy
  default, gitit does not cache content.  If your wiki receives a lot of\ntraffic
  or contains pages that are slow to render, you may want to activate\ncaching.  To
  do this, set the configuration option `use-cache` to `yes`.\nBy default, rendered
  pages, highlighted source files, and exported PDFs\nwill be cached in the `cache`
  directory. (Another directory can be\nspecified by setting the `cache-dir` configuration
  option.)\n\nCached pages are updated when pages are modified using the web\ninterface.
  They are not updated when pages are modified directly through\ngit or darcs. However,
  the cache can be refreshed manually by pressing\nCtrl-R when viewing a page, or
  by sending an HTTP GET or POST request to\n`/_expire/path/to/page`, where `path/to/page`
  is the name of the page to\nbe expired.\n\nUsers who frequently update pages using
  git or darcs may wish to add a\nhook to the repository that makes the appropriate
  HTTP request to expire\npages when they are updated. To facilitate such hooks, the
  gitit cabal\npackage includes an executable `expireGititCache`. Assuming you are\nrunning
  gitit at port 5001 on localhost, and the environment variable\n`CHANGED_FILES` contains
  a list of the files that have changed, you can\nexpire their cached versions using\n\n
  \   expireGititCache http://localhost:5001 $CHANGED_FILES\n\nOr you can specify
  the files directly:\n\n    expireGititCache http://localhost:5001 \"Front Page.page\"
  foo/bar/baz.c\n\nThis program will return a success status (0) if the page has been\nsuccessfully
  expired (or if it was never cached in the first place),\nand a failure status (>
  0) otherwise.\n\nThe cache is persistent through restarts of gitit.  To expire all
  cached\npages, simply remove the `cache` directory.\n\nIdle\n----\n\nBy default,
  GHC's runtime will repeatedly attempt to collect garbage\nwhen an executable like
  Gitit is idle. This means that gitit will, after\nthe first page request, never
  use 0% CPU time and sleep, but will use\n~1%. This can be bad for battery life,
  among other things.\n\nTo fix this, one can disable the idle-time GC with the runtime
  flag\n`-I0`:\n\n    gitit -f my.conf +RTS -I0 -RTS\n\n\nNote:\n\nTo enable RTS,
  cabal needs to pass the compile flag `-rtsopts` to GHC while installing.\n\n    cabal
  install --reinstall gitit --ghc-options=\"-rtsopts\"\n\nUsing gitit with apache\n=======================\n\nMost
  users who run a public-facing gitit will want gitit to appear\nat a nice URL like
  `http://wiki.mysite.com` or\n`http://mysite.com/wiki` rather than `http://mysite.com:5001`.\nThis
  can be achieved using apache's `mod_proxy`.\n\nProxying to `http://wiki.mysite.com`\n------------------------------------\n\nSet
  up your DNS so that `http://wiki.mysite.com` maps to\nyour server's IP address.
  Make sure that the `mod_proxy`, `mod_proxy_http` and `mod_rewrite` modules are\nloaded,
  and set up a virtual host with the following configuration:\n\n    <VirtualHost
  *>\n        ServerName wiki.mysite.com\n        DocumentRoot /var/www/\n        RewriteEngine
  On\n        ProxyPreserveHost On\n        ProxyRequests Off\n    \n        <Proxy
  *>\n           Order deny,allow\n           Allow from all\n        </Proxy>\n    \n
  \       ProxyPassReverse /    http://127.0.0.1:5001\n        RewriteRule ^(.*) http://127.0.0.1:5001$1
  [P]\n    \n        ErrorLog /var/log/apache2/error.log\n        LogLevel warn\n
  \   \n        CustomLog /var/log/apache2/access.log combined\n        ServerSignature
  On\n    \n    </VirtualHost>\n\nReload your apache configuration and you should
  be all set.\n\nUsing nginx to achieve the same\n-------------------------------\n\nDrop
  a file called `wiki.example.com.conf` into `/etc/nginx/conf.d`\n(or where ever your
  distribution puts it).\n\n    server {\n        listen 80;\n        server_name
  wiki.example.com\n        location / {\n            proxy_pass        http://127.0.0.1:5001/;\n
  \           proxy_set_header  X-Real-IP  $remote_addr;\n            proxy_redirect
  off;\n        }\n        access_log /var/log/nginx/wiki.example.com.log main;\n
  \   }\n\nReload your nginx config and you should be all set.\n\n\nProxying to `http://mysite.com/wiki`\n------------------------------------\n\nMake
  sure the `mod_proxy`, `mod_headers`, `mod_proxy_http`,\nand `mod_proxy_html` modules
  are loaded. `mod_proxy_html`\nis an external module, which can be obtained [here]\n(http://apache.webthing.com/mod_proxy_html/).
  It rewrites URLs that\noccur in web pages. Here we will use it to rewrite gitit's
  links so that\nthey all begin with `/wiki/`.\n\nFirst, tell gitit not to compress
  pages, since `mod_proxy_html` needs\nuncompressed pages to parse. You can do this
  by setting the gitit\nconfiguration option\n\n    compress-responses: no\n\nSecond,
  modify the link in the `reset-password-message` in the\nconfiguration file:  instead
  of\n\n    http://$hostname$:$port$$resetlink$\n\nset it to\n\n    http://$hostname$/wiki$resetlink$\n\nRestart
  gitit.\n\nNow add the following lines to the apache configuration file for the\n`mysite.com`
  server:\n\n    # These commands will proxy /wiki/ to port 5001\n\n    ProxyRequests
  Off\n\n    <Proxy *>\n      Order deny,allow\n      Allow from all\n    </Proxy>\n\n
  \   ProxyPass /wiki/ http://127.0.0.1:5001/\n\n    <Location /wiki/>\n      SetOutputFilter
  \ proxy-html\n      ProxyPassReverse /\n      ProxyHTMLURLMap  /   /wiki/\n      ProxyHTMLDocType
  \"<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>\"
  XHTML\n      RequestHeader unset Accept-Encoding\n    </Location>\n\nReload your
  apache configuration and you should be set.\n\nFor further information on the use
  of `mod_proxy_http` to rewrite URLs,\nsee the [`mod_proxy_html` guide].\n\n[`mod_proxy_html`
  guide]: http://apache.webthing.com/mod_proxy_html/guide.html\n\nUsing gitit as a
  library\n========================\n\nBy importing the module `Network.Gitit`, you
  can include a gitit wiki\n(or several of them) in another happstack application.
  There are some\nsimple examples in the haddock documentation for `Network.Gitit`.\n\nReporting
  bugs\n==============\n\nBugs may be reported (and feature requests filed) at\n<https://github.com/jgm/gitit/issues>.\n\nThere
  is a mailing list for users and developers at\n<http://groups.google.com/group/gitit-discuss>.\n\nAcknowledgements\n================\n\nA
  number of people have contributed patches:\n\n- Gwern Branwen helped to optimize
  gitit and wrote the\n  InterwikiPlugin. He also helped with the Feed module.\n-
  Simon Michael contributed the patch adding RST support.\n- Henry Laxen added support
  for password resets and helped with\n  the apache proxy instructions.\n- Anton van
  Straaten made the process of page generation\n  more modular by adding Gitit.ContentTransformer.\n-
  Robin Green helped improve the plugin API and interface, and\n  fixed a security
  problem with the reset password code.\n- Thomas Hartman helped improve the index
  page, making directory\n  browsing persistent, and fixed a bug in template recompilation.\n-
  Justin Bogner improved the appearance of the preview button.\n- Kohei Ozaki contributed
  the ImgTexPlugin.\n- Michael Terepeta improved validation of change descriptions.\n-
  mightybyte suggested making gitit available as a library,\n  and contributed a patch
  to ifLoggedIn that was needed to\n  make gitit usable with a custom authentication
  scheme.\n\nI am especially grateful to the darcs team for using darcsit for\ntheir
  public-facing wiki.  This has helped immensely in identifying\nissues and improving
  performance.\n\nGitit's default visual layout is shamelessly borrowed from Wikipedia.\nThe
  stylesheets are influenced by Wikipedia's stylesheets and by the\nbluetrip CSS framework
  (see BLUETRIP-LICENSE). Some of the icons in\n`img/icons` come from bluetrip as
  well.\n\n"
license-name: LicenseRefGPL
