homepage: https://github.com/lettier/gifcurry
changelog-type: markdown
hash: cf47e93d095978a1763652b8585aa790b9649170a6ceb71483cceae69a7db153
test-bench-deps: {}
maintainer: Lettier
synopsis: GIF creation utility.
changelog: ! "# [Gifcurry](https://github.com/lettier/gifcurry)\n\n## Changelog\n\n-------------------------------------------------------------------------------\n\n###
  3.0.0.1\n\n#### Added\n\n- Added project website under docs\n\n#### Changed\n\n-
  Changed docs to haddock\n- Increased base optimization with fuzz and map\n- Increased
  default frame rate to 15\n- Set tighter bounds on number of colors\n- Set tighter
  bounds on quality percent clamp\n- Query stream for duration and then container
  for duration\n- Fixed empty file name issue\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  3.0.0.0\n\n#### Added\n\n- Added a video preview using GStreamer\n- Added start
  time and end time indicators to UI\n- Added a save as video option to both the GUI
  and CLI\n- Added a crop mode to the UI\n- Added crop parameters to the CLI\n- Added
  the following to the library interface\n    - `getOutputFileWithExtension`\n    -
  `getVideoWidthAndHeight`\n    - `defaultFontChoice`\n- Added snap distribution\n\n####
  Changed\n\n- Reconfigured the UI to show the preview off to the right along with
  the start and duration controls\n- Changed the image first and last frame preview
  to be the fallback if GStreamer errors\n- Changed text entries to spin buttons for
  better error checking\n    - The spin buttons provide better feedback about the
  min and max settings\n- Moved the GUI preview code into a separate module\n- Locked
  the GHC version to avoid build issues concerning haskell-gi and GHC 8.2.X\n- Changed
  the logo and icon\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  2.3.0.0\n\n#### Added\n\n- Support for GTK 3.10\n- Logo to about dialog\n- `findOrCreateTemporaryDirectory`
  to Gifcurry library API\n\n#### Changed\n\n- Switched icon from ICO to PNG\n- Use
  XdgCache location for cross compatible way of storing temporary files\n\n#### Removed\n\n-
  ICO files\n\n-------------------------------------------------------------------------------\n\n###
  2.2.0.0\n\n#### Added\n\n- Loading a video now populates the start and duration
  fields\n    - Duration is the length of the entire video in seconds\n- Confirmation
  dialog if duration is >= 10 seconds\n- `getVideoDurationInSeconds` to the library
  public API\n- Error checking\n- File path compatibility\n- About dialog\n- GNU Make
  targets for Arch Linux\n- `stack.yaml`\n- CHANGELOG.md\n\n#### Changed\n\n- Icon
  file\n- Switched from gtk2hs to haskell-gi\n- Switched from Cabal to Haskell stack\n-
  Code clean up\n- README install and run instructions\n- README graphics\n- GUI widget
  IDs\n- Fixed the ImageMagick null font issue\n    - ImageMagick assumes `~/.magick/type.xml`
  exists\n    - Instead of `default`, it searches for the first match to `sans` if
  no font is specified\n- Temporary file directory names where frames and GIFs are
  built\n\n#### Removed\n\n- Old icon from cabal file\n- Altered icon from GUI file\n\n-------------------------------------------------------------------------------\n\n###
  2.1.1.0\n\n#### Added\n\n-\n\n#### Changed\n\n- Fixed cabal file\n- Altered optimization\n-
  Updated to work with GHC 8.0.2\n- Updated README to work with Hackage\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  2.1.0.0\n\n#### Added\n\n- Font selection capabilities\n- Font selection to the
  GUI\n- A fontChoice parameter to the CLI\n- A makefile\n\n#### Changed\n\n- Updated
  the logo\n- Updated the icon\n- Fixed font scaling\n- Updated dependencies for macOS
  Sierra\n- Updated README\n- Reorganized project structure\n- Fixed compiler warnings\n\n####
  Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  2.0.0.2\n\n#### Added\n\n-\n\n#### Changed\n\n- Fixed a bug where the first and
  last frame previews were not updating\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  2.0.0.1\n\n#### Added\n\n- `postGUIAsync`\n\n#### Changed\n\n- Bumped dependencies
  up (mainly GHC 8.0)\n- [Char] to String\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  2.0.0.0\n\n#### Added\n\n- Type signatures\n- More error checking to the GUI\n\n####
  Changed\n\n- Refactored code\n- Made CLI more flexible concerning input options\n\n####
  Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  0.1.1.0\n\n#### Added\n\n- First and last frame preview\n- Further file exists error
  checking\n\n#### Changed\n\n- Disabled GUI re-sizing\n- Simplified GUI\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  0.1.0.6\n\n#### Added\n\n-\n\n#### Changed\n\n- Updated GIF open method to work
  for Mac OS X\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  0.1.0.5\n\n#### Added\n\n-\n\n#### Changed\n\n- Downgraded GTK requirement from
  3.16 to 3.10\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  0.1.0.4\n\n#### Added\n\n-\n\n#### Changed\n\n-\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  0.1.0.3\n\n#### Added\n\n-\n\n#### Changed\n\n-\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  0.1.0.2\n\n#### Added\n\n-\n\n#### Changed\n\n-\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  0.1.0.1\n\n#### Added\n\n-\n\n#### Changed\n\n-\n\n#### Removed\n\n-\n\n-------------------------------------------------------------------------------\n\n###
  0.1.0.0\n\n#### Added\n\n-\n\n#### Changed\n\n-\n\n#### Removed\n\n-\n"
basic-deps:
  haskell-gi-base: ==0.21.*
  bytestring: ==0.10.*
  base: ==4.9.*
  gi-cairo: ==1.0.*
  text: ==1.2.*
  gi-glib: ==2.0.*
  gi-gst: ==1.0.*
  gi-gtk: ==3.0.*
  gi-gdk: ==3.0.*
  filepath: ==1.4.*
  process: ! '>=1.2 && <=1.4.4'
  cairo: ==0.13.*
  gi-gobject: ==2.0.*
  haskell-gi: ==0.21.*
  gi-gstvideo: ==1.0.*
  cmdargs: ==0.10.*
  transformers: ==0.5.*
  temporary: ==1.2.*
  directory: ==1.3.*
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.1.0
- 2.0.0.0
- 2.0.0.1
- 2.0.0.2
- 2.1.0.0
- 2.1.1.0
- 2.2.0.0
- 2.3.0.0
- 3.0.0.0
- 3.0.0.1
author: Lettier
latest: 3.0.0.1
description-type: markdown
description: ! "![Gifcurry](https://i.imgur.com/t6zJGR9.png)\n\n# Tell me about Gifcurry.\n\nGifcurry
  is your only open source video to GIF maker built with Haskell.\nLoad a video, make
  some edits, and save it as a GIF—it's that easy.\nMost video formats should work
  so go wild.\nAnd since it's made with Haskell, you know it's good.\n\nFor the command
  line averse, there is a GUI.\nDie-hard terminal aficionado? Gifcurry has you covered
  with its CLI.\nAnd for the Haskell programmers out there, there is also a library
  API.\n\nGifcurry can save your creation as a GIF or as a video.\nSo if you hate
  GIFs with a passion—no problem!\nJust select \"save as video\" and do your part
  to rid the world of GIFs.\n\nEnjoy memes? Great! Gifcurry can add text to the top
  and/or the bottom of your GIF.\nJust type in some text for the top or type in some
  text for the bottom or type in\nsome pithy text for both the top and bottom—Gifcurry
  don't care.\nOh and you can select the font too so you're never too far from Comic
  Sans.\n\nGifcurry caters to the power user with its crop tool.\nYou can crop from
  the left, the right, the top, and/or the bottom.\nWith Gifcurry, you can cut out
  anything you don't want.\n\nIs Gifcurry another Electron app? No way! Gifcurry is
  100% #electronfree.\nNo need to download more RAM, Gifcurry is light as a feather.\nRun
  it all day, run it all year—you'll never notice.\n\nI know what your're thinkin',
  \"Gifcurry is just FFMpeg and ImageMagick,\" but you'd be wrong.\nGifcurry hides
  all the goofy details so you can concentrate on what matters—the almighty GIF.\nMaking
  GIFs with Gifcurry is fun so try it out!\n\n## What do I need Gifcurry for?\n\nNeed
  to show off that new UI feature in a pull request? Gifcurry.  \nYour template doesn't
  allow video in the hero image? Gifcurry.  \nNo GIF of your favorite movie scene?
  Gifcurry.  \nNeed a custom animated emoji for Slack? Gifcurry.  \nHave an idea of
  the perfect GIF to close out that email? Gifcurry.  \n\nGifcurry comes in handy
  for all sorts of scenarios.\n\n## What does the GUI look like?\n\n![GUI](https://i.imgur.com/oYQAyQY.png)\n![GUI](https://i.imgur.com/er3AQjP.png)\n![GUI](https://i.imgur.com/mW1Rsd1.png)\n![GUI](https://i.imgur.com/IQqkxfB.png)\n![GUI](https://i.imgur.com/NMadQxQ.png)\n\n##
  Got any sample GIFs?\n\n![GIF](https://i.imgur.com/alxcMli.gif)\n![GIF](https://i.imgur.com/FUjIBm2.gif)\n\n##
  How do I use the command line interface (CLI)?\n\n```bash\ngifcurry_cli [OPTIONS]\n\nFILE
  IO:\n  -i --input-file=FILE      The input video file path and name.\n  -o --output-file=FILE
  \    The output GIF file path and name.\n  -m --save-as-video        If present,
  saves the GIF as a video.\nTIME:\n  -s --start-time=NUM       The start time (in
  seconds) for the first frame.\n  -d --duration-time=NUM    How long the GIF lasts
  (in seconds) from the\n                            start time.\nOUTPUT FILE SIZE:\n
  \ -w --width-size=INT       How wide the GIF needs to be. Height will scale\n                            to
  match.\n  -q --quality-percent=NUM  From 1 (very low quality) to 100 (the best\n
  \                           quality). Controls how many colors are used and how\n
  \                           many frames per second there are.\nTEXT:\n  -f --font-choice=TEXT
  \    Choose your desired font for the top and bottom\n                            text.\n
  \ -t --top-text=TEXT        The text you wish to add to the top of the GIF.\n  -b
  --bottom-text=TEXT     The text you wish to add to the bottom of the\n                            GIF.\nCROP:\n
  \ -L --left-crop=NUM        The amount you wish to crop from the left.\n  -R --right-crop=NUM
  \      The amount you wish to crop from the right.\n  -T --top-crop=NUM         The
  amount you wish to crop from the top.\n  -B --bottom-crop=NUM      The amount you
  wish to crop from the bottom.\nINFO:\n  -? --help                 Display help message\n
  \ -V --version              Print version information\n```\n\n## Got a CLI example?\n\n```text\ngifcurry_cli
  \\\n-i ~/Videos/video.mp4 -o ~/tmp/test -m \\\n-L 25 -R 25 -T 25 -B 25 \\\n-s 149.11
  -d 1 \\\n-f 'fira sans' -t 'Top Text' -b 'Bottom Text'\n\n       ╓╦NÑ╫╫╫╫╫ÑNw,                                                           \n
  \   , `Ñ╫╫╫╫Ñ `'╩╫╫╫Ñw      ,╓ææµ  ║▓▓⌐ ,▄▄▓▄                                  \n
  \  ]╫Ñ  Ñ╫╫╫ ,╫N ╙╫╫╫╫Ñ   ╓▓▓▀╙╙▀╨ .╓, ,▓▓▌,  ,╓╥╓, ,,  ,,, ,, ,╓ ,, ,╓ ,,  ., \n
  \ ]╫╫╫Ñ '╫╫⌐ Ñ╫⌐  Ñ╫╫╫╫Ñ -▓▓M ╥╥╥╥ ▐▓▓ ▀▓▓▀▀ ▄▓▀╙▀▀ ▓▓Γ ╫▓▌ ╫▓▓▌▀ ▓▓▓▀▀╙▓▓  ▓▓▀\n
  \ ╩╫╫╫╫H ╠Ñ 1╫H ╫ '╫╫╫╫╣  ▓▓H ╙▐▓▓ ▐▓▓  ▓▓Γ ▐▓▓⌐    ▓▓Γ ╫▓▌ ╫▓▌   ▓▓▌   ║▓▌╢▓▌ \n
  \ ]╫╫╫╫╫ ' j╫Å j╫H ╠╫╫╫╫  ╙▓▓▄▄▄▓▓ ▐▓▓  ▓▓Γ  ▀▓▌▄▄▄ ▓▓▌▄▓▓▌ ╫▓▌   ▓▓▌    ▓▓▓▓  \n
  \  Ñ╫╫╫╫N jÑ╬ .╫╫╫⌐ Ñ╫╬┘    └╙╙╙└  `└└  └└`    ╙╙╙`  ╙╙└`└` `└└   └└`    ,▓▓▀  \n
  \   ╨╫╫╫╫N '┘ ╬╫╫╫╫  ╩`                                                 ▀▀▀└   \n
  \    `╙Ñ╫╫╫N╦╦╫╫╫╫╫╩                                                           \n
  \        `'╙╙╙╙'``                                                             \n\n\nGifcurry
  3.0.0.1\n(C) 2016 David Lettier\nlettier.com\n\n[INFO] Here are your settings.\n\nFILE
  IO:\n\nInput File: /home/Videos/video.mp4\nOutput File: /home/tmp/test.mp4\nSave
  As Video: Yes\n\nTIME:\n\nStart Second: 149.110\nDuration Time: 1.000 seconds\n\nOUTPUT
  FILE SIZE:\n\nWidth Size: 500px\nQuality Percent: 100.0%\n\nTEXT:\n\nFont Choice:
  fira sans\nTop Text: Top Text\nBottom Text: Bottom Text\n\nCROP:\n\nLeft Crop: 25.000\nRight
  crop: 25.000\nTop Crop: 25.000\nBottom Crop: 25.000\n\n[INFO] Writing the temporary
  frames to: /home/.cache/gifcurry/gifcurry-frames17389\n[INFO] Your font choice matched
  to \"Fira-Sans\".\n[INFO] Saving your GIF to: /home/.cache/gifcurry/gifcurry-frames17389/finished-result.gif\n[INFO]
  Saving your video to: /home/tmp/test.mp4\n[INFO] All done.\n```\n\n## How do I get
  a copy of Gifcurry?\n\nGifcurry works on Linux, Mac, and probably Windows (left
  me know).\nMake sure you have FFmpeg, GStreamer, ImageMagick, and GTK+ installed
  on your machine.\nTo find the latest version of Gifcurry, head over to the\n[releases
  page](https://github.com/lettier/gifcurry/releases).\n\n### I use Linux.\n\nIf you
  use Linux then the easiest way to grab a copy of Gifcurry is by downloading the\n[AppImage](https://github.com/lettier/gifcurry/releases/download/3.0.0.1/gifcurry-3.0.0.1-x86_64.AppImage).\nAfter
  you download the\n[AppImage](https://github.com/lettier/gifcurry/releases/download/3.0.0.1/gifcurry-3.0.0.1-x86_64.AppImage),\nright
  click on it, select permissions, and check the box near execute.\nWith that out
  of the way—you're all set—just double click on the AppImage\nand the GUI will fire
  right up.\n\nYou can also download and install the\n[AppImage](https://github.com/lettier/gifcurry/releases/download/3.0.0.1/gifcurry-3.0.0.1-x86_64.AppImage)\nusing
  the handy\n[AppImage install script](https://raw.githubusercontent.com/lettier/gifcurry/master/packaging/linux/app-image/gifcurry-app-image-install.sh)\n(right
  click and save link as).\nDownload the script, right click on it, select permissions,
  check the box near execute, and double click on it.\nYou should now see Gifcurry
  listed alongside your other installed programs.\n\nIf you want the CLI then download
  the\n[prebuilt version](https://github.com/lettier/gifcurry/releases/download/3.0.0.1/gifcurry-linux-3.0.0.1.tar.gz)\nfor
  Linux, extract it, open up your terminal,\n`cd` to the bin folder, and then run
  `gifcurry_cli -?`.\nAs an added bonus, inside the bin directory is the GUI version\ntoo
  so now you have both.\n\n#### I use Arch/Manjaro/Antergos/pacman.\n\nIf you'd rather
  install Gifcurry via pacman then copy the following into your terminal.\n\n```bash\ncd\n#
  Install git.\nsudo pacman -S git\n# Install Gifcurry.\nmkdir -p build_gifcurry\ncd
  build_gifcurry\ngit clone https://aur.archlinux.org/gifcurry.git\ncd gifcurry\nmakepkg
  -sic\n# Run Gifcurry CLI and GUI.\ncd\nrm -rf build_gifcurry\ngifcurry_cli -?\ngifcurry_gui\n```\n\n####
  I use Ubuntu/Mint/Debian/Deepin/snap.\n\nGifcurry is available as a snap from [Snapcraft](https://snapcraft.io/).\nIf
  you don't already have `snap`, go ahead and install it using the command `sudo apt
  install snapd`.\n\nYou can install the\n[Gifcurry snap](https://snapcraft.io/gifcurry)\nright
  from your browser or via the command line.\nFor the command line route, paste the
  following into your terminal.\n\n```bash\nsnap install gifcurry\nsudo snap connect
  gifcurry:mount-observe\nsudo snap connect gifcurry:removable-media\nsudo snap connect
  gifcurry:raw-usb\ngifcurry\n```\n\nThe\n[Gifcurry snap](https://snapcraft.io/gifcurry)\nonly
  comes with the GUI.\nIf you want the CLI, download the\n[prebuilt version](https://github.com/lettier/gifcurry/releases/download/3.0.0.1/gifcurry-linux-3.0.0.1.tar.gz)\nfor
  Linux.\n\n### I use Mac.\n\nIf you use Mac then you'll need to find the terminal.\nOpen
  Spotlight, type `Terminal`, and press enter.\nYou should see a window open that
  has black text\non a white background.\n\nWith the terminal open, copy the following
  into the terminal to install Homebrew.\n\n```bash\n/usr/bin/ruby -e \"$(curl -fsSL
  https://raw.githubusercontent.com/Homebrew/install/master/install)\"\nbrew update\n```\n\nAfter
  installing Homebrew, you'll need to install the right dependencies.\n\n```bash\nxcode-select
  --install\nbrew install \\\n  wget \\\n  git \\\n  libffi \\\n  libsvg \\\n  librsvg
  \\\n  libav \\\n  libogg \\\n  libvorbis \\\n  pkg-config \\\n  gobject-introspection
  \\\n  cairo \\\n  gdk-pixbuf \\\n  gsettings-desktop-schemas \\\n  gtk+3 \\\n  gtk-mac-integration
  \\\n  gnome-icon-theme \\\n  openh264 \\\n  theora \\\n  ffmpeg \\\n  imagemagick
  \\\n  ghostscript \\\n  gstreamer \\\n  gst-libav \\\n  gst-plugins-base \\\n  gst-plugins-good\nbrew
  install --with-gtk+3 gst-plugins-bad\nwget -qO- https://get.haskellstack.org/ |
  sh -s - -f\n```\n\nThe next step is to download the Gifcurry source with a program
  called `git`.\nAfter downloading the source, change directory (`cd`) into the Gifcurry
  folder.\n\n```bash\ngit clone https://github.com/lettier/gifcurry.git\ncd gifcurry/\n```\n\nNow
  that you have the source, copy this into the terminal.\nIt's scary lookin' but it
  is telling the program that builds\nGifcurry where the `libffi` package configuration
  is.\n\n```bash\nLIBFFIPKGCONFIG=`find /usr/local/Cellar -path '*libffi*' -type d
  -name 'pkgconfig' 2>/dev/null | tr '\\n' ':' | sed 's/:$//'`\nexport PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$LIBFFIPKGCONFIG\n```\n\nWe're
  almost there.\nWith the `stack` program, install the Haskell specific dependencies
  and build Gifcurry.\n\n```bash\nstack setup\nstack install alex happy\nstack install
  gtk2hs-buildtools\nstack install hsc2hs\nstack install\n```\n\n`stack` places the
  two Gifcurry programs into a special folder.\nCopy the following into the terminal
  to create two shortcuts on your desktop.\n\n```bash\nln -s $HOME/.local/bin/gifcurry_cli
  $HOME/Desktop/gifcurry_cli\nln -s $HOME/.local/bin/gifcurry_gui $HOME/Desktop/gifcurry_gui\n```\n\nYou
  can now click on `gifcurry_gui` from your desktop or run `gifcurry_cli` from the
  terminal.\n\n### I'm a Haskell developer.\n\nIf you develop Haskell programs then
  the easiest way to build Gifcurry is with\n[Haskell Stack](https://docs.haskellstack.org/en/stable/README/).\nCopy
  the following into your terminal.\n\n```bash\ngit clone https://aur.archlinux.org/gifcurry.git\ncd
  gifcurry\nstack setup\nstack install alex happy\nstack install gtk2hs-buildtools\nstack
  install hsc2hs\nstack install\n$HOME/.local/bin/gifcurry_cli -?\n$HOME/.local/bin/gifcurry_gui\n```\n\n##
  What dependencies does Gifcurry use?\n\n### To run Gifcurry.\n\n* [GTK+](http://www.gtk.org/download/index.php)\n*
  [FFmpeg](https://www.ffmpeg.org/download.html)\n* [GStreamer](https://gstreamer.freedesktop.org/download/)\n*
  [ImageMagick](http://www.imagemagick.org/script/download.php)\n\n### To build Gifcurry.\n\n*
  [GObject Introspection](https://wiki.gnome.org/action/show/Projects/GObjectIntrospection)\n*
  [Haskell](https://docs.haskellstack.org/en/stable/README/)\n\n## What is the license?\n\nFor
  license information, see [LICENSE](LICENSE).\n\n## Who wrote Gifcurry?\n\n_(C) 2016
  David Lettier_  \n[lettier.com](http://www.lettier.com/)\n"
license-name: BSD-3-Clause
