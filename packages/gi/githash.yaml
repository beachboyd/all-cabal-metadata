homepage: https://github.com/snoyberg/githash#readme
changelog-type: markdown
hash: 746669e12afb1af23eb64fc84e79ef356ecf26b0ad1d4374744a513078f4d0e8
test-bench-deps:
  bytestring: -any
  unliftio: -any
  base: ! '>=4.9.1 && <5'
  hspec: -any
  filepath: -any
  process: -any
  githash: -any
  temporary: -any
  template-haskell: -any
  directory: -any
maintainer: michael@snoyman.com
synopsis: Compile git revision info into Haskell projects
changelog: ! "# ChangeLog for githash\n\n## 0.1.3.0\n\n* Catch exceptions thrown by
  `readCreateProcessWithExitCode` to deal\n  with missing `git` executable\n  [#7](https://github.com/snoyberg/githash/issues/7)\n\n##
  0.1.2.0\n\n* Add `tGitInfoTry` and `tGitInfoCwdTry`\n\n## 0.1.1.0\n\n* Add message
  of the most recent commit\n\n## 0.1.0.1\n\n* Update the test suite\n\n## 0.1.0.0\n\n*
  Initial release\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.9.1 && <5'
  filepath: -any
  process: -any
  template-haskell: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
author: Michael Snoyman, Adam C. Foltzer
latest: 0.1.3.0
description-type: markdown
description: ! '# githash


  [![Build Status](https://travis-ci.org/snoyberg/githash.svg?branch=master)](https://travis-ci.org/snoyberg/githash)

  [![Build status](https://ci.appveyor.com/api/projects/status/g5asio63nfjjhx50/branch/master?svg=true)](https://ci.appveyor.com/project/snoyberg/githash/branch/master)


  Some handy Template Haskell splices for including the current git hash

  and branch in the code of your project. Useful for including in panic

  messages, `--version` output, or diagnostic info for more informative

  bug reports.


  Most of the complication in the `GitHash` module is due to the various

  places the current git hash might be stored:


  1. Detached HEAD: the hash is in `.git/HEAD`

  2. On a branch or tag: the hash is in a file pointed to by `.git/HEAD`

  in a location like `.git/refs/heads`

  3. On a branch or tag but in a repository with packed refs: the hash is

  in `.git/packed-refs`


  These situations all arise under normal development workflows, but

  there might be further scenarios that cause problems. Let me know if

  you run into them!

'
license-name: BSD-3-Clause
