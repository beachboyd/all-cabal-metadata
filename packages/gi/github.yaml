homepage: https://github.com/phadej/github
changelog-type: markdown
hash: 37eb96f99516188e6b36d93d86dfc4aeb49f4ca29f83b5ce0c3854d8e9053fcf
test-bench-deps:
  aeson-compat: -any
  bytestring: -any
  base: -any
  unordered-containers: -any
  hspec: -any
  base-compat: -any
  github: -any
  file-embed: -any
  vector: -any
maintainer: Oleg Grenrus <oleg.grenrus@iki.fi>
synopsis: Access to the GitHub API, v3.
changelog: ! "Changes for 0.18\n- Endpoints for deleting issue comments. \n  [#294](https://github.com/phadej/github/pull/294)\n-
  Endpoints for (un)starring gists.\n  [#296](https://github.com/phadej/github/pull/296)\n-
  Add `archived` field to `Repo`.\n  [#298](https://github.com/phadej/github/pull/298)\n-
  Update dependencies.\n  [#295](https://github.com/phadej/github/pull/295)\n- Add
  Statuses endpoints.\n  [#268](https://github.com/phadej/github/pull/268)\n- Add
  requested reviewers field to pull request records.\n  [#292](https://github.com/phadej/github/pull/292)\n\nChanges
  for 0.17.0\n- Add `Ord Request` instance\n- Repository contents\n- Repository starring
  endpoints\n- Pull Request review endpoints\n\nChanges for 0.16.0\n- Add support
  for `mergeable_state = \"blocked\".`\n- Fix HTTP status code of merge PR\n- Supports
  newest versions of dependencies\n- user events\n- release endpoints\n- forkExistingRepo\n\nChanges
  for 0.15.0\n\n- Reworked `PullRequest` (notably `pullRequestsFor`)\n- Reworked PR
  and Issue filtering\n- GHC-8.0.1 support\n- Change `repoMasterBranch` to `repoDefaultBranch`
  in `Repo`\n- Add `listTeamReposR`\n- Add `myStarredAcceptStarR`\n- Add `HeaderQuery`
  to `Request`\n- Add `Hashable Auth` instance\n- Add `mkUserId`, `mkUserName`, `fromUserId`,
  `fromOrganizationId`\n- Add 'userIssuesR'\n- Add 'organizationIssuesR'\n- Make `teamName
  :: Text` amnd `teamSlug :: Name Team` in both: `Team` and `SimpleTeam`\n- Refactor
  'Request' structure\n- Added multiple issue assignees\n- Preliminary support for
  repository events: `repositoryEventsR`\n- Support for adding repository permissions
  to the team\n- Remove 'simpleUserType', it was always the same.\n\nSee [git commit
  summary](https://github.com/phadej/github/compare/v0.14.1...v0.15.0)\n\nChanges
  for 0.14.1\n\n- Add `membersOfWithR`, `listTeamMembersR`\n- Add related enums: `OrgMemberFilter`,
  `OrgMemberRole`, `TeamMemberRole`\n- Add `Enum` and `Bounded` instances to `Privacy`,
  `Permission`,\n  `RepoPublicity`\n- Don't require network access for search tests\n\nChanges
  for 0.14.0\n\nLarge API changes:\n\n- Use `Text` and `Vector` in place of `String`
  and `[]`.\n- Use `Name` and `Id` tagged types for names and identifiers.\n- Make
  detailed structures un-prefixed, simple ones prefixed with `Simple`. Example: `Team`
  and `SimpleTeam`.\n- Decouple request creation from execution (`*R` and `executeRequest*`
  functions).\n- Add `Binary` instances for all data\n- `GithubOwner` is a `newtype`
  of `Either User Organization`. There's still `SimpleOwner`.\n\nChanges for 0.5.0:\n\n*
  OAuth.\n* New function: `Github.Repos.organizationRepo`, to get the repo for a specific
  organization.\n* Introduce a new `newRepoAutoInit` flag to `NewRepo`, for whether
  to initialize a repo while creating it.\n* Relax the attoparsec version requirements.\n*
  The above by [John Wiegley](https://github.com/jwiegley).\n\nChanges for 0.4.1:\n\n*
  Stop using the uri package.\n* Use aeson version 0.6.1.0.\n* Use attoparsec version
  0.10.3.0.\n* Use http-conduit over 1.8.\n* Use unordered-containers between 0.2
  and 0.3.\n\nChanges for 0.4.0:\n\n* Use http-conduit version 1.4.1.10.\n\nChanges
  for 0.3.0:\n\n* Re-instantiate the Blobs API.\n* `repoDescription1` and `repoPushedAt`
  are a `Maybe GithubDate`.\n* Add `deleteRepo`, `editRepo`, and `createRepo`.\n*
  Private gists, issues, organizations, pull requests, and users.\n* Lock down `tls`
  and `tls-extra` instead of keeping up with the\n  ever-changing `http-conduit` package.\n*
  Features by [Pavel Ryzhov](https://github.com/paulrzcz) and [Simon Hengel](https://github.com/sol).\n\nChanges
  for 0.2.1:\n\n* Expand the unordered-containers dependency to anything in 0.1.x
  .\n\nChanges for 0.2.0:\n\n* `milestoneDueOn` and `repoLanguage` are now `Maybe`
  types.\n* Introduce `GithubOwner` as the sum type for a `GithubUser` or `GithubOrganization`.
  Everything that once produced a `GithubUser` now produces a `GithubOwner`. All record
  accessors have changed their names\n* Similar to `GithubOwner`, introduce `DetailedOwner`,
  which can be a `DetailedUser` or a `DetailedOrganization`. All record accessors
  have changed their names\n* An `HTTPConnectionError` now composes `SomeException`
  instead of `IOException`. All exceptions raised by the underlying http-conduit library
  are encapulated there.\n* The `githubIssueClosedBy` function now produces a `Maybe
  GithubOwner`.\n* Remove the Blobs API, as it is broken upstream.\n* Bugs found and
  squashed thanks to [Joey Hess](https://github.com/joeyh) and [Simon Hengel](https://github.com/sol).\n"
basic-deps:
  http-client: ! '>=0.4.8.1 && <0.6'
  exceptions: ! '>=0.8.0.2 && <0.9'
  aeson-compat: ! '>=0.3.0.0 && <0.4'
  bytestring: ! '>=0.10.4.0 && <0.11'
  base: ! '>=4.7 && <4.11'
  time: ! '>=1.4 && <1.9'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=1.2.0.6 && <1.3'
  tls: ! '>=1.3.5'
  vector-instances: ! '>=3.3.0.1 && <3.5'
  semigroups: ! '>=0.16.2.2 && <0.19'
  containers: ! '>=0.5.5.1 && <0.6'
  base-compat: ! '>=0.9.1 && <0.10'
  deepseq-generics: ! '>=0.1.1.2 && <0.3'
  binary: ! '>=0.7.1.0 && <0.10'
  http-link-header: ! '>=1.0.1 && <1.1'
  iso8601-time: ! '>=0.1.4 && <0.2'
  http-client-tls: ! '>=0.2.2 && <0.4'
  network-uri: ! '>=2.6.0.3 && <2.7'
  mtl: ! '>=2.1.3.1 && <2.3'
  hashable: ! '>=1.2.3.3 && <1.3'
  byteable: ! '>=0.1.1 && <0.2'
  base16-bytestring: ! '>=0.1.1.6 && <0.2'
  transformers: ! '>=0.3.0.0 && <0.6'
  deepseq: ! '>=1.3.0.2 && <1.5'
  binary-orphans: ! '>=0.1.0.0 && <0.2'
  http-types: ! '>=0.8.6 && <0.12'
  aeson: ! '>=0.7.0.6 && <1.3'
  transformers-compat: ! '>=0.4.0.3 && <0.6'
  vector: ! '>=0.10.12.3 && <0.13'
  cryptohash: ! '>=0.11 && <0.12'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.2.0'
- '0.2.1'
- '0.3.0'
- '0.4.0'
- '0.4.1'
- '0.5.0'
- '0.6.0'
- '0.7.0'
- '0.7.1'
- '0.7.2'
- '0.7.3'
- '0.7.4'
- '0.8'
- '0.9'
- '0.10.0'
- '0.11.0'
- '0.11.1'
- '0.12'
- '0.13'
- '0.13.1'
- '0.13.2'
- '0.14.0'
- '0.14.1'
- '0.15.0'
- '0.16.0'
- '0.17.0'
- '0.18'
author: Mike Burns, John Wiegley, Oleg Grenrus
latest: '0.18'
description-type: markdown
description: ! "Github\n------\n\n[![Build Status](https://travis-ci.org/phadej/github.svg?branch=master)](https://travis-ci.org/phadej/github)\n[![Hackage](https://img.shields.io/hackage/v/github.svg)][hackage]\n[![Stackage
  LTS 5](http://stackage.org/package/github/badge/lts-5)](http://stackage.org/lts-5/package/github)\n[![Stackage
  Nightly](http://stackage.org/package/github/badge/nightly)](http://stackage.org/nightly/package/github)\n\nThe
  Github API v3 for Haskell.\n\nSome functions are missing; these are functions where
  the Github API did\nnot work as expected. The full Github API is in beta and constantly\nimproving.\n\nInstallation\n============\n\nIn
  your project's cabal file:\n\n```cabal\n-- Packages needed in order to build this
  package.\nBuild-depends:       github\n```\n\nOr from the command line:\n\n```sh\ncabal
  install github\n```\n\nExample Usage\n=============\n\nSee the samples in the\n[samples/](https://github.com/fpco/github/tree/master/samples)
  directory.\n\nDocumentation\n=============\n\nFor details see the reference [documentation
  on Hackage][hackage].\n\nEach module lines up with the hierarchy of\n[documentation
  from the Github API](http://developer.github.com/v3/).\n\nRequest functions (ending
  with `R`) construct a data type with can be executed\nin `IO` by `executeRequest`
  functions. They are all listed in the root `GitHub`\nmodule.\n\nIO functions produce
  an `IO (Either Error a)`, where `a` is the actual thing\nyou want. You must call
  the function using IO goodness, then dispatch on the\npossible error message. Here's
  an example from the samples:\n\nMany function have samples under\n[`samples/`](https://github.com/phadej/github/tree/master/samples)
  directory.\n\n```hs\n{-# LANGUAGE NoImplicitPrelude #-}\n{-# LANGUAGE OverloadedStrings
  #-}\n\nimport Prelude.Compat\n\nimport Data.Text         (Text, pack)\nimport Data.Text.IO
  as T (putStrLn)\nimport Data.Monoid       ((<>))\n\nimport qualified GitHub.Endpoints.Users.Followers
  as GitHub\n\nmain :: IO ()\nmain = do\n    possibleUsers <- GitHub.usersFollowing
  \"mike-burns\"\n    T.putStrLn $ either ((\"Error: \" <>) . pack . show)\n                        (foldMap
  ((<> \"\\n\") . formatUser))\n                        possibleUsers\n\nformatUser
  :: GitHub.SimpleUser -> Text\nformatUser = GitHub.untagName . GitHub.simpleUserLogin\n```\n\nTest
  setup\n==========\n\nTo run integration part of tests, you'll need [github access
  token](https://github.com/settings/tokens/new)\nToken is needed, because unauthorised
  access is highly limited.\nIt's enough to add only basic read access for public
  information.\n\nWith `travis encrypt --org --repo yournick/github \"GITHUB_TOKEN=yourtoken\"`
  command you get a secret,\nyou can use in your travis setup to run the test-suite
  there.\n\nContributions\n=============\n\nPlease see\n[CONTRIBUTING.md](https://github.com/fpco/github/blob/master/CONTRIBUTING.md)\nfor
  details on how you can help.\n\nCopyright\n=========\n\nCopyright 2011-2012 Mike
  Burns.\nCopyright 2013-2015 John Wiegley.\nCopyright 2016 Oleg Grenrus.\n\nAvailable
  under the BSD 3-clause license.\n\n[hackage]: http://hackage.haskell.org/package/github
  \"Hackage\"\n"
license-name: BSD3
