homepage: ''
changelog-type: markdown
hash: 2269804910fcfb0e8f8b518ff9a87ad1832e69aa63a65327d8678ee313dca742
test-bench-deps: {}
maintainer: libraries@haskell.org
synopsis: GHC primitives
changelog: ! "## 0.5.2.0\n\n- Shipped with GHC 8.4.1\n\n- Added to `GHC.Prim`:\n\n
  \       compareByteArrays# :: ByteArray# -> Int# -> ByteArray# -> Int# -> Int# ->
  Int#\n\n- Don't allocate a thunk for each unpacked UTF-8 character in `unpackCStringUtf8#`\n\n##
  0.5.1.1 *November 2017*\n\n- Shipped with GHC 8.2.2\n\n- Changed strictness properties
  of `catchRetry#` (#14171)\n\n## 0.5.1.0 *July 2017*\n\n- Shipped with GHC 8.2.1\n\n-
  Added to `GHC.Prim`:\n\n        fabsDouble# :: Double# -> Double#\n        fabsFloat#
  :: Float# -> Float#\n        isByteArrayPinned# :: ByteArray# -> Int#\n        isMutableByteArrayPinned#
  :: MutableByteArray# s -> Int#\n        anyToAddr# :: a -> State# (RealWorld) ->
  (# State# (RealWorld),Addr# #)\n\n- New primitives for compact regions in `GHC.Prim`:\n\n
  \       Compact#\n        compactNew#\n        compactResize#\n        compactContains#\n
  \       compactContainsAny#\n        compactGetFirstBlock#\n        compactGetNextBlock#\n
  \       compactAllocateBlock#\n        compactFixupPointers#\n        compactAdd#\n
  \       compactAddWithSharing#\n        compactSize#\n\n- Generalised `noDuplicate#`
  from\n\n        noDuplicate# :: State# (RealWorld) -> State# (RealWorld)\n\n    to\n\n
  \       noDuplicate# :: State# s -> State# s\n\n\n## 0.5.0.0\n\n- Shipped with GHC
  8.0.1\n\n- `GHC.Classes`: new `class IP (a :: Symbol) b | a -> b`\n\n- `GHC.Prim`:
  changed type signatures from\n\n        check# :: (State# RealWorld -> (# State#
  RealWorld, a #)) -> State# RealWorld -> (# State# RealWorld, () #)\n        finalizeWeak#
  :: Weak# a -> State# RealWorld -> (# State# RealWorld, Int#, State# RealWorld ->
  (# State# RealWorld, () #) #)\n        mkWeak# :: a -> b -> c -> State# RealWorld
  -> (# State# RealWorld, Weak# b #)\n\n    to\n\n        check# :: (State# RealWorld
  -> (# State# RealWorld, a #)) -> State# RealWorld -> State# RealWorld\n        finalizeWeak#
  :: Weak# a -> State# RealWorld -> (# State# RealWorld, Int#, State# RealWorld ->
  (# State# RealWorld, b #) #)\n        mkWeak# :: a -> b -> (State# RealWorld ->
  (# State# RealWorld, c #)) -> State# RealWorld -> (# State# RealWorld, Weak# b #)\n\n-
  Removed from `GHC.Prim`:\n\n        parAt# :: b -> a -> Int# -> Int# -> Int# ->
  Int# -> c -> Int#\n        parAtAbs# :: a -> Int# -> Int# -> Int# -> Int# -> Int#
  -> b -> Int#\n        parAtForNow# :: b -> a -> Int# -> Int# -> Int# -> Int# ->
  c -> Int#\n        parAtRel# :: a -> Int# -> Int# -> Int# -> Int# -> Int# -> b ->
  Int#\n        parGlobal# :: a -> Int# -> Int# -> Int# -> Int# -> b -> Int#\n        parLocal#
  :: a -> Int# -> Int# -> Int# -> Int# -> b -> Int#\n\n- Added to `GHC.Prim`:\n\n
  \       getSizeofMutableByteArray# :: MutableByteArray# d -> State# d -> (# State#
  d, Int# #)\n        subWordC# :: Word# -> Word# -> (# Word#, Int# #)\n        runRW#
  :: (State# RealWorld -> (# State# RealWorld, o #)) -> (# State# RealWorld, o #)\n\n-
  Added to `GHC.Types`:\n\n        data Module = Module TrName TrName\n        data
  Nat\n        data Symbol\n        data TrName = TrNameS Addr# | TrNameD [Char]\n
  \       data TyCon = TyCon Word# Word# Module TrName\n"
basic-deps:
  rts: ==1.0.*
all-versions:
- '0.3.1.0'
- '0.4.0.0'
- '0.5.0.0'
- '0.5.1.0'
- '0.5.1.1'
- '0.5.2.0'
author: ''
latest: '0.5.2.0'
description-type: haddock
description: This package contains the primitive types and operations supplied by
  GHC.
license-name: BSD-3
