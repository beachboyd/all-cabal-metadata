homepage: https://github.com/carlohamalainen/ghc-imported-from
changelog-type: markdown
hash: 897be10f4b7a4eb05e4f8cbe876eb6ea197382e577cf980569b87b2af0df2f28
test-bench-deps:
  exceptions: -any
  ghc: -any
  bytestring: -any
  ghc-mod: ==5.5.0.0
  Cabal: ! '>=1.18'
  base: ! '>=4.0 && <5'
  monad-journal: -any
  hspec: -any
  syb: -any
  ghc-syb-utils: -any
  filepath: -any
  process: -any
  parsec: -any
  containers: -any
  ghc-paths: -any
  process-streaming: ! '>=0.9.0.0'
  mtl: -any
  transformers: -any
  optparse-applicative: -any
  haddock-api: -any
  hspec-discover: -any
  safe: -any
  directory: -any
maintainer: carlo@carlo-hamalainen.net
synopsis: Find the Haddock documentation for a symbol.
changelog: ! "2016-06-01 v0.3.0.6\n\n* Bugfix - remove duplicates from result of qualifiedNames.\n\n2016-04-12
  v0.3.0.5\n\n* Remove upper bound on pipes-transduce.\n\n2016-04-05 v0.3.0.4\n\n*
  Bugfix: upper bound on pipes-transduce to fix a build error.\n\n2016-04-04 v0.3.0.3\n\n*
  Bugfix: was parsing stderr instead of stdout for some 'stack path' commands.\n*
  Build against process-streaming-0.9.1.0 instead of process-streaming-0.7.2.2.\n\n2016-03-30
  v0.3.0.2\n\n* Bugfix to the bugfix.\n\n2016-03-30 v0.3.0.1\n\n* Bugfix: use process-streaming
  to avoid deadlock on Fedora 23.\n\n2016-03-26 v0.3.0.0\n\n* New heuristics for resolving
  symbols.\n* Compatability with Stack!\n\n2016-01-20 v0.2.1.1\n\n* Builds against
  ghc-mod-5.5.0.0.\n\n2016-01-20 v0.2.1.0\n\n* Builds on GHC 7.10.3 with the latest
  version of ghc-mod\n  that is available on Hackage.\n\n2015-08-17 v0.2.0.7\n\n*
  Added a fall-back case when our resolved qualified name\n  does not match anything.\n\n2014-07-05
  v0.2.0.6\n\n* Use optparse-applicative for argument parsing.\n* Allow digits and
  underscores in module names.\n\n2014-06-01 v0.2.0.5\n\n* Version bound on ghc-mod.\n\n2014-05-22
  v0.2.0.4\n\n* Speedup: factor out calls to getGhcOptionsViaCabalRepl.\n* Bug fix:
  filter out haskell module names from the cabal options list.\n\n2014-05-19 v0.2.0.3\n\n*
  Fixed test cases.\n* Added alternative heuristic for lookup.\n\n2014-05-16 v0.2.0.2\n\n*
  Catch GHC panics.\n* Verbose debug output.\n* Handle case where source file may
  not have a validly define module name\n  but parses correctly regardless. https://github.com/carlohamalainen/ghc-imported-from/issues/15\n\n2014-05-15
  v0.2.0.1\n\n* Link to changelog.md.\n\n2014-05-15 v0.2.0.0\n\n* Builds with GHC
  7.6.3 and 7.8.2.\n* Reduced dependencies on ghc-mod and Cabal internals.\n* GHC
  option discovery using a fake GHC binary.\n* Various tidyups via hlint.\n* Removed
  cabal constraints file.\n\n2014-05-02 v0.1.0.4\n\n* Fix for hashed directory in
  sandbox dist/build; see also\n  https://github.com/carlohamalainen/ghc-imported-from/issues/10\n\n2014-03-03
  v0.1.0.3\n\n* Fix build failure by pinning all package dependencies.\n\n2014-01-26
  v0.1.0.2\n\n* Use more of ghc-mod's API to set the correct GHC command\n  line arguments.\n\n2014-01-24
  v0.1.0.1\n\n* Change module layout to Language.Haskell.GhcImportedFrom\n  to comply
  with hackage.haskell.org guidelines.\n\n2014-01-21 v0.1.0.0\n\n* First version on
  hackage.haskell.org\n"
basic-deps:
  exceptions: -any
  ghc: -any
  bytestring: -any
  ghc-mod: ==5.5.0.0
  Cabal: ! '>=1.18'
  base: ! '>=4.0 && <5'
  monad-journal: -any
  hspec: -any
  syb: -any
  ghc-syb-utils: -any
  filepath: -any
  process: -any
  parsec: -any
  containers: -any
  ghc-paths: -any
  pipes-transduce: -any
  process-streaming: ! '>=0.9.0.0'
  mtl: -any
  transformers: -any
  optparse-applicative: -any
  haddock-api: -any
  hspec-discover: -any
  ghc-imported-from: -any
  safe: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.0.3
- 0.2.0.4
- 0.2.0.5
- 0.2.0.6
- 0.2.0.7
- 0.2.1.0
- 0.2.1.1
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
- 0.3.0.3
- 0.3.0.4
- 0.3.0.5
- 0.3.0.6
author: Carlo Hamalainen
latest: 0.3.0.6
description-type: markdown
description: ! "# ghc-imported-from\n\nFor a given Haskell source file, determine
  the path to the Haddock documentation for a symbol at a particular line/col location.\n\nExample:
  on the file [src/Main.hs](https://github.com/carlohamalainen/ghc-imported-from/blob/master/src/Main.hs),\n\n
  \   ghc-imported-from src/Main.hs Main strOption 18 17\n\nsays\n\n    SUCCESS: file:///home/carlo/.stack/snapshots/x86_64-linux/lts-5.8/7.10.3/doc/optparse-applicative-0.12.1.0/Options-Applicative-Builder.html\n\nsince
  the usage of ```strOption``` at line 18, column 17, is from the ```Options.Applicative.Builder```
  module.\n\nDifficulties arise in resolving names because some symbols are exported
  from a certain\npackage but defined in another, for example ```String``` is defined
  in\n```GHC.Base``` but is exported from the standard prelude, the module\n```Prelude```.
  There are other cases to deal with including qualified\nimports, selective imports,
  imports with hidden components, etc.\n\n## Using with Stack\n\n[Stack](http://docs.haskellstack.org/en/stable/README/)
  makes everything easier.\n\nBuild ghc-imported-from:\n\n    git clone https://github.com/carlohamalainen/ghc-imported-from\n
  \   cd ghc-imported-from\n    stack build\n\nthen add\n\n    `pwd`/.stack-work/install/x86_64-linux/lts-5.8/7.10.3/bin\n\nor
  similar to your ```$PATH```.\n\nThen in a project that you are working on:\n\n    cd
  my-project\n    stack build\n    stack haddock # Must do this!\n    ghc-imported-from
  some/file/Blah.hs Blah f 100 3\n\n### Tests\n\nRun the tests using Stack:\n\n    stack
  test\n\n### ghcimportedfrom-vim\n\nFor Vim users,\nfollow the instructions at\n[https://github.com/carlohamalainen/ghcimportedfrom-vim](https://github.com/carlohamalainen/ghcimportedfrom-vim)\nto
  install the Vim plugin.\n\n### ghc-imported-from-el\n\nFor Emacs users, David Christiansen
  has written [ghc-imported-from-el](https://github.com/david-christiansen/ghc-imported-from-el).\n\n##
  Usage\n\nSee the ```tests``` subdirectory for some examples. Or load your favourite
  Haskell project and hit F4.\n\nOr watch the screencast (be sure to set 720p HD and
  then fullscreen):\n\n[https://www.youtube.com/watch?v=7yO_VGCWMu8](https://www.youtube.com/watch?v=7yO_VGCWMu8)\n\n##
  Notes\n\n```ghc-imported-from``` uses both GHC and ghc-pkg, which\naccept arguments
  in differing formats.  For example GHC takes\n```-package-db``` while ghc-pkg takes
  ```--package-db=```. For more\ndetails: http://www.vex.net/~trebla/haskell/sicp.xhtml\n\n##
  Debugging\n\nTo see the GHC options that have been automatically detected, change
  into your project's directory and run:\n\n    $ cd ~/ghc-imported-from\n    $ cabal
  repl --with-ghc=fake-ghc-for-ghc-imported-from\n    Preprocessing library ghc-imported-from-0.2.0.2...\n
  \   --interactive -fbuilding-cabal-package -O0 -outputdir dist/build -odir dist/build
  -hidir dist/build -stubdir dist/build -i -idist/build -i. -idist/build/autogen -Idist/build/autogen
  -Idist/build -optP-include -optPdist/build/autogen/cabal_macros.h -package-name
  ghc-imported-from-0.2.0.2 -hide-all-packages -no-user-package-db -package-db /home/user/ghc-imported-from/.cabal-sandbox/x86_64-linux-ghc-7.6.3-packages.conf.d
  -package-db dist/package.conf.inplace -package-id Cabal-1.16.0-c6e09e008cd04cf255c1ce0c59aba905
  -package-id base-4.6.0.1-8aa5d403c45ea59dcd2c39f123e27d57 -package-id containers-0.5.0.0-ab1dae9a94cd3cc84e7b2805636ebfa2
  -package-id directory-1.2.0.1-91a788fd88acd7f149f0f10f5f1e23f2 -package-id filepath-1.3.0.1-b12cbe18566fe1532a1fda4c85e31cbe
  -package-id ghc-7.6.3-18957ddbb817289f604552aa2da2e879 -package-id ghc-mod-4.1.0-a87501f2667239b3f0bef3e0f3753496
  -package-id ghc-paths-0.1.0.9-3817f31ae510ed3b58554933ea527b74 -package-id ghc-syb-utils-0.2.1.2-bf72c1e71339c52f0af404a12449c9d2
  -package-id mtl-2.2.0.1-ef91e0abcf7a4fb581ecb7fe83cdcba1 -package-id process-1.1.0.2-76e05340eb66705981411022731ca84a
  -package-id safe-0.3.4-ba52ca348aecad429ba90450e3aba4c4 -package-id syb-0.4.1-9469ffdd9c6a7ebbf035421c915a08ee
  -package-id transformers-0.4.1.0-42810d723884ebf2a2dd638e5b22e523 -XHaskell2010
  Language.Haskell.GhcImportedFrom Language.Haskell.GhcImportedFrom.UtilsFromGhcMod
  Language.Haskell.GhcImportedFrom.Types -Wall\n\n## Alternatives\n\nAs far as I know
  the only alternative is the ```fpco/hoogle-doc``` function in\n[https://www.fpcomplete.com/page/api](https://www.fpcomplete.com/page/api).
  Or try Ctrl-i\nin the web version of FP Complete.\n"
license-name: BSD-3-Clause
