homepage: https://github.com/j-mueller/ghci-websockets
changelog-type: markdown
hash: 47db36db8a9acdfe81d356be1fe5355b1f58e6105674a1b67f4b8e3732997c06
test-bench-deps: {}
maintainer: Jann Müller (j.mueller.11@alumni.ucl.ac.uk)
synopsis: A websocket server that survives GHCi reloads
changelog: |-
  # Changelog

  # 2019-07-14

  * Initial release
basic-deps:
  foreign-store: -any
  base: <=5
  text: -any
  websockets: -any
  containers: -any
  aeson: -any
all-versions:
- 0.0.1
author: Jann Müller
latest: 0.0.1
description-type: markdown
description: "# ghci-websockets\n\nWith `ghci-websockets` you can send data from GHCi
  straight to the browser, using a websocket connection that survives GHCi reloads.
  \n\n![ghci-websockets.gif](ghci-websockets.gif)\n\n## Contents\n\nThe `Ghci.Websockets`
  module implements the actual websocket server, broadcasting JSON objects to all
  clients. `Ghci.Websockets.Simple` adds a custom message type for text, HTML, and
  plots on top of that.\n\n## Quickstart\n\n* Add `ghci-websockets` to the `build-depends`
  field of your .cabal file\n* Run `cabal new-repl`\n* Run `Ghci.Websockets.Simple.initialiseDef`\n*
  Open `html/index.html` in a browser\n* In GHCi, run `Ghci.Websockets.Simple.broadcastText
  \"hello\"` (see also `broadcastHtml` and `broadcastPlot` from the same module).
  You may need `:set -XOverloadedStrings`.\n\n## Warning\n\nThis packages uses the
  `foreign-store` package internally, which is highly unstable. I wouldn't use `ghci-websockets`
  for anything other than GHCi.\n\n## License\n\nBSD-3-Clause, see LICENSE\n\n## Contributions\n\nBug
  reports, pull requests etc. are welcome!\n"
license-name: BSD-3-Clause
