homepage: https://github.com/j-mueller/ghci-websockets
changelog-type: markdown
hash: fae456e2e9a193407fff16649fd6f3d423790bb69abaf4a8094316b3955dab78
test-bench-deps: {}
maintainer: Jann Müller (j.mueller.11@alumni.ucl.ac.uk)
synopsis: A websocket server that survives GHCi reloads
changelog: |-
  # Changelog

  # v0.0.2 (2019-07-16)

  * Rename `broadcast` -> `send`
  * Better module layout
  * Server the index.html page over HTTP

  # v0.0.1 (2019-07-14)

  * Initial release
basic-deps:
  warp: -any
  foreign-store: -any
  bytestring: -any
  wai: -any
  base: <=5
  text: -any
  websockets: -any
  containers: -any
  wai-app-static: -any
  aeson: -any
all-versions:
- 0.0.1
- 0.0.2
author: Jann Müller
latest: 0.0.2
description-type: markdown
description: "# ghci-websockets\n\nWith `ghci-websockets` you can send data from GHCi
  straight to the browser, using a websocket connection that survives GHCi reloads.
  \n\n![ghci-websockets.gif](ghci-websockets.gif)\n\n## Contents\n\nThe `Ghci.Server.Websockets`
  module implements the actual websocket server, sending JSON objects to all clients.
  `Ghci.Server.Http` servers the index.html page that goes with the messages defined
  in `Ghci.Websockets.Message`.\n\n## Quickstart\n\n* Add `ghci-websockets` to the
  `build-depends` field of your .cabal file\n* Run `cabal new-repl`\n* Run `Ghci.Server.start`\n*
  Open `localhost:3000` in a browser\n* In GHCi, run `Ghci.Server.sendText \"hello\"`
  (see also `sendHtml` and `sendPlot` from the same module). You may need `:set -XOverloadedStrings`.\n\n##
  Warning\n\nThis packages uses the `foreign-store` package internally, which is highly
  unstable. I wouldn't use `ghci-websockets` for anything other than GHCi.\n\n## License\n\nBSD-3-Clause,
  see LICENSE\n\n## Contributions\n\nBug reports, pull requests etc. are welcome!\n"
license-name: BSD-3-Clause
