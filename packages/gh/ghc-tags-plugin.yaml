homepage: https://github.com/coot/ghc-tags-plugin#readme
changelog-type: markdown
hash: 07cafefa5b0ae2957803168791e0c62417d6d3ad2ca94e8811a49f82856c4387
test-bench-deps: {}
maintainer: profunctor@pm.me
synopsis: A compiler plugin which generates tags file from GHC syntax tree.
changelog: |
  # Revision history for ghctags

  ## 0.1.0.0 -- YYYY-mm-dd

  * First version. Released on an unsuspecting world.
basic-deps:
  ghc: ! '>=8.4 && <8.9'
  bytestring: ^>=0.10
  base: ^>=4.12.0.0
  containers: ^>=0.6
  attoparsec: ^>=0.13.0.0
  directory: ^>=1.3
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Marcin Szamotulski
latest: 0.1.0.1
description-type: markdown
description: |
  # Ghc Tags Compiler Plugin
  A [Ghc Compiler Plugin](https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/extending_ghc.html#compiler-plugins)
  which generates tags for each compiled module or component.  The source tree is
  [left unmodified](https://github.com/coot/ghc-tags-plugin/blob/master/lib/Plugin/GhcTags.hs#L79).

  # Usage
  ```
  ghc -plugin-package=ghc-tags-plugin -fplugin=Plugin.GhcTags
  ```

  If you're using `cabal`, at this point you will need to add `ghctags` to every
  'build-depends' in every `*.cabal` file.  That's unfortunate state of the
  eco-system right now.  You can add `ghc-options` to your `cabal.project.local`
  file for each cabal project, e.g. (note that you'll need to update the
  `CURRENT_GIT_TAG` below)

  ```
  project someproject
      ghc-options: -fplugin=Plugin.GhcTags


  source-repository-package
    type: git
    location: /home/coot/repos/haskell/ghc-tags-plugin
    tag: CURRENT_GIT_TAG
    subdir: .

  ```

  A `tags` file will be created (or destructively updated) in each project
  directory (the same as its `cabal` file).
license-name: MPL-2.0
