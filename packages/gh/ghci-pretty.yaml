homepage: https://github.com/larskuhtz/ghci-pretty
changelog-type: ''
hash: 5f6c2a9f1d391aa0ad3c3d0bfe1f39decfe94be50fbf5a5279e2dbc18f8b4c51
test-bench-deps: {}
maintainer: Lars Kuhtz <lakuhtz@gmail.com>
synopsis: colored pretty-printing within ghci
changelog: ''
basic-deps:
  base: ==4.*
  ipprint: ! '>=0.5'
  hscolour: ! '>=1.20'
all-versions:
- 0.0.1
- 0.0.2
author: Lars Kuhtz
latest: 0.0.2
description-type: markdown
description: ! '[![Build Status](https://travis-ci.org/larskuhtz/ghci-pretty.svg?branch=master)](https://travis-ci.org/larskuhtz/ghci-pretty)


  A tiny package that combines the [ipprint](https://hackage.haskell.org/package/ipprint)

  package and the [hscolour](https://hackage.haskell.org/package/hscolour)

  package to provide colored pretty-printing in ghci.


  Here is all the code from this package:


  ```.haskell

  module IPPrint.Colored

  ( cpprint

  ) where


  import IPPrint

  import Language.Haskell.HsColour

  import Language.Haskell.HsColour.Colourise

  import Language.Haskell.HsColour.Output


  cpprint :: Show a => a -> IO ()

  cpprint = putStrLn . hscolour (TTYg XTerm256Compatible) defaultColourPrefs False
  False "" False . pshow

  ```


  Usage

  =====


  ```.haskell

  cabal update

  cabal install ghci-pretty

  ```


  Add the following lines to your `ghci.conf` file:


  ```.haskell

  -- Pretty printing of it

  import IPPrint.Colored

  :set -interactive-print=IPPrint.Colored.cpprint

  :def cp (\_ -> return ":set -interactive-print=IPPrint.Colored.cpprint")

  :def ncp (\_ -> return ":set -interactive-print=print")

  ```


  Now you can enable colored pretty-printing in ghci with the commmand


  ```.haskell

  :cp

  ```


  The following command turns colored pretty-printing off again


  ```.haskell

  :ncp

  ```

'
license-name: MIT
