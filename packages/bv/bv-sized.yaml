homepage: https://github.com/GaloisInc/bv-sized
changelog-type: markdown
hash: 86c2539cdbcca502f6bcda866b198c48730314a35a7eec9d74141b30b1dc451c
test-bench-deps:
  base: ! '>=4.7 && <5'
  bv-sized: -any
  lens: ! '>=4 && <5'
  random: ! '>=1.1 && <1.2'
  QuickCheck: ! '>=2.11 && <2.12'
  pretty: -any
  parameterized-utils: -any
maintainer: benselfridge@galois.com
synopsis: a BitVector datatype that is parameterized by the vector width
changelog: |
  # Changelog for [`bv-sized` package](http://hackage.haskell.org/package/bv-sized)

  ## 0.7.0 *April 2019*
    * extractWithRepr now takes a NatRepr as an argument to specify the index, which it
      always should have.
    * Updated to recent parameterized-utils hackage release, which fixes the build
      failures in the previous bv-sized release.

  ## 0.6.0 *March 2019*
    * changed WithRepr functions to '
    * added Num, Bits instances
    * bitVector now takes arbitrary Integral argument
    * add 'bitLayoutAssignmentList' function (see haddocks for details
    * Hid BV constructor, exposed BitVector as pattern

  ## 0.5.1 *August 2018*
    * fixed github URL

  ## 0.5.0 *August 2018*
    * Added a lot of better support for the App module, including a type class for
      embedding BVApp expressions along with associated smart constructors

  ## 0.4.0 *April 2018*
    * Added App module for BitVector expression languages and evaluation

  ## 0.3.0 *April 2018*
    * fixed bug with bvShiftR, it was doing a left shift!
    * Division now rounds to zero for negative integers, bvDiv -> bvQuot
    * added Ix instance for BitVector w
    * added bv0, zero-width vector
    * bvConcatMany, bvGetBytesU (conversion to/from list of bytes)

  ## 0.2.1 *March 2018*
    * bvMulFSU
    * bvDivU, bvDivS
    * Added Read instance, fixed Show to be compatible. Using prettyclass for
      pretty printing. (I guess this is semi-breaking, but whatever.)

  ## 0.2 *March 2018*
    * bv -> bitVector, so this is very much a breaking change
    * bvShiftL, bvShiftRL, bvShiftRA
    * bvLTU, bvLTS

  ## 0.1.1.1 *March 2018*
    * added BitLayout

  ## 0.1.1.0 *March 2018*
    * added functions `bvMulFS`/`bvMulFU` for full bitvector multiplication
      without truncation
    * removed Internal module, now export all those functions in Data.BitVector.Sized
    * fixed the bv*WithRepr functions, which were not truncating the inputs properly

  ## 0.1.0.0 *March 2018*
    * First release
basic-deps:
  base: ! '>=4.7 && <5'
  containers: ! '>=0.5.10 && <0.7'
  lens: ! '>=4 && <5'
  mtl: ! '>=2 && <3'
  random: ! '>=1.1 && <1.2'
  QuickCheck: ! '>=2.11 && <2.12'
  pretty: -any
  parameterized-utils: ! '>=2.0 && <3'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.2.0
- 0.2.1
- 0.3.0
- 0.4.0
- 0.5.0
- 0.6.0
- 0.7.0
author: Ben Selfridge
latest: 0.7.0
description-type: markdown
description: |
  bv-sized - A Haskell library for manipulating width-parameterized bitvectors
  ===

  copyright (c) Ben Selfridge, Galois Inc. 2018

  This library defines a `BitVector` datatype that is parameterized by the vector
  width.

  Requirements
  ===

  The following are a list of mandatory and secondary requirements for bv-sized.

  Mandatory Requirements
  ===

  - Must support integer arithmetic on bitvectors of arbitrary width, assuming a
    two's-complement representation.

  - Must support the construction of symbolic expressions involving bitvectors,
    and evaluating those expressions in such a way that the "pure" bitvector
    expression language can be embedded in a larger expression language. (See
    Data.BitVector.Sized.App)

  - Declarative descriptions of bit encodings within an instruction word for the
    purposes of ISA definitions and the like. (See Data.BitVector.Sized.BitLayout)

  Secondary Requirements
  ===

  None.

  Current Status
  ===

  The library is relatively stable and supports all the above requirements.

  Other information
  ===

  * contact: benselfridge@galois.com
license-name: BSD-3-Clause
