homepage: https://github.com/benjaminselfridge/bv-sized
changelog-type: markdown
hash: 374e74b7f605aac6189a4149da6216efe944f4e342c7242a2bf63893f7a71b8d
test-bench-deps:
  base: ! '>=4.7 && <5'
  bv-sized: -any
  prettyclass: ! '>=1.0 && <2.0'
  lens: ! '>=4 && <5'
  random: ! '>=1.1 && <1.2'
  QuickCheck: ! '>=2.11 && <2.12'
  parameterized-utils: -any
maintainer: benselfridge@galois.com
synopsis: a BitVector datatype that is parameterized by the vector width
changelog: ! "# Changelog for [`bv-sized` package](http://hackage.haskell.org/package/bv-sized)\n\n##
  0.1.0.0 *March 2018*\n  * First release\n\n## 0.1.1.0 *March 2018*\n  * added functions
  `bvMulFS`/`bvMulFU` for full bitvector multiplication\n    without truncation\n
  \ * removed Internal module, now export all those functions in Data.BitVector.Sized\n
  \ * fixed the bv*WithRepr functions, which were not truncating the inputs properly\n\n##
  0.1.1.1 *March 2018*\n  * added BitLayout\n\n## 0.2 *March 2018*\n  * bv -> bitVector,
  so this is very much a breaking change\n  * bvShiftL, bvShiftRL, bvShiftRA\n  *
  bvLTU, bvLTS\n\n## 0.2.1 *March 2018*\n  * bvMulFSU\n  * bvDivU, bvDivS\n  * Added
  Read instance, fixed Show to be compatible. Using prettyclass for\n    pretty printing.
  (I guess this is semi-breaking, but whatever.)\n"
basic-deps:
  base: ! '>=4.7 && <5'
  prettyclass: ! '>=1.0 && <2.0'
  containers: ! '>=0.5.11 && <0.6'
  lens: ! '>=4 && <5'
  random: ! '>=1.1 && <1.2'
  QuickCheck: ! '>=2.11 && <2.12'
  parameterized-utils: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.1.1'
- '0.2.0'
- '0.2.1'
author: Ben Selfridge
latest: '0.2.1'
description-type: markdown
description: ! '# bv-sized


  This library defines a BitVector datatype that is parameterized by the vector

  width.


  It is especially useful in applications where the length of every individual bit

  vector will be known at compile time. Supports width-changing operations like

  truncation, signed/unsigned extension, and extraction/bit slicing.

'
license-name: BSD3
