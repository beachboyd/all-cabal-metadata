homepage: ''
changelog-type: ''
hash: 8487671370c2f548e9f9f2869acf09d712fcdf7b490efd1b0e562c177ed329f0
test-bench-deps: {}
maintainer: Marc Fontaine <Marc.Fontaine@gmx.de>
synopsis: Firing rules semantic of CSPM
changelog: ''
basic-deps:
  base: ! '>=4.0 && <5.0'
  CSPM-CoreLanguage: ! '>=0.3 && <0.4'
  containers: ! '>=0.5 && <0.6'
  tree-monad: ! '>=0.3 && <0.4'
  mtl: ! '>=2.1 && <2.3'
  parallel-tree-search: ! '>=0.4 && <0.5'
  random: ! '>=1.0 && <1.2'
  QuickCheck: ! '>=2.6 && <2.11'
all-versions:
- '0.1.0.0'
- '0.3.0.3'
- '0.4.0.0'
- '0.4.1.2'
- '0.4.2.0'
- '0.4.3.0'
- '0.4.4.0'
author: 2010 - 2017 Marc Fontaine <Marc.Fontaine@gmx.de>
latest: '0.4.4.0'
description-type: markdown
description: ! '# CSPM-FiringRules


  This package contains functions for computing the transitions of a CSP process

  based on the standard CSP firing rule semantic

  (see The Theory and Practice of Concurrency A.W. Roscoe 1999.)

  It also contains a rudimentary tracer for executing transitions,

  some QuickCheck tests, and a data type for proof trees.

  To use this package one has to provide instances for the classes and type families,

  defined in the CSPM-CoreLanguage package.

  The package contains two mock-implementations that provide these instances.

  The CSPM-Interpreter package contains an other implementation.


  ## [Haddock documentation](http://hackage.haskell.org/package/CSPM-FiringRules)'
license-name: BSD3
