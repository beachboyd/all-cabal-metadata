homepage: https://github.com/ndmitchell/js-jquery#readme
changelog-type: text
hash: 59ab6c79159549ef94b584abce8e6d3b336014c2cce1337b59a8f637e2856df5
test-bench-deps:
  base: ==4.*
  js-jquery: -any
  HTTP: -any
maintainer: Neil Mitchell <ndmitchell@gmail.com>
synopsis: Obtain minified jQuery code
changelog: ! "Changelog for js-jquery\n\n3.3.1, released 2018-01-21\n    New version
  of jQuery\n    #1, add a file-embed example\n3.2.1, released 2017-03-22\n    New
  version of jQuery\n3.1.1, released 2016-10-01\n    New version of jQuery\n3.1.0,
  released 2016-07-09\n    New version of jQuery\n3.0.0, released 2016-06-11\n    New
  version of jQuery\n1.12.4, released 2016-05-22\n    New version of jQuery\n1.12.3,
  released 2016-04-06\n    New version of jQuery\n1.12.2, released 2016-03-23\n    New
  version of jQuery\n1.12.1, released 2016-02-23\n    New version of jQuery\n1.12.0,
  released 2016-01-10\n    New version of jQuery\n1.11.3, released 2015-05-06\n    New
  version of jQuery\n1.11.2, released 2014-12-24\n    New version of jQuery\n1.11.1,
  released 2014-10-06\n    Initial version\n"
basic-deps:
  base: ==4.*
all-versions:
- 1.11.1
- 1.11.2
- 1.11.3
- 1.12.0
- 1.12.1
- 1.12.2
- 1.12.3
- 1.12.4
- 3.0.0
- 3.1.0
- 3.1.1
- 3.2.1
- 3.3.1
author: Neil Mitchell <ndmitchell@gmail.com>
latest: 3.3.1
description-type: markdown
description: ! "# js-jquery [![Hackage version](https://img.shields.io/hackage/v/js-jquery.svg?label=Hackage)](https://hackage.haskell.org/package/js-jquery)
  [![Build Status](https://img.shields.io/travis/ndmitchell/js-jquery.svg)](https://travis-ci.org/ndmitchell/js-jquery)\n\nThis
  package bundles the minified [jQuery](http://jquery.com/) code into a Haskell package,\nso
  it can be depended upon by Cabal packages. The first three components of\nthe version
  number match the upstream jQuery version. The package is designed\nto meet the redistribution
  requirements of downstream users (e.g. Debian).\nAs an example:\n\n```haskell\nimport
  qualified Language.Javascript.JQuery as JQuery\n\nmain = do\n    putStrLn $ \"jQuery
  version \" ++ show JQuery.version ++ \" source:\"\n    putStrLn =<< readFile =<<
  JQuery.file\n```\n\nThis package installs data files containing the jQuery sources,
  which must be available at runtime. If you want to produce an executable with no
  dependency on associated data files, you can use the [`file-embed`](https://hackage.haskell.org/package/file-embed)
  library:\n\n```haskell\n{-# LANGUAGE TemplateHaskell #-}\n\nimport Data.FileEmbed\nimport
  qualified Data.ByteString as BS\nimport qualified Language.Javascript.JQuery as
  JQuery\nimport Language.Haskell.TH.Syntax\n\nmain = print jQueryContents\n\njQueryContents
  :: BS.ByteString\njQueryContents = $(embedFile =<< runIO JQuery.file)\n```\n\nOr,
  within the Yesod framework, [yesod-static](https://hackage.haskell.org/package/yesod-static):\n\n```haskell\n{-#
  LANGUAGE TemplateHaskell, QuasiQuotes, TypeFamilies #-}\n\nimport Yesod\nimport
  Yesod.EmbeddedStatic\nimport qualified Language.Javascript.JQuery as JQuery\n\ndata
  MySite = MySite {\n    ...\n    , getStatic :: EmbeddedStatic\n    ...\n    }\n\n--
  Create a Route `jquery_js` to a statically-serveable version of the local jQuery
  lib.\nmkEmbeddedStatic False \"myStatic\" . pure . embedFileAt \"jquery.js\" =<<
  runIO JQuery.file\n\nmkYesod \"PresentationServer\" [parseRoutes|\n/ HomeR Get\n...\n/static
  StaticR EmbeddedStatic getStatic\n|]\ninstance Yesod PresentationServer where\n
  \ addStaticContent = embedStaticContent getStatic StaticR Right\n\ngetHomeR :: Handler
  Html\ngetHomeR = defaultLayout $ do\n   addScript $ StaticR jquery_js\n   ...\n\n```\n(See
  also [`sample-embed.hs`](https://github.com/yesodweb/yesod/blob/master/yesod-static/sample-embed.hs).)\n"
license-name: MIT
