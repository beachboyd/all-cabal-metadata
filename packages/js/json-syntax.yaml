homepage: https://github.com/andrewthad/json-syntax
changelog-type: markdown
hash: 132d3547214a9230481bfaf61d1e2e2583d3b69f6c5d0e7c0a0e8018a74180a8
test-bench-deps:
  bytestring: -any
  text-short: -any
  base: ! '>=4.12.0.0 && <5'
  small-bytearray-builder: -any
  unordered-containers: -any
  text: ! '>=1.2'
  gauge: -any
  json-syntax: -any
  array-chunks: -any
  byteslice: ! '>=0.1.3'
  tasty-hunit: ! '>=0.10.0.2 && <0.11'
  tasty: ! '>=1.2.3 && <1.3'
  scientific: -any
  scientific-notation: ! '>=0.1.1'
  aeson: -any
  primitive: -any
  vector: -any
  neat-interpolation: ! '>=0.3.2'
maintainer: andrew.thaddeus@gmail.com
synopsis: High-performance JSON parser
changelog: |
  # Revision history for json-syntax

  ## 0.1.0.0 -- 2020-01-20

  * Initial release.
basic-deps:
  bytestring: ! '>=0.10.8 && <0.11'
  text-short: ! '>=0.1.3 && <0.2'
  base: ! '>=4.12 && <5'
  array-chunks: ! '>=0.1.1 && <0.2'
  byteslice: ! '>=0.1.3 && <0.3'
  array-builder: ! '>=0.1 && <0.2'
  scientific-notation: ! '>=0.1.1 && <0.2'
  primitive: ! '>=0.7 && <0.8'
  bytesmith: ! '>=0.3.2 && <0.4'
all-versions:
- 0.1.0.0
author: Andrew Martin
latest: 0.1.0.0
description-type: haddock
description: |-
  This library parses JSON into a @Value@ type that is consistent with the
  ABNF described in [RFC 7159](https://tools.ietf.org/html/rfc7159). The
  parser is about six times faster than the parser that `aeson` provides.
  This parser is however, non-resumable, so if resumable parsing is
  important, `aeson` should be preferred.

  This library does not include any functions or typeclasses to help users
  marshal `Value` to their application-specific data types. Such functions
  and typeclasses are outside the scope of this library. If anyone writes a
  library that offers users these conveniences open a issue so that the
  @json-syntax@ documentation can point users to it.
license-name: BSD-3-Clause
