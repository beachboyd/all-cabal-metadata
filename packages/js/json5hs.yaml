homepage: ''
changelog-type: ''
hash: da9b882f7f8e5d35b529c8353f111cabe4867ff1dadb6f11e2ba672aace7c852
test-bench-deps: {}
maintainer: sakamitz@yahoo.co.jp
synopsis: Serialising to and from JSON5
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4 && <5'
  text: -any
  syb: ! '>=0.3.3'
  array: -any
  containers: -any
  mtl: -any
  pretty: -any
all-versions:
- 0.1.0.0
- 0.1.2.0
- 0.1.2.1
- 0.1.2.2
author: Yang X. Nan
latest: 0.1.2.2
description-type: markdown
description: "# json5hs: Serialising to and from JSON5\n\n[![Hackage](https://img.shields.io/hackage/v/json5hs?color=blue)](https://hackage.haskell.org/package/json5hs)
  [![Build Status](https://img.shields.io/badge/Hackage%20CI-avaliable-brightgreen)](https://matrix.hackage.haskell.org/#/package/json5hs)\n\n---\n\nThis
  library provides a parser and pretty printer for converting\nbetween Haskell values
  and JSON5.\n\n## Example\n\n```haskell\nghci> import Text.JSON5\nghci> encode [(\"key1\",1),(\"key2\",2)]\n\"[[\\\"key1\\\",1],[\\\"key2\\\",2]]\"\n\nghci>
  import Text.JSON5.String (runGetJSON)\nghci> input <- getLine \n{'singleQuotes':
  0xabcde, pos: +3, infnan: +Infinity, escape: \"\\t\\u1234\", trailing-comma: ['here',],
  }\nghci> runGetJSON readJSValue input\nRight (JSObject (JSONObject {fromJSObject
  = [(\"singleQuotes\",JSNumber (JSRational (703710 % 1))),(\"pos\",JSNumber (JSRational
  (3 % 1))),(\"infnan\",JSNumber (JSInfNaN Infinity)),(\"escape\",JSString (JSONString
  {fromJSString = \"\\t\\4660\"})),(\"trailing-comma\",JSArray [JSString (JSONString
  {fromJSString = \"here\"})])]}))\n\nghci> import Text.JSON5.Pretty\nghci> ppJSValue
  $ makeObj [(\"key1\", JSString $ toJSString \"value1\"), (\"key2\", JSArray [JSNull,
  JSBool True])]\n{\"key1\": \"value1\", \"key2\": [null, true]}\n\nghci> import Text.JSON5.Generic\nghci>
  ppJSValue $ toJSON $ Just [2,1,4]\n{\"Just\": [2, 1, 4]}\nghci> fromJSON (JSString
  $ toJSString \"string\") :: Result String \nOk \"string\"\n```\n\n"
license-name: BSD-3-Clause
