homepage: ''
changelog-type: ''
hash: 1d7e4a66a01a9c0564f12a8ec57e548f907524abefb4d210b7cf0f65d90a0940
test-bench-deps: {}
maintainer: sakamitz@yahoo.co.jp
synopsis: Serialising to and from JSON5
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4 && <5'
  text: -any
  syb: ! '>=0.3.3'
  array: -any
  containers: -any
  mtl: -any
  pretty: -any
all-versions:
- 0.1.0.0
- 0.1.2.0
author: Yang X. Nan
latest: 0.1.2.0
description-type: markdown
description: "<div align=\"center\">\n<h1>json5hs: Serialising to and from JSON5</h1>\n<p>\n
  \     <a href=\"https://hackage.haskell.org/package/json5hs\"><img src=\"https://img.shields.io/hackage/v/json5hs?color=blue\"
  alt=\"Hackage\"></a>\n      <a href=\"https://matrix.hackage.haskell.org/#/package/json5hs\"><img
  src=\"https://img.shields.io/badge/Hackage%20CI-avaliable-brightgreen\" alt=\"Build\"></a>\n</p>\n</div>\n\n---\n\nThis
  library provides a parser and pretty printer for converting\nbetween Haskell values
  and JSON5.\n\n## Example\n\n```haskell\nghci> import qualified Text.JSON5 as J\nghci>
  J.encode [(\"key1\",1),(\"key2\",2)]\n\"[[\\\"key1\\\",1],[\\\"key2\\\",2]]\"\n\nghci>
  import Text.JSON5.String (runGetJSON)\nghci> input <- getLine \n{'singleQuotes':
  0xabcde, pos: +3, infnan: +Infinity, escape: \"\\t\\u1234\", trailing-comma: ['here',],
  }\nghci> runGetJSON J.readJSValue input\nRight (JSObject (JSONObject {fromJSObject
  = [(\"singleQuotes\",JSNumber (JSRational (703710 % 1))),(\"pos\",JSNumber (JSRational
  (3 % 1))),(\"infnan\",JSNumber (JSInfNaN Infinity)),(\"escape\",JSString (JSONString
  {fromJSString = \"\\t\\4660\"})),(\"trailing-comma\",JSArray [JSString (JSONString
  {fromJSString = \"here\"})])]}))\n\nghci> ppJSValue (JSObject (JSONObject [(\"key1\",JSString
  (JSONString \"string\")),(\"key2\",JSNumber (JSRational 42)),(\"key3\",JSArray [JSBool
  True,JSNull])]))\n{\"key1\": \"string\", \"key2\": 42, \"key3\": [true, null]}\n\n```\n\n"
license-name: BSD-3-Clause
