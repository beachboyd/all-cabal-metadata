homepage: http://github.com/mikesteele81/win32-dhcp-server
changelog-type: text
hash: 4b772c28980a21c1df525f168094d9f6f11822739554e05daef6c98d71c45ec8
test-bench-deps: {}
maintainer: mikesteele81@gmail.com
synopsis: Win32 DHCP Server Management API
changelog: ! "0.3.2\r\n=====\r\n\r\n* internal code documentation\r\n* small internal
  code refactorings\r\n\r\n0.3.1\r\n=====\r\n\r\n* updated documentation\r\n* internal
  refactoring\r\n\r\n0.3\r\n===\r\n\r\n* Update to support GHC 7.6 - 7.10\r\n* Expose
  freeDHCP function\r\n\r\n0.2.1\r\n=====\r\n\r\n* bug fix: Internal memory structures
  were not being freed properly.\r\n\r\n0.2\r\n===\r\n\r\n* All functions throw Win32Exception
  exceptions.\r\n* strict Text values are favored over String\r\n* drop dependency
  on safe\r\n"
basic-deps:
  Win32-errors: ! '>=0.2 && <0.3'
  base: ! '>=4.6 && <4.9'
  text: ! '>=0.11 && <1.3'
  Win32: ! '>=2.2 && <2.4'
all-versions:
- 0.2.1
- '0.3'
- 0.3.1
- 0.3.2
author: Michael Steele
latest: 0.3.2
description-type: haddock
description: ! 'This package provides a partial binding to the Win32 DHCP Server Management

  API. Its purpose is to query and control a Microsoft DHCP server. Enough

  functionality is defined so so that Ipv4 client lease and reservation

  records can be manipulated programmatically._Only 32-bit versions of GHC are

  supported at this time._


  Here are a few notes on the required environment:


  * Only 32-bit executables are supported. This is mainly because pointers

  are assumed to be 4 bytes wide in a few places. Support for 64-bit

  executables may be added in the future.


  * All library calls should be supported on Windows 7 or above.


  /Simple Example and Usage/


  @

  \-\- Print all MAC addresses with an active client lease

  module Main where


  import Data.Ip

  import Data.Mac

  import qualified Data.Text.IO as T

  import System.Win32.DHCP


  main :: IO ()

  main = do

  &#x20;   api <- loadDHCP

  &#x20;   clients <- enumClients api context

  &#x20;   let macs = map (showMac \":\" . clientHardwareAddress) clients

  &#x20;   mapM_ T.putStrLn macs

  &#x20; where

  &#x20;   Right subnet = readIp \"192.168.1.0\"

  &#x20;   context = Context \"192.168.1.5\" subnet

  @'
license-name: BSD-3-Clause
