homepage: https://github.com/haskell-works/hw-fingertree#readme
changelog-type: ''
hash: f9ede1f29a1b4de374ab72452fb310c6320ba1bd8fee50c2d785b8dcdd076600
test-bench-deps:
  base: ! '>=4 && <5'
  hspec: ! '>=2.4 && <3.0'
  hw-fingertree: -any
  hedgehog: ! '>=0.6 && <1.1'
  deepseq: ! '>=1.4 && <1.5'
  hw-hspec-hedgehog: ! '>=0.1 && <0.2'
maintainer: John Ky <newhoggy@gmail.com>
synopsis: Generic finger-tree structure, with example instances
changelog: ''
basic-deps:
  base: ! '>=4 && <5'
  hw-prim: ! '>=0.6.2.25 && <0.7'
  deepseq: ! '>=1.4 && <1.5'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.1.0
- 0.1.1.1
author: ''
latest: 0.1.1.1
description-type: haddock
description: |-
  A general sequence representation with arbitrary
  annotations, for use as a base for implementations of
  various collection types, with examples, as described
  in section 4 of

  * Ralf Hinze and Ross Paterson,
  \"Finger trees: a simple general-purpose data structure\",
  /Journal of Functional Programming/ 16:2 (2006) pp 197-217.
  <http://staff.city.ac.uk/~ross/papers/FingerTree.html>

  For a tuned sequence type, see @Data.Sequence@ in the
  @containers@ package, which is a specialization of
  this structure.
license-name: BSD-3-Clause
