homepage: https://github.com/haskell-works/hw-fingertree#readme
changelog-type: ''
hash: 1e8a72d83ebe35572b5be9f3f741c01a07b53d46f6ef479a9727a5493ea18187
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  base: ! '>=4.2 && <6'
  hspec: -any
  hw-fingertree: -any
  test-framework-quickcheck2: -any
  hedgehog: -any
  HUnit: -any
  deepseq: -any
  QuickCheck: -any
  hw-hspec-hedgehog: -any
maintainer: John Ky <newhoggy@gmail.com>
synopsis: Generic finger-tree structure, with example instances
changelog: ''
basic-deps:
  base: <6
  deepseq: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
author: ''
latest: 0.1.0.1
description-type: haddock
description: ! 'A general sequence representation with arbitrary

  annotations, for use as a base for implementations of

  various collection types, with examples, as described

  in section 4 of


  * Ralf Hinze and Ross Paterson,

  \"Finger trees: a simple general-purpose data structure\",

  /Journal of Functional Programming/ 16:2 (2006) pp 197-217.

  <http://staff.city.ac.uk/~ross/papers/FingerTree.html>


  For a tuned sequence type, see @Data.Sequence@ in the

  @containers@ package, which is a specialization of

  this structure.'
license-name: BSD-3-Clause
