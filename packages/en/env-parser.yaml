homepage: http://github.com/tel/env-parser
changelog-type: text
hash: d5d63a544338a943458ab2a462b24f884ad0ba4c6e9f750acc3e0bc77446380d
test-bench-deps: {}
maintainer: me@jspha.com
synopsis: Pull configuration information from the ENV
changelog: ! "0.0.2       Joseph Abrahamson <me@jspha.com>\n\t* Interface: solidified
  the basic interface for building and executing on a\n\t\t`Parser` type.\n\t* Interface:
  introduced new convenience methods for interpreting the\n\t\t`Errors` and `Analysis`
  types.\n\t* Documentation: rewrote the README and Haddock documentation to be easier\n\t\tto
  understand and provide working examples.\n\n\n2014-01-18  Joseph Abrahamson <me@jspha.com>\t\n\t*
  src/System/Environment/Parser/Internal.hs: Introduced flexible environment structure
  designed for multiple implementations for IO and testing.\n\t* src/System/Environment/Parser/Internal.hs:
  Added dependency search\n\t* src/System/Environment/Parser/Internal.hs: FromEnv
  parsers for numbers and string types\n\t* src/System/Environment/Parser/Database.hs:
  Introduced DBConnection type with FromEnv instance\n\t* src/System/Environment/Parser/Internal.hs:
  Introduced FromEnv for Data.Time types\n\t* src/System/Environment/Parser/Encoded.hs:
  \ Added encoded bytestring types\n\t* src/System/Environment/Parser/Internal.hs:
  Introduced Aeson Value FromEnv instances\n\t* src/System/Environment/Parser/Encoded.hs:
  \ Added To/FromJSON instances for Encoded bytestrings\n\t* src/System/Environment/Parser/Internal.hs:
  Added envParse\n"
basic-deps:
  bytestring: ! '>=0.10'
  base: ! '>=4.6 && <4.7'
  time: ! '>=1.4'
  base64-bytestring: ! '>=1.0'
  text: ! '>=0.11'
  network: ! '>=2.4'
  containers: ! '>=0.4'
  old-locale: ! '>=1.0'
  mtl: ! '>=2.1'
  base16-bytestring: ! '>=0.1.1'
  attoparsec: ! '>=0.10'
  transformers: ! '>=0.3'
  http-types: ! '>=0.8'
  aeson: ! '>=0.6'
all-versions:
- 0.0.1.0
- 0.0.1.1
- 0.0.2
- 0.0.2.1
author: Joseph Abrahamson
latest: 0.0.2.1
description-type: haddock
description: ! '@env-parser is a small library for configuring programs based on information

  from the environment. It''s goals and design are similar to that of @cmdargs@

  or @optparse-applicative@ but aimed at automatically managed programs such as

  those that might be run via Heroku or Runit/daemontools.


  @env-parser@ intentionally sacrifices power for comprehensibility---the

  primary interface, @Parser@, implements only @Applicative@. This provides

  better runtime error messages and automatically generated static help using

  parser annotations. It also expresses a principle of simplicity in

  configuration: arbitrary uses of @Monad@ or even @Alternative@ can lead to

  opaque failures prior to a program even beginning to run.'
license-name: MIT
