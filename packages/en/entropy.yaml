homepage: https://github.com/TomMD/entropy
changelog-type: ''
hash: ea535d5cc77b378a22c88e909d7554f539ad1cc495aaf0e847e0c4eb7ff7a5c3
test-bench-deps: {}
maintainer: Thomas DuBuisson <thomas.dubuisson@gmail.com>
synopsis: A platform independent entropy source
changelog: ''
basic-deps:
  bytestring: -any
  unix: -any
  base: ! '>=4.8 && <5'
all-versions:
- '0.1'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.2.2.1'
- '0.2.2.2'
- '0.2.2.3'
- '0.2.2.4'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.4.1'
- '0.3.5'
- '0.3.6'
- '0.3.7'
- '0.3.8'
- '0.4'
author: Thomas DuBuisson <thomas.dubuisson@gmail.com>
latest: '0.4'
description-type: markdown
description: ! "# Introduction\n\nThis package allows Haskell users to easily acquire
  entropy for use in critical\nsecurity applications by calling out to either windows
  crypto api, unix/linux's\n`/dev/urandom`. Hardware RNGs (currently RDRAND, patches
  welcome) are supported\nvia the `hardwareRNG` function.\n\nIf you wish to obtain
  an XOR of the hardware and system RNG consider:\n\n```\nimport           Data.Bits
  (xor)\nimport qualified Data.ByteString as B\nimport qualified Control.Exception
  as X\n\nxorRNG sz = do hw  <- hardwareRNG sz\n               h   <- openHandle\n
  \              sys <- hGetEntropy h `X.finally` closeHandle h\n               pure
  $ B.pack $ B.zipWith xor hw sys\n```\n\nThis package supports Windows, {li,u}nix,
  QNX, and has preliminary support for HaLVM.\n\nTypically tested on Linux and OSX
  - testers are as welcome as patches.\n\n[![Build Status](https://travis-ci.org/TomMD/entropy.svg?branch=master)](https://travis-ci.org/TomMD/entropy)\n"
license-name: BSD3
