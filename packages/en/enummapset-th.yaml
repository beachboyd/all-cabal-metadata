homepage: https://github.com/tsurucapital/enummapset-th
changelog-type: ''
hash: fe96de645a269fcdb877202136ab6e2d549edb2838202166e9a0ae7838e3d23b
test-bench-deps: {}
maintainer: enummapset-th@liyang.hu
synopsis: TH-generated EnumSet/EnumMap wrappers around IntSet/IntMap.
changelog: ''
basic-deps:
  base: ! '>=4.5 && <4.11'
  containers: ! '>=0.5.3 && <0.6'
  deepseq: ! '>=1.3'
  template-haskell: ! '>=2.7'
all-versions:
- 0.5.1.0
- 0.6.0.0
- 0.6.0.1
- 0.6.0.2
- 0.6.1.0
- 0.6.1.1
author: Liyang HU
latest: 0.6.1.1
description-type: haddock
description: |-
  This package wraps @IntSet@ and @IntMap@ from @containers@, and provides
  fast sets and maps keyed on any data type with a well-behaved @Enum@
  instance. Useful for derived @Enum@s, newtype'd @Int@s, or any data type
  that can be packed into an @Int@: just implement @fromEnum@ and @toEnum@.

  The boilerplate is generated using Template Haskell, so unlike
  @enummapset@ it's easier to maintain and keep up-to-date with
  @containers@. On the downside, it's less portable.

  Note that "Data.EnumMap.Lazy" and "Data.EnumMap.Strict" provide distinct
  newtype wrappers, and their respective 'Functor' instances behave as
  expected, unlike that of @IntMap@ which is alway lazy.
license-name: BSD-3-Clause
