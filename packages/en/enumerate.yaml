homepage: https://github.com/sboosali/enumerate
changelog-type: ''
hash: d9461683af275a6e091d9effc013caa3e7e4db24ca833677470dd3311e8d892d
test-bench-deps: {}
maintainer: samboosalis@gmail.com
synopsis: enumerate all the values in a finite type (automatically)
changelog: ''
basic-deps:
  spiros: -any
  enumerate: -any
  base: ! '>=4.7 && <5'
  array: ! '>=0.5'
  containers: ! '>=0.5'
  vinyl: ! '>=0.5'
  ghc-prim: ! '>=0.3'
  deepseq: ! '>=1.3'
  template-haskell: ! '>=2.9'
all-versions:
- 0.0.0
- 0.1.0
- 0.1.1
- 0.2.1
- 0.2.2
author: Sam Boosalis
latest: 0.2.2
description-type: markdown
description: ! "# enumerate\n\n[![Hackage](https://img.shields.io/hackage/v/enumerate.svg)](https://hackage.haskell.org/package/enumerate)\n[![Build
  Status](https://secure.travis-ci.org/sboosali/enumerate.svg)](http://travis-ci.org/sboosali/enumerate)\n\nEnumerate
  all the values in a finite type (automatically). Provides:\n\n1. a typeclass for
  enumerating all values in a finite type,\n2. a generic instance for automatically
  deriving it, and\n\n# example\n\n```haskell\n    {-# LANGUAGE DeriveGeneric, DeriveAnyClass
  #-}\n    import Data.Enumerate (Enumerable(..))\n    import Data.Generics (Generics)\n\n
  \   data CrudOp = Add | Edit | Delete | View\n     deriving (Eq,Ord,Enum,Bounded,Generic,Enumerable)\n
  \   data Route = Home | Person CrudOp | House CrudOp\n     deriving (Eq,Ord,Generic,Enumerable)\n\n
  \   >>> enumerated :: [Route]\n    [Home, Person Add, Person Edit, Person Delete,
  Person View, House Add, House Edit, House Delete, House View]\n```\n\n# (extensive)
  documentation:\nhttps://hackage.haskell.org/package/enumerate/docs/Enumerate.html\n\nhttp://sboosali.github.io/documentation/enumerate/Enumerate.html
  (when hackage won't build the haddocks)\n\n# related:\n\nTo reify functions, partial
  or total, into a Map,\nsee [enumerate-function](https://github.com/sboosali/enumerate-function).\n"
license-name: MIT
