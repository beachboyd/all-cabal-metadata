homepage: http://code.haskell.org/encoding/
changelog-type: text
hash: 6e93b8383e195ef4eb37308a5e3fd1f26b4cd873b6845d9c8ec80d3dacd37793
test-bench-deps:
  bytestring: -any
  base: -any
  HUnit: -any
  encoding: -any
  QuickCheck: -any
maintainer: daniel@wagner-home.com
synopsis: A library for various character encodings
changelog: ! "Changes from 0.8 to 0.8.2\n-------------------------\n\n* Deprecated
  support for very old GHCs\n* Updated cabal file to differentiate between build dependencies
  and setup dependencies\n* Add upper and lower bounds to build dependencies\n* Stack
  compatibility\n\nChanges from 0.8 to 0.8.1\n-------------------------\n\n* Added
  the ShiftJIS and CP932 encodings\n\nChanges from 0.7.0.2 to 0.8\n---------------------------\n\n*
  GHC-7.10/AMP compatibility\n\nChanges from 0.7.0.1 to 0.7.0.2\n-------------------------------\n\n*
  Flesh out the MacOSRoman encoding, which was missing 33 code points\n\nChanges from
  0.7 to 0.7.0.1\n---------------------------\n\n* GHC-7.8 compatibility\n\nChanges
  from 0.6.7 to 0.7\n-------------------------\n\n* the type of ByteSource's fetchAhead
  method changed to accomodate updates to the binary package\n\nChanges from 0.6.5
  to 0.6.7\n---------------------------\n\n* Skipped version 0.6.6 due to rogue upload
  on Hackage\n* GHC-7 and HaXml-1.22 compatibility\n* add -systemEncoding flag for
  Windows builds\n\nChanges from 0.6.4 to 0.6.5\n---------------------------\n\n*
  Make package work with >=base-4.3.0.0 and mtl-2\n\nChanges from 0.6.3 to 0.6.4\n---------------------------\n\n*
  Throw an error when encoding non-ascii chars with ascii\n* Fix compilation with
  mtl-2\n\nChanges from 0.6.2 to 0.6.3\n---------------------------\n\n* Use new QuickCheck
  version 2 for tests\n* Fixed UTF16 encoding range\n\nChanges from 0.6.0 to 0.6.1\n---------------------------\n\n*
  Support for many MSDOS codepages\n* Show instance for DynEncoding\n* More IO functions\n*
  Fancy translation tables for the documentation of auto-generated modules\n\nChanges
  from 0.5.2 to 0.6.0\n---------------------------\n\n* Moved from TemplateHaskell
  to a custom pre-processor for code-generation.\n  This is necessary because:\n  -
  TemplateHaskell is really slow for large data structures\n  - TemplateHaskell doesn't
  yet support the MagicHash extension that is useful for the library\n* Use efficient,
  static data structures for encoding/decoding\n* Fixed bug in UTF-8 that could call
  'chr' with bad arguments\n\nChanges from 0.5 to 0.5.2\n-------------------------\n\n*
  Export function encodingFromStringExplicit\n\nChanges from 0.4 to 0.5\n-----------------------\n\n*
  Complete rewrite of the Encoding class to allow for\n  - On-the-fly changing of
  the encoding while en-/decoding\n  - Ability to en-/decode from/to any data structure\n*
  A general module to help specify encodings based on ISO 2022\n* New encodings:\n
  \ - JIS X 0201\n  - JIS X 0208\n  - ISO 2022-JP\n* More test cases\n\nChanges from
  0.3 to 0.4\n-----------------------\n\n* A new, strict UTF-8 decoder\n* Minor bugs
  fixed in UTF-16 and BootString\n* Test cases for UTF-8, UTF-16 and BootString\n*
  Added KOI8U encoding\n\nChanges from 0.2 to 0.3\n-----------------------\n\n* Converted
  to new cabal interface\n* Support for GHC 6.8\n* Support for new bytestring interface\n\nChanges
  from 0.1 to 0.2\n-----------------------\n\n* Implemented GB18030 encoding\n"
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  extensible-exceptions: ! '>=0.1 && <0.2'
  base: ! '>=4 && <5'
  array: ! '>=0.4 && <0.6'
  containers: ! '>=0.4 && <0.6'
  regex-compat: ! '>=0.71 && <0.95'
  binary: ! '>=0.7 && <0.10'
  ghc-prim: ! '>=0.3 && <0.6'
  mtl: ! '>=2.0 && <2.3'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- 0.4.1
- 0.5.0
- 0.5.1
- 0.5.2
- 0.6.0
- 0.6.1
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.5
- 0.6.6
- 0.6.7
- 0.6.7.1
- 0.6.7.2
- '0.7'
- 0.7.0.1
- 0.7.0.2
- '0.8'
- 0.8.1
- 0.8.2
author: Henning GÃ¼nther
latest: 0.8.2
description-type: haddock
description: Haskell has excellect handling of unicode, the Char type covers all unicode
  chars. Unfortunately, there's no possibility to read or write something to the outer
  world in an encoding other than ascii due to the lack of support for encodings.
  This library should help with that.
license-name: BSD-3-Clause
