homepage: https://supki.github.io/envparse
changelog-type: markdown
hash: 989902e6368532548f61de1fa245ad2b39176cddd8743b20071af519a709ce30
test-bench-deps:
  base: ! '>=4.6 && <5'
  hspec: -any
  text: -any
  containers: -any
maintainer: matvey.aksenov@gmail.com
synopsis: Parse environment variables
changelog: ! "0.4.1\n=====\n\n  * Supported GHC 8.4.3.\n\n\n0.4\n===\n\n  * Supported
  GHC 8.0.1.\n\n  * On GHC 7.8 and newer, as a secutiry measure, all declared variables
  are unset by the end of\n    a successful parse.  If you want to keep the variable
  in the environment, use the `keep` modifier.\n    (https://github.com/supki/envparse/pull/7)\n\n0.3.4\n=====\n\n
  \ * Added `splitOn`.\n\n0.3.3\n=====\n\n  * Removed the unnecessary `AsEmpty` and
  `AsUnset` constraints on the error type\n    in the `flag` and `switch` parsers.\n\n0.3.2\n=====\n\n
  \ * Added `showDef`.\n\n0.3.1\n=====\n\n  * Supported `Generic`ally derived `Parser`s
  on GHC 7.10.\n\n0.3.0\n=====\n\n  * Supported user-defined `Reader` errors. (https://github.com/supki/envparse/pull/4)\n\n
  \ * Widened the range of GHC versions to test the library with from 7.6–7.8 to 7.6–HEAD.\n\n0.2.2\n=====\n\n
  \ * Added `helpDoc`, a `Parser` pretty-printer for use in error messages.\n\n0.2.1\n=====\n\n
  \ * Cosmetic changes in the help output.\n\n0.2.0\n=====\n\n  * Added `prefixed`.\n\n
  \ * Added `parseOr`, a slightly generalized version of `parse`.\n\n  * Renamed `parseTest`
  to `parsePure`.\n\n0.1.0\n=====\n\n  * Initial release.\n"
basic-deps:
  base: ! '>=4.6 && <5'
  containers: -any
all-versions:
- 0.1.0
- 0.2.0
- 0.2.1
- 0.2.2
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- '0.4'
- 0.4.1
author: Matvey Aksenov
latest: 0.4.1
description-type: markdown
description: ! "envparse\n========\n[![Hackage](https://budueba.com/hackage/envparse)](https://hackage.haskell.org/package/envparse)\n[![Build
  Status](https://secure.travis-ci.org/supki/envparse.png?branch=master)](https://travis-ci.org/supki/envparse)\n\n[optparse-applicative][0],
  but for environment variables\n\nSee `example/Main.hs` for an executable example\n\nAs
  to why anyone would want to use environment to configure their applications, here's
  [what some folks think][1] about it.\n\n  [0]: https://hackage.haskell.org/package/optparse-applicative\n
  \ [1]: https://12factor.net/config\n"
license-name: BSD-3-Clause
