homepage: https://github.com/weldr/codec-rpm
changelog-type: markdown
hash: aa6d5190140dd62b40b8325ff9ac0583fcff0a6e2f1c41ba890efc1a8daab8be
test-bench-deps:
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.7 && <5.0'
  hspec: ! '>=2.4.4 && <2.5'
  text: ! '>=1.2.2.2 && <1.3'
  hspec-attoparsec: ! '>=0.1.0.2 && <0.2'
  HUnit: ! '>=1.6.0.0 && <1.7'
  codec-rpm: -any
  attoparsec: ! '>=0.12.1.4 && <0.13'
maintainer: clumens@redhat.com
synopsis: A library for manipulating RPM files
changelog: ! '## 0.2.0


  * Move parseC into a new Conduit module.

  * Add payloadC and payloadContentsC.

  * parseRPMC should return a ParseError on error.


  ## 0.1.3


  * Derive Ord for DepRequirement.


  ## 0.1.2


  * Relax overly strict conduit-extra and text requirements.


  ## 0.1.1


  * Relax overly strict attoparsec requirement.


  ## 0.1.0


  * Initial release.

'
basic-deps:
  conduit-combinators: ! '>=1.1.0 && <1.2'
  bytestring: ! '>=0.10 && <0.11'
  attoparsec-binary: ! '>=0.2 && <0.3'
  base: ! '>=4.7 && <5.0'
  text: ! '>=1.2.2.0 && <1.3'
  cpio-conduit: ! '>=0.7.0 && <0.8.0'
  parsec: ! '>=3.1.11 && <3.2'
  conduit: ! '>=1.2.8 && <1.3'
  conduit-extra: ! '>=1.1.15 && <1.2'
  mtl: ! '>=2.2.1 && <2.3'
  attoparsec: ! '>=0.12.1.4 && <0.14'
  resourcet: ! '>=1.1.9 && <1.2'
  pretty: ! '>=1.1.2.0'
  lzma-conduit: ! '>=1.1.3.3 && <1.2'
all-versions:
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.2.0'
author: Chris Lumens
latest: '0.2.0'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/weldr/codec-rpm.svg?branch=master)](https://travis-ci.org/weldr/codec-rpm)\n[![Coverage
  Status](https://coveralls.io/repos/github/weldr/codec-rpm/badge.svg?branch=master)](https://coveralls.io/github/weldr/codec-rpm?branch=master)\n\nHaskell
  library for working with RPM packages.\n\n\nPreparing local development environment
  for Haskell\n===================================================\n\nFor development
  we use the latest upstream versions:\n\n1) Remove the standard `haskell-platform`
  and `ghc-*` RPMs if you have them installed\n2) Download version **8.0.2** of the
  generic Haskell Platform distribution from\n   https://www.haskell.org/platform/linux.html#linux-generic\n3)
  Extract the archive and install Haskell\n```\n$ tar -xzvf haskell-platform-8.0.2-unknown-posix--minimal-x86_64.tar.gz
  \n$ sudo ./install-haskell-platform.sh\n```\n4) Add `/usr/local/bin` to your PATH
  if not already there!\n\n\nBuilding the project locally\n============================\n\n`cabal`
  is used to install and manage Haskell dependencies from upstream.\n\n    $ cabal
  sandbox init\n    $ cabal install\n\nExecuting unit tests\n====================\n\n
  \   $ cabal sandbox init\n    $ cabal install --dependencies-only --enable-tests\n
  \   $ cabal test --show-details=always\n    Preprocessing library rpm-1...\n    Preprocessing
  test suite 'tests' for rpm-1...\n    Running 1 test suites...\n    Test suite tests:
  RUNNING...\n    Test suite tests: PASS\n    Test suite logged to: dist/test/rpm-1-tests.log\n
  \   1 of 1 test suites (1 of 1 test cases) passed.\n\nProduce code coverage report\n============================\n\n
  \   $ cabal sandbox init\n    $ cabal install --enable-tests --enable-coverage\n
  \   $ cabal test --show-details=always\n    $ firefox ./dist/hpc/vanilla/tix/*/hpc_index.html\n\nTesting
  in Haskell\n==================\n\nThe recommended way to test this project is to
  use\n[Hspec](https://hspec.github.io/) for annotating unit tests.\nFor starters
  you can try adding cases which extend code coverage.\n\nIt is also recommended to
  use property based testing with\nQuickCheck (and Hspec) where it makes sense. Property
  based tools\nautomatically generates hundreds/thousands of input variants and\nexecute
  the function under test with them. This validates that\nspecific conditions (aka
  properties of the function) are always met.\nThis is useful with pure functions.
  For more information see:\n\n- http://blog.jessitron.com/2013/04/property-based-testing-what-is-it.html\n-
  http://book.realworldhaskell.org/read/testing-and-quality-assurance.html\n- https://en.wikibooks.org/wiki/Haskell/Testing\n-
  http://hspec.github.io/quickcheck.html\n"
license-name: LGPL
