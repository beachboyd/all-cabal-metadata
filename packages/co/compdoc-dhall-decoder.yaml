homepage: ''
changelog-type: markdown
hash: 28f8b2c07f36a427bee0218f0725f43b50b6376b0bcd419571fb46d767c725bc
test-bench-deps: {}
maintainer: dan.firth@homotopic.tech
synopsis: Allows you to write FromDhall instances for Compdoc
changelog: |
  # Changelog for compdoc-dhall-decoder

  ## v0.1.0.0

  * Working compdoc decoder for dhall.
basic-deps:
  either: -any
  base: '>=4.7 && <5'
  composite-base: '>=0.7.4.0'
  dhall: -any
  text: -any
  pandoc: -any
  composite-aeson: -any
  compdoc: '>=0.2.0.0'
all-versions:
- 0.1.0.0
- 0.2.0.0
author: Daniel Firth
latest: 0.2.0.0
description-type: markdown
description: |
  # compdoc-dhall-decoder

  This module allows you to decode a `Compdoc` value from markdown.

  You should use newtypes like so:

  ```
  newtype MyDoc = MyDoc (Record (Compdoc '[]))
    deriving stock (Eq, Show, Generic)


  instance D.FromDhall MyDoc where
    autoWith options = fmap MyDoc $ compdocDecoder def (recordJsonFormat RNil) options
  ```
license-name: BSD-3-Clause
