homepage: http://github.com/mstksg/configurator-export
changelog-type: markdown
hash: d97be5e02b891d7a8b9ebf2fa2694ad23c8dc59119baa50eb2eea088aa75e093
test-bench-deps:
  base: -any
  configurator-export: -any
maintainer: justin@jle.im
synopsis: ! 'Pretty printer and exporter for configurations from

  the "configurator" library.'
changelog: ! 'Changelog

  =========


  v0.1.0.1

  --------


  <https://github.com/mstksg/configurator-export/releases/tag/v0.1.0.1>


  *   Added support for backwards compatibility up to GHC 7.6


  v0.1.0.0

  --------


  <https://github.com/mstksg/configurator-export/releases/tag/v0.1.0.0>


  *   Initial release!

'
basic-deps:
  base: ! '>=4.8 && <5'
  configurator: -any
  unordered-containers: -any
  text: -any
  semigroups: ! '>=0.17'
  base-compat: -any
  pretty: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Justin Le
latest: 0.1.0.1
description-type: markdown
description: ! "configurator-export\n===================\n\n[![configurator-export
  on Stackage LTS 4](http://stackage.org/package/configurator-export/badge/lts-4)](http://stackage.org/lts-4/package/configurator-export)\n[![configurator-export
  on Stackage LTS](http://stackage.org/package/configurator-export/badge/lts)](http://stackage.org/lts/package/configurator-export)\n[![configurator-export
  on Stackage Nightly](http://stackage.org/package/configurator-export/badge/nightly)](http://stackage.org/nightly/package/configurator-export)\n\n[![Build
  Status](https://travis-ci.org/mstksg/configurator-export.svg?branch=master)](https://travis-ci.org/mstksg/configurator-export)\n\nPretty
  printers and exporters for 'Config's from the great\n*[configurator](http://hackage.haskell.org/package/configurator)*
  library.\n\nAll results are intended to be valid parsing files in the configuration
  file\nsyntax of the library.\n\nFor a full round trip:\n\n~~~haskell\nmain = do\n
  \ cfg <- load [Required \"config.cfg\"]\n  writeConf \"config.cfg\" cfg\n~~~\n\nThis
  should load the config file, parse it, and then re-export it, rewriting\nthe original
  config file.  The result should be an identical configuration\nfile (with keys potentially
  re-arranged and re-sorted, comments removed, etc.)\n\nCan also export/print any
  `HashMap Name Value`, in the form exported from a\n`Config` using `getMap`.  Modify
  a map yourself to dynically\ngenerate/customize configuration files!\n\nSample output:\n\n~~~haskell\nfoo
  {\n    bar {\n        baz1  = true\n        baz2  = [1, 0.6, \"hello\", true]\n
  \   }\n    aardvark  = \"banana\"\n    monkey    = [true, false, 1.9e-3]\n    zebra
  \    = 24\n}\n\nfoo2 {\n    bar = 8.1e-8\n}\n\napple   = [\"cake\", true]\norange
  \ = 8943\n~~~\n\nFurther configuration on sorting of keys, displaying of bools and
  floats, etc.\nis possible by passing in custom `ConfStyle` style option values.\n\n\n"
license-name: BSD-3-Clause
