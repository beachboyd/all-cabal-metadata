homepage: http://www.cs.kent.ac.uk/~oc/contracts.html
changelog-type: ''
hash: 963bc83ba19569a5274985afb59d72be1174fee84b3877b357b94aa567f430ea
test-bench-deps: {}
maintainer: O.Chitil@kent.ac.uk
synopsis: Practical typed lazy contracts.
changelog: ''
basic-deps:
  base: ! '>=4.5 && <5'
  template-haskell: ! '>=2.7'
all-versions:
- '0.1'
author: Olaf Chitil
latest: '0.1'
description-type: haddock
description: ! 'Contracts describe properties of expressions (esp. functions) that
  are

  checked at run-time.

  For example, a contract states that an expression is a natural number,

  a list has at least one element or a function requires a natural number

  and a non-empty list of natural numbers as arguments and will produce a

  natural number as result.

  Thus these properties are both documented and enforced.

  Contracts are more expressive than static types.

  If a contract is violated, then an informative exception is raised.

  See homepage or Olaf Chitil: "Practical Typed Lazy Contracts", ICFP 2012, ACM.'
license-name: BSD-3-Clause
