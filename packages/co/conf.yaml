homepage: ''
changelog-type: ''
hash: b244120277e2afa5861ff5146db1f918a84e046bef28c685e585243f48b3710f
test-bench-deps:
  test-framework-hunit: -any
  conf: -any
  test-framework: -any
  base: ! '>=4.6 && <4.8'
  HUnit: -any
  test-framework-th: -any
maintainer: carymrobbins@gmail.com
synopsis: Parser for Haskell-based configuration files.
changelog: ''
basic-deps:
  base: ! '>=4.6 && <4.8'
  haskell-src: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Cary M. Robbins
latest: 0.1.1.0
description-type: markdown
description: ! "Conf: Parser for Haskell-based configuration files.\n===========\n\nInstallation\n-----------\nYou
  can install this library from Hackage via `cabal install conf`\n\nDescription\n-----------\n\nThis
  package is designed to allow you to create configuration files\nwith declarative
  Haskell and parse the values back into Haskell code.\nThe benefit here is to have
  a configuration file in Haskell that does\nnot have to be recompiled - it is interpreted/parsed
  at runtime in a\ntype-safe manner.\n\nExample usage:\n\n```haskell\n-- /path/to/my-config.hs\nfoo
  = [\"bar\", \"baz\"]\nspam = Eggs\n```\n\n```haskell\n-- Application source\nimport
  Data.Conf\nimport Data.Maybe\n\ndata Spam = Eggs | Parrot | SomethingEntirelyDifferent\n
  \   deriving (Show, Read)\n\ngetSpam :: Conf -> Spam\ngetSpam = fromMaybe SomethingEntirelyDifferent
  . getConf \"spam\"\n\ngetFoo :: Conf -> Maybe Int\ngetFoo = getConf \"foo\"\n\nmain
  = do\n    conf <- readConf \"my-config.hs\"\n    print $ getSpam conf -- Output:
  Eggs\n    print $ getFoo conf  -- Output: Nothing\n```\n\nBuilding\n--------\n```bash\ncabal
  sandbox init  # If you haven't already\ncabal install -j --dependencies-only\ncabal
  build\n```\n\nRunning the Tests\n-----------------\n```bash\ncabal sandbox init
  \ # If you haven't already\ncabal install -j --enable-tests --dependencies-only\ncabal
  test\n```\n\n"
license-name: BSD-3-Clause
