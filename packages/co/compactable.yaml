homepage: ''
changelog-type: markdown
hash: 38a8f3a1089794a3d1daa50730abc98ccafaedad17cf68ffca09b271c165ff52
test-bench-deps: {}
maintainer: fresheyeball@gmail.com
synopsis: A typeclass for structures which can be catMaybed, filtered, and partitioned.
changelog: ! '# Revision history for Compactable


  ## 0.1.0.0  -- YYYY-mm-dd


  * First version. Released on an unsuspecting world.

'
basic-deps:
  base: ! '>=4.9 && <4.12'
  containers: ! '>=0.5.7 && <0.6'
  bifunctors: ! '>=5.4.2 && <5.6'
  transformers: ! '>=0.5.2 && <0.6'
  vector: ! '>=0.11 && <0.13'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.1.0'
- '0.1.1.1'
- '0.1.2.0'
- '0.1.2.1'
- '0.1.2.2'
author: Isaac Shapira
latest: '0.1.2.2'
description-type: haddock
description: This provides polymorphic implementations for filter, compact (catMaybes),
  and separate. It allows for higher performance implementations to be used in place
  of defaults for all data structures, and endeavors to centerally document those
  implementations. Compactable aims to be as general and unconstrained as possible,
  providing instances for non-Functors like Set, as well as some Contravariants (though
  not published here). Compactable fully subsumes Data.Witherable, offers more laws,
  and is more general.
license-name: BSD3
