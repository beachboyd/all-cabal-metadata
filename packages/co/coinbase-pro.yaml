homepage: https://github.com/mdunnio/coinbase-pro#readme
changelog-type: ''
hash: 41fc7f593a193c532e17db465ee75bca7fce1e6ea4c10bff771f7c72831ae2bb
test-bench-deps: {}
maintainer: Michael Dunn <michaelsdunn1@gmail.com>
synopsis: Client for Coinbase Pro
changelog: ''
basic-deps:
  http-client: ==0.5.*
  bytestring: ==0.10.*
  aeson-casing: ==0.1.*
  base: ! '>=4.7 && <5'
  time: ==1.8.*
  servant-client: ==0.14.*
  unordered-containers: ==0.2.*
  text: ==1.2.*
  http-api-data: ==0.3.*
  servant-client-core: ==0.14.*
  network: ==2.6.*
  async: ! '>=2.1 && <2.3'
  websockets: ==0.12.*
  coinbase-pro: -any
  servant: ==0.14.*
  memory: ==0.14.*
  containers: ==0.5.*
  io-streams: ==1.5.*
  binary: ==0.8.*
  http-streams: ==0.8.*
  http-client-tls: ==0.3.*
  wuss: ==1.1.*
  cryptonite: ! '>=0.24 && <0.26'
  transformers: ==0.5.*
  HsOpenSSL: ==0.11.*
  http-types: ==0.12.*
  unagi-streams: ==0.2.*
  aeson: ! '>=1.2 && <1.4'
  vector: ==0.12.*
all-versions:
- 0.5.0.0
author: Michael Dunn <michaelsdunn1@gmail.com>
latest: 0.5.0.0
description-type: markdown
description: |
  # coinbase-pro

  ## Request API

  ```haskell
  {-# LANGUAGE OverloadedStrings #-}

  module Main where

  import           Control.Monad.IO.Class             (liftIO)

  import           CoinbasePro.Authenticated
  import           CoinbasePro.Authenticated.Accounts
  import           CoinbasePro.Authenticated.Orders
  import           CoinbasePro.Headers
  import           CoinbasePro.MarketData.Types       hiding (time)
  import           CoinbasePro.Request
  import           CoinbasePro.Types                  hiding (time)
  import           CoinbasePro.Unauthenticated


  main :: IO ()
  main = do
      stats btcusd >>= print
      candles btcusd Nothing Nothing Minute >>= print
      trades btcusd >>= print
      time >>= print
      products >>= print
      aggregateOrderBook btcusd (Just Best) >>= print
      aggregateOrderBook btcusd (Just TopFifty) >>= print
      fullOrderBook btcusd >>= print
      runCbAuthT cpc $ do
          accounts >>= liftIO . print
          account accountId >>= liftIO . print
          fills (Just btcusd) Nothing >>= liftIO . print
          listOrders (Just [All]) (Just btcusd) >>= liftIO . print
          placeOrder btcusd Sell (Size 0.001) (Price 99999.00) True Nothing Nothing Nothing >>= liftIO . print
          placeOrder btcusd Buy (Size 1.0) (Price 1.00) True Nothing Nothing Nothing >>= liftIO . print
          cancelOrder (OrderId "<cancel-order-id>")
          cancelAll (Just btcusd) >>= liftIO . print
    where
      accessKey  = CBAccessKey "<access-key>"
      secretKey  = CBSecretKey "<secret-key>"
      passphrase = CBAccessPassphrase "<passphrase>"
      cpc        = CoinbaseProCredentials accessKey secretKey passphrase
      accountId  = AccountId "<account-id>"
      btcusd     = ProductId "BTC-USD"
  ```

  ## Websocket API

  To print out all of the full order book updates for BTC-USD:


  ```haskell
  {-# LANGUAGE OverloadedStrings #-}

  module Main where

  import           Control.Monad                     (forever)
  import qualified System.IO.Streams                 as Streams

  import           CoinbasePro.Types                 (ProductId (..))
  import           CoinbasePro.WebSocketFeed         (subscribeToFeed)
  import           CoinbasePro.WebSocketFeed.Request (ChannelName (..))

  main :: IO ()
  main = do
      msgs <- subscribeToFeed [ProductId "BTC-USD"] [Ticker]
      forever $ Streams.read msgs >>= print
  ```

  ## Example

  Example execs can be found in `src/example/`
license-name: MIT
