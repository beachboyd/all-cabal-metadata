homepage: http://github.com/haskell-works/conduit-tokenize-attoparsec#readme
changelog-type: ''
hash: de49bf668bfa3272741457db82ecd553379a6db82e1565cd7679008e7f566a57
test-bench-deps:
  base: -any
  hspec: ! '>=1.3'
  conduit: ! '>=1.1 && <1.3'
  attoparsec: ! '>=0.10'
  conduit-tokenize-attoparsec: -any
  resourcet: ! '>=1.1'
maintainer: newhoggy@gmail.com
synopsis: Conduits for tokenizing streams.
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  text: -any
  conduit: ! '>=1.1 && <1.3'
  attoparsec: ! '>=0.10'
  conduit-tokenize-attoparsec: -any
  resourcet: ! '>=1.1'
all-versions:
- 0.1.0.0
author: John Ky
latest: 0.1.0.0
description-type: markdown
description: ! "# conduit-tokenize-attoparsec\nConduits for tokenizing streams.\n\n`conduit-tokenize-attoparsec`
  is an extension to the `conduit` library based on\n`Data.Conduit.Attoparsec` that
  allows the tokenization of a stream whilst also\ntracking arbitrary state.  The
  library includes in-built support for tracking\nsuch as line-column and stream offset,
  but can be extended with type-classes to\nsupport alternative state tracking.\n\nFor
  an example, see [`app/Main.hs`](../master/app/Main.hs)\n\n## Building\nPrerequisites:
  `haskell-stack` is installed.\n\nRun the following in the shell:\n\n    git clone
  git@github.com:haskell-works/conduit-tokenize-attoparsec.git\n    cd conduit-tokenize-attoparsec\n
  \   stack setup\n    stack build\n    stack test\n    stack ghci --ghc-options -XOverloadedStrings
  \\\n      --main-is conduit-tokenize-attoparsec:exe:conduit-tokenize-attoparsec-example\n"
license-name: BSD-3-Clause
