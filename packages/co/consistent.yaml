homepage: ''
changelog-type: ''
hash: c5199a88c8e993f2e27826303564549dc741a805231c152ba3cdda8a8620c7db
test-bench-deps:
  base: -any
  consistent: -any
  lifted-async: ! '>=0.1.1'
  transformers: ! '>=0.4'
maintainer: johnw@newartisans.com
synopsis: Eventually consistent STM transactions.
changelog: ''
basic-deps:
  stm: ! '>=2.4.2'
  base: ! '>=4.9 && <4.10'
  unordered-containers: ! '>=0.2.3.0'
  monad-control: ! '>=1.0.1'
  lifted-base: ! '>=0.2.2.0'
  lifted-async: ! '>=0.1.1'
  transformers-base: ! '>=0.4'
  transformers: ! '>=0.5'
all-versions:
- 0.0.1
- 0.1.0
author: John Wiegley
latest: 0.1.0
description-type: haddock
description: ! 'Eventually consistent STM transactions.


  Consistent provides eventually consistent atomic transactions, by delaying

  updates until no threads is mutating a shared variable.


  This comes at a cost of having a separate TVar for every thread, but has the

  advantage that no thread will ever lock or retry except for the manager actor

  responsible for performing the updates.'
license-name: MIT
