homepage: ''
changelog-type: ''
hash: fc00f9def8a1baa7e62d535c24dd79ffacafa59fa3ec0e239802fb9da4fd3bee
test-bench-deps: {}
maintainer: jacinablackbox@yahoo.com
synopsis: Concurrent utilities
changelog: ''
basic-deps:
  extra: -any
  base: '>=4.4.0.0 && <=5'
  time: ==1.8.*
  monads-tf: -any
  strict: '>=0.3.2'
  monad-loops: ==0.4.*
  list-extras: -any
  array: -any
  containers: -any
  assert: -any
  parallel: -any
  atl: '>=15322.1'
  profunctors: -any
  vector: -any
all-versions:
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.4.1.0
- 0.4.2.0
- 0.4.4.0
- 0.4.5.0
- 0.5.0.0
author: James Candy
latest: 0.5.0.0
description-type: haddock
description: |-
  Release notes for version 0.5.0.0:

  * Deprecated and removed the 'DataParallel' module, after it performed disappointingly on my own benchmarks, and failed to achieve sufficient parallelism to justify it; deprecated and removed "deadlock" and Data.BellmanFord modules.

  * Refactored the Conc module and renamed as CPUMultiThreading; improved the implementation of thread pools. By breaking tasks into smaller chunks when putting them on the thread pools, it avoids occupying the thread pools with long running tasks, hopefully making performance predictable when different tasks contend for the same thread pool.

  * Added a handrolled(?TODO) semaphore implementation (semaphore) which uses CAS instructions in the common case to reduce latency
license-name: GPL-2.0-only
