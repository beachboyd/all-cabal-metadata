homepage: http://haskellstack.org
changelog-type: markdown
hash: d939334499176c65d472a050c0f58465a1fd693e545218929bab3ff9750c4879
test-bench-deps:
  http-client: -any
  exceptions: -any
  rio: -any
  zip-archive: -any
  streaming-commons: -any
  bytestring: -any
  unliftio: -any
  extra: -any
  unix: -any
  split: -any
  stm: -any
  Cabal: -any
  path: -any
  base: ! '>=4.10 && <5'
  time: -any
  open-browser: -any
  base64-bytestring: -any
  unicode-transforms: -any
  persistent: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  project-template: -any
  retry: -any
  persistent-template: -any
  hi-file-parser: -any
  generic-deriving: -any
  hpc: -any
  mintty: -any
  resource-pool: -any
  tls: -any
  unix-compat: -any
  filepath: -any
  process: -any
  async: -any
  conduit: -any
  cryptonite-conduit: -any
  semigroups: -any
  rio-prettyprint: -any
  th-reify-many: -any
  array: -any
  smallcheck: -any
  hackage-security: -any
  http-download: -any
  conduit-extra: -any
  memory: -any
  containers: -any
  terminal-size: -any
  pantry-tmp: -any
  ansi-terminal: -any
  annotated-wl-pprint: -any
  tar: -any
  text-metrics: -any
  typed-process: -any
  http-client-tls: -any
  raw-strings-qq: -any
  cryptonite: -any
  zlib: -any
  network-uri: -any
  mtl: -any
  filelock: -any
  hashable: -any
  regex-applicative-text: -any
  mustache: -any
  file-embed: -any
  attoparsec: -any
  colour: -any
  transformers: -any
  temporary: -any
  optparse-applicative: -any
  deepseq: -any
  QuickCheck: -any
  http-conduit: -any
  stack: -any
  fsnotify: -any
  resourcet: -any
  http-types: -any
  pretty: -any
  microlens: -any
  persistent-sqlite: -any
  aeson: -any
  path-io: -any
  template-haskell: -any
  mono-traversable: -any
  primitive: -any
  yaml: -any
  vector: -any
  echo: -any
  hpack: -any
  neat-interpolation: -any
  directory: -any
maintainer: manny@fpcomplete.com
synopsis: The Haskell Tool Stack
changelog: "# Changelog\n\n\n## v2.1.1\n\n**Changes since v1.9.3**\n\nMajor changes:\n\n*
  Switch over to pantry for managing packages. This is a major change\n  to Stack's
  internals, and affects user-visible behavior in a few\n  places. Some highlights:\n
  \   * Drop support for multiple package indices and legacy\n      `00-index.tar`
  style indices. See\n      [#4137](https://github.com/commercialhaskell/stack/issues/4137).\n
  \   * Support for archives and repos in the `packages` section has\n      been removed.
  Instead, you must use `extra-deps` for such\n      dependencies. `packages` now
  only supports local filepaths.\n    * Add support for Git repositories containing
  (recursive) submodules.\n    * Addition of new configuration options for specifying
  a \"pantry\n      tree\" key, which provides more reproducibility around builds,\n
  \     and (in the future) will be used for more efficient package\n      content
  downloads. You can also specify package name and version\n      for more efficient
  config parsing.\n          * __NOTE__ The new `stack freeze` command provides support\n
  \           for automatically generating this additional\n            information.\n
  \   * Package contents and metadata are stored in an SQLite database\n      in place
  of files on the filesystem. The `pantry` library can be\n      used for interacting
  with these contents.\n    * Internally, Stack has changed many datatypes, including
  moving\n      to Cabal's definition of many data types. As a result of such\n      changes,
  existing cache files will in general be invalidated,\n      resulting in Stack needing
  to rebuild many previously cached\n      builds in the new version. Sorry :(.\n
  \   * A new command, `stack freeze` has been added which outputs\n      project
  and snapshot definitions with dependencies pinned to\n      their exact versions.\n
  \   * The `ignore-revision-mismatch` setting is no longer needed, and\n      has
  been removed.\n    * Overriding GHC boot packages results in any other GHC boot\n
  \     packages depending on it being no longer available as a dependency,\n      such
  packages need to be added explicitly when needed. See\n      [#4510] (https://github.com/commercialhaskell/stack/issues/4510).\n
  \   * Cabal solver integration was not updated to support newer\n      `cabal-install`
  versions so `stack solver` command was removed as\n      well as a related option
  `--solver` from `stack new` and\n      `stack init`.\n* Upgrade to Cabal 2.4\n    *
  Note that, in this process, the behavior of file globbing has\n      been modified
  to match that of Cabal. In particular, this means\n      that for Cabal spec versions
  less than 2.4, `*.txt` will\n      match `foo.txt`, but not `foo.2.txt`.\n* Remove
  the `stack image` command. With the advent of Docker multistage\n  builds, this
  functionality is no longer useful. For an example, please see\n  [Building Haskell
  Apps with\n  Docker](https://www.fpcomplete.com/blog/2017/12/building-haskell-apps-with-docker).\n*
  Support building GHC from source (experimental)\n    * Stack now supports building
  and installing GHC from source. The built GHC\n      is uniquely identified by a
  commit id and an Hadrian \"flavour\" (Hadrian is\n      the newer GHC build system),
  hence `compiler` can be set to use a GHC\n      built from source with `ghc-git-COMMIT-FLAVOUR`\n*
  `stack.yaml` now supports a `configure-options`, which are passed directly to\n
  \ the `configure` step in the Cabal build process. See\n  [#1438](https://github.com/commercialhaskell/stack/issues/1438)\n*
  Remove support for building GHCJS itself. Future releases of Stack\n  may remove
  GHCJS support entirely.\n* Support for lock files for pinning exact project dependency
  versions\n\nBehavior changes:\n\n* `stack.yaml` now supports `snapshot`: a synonym
  for `resolver`. See\n  [#4256](https://github.com/commercialhaskell/stack/issues/4256)\n*
  `stack script` now passes `-i -idir` in to the `ghc`\n  invocation. This makes it
  so that the script can import local\n  modules, and fixes an issue where `.hs` files
  in the current\n  directory could affect interpretation of the script. See\n  [#4538](https://github.com/commercialhaskell/stack/pull/4538)\n*
  When using `stack script`, custom snapshot files will be resolved\n  relative to
  the directory containing the script.\n* Remove the deprecated `--upgrade-cabal`
  flag to `stack setup`.\n* Support the `drop-packages` field in `stack.yaml`\n* Remove
  the GPG signing code during uploads. The GPG signatures have\n  never been used
  yet, and there are no plans to implement signature\n  verification.\n* Remove the
  `--plain` option for the `exec` family of commands\n* Always use the `--exact-configuration`
  Cabal configuration option when\n  building (should mostly be a non-user-visible
  enhancement).\n* No longer supports Cabal versions older than `1.19.2`.  This means\n
  \ projects using snapshots earlier than `lts-3.0` or\n  `nightly-2015-05-05` will
  no longer build.\n* Remove the `stack docker cleanup` command.  Docker itself now
  has\n  [`docker image prune`](https://docs.docker.com/engine/reference/commandline/image_prune/)\n
  \ and\n  [`docker container prune`](https://docs.docker.com/engine/reference/commandline/container_prune/),\n
  \ which you can use instead.\n* Interleaved output is now turned on by default,
  see\n  [#4702](https://github.com/commercialhaskell/stack/issues/4702). In\n  addition,
  the `packagename> ` prefix is no longer included in\n  interelaved mode when only
  building a single target.\n* The `-fhide-source-paths` GHC option is now enabled
  by default and\n  can be disabled via the `hide-source-paths` configuration option
  in\n  `stack.yaml`. See [#3784](https://github.com/commercialhaskell/stack/issues/3784)\n*
  Stack will reconfigure a package if you modify your `PATH` environment\n  variable.
  See\n  [#3138](https://github.com/commercialhaskell/stack/issues/3138).\n* For GHC
  8.4 and later, disable the \"shadowed dependencies\" workaround. This\n  means that
  Stack will no longer have to force reconfigures as often. See\n  [#3554](https://github.com/commercialhaskell/stack/issues/3554).\n*
  When building a package, Stack takes a lock on the dist directory in\n  use to avoid
  multiple runs of Stack from trampling each others'\n  files. See\n  [#2730](https://github.com/commercialhaskell/stack/issues/2730).\n*
  Stack will check occassionally if there is a new version available and prompt\n
  \ the user to upgrade. This will not incur any additional network traffic, as\n
  \ it will piggy-back on the existing Hackage index updates. You can set\n  `recommend-stack-upgrade:
  false` to bypass this. See\n  [#1681](https://github.com/commercialhaskell/stack/issues/1681).\n*
  `stack list-dependencies` has been removed in favour of `stack ls dependencies`.\n*
  The new default for `--docker-auto-pull` is enabled. See\n  [#3332](https://github.com/commercialhaskell/stack/issues/3332).\n\nOther
  enhancements:\n\n* Support MX Linux in get-stack.sh. Fixes\n  [#4769](https://github.com/commercialhaskell/stack/issues/4769).\n*
  Defer loading up of files for local packages. This allows us to get\n  plan construction
  errors much faster, and avoid some unnecessary\n  work when only building a subset
  of packages. This is especially\n  useful for the curator use case.\n* Existing
  global option `--color=WHEN` is now also available as a\n  non-project-specific
  yaml configuration parameter `color:`.\n* Adopt the standard proposed at http://no-color.org/,
  that color should not be\n  added by default if the `NO_COLOR` environment variable
  is present.\n* New command `stack ls stack-colors` lists the styles and the associated
  'ANSI'\n  control character sequences that stack uses to color some of its output.
  See\n  `stack ls stack-colors --help` for more information.\n* New global option
  `--stack-colors=STYLES`, also available as a\n  non-project-specific yaml configuration
  parameter, allows a stack user to\n  redefine the default styles that stack uses
  to color some of its output. See\n  `stack --help` for more information.\n* British
  English spelling of 'color' (colour) accepted as an alias for\n  `--color`, `--stack-colors`,
  `stack ls stack-colors` at the command line and\n  for `color:` and `stack-colors:`
  in yaml configuration files.\n* New build option `--ddump-dir`. (See \n  [#4225](https://github.com/commercialhaskell/stack/issues/4225))\n*
  Stack parses and respects the `preferred-versions` information from\n  Hackage for
  choosing latest version of a package in some cases,\n  e.g. `stack unpack packagename`.\n*
  The components output in the `The main module to load is ambiguous` message\n  now
  include package names so they can be more easily copy-pasted.\n* Git repos are shared
  across multiple projects. See\n  [#3551](https://github.com/commercialhaskell/stack/issues/3551)\n*
  Use en_US.UTF-8 locale by default in pure Nix mode so programs won't\n  crash because
  of Unicode in their output\n  [#4095](https://github.com/commercialhaskell/stack/issues/4095)\n*
  Add `--tree` to `ls dependencies` to list dependencies as tree.\n  [#4101](https://github.com/commercialhaskell/stack/issues/4101)\n*
  Add `--pedantic` to `ghci` to run with `-Wall` and `-Werror`\n  [#4463](https://github.com/commercialhaskell/stack/issues/4463)\n*
  Add `--cabal-files` flag to `stack ide targets` command.\n* Add `--stdout` flag
  to all `stack ide` subcommands.\n* Use batches when unregistering packages with
  `ghc-pkg`.\n  (See [#2662](https://github.com/commercialhaskell/stack/issues/2662))\n*
  `get-stack` script now works on Windows CI machines of Appveyor,\n  Travis and Azure
  Pipelines. See\n  [#4535](https://github.com/commercialhaskell/stack/issues/4535)/\n*
  Show snapshot being used when `stack ghci` is invoked outside of a project\n  directory.
  See\n  [#3651](https://github.com/commercialhaskell/stack/issues/3651)\n* The script
  interpreter now accepts a `--extra-dep` flag for adding\n  packages not present
  in the snapshot. Currently, this only works\n  with packages from Hackage, not Git
  repos or archives.\n* When using the script interpreter with `--optimize` or `--compile`,\n
  \ Stack will perform an optimization of checking whether a newer\n  executable exists,
  making reruns significantly faster. There's a\n  downside to this, however: if you
  have a multifile script, and\n  change one of the dependency modules, Stack will
  not automatically\n  detect and recompile.\n* `stack clean` will delete the entire
  `.stack-work/dist` directory,\n  not just the relevant subdirectory for the current
  GHC version. See\n  [#4480](https://github.com/commercialhaskell/stack/issues/4480).\n*
  Add `stack purge` as a shortcut for `stack clean --full`. See\n  [#3863](https://github.com/commercialhaskell/stack/issues/3863).\n*
  Both `stack dot` and `stack ls dependencies` accept a\n  `--global-hints` flag to
  bypass the need for an installed GHC. See\n  [#4390](https://github.com/commercialhaskell/stack/issues/4390).\n*
  Add the `stack config env` command for getting shell script environment\n  variables.
  See [#620](https://github.com/commercialhaskell/stack/issues/620).\n* Less verbose
  output from `stack setup` on Windows. See\n  [#1212](https://github.com/commercialhaskell/stack/issues/1212).\n*
  Add an optional `ignore-expiry` flag to the `hackage-security`\n  section of the
  `~/.stack/config.yaml`. It allows to disable timestamp\n  expiration verification
  just like `cabal --ignore-expiry` does.\n  The flag is not enabled by default so
  that the default functionality\n  is not changed.\n* Include default values for
  most command line flags in the `--help`\n  output. See\n  [#893](https://github.com/commercialhaskell/stack/issues/893).\n*
  Set the `GHC_ENVIRONMENT` environment variable to specify dependency\n  packages
  explicitly when running test. This is done to prevent\n  ambiguous module name errors
  in `doctest` tests.\n* `get-stack` script now works on Windows CI machines of Appveyor,\n
  \ Travis and Azure Pipelines. See\n  [#4535](https://github.com/commercialhaskell/stack/issues/4535)\n*
  Warn when a Docker image does not include a `PATH` environment\n  variable. See\n
  \ [#2472](https://github.com/commercialhaskell/stack/issues/2742)\n* When using
  `system-ghc: true`, Stack will now find the appropriate GHC\n  installation based
  on the version suffix, allowing you to more easily switch\n  between various system-installed
  GHCs. See\n  [#2433](https://github.com/commercialhaskell/stack/issues/2433).\n*
  `stack init` will now support create a `stack.yaml` file without any local\n  packages.
  See [#2465](https://github.com/commercialhaskell/stack/issues/2465)\n* Store caches
  in SQLite database instead of files.\n* No longer use \"global\" Docker image database
  (`docker.db`).\n* User config files are respected for the script command. See\n
  \ [#3705](https://github.com/commercialhaskell/stack/issues/3705),\n  [#3887](https://github.com/commercialhaskell/stack/issues/3887).\n*
  Set the `GHC_ENVIRONMENT` environment variable to `-` to tell GHC to\n  ignore any
  such files when GHC is new enough (>= 8.4.4), otherwise\n  simply unset the variable.
  This allows Stack to have control of\n  package databases when running commands
  like `stack exec ghci`, even\n  in the presence of implicit environment files created
  by `cabal\n  new-build`. See\n  [#4706](https://github.com/commercialhaskell/stack/issues/4706).\n*
  Use a database cache table to speed up discovery of installed GHCs\n* You can specify
  multiple `--test-arguments` options. See\n  [#2226](https://github.com/commercialhaskell/stack/issues/2226)\n*
  Windows terminal width detection is now done. See\n  [#3588](https://github.com/commercialhaskell/stack/issues/3588)\n*
  On Windows, informs users if the 'programs' path contains a space character\n  and
  further warns users if that path does not have an alternative short\n  ('8 dot 3')
  name, referencing the `local-programs-path` configuration option.\n  See [#4726](https://github.com/commercialhaskell/stack/issues/4726)\n*
  Add `--docker-mount-mode` option to set the Docker volume mount mode\n  for performance
  tuning on macOS.\n\nBug fixes:\n\n* Ignore duplicate files for a single module when
  a Haskell module was\n  generated from a preprocessor file. See\n  [#4076](https://github.com/commercialhaskell/stack/issues/4076).\n*
  Only track down components in current directory if there are no\n  hs-source-dirs
  found. This eliminates a number of false-positive\n  warnings, similar to\n  [#4076](https://github.com/commercialhaskell/stack/issues/4076).\n*
  Handle a change in GHC's hi-dump format around `addDependentFile`,\n  which now
  includes a hash. See\n  [yesodweb/yesod#1551](https://github.com/yesodweb/yesod/issues/1551)\n*
  Fix `subdirs` for git repos in `extra-deps` to match whole directory names.\n  Also
  fixes for `subdirs: .`. See\n  [#4292](https://github.com/commercialhaskell/stack/issues/4292)\n*
  Fix for git packages to update submodules to the correct state. See\n  [#4314](https://github.com/commercialhaskell/stack/pull/4314)\n*
  Add `--cabal-files` flag to `stack ide targets` command.\n* Don't download ghc when
  using `stack clean`.\n* Support loading in GHCi definitions from symlinked C files.
  Without this\n  patch, Stack will try to find object files in the directory pointed
  to\n  by symlinks, while GCC will produce the object files in the original\n  directory.
  See\n  [#4402](https://github.com/commercialhaskell/stack/pull/4402)\n* Fix handling
  of GitHub and URL templates on Windows. See\n  [commercialhaskell/stack#4394](https://github.com/commercialhaskell/stack/issues/4394)\n*
  Fix `--file-watch` not responding to file modifications when running\n  inside docker
  on Mac. See\n  [#4506](https://github.com/commercialhaskell/stack/issues/4506)\n*
  Using `--ghc-options` with `stack script --compile` now works.\n* Ensure the detailed-0.9
  type tests work.\n  See [#4453](https://github.com/commercialhaskell/stack/issues/4453).\n*
  Extra include and lib dirs are now order-dependent. See\n  [#4527](https://github.com/commercialhaskell/stack/issues/4527).\n*
  Apply GHC options when building a `Setup.hs` file. See\n  [#4526](https://github.com/commercialhaskell/stack/issues/4526).\n*
  Stack handles ABI changes in FreeBSD 12 by differentiating that version from\n  previous.\n*
  Help text for the `templates` subcommand now reflects behaviour in stack 1.9\n  —
  that it downloads and shows a help file, rather than listing available\n  templates.\n*
  Fix detection of aarch64 platform (this broke when we upgraded to a newer\n  Cabal
  version).\n* Docker: fix detecting and pulling missing images with `--docker-auto-pull`,
  see\n  [#4598](https://github.com/commercialhaskell/stack/issues/4598)\n* Hackage
  credentials are not world-readable. See\n  [#2159](https://github.com/commercialhaskell/stack/issues/2159).\n*
  Warnings are dumped from logs even when color is enabled. See\n  [#2997](https://github.com/commercialhaskell/stack/issues/2997)\n*
  `stack init` will now work for cabal files with sublibraries. See\n  [#4408](https://github.com/commercialhaskell/stack/issues/4408)\n*
  When the Cabal spec version is newer than the global Cabal version, build\n  against
  the snapshot's Cabal library. See\n  [#4488](https://github.com/commercialhaskell/stack/issues/4488)\n*
  Docker: fix detection of expected subprocess failures.  This fixes\n  downloading
  a compatible `stack` executable  when the host `stack` is not\n  compatible with
  the Docker image (on Linux), and doesn't show an unnecessary\n  extra error when
  the in-container re-exec'ed `stack` exits with failure.\n* The `stack ghci` command's
  `--ghc-options` flag now parses multiple options.\n  See [#3315](https://github.com/commercialhaskell/stack/issues/3315).\n\n\n##
  v1.9.3.1\n\nHackage-only release with no user facing changes (added compatibility\nwith
  `rio-0.1.9.2`).\n\n\n## v1.9.3\n\nBug fixes:\n\n* Stack can now be compiled again
  inside a directory that does not\n  contain a `.git` directory, see\n  [#4364](https://github.com/commercialhaskell/stack/issues/4364#issuecomment-431600841)\n*
  Handle a change in GHC's hi-dump format around `addDependentFile`,\n  which now
  includes a hash. See\n  [yesodweb/yesod#1551](https://github.com/yesodweb/yesod/issues/1551)\n*
  Allow variables to appear in template file names.\n\n\n## v1.9.1.1\n\nHackage-only
  release with no user facing changes.\n\n* Stack can now be compiled again inside
  a directory that does not\n  contain a `.git` directory, see\n  [#4364](https://github.com/commercialhaskell/stack/issues/4364#issuecomment-431600841)\n\n\n##
  v1.9.1\n\nRelease notes:\n\n* Statically linked Linux bindists are back again, thanks
  to [@nh2](https://github.com/nh2).\n* We will be deleting the Ubuntu, Debian, CentOS,
  Fedora, and Arch package repos from `download.fpcomplete.com` soon.  These have
  been deprecated for over a year and have not received new releases, but were left
  in place for compatibility with older scripts.\n\nMajor changes:\n\n* Upgrade to
  Cabal 2.4\n    * Note that, in this process, the behavior of file globbing has\n
  \     been modified to match that of Cabal. In particular, this means\n      that
  for Cabal spec versions less than 2.4, `*.txt` will\n      match `foo.txt`, but
  not `foo.2.txt`.\n* `GHCJS` support is being downgraded to 'experimental'. A warning
  notifying the user of the experimental status of `GHCJS` will be displayed.\n\nBehavior
  changes:\n\n* `ghc-options` from `stack.yaml` are now appended to `ghc-options`
  from\n  `config.yaml`, whereas before they would be replaced.\n* `stack build` will
  now announce when sublibraries of a package are being\n  build, in the same way
  executables, tests, benchmarks and libraries are\n  announced\n* `stack sdist` will
  now announce the destination of the generated tarball,\n    regardless of whether
  or not it passed the sanity checks\n* The `--upgrade-cabal` option to `stack setup`
  has been\n  deprecated. This feature no longer works with GHC 8.2 and\n  later.
  Furthermore, the reason for this flag originally being\n  implemented was drastically
  lessened once Stack started using the\n  snapshot's `Cabal` library for custom setups.
  See:\n  [#4070](https://github.com/commercialhaskell/stack/issues/4070).\n* With
  the new namespaced template feature, `stack templates` is no\n  longer able to meaningfully
  display a list of all templates\n  available. Instead, the command will download
  and display a\n  [help file](https://github.com/commercialhaskell/stack-templates/blob/master/STACK_HELP.md)\n
  \ with more information on how to discover templates. See:\n  [#4039](https://github.com/commercialhaskell/stack/issues/4039)\n*
  Build tools are now handled in a similar way to `cabal-install`. In\n  particular,
  for legacy `build-tools` fields, we use a hard-coded\n  list of build tools in place
  of looking up build tool packages in a\n  tool map. This both brings Stack's behavior
  closer into line with\n  `cabal-install`, avoids some bugs, and opens up some possible\n
  \ optimizations/laziness. See:\n  [#4125](https://github.com/commercialhaskell/stack/issues/4125).\n*
  Mustache templating is not applied to large files (over 50kb) to\n  avoid performance
  degredation. See:\n  [#4133](https://github.com/commercialhaskell/stack/issues/4133).\n*
  `stack upload` signs the package by default, as documented. `--no-signature`\n  turns
  the signing off.\n  [#3739](https://github.com/commercialhaskell/stack/issues/3739)\n*
  In case there is a network connectivity issue while trying to\n  download a template,
  stack will check whether that template had\n  been downloaded before. In that case,
  the cached version will be\n  used. See [#3850](https://github.com/commercialhaskell/stack/issues/3850).\n\nOther
  enhancements:\n\n* On Windows before Windows 10, --color=never is the default on
  terminals that\n  can support ANSI color codes in output only by emulation\n* On
  Windows, recognise a 'mintty' (false) terminal as a terminal, by default\n* `stack
  build` issues a warning when `base` is explicitly listed in\n  `extra-deps` of `stack.yaml`\n*
  `stack build` suggests trying another GHC version should the build\n  plan end up
  requiring unattainable `base` version.\n* A new sub command `run` has been introduced
  to build and run a specified executable\n  similar to `cabal run`. If no executable
  is provided as the first argument, it\n  defaults to the first available executable
  in the project.\n* `stack build` missing dependency suggestions (on failure to construct
  a valid\n  build plan because of missing deps) are now printed with their latest\n
  \ cabal file revision hash. See\n  [#4068](https://github.com/commercialhaskell/stack/pull/4068).\n*
  Added new `--tar-dir` option to `stack sdist`, that allows to copy\n  the resulting
  tarball to the specified directory.\n* Introduced the `--interleaved-output` command
  line option and\n  `build.interleaved-output` config value which causes multiple
  concurrent\n  builds to dump to stderr at the same time with a `packagename> ` prefix.
  See\n  [#3225](https://github.com/commercialhaskell/stack/issues/3225).\n* The default
  retry strategy has changed to exponential backoff.\n  This should help with\n  [#3510](https://github.com/commercialhaskell/stack/issues/3510).\n*
  `stack new` now allows template names of the form `username/foo` to\n  download
  from a user other than `commercialstack` on Github, and can be prefixed\n  with
  the service `github:`, `gitlab:`, or `bitbucket:`.  [#4039](https://github.com/commercialhaskell/stack/issues/4039)\n*
  Switch to `githash` to include some unmerged bugfixes in `gitrev`\n  Suggestion
  to add `'allow-newer': true` now shows path to user config\n  file where this flag
  should be put into [#3685](https://github.com/commercialhaskell/stack/issues/3685)\n*
  `stack ghci` now asks which main target to load before doing the build,\n  rather
  than after\n* Bump to hpack 0.29.0\n* With GHC 8.4 and later, Haddock is given the
  `--quickjump` flag.\n* It is possible to specify the Hackage base URL to upload
  packages to, instead\n  of the default of `https://hackage.haskell.org/`, by using
  `hackage-base-url`\n  configuration option.\n* When using Nix, if a specific minor
  version of GHC is not requested, the\n  latest minor version in the given major
  branch will be used automatically.\n\nBug fixes:\n\n* `stack ghci` now does not
  invalidate `.o` files on repeated runs,\n  meaning any modules compiled with `-fobject-code`
  will be cached\n  between ghci runs. See\n  [#4038](https://github.com/commercialhaskell/stack/pull/4038).\n*
  `~/.stack/config.yaml` and `stack.yaml` terminating by newline\n* The previous released
  caused a regression where some `stderr` from the\n  `ghc-pkg` command showed up
  in the terminal. This output is now silenced.\n* A regression in recompilation checking
  introduced in v1.7.1 has been fixed.\n  See [#4001](https://github.com/commercialhaskell/stack/issues/4001)\n*
  `stack ghci` on a package with internal libraries was erroneously looking\n  for
  a wrong package corresponding to the internal library and failing to\n  load any
  module. This has been fixed now and changes to the code in the\n  library and the
  sublibrary are properly tracked. See\n  [#3926](https://github.com/commercialhaskell/stack/issues/3926).\n*
  For packages with internal libraries not depended upon, `stack build` used\n  to
  fail the build process since the internal library was not built but it\n  was tried
  to be registered. This is now fixed by always building internal\n  libraries. See\n
  \ [#3996](https://github.com/commercialhaskell/stack/issues/3996).\n* `--no-nix`
  was not respected under NixOS\n* Fix a regression which might use a lot of RAM.
  See\n  [#4027](https://github.com/commercialhaskell/stack/issues/4027).\n* Order
  of commandline arguments does not matter anymore.\n  See [#3959](https://github.com/commercialhaskell/stack/issues/3959)\n*
  When prompting users about saving their Hackage credentials on upload,\n  flush
  to stdout before waiting for the response so the prompt actually\n  displays. Also
  fixes a similar issue with ghci target selection prompt.\n* If `cabal` is not on
  PATH, running `stack solver` now prompts the user\n  to run `stack install cabal-install`\n*
  `stack build` now succeeds in building packages which contain sublibraries\n  which
  are dependencies of executables, tests or benchmarks but not of the\n  main library.
  See\n  [#3787](https://github.com/commercialhaskell/stack/issues/3787).\n* Sublibraries
  are now properly considered for coverage reports when the test\n  suite depends
  on the internal library. Before, stack was erroring when\n  trying to generate the
  coverage report, see\n  [#4105](https://github.com/commercialhaskell/stack/issues/4105).\n*
  Sublibraries are now added to the precompiled cache and recovered from there\n  when
  the snapshot gets updated. Previously, updating the snapshot when there\n  was a
  package with a sublibrary in the snapshot resulted in broken builds.\n  This is
  now fixed, see\n  [#4071](https://github.com/commercialhaskell/stack/issues/4071).\n*
  [#4114](https://github.com/commercialhaskell/stack/issues/4114) Stack pretty prints
  error messages with proper `error` logging\n  level instead of `warning` now. This
  also fixes self-executing scripts\n  not piping plan construction errors from runhaskell
  to terminal (issue\n  [#3942](https://github.com/commercialhaskell/stack/issues/3942)).\n*
  Fix invalid \"While building Setup.hs\" when Cabal calls fail. See:\n  [#3934](https://github.com/commercialhaskell/stack/issues/3934)\n*
  `stack upload` signs the package by default, as documented. `--no-signature`\n  turns
  the signing off.\n  [#3739](https://github.com/commercialhaskell/stack/issues/3739)\n\n\n##
  v1.7.1\n\nRelease notes:\n\n* aarch64 (64-bit ARM) bindists are now available for
  the first time.\n* Statically linked Linux bindists are no longer available, due
  to difficulty with GHC 8.2.2 on Alpine Linux.\n* 32-bit Linux GMP4 bindists for
  CentOS 6 are no longer available, since GHC 8.2.2 is no longer being built for that
  platform.\n\nMajor changes:\n\n* Upgrade from Cabal 2.0 to Cabal 2.2\n\nBehavior
  changes:\n\n* `stack setup` no longer uses different GHC configure options on Linux\n
  \ distributions that use GCC with PIE enabled by default.  GHC detects\n  this itself
  since ghc-8.0.2, and Stack's attempted workaround for older\n  versions caused more
  problems than it solved.\n* `stack new` no longer initializes a project if the project
  template contains\n   a stack.yaml file.\n\nOther enhancements:\n\n* A new sub command
  `ls` has been introduced to stack to view\n  local and remote snapshots present
  in the system. Use `stack ls\n  snapshots --help` to get more details about it.\n*
  `list-dependencies` has been deprecated. The functionality has\n  to accessed through
  the new `ls dependencies` interface. See\n  [#3669](https://github.com/commercialhaskell/stack/issues/3669)\n
  \ for details.\n* Specify User-Agent HTTP request header on every HTTP request.\n
  \ See [#3628](https://github.com/commercialhaskell/stack/issues/3628) for details.\n*
  `stack setup` looks for GHC bindists and installations by any OS key\n  that is
  compatible (rather than only checking a single one).   This is\n  relevant on Linux
  where different distributions may have different\n  combinations of libtinfo 5/6,
  ncurses 5/6, and gmp 4/5, and will allow\n  simpifying the setup-info metadata YAML
  for future GHC releases.\n* The build progress bar reports names of packages currently
  building.\n* `stack setup --verbose` causes verbose output of GHC configure process.\n
  \ See [#3716](https://github.com/commercialhaskell/stack/issues/3716)\n* Improve
  the error message when an `extra-dep` from a path or git reference can't be found\n
  \ See [#3808](https://github.com/commercialhaskell/stack/pull/3808)\n* Nix integration
  is now disabled on windows even if explicitly enabled,\n  since it isn't supported.
  See\n  [#3600](https://github.com/commercialhaskell/stack/issues/3600)\n* `stack
  build` now supports a new flag `--keep-tmp-files` to retain intermediate\n  files
  and directories for the purpose of debugging.\n  It is best used with ghc's equivalent
  flag,\n  i.e. `stack build --keep-tmp-files --ghc-options=-keep-tmp-files`.\n  See
  [#3857](https://github.com/commercialhaskell/stack/issues/3857)\n* Improved error
  messages for snapshot parse exceptions\n* `stack unpack` now supports a `--to /target/directory`
  option to\n  specify where to unpack the package into\n* `stack hoogle` now supports
  a new flag `--server` that launches local\n  Hoogle server on port 8080. See\n  [#2310](https://github.com/commercialhaskell/stack/issues/2310)\n\nBug
  fixes:\n\n* The script interpreter's implicit file arguments are now passed before
  other\n  arguments. See [#3658](https://github.com/commercialhaskell/stack/issues/3658).\n
  \ In particular, this makes it possible to pass `-- +RTS ... -RTS` to specify\n
  \ RTS arguments used when running the script.\n* Don't ignore the template `year`
  parameter in config files, and clarify the\n  surrounding documentation. See\n  [#2275](https://github.com/commercialhaskell/stack/issues/2275).\n*
  Benchmarks used to be run concurrently with other benchmarks\n  and build steps.
  This is non-ideal because CPU usage of other processes\n  may interfere with benchmarks.
  It also prevented benchmark output from\n  being displayed by default. This is now
  fixed. See\n  [#3663](https://github.com/commercialhaskell/stack/issues/3663).\n*
  `stack ghci` now allows loading multiple packages with the same\n  module name,
  as long as they have the same filepath. See\n  [#3776](https://github.com/commercialhaskell/stack/pull/3776).\n*
  `stack ghci` no longer always adds a dependency on `base`. It is\n  now only added
  when there are no local targets. This allows it to\n  be to load code that uses
  replacements for `base`. See\n  [#3589](https://github.com/commercialhaskell/stack/issues/3589#issuecomment)\n*
  `stack ghci` now uses correct paths for autogen files with\n  [#3791](https://github.com/commercialhaskell/stack/issues/3791)\n*
  When a package contained sublibraries, stack was always recompiling the\n  package.
  This has been fixed now, no recompilation is being done because of\n  sublibraries.
  See [#3899](https://github.com/commercialhaskell/stack/issues/3899).\n* The `get-stack.sh`
  install script now matches manual instructions\n  when it comes to Debian/Fedora/CentOS
  install dependencies.\n* Compile Cabal-simple with gmp when using Nix.\n  See [#2944](https://github.com/commercialhaskell/stack/issues/2944)\n*
  `stack ghci` now replaces the stack process with ghci. This improves\n  signal handling
  behavior. In particular, handling of Ctrl-C.  To make\n  this possible, the generated
  files are now left behind after exit.\n  The paths are based on hashing file contents,
  and it's stored in the\n  system temporary directory, so this shouldn't result in
  too much\n  garbage. See\n  [#3821](https://github.com/commercialhaskell/stack/issues/3821).\n\n\n##
  v1.6.5\n\nBug fixes:\n\n* Some unnecessary rebuilds when no files were changed are
  now avoided, by\n  having a separate build cache for each component of a package.
  See\n  [#3732](https://github.com/commercialhaskell/stack/issues/3732).\n* Correct
  the behavior of promoting a package from snapshot to local\n  package. This would
  get triggered when version bounds conflicted in\n  a snapshot, which could be triggered
  via Hackage revisions for old\n  packages. This also should allow custom snapshots
  to define\n  conflicting versions of packages without issue. See\n  [Stackage issue
  #3185](https://github.com/fpco/stackage/issues/3185).\n* When promoting packages
  from snapshot to local, we were\n  occassionally discarding the actual package location
  content and\n  instead defaulting to pulling the package from the index. We now\n
  \ correctly retain this information. Note that if you were affected by\n  this bug,
  you will likely need to delete the binary build cache\n  associated with the relevant
  custom snapshot. See\n  [#3714](https://github.com/commercialhaskell/stack/issues/3714).\n*
  `--no-rerun-tests` has been fixed. Previously, after running a test\n  we were forgetting
  to record the result, which meant that all tests\n  always ran even if they had
  already passed before. See\n  [#3770](https://github.com/commercialhaskell/stack/pull/3770).\n*
  Includes a patched version of `hackage-security` which fixes both\n  some issues
  around asynchronous exception handling, and moves from\n  directory locking to file
  locking, making the update mechanism\n  resilient against SIGKILL and machine failure.
  See\n  [hackage-security #187](https://github.com/haskell/hackage-security/issues/187)\n
  \ and [#3073](https://github.com/commercialhaskell/stack/issues/3073).\n\n\n## v1.6.3.1\n\nHackage-only
  release with no user facing changes (updated to build with\nnewer version of hpack
  dependency).\n\n\n## v1.6.3\n\nEnhancements:\n\n* In addition to supporting `.tar.gz`
  and `.zip` files as remote archives,\n  plain `.tar` files are now accepted too.
  This will additionally help with\n  cases where HTTP servers mistakenly set the
  transfer encoding to `gzip`. See\n  [#3647](https://github.com/commercialhaskell/stack/issues/3647).\n*
  Links to docs.haskellstack.org ignore Stack version patchlevel.\n* Downloading Docker-compatible
  `stack` binary ignores Stack version patchlevel.\n\nBug fixes:\n\n* For versions
  of Cabal before 1.24, ensure that the dependencies of\n  non-buildable components
  are part of the build plan to work around an old\n  Cabal bug. See [#3631](https://github.com/commercialhaskell/stack/issues/3631).\n*
  Run the Cabal file checking in the `sdist` command more reliably by\n  allowing
  the Cabal library to flatten the\n  `GenericPackageDescription` itself.\n\n\n##
  v1.6.1.1\n\nHackage-only release with no user facing changes (updated to build with\nnewer
  dependency versions).\n\n\n## v1.6.1\n\nMajor changes:\n\n* Complete overhaul of
  how snapshots are defined, the `packages` and\n  `extra-deps` fields, and a number
  of related items. For full\n  details, please see\n  [the writeup on these changes](https://www.fpcomplete.com/blog/2017/07/stacks-new-extensible-snapshots).
  [PR #3249](https://github.com/commercialhaskell/stack/pull/3249),\n  see the PR
  description for a number of related issues.\n* Upgraded to version 2.0 of the Cabal
  library.\n\nBehavior changes:\n\n* The `--install-ghc` flag is now on by default.
  For example, if you\n  run `stack build` in a directory requiring a GHC that you
  do not\n  currently have, Stack will automatically download and install that\n  GHC.
  You can explicitly set `install-ghc: false` or pass the flag\n  `--no-install-ghc`
  to regain the previous behavior.\n* `stack ghci` no longer loads modules grouped
  by package. This is\n  always an improvement for plain ghci - it makes loading faster
  and\n  less noisy. For intero, this has the side-effect that it will no\n  longer
  load multiple packages that depend on TH loading relative\n  paths.  TH relative
  paths will still work when loading a single\n  package into intero. See\n  [#3309](https://github.com/commercialhaskell/stack/issues/3309)\n*
  Setting GHC options for a package via `ghc-options:` in your\n  `stack.yaml` will
  promote it to a local package, providing for more\n  consistency with flags and
  better reproducibility. See:\n  [#849](https://github.com/commercialhaskell/stack/issues/849)\n*
  The `package-indices` setting with Hackage no longer works with the\n  `00-index.tar.gz`
  tarball, but must use the `01-index.tar.gz` file\n  to allow revised packages to
  be found.\n* Options passed via `--ghci-options` are now passed to the end of the\n
  \ invocation of ghci, instead of the middle.  This allows using `+RTS`\n  without
  an accompanying `-RTS`.\n* When auto-detecting `--ghc-build`, `tinfo6` is now preferred
  over\n  `standard` if both versions of libtinfo are installed\n* Addition of `stack
  build --copy-compiler-tool`, to allow tools like\n  intero to be installed globally
  for a particular compiler.\n  [#2643](https://github.com/commercialhaskell/stack/issues/2643)\n*
  Stack will ask before saving hackage credentials to file. This new\n  prompt can
  be avoided by using the `save-hackage-creds` setting. Please\n  see [#2159](https://github.com/commercialhaskell/stack/issues/2159).\n*
  The `GHCRTS` environment variable will no longer be passed through to\n  every program
  stack runs. Instead, it will only be passed through\n  commands like `exec`, `runghc`,
  `script`, `ghci`, etc.\n  See [#3444](https://github.com/commercialhaskell/stack/issues/3444).\n*
  `ghc-options:` for specific packages will now come after the options\n  specified
  for all packages / particular sets of packages. See\n  [#3573](https://github.com/commercialhaskell/stack/issues/3573).\n*
  The `pvp-bounds` feature is no longer fully functional, due to some\n  issues with
  the Cabal library's printer. See\n  [#3550](https://github.com/commercialhaskell/stack/issues/3550).\n\nOther
  enhancements:\n\n* The `with-hpack` configuration option specifies an Hpack executable
  to use\n  instead of the Hpack bundled with Stack. Please\n  see [#3179](https://github.com/commercialhaskell/stack/issues/3179).\n*
  It's now possible to skip tests and benchmarks using `--skip`\n  flag\n* `GitSHA1`
  is now `StaticSHA256` and is implemented using the `StaticSize 64 ByteString` for
  improved performance.\n  See [#3006](https://github.com/commercialhaskell/stack/issues/3006)\n*
  Dependencies via HTTP(S) archives have been generalized to allow\n  local file path
  archives, as well as to support setting a\n  cryptographic hash (SHA256) of the
  contents for better\n  reproducibility.\n* Allow specifying `--git-branch` when
  upgrading\n* When running `stack upgrade` from a file which is different from the\n
  \ default executable path (e.g., on POSIX systems,\n  `~/.local/bin/stack`), it
  will now additionally copy the new\n  executable over the currently running `stack`
  executable. If\n  permission is denied (such as in `/usr/local/bin/stack`), the
  user\n  will be prompted to try again using `sudo`. This is intended to\n  assist
  with the user experience when the `PATH` environment variable\n  has not been properly
  configured, see\n  [#3232](https://github.com/commercialhaskell/stack/issues/3232).\n*
  `stack setup` for ghcjs will now install `alex` and `happy` if\n  they are not present.
  \ See\n  [#3109](https://github.com/commercialhaskell/stack/issues/3232).\n* Added
  `stack ghci --only-main` flag, to skip loading / importing\n  all but main modules.
  See the ghci documentation page\n  for further info.\n* Allow GHC's colored output
  to show through. GHC colors output\n  starting with version 8.2.1, for older GHC
  this does nothing.\n  Sometimes GHC's heuristics would work fine even before this
  change,\n  for example in `stack ghci`, but this override's GHC's heuristics\n  when
  they're broken by our collecting and processing GHC's output.\n* Extended the `ghc-options`
  field to support `$locals`, `$targets`,\n  and `$everything`. See:\n  [#3329](https://github.com/commercialhaskell/stack/issues/3329)\n*
  Better error message for case that `stack ghci` file targets are\n  combined with
  invalid package targets. See:\n  [#3342](https://github.com/commercialhaskell/stack/issues/3342)\n*
  For profiling now uses `-fprof-auto -fprof-cafs` instead of\n  the deprecated `-auto-all
  -caf-all`. See:\n  [#3360](https://github.com/commercialhaskell/stack/issues/3360)\n*
  Better descriptions are now available for `stack upgrade --help`. See:\n  [#3070](https://github.com/commercialhaskell/stack/issues/3070)\n*
  When using Nix, nix-shell now depends always on gcc to prevent build errors\n  when
  using the FFI. As ghc depends on gcc anyway, this doesn't increase the\n  dependency
  footprint.\n* `--cwd DIR` can now be passed to `stack exec` in order to execute
  the\n  program in a different directory. See:\n  [#3264](https://github.com/commercialhaskell/stack/issues/3264)\n*
  Plan construction will detect if you add an executable-only package\n  as a library
  dependency, resulting in much clearer error\n  messages. See:\n  [#2195](https://github.com/commercialhaskell/stack/issues/2195).\n*
  Addition of `--ghc-options` to `stack script` to pass options directly\n  to GHC.
  See:\n  [#3454](https://github.com/commercialhaskell/stack/issues/3454)\n* Add hpack
  `package.yaml` to build Stack itself\n* Add `ignore-revision-mismatch` setting.
  See:\n  [#3520](https://github.com/commercialhaskell/stack/issues/3520).\n* Log
  when each individual test suite finishes. See:\n  [#3552](https://github.com/commercialhaskell/stack/issues/3552).\n*
  Avoid spurious rebuilds when using `--file-watch` by not watching files for\n  executable,
  test and benchmark components that aren't a target. See:\n  [#3483](https://github.com/commercialhaskell/stack/issues/3483).\n*
  Stack will now try to detect the width of the running terminal\n  (only on POSIX
  for the moment) and use that to better display\n  output messages. Work is ongoing,
  so some messages will not\n  be optimal yet. The terminal width can be overridden
  with the\n  new `--terminal-width` command-line option (this works even on\n  non-POSIX).\n*
  Passing non local packages as targets to `stack ghci` will now\n  cause them to
  be used as `-package` args along with package\n  hiding.\n* Detect when user changed
  .cabal file instead of package.yaml. This\n  was implemented upstream in hpack.
  See\n  [#3383](https://github.com/commercialhaskell/stack/issues/3383).\n* Automatically
  run `autoreconf -i` as necessary when a `configure`\n  script is missing. See\n
  \ [#3534](https://github.com/commercialhaskell/stack/issues/3534)\n* GHC bindists
  can now be identified by their SHA256 checksum in addition to\n  their SHA1 checksum,
  allowing for more security in download.\n* For filesystem setup-info paths, it's
  no longer assumed that the\n  directory is writable, instead a temp dir is used.
  \ See\n  [#3188](https://github.com/commercialhaskell/stack/issues/3188).\n\nBug
  fixes:\n\n* `stack hoogle` correctly generates Hoogle databases. See:\n  [#3362](https://github.com/commercialhaskell/stack/issues/3362)\n*
  `stack --docker-help` is now clearer about --docker implying\n   system-ghc: true,
  rather than both --docker and --no-docker.\n* `stack haddock` now includes package
  names for all modules in the\n   Haddock index page. See:\n  [#2886](https://github.com/commercialhaskell/stack/issues/2886)\n*
  Fixed an issue where Stack wouldn't detect missing Docker images\n  properly with
  newer Docker versions.\n  [#3171](https://github.com/commercialhaskell/stack/pull/3171)\n*
  Previously, cabal files with just test-suite could cause build to fail\n  ([#2862](https://github.com/commercialhaskell/stack/issues/2862))\n*
  If an invalid snapshot file has been detected (usually due to\n  mismatched hashes),
  Stack will delete the downloaded file and\n  recommend either retrying or filing
  an issue upstream. See\n  [#3319](https://github.com/commercialhaskell/stack/issues/3319).\n*
  Modified the flag parser within Stack to match the behavior of\n  Cabal's flag parser,
  which allows multiple sequential dashes. See\n  [#3345](https://github.com/commercialhaskell/stack/issues/3345)\n*
  Now clears the hackage index cache if it is older than the\n  downloaded index.
  \ Fixes potential issue if stack was interrupted when\n  updating index.\n  See
  [#3033](https://github.com/commercialhaskell/stack/issues/3033)\n* The Stack install
  script now respects the `-d` option.\n  See [#3366](https://github.com/commercialhaskell/stack/pull/3366).\n*
  `stack script` can now handle relative paths to source files.\n  See [#3372](https://github.com/commercialhaskell/stack/issues/3372).\n*
  Fixes explanation of why a target is needed by the build plan, when the\n  target
  is an extra dependency from the commandline.\n  See [#3378](https://github.com/commercialhaskell/stack/issues/3378).\n*
  Previously, if you delete a yaml file from ~/.stack/build-plan, it would\n  trust
  the etag and not re-download.  Fixed in this version.\n* Invoking `stack --docker`
  in parallel now correctly locks the sqlite database.\n  See [#3400](https://github.com/commercialhaskell/stack/issues/3400).\n*
  docs.haskellstack.org RTD documentation search is replaced by the mkdocs\n  search.
  Please see\n  [#3376](https://github.com/commercialhaskell/stack/issues/3376).\n*
  `stack clean` now works with nix.  See\n  [#3468](https://github.com/commercialhaskell/stack/issues/3376).\n*
  `stack build --only-dependencies` no longer builds local project packages\n  that
  are depended on. See\n  [#3476](https://github.com/commercialhaskell/stack/issues/3476).\n*
  Properly handle relative paths stored in the precompiled cache files. See\n  [#3431](https://github.com/commercialhaskell/stack/issues/3431).\n*
  In some cases, Cabal does not realize that it needs to reconfigure, and must\n  be
  told to do so automatically. This would manifest as a \"shadowed\n  dependency\"
  error message. We now force a reconfigure whenever a dependency is\n  built, even
  if the package ID remained the same. See\n  [#2781](https://github.com/commercialhaskell/stack/issues/2781).\n*
  When `--pvp-bounds` is enabled for sdist or upload, internal\n  dependencies could
  cause errors when uploaded to hackage.  This is\n  fixed, see [#3290](https://github.com/commercialhaskell/stack/issues/3290)\n*
  Fixes a bug where nonexistent hackage versions would cause stack to\n  suggest the
  same package name, without giving version info. See\n  [#3562](https://github.com/commercialhaskell/stack/issues/3562)\n*
  Fixes a bug that has existed since 1.5.0, where\n  `stack setup --upgrade-cabal`
  would say that Cabal is already the latest\n  version, when it wasn't.\n* Ensure
  that an `extra-dep` from a local directory is not treated as\n  a `$locals` for
  GHC options purposes. See\n  [#3574](https://github.com/commercialhaskell/stack/issues/3574).\n*
  Building all executables only happens once instead of every\n  time. See\n  [#3229](https://github.com/commercialhaskell/stack/issues/3229)
  for\n  more info.\n\n\n## 1.5.1\n\nBug fixes:\n\n* Stack eagerly tries to parse
  all cabal files related to a\n  snapshot. Starting with Stackage Nightly 2017-07-31,
  snapshots are\n  using GHC 8.2.1, and the `ghc.cabal` file implicitly referenced
  uses\n  the (not yet supported) Cabal 2.0 file format. Future releases of\n  Stack
  will both be less eager about cabal file parsing and support\n  Cabal 2.0. This
  patch simply bypasses the error for invalid parsing.\n\n\n## 1.5.0\n\nBehavior changes:\n\n*
  `stack profile` and `stack trace` now add their extra RTS arguments for\n  benchmarks
  and tests to the beginning of the args, instead of the end.\n  See [#2399](https://github.com/commercialhaskell/stack/issues/2399)\n*
  Support for Git-based indices has been removed.\n\nOther enhancements:\n\n* `stack
  setup` allow to control options passed to ghcjs-boot with\n  `--ghcjs-boot-options`
  (one word at a time) and `--[no-]ghcjs-boot-clean`\n* `stack setup` now accepts
  a `--install-cabal VERSION` option which\n  will install a specific version of the
  Cabal library globally.\n* Updates to store-0.4.1, which has improved performance
  and better error\n  reporting for version tags.  A side-effect of this is that all
  of\n  stack's binary caches will be invalidated.\n* `stack solver` will now warn
  about unexpected cabal-install versions.\n  See [#3044](https://github.com/commercialhaskell/stack/issues/3044)\n*
  Upstream packages unpacked to a temp dir are now deleted as soon as\n  possible
  to avoid running out of space in `/tmp`.\n  See [#3018](https://github.com/commercialhaskell/stack/issues/3018)\n*
  Add short synonyms for `test-arguments` and `benchmark-arguments` options.\n* Adds
  `STACK_WORK` environment variable, to specify work dir.\n  See [#3063](https://github.com/commercialhaskell/stack/issues/3063)\n*
  Can now use relative paths for `extra-include-dirs` and `extra-lib-dirs`.\n  See
  [#2830](https://github.com/commercialhaskell/stack/issues/2830)\n* Improved bash
  completion for many options, including `--ghc-options`,\n  `--flag`, targets, and
  project executables for `exec`.\n* `--haddock-arguments` is actually used now when
  `haddock` is invoked\n  during documentation generation.\n* `--[no-]haddock-hyperlink-source`
  flag added which allows toggling\n  of sources being included in Haddock output.\n
  \ See [#3099](https://github.com/commercialhaskell/stack/issues/3099)\n* `stack
  ghci` will now skip building all local targets, even if they have\n  downstream
  deps, as long as it's registered in the DB.\n* The pvp-bounds feature now supports
  adding `-revision` to the end of\n  each value, e.g. `pvp-bounds: both-revision`.
  This means that, when\n  uploading to Hackage, Stack will first upload your tarball
  with an\n  unmodified `.cabal` file, and then upload a cabal file revision with\n
  \ the PVP bounds added. This can be useful&mdash;especially combined\n  with the\n
  \ [Stackage no-revisions feature](http://www.snoyman.com/blog/2017/04/stackages-no-revisions-field)&mdash;as\n
  \ a method to ensure PVP compliance without having to proactively fix\n  bounds
  issues for Stackage maintenance.\n* Expose a `save-hackage-creds` configuration
  option\n* On GHC <= 7.8, filters out spurious linker warnings on windows\n  See
  [#3127](https://github.com/commercialhaskell/stack/pull/3127)\n* Better error messages
  when creating or building packages which alias\n  wired-in packages. See\n  [#3172](https://github.com/commercialhaskell/stack/issues/3172).\n*
  MinGW bin folder now is searched for dynamic libraries. See [#3126](https://github.com/commercialhaskell/stack/issues/3126)\n*
  When using Nix, nix-shell now depends always on git to prevent runtime errors\n
  \ while fetching metadata\n* The `stack unpack` command now accepts a form where
  an explicit\n  Hackage revision hash is specified, e.g. `stack unpack\n  foo-1.2.3@gitsha1:deadbeef`.
  Note that this should be considered\n  _experimental_, Stack will likely move towards
  a different hash\n  format in the future.\n* Binary \"stack upgrade\" will now warn
  if the installed executable is not\n  on the PATH or shadowed by another entry.\n*
  Allow running tests on tarball created by sdist and upload\n  [#717](https://github.com/commercialhaskell/stack/issues/717).\n\nBug
  fixes:\n\n* Fixes case where `stack build --profile` might not cause executables
  /\n  tests / benchmarks to be rebuilt.\n  See [#2984](https://github.com/commercialhaskell/stack/issues/2984)\n*
  `stack ghci file.hs` now loads the file even if it isn't part of\n  your project.\n*
  `stack clean --full` now works when docker is enabled.\n  See [#2010](https://github.com/commercialhaskell/stack/issues/2010)\n*
  Fixes an issue where cyclic deps can cause benchmarks or tests to be run\n  before
  they are built.\n  See [#2153](https://github.com/commercialhaskell/stack/issues/2153)\n*
  Fixes `stack build --file-watch` in cases where a directory is removed\n  See [#1838](https://github.com/commercialhaskell/stack/issues/1838)\n*
  Fixes `stack dot` and `stack list-dependencies` to use info from the\n  package
  database for wired-in-packages (ghc, base, etc).\n  See [#3084](https://github.com/commercialhaskell/stack/issues/3084)\n*
  Fixes `stack --docker build` when user is part of libvirt/libvirtd\n  groups on
  Ubuntu Yakkety (16.10).\n  See [#3092](https://github.com/commercialhaskell/stack/issues/3092)\n*
  Switching a package between extra-dep and local package now forces\n  rebuild (previously
  it wouldn't if versions were the same).\n  See [#2147](https://github.com/commercialhaskell/stack/issues/2147)\n*
  `stack upload` no longer reveals your password when you type it on\n  MinTTY-based
  Windows shells, such as Cygwin and MSYS2.\n  See [#3142](https://github.com/commercialhaskell/stack/issues/3142)\n*
  `stack script`'s import parser will now properly parse files that\n  have Windows-style
  line endings (CRLF)\n\n\n## 1.4.0\n\nRelease notes:\n\n* Docker images:\n  [fpco/stack-full](https://hub.docker.com/r/fpco/stack-full/)
  and\n  [fpco/stack-run](https://hub.docker.com/r/fpco/stack-run/)\n  are no longer
  being built for LTS 8.0 and above.\n  [fpco/stack-build](https://hub.docker.com/r/fpco/stack-build/)\n
  \ images continue to be built with a\n  [simplified process](https://github.com/commercialhaskell/stack/tree/master/etc/dockerfiles/stack-build).\n
  \ [#624](https://github.com/commercialhaskell/stack/issues/624)\n\nMajor changes:\n\n*
  A new command, `script`, has been added, intended to make the script\n  interpreter
  workflow more reliable, easier to use, and more\n  efficient. This command forces
  the user to provide a `--resolver`\n  value, ignores all config files for more reproducible
  results, and\n  optimizes the existing package check to make the common case of
  all\n  packages already being present much faster. This mode does require\n  that
  all packages be present in a snapshot, however.\n  [#2805](https://github.com/commercialhaskell/stack/issues/2805)\n\nBehavior
  changes:\n\n* The default package metadata backend has been changed from Git to\n
  \ the 01-index.tar.gz file, from the hackage-security project. This is\n  intended
  to address some download speed issues from Github for\n  people in certain geographic
  regions. There is now full support for\n  checking out specific cabal file revisions
  from downloaded tarballs\n  as well. If you manually specify a package index with
  only a Git\n  URL, Git will still be used. See\n  [#2780](https://github.com/commercialhaskell/stack/issues/2780)\n*
  When you provide the `--resolver` argument to the `stack unpack`\n  command, any
  packages passed in by name only will be looked up in\n  the given snapshot instead
  of taking the latest version. For\n  example, `stack --resolver lts-7.14 unpack
  mtl` will get version\n  2.2.1 of `mtl`, regardless of the latest version available
  in the\n  package indices. This will also force the same cabal file revision\n  to
  be used as is specified in the snapshot.\n\n    Unpacking via a package identifier
  (e.g. `stack --resolver lts-7.14\n    unpack mtl-2.2.1`) will ignore any settings
  in the snapshot and take\n    the most recent revision.\n\n    For backwards compatibility
  with tools relying on the presence of a\n    `00-index.tar`, Stack will copy the
  `01-index.tar` file to\n    `00-index.tar`. Note, however, that these files are
  different; most\n    importantly, 00-index contains only the newest revisions of
  cabal\n    files, while 01-index contains all versions. You may still need to\n
  \   update your tooling.\n* Passing `--(no-)nix-*` options now no longer implies
  `--nix`, except for\n  `--nix-pure`, so that the user preference whether or not
  to use Nix is\n  honored even in the presence of options that change the Nix behavior.\n\nOther
  enhancements:\n\n* Internal cleanup: configuration types are now based much more
  on lenses\n* `stack build` and related commands now allow the user to disable debug
  symbol stripping\n  with new `--no-strip`, `--no-library-stripping`, and `--no-executable-shipping`
  flags,\n  closing [#877](https://github.com/commercialhaskell/stack/issues/877).\n
  \ Also turned error message for missing targets more readable ([#2384](https://github.com/commercialhaskell/stack/issues/2384))\n*
  `stack haddock` now shows index.html paths when documentation is already up to\n
  \ date. Resolved [#781](https://github.com/commercialhaskell/stack/issues/781)\n*
  Respects the `custom-setup` field introduced in Cabal 1.24. This\n  supercedes any
  `explicit-setup-deps` settings in your `stack.yaml`\n  and trusts the package's
  `.cabal` file to explicitly state all its\n  dependencies.\n* If system package
  installation fails, `get-stack.sh` will fail as well. Also\n  shows warning suggesting
  to run `apt-get update` or similar, depending on the\n  OS.\n  ([#2898](https://github.com/commercialhaskell/stack/issues/2898))\n*
  When `stack ghci` is run with a config with no packages (e.g. global project),\n
  \ it will now look for source files in the current work dir.\n  ([#2878](https://github.com/commercialhaskell/stack/issues/2878))\n*
  Bump to hpack 0.17.0 to allow `custom-setup` and `!include \"...\"` in `package.yaml`.\n*
  The script interpreter will now output error logging.  In particular,\n  this means
  it will output info about plan construction errors.\n  ([#2879](https://github.com/commercialhaskell/stack/issues/2879))\n*
  `stack ghci` now takes `--flag` and `--ghc-options` again (inadvertently\n  removed
  in 1.3.0).\n  ([#2986](https://github.com/commercialhaskell/stack/issues/2986))\n*
  `stack exec` now takes `--rts-options` which passes the given arguments inside of\n
  \ `+RTS ... args .. -RTS` to the executable. This works around stack itself consuming\n
  \ the RTS flags on Windows. ([#2640](https://github.com/commercialhaskell/stack/issues/2640))\n*
  Upgraded `http-client-tls` version, which now offers support for the\n  `socks5://`
  and `socks5h://` values in the `http_proxy` and `https_proxy`\n  environment variables.\n\nBug
  fixes:\n\n* Bump to hpack 0.16.0 to avoid character encoding issues when reading
  and\n  writing on non-UTF8 systems.\n* `stack ghci` will no longer ignore hsSourceDirs
  that contain `..`. ([#2895](https://github.com/commercialhaskell/stack/issues/2895))\n*
  `stack list-dependencies --license` now works for wired-in-packages,\n  like base.
  ([#2871](https://github.com/commercialhaskell/stack/issues/2871))\n* `stack setup`
  now correctly indicates when it uses system ghc\n  ([#2963](https://github.com/commercialhaskell/stack/issues/2963))\n*
  Fix to `stack config set`, in 1.3.2 it always applied to\n  the global project.\n
  \ ([#2709](https://github.com/commercialhaskell/stack/issues/2709))\n* Previously,
  cabal files without exe or lib would fail on the \"copy\" step.\n  ([#2862](https://github.com/commercialhaskell/stack/issues/2862))\n*
  `stack upgrade --git` now works properly.  Workaround for affected\n  versions (>=
  1.3.0) is to instead run `stack upgrade --git --source-only`.\n  ([#2977](https://github.com/commercialhaskell/stack/issues/2977))\n*
  Added support for GHC 8's slightly different warning format for\n  dumping warnings
  from logs.\n* Work around a bug in Cabal/GHC in which package IDs are not unique\n
  \ for different source code, leading to Stack not always rebuilding\n  packages
  depending on local packages which have\n  changed. ([#2904](https://github.com/commercialhaskell/stack/issues/2904))\n\n##
  1.3.2\n\nBug fixes:\n\n* `stack config set` can now be used without a compiler installed\n
  \ [#2852](https://github.com/commercialhaskell/stack/issues/2852).\n* `get-stack.sh`
  now installs correct binary on ARM for generic linux and raspbian,\n  closing [#2856](https://github.com/commercialhaskell/stack/issues/2856).\n*
  Correct the testing of whether a package database exists by checking\n  for the
  `package.cache` file itself instead of the containing\n  directory.\n* Revert a
  change in the previous release which made it impossible to\n  set local extra-dep
  packages as targets. This was overkill; we\n  really only wanted to disable their
  test suites, which was already\n  handled by a later\n  patch. [#2849](https://github.com/commercialhaskell/stack/issues/2849)\n*
  `stack new` always treats templates as being UTF-8 encoding,\n  ignoring locale
  settings on a local machine. See\n  [Yesod mailing list discussion](https://groups.google.com/d/msg/yesodweb/ZyWLsJOtY0c/aejf9E7rCAAJ)\n\n##
  1.3.0\n\nRelease notes:\n\n* For the _next_ stack release after this one, we are
  planning\n  changes to our Linux releases, including dropping our Ubuntu,\n  Debian,
  CentOS, and Fedora package repositories and switching to\n  statically linked binaries.
  See\n  [#2534](https://github.com/commercialhaskell/stack/issues/2534).\n  Note
  that upgrading without a package manager has gotten easier\n  with new binary upgrade
  support in `stack upgrade` (see the Major\n  Changes section below for more information).
  In addition, the\n  get.haskellstack.org script no longer installs from Ubuntu,\n
  \ Debian, CentOS, or Fedora package repositories. Instead it places\n  a generic
  binary in /usr/local/bin.\n\nMajor changes:\n\n* Stack will now always use its own
  GHC installation, even when a suitable GHC\n  installation is available on the PATH.
  To get the old behaviour, use\n  the `--system-ghc` flag or run `stack config set
  system-ghc --global true`.\n  Docker- and Nix-enabled projects continue to use the
  GHC installations\n  in their environment by default.\n\n    NB: Scripts that previously
  used stack in combination with a system GHC\n    installation should now include
  a `stack setup` line or use the `--install-ghc`\n    flag.\n    [#2221](https://github.com/commercialhaskell/stack/issues/2221)\n\n*
  `stack ghci` now defaults to skipping the build of target packages, because\n  support
  has been added for invoking \"initial build steps\", which create\n  autogen files
  and run preprocessors. The `--no-build` flag is now deprecated\n  because it should
  no longer be necessary. See\n  [#1364](https://github.com/commercialhaskell/stack/issues/1364)\n\n*
  Stack is now capable of doing binary upgrades instead of always\n  recompiling a
  new version from source. Running `stack upgrade` will\n  now default to downloading
  a binary version of Stack from the most\n  recent release, if one is available.
  See `stack upgrade --help` for\n  more options.\n  [#1238](https://github.com/commercialhaskell/stack/issues/1238)\n\nBehavior
  changes:\n\n* Passing `--resolver X` with a Stack command which forces creation
  of a global\n  project config, will pass resolver X into the initial config.\n  See
  [#2579](https://github.com/commercialhaskell/stack/issues/2229).\n\n* Switch the
  \"Run from outside project\" messages to debug-level, to\n  avoid spamming users
  in the normal case of non-project usage\n\n* If a remote package is specified (such
  as a Git repo) without an explicit\n  `extra-dep` setting, a warning is given to
  the user to provide one\n  explicitly.\n\nOther enhancements:\n\n* `stack haddock`
  now supports `--haddock-internal`. See\n  [#2229](https://github.com/commercialhaskell/stack/issues/2229)\n*
  Add support for `system-ghc` and `install-ghc` fields to `stack config set` command.\n*
  Add `ghc-build` option to override autodetected GHC build to use (e.g. gmp4,\n  tinfo6,
  nopie) on Linux.\n* `stack setup` detects systems where gcc enables PIE by default
  (such as Ubuntu\n  16.10 and Hardened Gentoo) and adjusts the GHC `configure` options
  accordingly.\n  [#2542](https://github.com/commercialhaskell/stack/issues/2542)\n*
  Upload to Hackage with HTTP digest instead of HTTP basic.\n* Make `stack list-dependencies`
  understand all of the `stack dot` options too.\n* Add the ability for `stack list-dependencies`
  to list dependency licenses by\n  passing the `--license` flag.\n* Dump logs that
  contain warnings for any local non-dependency packages\n  [#2545](https://github.com/commercialhaskell/stack/issues/2545)\n*
  Add the `dump-logs` config option and `--dump-logs` command line\n  option to get
  full build output on the\n  console. [#426](https://github.com/commercialhaskell/stack/issues/426)\n*
  Add the `--open` option to \"stack hpc report\" command, causing the report to\n
  \ be opened in the browser.\n* The `stack config set` command now accepts a `--global`
  flag for suitable fields\n  which causes it to modify the global user configuration
  (`~/.stack/config.yaml`)\n  instead of the project configuration.\n  [#2675](https://github.com/commercialhaskell/stack/pull/2675)\n*
  Information on the latest available snapshots is now downloaded from S3 instead
  of\n  stackage.org, increasing reliability in case of stackage.org outages.\n  [#2653](https://github.com/commercialhaskell/stack/pull/2653)\n*
  `stack dot` and `stack list-dependencies` now take targets and flags.\n  [#1919](https://github.com/commercialhaskell/stack/issues/1919)\n*
  Deprecate `stack setup --stack-setup-yaml` for `--setup-info-yaml` based\n  on discussion
  in [#2647](https://github.com/commercialhaskell/stack/issues/2647).\n* The `--main-is`
  flag for GHCI now implies the TARGET, fixing\n  [#1845](https://github.com/commercialhaskell/stack/issues/1845).\n*
  `stack ghci` no longer takes all build options, as many weren't useful\n  [#2199](https://github.com/commercialhaskell/stack/issues/2199)\n*
  `--no-time-in-log` option, to make verbose logs more diffable\n  [#2727](https://github.com/commercialhaskell/stack/issues/2727)\n*
  `--color` option added to override auto-detection of ANSI support\n  [#2725](https://github.com/commercialhaskell/stack/issues/2725)\n*
  Missing extra-deps are now warned about, adding a degree of typo detection\n  [#1521](https://github.com/commercialhaskell/stack/issues/1521)\n*
  No longer warns about missing build-tools if they are on the PATH.\n  [#2235](https://github.com/commercialhaskell/stack/issues/2235)\n*
  Replace enclosed-exceptions with safe-exceptions.\n  [#2768](https://github.com/commercialhaskell/stack/issues/2768)\n*
  The install location for GHC and other programs can now be configured with the\n
  \ `local-programs-path` option in `config.yaml`.\n  [#1644](https://github.com/commercialhaskell/stack/issues/1644)\n*
  Added option to add nix dependencies as nix GC roots\n* Proper pid 1 (init) process
  for `stack exec` with Docker\n* Dump build logs if they contain warnings.\n  [#2545](https://github.com/commercialhaskell/stack/issues/2545)\n*
  Docker: redirect stdout of `docker pull` to stderr so that\n  it will not interfere
  with output of other commands.\n* Nix & docker can be activated at the same time,
  in order to run stack in a nix-shell\n  in a container, preferably from an image
  already containing the nix dependencies\n  in its /nix/store\n* Stack/nix: Dependencies
  can be added as nix GC roots, so they are not removed\n  when running `nix-collect-garbage`\n\nBug
  fixes:\n\n* Fixed a gnarly bug where programs and package tarballs sometimes have\n
  \ corrupted downloads. See\n  [#2657](https://github.com/commercialhaskell/stack/issues/2568).\n*
  Add proper support for non-ASCII characters in file paths for the `sdist` command.\n
  \ See [#2549](https://github.com/commercialhaskell/stack/issues/2549)\n* Never treat
  `extra-dep` local packages as targets. This ensures\n  things like test suites are
  not run for these packages, and that\n  build output is not hidden due to their
  presence.\n* Fix a resource leak in `sinkProcessStderrStdout` which could affect\n
  \ much of the codebase, in particular copying precompiled\n  packages. [#1979](https://github.com/commercialhaskell/stack/issues/1979)\n*
  Docker: ensure that interrupted extraction process does not cause corrupt file\n
  \ when downloading a Docker-compatible Stack executable\n  [#2568](https://github.com/commercialhaskell/stack/issues/2568)\n*
  Fixed running `stack hpc report` on package targets.\n  [#2664](https://github.com/commercialhaskell/stack/issues/2664)\n*
  Fix a long-standing performance regression where stack would parse the .dump-hi\n
  \ files of the library components of local packages twice.\n  [#2658](https://github.com/commercialhaskell/stack/pull/2658)\n*
  Fixed a regression in \"stack ghci --no-load\", where it would prompt for a main\n
  \ module to load. [#2603](https://github.com/commercialhaskell/stack/pull/2603)\n*
  Build Setup.hs files with the threaded RTS, mirroring the behavior of\n  cabal-install
  and enabling more complex build systems in those files.\n* Fixed a bug in passing
  along `--ghc-options` to ghcjs.  They were being\n  provided as `--ghc-options`
  to Cabal, when it needs to be `--ghcjs-options`.\n  [#2714](https://github.com/commercialhaskell/stack/issues/2714)\n*
  Launch Docker from the project root regardless of the working\n  directory Stack
  is invoked from. This means paths relative to the project root\n  (e.g. environment
  files) can be specified in `stack.yaml`'s docker `run-args`.\n* `stack setup --reinstall`
  now behaves as expected.\n  [#2554](https://github.com/commercialhaskell/stack/issues/2554)\n\n##
  1.2.0\n\nRelease notes:\n\n* On many Un*x systems, Stack can now be installed with
  a simple\n  one-liner:\n\n        wget -qO- https://get.haskellstack.org/ | sh\n\n*
  The fix for\n  [#2175](https://github.com/commercialhaskell/stack/issues/2175)\n
  \ entails that stack must perform a full clone of a large Git repo of\n  Hackage
  meta-information. The total download size is about 200 MB.\n  Please be aware of
  this when upgrading your stack installation.\n\n* If you use Mac OS X, you may want
  to delay upgrading to macOS Sierra as there\n  are reports of GHC panics when building
  some packages (including Stack\n  itself). See [#2577](https://github.com/commercialhaskell/stack/issues/2577)\n\n*
  This version of Stack does not build on ARM or PowerPC systems (see\n  [store#37](https://github.com/fpco/store/issues/37)).
  \ Please stay with\n  version 1.1.2 for now on those architectures.  This will be
  rectified soon!\n\n* We are now releasing a\n  [statically linked Stack binary for
  64-bit Linux](https://get.haskellstack.org/stable/linux-x86_64-static.tar.gz).\n
  \ Please try it and let us know if you run into any trouble on your platform.\n\n*
  We are planning some changes to our Linux releases, including dropping our\n  Ubuntu,
  Debian, CentOS, and Fedora package repositories and switching to\n  statically linked
  binaries.  We would value your feedback in\n  [#2534](https://github.com/commercialhaskell/stack/issues/2534).\n\nMajor
  changes:\n\n* Add `stack hoogle` command.\n  [#55](https://github.com/commercialhaskell/stack/issues/55)\n*
  Support for absolute file path in `url` field of `setup-info` or `--ghc-bindist`\n*
  Add support for rendering GHCi scripts targeting different GHCi like\n  applications\n
  \ [#2457](https://github.com/commercialhaskell/stack/pull/2457)\n\nBehavior changes:\n\n*
  Remove `stack ide start` and `stack ide load-targets` commands.\n  [#2178](https://github.com/commercialhaskell/stack/issues/2178)\n*
  Support .buildinfo files in `stack ghci`.\n  [#2242](https://github.com/commercialhaskell/stack/pull/2242)\n*
  Support -ferror-spans syntax in GHC error messages.\n* Avoid unpacking ghc to `/tmp`\n
  \ [#996](https://github.com/commercialhaskell/stack/issues/996)\n* The Linux `gmp4`
  GHC bindist is no longer considered a full-fledged GHC\n  variant and can no longer
  be specified using the `ghc-variant` option,\n  and instead is treated more like
  a slightly different platform.\n\nOther enhancements:\n\n* Use the `store` package
  for binary serialization of most caches.\n* Only require minor version match for
  Docker stack exe.\n  This way, we can make patch releases for version bounds and
  similar\n  build issues without needing to upload new binaries for Docker.\n* Stack/Nix:
  Passes the right ghc derivation as an argument to the `shell.nix` when a\n  custom
  `shell.nix` is used\n  See [#2243](https://github.com/commercialhaskell/stack/issues/2243)\n*
  Stack/Nix: Sets `LD_LIBRARY_PATH` so packages using C libs for Template Haskell
  can work\n  (See _e.g._ [this HaskellR issue](https://github.com/tweag/HaskellR/issues/253))\n*
  Parse CLI arguments and configuration files into less permissive types,\n  improving
  error messages for bad inputs.\n  [#2267](https://github.com/commercialhaskell/stack/issues/2267)\n*
  Add the ability to explicitly specify a gcc executable.\n  [#593](https://github.com/commercialhaskell/stack/issues/593)\n*
  Nix: No longer uses LTS mirroring in nixpkgs. Gives to nix-shell a derivation\n
  \ like `haskell.compiler.ghc801`\n  See [#2259](https://github.com/commercialhaskell/stack/issues/2259)\n*
  Perform some subprocesses during setup concurrently, slightly speeding up most\n
  \ commands. [#2346](https://github.com/commercialhaskell/stack/pull/2346)\n* `stack
  setup` no longer unpacks to the system temp dir on posix systems.\n  [#996](https://github.com/commercialhaskell/stack/issues/996)\n*
  `stack setup` detects libtinfo6 and ncurses6 and can download alternate GHC\n  bindists
  [#257](https://github.com/commercialhaskell/stack/issues/257)\n  [#2302](https://github.com/commercialhaskell/stack/issues/2302).\n*
  `stack setup` detects Linux ARMv7 downloads appropriate GHC bindist\n  [#2103](https://github.com/commercialhaskell/stack/issues/2103)\n*
  Custom `stack` binaries list dependency versions in output for `--version`.\n  See
  [#2222](https://github.com/commercialhaskell/stack/issues/2222)\n  and [#2450](https://github.com/commercialhaskell/stack/issues/2450).\n*
  Use a pretty printer to output dependency resolution errors.\n  [#1912](https://github.com/commercialhaskell/stack/issues/1912)\n*
  Remove the `--os` flag\n  [#2227](https://github.com/commercialhaskell/stack/issues/2227)\n*
  Add 'netbase' and 'ca-certificates' as dependency for .deb packages.\n  [#2293](https://github.com/commercialhaskell/stack/issues/2293).\n*
  Add `stack ide targets` command.\n* Enhance debug logging with subprocess timings.\n*
  Pretty-print YAML parse errors\n  [#2374](https://github.com/commercialhaskell/stack/issues/2374)\n*
  Clarify confusing `stack setup` output\n  [#2314](https://github.com/commercialhaskell/stack/issues/2314)\n*
  Delete `Stack.Types` multimodule to improve build times\n  [#2405](https://github.com/commercialhaskell/stack/issues/2405)\n*
  Remove spurious newlines in build logs\n  [#2418](https://github.com/commercialhaskell/stack/issues/2418)\n*
  Interpreter: Provide a way to hide implicit packages\n  [#1208](https://github.com/commercialhaskell/stack/issues/1208)\n*
  Check executability in exec lookup\n  [#2489](https://github.com/commercialhaskell/stack/issues/2489)\n\nBug
  fixes:\n\n* Fix cabal warning about use of a deprecated cabal flag\n  [#2350](https://github.com/commercialhaskell/stack/issues/2350)\n*
  Support most executable extensions on Windows\n  [#2225](https://github.com/commercialhaskell/stack/issues/2225)\n*
  Detect resolver change in `stack solver`\n  [#2252](https://github.com/commercialhaskell/stack/issues/2252)\n*
  Fix a bug in docker image creation where the wrong base image was\n  selected\n
  \ [#2376](https://github.com/commercialhaskell/stack/issues/2376)\n* Ignore special
  entries when unpacking tarballs\n  [#2361](https://github.com/commercialhaskell/stack/issues/2361)\n*
  Fixes src directory pollution of `style.css` and `highlight.js` with GHC 8's\n  haddock
  [#2429](https://github.com/commercialhaskell/stack/issues/2429)\n* Handle filepaths
  with spaces in `stack ghci`\n  [#2266](https://github.com/commercialhaskell/stack/issues/2266)\n*
  Apply ghc-options to snapshot packages\n  [#2289](https://github.com/commercialhaskell/stack/issues/2289)\n*
  stack sdist: Fix timestamp in tarball\n  [#2394](https://github.com/commercialhaskell/stack/pull/2394)\n*
  Allow global Stack arguments with a script\n  [#2316](https://github.com/commercialhaskell/stack/issues/2316)\n*
  Inconsistency between ToJSON and FromJSON instances of PackageLocation\n  [#2412](https://github.com/commercialhaskell/stack/pull/2412)\n*
  Perform Unicode normalization on filepaths\n  [#1810](https://github.com/commercialhaskell/stack/issues/1810)\n*
  Solver: always keep ghc wired-in as hard constraints\n  [#2453](https://github.com/commercialhaskell/stack/issues/2453)\n*
  Support OpenBSD's tar where possible, require GNU tar for xz support\n  [#2283](https://github.com/commercialhaskell/stack/issues/2283)\n*
  Fix using --coverage with Cabal-1.24\n  [#2424](https://github.com/commercialhaskell/stack/issues/2424)\n*
  When marking exe installed, remove old version\n  [#2373](https://github.com/commercialhaskell/stack/issues/2373)\n*
  Stop truncating all-cabal-hashes git repo\n  [#2175](https://github.com/commercialhaskell/stack/issues/2175)\n*
  Handle non-ASCII filenames on Windows\n  [#2491](https://github.com/commercialhaskell/stack/issues/2491)\n*
  Avoid using multiple versions of a package in script interpreter\n  by passing package-id
  to ghc/runghc\n  [#1957](https://github.com/commercialhaskell/stack/issues/1957)\n*
  Only pre-load compiler version when using nix integration\n  [#2459](https://github.com/commercialhaskell/stack/issues/2459)\n*
  Solver: parse cabal errors also on Windows\n  [#2502](https://github.com/commercialhaskell/stack/issues/2502)\n*
  Allow exec and ghci commands in interpreter mode.\n  Scripts can now automatically
  open in the repl by using `exec ghci`\n  instead of `runghc` in the shebang command.\n
  \ [#2510](https://github.com/commercialhaskell/stack/issues/2510)\n* Now consider
  a package to be dirty when an extra-source-file is changed.\n  See [#2040](https://github.com/commercialhaskell/stack/issues/2040)\n\n##
  1.1.2\n\nRelease notes:\n\n* Official FreeBSD binaries are\n  [now available](http://docs.haskellstack.org/en/stable/install_and_upgrade/#freebsd)\n
  \ [#1253](https://github.com/commercialhaskell/stack/issues/1253).\n\nMajor changes:\n\n*
  Extensible custom snapshots implemented. These allow you to define snapshots\nwhich
  extend other snapshots. See\n[#863](https://github.com/commercialhaskell/stack/issues/863).
  Local file custom\nsnapshots can now be safely updated without changing their name.
  \ Remote custom\nsnapshots should still be treated as immutable.\n\nBehavior changes:\n\n*
  `stack path --compiler` was added in the last release, to yield a path to the\n
  \ compiler. Unfortunately, `--compiler` is a global option that is useful to use\n
  \ with `stack path`. The same functionality is now provided by `stack path\n  --compiler-exe`.
  See\n  [#2123](https://github.com/commercialhaskell/stack/issues/2123)\n* For packages
  specified in terms of a git or hg repo, the hash used in the\n  location has changed.
  \ This means that existing downloads from older stack\n  versions won't be used.
  \ This is a side-effect of the fix to\n  [#2133](https://github.com/commercialhaskell/stack/issues/2133)\n*
  `stack upgrade` no longer pays attention to local stack.yaml files, just the\n  global
  config and CLI options.\n  [#1392](https://github.com/commercialhaskell/stack/issues/1392)\n*
  `stack ghci` now uses `:add` instead of `:load`, making it potentially work\n  better
  with user scripts. See\n  [#1888](https://github.com/commercialhaskell/stack/issues/1888)\n\nOther
  enhancements:\n\n* Grab Cabal files via Git SHA to avoid regressions from Hackage
  revisions\n  [#2070](https://github.com/commercialhaskell/stack/pull/2070)\n* Custom
  snapshots now support `ghc-options`.\n* Package git repos are now re-used rather
  than re-cloned. See\n  [#1620](https://github.com/commercialhaskell/stack/issues/1620)\n*
  `DESTDIR` is filtered from environment when installing GHC. See\n  [#1460](https://github.com/commercialhaskell/stack/issues/1460)\n*
  `stack haddock` now supports `--hadock-arguments`. See\n  [#2144](https://github.com/commercialhaskell/stack/issues/2144)\n*
  Signing: warn if GPG_TTY is not set as per `man gpg-agent`\n\nBug fixes:\n\n* Now
  ignore project config when doing `stack init` or `stack new`. See\n  [#2110](https://github.com/commercialhaskell/stack/issues/2110)\n*
  Packages specified by git repo can now have submodules. See\n  [#2133](https://github.com/commercialhaskell/stack/issues/2133)\n*
  Fix of hackage index fetch retry. See re-opening of\n  [#1418](https://github.com/commercialhaskell/stack/issues/1418#issuecomment-217633843)\n*
  HPack now picks up changes to filesystem other than package.yaml.  See\n  [#2051](https://github.com/commercialhaskell/stack/issues/2051)\n*
  \"stack solver\" no longer suggests --omit-packages. See\n  [#2031](https://github.com/commercialhaskell/stack/issues/2031)\n*
  Fixed an issue with building Cabal's Setup.hs. See\n  [#1356](https://github.com/commercialhaskell/stack/issues/1356)\n*
  Package dirtiness now pays attention to deleted files. See\n  [#1841](https://github.com/commercialhaskell/stack/issues/1841)\n*
  `stack ghci` now uses `extra-lib-dirs` and `extra-include-dirs`. See\n  [#1656](https://github.com/commercialhaskell/stack/issues/1656)\n*
  Relative paths outside of source dir added via `qAddDependentFile` are now\n  checked
  for dirtiness. See\n  [#1982](https://github.com/commercialhaskell/stack/issues/1982)\n*
  Signing: always use `--with-fingerprints`\n\n## 1.1.0\n\nRelease notes:\n\n* Added
  Ubuntu 16.04 LTS (xenial) Apt repo.\n* No longer uploading new versions to Fedora
  21 repo.\n\nBehavior changes:\n\n* Snapshot packages are no longer built with executable
  profiling. See\n  [#1179](https://github.com/commercialhaskell/stack/issues/1179).\n*
  `stack init` now ignores symlinks when searching for cabal files. It also now\n
  \ ignores any directory that begins with `.` (as well as `dist` dirs) - before\n
  \ it would only ignore `.git`, `.stack-work`, and `dist`.\n* The stack executable
  is no longer built with `-rtsopts`.  Before, when\n  `-rtsopts` was enabled, stack
  would process `+RTS` options even when intended\n  for some other program, such
  as when used with `stack exec -- prog +RTS`.\n  See [#2022](https://github.com/commercialhaskell/stack/issues/2022).\n*
  The `stack path --ghc-paths` option is deprecated and renamed to `--programs`.\n
  \ `--compiler` is added, which points directly at the compiler used in\n  the current
  project.  `--compiler-bin` points to the compiler's bin dir.\n* For consistency
  with the `$STACK_ROOT` environment variable, the\n  `stack path --global-stack-root`
  flag and the `global-stack-root` field\n  in the output of `stack path` are being
  deprecated and replaced with the\n  `stack-root` flag and output field.\n  Additionally,
  the stack root can now be specified via the\n  `--stack-root` command-line flag.
  See\n  [#1148](https://github.com/commercialhaskell/stack/issues/1148).\n* `stack
  sig` GPG-related sub-commands were removed (folded into `upload` and\n  `sdist`)\n*
  GPG signing of packages while uploading to Hackage is now the default. Use\n  `upload
  --no-signature` if you would rather not contribute your package\n  signature. If
  you don't yet have a GPG keyset, read this\n  [blog post on GPG keys](https://fpcomplete.com/blog/2016/05/stack-security-gnupg-keys).\n
  \ We can add a stack.yaml config setting to disable signing if some people\n  desire
  it. We hope that people will sign. Later we will be adding GPG\n  signature verification
  options.\n* `stack build pkg-1.2.3` will now build even if the snapshot has a different\n
  \ package version - it is treated as an extra-dep. `stack build local-pkg-1.2.3`\n
  \ is an error even if the version number matches the local package\n  [#2028](https://github.com/commercialhaskell/stack/issues/2028).\n*
  Having a `nix:` section no longer implies enabling nix build. This allows the\n
  \ user to globally configure whether nix is used (unless the project overrides\n
  \ the default explicitly). See\n  [#1924](https://github.com/commercialhaskell/stack/issues/1924).\n*
  Remove deprecated valid-wanted field.\n* Docker: mount home directory in container
  [#1949](https://github.com/commercialhaskell/stack/issues/1949).\n* Deprecate `--local-bin-path`
  instead `--local-bin`.\n* `stack image`: allow absolute source paths for `add`.\n\nOther
  enhancements:\n\n* `stack haddock --open [PACKAGE]` opens the local haddocks in
  the browser.\n* Fix too much rebuilding when enabling/disabling profiling flags.\n*
  `stack build pkg-1.0` will now build `pkg-1.0` even if the snapshot specifies\n
  \ a different version (it introduces a temporary extra-dep)\n* Experimental support
  for `--split-objs` added\n  [#1284](https://github.com/commercialhaskell/stack/issues/1284).\n*
  `git` packages with submodules are supported by passing the `--recursive`\n  flag
  to `git clone`.\n* When using [hpack](https://github.com/sol/hpack), only regenerate
  cabal files\n  when hpack files change.\n* hpack files can now be used in templates\n*
  `stack ghci` now runs ghci as a separate process\n  [#1306](https://github.com/commercialhaskell/stack/issues/1306)\n*
  Retry when downloading snapshots and package indices\n* Many build options are configurable
  now in `stack.yaml`:\n```\n  build:\n    library-profiling: true\n    executable-profiling:
  true\n    haddock: true\n    haddock-deps: true\n    copy-bins: true\n    prefetch:
  true\n    force-dirty: true\n    keep-going: true\n    test: true\n    test-arguments:\n
  \     rerun-tests: true\n      additional-args: ['-fprof']\n      coverage: true\n
  \     no-run-tests: true\n    bench: true\n    benchmark-opts:\n      benchmark-arguments:
  -O2\n      no-run-benchmarks: true\n    reconfigure: true\n    cabal-verbose: true\n```\n*
  A number of URLs are now configurable, useful for firewalls. See\n  [#1794](https://github.com/commercialhaskell/stack/issues/1884).\n*
  Suggest causes when executables are missing.\n* Allow `--omit-packages` even without
  `--solver`.\n* Improve the generated stack.yaml.\n* Improve ghci results after :load
  Main module collision with main file path.\n* Only load the hackage index if necessary\n
  \ [#1883](https://github.com/commercialhaskell/stack/issues/1883), [#1892](https://github.com/commercialhaskell/stack/issues/1892).\n*
  init: allow local packages to be deps of deps\n  [#1965](https://github.com/commercialhaskell/stack/issues/1965).\n*
  Always use full fingerprints from GPG\n  [#1952](https://github.com/commercialhaskell/stack/issues/1952).\n*
  Default to using `gpg2` and fall back to `gpg`\n  [#1976](https://github.com/commercialhaskell/stack/issues/1976).\n*
  Add a flag for --verbosity silent.\n* Add `haddock --open` flag [#1396](https://github.com/commercialhaskell/stack/issues/1396).\n\nBug
  fixes:\n\n* Package tarballs would fail to unpack.\n  [#1884](https://github.com/commercialhaskell/stack/issues/1884).\n*
  Fixed errant warnings about missing modules, after deleted and removed from\n  cabal
  file [#921](https://github.com/commercialhaskell/stack/issues/921)\n  [#1805](https://github.com/commercialhaskell/stack/issues/1805).\n*
  Now considers a package to dirty when the hpack file is changed\n  [#1819](https://github.com/commercialhaskell/stack/issues/1819).\n*
  Nix: cancelling a stack build now exits properly rather than dropping into a\n  nix-shell
  [#1778](https://github.com/commercialhaskell/stack/issues/1778).\n* `allow-newer:
  true` now causes `--exact-configuration` to be passed to Cabal.\n  See [#1579](https://github.com/commercialhaskell/stack/issues/1579).\n*
  `stack solver` no longer fails with `InvalidRelFile` for relative package\n  paths
  including `..`. See\n  [#1954](https://github.com/commercialhaskell/stack/issues/1954).\n*
  Ignore emacs lock files when finding .cabal\n  [#1897](https://github.com/commercialhaskell/stack/issues/1897).\n*
  Use lenient UTF-8 decode for build output\n  [#1945](https://github.com/commercialhaskell/stack/issues/1945).\n*
  Clear index cache whenever index updated\n  [#1962](https://github.com/commercialhaskell/stack/issues/1962).\n*
  Fix: Building a container image drops a .stack-work dir in the current working\n
  \ (sub)directory\n  [#1975](https://github.com/commercialhaskell/stack/issues/1975).\n*
  Fix: Rebuilding when disabling profiling\n  [#2023](https://github.com/commercialhaskell/stack/issues/2023).\n\n##
  1.0.4.3\n\nBug fixes:\n\n* Don't delete contents of ~/.ssh when using `stack clean
  --full` with Docker\n  enabled [#2000](https://github.com/commercialhaskell/stack/issues/2000)\n\n##
  1.0.4.2\n\nBuild with path-io-1.0.0. There are no changes in behaviour from 1.0.4,\nso
  no binaries are released for this version.\n\n## 1.0.4.1\n\nFixes build with aeson-0.11.0.0.
  There are no changes in behaviour from 1.0.4,\nso no binaries are released for this
  version.\n\n## 1.0.4\n\nMajor changes:\n\n* Some notable changes in `stack init`:\n
  \   * Overall it should now be able to initialize almost all existing cabal\n      packages
  out of the box as long as the package itself is consistently\n      defined.\n    *
  Choose the best possible snapshot and add extra dependencies on top\n      of a
  snapshot resolver rather than a compiler resolver -\n      [#1583](https://github.com/commercialhaskell/stack/pull/1583)\n
  \   * Automatically omit a package (`--omit-packages`) when it is compiler\n      incompatible
  or when there are packages with conflicting dependency\n      requirements - [#1674](https://github.com/commercialhaskell/stack/pull/1674).\n
  \   * Some more changes for a better user experience. Please refer to\n      the
  doc guide for details.\n* Add support for hpack, alternative package description
  format\n  [#1679](https://github.com/commercialhaskell/stack/issues/1679)\n\nOther
  enhancements:\n\n* Docker: pass ~/.ssh and SSH auth socket into container, so that
  git repos\n  work [#1358](https://github.com/commercialhaskell/stack/issues/1358).\n*
  Docker: strip suffix from docker --version.\n  [#1653](https://github.com/commercialhaskell/stack/issues/1653)\n*
  Docker: pass USER and PWD environment variables into container.\n* On each run,
  stack will test the stack root directory (~/.stack), and the\n  project and package
  work directories (.stack-work) for whether they are\n  owned by the current user
  and abort if they are not. This precaution can\n  be disabled with the `--allow-different-user`
  flag or `allow-different-user`\n  option in the global config (~/.stack/config.yaml).\n
  \ [#471](https://github.com/commercialhaskell/stack/issues/471)\n* Added `stack
  clean --full` option for full working dir cleanup.\n* YAML config: support Zip archives.\n*
  Redownload build plan if parsing fails\n  [#1702](https://github.com/commercialhaskell/stack/issues/1702).\n*
  Give mustache templates access to a 'year' tag\n  [#1716](https://github.com/commercialhaskell/stack/pull/1716).\n*
  Have \"stack ghci\" warn about module name aliasing.\n* Add \"stack ghci --load-local-deps\".\n*
  Build Setup.hs with -rtsopts\n  [#1687](https://github.com/commercialhaskell/stack/issues/1687).\n*
  `stack init` accepts a list of directories.\n* Add flag infos to DependencyPlanFailures
  (for better error output in case of\n  flags) [#713](https://github.com/commercialhaskell/stack/issues/713)\n*
  `stack new --bare` complains for overwrites, and add `--force` option\n  [#1597](https://github.com/commercialhaskell/stack/issues/1597).\n\nBug
  fixes:\n\n* Previously, `stack ghci` would fail with `cannot satisfy -package-id`
  when the\n  implicit build step changes the package key of some dependency.\n* Fix:
  Building with ghcjs: \"ghc-pkg: Prelude.chr: bad argument: 2980338\"\n  [#1665](https://github.com/commercialhaskell/stack/issues/1665).\n*
  Fix running test / bench with `--profile` / `--trace`.\n* Fix: build progress counter
  is no longer visible\n  [#1685](https://github.com/commercialhaskell/stack/issues/1685).\n*
  Use \"-RTS\" w/ profiling to allow extra args\n  [#1772](https://github.com/commercialhaskell/stack/issues/1772).\n*
  Fix withUnpackedTarball7z to find name of srcDir after unpacking\n  (fixes `stack
  setup` fails for ghcjs project on windows)\n  [#1774](https://github.com/commercialhaskell/stack/issues/1774).\n*
  Add space before auto-generated bench opts (makes profiling options work\n  uniformly
  for applications and benchmark suites)\n  [#1771](https://github.com/commercialhaskell/stack/issues/1771).\n*
  Don't try to find plugin if it resembles flag.\n* Setup.hs changes cause package
  dirtiness\n  [#1711](https://github.com/commercialhaskell/stack/issues/1711).\n*
  Send \"stack templates\" output to stdout\n  [#1792](https://github.com/commercialhaskell/stack/issues/1792).\n\n##
  1.0.2\n\nRelease notes:\n\n- Arch Linux: Stack has been adopted into the\n  [official
  community repository](https://www.archlinux.org/packages/community/x86_64/stack/),\n
  \ so we will no longer be updating the AUR with new versions. See the\n  [install/upgrade
  guide](http://docs.haskellstack.org/en/stable/install_and_upgrade/#arch-linux)\n
  \ for current download instructions.\n\nMajor changes:\n\n- `stack init` and `solver`
  overhaul\n  [#1583](https://github.com/commercialhaskell/stack/pull/1583)\n\nOther
  enhancements:\n\n- Disable locale/codepage hacks when GHC >=7.10.3\n  [#1552](https://github.com/commercialhaskell/stack/issues/1552)\n-
  Specify multiple images to build for `stack image container`\n  [docs](http://docs.haskellstack.org/en/stable/yaml_configuration/#image)\n-
  Specify which executables to include in images for `stack image container`\n  [docs](http://docs.haskellstack.org/en/stable/yaml_configuration/#image)\n-
  Docker: pass supplementary groups and umask into container\n- If git fetch fails
  wipe the directory and try again from scratch\n  [#1418](https://github.com/commercialhaskell/stack/issues/1418)\n-
  Warn if newly installed executables won't be available on the PATH\n  [#1362](https://github.com/commercialhaskell/stack/issues/1362)\n-
  stack.yaml: for `stack image container`, specify multiple images to generate,\n
  \ and which executables should be added to those images\n- GHCI: add interactive
  Main selection\n  [#1068](https://github.com/commercialhaskell/stack/issues/1068)\n-
  Care less about the particular name of a GHCJS sdist folder\n  [#1622](https://github.com/commercialhaskell/stack/issues/1622)\n-
  Unified Enable/disable help messaging\n  [#1613](https://github.com/commercialhaskell/stack/issues/1613)\n\nBug
  fixes:\n\n- Don't share precompiled packages between GHC/platform variants and Docker\n
  \ [#1551](https://github.com/commercialhaskell/stack/issues/1551)\n- Properly redownload
  corrupted downloads with the correct file size.\n  [Mailing list discussion](https://groups.google.com/d/msg/haskell-stack/iVGDG5OHYxs/FjUrR5JsDQAJ)\n-
  Gracefully handle invalid paths in error/warning messages\n  [#1561](https://github.com/commercialhaskell/stack/issues/1561)\n-
  Nix: select the correct GHC version corresponding to the snapshot\n  even when an
  abstract resolver is passed via `--resolver` on the\n  command-line.\n  [#1641](https://github.com/commercialhaskell/stack/issues/1641)\n-
  Fix: Stack does not allow using an external package from ghci\n  [#1557](https://github.com/commercialhaskell/stack/issues/1557)\n-
  Disable ambiguous global '--resolver' option for 'stack init'\n  [#1531](https://github.com/commercialhaskell/stack/issues/1531)\n-
  Obey `--no-nix` flag\n- Fix: GHCJS Execute.hs: Non-exhaustive patterns in lambda\n
  \ [#1591](https://github.com/commercialhaskell/stack/issues/1591)\n- Send file-watch
  and sticky logger messages to stderr\n  [#1302](https://github.com/commercialhaskell/stack/issues/1302)\n
  \ [#1635](https://github.com/commercialhaskell/stack/issues/1635)\n- Use globaldb
  path for querying Cabal version\n  [#1647](https://github.com/commercialhaskell/stack/issues/1647)\n\n##
  1.0.0\n\nRelease notes:\n\n*  We're calling this version 1.0.0 in preparation for
  Stackage\n   LTS 4.  Note, however, that this does not mean the code's API\n   will
  be stable as this is primarily an end-user tool.\n\nEnhancements:\n\n* Added flag
  `--profile` flag: passed with `stack build`, it will\n  enable profiling, and for
  `--bench` and `--test` it will generate a\n  profiling report by passing `+RTS -p`
  to the executable(s). Great\n  for using like `stack build --bench --profile` (remember
  that\n  enabling profile will slow down your benchmarks by >4x). Run `stack\n  build
  --bench` again to disable the profiling and get proper speeds\n* Added flag `--trace`
  flag: just like `--profile`, it enables\n  profiling, but instead of generating
  a report for `--bench` and\n  `--test`, prints out a stack trace on exception. Great
  for using\n  like `stack build --test --trace`\n* Nix: all options can be overridden
  on command line\n  [#1483](https://github.com/commercialhaskell/stack/issues/1483)\n*
  Nix: build environments (shells) are now pure by default.\n* Make verbosity silent
  by default in script interpreter mode\n  [#1472](https://github.com/commercialhaskell/stack/issues/1472)\n*
  Show a message when resetting git commit fails\n  [#1453](https://github.com/commercialhaskell/stack/issues/1453)\n*
  Improve Unicode handling in project/package names\n  [#1337](https://github.com/commercialhaskell/stack/issues/1337)\n*
  Fix ambiguity between a stack command and a filename to execute (prefer\n  `stack`
  subcommands)\n  [#1471](https://github.com/commercialhaskell/stack/issues/1471)\n*
  Support multi line interpreter directive comments\n  [#1394](https://github.com/commercialhaskell/stack/issues/1394)\n*
  Handle space separated pids in ghc-pkg dump (for GHC HEAD)\n  [#1509](https://github.com/commercialhaskell/stack/issues/1509)\n*
  Add ghci --no-package-hiding option\n  [#1517](https://github.com/commercialhaskell/stack/issues/1517)\n*
  `stack new` can download templates from URL\n  [#1466](https://github.com/commercialhaskell/stack/issues/1466)\n\nBug
  fixes:\n\n* Nix: stack exec options are passed properly to the stack sub process\n
  \ [#1538](https://github.com/commercialhaskell/stack/issues/1538)\n* Nix: specifying
  a shell-file works in any current working directory\n  [#1547](https://github.com/commercialhaskell/stack/issues/1547)\n*
  Nix: use `--resolver` argument\n* Docker: fix missing image message and '--docker-auto-pull'\n*
  No HTML escaping for \"stack new\" template params\n  [#1475](https://github.com/commercialhaskell/stack/issues/1475)\n*
  Set permissions for generated .ghci script\n  [#1480](https://github.com/commercialhaskell/stack/issues/1480)\n*
  Restrict commands allowed in interpreter mode\n  [#1504](https://github.com/commercialhaskell/stack/issues/1504)\n*
  stack ghci doesn't see preprocessed files for executables\n  [#1347](https://github.com/commercialhaskell/stack/issues/1347)\n*
  All test suites run even when only one is requested\n  [#1550](https://github.com/commercialhaskell/stack/pull/1550)\n*
  Edge cases in broken templates give odd errors\n  [#1535](https://github.com/commercialhaskell/stack/issues/1535)\n*
  Fix test coverage bug on windows\n\n## 0.1.10.1\n\nBug fixes:\n\n* `stack image
  container` did not actually build an image\n  [#1473](https://github.com/commercialhaskell/stack/issues/1473)\n\n##
  0.1.10.0\n\nRelease notes:\n\n* The Stack home page is now at [haskellstack.org](http://haskellstack.org),\n
  \ which shows the documentation rendered by readthedocs.org. Note: this\n  has necessitated
  some changes to the links in the documentation's markdown\n  source code, so please
  check the links on the website before submitting a PR\n  to fix them.\n* The locations
  of the\n  [Ubuntu](http://docs.haskellstack.org/en/stable/install_and_upgrade/#ubuntu)\n
  \ and\n  [Debian](http://docs.haskellstack.org/en/stable/install_and_upgrade/#debian)\n
  \ package repositories have changed to have correct URL semantics according to\n
  \ Debian's guidelines\n  [#1378](https://github.com/commercialhaskell/stack/issues/1378).
  The old\n  locations will continue to work for some months, but we suggest that
  you\n  adjust your `/etc/apt/sources.list.d/fpco.list` to the new location to avoid\n
  \ future disruption.\n* [openSUSE and SUSE Linux Enterprise](http://docs.haskellstack.org/en/stable/install_and_upgrade/#suse)\n
  \ packages are now available, thanks to [@mimi1vx](https://github.com/mimi1vx).\n
  \ Note: there will be some lag before these pick up new versions, as they are\n
  \ based on Stackage LTS.\n\nMajor changes:\n\n* Support for building inside a Nix-shell
  providing system dependencies\n  [#1285](https://github.com/commercialhaskell/stack/pull/1285)\n*
  Add optional GPG signing on `stack upload --sign` or with\n  `stack sig sign ...`\n\nOther
  enhancements:\n\n* Print latest applicable version of packages on conflicts\n  [#508](https://github.com/commercialhaskell/stack/issues/508)\n*
  Support for packages located in Mercurial repositories\n  [#1397](https://github.com/commercialhaskell/stack/issues/1397)\n*
  Only run benchmarks specified as build targets\n  [#1412](https://github.com/commercialhaskell/stack/issues/1412)\n*
  Support git-style executable fall-through (`stack something` executes\n  `stack-something`
  if present)\n  [#1433](https://github.com/commercialhaskell/stack/issues/1433)\n*
  GHCi now loads intermediate dependencies\n  [#584](https://github.com/commercialhaskell/stack/issues/584)\n*
  `--work-dir` option for overriding `.stack-work`\n  [#1178](https://github.com/commercialhaskell/stack/issues/1178)\n*
  Support `detailed-0.9` tests\n  [#1429](https://github.com/commercialhaskell/stack/issues/1429)\n*
  Docker: improved POSIX signal proxying to containers\n  [#547](https://github.com/commercialhaskell/stack/issues/547)\n\nBug
  fixes:\n\n* Show absolute paths in error messages in multi-package builds\n  [#1348](https://github.com/commercialhaskell/stack/issues/1348)\n*
  Docker-built binaries and libraries in different path\n  [#911](https://github.com/commercialhaskell/stack/issues/911)\n
  \ [#1367](https://github.com/commercialhaskell/stack/issues/1367)\n* Docker: `--resolver`
  argument didn't effect selected image tag\n* GHCi: Spaces in filepaths caused module
  loading issues\n  [#1401](https://github.com/commercialhaskell/stack/issues/1401)\n*
  GHCi: cpp-options in cabal files weren't used\n  [#1419](https://github.com/commercialhaskell/stack/issues/1419)\n*
  Benchmarks couldn't be run independently of each other\n  [#1412](https://github.com/commercialhaskell/stack/issues/1412)\n*
  Send output of building setup to stderr\n  [#1410](https://github.com/commercialhaskell/stack/issues/1410)\n\n##
  0.1.8.0\n\nMajor changes:\n\n* GHCJS can now be used with stackage snapshots via
  the new `compiler` field.\n* Windows installers are now available:\n  [download
  them here](http://docs.haskellstack.org/en/stable/install_and_upgrade/#windows)\n
  \ [#613](https://github.com/commercialhaskell/stack/issues/613)\n* Docker integration
  works with non-FPComplete generated images\n  [#531](https://github.com/commercialhaskell/stack/issues/531)\n\nOther
  enhancements:\n\n* Added an `allow-newer` config option\n  [#922](https://github.com/commercialhaskell/stack/issues/922)\n
  \ [#770](https://github.com/commercialhaskell/stack/issues/770)\n* When a Hackage
  revision invalidates a build plan in a snapshot, trust the\n  snapshot [#770](https://github.com/commercialhaskell/stack/issues/770)\n*
  Added a `stack config set resolver RESOLVER` command. Part of work on\n  [#115](https://github.com/commercialhaskell/stack/issues/115)\n*
  `stack setup` can now install GHCJS on windows. See\n  [#1145](https://github.com/commercialhaskell/stack/issues/1145)
  and\n  [#749](https://github.com/commercialhaskell/stack/issues/749)\n* `stack hpc
  report` command added, which generates reports for HPC tix files\n* `stack ghci`
  now accepts all the flags accepted by `stack build`. See\n  [#1186](https://github.com/commercialhaskell/stack/issues/1186)\n*
  `stack ghci` builds the project before launching GHCi. If the build fails,\n  try
  to launch GHCi anyway. Use `stack ghci --no-build` option to disable\n  [#1065](https://github.com/commercialhaskell/stack/issues/1065)\n*
  `stack ghci` now detects and warns about various circumstances where it is\n  liable
  to fail. See\n  [#1270](https://github.com/commercialhaskell/stack/issues/1270)\n*
  Added `require-docker-version` configuration option\n* Packages will now usually
  be built along with their tests and benchmarks. See\n  [#1166](https://github.com/commercialhaskell/stack/issues/1166)\n*
  Relative `local-bin-path` paths will be relative to the project's root\n  directory,
  not the current working directory.\n  [#1340](https://github.com/commercialhaskell/stack/issues/1340)\n*
  `stack clean` now takes an optional `[PACKAGE]` argument for use in\n  multi-package
  projects. See\n  [#583](https://github.com/commercialhaskell/stack/issues/583)\n*
  Ignore cabal_macros.h as a dependency\n  [#1195](https://github.com/commercialhaskell/stack/issues/1195)\n*
  Pad timestamps and show local time in --verbose output\n  [#1226](https://github.com/commercialhaskell/stack/issues/1226)\n*
  GHCi: Import all modules after loading them\n  [#995](https://github.com/commercialhaskell/stack/issues/995)\n*
  Add subcommand aliases: `repl` for `ghci`, and `runhaskell` for `runghc`\n  [#1241](https://github.com/commercialhaskell/stack/issues/1241)\n*
  Add typo recommendations for unknown package identifiers\n  [#158](https://github.com/commercialhaskell/stack/issues/158)\n*
  Add `stack path --local-hpc-root` option\n* Overhaul dependencies' haddocks copying\n
  \ [#1231](https://github.com/commercialhaskell/stack/issues/1231)\n* Support for
  extra-package-dbs in 'stack ghci'\n  [#1229](https://github.com/commercialhaskell/stack/pull/1229)\n*
  `stack new` disallows package names with \"words\" consisting solely of numbers\n
  \ [#1336](https://github.com/commercialhaskell/stack/issues/1336)\n* `stack build
  --fast` turns off optimizations\n* Show progress while downloading package index\n
  \ [#1223](https://github.com/commercialhaskell/stack/issues/1223).\n\nBug fixes:\n\n*
  Fix: Haddocks not copied for dependencies\n  [#1105](https://github.com/commercialhaskell/stack/issues/1105)\n*
  Fix: Global options did not work consistently after subcommand\n  [#519](https://github.com/commercialhaskell/stack/issues/519)\n*
  Fix: 'stack ghci' doesn't notice that a module got deleted\n  [#1180](https://github.com/commercialhaskell/stack/issues/1180)\n*
  Rebuild when cabal file is changed\n* Fix: Paths in GHC warnings not canonicalized,
  nor those for packages in\n  subdirectories or outside the project root\n  [#1259](https://github.com/commercialhaskell/stack/issues/1259)\n*
  Fix: unlisted files in tests and benchmarks trigger extraneous second build\n  [#838](https://github.com/commercialhaskell/stack/issues/838)\n\n##
  0.1.6.0\n\nMajor changes:\n\n* `stack setup` now supports building and booting GHCJS
  from source tarball.\n* On Windows, build directories no longer display \"pretty\"
  information\n  (like x86_64-windows/Cabal-1.22.4.0), but rather a hash of that\n
  \ content. The reason is to avoid the 260 character path limitation on\n  Windows.
  See\n  [#1027](https://github.com/commercialhaskell/stack/pull/1027)\n* Rename config
  files and clarify their purposes [#969](https://github.com/commercialhaskell/stack/issues/969)\n
  \   * `~/.stack/stack.yaml` --> `~/.stack/config.yaml`\n    * `~/.stack/global`
  --> `~/.stack/global-project`\n    * `/etc/stack/config` --> `/etc/stack/config.yaml`\n
  \   * Old locations still supported, with deprecation warnings\n* New command \"stack
  eval CODE\", which evaluates to \"stack exec ghc -- -e CODE\".\n\nOther enhancements:\n\n*
  No longer install `git` on Windows\n  [#1046](https://github.com/commercialhaskell/stack/issues/1046).
  You\n  can still get this behavior by running the following yourself:\n  `stack
  exec -- pacman -Sy --noconfirm git`.\n* Typing enter during --file-watch triggers
  a rebuild [#1023](https://github.com/commercialhaskell/stack/pull/1023)\n* Use Haddock's
  `--hyperlinked-source` (crosslinked source), if available [#1070](https://github.com/commercialhaskell/stack/pull/1070)\n*
  Use Stack-installed GHCs for `stack init --solver` [#1072](https://github.com/commercialhaskell/stack/issues/1072)\n*
  New experimental `stack query` command [#1087](https://github.com/commercialhaskell/stack/issues/1087)\n*
  By default, stack no longer rebuilds a package due to GHC options changes. This
  behavior can be tweaked with the `rebuild-ghc-options` setting. [#1089](https://github.com/commercialhaskell/stack/issues/1089)\n*
  By default, ghc-options are applied to all local packages, not just targets. This
  behavior can be tweaked with the `apply-ghc-options` setting. [#1089](https://github.com/commercialhaskell/stack/issues/1089)\n*
  Docker: download or override location of stack executable to re-run in container
  [#974](https://github.com/commercialhaskell/stack/issues/974)\n* Docker: when Docker
  Engine is remote, don't run containerized processes as host's UID/GID [#194](https://github.com/commercialhaskell/stack/issues/194)\n*
  Docker: `set-user` option to enable/disable running containerized processes as host's
  UID/GID [#194](https://github.com/commercialhaskell/stack/issues/194)\n* Custom
  Setup.hs files are now precompiled instead of interpreted. This should be a major
  performance win for certain edge cases (biggest example: [building Cabal itself](https://github.com/commercialhaskell/stack/issues/1041))
  while being either neutral or a minor slowdown for more common cases.\n* `stack
  test --coverage` now also generates a unified coverage report for multiple test-suites
  / packages.  In the unified report, test-suites can contribute to the coverage of
  other packages.\n\nBug fixes:\n\n* Ignore stack-built executables named `ghc`\n
  \ [#1052](https://github.com/commercialhaskell/stack/issues/1052)\n* Fix quoting
  of output failed command line arguments\n* Mark executable-only packages as installed
  when copied from cache [#1043](https://github.com/commercialhaskell/stack/pull/1043)\n*
  Canonicalize temporary directory paths [#1047](https://github.com/commercialhaskell/stack/pull/1047)\n*
  Put code page fix inside the build function itself [#1066](https://github.com/commercialhaskell/stack/issues/1066)\n*
  Add `explicit-setup-deps` option [#1110](https://github.com/commercialhaskell/stack/issues/1110),
  and change the default to the old behavior of using any package in the global and
  snapshot database [#1025](https://github.com/commercialhaskell/stack/issues/1025)\n*
  Precompiled cache checks full package IDs on Cabal < 1.22 [#1103](https://github.com/commercialhaskell/stack/issues/1103)\n*
  Pass -package-id to ghci [#867](https://github.com/commercialhaskell/stack/issues/867)\n*
  Ignore global packages when copying precompiled packages [#1146](https://github.com/commercialhaskell/stack/issues/1146)\n\n##
  0.1.5.0\n\nMajor changes:\n\n* On Windows, we now use a full MSYS2 installation
  in place of the previous PortableGit. This gives you access to the pacman package
  manager for more easily installing libraries.\n* Support for custom GHC binary distributions
  [#530](https://github.com/commercialhaskell/stack/issues/530)\n    * `ghc-variant`
  option in stack.yaml to specify the variant (also\n      `--ghc-variant` command-line
  option)\n    * `setup-info` in stack.yaml, to specify where to download custom binary\n
  \     distributions (also `--ghc-bindist` command-line option)\n    * Note: On systems
  with libgmp4 (aka `libgmp.so.3`), such as CentOS 6, you\n      may need to re-run
  `stack setup` due to the centos6 GHC bindist being\n      treated like a variant\n*
  A new `--pvp-bounds` flag to the sdist and upload commands allows automatic adding
  of PVP upper and/or lower bounds to your dependencies\n\nOther enhancements:\n\n*
  Adapt to upcoming Cabal installed package identifier format change [#851](https://github.com/commercialhaskell/stack/issues/851)\n*
  `stack setup` takes a `--stack-setup-yaml` argument\n* `--file-watch` is more discerning
  about which files to rebuild for [#912](https://github.com/commercialhaskell/stack/issues/912)\n*
  `stack path` now supports `--global-pkg-db` and `--ghc-package-path`\n* `--reconfigure`
  flag [#914](https://github.com/commercialhaskell/stack/issues/914) [#946](https://github.com/commercialhaskell/stack/issues/946)\n*
  Cached data is written with a checksum of its structure [#889](https://github.com/commercialhaskell/stack/issues/889)\n*
  Fully removed `--optimizations` flag\n* Added `--cabal-verbose` flag\n* Added `--file-watch-poll`
  flag for polling instead of using filesystem events (useful for running tests in
  a Docker container while modifying code in the host environment. When code is injected
  into the container via a volume, the container won't propagate filesystem events).\n*
  Give a preemptive error message when `-prof` is given as a GHC option [#1015](https://github.com/commercialhaskell/stack/issues/1015)\n*
  Locking is now optional, and will be turned on by setting the `STACK_LOCK` environment
  variable to `true` [#950](https://github.com/commercialhaskell/stack/issues/950)\n*
  Create default stack.yaml with documentation comments and commented out options
  [#226](https://github.com/commercialhaskell/stack/issues/226)\n* Out of memory warning
  if Cabal exits with -9 [#947](https://github.com/commercialhaskell/stack/issues/947)\n\nBug
  fixes:\n\n* Hacky workaround for optparse-applicative issue with `stack exec --help`
  [#806](https://github.com/commercialhaskell/stack/issues/806)\n* Build executables
  for local extra deps [#920](https://github.com/commercialhaskell/stack/issues/920)\n*
  copyFile can't handle directories [#942](https://github.com/commercialhaskell/stack/pull/942)\n*
  Support for spaces in Haddock interface files [fpco/minghc#85](https://github.com/fpco/minghc/issues/85)\n*
  Temporarily building against a \"shadowing\" local package? [#992](https://github.com/commercialhaskell/stack/issues/992)\n*
  Fix Setup.exe name for --upgrade-cabal on Windows [#1002](https://github.com/commercialhaskell/stack/issues/1002)\n*
  Unlisted dependencies no longer trigger extraneous second build [#838](https://github.com/commercialhaskell/stack/issues/838)\n\n##
  0.1.4.1\n\nFix stack's own Haddocks.  No changes to functionality (only comments
  updated).\n\n## 0.1.4.0\n\nMajor changes:\n\n* You now have more control over how
  GHC versions are matched, e.g. \"use exactly this version,\" \"use the specified
  minor version, but allow patches,\" or \"use the given minor version or any later
  minor in the given major release.\" The default has switched from allowing newer
  later minor versions to a specific minor version allowing patches. For more information,
  see [#736](https://github.com/commercialhaskell/stack/issues/736) and [#784](https://github.com/commercialhaskell/stack/pull/784).\n*
  Support added for compiling with GHCJS\n* stack can now reuse prebuilt binaries
  between snapshots. That means that, if you build package foo in LTS-3.1, that binary
  version can be reused in LTS-3.2, assuming it uses the same dependencies and flags.
  [#878](https://github.com/commercialhaskell/stack/issues/878)\n\nOther enhancements:\n\n*
  Added the `--docker-env` argument, to set environment variables in Docker container.\n*
  Set locale environment variables to UTF-8 encoding for builds to avoid \"commitBuffer:
  invalid argument\" errors from GHC [#793](https://github.com/commercialhaskell/stack/issues/793)\n*
  Enable transliteration for encoding on stdout and stderr [#824](https://github.com/commercialhaskell/stack/issues/824)\n*
  By default, `stack upgrade` automatically installs GHC as necessary [#797](https://github.com/commercialhaskell/stack/issues/797)\n*
  Added the `ghc-options` field to stack.yaml [#796](https://github.com/commercialhaskell/stack/issues/796)\n*
  Added the `extra-path` field to stack.yaml\n* Code page changes on Windows only
  apply to the build command (and its synonyms), and can be controlled via a command
  line flag (still defaults to on) [#757](https://github.com/commercialhaskell/stack/issues/757)\n*
  Implicitly add packages to extra-deps when a flag for them is set [#807](https://github.com/commercialhaskell/stack/issues/807)\n*
  Use a precompiled Setup.hs for simple build types [#801](https://github.com/commercialhaskell/stack/issues/801)\n*
  Set --enable-tests and --enable-benchmarks optimistically [#805](https://github.com/commercialhaskell/stack/issues/805)\n*
  `--only-configure` option added [#820](https://github.com/commercialhaskell/stack/issues/820)\n*
  Check for duplicate local package names\n* Stop nagging people that call `stack
  test` [#845](https://github.com/commercialhaskell/stack/issues/845)\n* `--file-watch`
  will ignore files that are in your VCS boring/ignore files [#703](https://github.com/commercialhaskell/stack/issues/703)\n*
  Add `--numeric-version` option\n\nBug fixes:\n\n* `stack init --solver` fails if
  `GHC_PACKAGE_PATH` is present [#860](https://github.com/commercialhaskell/stack/issues/860)\n*
  `stack solver` and `stack init --solver` check for test suite and benchmark dependencies
  [#862](https://github.com/commercialhaskell/stack/issues/862)\n* More intelligent
  logic for setting UTF-8 locale environment variables [#856](https://github.com/commercialhaskell/stack/issues/856)\n*
  Create missing directories for `stack sdist`\n* Don't ignore .cabal files with extra
  periods [#895](https://github.com/commercialhaskell/stack/issues/895)\n* Deprecate
  unused `--optimizations` flag\n* Truncated output on slow terminals [#413](https://github.com/commercialhaskell/stack/issues/413)\n\n##
  0.1.3.1\n\nBug fixes:\n\n* Ignore disabled executables [#763](https://github.com/commercialhaskell/stack/issues/763)\n\n##
  0.1.3.0\n\nMajor changes:\n\n* Detect when a module is compiled but not listed in
  the cabal file ([#32](https://github.com/commercialhaskell/stack/issues/32))\n    *
  A warning is displayed for any modules that should be added to `other-modules` in
  the .cabal file\n    * These modules are taken into account when determining whether
  a package needs to be built\n* Respect TemplateHaskell addDependentFile dependency
  changes ([#105](https://github.com/commercialhaskell/stack/issues/105))\n    * TH
  dependent files are taken into account when determining whether a package needs
  to be built.\n* Overhauled target parsing, added `--test` and `--bench` options
  [#651](https://github.com/commercialhaskell/stack/issues/651)\n    * For details,
  see [Build commands documentation](http://docs.haskellstack.org/en/stable/build_command/)\n\nOther
  enhancements:\n\n* Set the `HASKELL_DIST_DIR` environment variable [#524](https://github.com/commercialhaskell/stack/pull/524)\n*
  Track build status of tests and benchmarks [#525](https://github.com/commercialhaskell/stack/issues/525)\n*
  `--no-run-tests` [#517](https://github.com/commercialhaskell/stack/pull/517)\n*
  Targets outside of root dir don't build [#366](https://github.com/commercialhaskell/stack/issues/366)\n*
  Upper limit on number of flag combinations to test [#543](https://github.com/commercialhaskell/stack/issues/543)\n*
  Fuzzy matching support to give better error messages for close version numbers [#504](https://github.com/commercialhaskell/stack/issues/504)\n*
  `--local-bin-path` global option. Use to change where binaries get placed on a `--copy-bins`
  [#342](https://github.com/commercialhaskell/stack/issues/342)\n* Custom snapshots
  [#111](https://github.com/commercialhaskell/stack/issues/111)\n* --force-dirty flag:
  Force treating all local packages as having dirty files (useful for cases where
  stack can't detect a file change)\n* GHC error messages: display file paths as absolute
  instead of relative for better editor integration\n* Add the `--copy-bins` option
  [#569](https://github.com/commercialhaskell/stack/issues/569)\n* Give warnings on
  unexpected config keys [#48](https://github.com/commercialhaskell/stack/issues/48)\n*
  Remove Docker `pass-host` option\n* Don't require cabal-install to upload [#313](https://github.com/commercialhaskell/stack/issues/313)\n*
  Generate indexes for all deps and all installed snapshot packages [#143](https://github.com/commercialhaskell/stack/issues/143)\n*
  Provide `--resolver global` option [#645](https://github.com/commercialhaskell/stack/issues/645)\n
  \   * Also supports `--resolver nightly`, `--resolver lts`, and `--resolver lts-X`\n*
  Make `stack build --flag` error when flag or package is unknown [#617](https://github.com/commercialhaskell/stack/issues/617)\n*
  Preserve file permissions when unpacking sources [#666](https://github.com/commercialhaskell/stack/pull/666)\n*
  `stack build` etc work outside of a project\n* `list-dependencies` command [#638](https://github.com/commercialhaskell/stack/issues/638)\n*
  `--upgrade-cabal` option to `stack setup` [#174](https://github.com/commercialhaskell/stack/issues/174)\n*
  `--exec` option [#651](https://github.com/commercialhaskell/stack/issues/651)\n*
  `--only-dependencies` implemented correctly [#387](https://github.com/commercialhaskell/stack/issues/387)\n\nBug
  fixes:\n\n* Extensions from the `other-extensions` field no longer enabled by default
  [#449](https://github.com/commercialhaskell/stack/issues/449)\n* Fix: haddock forces
  rebuild of empty packages [#452](https://github.com/commercialhaskell/stack/issues/452)\n*
  Don't copy over executables excluded by component selection [#605](https://github.com/commercialhaskell/stack/issues/605)\n*
  Fix: stack fails on Windows with git package in stack.yaml and no git binary on
  path [#712](https://github.com/commercialhaskell/stack/issues/712)\n* Fixed GHCi
  issue: Specifying explicit package versions (#678)\n* Fixed GHCi issue: Specifying
  -odir and -hidir as .stack-work/odir (#529)\n* Fixed GHCi issue: Specifying A instead
  of A.ext for modules (#498)\n\n## 0.1.2.0\n\n* Add `--prune` flag to `stack dot`
  [#487](https://github.com/commercialhaskell/stack/issues/487)\n* Add `--[no-]external`,`--[no-]include-base`
  flags to `stack dot` [#437](https://github.com/commercialhaskell/stack/issues/437)\n*
  Add `--ignore-subdirs` flag to init command [#435](https://github.com/commercialhaskell/stack/pull/435)\n*
  Handle attempt to use non-existing resolver [#436](https://github.com/commercialhaskell/stack/pull/436)\n*
  Add `--force` flag to `init` command\n* exec style commands accept the `--package`
  option (see [Reddit discussion](http://www.reddit.com/r/haskell/comments/3bd66h/stack_runghc_turtle_as_haskell_script_solution/))\n*
  `stack upload` without arguments doesn't do anything [#439](https://github.com/commercialhaskell/stack/issues/439)\n*
  Print latest version of packages on conflicts [#450](https://github.com/commercialhaskell/stack/issues/450)\n*
  Flag to avoid rerunning tests that haven't changed [#451](https://github.com/commercialhaskell/stack/issues/451)\n*
  stack can act as a script interpreter (see [Script interpreter] (https://github.com/commercialhaskell/stack/wiki/Script-interpreter)
  and [Reddit discussion](http://www.reddit.com/r/haskell/comments/3bd66h/stack_runghc_turtle_as_haskell_script_solution/))\n*
  Add the __`--file-watch`__ flag to auto-rebuild on file changes [#113](https://github.com/commercialhaskell/stack/issues/113)\n*
  Rename `stack docker exec` to `stack exec --plain`\n* Add the `--skip-msys` flag
  [#377](https://github.com/commercialhaskell/stack/issues/377)\n* `--keep-going`,
  turned on by default for tests and benchmarks [#478](https://github.com/commercialhaskell/stack/issues/478)\n*
  `concurrent-tests: BOOL` [#492](https://github.com/commercialhaskell/stack/issues/492)\n*
  Use hashes to check file dirtiness [#502](https://github.com/commercialhaskell/stack/issues/502)\n*
  Install correct GHC build on systems with libgmp.so.3 [#465](https://github.com/commercialhaskell/stack/issues/465)\n*
  `stack upgrade` checks version before upgrading [#447](https://github.com/commercialhaskell/stack/issues/447)\n\n##
  0.1.1.0\n\n* Remove GHC uncompressed tar file after installation [#376](https://github.com/commercialhaskell/stack/issues/376)\n*
  Put stackage snapshots JSON on S3 [#380](https://github.com/commercialhaskell/stack/issues/380)\n*
  Specifying flags for multiple packages [#335](https://github.com/commercialhaskell/stack/issues/335)\n*
  single test suite failure should show entire log [#388](https://github.com/commercialhaskell/stack/issues/388)\n*
  valid-wanted is a confusing option name [#386](https://github.com/commercialhaskell/stack/issues/386)\n*
  stack init in multi-package project should use local packages for dependency checking
  [#384](https://github.com/commercialhaskell/stack/issues/384)\n* Display information
  on why a snapshot was rejected [#381](https://github.com/commercialhaskell/stack/issues/381)\n*
  Give a reason for unregistering packages [#389](https://github.com/commercialhaskell/stack/issues/389)\n*
  `stack exec` accepts the `--no-ghc-package-path` parameter\n* Don't require build
  plan to upload [#400](https://github.com/commercialhaskell/stack/issues/400)\n*
  Specifying test components only builds/runs those tests [#398](https://github.com/commercialhaskell/stack/issues/398)\n*
  `STACK_EXE` environment variable\n* Add the `stack dot` command\n* `stack upgrade`
  added [#237](https://github.com/commercialhaskell/stack/issues/237)\n* `--stack-yaml`
  command line flag [#378](https://github.com/commercialhaskell/stack/issues/378)\n*
  `--skip-ghc-check` command line flag [#423](https://github.com/commercialhaskell/stack/issues/423)\n\nBug
  fixes:\n\n* Haddock links to global packages no longer broken on Windows [#375](https://github.com/commercialhaskell/stack/issues/375)\n*
  Make flags case-insensitive [#397](https://github.com/commercialhaskell/stack/issues/397)\n*
  Mark packages uninstalled before rebuilding [#365](https://github.com/commercialhaskell/stack/issues/365)\n\n##
  0.1.0.0\n\n* Fall back to cabal dependency solver when a snapshot can't be found\n*
  Basic implementation of `stack new` [#137](https://github.com/commercialhaskell/stack/issues/137)\n*
  `stack solver` command [#364](https://github.com/commercialhaskell/stack/issues/364)\n*
  `stack path` command [#95](https://github.com/commercialhaskell/stack/issues/95)\n*
  Haddocks [#143](https://github.com/commercialhaskell/stack/issues/143):\n    * Build
  for dependencies\n    * Use relative links\n    * Generate module contents and index
  for all packages in project\n\n## 0.0.3\n\n* `--prefetch` [#297](https://github.com/commercialhaskell/stack/issues/297)\n*
  `upload` command ported from stackage-upload [#225](https://github.com/commercialhaskell/stack/issues/225)\n*
  `--only-snapshot` [#310](https://github.com/commercialhaskell/stack/issues/310)\n*
  `--resolver` [#224](https://github.com/commercialhaskell/stack/issues/224)\n* `stack
  init` [#253](https://github.com/commercialhaskell/stack/issues/253)\n* `--extra-include-dirs`
  and `--extra-lib-dirs` [#333](https://github.com/commercialhaskell/stack/issues/333)\n*
  Specify intra-package target [#201](https://github.com/commercialhaskell/stack/issues/201)\n\n##
  0.0.2\n\n* Fix some Windows specific bugs [#216](https://github.com/commercialhaskell/stack/issues/216)\n*
  Improve output for package index updates [#227](https://github.com/commercialhaskell/stack/issues/227)\n*
  Automatically update indices as necessary [#227](https://github.com/commercialhaskell/stack/issues/227)\n*
  --verbose flag [#217](https://github.com/commercialhaskell/stack/issues/217)\n*
  Remove packages (HTTPS and Git) [#199](https://github.com/commercialhaskell/stack/issues/199)\n*
  Config values for system-ghc and install-ghc\n* Merge `stack deps` functionality
  into `stack build`\n* `install` command [#153](https://github.com/commercialhaskell/stack/issues/153)
  and [#272](https://github.com/commercialhaskell/stack/issues/272)\n* overriding
  architecture value (useful to force 64-bit GHC on Windows, for example)\n* Overhauled
  test running (allows cycles, avoids unnecessary recompilation, etc)\n\n## 0.0.1\n\n*
  First public release, beta quality\n"
basic-deps:
  http-client: -any
  exceptions: -any
  rio: -any
  zip-archive: -any
  streaming-commons: -any
  bytestring: -any
  optparse-generic: -any
  unliftio: -any
  extra: -any
  unix: -any
  split: -any
  stm: -any
  Cabal: -any
  path: -any
  base: ! '>=4.10 && <5'
  time: -any
  open-browser: -any
  base64-bytestring: -any
  unicode-transforms: -any
  persistent: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  project-template: -any
  retry: -any
  persistent-template: -any
  hi-file-parser: -any
  generic-deriving: -any
  hpc: -any
  mintty: -any
  resource-pool: -any
  tls: -any
  unix-compat: -any
  filepath: -any
  process: -any
  async: -any
  conduit: -any
  cryptonite-conduit: -any
  semigroups: -any
  rio-prettyprint: -any
  th-reify-many: -any
  array: -any
  hackage-security: -any
  http-download: -any
  conduit-extra: -any
  memory: -any
  containers: -any
  terminal-size: -any
  pantry-tmp: -any
  ansi-terminal: -any
  annotated-wl-pprint: -any
  tar: -any
  text-metrics: -any
  typed-process: -any
  http-client-tls: -any
  cryptonite: -any
  zlib: -any
  network-uri: -any
  mtl: -any
  optparse-simple: -any
  filelock: -any
  githash: -any
  hashable: -any
  regex-applicative-text: -any
  mustache: -any
  file-embed: -any
  attoparsec: -any
  colour: -any
  transformers: -any
  temporary: -any
  optparse-applicative: -any
  deepseq: -any
  http-conduit: -any
  stack: -any
  fsnotify: -any
  resourcet: -any
  http-types: -any
  pretty: -any
  microlens: -any
  persistent-sqlite: -any
  aeson: -any
  path-io: -any
  template-haskell: -any
  mono-traversable: -any
  primitive: -any
  yaml: -any
  vector: -any
  echo: -any
  hpack: -any
  neat-interpolation: -any
  directory: -any
all-versions:
- 0.0.0
- 0.0.1
- 0.0.2
- 0.0.2.1
- 0.0.3
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.3.1
- 0.1.4.0
- 0.1.4.1
- 0.1.5.0
- 0.1.6.0
- 0.1.8.0
- 0.1.10.0
- 0.1.10.1
- 1.0.0
- 1.0.2
- 1.0.4
- 1.0.4.1
- 1.0.4.2
- 1.0.4.3
- 1.1.0
- 1.1.2
- 1.2.0
- 1.3.0
- 1.3.2
- 1.4.0
- 1.5.0
- 1.5.1
- 1.6.1
- 1.6.1.1
- 1.6.3
- 1.6.3.1
- 1.6.5
- 1.7.1
- 1.9.1
- 1.9.1.1
- 1.9.3
- 1.9.3.1
- 2.1.1
author: Commercial Haskell SIG
latest: 2.1.1
description-type: markdown
description: |
  ## The Haskell Tool Stack

  [![Build Status](https://dev.azure.com/commercialhaskell/stack/_apis/build/status/commercialhaskell.stack?branchName=master)](https://dev.azure.com/commercialhaskell/stack/_build/latest?definitionId=1?branchName=master)
  [![Release](https://img.shields.io/github/release/commercialhaskell/stack.svg)](https://github.com/commercialhaskell/stack/releases)
  [![Join the chat at https://gitter.im/commercialhaskell/stack](https://badges.gitter.im/commercialhaskell/stack.svg)](https://gitter.im/commercialhaskell/stack?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

  Stack is a cross-platform program for developing Haskell projects. It is intended for Haskellers both new and experienced.

  See [haskellstack.org](http://haskellstack.org) or the [doc](./doc) directory for more
  information.

  ### Subsystem maintainers

  * GHCJS - [Matchwood](https://github.com/matchwood)

  NOTE: GHCJS support is considered experimental. In Stack 2.0, we are
  removing support for building GHCJS itself; links will be added to
  this README for information on separate tools. Issues on GHCJS may be
  closed as not supported, and the next major Stack release may remove
  GHCJS support entirely.
license-name: BSD-3-Clause
