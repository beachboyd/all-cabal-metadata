homepage: https://github.com/fpco/streaming-commons
changelog-type: markdown
hash: 6614cec1468afd883921ea8d2b9d016a16c62fdaaed05db57b0ee647dc0475f2
test-bench-deps:
  streaming-commons: -any
  bytestring: ! '>=0.10.2.0'
  unix: -any
  base: -any
  hspec: ! '>=1.8'
  text: -any
  network: ! '>=2.4.0.0'
  async: -any
  array: -any
  gauge: -any
  zlib: -any
  deepseq: -any
  QuickCheck: -any
maintainer: michael@snoyman.com
synopsis: Common lower-level functions needed by various streaming data libraries
changelog: ! '## 0.2.0


  * Drop `blaze-builder` dependency


  ## 0.1.19


  * Update `getAddrInfo` hints to allow hostnames and portnames [#46](https://github.com/fpco/streaming-commons/issues/46)


  ## 0.1.18


  * Add `isCompleteInflate`


  ## 0.1.17


  * Add `bindPortGenEx`


  ## 0.1.16


  * Add `closeStreamingProcessHandle`


  ## 0.1.15.5


  * Make getSocket{Family}TCP try all addr candidates [#32](https://github.com/fpco/streaming-commons/pull/32)


  ## 0.1.15.3


  * Fix benchmarks


  ## 0.1.15.2


  * Document child process behavior in `waitForProcess`


  ## 0.1.15.1


  * Catch exceptions thrown by `waitForProcess`


  ## 0.1.15


  * Use `NO_DELAY1 for TCP client connections [#27](https://github.com/fpco/streaming-commons/issues/27)


  ## 0.1.14.2


  * Fix bug in process exception display of args with spaces/quotes


  ## 0.1.14


  * Exporting HasReadBufferSize; instance for ClientSettingsUnix [#24](https://github.com/fpco/streaming-commons/pull/24)


  ## 0.1.13


  * Make size of read buffer configurable, change default size to 32 kiB [#23](https://github.com/fpco/streaming-commons/pull/23)


  ## 0.1.12.1


  * Fix up `acceptSafe` as [mentioned by Kazu](https://github.com/yesodweb/wai/issues/361#issuecomment-102204803)


  ## 0.1.12


  * `appRawSocket`


  ## 0.1.11


  * `getUnusedInflated`: Return uncompressed data following compressed data [#20](https://github.com/fpco/streaming-commons/issues/20)


  ## 0.1.10


  Support blaze-builder >= 0.4.  Add `newByteStringBuilderRecv` to Data.Streaming.ByteString.Builder;
  add modules Data.Streaming.ByteString.Builder.Buffer and  Data.Streaming.ByteString.Builder.Class.


  ## 0.1.9


  Add Data.Streaming.ByteString.Builder


  ## 0.1.8


  Generalise types of run\*Server which never cleanly return [#13](https://github.com/fpco/streaming-commons/pull/13)


  ## 0.1.7.1


  Fix `streamingProcess` so that it doesn''t close `Handle`s passed in with

  `UseProvidedHandle`.


  ## 0.1.7


  `withCheckedProcess` added.


  ## 0.1.6


  Provide `appCloseConnection` to get the underlying connection from an `AppData`.

'
basic-deps:
  bytestring: ! '>=0.10.2.0'
  unix: -any
  stm: -any
  base: ! '>=4.7 && <5'
  text: -any
  process: -any
  network: ! '>=2.4.0.0'
  async: -any
  array: -any
  zlib: -any
  transformers: -any
  random: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.1'
- '0.1.2'
- '0.1.2.1'
- '0.1.2.2'
- '0.1.2.3'
- '0.1.2.4'
- '0.1.3'
- '0.1.3.1'
- '0.1.4'
- '0.1.4.1'
- '0.1.4.2'
- '0.1.5'
- '0.1.6'
- '0.1.7'
- '0.1.7.2'
- '0.1.7.3'
- '0.1.8'
- '0.1.8.1'
- '0.1.9'
- '0.1.9.1'
- '0.1.10.0'
- '0.1.11'
- '0.1.12'
- '0.1.12.1'
- '0.1.13'
- '0.1.14'
- '0.1.14.1'
- '0.1.14.2'
- '0.1.15'
- '0.1.15.1'
- '0.1.15.2'
- '0.1.15.3'
- '0.1.15.4'
- '0.1.15.5'
- '0.1.16'
- '0.1.17'
- '0.1.18'
- '0.1.19'
- '0.2.0.0'
author: Michael Snoyman, Emanuel Borsboom
latest: '0.2.0.0'
description-type: markdown
description: ! "streaming-commons\n=================\n\nCommon lower-level functions
  needed by various streaming data libraries.\nIntended to be shared by libraries
  like conduit and pipes.\n\n[![Build Status](https://travis-ci.org/fpco/streaming-commons.svg)](https://travis-ci.org/fpco/streaming-commons)\n[![Build
  status](https://ci.appveyor.com/api/projects/status/gn0gn4po97su2iyk/branch/master?svg=true)](https://ci.appveyor.com/project/snoyberg/streaming-commons/branch/master)\n\nDependencies\n------------\n\nOne
  of the requirements of this package is to restrict ourselves to \"core\"\ndependencies.
  The definition of core is still to be decided, but here's a\nworking start:\n\n*
  *No* dependency on system libraries, beyond that which is required by other\n  dependencies.\n*
  Anything which ships with GHC. *However*, we must retain compatibility with\n  versions
  of those packages going back to at least GHC 7.4, and preferably\n  earlier.\n*
  text, once again with backwards compatibility for versions included with\n  legacy
  Haskell Platform. In other words, 0.11.2 support is required.\n* network, support
  back to 2.3. We do *not* need to support the\n  network/network-bytestring split.\n*
  stm, preferably all the way back to 2.1.\n* transformers\n\nFor debate:\n\n* Other
  Haskell Platform packages, especially vector and attoparsec.\n"
license-name: MIT
