homepage: https://github.com/kwf/StrictCheck#readme
changelog-type: ''
hash: acd5b5d519730dd33a78a81587626cd5d5d74be2d2f8b7cd0d28a06ec7cabdb9
test-bench-deps:
  base: -any
  StrictCheck: -any
  HUnit: -any
  deepseq: -any
  generics-sop: -any
  QuickCheck: -any
maintainer: kwf@very.science
synopsis: ! 'StrictCheck: Keep Your Laziness In Check'
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  containers: ! '>=0.5 && <0.7'
  bifunctors: ! '>=5.5 && <5.6'
  generics-sop: ! '>=0.3.2 && <0.4'
  QuickCheck: ! '>=2.10 && <2.12'
  template-haskell: ! '>=2.12 && <2.15'
all-versions:
- '0.1.0'
- '0.1.1'
author: Kenneth Foner, Hengchu Zhang, and Leo Lampropoulos
latest: '0.1.1'
description-type: markdown
description: ! "  # StrictCheck: Keep Your Laziness In Check\n  \n  StrictCheck is
  a property-based random testing framework for\n  observing, specifying, and testing
  the strictness behaviors of Haskell\n  functions. Strictness behavior is traditionally
  considered a non-functional\n  property; StrictCheck allows it to be tested as if
  it were one, by reifying\n  demands on data structures so they can be manipulated
  and examined within\n  Haskell.\n  \n  For details, see the library on Hackage:
  <https://hackage.haskell.org/package/StrictCheck>.\n"
license-name: MIT
