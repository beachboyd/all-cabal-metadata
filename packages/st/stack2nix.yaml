homepage: ''
changelog-type: markdown
hash: c8bf10a1ca5a27f8b0dfca40c09e7618e0fdaf5aa405ca39d9fbf529dccbc4ac
test-bench-deps:
  base: ! '>=4 && <5'
  hspec: -any
  stack2nix: -any
maintainer: jacob.mitchell@iohk.io
synopsis: Convert stack.yaml files into Nix build instructions.
changelog: ! '# Changelog


  ## v0.2.1 (2018-09-04)


  Bug fixes:


  - null bin-package-db for GHC 7.10 #118

  - Bump cabal2nix and remove upper bound #120

  - Parse mac operating system as osx or darwin #123

  - Don''t use `src = ./.` #121

  - Pass --compiler to calls to cabal2nix #115


  ## v0.2 (2018-07-24)


  Major changes:


  - Use full stackage snapshot instead of relying on the build plan #83

  - Get rid of hnix and rely on Derivation type from cabal2nix

  - Use nix to provision executables if missing #83

  - Use GHC version that belongs to the LTS #84

  - ghc-options in stack.yaml are now passed to generated Nix exprs #96

  - Support --bench #97


  Other enhancements:


  - Support --platform to set targeting system generation #79

  - Use cabal2nix and stack as haskell libraries instead of relying on executable
  parsing #75

  - Add --verbose flag #78

  - Be able to pin down hackage snapshot #75

  - Optimize cabal2nix calls by reusing HackageDB #75

  - Rewrite tests in hspec to reduce dependencies #83

  - Make stack.yaml filename configurable #90

  - Add option to disable indentation #89

  - When cloning git, also checkout submodules #108


  Bug fixes:


  - Be able to override GHC core packages #51

  - Cleanup concurrency #33

  - Add --haddock #38

  - Add --test #35

  - Support Stack subdirs #10

  - Correct version parsing #67

  - Silence git stdout output not to leak into Nix #91


  ## v0.1.3.0 (2017-07-27)


  Bug fixes:


  - Apply only Nix overrides without version fixes #26


  ## v0.1.2.0 (2017-06-22)


  Bug fixes:


  - Minor stack2nix.cabal improvements


  ## v0.1.1.0 (2017-06-22)


  Initial public release.

'
basic-deps:
  regex-pcre: ! '>=0.94.4 && <0.95'
  Cabal: ! '>=2.0.0.2 && <2.3'
  path: -any
  base: ! '>=4.9 && <4.12'
  time: -any
  text: ! '>=1.2.2.1 && <1.3'
  language-nix: -any
  SafeSemaphore: ! '>=0.10.1 && <0.11'
  filepath: ! '>=1.4.1.1 && <1.5'
  process: ! '>=1.4.3 && <1.7'
  async: ! '>=2.1.1.1 && <2.3'
  hackage-db: -any
  containers: ! '>=0.5.7.1 && <0.6'
  lens: -any
  distribution-nixpkgs: ! '>=1.1 && <1.2'
  cabal2nix: ! '>=2.10'
  temporary: ! '>=1.2.0.4 && <1.4'
  optparse-applicative: ! '>=0.13.2 && <0.15'
  stack2nix: -any
  stack: ! '>=1.5.1'
  pretty: -any
  directory: ! '>=1.3 && <1.4'
all-versions:
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- '0.2'
- 0.2.1
author: Jacob Mitchell
latest: 0.2.1
description-type: markdown
description: ! "# stack2nix\n\n[![Build Status](https://travis-ci.org/input-output-hk/stack2nix.svg?branch=master)](https://travis-ci.org/input-output-hk/stack2nix)\n\n##
  About\n\n`stack2nix` automates conversion from [Stack](https://docs.haskellstack.org/en/stable/README/)
  configuration file to [Nix](http://nixos.org/nix/) expressions. The purpose is to
  map stack.yaml one-to-one into Nix expressions.\n\n`stack2nix` high-level workflow:\n\n-
  Generate stackage snapshot to determine complete fixed version list of packages
  based on resolver\n- apply any additional configuration (local packages, extra dependencies,
  etc) from `stack.yaml`\n- generate complete list of dependencies to Nix expressions,
  replacing upstream `hackage-packages.nix`\n\n## Installation\n\nThere are three
  options. The first - using Nix is recommended. If there are difficulties please
  file an issue.\n\n## Nix (recommended)\n\n1. Install [Nix](https://nixos.org/nix/).\n2.
  Clone this repo.\n3. Run `nix-build` to build.\n\n### Stack\n\n1. Install [Nix](https://nixos.org/nix/).\n2.
  Clone this repo.\n3. Run `stack install --nix` to install.\n\n### Virtual Machine\n\n1.
  Install [VirtualBox](https://www.virtualbox.org/wiki/VirtualBox) and [Vagrant](https://www.vagrantup.com/).\n2.
  Clone this repo.\n3. Run `./scripts/vagrant.sh` and take a coffee break.\n4. If
  there are no errors, log into the VM: `vagrant ssh`.\n\n## Usage\n\nNix expressions
  generated by stack2nix require NixOS 17.09 or later.\n\n### Local Packages\n\nSometimes
  it's convenient to build local Haskell packages. Assuming the current directory
  is a locally maintained fork of Pandoc:\n\n```\n    $ stack2nix . > default.nix\n
  \   $ nix-build -A pandoc\n```\n\n### Remote Packages\n\nStack2nix can generate
  a nix expressions for Haskell packages hosted in git repositories.\n\n```\n    $
  stack2nix --revision 242e2a064f6a32b22e1599bbfe72e64d7b6203b8 https://github.com/jgm/pandoc.git
  > demo.nix\n    $ nix-build -A pandoc demo.nix\n```\n\n## Testing\n\nRun `./scripts/travis.sh`
  to build and test.\n"
license-name: MIT
