homepage: https://github.com/jaspervdj/stylish-haskell
changelog-type: text
hash: 2db2b53a95e1b2e5190501ef220b773f386b76cdf56aedb49e6304d8564886e5
test-bench-deps:
  test-framework-hunit: ! '>=0.2 && <0.4'
  bytestring: ! '>=0.9 && <0.11'
  test-framework: ! '>=0.4 && <0.9'
  base: ! '>=4.8 && <5'
  syb: ! '>=0.3 && <0.8'
  filepath: ! '>=1.1 && <1.5'
  HUnit: ! '>=1.2 && <1.7'
  containers: ! '>=0.3 && <0.6'
  haskell-src-exts: ! '>=1.18 && <1.21'
  mtl: ! '>=2.0 && <2.3'
  file-embed: ! '>=0.0.10 && <0.1'
  aeson: ! '>=0.6 && <1.3'
  yaml: ! '>=0.7 && <0.9'
  directory: ! '>=1.2.3 && <1.4'
maintainer: Jasper Van der Jeugt <m@jaspervdj.be>
synopsis: Haskell code prettifier
changelog: ! "# CHANGELOG\n\n- 0.9.0.2 (2018-01-03)\n    * Bump lower bound of `directory`
  to `1.2.3` for `getXdgDirectory`\n\n- 0.9.0.1 (2017-12-29)\n    * Fix missing Extra-source-file
  in cabal file\n\n- 0.9.0.0 (2017-12-26)\n    * Embed the default configuration\n
  \   * Add platform-specific configuration paths (by Jan Tojnar)\n    * Bump `haskell-src-exts`
  to 0.20\n    * Avoid unpaired parenthesis when import doesn't specify any items
  (by\n      Matthew Kennerly)\n    * Remove shebang lines at the beginning of file
  (by Vaibhav Sagar)\n\n- 0.8.1.0 (2017-06-19)\n    * Add `pad_module_names` option
  (by Yuriy Syrovetskiy)\n    * Add `space_surround` option to import styling (by
  Linus Arver)\n    * Bump `optparse-applicative` to 0.14\n\n- 0.8.0.0\n    * Remove
  `MagicHash` from whitelisted language extensions, since it was\n      causing parsing
  errors (by Artyom Kazak)\n    * Don't leave a `#-}` hanging on the next line when
  `language_pragmas`\n      is set to `compact` and the `#-}` doesn't fit into character
  limit\n      (by Artyom Kazak)\n    * Deduplicate import specs (i.e. `import Foo
  (a, a, b)` becomes\n      `import Foo (a, b)`) (by Artyom Kazak)\n    * Take package
  imports into account when prettifying imports\n      (by Artyom Kazak)\n    * Bump
  `aeson` to 1.2\n    * Bump `syb` to 0.7\n    * Bump `HUnit` to 1.6\n\n- 0.7.1.0\n
  \   * Keep `safe` and `{-# SOURCE #-}` import annotations (by Moritz Drexl)\n\n-
  0.7.0.0\n    * If there's parse errors, show these and exit with code 1\n    * Bump
  `aeson` to 1.1\n    * Bump `directory` to 1.3\n    * Bump `haskell-src-exts` to
  1.19\n\n- 0.6.5.0\n    * Fix issue with unit records (by Mizunashi Mana)\n    *
  Bump `HUnit` to 1.5\n\n- 0.6.4.0\n    * Remove `XmlSyntax` from whitelisted language
  extensions, since it was\n      causing parsing errors\n\n- 0.6.3.0\n    * Bump
  `optparse-applicative` to 0.13.0.0\n    * Export Import options & add a default\n
  \   * Add `list_padding: module_name` option (by Oleg Grenrus)\n    * Bump `aeson`
  to 1.0 (by Oleg Grenrus)\n    * Special setting for empty import lists (by Oleg
  Grenrus)\n\n- 0.6.2.0\n    * Bump `haskell-src-exts` to 1.18\n\n- 0.6.1.0\n    *
  Fix line patching issue in Editor\n\n- 0.6.0.0\n    * Add a `simple_align` step\n
  \   * Move `records` step into `simple_align`\n    * Use a set of default language
  extensions for parsing (by Langston Barrett)\n    * Add a newline format option
  (by Svyatolslav Gryaznov)\n    * Add more symbols from UnicodeSyntax (by Langston
  Barrett)\n    * Add a `--version` option (by Ondra Pelech)\n\n- 0.5.17.0\n    *
  Remove shebang from input before attempting to extract pragmas\n    * Set stdin
  and stdout encoding to UTF-8 by default\n\n- 0.5.16.0\n    * Fail if the default
  configuration file is not found.\n\n- 0.5.15.2\n    * Bump `aeson` to 0.11\n\n-
  0.5.15.1\n    * Fix error that caused haddock to bail on this package\n\n- 0.5.15.0\n
  \   * Add new options for import list alignment (by Ondřej Janošík)\n\n- 0.5.14.4\n
  \   * Bump `stylish-haskell` to 1.17.0\n\n- 0.5.14.3\n    * Bump `HUnit` to 1.13\n\n-
  0.5.14.2\n    * Bump `aeson` to 0.10\n    * Bump `syb` to 0.6\n\n- 0.5.14.1\n    *
  Bump `aeson` to 0.9\n\n- 0.5.14.0\n    * Bump `syb` to 0.5\n    * Slight refactoring
  in align code\n\n- 0.5.13.0\n    * Fix issue with shebang code\n\n- 0.5.12.0\n    *
  Add support for shebang at start of file\n\n- 0.5.11.2\n    * Bump `filepath` dependency
  to 1.5\n\n- 0.5.11.1\n    * Fix -Wall compilation with GHC 7.10\n\n- 0.5.11.0\n
  \   * Bump `haskell-src-exts` dependency to 1.16\n\n- 0.5.10.2\n    * Bump `mtl`
  dependency to 2.2\n\n- 0.5.10.1\n    * Bump `aeson` dependency to 0.8\n\n- 0.5.10.0\n
  \   * Bump `haskell-src-exts` dependency to 1.15\n    * Fix test which was not run
  before\n\n- `0.5.9.0`\n    * Add `compact_line` setting for Language Pragma styling\n"
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4.8 && <5'
  syb: ! '>=0.3 && <0.8'
  strict: ! '>=0.3 && <0.4'
  filepath: ! '>=1.1 && <1.5'
  containers: ! '>=0.3 && <0.6'
  haskell-src-exts: ! '>=1.18 && <1.21'
  mtl: ! '>=2.0 && <2.3'
  file-embed: ! '>=0.0.10 && <0.1'
  optparse-applicative: ! '>=0.12 && <0.15'
  aeson: ! '>=0.6 && <1.3'
  stylish-haskell: -any
  yaml: ! '>=0.7 && <0.9'
  directory: ! '>=1.2.3 && <1.4'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.3.0.0'
- '0.3.1.0'
- '0.3.2.0'
- '0.4.0.0'
- '0.5.0.0'
- '0.5.0.1'
- '0.5.0.2'
- '0.5.1.0'
- '0.5.2.0'
- '0.5.3.0'
- '0.5.4.0'
- '0.5.5.0'
- '0.5.5.1'
- '0.5.5.2'
- '0.5.6.0'
- '0.5.6.1'
- '0.5.7.0'
- '0.5.8.0'
- '0.5.9.0'
- '0.5.9.1'
- '0.5.10.0'
- '0.5.10.1'
- '0.5.10.2'
- '0.5.11.0'
- '0.5.11.1'
- '0.5.11.2'
- '0.5.12.0'
- '0.5.13.0'
- '0.5.14.0'
- '0.5.14.1'
- '0.5.14.2'
- '0.5.14.3'
- '0.5.14.4'
- '0.5.15.0'
- '0.5.15.1'
- '0.5.15.2'
- '0.5.16.0'
- '0.5.17.0'
- '0.6.0.0'
- '0.6.1.0'
- '0.6.2.0'
- '0.6.3.0'
- '0.6.4.0'
- '0.6.5.0'
- '0.7.0.0'
- '0.7.1.0'
- '0.8.0.0'
- '0.8.1.0'
- '0.9.0.0'
- '0.9.0.1'
- '0.9.0.2'
author: Jasper Van der Jeugt <m@jaspervdj.be>
latest: '0.9.0.2'
description-type: markdown
description: ! "stylish-haskell\n===============\n\n[![Build Status](https://img.shields.io/circleci/project/github/jaspervdj/stylish-haskell.svg)](https://circleci.com/gh/jaspervdj/stylish-haskell)\n\nIntroduction\n------------\n\nA
  simple Haskell code prettifier. The goal is not to format all of the code in\na
  file, since I find those kind of tools often \"get in the way\". However,\nmanually
  cleaning up import statements etc. gets tedious very quickly.\n\nThis tool tries
  to help where necessary without getting in the way.\n\nInstallation\n------------\n\nYou
  can install it using `stack install stylish-haskell` or `cabal install stylish-haskell`.\n\nYou
  can also install it using your package manager:\n * Debian 9 or later: `apt-get
  install stylish-haskell`\n * Ubuntu 16.10 or later: `apt-get install stylish-haskell`\n
  * Arch Linux: `pacman -S stylish-haskell`\n\nFeatures\n--------\n\n- Aligns and
  sorts `import` statements\n- Groups and wraps `{-# LANGUAGE #-}` pragmas, can remove
  (some) redundant\n  pragmas\n- Removes trailing whitespace\n- Aligns branches in
  `case` and fields in records\n- Converts line endings (customizable)\n- Replaces
  tabs by four spaces (turned off by default)\n- Replaces some ASCII sequences by
  their Unicode equivalents (turned off by\n  default)\n\nFeature requests are welcome!
  Use the [issue tracker] for that.\n\n[issue tracker]: https://github.com/jaspervdj/stylish-haskell/issues\n\nExample\n-------\n\nTurns:\n\n```haskell\n{-#
  LANGUAGE ViewPatterns, TemplateHaskell #-}\n{-# LANGUAGE GeneralizedNewtypeDeriving,\n
  \           ViewPatterns,\n    ScopedTypeVariables #-}\n\nmodule Bad where\n\nimport
  Control.Applicative ((<$>))\nimport System.Directory (doesFileExist)\n\nimport qualified
  Data.Map as M\nimport      Data.Map    ((!), keys, Map)\n\ndata Point = Point\n
  \   { pointX, pointY :: Double\n    , pointName :: String\n    } deriving (Show)\n```\n\ninto:\n\n```haskell\n{-#
  LANGUAGE GeneralizedNewtypeDeriving #-}\n{-# LANGUAGE ScopedTypeVariables        #-}\n{-#
  LANGUAGE TemplateHaskell            #-}\n\nmodule Bad where\n\nimport           Control.Applicative
  ((<$>))\nimport           System.Directory    (doesFileExist)\n\nimport           Data.Map
  \           (Map, keys, (!))\nimport qualified Data.Map            as M\n\ndata
  Point = Point\n    { pointX, pointY :: Double\n    , pointName      :: String\n
  \   } deriving (Show)\n```\nConfiguration\n-------------\n\nThe tool is customizable
  to some extent. It tries to find a config file in the\nfollowing order:\n\n1. A
  file passed to the tool using the `-c/--config` argument\n2. `.stylish-haskell.yaml`
  in the current directory (useful for per-directory\n   settings)\n3. `.stylish-haskell.yaml`
  in the nearest ancestor directory (useful for\n   per-project settings)\n4. `stylish-haskell/config.yaml`
  in the platform’s configuration directory\n   (on Windows, it is %APPDATA%, elsewhere
  it defaults to `~/.config` and\n   can be overridden by the `XDG_CONFIG_HOME` environment
  variable;\n   useful for user-wide settings)\n5. `.stylish-haskell.yaml` in your
  home directory (useful for user-wide\n   settings)\n6. The default settings.\n\nUse
  `stylish-haskell --defaults > .stylish-haskell.yaml` to dump a\nwell-documented
  default configuration to a file, this way you can get started\nquickly.\n\nVIM integration\n---------------\n\nSince
  it works as a filter it is pretty easy to integrate this with VIM.\n\nYou can call\n\n
  \   :%!stylish-haskell\n\nand add a keybinding for it.\n\nOr you can define `formatprg`\n\n
  \   :set formatprg=stylish-haskell\n\nand then use `gq`.\n\nThere is also the [vim-stylish-haskell]
  plugin, which runs stylish-haskell\nautomatically when you save a Haskell file.\n\n[vim-stylish-haskell]:
  https://github.com/nbouscal/vim-stylish-haskell\n\nEmacs integration\n-----------------\n\n[haskell-mode]
  for Emacs supports `stylish-haskell`. For configuration,\nsee [the “Using external
  formatters” section][haskell-mode/format] of the\nhaskell-mode manual.\n\n[haskell-mode]:
  https://github.com/haskell/haskell-mode\n[haskell-mode/format]: http://haskell.github.io/haskell-mode/manual/latest/Autoformating.html\n\nAtom
  integration\n----------------\n\n[ide-haskell] for Atom supports `stylish-haskell`.\n\n[atom-beautify]
  for Atom supports Haskell using `stylish-haskell`.\n\n[ide-haskell]: https://atom.io/packages/ide-haskell\n[atom-beautify]:
  Https://atom.io/packages/atom-beautify\n\nCredits\n-------\n\nWritten and maintained
  by Jasper Van der Jeugt.\n\nContributors:\n\n- Chris Done\n- Hiromi Ishii\n- Leonid
  Onokhov\n- Michael Snoyman\n- Mikhail Glushenkov\n"
license-name: BSD3
