homepage: https://gitlab.com/codemonkeylabs/structured-cli#readme
changelog-type: ''
hash: 0e93b946279f589d651933b01e117713a062e59deec31f24068c7875cbfacbdd
test-bench-deps: {}
maintainer: erick@codemonkeylabs.de
synopsis: Application library for building interactive console CLIs
changelog: ''
basic-deps:
  haskeline: -any
  split: -any
  base: ! '>=4.7 && <5'
  data-default: -any
  structured-cli: -any
  mtl: -any
  transformers: -any
all-versions:
- '0.9.0.2'
- '0.9.0.3'
- '0.9.1.0'
- '0.9.2.0'
- '0.9.3.0'
- '0.9.3.1'
- '0.9.4.0'
- '0.9.4.1'
- '2.0.0.0'
- '2.0.0.1'
- '2.2.0.0'
- '2.2.1.0'
- '2.3.0.0'
author: Erick Gonzalez
latest: '2.3.0.0'
description-type: markdown
description: ! "# structured-cli\n#### Haskell library for building structured CLI
  applications\n\nThis module provides the tools to build a complete \"structured\"
  CLI application, similar\nto those found in systems like Cisco IOS or console configuration
  utilities etc. It aims\nto be easy for implementors to use.\n\n* How to use this
  module:\n\nIt is often the case that a simple example is the best user guide, at
  least for the\nexperienced programmer. The following code illustrates a basic but
  functioning CLI application:\n\n\n```haskell\nmodule Main where\n\nimport Control.Monad
  \                (void)\nimport Control.Monad.IO.Class        (liftIO)\nimport Data.Default
  \                 (def)\nimport System.Console.StructuredCLI\n\nroot :: Commands
  ()\nroot = do\n  world >+ do\n    hello\n    bye\n    command \"exit\" \"return
  to previous level\" exit\n\nworld :: Commands ()\nworld = command \"world\" \"enter
  into the world\" $ return NewLevel\n\nhello :: Commands ()\nhello = command \"hello\"
  \"prints a greeting\" $ do\n          liftIO . putStrLn $ \"Hello world!\"\n          return
  NoAction\n\nbye :: Commands ()\nbye = command \"bye\" \"say goodbye\" $ do\n        liftIO
  . putStrLn $ \"Sayonara!\"\n        return NoAction\n\nmain :: IO ()\nmain = void
  $ runCLI \"Hello CLI\" def root\n```\n\nresulting example session:\n\n```\n>>> Hello
  CLI > ?\n- world: enter into the world\n\n>>> Hello CLI > world\n>>> Hello CLI world
  > ?\n- exit: return to previous level\n- bye: say goodbye\n- hello: prints a greeting\n\n>>>
  Hello CLI world > hello\nHello world!\n>>> Hello CLI world > bye\nSayonara!\n>>>
  Hello CLI world > exit\n>>> Hello CLI >\n```\n\nA good way to get you started is
  to grab the example code available under [example/Main.hs](https://gitlab.com/codemonkeylabs/structured-cli/blob/master/example/Main.hs)
  and modify it to suit your needs.\n"
license-name: BSD3
