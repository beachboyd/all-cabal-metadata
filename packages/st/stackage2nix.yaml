homepage: https://github.com/typeable/stackage2nix#readme
changelog-type: markdown
hash: c4de4cc6aa7a543c6d6396f364d1b6b186a646071198d692b4ed89179166ab0f
test-bench-deps:
  shakespeare: -any
  bytestring: -any
  Cabal: -any
  base: -any
  hspec: -any
  text: -any
  stackage2nix: -any
  pretty: -any
  yaml: -any
maintainer: bushevdv@gmail.com
synopsis: Convert Stack files into Nix build instructions.
changelog: ! '# 0.3.0


  - Initial Hackage release

  - Add CHANGELOG.md


  # 0.4.0

  - Add `--resolver` option to generate full stackage packages set

  - Add Nix wrapper, see `nix/README.md`

  - Upd support cabal2nix >2.5

  - Fix honor `--hackage-db` flag

'
basic-deps:
  stackage-curator: ! '>=0.15'
  exceptions: ! '>0.8'
  gitlib-libgit2: ! '>3'
  bytestring: -any
  Cabal: ! '>1.24'
  base: ! '>4.7 && <5'
  gitlib: ! '>3'
  unordered-containers: -any
  text: -any
  language-nix: -any
  filepath: -any
  containers: -any
  lens: -any
  inflections: ! '>=0.3'
  distribution-nixpkgs: ! '>=1.1'
  network-uri: -any
  hopenssl: ! '>2.2'
  stackage2nix: -any
  cabal2nix: ! '>=2.5'
  optparse-applicative: -any
  deepseq: -any
  QuickCheck: -any
  pretty: -any
  aeson: -any
  yaml: -any
all-versions:
- '0.3.0'
- '0.4.0'
author: ! 'Dmitry Bushev

  , Benno Fünfstück'
latest: '0.4.0'
description-type: markdown
description: ! "# stackage2nix\n\n[![Build Status](https://travis-ci.org/typeable/stackage2nix.svg?branch=master)](https://travis-ci.org/typeable/stackage2nix)\n\n`stackage2nix`
  converts a Stack file into a Nix Haskell packages set.\nIt creates LTS Stackage
  packages set, and applies appropriate overrides on top of it.\n\n## Install\n\nYou
  can install `stackage2nix` from the Nix expression:\n\n```\nnix-env -i -f ./nix/stackage2nix\n```\n\nIt
  provides pre-configured wrapper around the raw executable with runtime\n`PATH` and
  all auxiliary flags set up.\n\n## Build project\n\nGenerate derivations from `stack.yaml`
  config using Nix wrapper:\n\n``` bash\nstackage2nix ./stack.yaml\n```\n\nif you're
  using the raw executable, you should supply additional flags. See\nsection 'Flags'
  below for details.\n\nThis command will result in a Haskell packages set, similar
  to\n`pkgs.haskell.packages.<compiler>`, containing only packages that are required\nto
  build targets listed in `stackage.yaml`. To build a package run:\n\n``` bash\nnix-build
  -A my-package\n```\n\n## Build stackage\n\nGenerate complete Stackage packages set
  from resolver:\n\n``` bash\nstackage2nix --resolver lts-9.0\n```\n\n## Flags\n\n```\nstackage2nix
  \\\n  --lts-haskell \"$LTS_HASKELL_REPO\" \\\n  --all-cabal-hashes \"$ALL_CABAL_HASHES_REPO\"
  \\\n  .\n```\n\n`stackage2nix` has three required arguments:\n- `--lts-haskell`
  - path to [fpco/lts-haskell](https://github.com/fpco/lts-haskell)\n- `--all-cabal-hashes`
  - path to [commercialhaskell/all-cabal-hashes](https://github.com/commercialhaskell/all-cabal-hashes)
  checked out to `hackage` branch\n- `.` - path to stack.yaml file or directory\n\nProduced
  Nix derivation split on following files:\n- packages.nix - Base Stackage packages
  set\n- configuration-packages.nix - Compiler configuration\n- default.nix - Final
  Haskell packages set with all overrides applied\n\nA particular package from result
  Haskell packages set can be built with:\n\n```\nnix-build -A <package-name>\n```\n\nSee
  also the [blog post](https://blog.typeable.io/posts/2017-08-24-stackage2nix.html)\nabout
  history and motivation behind the project.\n\n## Runtime dependencies\n\n- `nix-env`
  is required to be on PATH by the\n  [distribution-nixpkgs](https://hackage.haskell.org/package/distribution-nixpkgs)\n
  \ dependency\n- `nix-prefetch-scripts` is required on PATH if you have git dependencies
  in\n  `stack.yaml`\n\n## Override result derivation\n\nComplex projects may require
  some extra customization.\nSnippet `override.nix` below shows a minimal example
  of how to apply additional\noverrides on top of Haskell packages set produced by
  `stackage2nix`.\n\n```\nwith import <nixpkgs> {};\nwith pkgs.haskell.lib;\nlet haskellPackages
  = import ./. {};\nin haskellPackages.override {\n  overrides = self: super: {\n
  \   stackage2nix = disableSharedExecutables super.stackage2nix;\n  };\n}\n```\n\n```\nnix-build
  -A stackage2nix override.nix\n```\n\nFor more complex overrides and detailed information
  on how to work with Haskell packages in Nix, see Nixpkgs manual [User’s Guide to
  the Haskell Infrastructure](http://nixos.org/nixpkgs/manual/#users-guide-to-the-haskell-infrastructure)\n\n##
  Tests\n\nIntegration tests that build stackage2nix form different stack configs:\n\n```\nSTACKAGE_REPO=<path/to/stackage/repo>
  \\\nALL_CABAL_HASHES=<path/to/all-cabal-hashes/repo> \\\nSTACK_FILE=stack-ghc-7103.yaml
  \\\n./ci-stackage2nix\n```\n"
license-name: BSD3
