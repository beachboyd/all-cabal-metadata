homepage: http://github.com/toschoo/mom
changelog-type: markdown
hash: 58a43198bc24a2332aecec65bc5de3ccb4fe93e470e217b892cd87545240e4ce
test-bench-deps: {}
maintainer: tobias dot schoofs at gmx dot net
synopsis: Stomp Parser and Utilities
changelog: ! "__0.5.0__ Much More efficient body parsing when length is given\n\n__0.4.0__
  Bytestring instead of Bytestring.Char8\n\n__0.3.0__ State Linkage Exception in license\n\n__0.2.0__
  The mime package (Codec.MIME) switched from String\n          to Text in 0.4. We
  follow. Thanks, Dave!\n\n__0.1.1__ Dependency for bytestring set to 0.10\n\n\n__0.1.0__
  Major changes:\n\n          - Compliance with Stomp 1.2:\n\n          - header keys
  and values are now escaped;\n            this, in fact, was missing for Stomp 1.1.\n\n
  \         - header keys and values are not trimmed or padded;\n            this,
  as well, should have been done for Stomp 1.1 already.\n            Be aware that
  Stomp 1.0-like message headers\n            may fail now, *e.g.*:\n            *message
  : hello world*\n            is not the same anymore as\n            *message:hello
  world*\n\n          - carriage return (ascii 13) plus line feed (ascii 10) \n            is
  now accepted as end-of-line;\n            note that stompl never generates carriage
  return as end-of-line,\n            the standard end-of-line remains line feed.\n\n
  \         - the Message frame may have an *ack* header \n            and should
  have when a message is sent \n            through a queue that requires explicit
  ack.\n\n          - the mandatory header in the Ack frame is now *id*\n            instead
  of *message-id*. It should correspond to *ack*\n            in the message that
  is ack'd.\n            Note that, to ease backward compatibility,\n            Ack
  frames are generated with both: \n            an *id* and a *message-id* header.\n\n
  \         - a Stomp frame was added.\n            The Stomp frame has exactly the
  same format\n            as the Connect frame, but it is handled differently\n            with
  respect to escaping: Connect header keys and values \n            are not escaped,
  Stomp header keys and values, however, are.\n\n__0.0.3__ Major changes:\n\n          -
  new attribute \"ClientId\" in Connect frame \n            for compatibility with
  ActiveMQ; \n\n          - all commands accept additional headers\n            to
  ease adaptations to broker-specific features. \n\n__0.0.2__ Minor corrections and
  documentation\n\n__0.0.1__ Initial Release\n"
basic-deps:
  mime: ! '>=0.4'
  bytestring: ! '>=0.10'
  split: ! '>=0.1.4.1'
  base: ! '>=4.0 && <5.0'
  text: ! '>=1.0'
  word8: ! '>=0.1.2'
  utf8-string: ! '>=0.3.6'
  attoparsec: ! '>=0.10'
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.1.0
- 0.1.1
- 0.2.0
- 0.3.0
- 0.4.0
- 0.5.0
author: Tobias Schoofs
latest: 0.5.0
description-type: haddock
description: ! 'The Stomp Protocol specifies message-oriented interoperability.

  Applications connect to a message broker to send (publish)

  or receive (subscribe) messages through queues.

  Interoperating applications do not know

  the location or internal structure of each other.

  They see only each other''s interfaces, /i.e./ the messages

  published and subscribed through the broker.

  Broker and application use a protocol based on the

  exchange of commands and other data packets, called /frames/.

  The Stompl library provides abstractions over Stomp frames

  and a Stomp frame parser.

  It does not implement a client or broker itself,

  but provides abstractions to libraries and programs doing so.

  It is used by the Stompl Queue library (stomp-queues).

  More documentation and a test suite can be found on

  <https://github.com/toschoo/mom/>.

  The Stomp specification can be found at

  <http://stomp.github.com>.'
license-name: LicenseRef-LGPL
