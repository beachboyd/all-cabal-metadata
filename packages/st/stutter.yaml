homepage: https://github.com/nmattia/stutter#readme
changelog-type: ''
hash: a9d31c10866a9d337ee7e512092af26381af996334cb9a35c061ffccba417199
test-bench-deps:
  snipcheck: ! '>=0.1.0.2'
  base: -any
  stutter: -any
  tasty-hunit: -any
  attoparsec: -any
  tasty: -any
  tasty-ant-xml: -any
maintainer: nicolas@nmattia.com
synopsis: (Stutter Text|String)-Utterer
changelog: ''
basic-deps:
  conduit-combinators: -any
  exceptions: -any
  bytestring: -any
  base: <5
  stutter: -any
  text: -any
  conduit: -any
  conduit-extra: -any
  mtl: -any
  attoparsec: -any
  optparse-applicative: -any
  resourcet: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
author: Nicolas Mattia
latest: '0.1.0.2'
description-type: markdown
description: ! "---\nsc_check-sections:\n    - examples\n---\n\n# Stutter\n\n[![Build
  Status](https://travis-ci.org/nmattia/stutter.svg?branch=master)](https://travis-ci.org/nmattia/stutter)\n\nStutter
  is a string utterer.\n\n> utterer: someone who expresses in language; someone who
  talks (especially\n> someone who delivers a public speech or someone especially
  garrulous)\n> (www.vocabulary.com)\n\nStutter takes a string definition and crafts
  as many different strings as it\ncan. See the [examples](#examples) section below
  for inspiration.\n\n# Installing\n\n## Download\n\nYou can download the latest release
  build from the [release\npage](https://github.com/nmattia/stutter/releases). The
  executable depends on\nthe `gmp` library (needed by the Haskell runtime system),
  which is most likely\nalready present on your system. If not, install it from your
  favorite package\nmanager. For Ubuntu:\n\n``` shell\n$ sudo apt-get install libgmp-dev\n```\n\nMake
  sure `stutter` is on your `PATH`.\n\n## Nix\n\nIf you have [nix](http://nixos.org/nix/)
  installed, you can install `stutter`\nwith the following command:\n\n``` shell\n$
  nix-env -i stutter\n```\n\n## Building\n\nThe recommended way is to build `stutter`
  with\n[stack](https://docs.haskellstack.org/en/stable/README/). Run the following\ncommand
  in the cloned repo:\n\n``` shell\n$ stack build\n```\n\nYou can then install it
  with\n\n``` shell\n$ stack install\n```\n\n# Contributing\n\nThere are several ways
  you can contribute:\n\n* Complain: Just [open an issue](https://github.com/nmattia/stutter/issues/new)\n
  \ and let me know what could be improved.\n* Share a use-case: You found a cool
  case? Great! [open an\n  issue](https://github.com/nmattia/stutter/issues/new) or
  (even better) a PR\n  with your issue added to the [examples](#examples) below.\n*
  Support: Share `stutter` with your friends, you never know who might need it.\n*
  Implement: All PRs are welcome.\n\n# Examples\n\nStutter can be used as a very simple
  `echo` clone:\n\n``` shell\n$ stutter 'Hello, World!'\nHello, World!\n```\n\nBut
  stutter also knows how to enumerate:\n\n``` shell\n$ stutter 'foo|bar|baz'\nfoo\nbar\nbaz\n```\n\nYou
  can easily specify which parts you want to enumerate, and which parts\nshould always
  be there:\n\n``` shell\n$ stutter 'My name is (what\\?|who\\?|Slim Shady)'\nMy name
  is what?\nMy name is who?\nMy name is Slim Shady\n```\n\nStutter can also enumerate
  file contents:\n\n``` shell\n$ stutter 'foo|bar|baz' > test.txt\n$ stutter '(@test.txt)
  -- stutter was here'\nfoo -- stutter was here\nbar -- stutter was here\nbaz -- stutter
  was here\n```\n\nAnd read from `stdin`:\n\n``` shell\n$ cat test.txt | stutter 'Check
  this out, paste: @-'\nCheck this out, paste: foo\nCheck this out, paste: bar\nCheck
  this out, paste: baz\n```\n\nStutter also likes ranges:\n\n``` shell\n$ stutter
  '[0-9a-f]'\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\na\nb\nc\nd\ne\nf\n```\n\nOf course, it
  can all be used together:\n``` shell\n$ stutter 'My name is (@test.txt) [a-c] (who\\?|what\\?|Slim
  Shady)'\nMy name is foo a who?\nMy name is foo a what?\nMy name is foo a Slim Shady\nMy
  name is foo b who?\nMy name is foo b what?\n...\nMy name is baz c who?\nMy name
  is baz c what?\nMy name is baz c Slim Shady\n```\n\nStutter can teach you binary:\n\n```
  shell\n$ stutter '(0b(0|1){#|5})|I know binary!'\n0b00000\n0b00001\n0b00010\n0b00011\n0b00100\n0b00101\n...\n0b11010\n0b11011\n0b11100\n0b11101\n0b11110\n0b11111\nI
  know binary!\n```\n\nStutter can repeat a char:\n\n``` shell\n$ stutter 'a{42}'\na\na\na\n...\n$
  stutter 'a{42}' | wc -l\n42\n```\n\n# Release checklist\n\n\n1. Make sure you're
  on (latest) master.\n\n1. Bump the version in `stutter.cabal`: `0.MAJOR.MINOR.PATCH`.\n\n>
  Given a version number MAJOR.MINOR.PATCH, increment the:\n>\n> MAJOR version when
  you make incompatible API changes,\n> MINOR version when you add functionality in
  a backwards-compatible manner, and\n> PATCH version when you make backwards-compatible
  bug fixes.\n\n1. Commit the updated `stutter.cabal` file with commit name `Release\n
  \  v0.MAJOR.MINOR.PATCH`.\n1. Tag the commit with `git tag v0.MAJOR.MINOR.PATCH`.\n1.
  Push with `git push --follow-tags`.\n1. Run `cabal sdist` and `cabal upload --publish
  ./dist/stutter...` to upload\n   `stutter` to `hackage`.\n"
license-name: MIT
