homepage: http://www.haskell.org/haskellwiki/MIDI
changelog-type: ''
hash: 0dda10b0cf799333585c4e5eae08367d5b82e2a1fad6ec4f47705af5035ebc99
test-bench-deps: {}
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: Programmatically edit MIDI event streams via ALSA
changelog: ''
basic-deps:
  base: ! '>=2 && <5'
  midi-alsa: ! '>=0.1.1 && <0.2'
  event-list: ! '>=0.1 && <0.2'
  data-accessor-transformers: ! '>=0.2.1 && <0.3'
  midi: ! '>=0.1.5 && <0.2'
  utility-ht: ! '>=0.0.5 && <0.1'
  containers: ! '>=0.2 && <0.5'
  data-accessor: ! '>=0.2.1 && <0.3'
  alsa-seq: ! '>=0.5 && <0.6'
  transformers: ! '>=0.2 && <0.3'
  random: ! '>=1 && <2'
  alsa-core: ! '>=0.5 && <0.6'
  non-negative: ! '>=0.1 && <0.2'
all-versions:
- '0.1'
- '0.2'
author: Henning Thielemann <haskell@henning-thielemann.de>
latest: '0.2'
description-type: haddock
description: ! 'Please note:

  This package shall be replaced by @reactive-balsa@ in the future.


  MIDI is the Musical Instrument Digital Interface,

  ALSA is the Advanced Linux Sound Architecture.

  This package allows to manipulate a sequence of MIDI events via ALSA.

  It is intended to be plugged as a playing assistant

  between a MIDI input device

  (e.g. a keyboard or a controller bank)

  and a MIDI controlled synthesizer

  (e.g. a software synthesizer or an external synthesizer).

  For software synthesizers see the Haskell packages

  @synthesizer-alsa@, @synthesizer-llvm@, @supercollider-midi@,

  @hsc3@, @YampaSynth@

  or the C packages @fluidsynth@ and @Timidity@.


  Applications include:

  Remapping of channels, controller, instruments, keys,

  Keyboard splitting, Conversion from notes to controllers, Latch mode,

  Convert parallel chords to serial patterns,

  Automated change of MIDI controllers,

  Echo simulation.


  It is intended that you write programs for MIDI stream manipulation.

  It is not intended to provide an executable program

  with all the functionality available

  in a custom programming interface.

  It is most fun to play with the stream editors in GHCi.

  However we provide an example module that demonstrates various effects.'
license-name: BSD-3-Clause
