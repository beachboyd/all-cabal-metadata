homepage: https://github.com/clintonmead/static-closure#readme
changelog-type: ''
hash: fa3498df5495a3f43578df1ea5e2bae45b2677bffd54089b9913dcde50ea0651
test-bench-deps: {}
maintainer: clintonmead@gmail.com
synopsis: Serialisable static pointers to functions
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  ghc-instances: -any
  constraints: -any
  containers: -any
  binary: -any
  template-haskell: -any
all-versions:
- 0.1.0.0
author: Clinton Mead
latest: 0.1.0.0
description-type: haddock
description: ! 'A more generalised and expanded version of the ideas found in [distributed-closure](https://hackage.haskell.org/package/distributed-closure)
  in the following ways:-


  1. This library allows for the core serialisable type to any type, although we currently
  only implement \"Binary\".


  2. Template Haskell is used to implement dictionary instances for all instances
  of \"Binary\" in all packages shipped with GHC with the assistance of [ghc-instances](https://hackage.haskell.org/package/ghc-instances).


  This library is very much a work in progress. It is largely untested except to check
  it compiles. Future tasks to do include:-


  1. Writing some test cases to make sure this actually works.


  2. Integrating with [freelude](https://hackage.haskell.org/package/freelude), the
  restricted \"pure\" function is perfect to define in \"freelude\".


  3. Writing some more Template Haskell functions to allow easy integration with user
  defined types.


  4. Linking this up with [acid-state](https://hackage.haskell.org/package/acid-state)
  in a somewhat sensible way.'
license-name: BSD-3-Clause
