homepage: https://github.com/knsd/crypto-pubkey-openssh
changelog-type: ''
hash: 18c75602b80a5c601780a4ea8536ce8f82ce8867760177351ba88de579bf703c
test-bench-deps:
  cereal: -any
  bytestring: -any
  base: ! '>=4.5 && <5'
  base64-bytestring: -any
  pem: -any
  crypto-pubkey-types: -any
  filepath: -any
  process: -any
  asn1-types: -any
  tasty-quickcheck: -any
  attoparsec: -any
  temporary: -any
  tasty: -any
  deepseq: -any
  asn1-encoding: -any
  QuickCheck: -any
maintainer: Fedor Gogolev <knsd@knsd.net>
synopsis: OpenSSH keys decoder/encoder
changelog: ''
basic-deps:
  cereal: -any
  bytestring: -any
  base: ! '>=4.5 && <5'
  base64-bytestring: -any
  pem: -any
  crypto-pubkey-types: -any
  asn1-types: -any
  attoparsec: -any
  asn1-encoding: -any
all-versions:
- 0.0.0
- 0.1.0
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
- 0.2.6
- 0.2.7
author: ! 'Fedor Gogolev <knsd@knsd.net>

  Maxim Mitroshin <rocco66max@gmail.com>

  Thomas DuBuisson <thomas.dubuisson@gmail.com>'
latest: 0.2.7
description-type: markdown
description: ! "crypto-pubkey-openssh [![Build Status](https://secure.travis-ci.org/knsd/crypto-pubkey-openssh.png)](http://travis-ci.org/knsd/crypto-pubkey-openssh)\n=====================\n\nOpenSSH
  keys decoder/encoder, example.\n\n```haskell\nimport System.Environment (getArgs)\nimport
  qualified Data.ByteString as B\n\nimport Crypto.PubKey.OpenSsh (decodePrivate)\n\nmain
  :: IO ()\nmain = do\n    fname <- fmap head getArgs\n    content <- B.readFile fname\n
  \   case decodePrivate content of\n        Left e -> error e\n        Right key
  -> print key\n```\n"
license-name: MIT
