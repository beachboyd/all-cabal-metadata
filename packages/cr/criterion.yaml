homepage: http://www.serpentine.com/criterion
changelog-type: markdown
hash: aff81fca09d60ba691b3d8369df8cdf5908831cff665c8e92f462cb61c63182e
test-bench-deps:
  bytestring: -any
  base: -any
  criterion: -any
  HUnit: -any
  tasty-quickcheck: -any
  statistics: -any
  tasty-hunit: -any
  tasty: -any
  deepseq: -any
  QuickCheck: ! '>=2.4'
  aeson: ! '>=0.8'
  vector: -any
  directory: -any
maintainer: Bryan O'Sullivan <bos@serpentine.com>
synopsis: Robust, reliable performance measurement and analysis
changelog: ! "1.2.6.0\n\n* Add error bars and zoomable navigation to generated HTML
  report graphs.\n\n  (Note that there have been reports that this feature can be
  somewhat unruly\n  when using macOS and Firefox simultaneously. See\n  https://github.com/flot/flot/issues/1554
  for more details.)\n\n* Use a predetermined set of cycling colors for benchmark
  groups in HTML\n  reports. This avoids a bug in earlier versions of `criterion`
  where benchmark\n  group colors could be chosen that were almost completely white,
  which made\n  them impossible to distinguish from the background.\n\n1.2.5.0\n\n*
  Add an `-fembed-data-files` flag. Enabling this option will embed the\n  `data-files`
  from `criterion.cabal` directly into the binary, producing\n  a relocatable executable.
  (This has the downside of increasing the binary\n  size significantly, so be warned.)\n\n1.2.4.0\n\n*
  Fix issue where `--help` would display duplicate options.\n\n1.2.3.0\n\n* Add a
  `Semigroup` instance for `Outliers`.\n\n* Improve the error messages that are thrown
  when forcing nonexistent\n  benchmark environments.\n\n* Explicitly mark `forceGC`
  as deprecated. `forceGC` has not had any effect\n  for several releases, and it
  will be removed in the next major `criterion`\n  release.\n\n1.2.2.0\n\n* Important
  bugfix: versions 1.2.0.0 and 1.2.1.0 were incorrectly displaying\n  the lower and
  upper bounds for measured values on HTML reports.\n\n* Have `criterion` emit warnings
  if suspicious things happen during mustache\n  template substitution when creating
  HTML reports. This can be useful when\n  using custom templates with the `--template`
  flag.\n\n1.2.1.0\n\n* Add `GCStatistics`, `getGCStatistics`, and `applyGCStatistics`
  to\n  `Criterion.Measurement`. These are inteded to replace `GCStats` (which has\n
  \ been deprecated in `base` and will be removed in GHC 8.4), as well as\n  `getGCStats`
  and `applyGCStats`, which have also been deprecated and will be\n  removed in the
  next major `criterion` release.\n\n* Add new matchers for the `--match` flag:\n
  \ * `--match pattern`, which matches by searching for a given substring in\n    benchmark
  paths.\n  * `--match ipattern`, which is like `--match pattern` but case-insensitive.\n\n*
  Export `Criterion.Main.Options.config`.\n\n* Export `Criterion.toBenchmarkable`,
  which behaves like the `Benchmarkable`\n  constructor did prior to `criterion-1.2.0.0`.\n\n1.2.0.0\n\n*
  Use `statistics-0.14`.\n\n* Replace the `hastache` dependency with `microstache`.\n\n*
  Add support for per-run allocation/cleanup of the environment with\n  `perRunEnv`
  and `perRunEnvWithCleanup`,\n\n* Add support for per-batch allocation/cleanup with\n
  \ `perBatchEnv` and `perBatchEnvWithCleanup`.\n\n* Add `envWithCleanup`, a variant
  of `env` with cleanup support.\n\n* Add the `criterion-report` executable, which
  creates reports from previously\n  created JSON files.\n\n1.1.4.0\n\n* Unicode output
  is now correctly printed on Windows.\n\n* Add Safe Haskell annotations.\n\n* Add
  `--json` option for writing reports in JSON rather than binary\n  format.  Also:
  various bugfixes related to this.\n\n* Use the `js-jquery` and `js-flot` libraries
  to substitute in JavaScript code\n  into the default HTML report template.\n\n*
  Use the `code-page` library to ensure that `criterion` prints out Unicode\n  characters
  (like Â², which `criterion` uses in reports) in a UTF-8-compatible\n  code page on
  Windows.\n\n* Give an explicit implementation for `get` in the `Binary Regression`\n
  \ instance. This should fix sporadic `criterion` failures with older versions\n
  \ of `binary`.\n\n* Use `tasty` instead of `test-framework` in the test suites.\n\n*
  Restore support for 32-bit Intel CPUs.\n\n* Restore build compatibilty with GHC
  7.4.\n\n1.1.1.0\n\n* If a benchmark uses `Criterion.env` in a non-lazy way, and
  you try\n  to use `--list` to list benchmark names, you'll now get an\n  understandable
  error message instead of something cryptic.\n\n* We now flush stdout and stderr
  after printing messages, so that\n  output is printed promptly even when piped (e.g.
  into a pager).\n\n* A new function `runMode` allows custom benchmarking applications
  to\n  run benchmarks with control over the `Mode` used.\n\n* Added support for Linux
  on non-Intel CPUs.\n\n* This version supports GHC 8.\n\n* The `--only-run` option
  for benchmarks is renamed to `--iters`.\n\n1.1.0.0\n\n* The dependency on the either
  package has been dropped in favour of a\n  dependency on transformers-compat.  This
  greatly reduces the number\n  of packages criterion depends on.  This shouldn't
  affect the\n  user-visible API.\n\n* The documentation claimed that environments
  were created only when\n  needed, but this wasn't implemented. (gh-76)\n\n* The
  package now compiles with GHC 7.10.\n\n* On Windows with a non-Unicode code page,
  printing results used to\n  cause a crash.  (gh-55)\n\n1.0.2.0\n\n* Bump lower bound
  on optparse-applicative to 0.11 to handle yet more\n  annoying API churn.\n\n1.0.1.0\n\n*
  Added a lower bound of 0.10 on the optparse-applicative dependency,\n  as there
  were major API changes between 0.9 and 0.10.\n"
basic-deps:
  exceptions: ! '>=0.8.2 && <0.9'
  bytestring: ! '>=0.9 && <1.0'
  mwc-random: ! '>=0.8.0.3'
  ansi-wl-pprint: ! '>=0.6.7.2'
  microstache: ! '>=1.0.1 && <1.1'
  base: ! '>=4.5 && <5'
  time: -any
  text: ! '>=0.11'
  code-page: -any
  filepath: -any
  criterion: -any
  parsec: ! '>=3.1.0'
  semigroups: -any
  containers: -any
  js-jquery: -any
  base-compat: ! '>=0.9'
  cassava: ! '>=0.3.0.0'
  binary: ! '>=0.5.1.0'
  mtl: ! '>=2'
  js-flot: -any
  statistics: ! '>=0.14 && <0.15'
  vector-algorithms: ! '>=0.4'
  transformers: -any
  optparse-applicative: ! '>=0.13'
  deepseq: ! '>=1.1.0.0'
  Glob: ! '>=0.7.2'
  aeson: ! '>=0.8'
  transformers-compat: ! '>=0.4'
  vector: ! '>=0.7.1'
  directory: -any
all-versions:
- '0.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.2.0'
- '0.3.0'
- '0.4.0'
- '0.4.1.0'
- '0.5.0.0'
- '0.5.0.1'
- '0.5.0.2'
- '0.5.0.3'
- '0.5.0.4'
- '0.5.0.5'
- '0.5.0.7'
- '0.5.0.8'
- '0.5.0.9'
- '0.5.0.10'
- '0.5.1.0'
- '0.5.1.1'
- '0.6.0.0'
- '0.6.0.1'
- '0.6.1.1'
- '0.6.2.0'
- '0.6.2.1'
- '0.8.0.0'
- '0.8.0.1'
- '0.8.0.2'
- '0.8.1.0'
- '1.0.0.0'
- '1.0.0.1'
- '1.0.0.2'
- '1.0.1.0'
- '1.0.2.0'
- '1.1.0.0'
- '1.1.1.0'
- '1.1.4.0'
- '1.2.2.0'
- '1.2.3.0'
- '1.2.4.0'
- '1.2.5.0'
- '1.2.6.0'
author: Bryan O'Sullivan <bos@serpentine.com>
latest: '1.2.6.0'
description-type: markdown
description: ! "# Criterion: robust, reliable performance measurement\n\n[![Build
  Status](https://travis-ci.org/bos/criterion.svg?branch=master)](https://travis-ci.org/bos/criterion)\n\nThis
  package provides the Criterion module, a Haskell library for\nmeasuring and analysing
  software performance.\n\n<a href=\"http://www.serpentine.com/criterion/fibber.html\"
  target=\"_blank\"><img src=\"http://www.serpentine.com/criterion/fibber-screenshot.png\"></img></a>\n\nTo
  get started, read the <a\nhref=\"http://www.serpentine.com/criterion/tutorial.html\"\ntarget=\"_blank\">online
  tutorial</a>, and take a look at the programs\nin the <a href=\"/examples\"\ntarget=\"_blank\">examples
  directory</a>.\n\n\n# Building and installing\n\nTo build and install criterion,
  just run\n\n    cabal install criterion\n\n\n# Get involved!\n\nPlease report bugs
  via the\n[github issue tracker](https://github.com/bos/criterion/issues).\n\nMaster
  [github repository](https://github.com/bos/criterion):\n\n* `git clone https://github.com/bos/criterion.git`\n\nThere's
  also a [Mercurial mirror](https://bitbucket.org/bos/criterion):\n\n* `hg clone https://bitbucket.org/bos/criterion`\n\n(You
  can create and contribute changes using either Mercurial or git.)\n\n\n# Authors\n\nThis
  library is written and maintained by Bryan O'Sullivan,\n<bos@serpentine.com>.\n"
license-name: BSD3
