homepage: ''
changelog-type: markdown
hash: c11943665fb6a73bc0275859c74bf83639af40776021123767c6d3020e3df311
test-bench-deps:
  bytestring: -any
  base: -any
  dhall: -any
  tasty-expected-failure: <0.12
  text: -any
  dhall-yaml: -any
  tasty-hunit: '>=0.2'
  dhall-json: -any
  tasty: <1.4
maintainer: Gabriel439@gmail.com
synopsis: Convert between Dhall and YAML
changelog: |
  1.1.0

  * BREAKING CHANGE: [Add `yaml-to-dhall` support for inferring the schema](https://github.com/dhall-lang/dhall-haskell/pull/1773)
      * You no longer need to provide the command with an explicit schema.  The
        command will infer a reasonably close schema from the provided YAML
      * This is a breaking change because the `schema` field of the `Options` type
        now has type `Maybe Text` instead of `Text`
  * [Add `yaml-to-dhall type` subcommand](https://github.com/dhall-lang/dhall-haskell/pull/1776)
      * You can use this subcommand to print the inferred schema for a YAML value,
        so that you can edit the schema and use it for subsequent invocations.
  * [Add `yaml-to-dhall` support for using `toMap`](https://github.com/dhall-lang/dhall-haskell/pull/1745)
      * Now if you specify a `Map` as the schema, the generated Dhall code will
        use `toMap` to improve the appearance

  1.0.3

  * [yaml: Single-quote date/bool string fields](https://github.com/dhall-lang/dhall-haskell/commits/master/dhall-json)

  1.0.2

  * Build against `dhall-1.30.0`

  1.0.1

  * Build against `dhall-1.29.0`

  1.0.0

  * Initial release
basic-deps:
  exceptions: '>=0.8.3 && <0.11'
  bytestring: <0.11
  base: '>=4.8.0.0 && <5'
  dhall: '>=1.31.0 && <1.33'
  text: '>=0.11.1.0 && <1.3'
  dhall-yaml: -any
  HsYAML-aeson: '>=0.2 && <0.3'
  ansi-terminal: '>=0.6.3.1 && <0.11'
  HsYAML: '>=0.2 && <0.3'
  dhall-json: '>=1.6.0 && <1.7'
  prettyprinter: -any
  optparse-applicative: '>=0.14.0.0 && <0.16'
  aeson: '>=1.0.0.0 && <1.5'
  vector: -any
  prettyprinter-ansi-terminal: '>=1.1.1 && <1.2'
all-versions:
- 1.0.0
- 1.0.1
- 1.0.2
- 1.0.3
- 1.1.0
author: Gabriel Gonzalez
latest: 1.1.0
description-type: markdown
description: |
  # `dhall-yaml`

  For installation or development instructions, see:

  * [`dhall-haskell` - `README`](https://github.com/dhall-lang/dhall-haskell/blob/master/README.md)

  Full documentation here:

  * [`dhall-yaml` instructions](https://hackage.haskell.org/package/dhall-yaml/docs/Dhall-Yaml.html)

  ## Introduction

  This `dhall-yaml` package provides a Dhall to YAML compiler, `dhall-to-yaml-ng`,
  and a tool for deriving Dhall from YAML code: `yaml-to-dhall`.

  Tutorials for the analogous JSON tools are available in the `dhall-json` package:

  * [`dhall-to-json`](https://hackage.haskell.org/package/dhall-json/docs/Dhall-JSON.html)

  * [`json-to-dhall`](https://hackage.haskell.org/package/dhall-json/docs/Dhall-JSONToDhall.html)

  ## Example

  ```bash
  $ dhall-to-yaml-ng <<< "{ foo = [1, 2, 3], bar = { baz = True } }" > example.yaml
  $ cat example.yaml
  bar:
    baz: true
  foo:
  - 1
  - 2
  - 3
  $ yaml-to-dhall '{ foo : List Natural, bar : { baz : Bool } }' < example.yaml
  { bar = { baz = True }, foo = [ 1, 2, 3 ] }
  ```
license-name: GPL-3.0-only
