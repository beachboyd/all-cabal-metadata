homepage: http://www.kfish.org/software/hogg/
changelog-type: ''
hash: 9fbf1323b7f1cef98afff343cdbc74f6f099e660a71839601207cefd0465603b
test-bench-deps: {}
maintainer: Conrad Parker <conrad@metadecks.org>
synopsis: Library and tools to manipulate the Ogg container format
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=3 && <5'
  time: -any
  HUnit: -any
  array: -any
  containers: -any
  old-locale: -any
  mtl: -any
  random: -any
all-versions:
- 0.2.0
- 0.3.0
- 0.4.1
- 0.4.1.1
- 0.4.1.2
author: Conrad Parker
latest: 0.4.1.2
description-type: text
description: ! "------------------------------------------------------------\nHOgg
  -- Ogg encapsulation stuffz\n------------------------------------------------------------\n\nRequirements:\n
  \       - Cabal (tested with various version from 1.1.3 to 1.6.0)\n\n        - Data.ByteString,
  included with GHC >= 6.6, and available separately\n          for GHC 6.4 at:\n
  \           http://www.cse.unsw.edu.au/~dons/fps.html (version 0.7 or greater)\n\n
  \       If building on Debian GNU/Linux:\n        $ apt-get install ghc6 libghc6-mtl-dev
  libghc6-hunit-dev\n        $ apt-get install libghc6-cabal-dev # not needed for
  Debian unstable\n\nOptional:\n        - HTTP1 with lazy bytestring support, from:\n
  \          http://www.dtek.chalmers.se/~tox/site/http.php4\n        To configure
  with HTTP support, first install the above library, then\n        go install through
  Cabal, but run configure like\n\n        $ runhaskell Setup configure --flags=\"http\"\n\n\nBuilding:\n\n
  \       This package is configured by default to build with GHC 6.8.\n\n        If
  you are building with GHC 6.6, you need to follow the usual Cabal\n        setup
  but run configure like:\n\n        $ runhaskell Setup configure --flags=\"-splitBase\"\n\n
  \       If you are building with GHC 6.4, you will need to edit hogg.cabal\n        by
  adding 'fps' to the Build-Depends line and probably remove the Cabal\n        conditionals.
  You should consider upgrading to a more recent GHC.\n\n        Once configured,
  the following procedure will build hogg:\n\n        $ chmod +x Setup.hs\n        $
  ./Setup.hs configure\n        $ ./Setup.hs build\n        $ ./Setup.hs install\n\nUsage:\n
  \       General help (lists subcommands):\n\n                hogg help\n\n        Help
  on a subcommand:\n\n                hogg help <subcommand>\n\n        Info about
  the various tracks of one or more files:\n\n                hogg info file1.ogg
  file2.ogg ...\n\n        Dump packets of an Ogg file:\n\n                hogg dump
  file1.ogg file2.ogg ...\n\n        Dump pages of an Ogg file\n\n                hogg
  pagedump file1.ogg file2.ogg ...\n\n        Dump vorbis (theora, speex) packets\n\n
  \               hogg dump -c vorbis file.ogg ...\n                hogg pagedump
  -c vorbis file.ogg ...\n                hogg dumpraw -c vorbis file.ogg ...\n\n
  \       Chop out part of a file\n\n                hogg chop --start 01:10 --end
  2:30 -o output.ogg file.ogg\n\n        Merge\n\n          merge pages from many
  input files and produce a single output file:\n\n                hogg merge -o output.ogg
  file1.ogg file2.ogg file3.ogg ...\n\n\nChecking stuff works:\n\n        Rewrite
  a file (parse pages, rewrite page data):\n\n                hogg rip file.ogg >
  newfile.ogg\n                diff file.ogg newfile.ogg\n\n        Repacket a file
  (parse to packets, rewrite with original segmentation):\n\n                hogg
  reconstruct file.ogg > newfile.ogg\n                diff file.ogg newfile.ogg\n"
license-name: BSD-3-Clause
