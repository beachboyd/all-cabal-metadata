homepage: https://github.com/vincenthz/hs-hourglass
changelog-type: markdown
hash: e083f5e030dfebe432e30a9c0fa07a99a54eac992f622442646be561fd7a44e8
test-bench-deps:
  bytestring: -any
  hourglass: -any
  base: ==4.*
  time: -any
  gauge: -any
  old-locale: -any
  tasty-quickcheck: -any
  mtl: -any
  tasty-hunit: -any
  tasty: -any
  deepseq: -any
maintainer: vincent@snarc.org
synopsis: simple performant time related library
changelog: ! "## Version 0.2.8 (2015-01-07)\n\n- Fix test with time 1.5\n\n## Version
  0.2.7 (2015-01-07)\n\n- Add compatibility module for easy convertion with time and
  other standards.\n- Format parsing improvements\n\n## Version 0.2.6 (2014-10-19)\n\n-
  fix compilation of benchs.\n- add utc time.\n- print the error in the test\n- remove
  all the read instances in favor of explicit parsing in time parsing.\n\n## Version
  0.2.5 (2014-10-04)\n\n- Fixed Windows build\n- Added type signature to fromIntegral\n\n##
  Version 0.2.4 (2014-09-30)\n\n- Fix ElapsedP Num instance (addition and substraction)\n-
  add travis machinery\n\n## Version 0.2.3 (2014-09-25)\n\n- Fix build on GNU/Hurd.\n-
  Add milliseconds, microseconds and nanoseconds format time\n\n## Version 0.2.2 (2014-06-11)\n\n-
  wrap system time in local time correctly\n\n## Version 0.2.1 (2014-06-10)\n\n- unwrap
  local time structure when doing a localTimePrint\n- properly show hours, minutes
  and seconds in format print.\n- add some description of new calls.\n\n## Version
  0.2.0 (2014-06-03)\n\n- use tasty to replace test-framework\n- add some inlining
  pragma to tentatively deal with rules properly.\n- Remove the Time method to get
  timezone offset, all local time must be handled\n  through LocalTime\n- Remove the
  Time instance for Localtime.\n- add localTimeParse since timeParse is not suitable
  anymore for LocalTime (no\n  more time instance).\n- add Hours and Minutes types.\n-
  add a time interval class to convert between time unit types.\n- add some new derived
  classes (Enum,Real,Integral) for time unit types.\n- split TimeDiff into a Period
  and Duration structure.\n\n## Version 0.1.2 (2014-05-05)\n\n- fix compilation on
  OSX\n- add some system benchmarks\n- comment and markup reformating\n\n## Version
  0.1.1 (2014-05-04)\n\n- add all the cabal tests file to the source dist\n- https-ize
  some urls\n\n## Version 0.1.0 (2014-05-04)\n\n- Initial version\n"
basic-deps:
  base: ! '>=4 && <5'
  deepseq: -any
all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
- 0.2.6
- 0.2.7
- 0.2.8
- 0.2.9
- 0.2.10
- 0.2.11
- 0.2.12
author: Vincent Hanquez <vincent@snarc.org>
latest: 0.2.12
description-type: markdown
description: ! "hourglass\n=========\n\n[![Build Status](https://travis-ci.org/vincenthz/hs-hourglass.png?branch=master)](https://travis-ci.org/vincenthz/hs-hourglass)\n[![BSD](http://b.repl.ca/v1/license-BSD-blue.png)](http://en.wikipedia.org/wiki/BSD_licenses)\n[![Haskell](http://b.repl.ca/v1/language-haskell-lightgrey.png)](http://haskell.org)\n\nHourglass
  is a simple time library.\n\nDocumentation: [hourglass on hackage](http://hackage.haskell.org/package/hourglass)\n\nDesign\n------\nKey
  parts of the design are the Timeable and Time typeclasses.\nTime representations
  of the same time values are interchangeable and easy to convert\nbetween each other.
  This also allows the user to define new time types that\ninteract with the same
  functions as the built-in types.\n\nFor example:\n```haskell\nlet dateTime0 =\n
  \     DateTime { dtDate = Date { dateYear = 1970, dateMonth = January, dateDay =
  1 }\n               , dtTime = TimeOfDay {todHour = 0, todMin = 0, todSec = 0, todNSec
  = 0 }}\n    elapsed0 = Elasped 0\n\n> timeGetElapsed elapsed0 == timeGetElapsed
  dateTime0\nTrue\n> timeGetDate elapsed0 == timeGetDate dateTime0\nTrue\n> timePrint
  \"YYYY-MM\" elapsed0\n\"1970-01\"\n> timePrint \"YYYY-MM\" dateTime0\n\"1970-01\"\n```\n\nHourglass
  has the same limitations as your system:\n\n* On 32 bit linux, you can't get a date
  after the year 2038.\n* In Windows 7, you can't get the date before the year 1601.\n\nComparaison
  with time\n---------------------\n* Getting posix time:\n```haskell\n-- With time\nimport
  Data.Time.Clock.POSIX\n\nptime <- getPOSIXTime\n\n-- With hourglass\nimport System.Hourglass\n\nptime
  <- timeCurrent\n```\n\n* Getting the current year:\n```haskell\n-- With time\nimport
  Data.Time.Clock\nimport Data.Time.Calendar\n\ncurrentYear <- (\\(y,_,_) -> y) .
  toGregorian . utcDay <$> getCurrentTime\n\n-- With hourglass\nimport System.Hourglass\nimport
  Data.Time\n\ncurrentYear <- dateYear . timeGetDate <$> timeCurrent\n```\n\n* Representating
  \"4th May 1970 15:12:24\"\n```haskell\n-- With time\nimport Data.Time.Clock\nimport
  Date.Time.Calendar\n\nlet day = fromGregorian 1970 5 4\n    diffTime = secondsToDiffTime
  (15 * 3600 + 12 * 60 + 24)\nin UTCTime day diffTime\n\n-- With hourglass\nimport
  Date.Time\n\nDateTime (Date 1970 May 4) (TimeOfDay 15 12 24 0)\n```\n"
license-name: BSD-3-Clause
