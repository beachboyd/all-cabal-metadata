homepage: http://github.com/anttisalonen/hogre-examples
changelog-type: text
hash: 4ebb901f8d88240337c6d9ecd0f7f08c7466507aa6f1b8950217e5234440d178
test-bench-deps: {}
maintainer: Antti Salonen<ajsalonen at gmail dot com>
synopsis: Examples for using Hogre.
changelog: ! '0.1.4 - 2010-05-15

  - fix compilation with ghc >= 7.2

  - update code to work with cgen 0.0.4 name mangling


  0.1.0 - 2010-08-05

  - adapt to hogre-0.1.0


  0.0.3 - 2010-05-15

  - Fix compiler error on GHC 6.12.1

  - Small corrections to documentation


  0.0.2 - 2009-11-12

  - Correct git URL


  0.0.1 - 2009-11-11

  - Initial release

'
basic-deps:
  base: ! '>=3 && <5'
  hogre: ! '>=0.1.4'
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.1.0
- 0.1.4
author: Antti Salonen<ajsalonen at gmail dot com>
latest: 0.1.4
description-type: text
description: ! "Introduction:\n\nExamples for using Hogre, Haskell bindings to OGRE\n(Object-Oriented
  Graphics Rendering Engine)\n(http://www.ogre3d.org/).\n\nUsage:\n\n1. Install non-Haskell
  dependencies (OGRE: http://www.ogre3d.org/).\n2. Install Haskell dependencies (hogre
  (see \nhttp://github.com/anttisalonen/hogre)) either using\ncabal or by downloading
  and installing the packages manually.\n   Note: you need cgen, a Haskell binding
  generator, for hogre. cgen can be\n   found at git://github.com/anttisalonen/cgen.git
  or at Hackage.\n3. Unpack hogre-examples\n4. cabal configure [--user] && cabal build\n5.
  Define the directory where the OGRE plugins are installed by modifying\n   plugins.cfg.
  The default is /usr/lib/OGRE.\n6. Run an example: dist/build/example_01/example_01\n
  \  The examples must be run in the root directory of the package in order\n   to
  find the media files.\n\n"
license-name: MIT
