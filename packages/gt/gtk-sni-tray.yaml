homepage: https://github.com/IvanMalison/gtk-sni-tray#readme
changelog-type: markdown
hash: e025ba7bdf8771c00f99b36a04be1d2ad8580c57e6d319d76fcf31582b0222ad
test-bench-deps: {}
maintainer: IvanMalison@gmail.com
synopsis: A standalone StatusNotifierItem/AppIndicator tray
changelog: ! '# Changelog for gtk-sni-tray


  ## Unreleased changes

'
basic-deps:
  haskell-gi-base: ! '>=0.21.1'
  bytestring: -any
  unix: -any
  gtk-sni-tray: -any
  base: ! '>=4.7 && <5'
  status-notifier-item: ! '>=0.2.0.0 && <0.3.0.0'
  text: -any
  gi-glib: -any
  gi-gtk: ! '>=3.0.21'
  gi-gdk: -any
  gtk-strut: -any
  containers: -any
  haskell-gi: ! '>=0.21.2'
  hslogger: -any
  dbus: ! '>=1.0.0 && <2.0.0'
  transformers: -any
  optparse-applicative: -any
  gi-gdkpixbuf: ! '>=2.0.15'
  gi-dbusmenugtk3: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
author: Ivan Malison
latest: '0.1.1.0'
description-type: markdown
description: ! 'gtk-sni-tray

  ===============


  gtk-sni-tray provides a [StatusNotifierHost](https://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierHost/)
  widget written using the gtk+3 bindings for haskell provided by [gi-gtk](https://hackage.haskell.org/package/gi-gtk).
  It also provides a simple standalone executable, `gtk-sni-tray-standalone`, that
  is configured with command line arguments. This executable will run the aforementioned
  widget by itself in a strut window, on each monitor for each it is requested.


  taffybar

  ----------

  It is generally recommeneded that you use this widget through [taffybar](https://github.com/travitch/taffybar)
  with [this module](https://github.com/travitch/taffybar/blob/master/src/System/Taffybar/SNITray.hs),
  which will allow you to combine it with other useful widgets, and will give more
  flexibility in configuration.


  StatusNotifierWatcher

  --------------------------

  By default, it is assumed that you are running an isolated StatusNotifierWatcher
  daemon. [status-notifier-item](https://github.com/IvanMalison/status-notifier-item)
  provides a StatusNotifierWatcher executable that you can use for this purpose. If
  you get an error like


  ```

  MethodError {methodErrorName = ErrorName "org.freedesktop.DBus.Error.ServiceUnknown",
  methodErrorSerial = Serial 7, methodErrorSender = Just (BusName "org.freedesktop.DBus"),
  methodErrorDestination = Just (BusName ":1.549"), methodErrorBody = [Variant "The
  name org.kde.StatusNotifierWatcher was not provided by any .service files"]}

  ```


  when you start `gtk-sni-tray-standalone` it is probably because you have not started
  a StatusNotifierWatcher on your system. You can solve this problem by passing the
  `--watcher` flag to `gtk-sni-tray-standalone`, but this is not recommeneded, because
  many SNI processes do not monitor for new watcher processes, and so may not immediately
  register when this new watcher is started.


  Installation

  ---------------


  Both [`stack`](https://www.haskell.org/cabal/download.html) and [`cabal`](https://www.haskell.org/cabal/download.html)
  can be used to install gtk-sni-tray.


'
license-name: BSD3
