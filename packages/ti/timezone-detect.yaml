homepage: https://github.com/lfborjas/timezone-detect#readme
changelog-type: markdown
hash: be9f20c46242b4777bff4cf0891e3b46e2d396b634404bd69742d07462f7e93c
test-bench-deps:
  base: '>=4.7 && <4.14'
  hspec: '>=2.7 && <2.8'
  timezone-detect: -any
  directory: '>=1.3 && <1.4'
maintainer: timezone-detect@lfborjas.com
synopsis: Haskell bindings for the zone-detect C library
changelog: |
  # Changelog for timezone-detect

  ## v0.1.0.0 (2020-08-29)

  * Bundles the C code for [ZoneDetect](https://github.com/BertoldVdb/ZoneDetect)
  * Exposes the `lookupTimezone` function to obtain the standardized name of a timezone, given
    a database file, latitude and longitude.
basic-deps:
  base: '>=4.7 && <4.14'
all-versions:
- 0.1.0.0
author: Luis Borjas Reyes
latest: 0.1.0.0
description-type: markdown
description: |
  # TimezoneDetect

  ![build](https://github.com/lfborjas/timezone-detect/workflows/Haskell%20CI/badge.svg)


  Haskell bindings to the excellent [ZoneDetect](https://github.com/BertoldVdb/ZoneDetect) library.

  ## Usage

  You'll need timezone database files to work with this library, see instructions [in the original repository](https://github.com/BertoldVdb/ZoneDetect/tree/master/database).

  Once you have those files in hand, you'll be able to get a timezone from a given latitude and longitude:

  ```haskell
  > lookupTimezone "./test/tz_db/timezone21.bin" 40.7831 (-73.9712)
  Right "America/New_York"
  ```
license-name: GPL-2.0-only
