homepage: http://hub.darcs.net/esz/timelike-clock
changelog-type: ''
hash: 25efa93a3e74d39e71a6339714541c48f6a853e01b634ddb64eba8e8c3298be4
test-bench-deps: {}
maintainer: Ertugrul Söylemez <esz@posteo.de>
synopsis: Timelike interface for the clock library
changelog: ''
basic-deps:
  base: ! '>=4.8 && <5'
  clock: ! '>=0.6 && <1'
  timelike: ! '>=0.2 && <1'
  transformers: ! '>=0.4 && <1'
all-versions:
- 0.1.0
author: Ertugrul Söylemez <esz@posteo.de>
latest: 0.1.0
description-type: markdown
description: ! "timelike-clock: [Timelike] interface for [clock]\n================================================\n\nCopyright
  2016 Ertugrul Söylemez\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou
  may not use these files except in compliance with the License.\nYou may obtain a
  copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless
  required by applicable law or agreed to in writing, software\ndistributed under
  the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied.\nSee the License for the specific language
  governing permissions and\nlimitations under the License.\n\n[clock]:    http://hackage.haskell.org/package/clock\n[timelike]:
  http://hackage.haskell.org/package/timelike\n\n\nIntroduction\n============\n\nThis
  library provides an explicit type called `ClockTime` to represent\nclock values
  as read by the [clock] library together with applicable\n[timelike] instances.  To
  use it import its module:\n\n~~~ {.haskell}\nimport Data.Time.Class.Clock\n~~~\n\nThe
  `ClockTime` type is parametric over the actual clock type, thus this\nlibrary requires
  `-XDataKinds`, and most likely at least one of your\noperations will require an
  explicit type signature.  Example:\n\n~~~ {.haskell}\nt1 <- getTime :: IO (ClockTime
  Monotonic)\nsomeOperation\nt2 <- getTime\nlet elapsed = diffTime t2 t1\n~~~\n"
license-name: LicenseRef-Apache
