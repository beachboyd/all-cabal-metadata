homepage: ''
changelog-type: text
hash: dcb9be3a0865b3084a47a3fa6031916a68c48625db540da8b23352d7eb57afc6
test-bench-deps: {}
maintainer: Julian Ospald <hasufell@posteo.de>
synopsis: Support for well-typed paths
changelog: "0.9.2\n\t* fix build with ghc-7.6\n\t* raise required bytestring version\n\t*
  Tighten base bound to prevent building before GHC 7.6 (by George Wilson)\n0.9.1\n\t*
  fix build with ghc-7.8 and 7.10\n0.9.0\n\t* don't force \"Path Abs\" anymore in
  IO module, abstract more over Path types\n\t* add 'toAbs'\n0.8.1\n\t* add 'readFile',
  'readFileEOF', 'writeFile' and 'appendFile'\n0.8.0\n\t* 'copyDirRecursiveOverwrite',
  'copyFileOverwrite', 'easyCopyOverwrite' and 'moveFileOverwrite' have been removed,
  instead use the versions without the *Overwrite suffix and pass in 'Strict' (for
  default behavior) or 'Overwrite' as the CopyMode argument\n\t* introduced a new
  'RecursiveErrorMode' type to allow controlling recursive behavior of 'copyDirRecursive'
  (use 'FailEarly' for default behavior)\n\t* 'createRegularFile' and 'createDir'
  now take FileMode as a parameter (also see 'newFilePerms' and 'newDirPerms')\n\t*
  various documentation fixes\n\t* improved reliability of tests\n0.7.5:\n\t* relicense
  to BSD3\n0.7.3:\n\t* don't expose HPath.Internal\n0.7.2:\n\t* fix tests, so they
  work with the sdist tarball too\n\t* added the following function to HPath.IO: createSymlink\n0.7.1:\n\t*
  various cleanups and documentation improvements\n\t* added the following functions
  to System.Posix.FilePath: splitSearchPath, getSearchPath, stripExtension, makeRelative,
  makeValid\n0.7.0:\n\t* use 'sendfile' from 'simple-sendfile' in _copyFile and do
  read/write as a fallback only\n\t* add isFileName, hasParentDir, hiddenFile to System.Posix.FilePath\n\t*
  add our own openFd version for more control\n\t* small documentation improvements\n\t*
  add a getDirectoryContents' version that works on Fd\n\t* lift version constraints
  in benchmark\n\t* remove fpToString and userStringToFP, use Data.ByteString.UTF8
  directly instead\n0.6.0:\n\t* fixes 'throwDestinationInSource' to be more reliable.\n\t*
  removes some unused HPathIOException constructors\n\t* consistently provide exception
  constructor identifiers\n\t* be less harsh when non-supported file types get passed
  to our functions, possibly ignoring them\n\t* minor cleanups\n0.5.9:\n\t* Adds our
  posix-paths fork and a lot of IO operations.\n0.5.8:\n\t* First version of the fork.\n0.5.7:\n\t*
  Fix haddock problem.\n0.5.6:\n\t* Reject only .. and .\n0.5.5:\n\t* Use filepath's
  isValid function for additional sanity checks\n0.5.4:\n\t* Disable parsing of path
  consisting only of \".\"\n\t* Add NFData instance for Path\n\t* Some typo/docs improvements\n\t*
  Add standard headers to modules\n0.5.3:\n\t* Added conversion functions.\n\n0.2.0:\n\n
  \       * Rename parentAbs to simply parent.\n\t* Add dirname.\n\n0.3.0:\n\t* Removed
  Generic instance.\n\n0.4.0:\n\t* Implemented stricter parsing, disabling use of
  \"..\".\n\t* Made stripDir generic over MonadThrow\n\n0.5.0:\n\t* Fix stripDir p
  p /= Nothing bug.\n\n0.5.2:\n\t* Removed unused DeriveGeneric.\n"
basic-deps:
  exceptions: -any
  bytestring: ! '>=0.10.0.0'
  base: ! '>=4.8 && <5'
  hpath-filepath: ! '>=0.10 && <0.11'
  word8: -any
  deepseq: -any
all-versions:
- 0.7.2
- 0.7.3
- 0.7.5
- 0.8.0
- 0.8.1
- 0.9.0
- 0.9.1
- 0.9.2
- 0.10.0
author: Julian Ospald <hasufell@posteo.de>
latest: 0.10.0
description-type: markdown
description: |
  # HPath

  [![Gitter chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/hasufell/hpath?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Hackage version](https://img.shields.io/hackage/v/hpath.svg?label=Hackage)](https://hackage.haskell.org/package/hpath) [![Build Status](https://api.travis-ci.org/hasufell/hpath.png?branch=master)](http://travis-ci.org/hasufell/hpath) [![Hackage-Deps](https://img.shields.io/hackage-deps/v/hpath.svg)](http://packdeps.haskellers.com/feed?needle=hpath)

  Support for well-typed paths in Haskell.

  ## Motivation

  The motivation came during development of
  [hsfm](https://github.com/hasufell/hsfm)
  which has a pretty strict File type, but lacks a strict Path type, e.g.
  for user input.

  The library that came closest to my needs was
  [path](https://github.com/chrisdone/path),
  but the API turned out to be oddly complicated for my use case, so I
  decided to fork it.

  ## Goals

  * well-typed paths
  * safe filepath manipulation, never using String as filepath, but ByteString

  Note: this library was written for __posix__ systems and it will probably not support other systems.

  ## Differences to 'path'

  * doesn't attempt to fake IO-related information into the path, so whether a path points to a file or directory is up to your IO-code to decide...
  * trailing path separators will be preserved if they exist, no messing with that
  * uses safe ByteString for filepaths under the hood instead of unsafe String
  * fixes broken [dirname](https://github.com/chrisdone/path/issues/18)
  * renames dirname/filename to basename/dirname to match the POSIX shell functions
  * introduces a new `Path Fn` for safe filename guarantees and a `RelC` class
  * allows pattern matching via unidirectional PatternSynonym
  * uses simple doctest for testing
  * allows `~/` as relative path, because on posix level `~` is just a regular filename that does _NOT_ point to `$HOME`
  * remove TH, it sucks
license-name: BSD-3-Clause
