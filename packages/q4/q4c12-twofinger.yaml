homepage: https://github.com/quasicomputational/mega/tree/master/packages/twofinger
changelog-type: markdown
hash: 4da5644c4bdf3ac5af26fa70a8ebf23c887e663903b1db5d825b60659fe8bac3
test-bench-deps:
  base: ! '>=4.9.1.0 && <4.11'
  doctest: ! '>=0.11.4 && <0.14'
  lens: ! '>=4.15.4 && <4.16'
  streams: ! '>=3.3 && <3.4'
  q4c12-twofinger: -any
  QuickCheck: ! '>=2.10.1 && <2.11'
  template-haskell: -any
maintainer: quasicomputational <quasicomputational@gmail.com>
synopsis: Efficient alternating finger trees
changelog: ! 'q4c12-twofinger 0.0.0.2 (2017-12-08)

  ====================================


  * Loosened `bifunctors` dependency bounds.


  q4c12-twofinger 0.0.0.1 (2017-12-08)

  ====================================


  * Packaging fix-ups only.


  q4c12-twofinger 0 (2017-12-08)

  ==============================


  * Initial release.

'
basic-deps:
  semigroupoids: ! '>=5.2.1 && <5.3'
  base: ! '>=4.9.1.0 && <4.11'
  bifunctors: ! '>=5.4.2 && <5.6'
  streams: ! '>=3.3 && <3.4'
  deepseq: ! '>=1.4.3.0 && <1.5'
  QuickCheck: ! '>=2.10.1 && <2.11'
all-versions:
- '0'
- '0.0.0.1'
- '0.0.0.2'
author: quasicomputational <quasicomputational@gmail.com>
latest: '0.0.0.2'
description-type: markdown
description: ! 'This package provides efficient alternating sequences based on finger
  trees. These can represent sequences made up of two types of element, `e` and `a`  where
  two of the same type of element cannot follow each other directly.


  Four different flavours are provided, isomorphic to `([(a, e)], a)`, `([(e, a)],
  e)`, `[(a, e)]`, and `[(e, a)]`.


  Cons-like operations are *O(1)* amortised, and append operations are *O(log(min(n,
  m)))* amortised.


  For more details, please see the Haddock documentation of Q4C12.TwoFinger.

'
license-name: BSD2
