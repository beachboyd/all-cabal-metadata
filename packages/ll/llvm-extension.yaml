homepage: https://wiki.haskell.org/LLVM
changelog-type: ''
hash: 55a2601d3653b45786688d70ebc0f0596dcd5d4555fcdd6fd60a2ee73d46f24c
test-bench-deps: {}
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: Processor specific intrinsics for the llvm interface
changelog: ''
basic-deps:
  llvm-tf: ! '>=9.0 && <9.1'
  unsafe: ! '>=0.0 && <0.1'
  base: ! '>=3 && <5'
  utility-ht: ! '>=0.0.11 && <0.1'
  containers: ! '>=0.1 && <0.7'
  llvm-extra: ! '>=0.9 && <0.10'
  non-empty: ! '>=0.2.1 && <0.4'
  tfp: ! '>=1.0 && <1.1'
  transformers: ! '>=0.1.1 && <0.6'
  cpuid: ! '>=0.2.3 && <0.3'
  prelude-compat: ! '>=0.0 && <0.0.1'
all-versions:
- '0.0'
author: Henning Thielemann <haskell@henning-thielemann.de>
latest: '0.0'
description-type: haddock
description: |-
  The Low-Level Virtual-Machine is a compiler back-end with optimizer.
  You may also call it a high-level portable assembler.
  LLVM provides processor specific instructions via so-called intrinsics.
  This package allows you to use such instructions,
  while also defining fallbacks for older versions of a processor
  and different architectures.

  We provide an auto-generated list of intrinsics
  for special SSE+AVX instructions on the X86 target.
  On x86 architectures we depend on the cpuid package
  for automatic detection of available features.
  This works when using JIT or native compilation,
  but it fails for cross-compilation.

  Formerly, this package was part of the @llvm-extra@ package.
  But the names of intrinsics change between LLVM versions without notification.
  Intrinsics for processor specific instructions are considered a last resort.
  In current LLVM versions all functions I needed so far
  are available as generic intrinsics.
license-name: BSD-3-Clause
