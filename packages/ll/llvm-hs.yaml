homepage: http://github.com/llvm-hs/llvm-hs/
changelog-type: markdown
hash: a77132180598d9e529ee2ca7d360126bf7d8566eae1d01df097e33b571c61f61
test-bench-deps:
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.9 && <5'
  containers: ! '>=0.4.2.1'
  llvm-hs-pure: ==5.1.*
  llvm-hs: -any
  tasty-quickcheck: ! '>=0.8'
  mtl: ! '>=2.1'
  tasty-hunit: ! '>=0.9'
  pretty-show: ! '>=1.6 && <1.7'
  transformers: ! '>=0.3.0.0'
  temporary: ! '>=1.2 && <1.3'
  tasty: ! '>=0.11'
  QuickCheck: ! '>=2.5.1.1'
maintainer: Anthony Cowley, Stephen Diehl, Moritz Kiefer <moritz.kiefer@purelyfunctional.org>
synopsis: General purpose LLVM bindings
changelog: ! "## 5.1.3 (2018-01-06)\n\n* Add bindings to `loadLibraryPermamently`
  and `getSymbolAddressInProcess`.\n\n## 5.1.2 (2017-12-19)\n\n* Reupload of 5.1.1
  since [Hackage broke](https://github.com/haskell/hackage-server/issues/643) during
  the original upload.\n\n## 5.1.1 (2017-12-16)\n\n* Fix argument order in `LLVM_Hs_CreateTargetMachine`.
  This affects `withTargetMachine` and `withHostTargetMachine`.\n* Add support for
  `MCTargetOptions`.\n\n## 5.1.0 (2017-10-12)\n\n### Bugfixes\n\n* Set target options
  in `withTargetMachine`. Previously the options\n  passed there were simply ignored.\n*
  Fix decoding of constant vectors.\n* Fix decoding of function attributes in calls.\n\n###
  Enhancements\n\n* Support for more target options.\n* Suport string attributes as
  parameter attributes.\n* Support more calling conventions.\n* Support `NoTail` `TailCallKind`.\n\n##
  5.0.0 (2017-09-07)\n\n* Support for LLVM 5.0\n\n    We only give a summary of the
  changes affecting the public API of `llvm-hs` here.\n    Please refer to the official\n
  \   [release notes for LLVM 5.0](http://releases.llvm.org/5.0.0/docs/ReleaseNotes.html)\n
  \   for an overview of all changes in LLVM 5.0.\n\n    * The `X86_64_Win64` calling
  convention is now called `Win64`.\n    * There is a new `Speculatable` function
  attribute.\n    * The `CrossThread` synchronization scope has been removed. There
  is\n      now a new `System` synchronization scope.\n    * The `OrcJIT`-API now
  operates on individual modules instead of\n      sets of modules.\n    * The `lessPreciseFloatingPointMultiplyAddOption`
  field has been\n      removed from the target options.\n    * The `compressDebugSections`
  option field is now of type\n      `DebugCompressionType` instead of `Bool`.\n    *
  The `BasicBlockVectorize` pass has been removed. You should use\n      `SuperwordLevelParallelismVectorize`
  instead.\n\n* Throw 'EncodeException' when the type supplied in a\n  'GlobalReference'
  does not match the type of the expression.\n* Throw 'EncodeException' when the result
  of instructions returning\n  void is named using ':='.\n\n## 4.2.0 (2017-06-20)\n\n*
  Revamp OrcJIT API\n  * The user facing API is now exposed using `LLVM.OrcJIT`.\n
  \ * All user facing functions have been documented.\n  * In addition the bracket-style
  API, there are now `new*` and\n    `dispose*` functions making it easier to ingegrate
  OrcJIT in\n    custom monad transformer stacks.\n  * There is a new `CompileLayer`
  typeclass which abstracts over the\n    various compile layers in `OrcJIT`.\n* Support
  QuickCheck 2.10\n\n## 4.1.0 (2017-05-17)\n\n* Switch most of the API from `String`
  to `ByteString`.\n* Switch from ExceptT to using exceptions.\n  See `LLVM.Exception`
  for an overview of the exceptions potentially thrown.\n\n## 4.0.1\n\n* Fix linking
  of system libraries\n\n## 4.0.0 (initial release, changes in comparison to llvm-general)\n\n*
  Move modules from `LLVM.General*` to `LLVM.*`\n* Support for LLVM 4.0\n* Improved
  support for LLVMâ€™s exception handling instructions\n* `-fshared-llvm` is now supported
  on windows (thanks to @RyanGLScott)\n* Default to `-fshared-llvm`\n* Expose `LLVM.Internal.*`
  modules.\n"
basic-deps:
  exceptions: ! '>=0.8'
  bytestring: ! '>=0.9.1.10'
  base: ! '>=4.9 && <5'
  array: ! '>=0.4.0.0'
  containers: ! '>=0.4.2.1'
  utf8-string: ! '>=0.3.7'
  llvm-hs-pure: ==5.1.*
  mtl: ! '>=2.1.3'
  attoparsec: ! '>=0.13'
  transformers: ! '>=0.3 && <0.6'
  template-haskell: ! '>=2.5.0.0'
all-versions:
- '4.0.0.0'
- '4.0.1.0'
- '4.1.0.0'
- '4.2.0'
- '5.0.0'
- '5.1.0'
- '5.1.1'
- '5.1.2'
- '5.1.3'
author: Anthony Cowley, Stephen Diehl, Moritz Kiefer <moritz.kiefer@purelyfunctional.org>,
  Benjamin S. Scarlet
latest: '5.1.3'
description-type: haddock
description: ! 'llvm-hs is a set of Haskell bindings for LLVM <http://llvm.org/>.
  Unlike other current Haskell bindings,

  it uses an ADT to represent LLVM IR (<http://llvm.org/docs/LangRef.html>), and so
  offers two advantages: it

  handles almost all of the stateful complexities of using the LLVM API to build IR;
  and it supports moving IR not

  only from Haskell into LLVM C++ objects, but the other direction - from LLVM C++
  into Haskell.'
license-name: BSD3
