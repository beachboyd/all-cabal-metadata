homepage: https://wiki.haskell.org/LLVM
changelog-type: markdown
hash: de80b1effab44a1c6e723bfb1532855fc53549a3f7a7f040f56c40c9c46cbe7f
test-bench-deps: {}
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: Utility functions for the llvm interface
changelog: |
  # Change log for the `llvm-extra` package

  ## 0.8.1

  * `FastMath`: support for simplified arithmetic primitives
    under the assumption of the absence of corner cases.
basic-deps:
  llvm-tf: ! '>=3.1.2 && <3.2'
  unsafe: ! '>=0.0 && <0.1'
  base: ! '>=3 && <5'
  bool8: ! '>=0.0 && <0.1'
  enumset: ! '>=0.0.5 && <0.1'
  utility-ht: ! '>=0.0.11 && <0.1'
  tagged: ! '>=0.7 && <0.9'
  containers: ! '>=0.1 && <0.7'
  non-empty: ! '>=0.2.1 && <0.4'
  tfp: ! '>=1.0 && <1.1'
  transformers: ! '>=0.1.1 && <0.6'
  cpuid: ! '>=0.2.3 && <0.3'
  storable-enum: ! '>=0.0 && <0.1'
  prelude-compat: ! '>=0.0 && <0.0.1'
all-versions:
- '0.1'
- '0.2'
- 0.2.0.1
- 0.2.0.2
- '0.3'
- 0.3.0.1
- 0.4.1
- 0.4.1.1
- 0.4.2
- '0.5'
- '0.6'
- 0.6.0.1
- 0.6.0.2
- '0.7'
- 0.7.0.1
- 0.7.1
- 0.7.2
- 0.7.3
- 0.8.0.1
- 0.8.0.2
- 0.8.0.3
- 0.8.1
- 0.8.2
- 0.8.3
author: Henning Thielemann <haskell@henning-thielemann.de>
latest: 0.8.3
description-type: haddock
description: |-
  The Low-Level Virtual-Machine is a compiler back-end with optimizer.
  You may also call it a high-level portable assembler.
  This package provides various utility functions
  for the Haskell interface to LLVM, for example:

  * arithmetic operations with more general types
  but better type inference than the @llvm@ interface
  in "LLVM.Extra.Arithmetic",

  * a type class for loading and storing sets of values with one command (macro)
  in "LLVM.Extra.Memory",

  * support instance declarations of LLVM classes
  in "LLVM.Extra.Class",

  * handling of termination by a custom monad on top of @CodeGenFunction@
  in "LLVM.Extra.MaybeContinuation"

  * various kinds of loops (while) and condition structures (if-then-else)
  in "LLVM.Extra.Control"

  * more functional loop construction using "LLVM.Extra.Iterator"

  * complex Haskell values mapped to LLVM values in "LLVM.Extra.Multi.Value"

  * automatic adaption to target specific extensions,
  currently used for access of vector operations
  that are specific to an SSE level on x86 processors
  in "LLVM.Extra.Extension"
  (On x86 architectures we depend on the cpuid package
  that is needed for automatic detection of available features.)

  * advanced vector operations
  such as sum of all vector elements, cumulative sum,
  floor, non-negative fraction, absolute value
  in "LLVM.Extra.Vector"

  * type classes for handling scalar and vector operations
  in a uniform way
  in "LLVM.Extra.ScalarOrVector"

  * a Makefile and a description
  of how to run LLVM code from within GHCi.
license-name: BSD-3-Clause
