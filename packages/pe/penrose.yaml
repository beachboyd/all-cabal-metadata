homepage: http://penrose.ink
changelog-type: markdown
hash: bb0e8f146561692a921165ddf68e3082f914a13bf312c868aac9b9a1d23755f6
test-bench-deps:
  bytestring: -any
  tasty-smallcheck: -any
  extra: -any
  split: -any
  base: -any
  parser-combinators: -any
  multimap: -any
  ad: -any
  text: -any
  uuid: -any
  megaparsec: -any
  docopt: -any
  process: -any
  network: -any
  websockets: -any
  array: -any
  random-shuffle: -any
  containers: -any
  ansi-terminal: -any
  pretty-terminal: -any
  old-time: -any
  hslogger: -any
  tasty-quickcheck: -any
  mtl: -any
  tasty-hunit: -any
  pretty-show: -any
  random: -any
  tasty: -any
  hmatrix: -any
  scotty: -any
  http-types: -any
  pretty: -any
  aeson: -any
  directory: -any
maintainer: penrose.team@gmail.com
synopsis: Create beautiful diagrams just by typing mathematical notation in plain
  text.
changelog: |
  # Revision history for penrose

  ## 0.1.0.0  -- YYYY-mm-dd

  * First version. Released on an unsuspecting world.
basic-deps:
  bytestring: -any
  extra: -any
  split: -any
  base: ! '>=4.12 && <5'
  parser-combinators: -any
  multimap: -any
  ad: -any
  unordered-containers: -any
  text: -any
  uuid: -any
  penrose: -any
  megaparsec: -any
  docopt: -any
  process: -any
  network: -any
  websockets: -any
  array: -any
  random-shuffle: -any
  containers: -any
  ansi-terminal: -any
  pretty-terminal: -any
  old-time: -any
  hslogger: -any
  mtl: -any
  pretty-show: -any
  random: -any
  hmatrix: -any
  scotty: -any
  http-types: -any
  pretty: -any
  aeson: -any
  directory: -any
all-versions:
- 0.1.1.0
- 0.1.1.1
author: team-penrose
latest: 0.1.1.1
description-type: markdown
description: "# Penrose [![CircleCI](https://circleci.com/gh/penrose/penrose/tree/master.svg?style=svg)](https://circleci.com/gh/penrose/penrose/tree/master)\n\n**Penrose
  is an early-stage system that is still in development.** Our system is not ready
  for contributions or public use yet, but hopefully will be soon. Send us an email
  if you're interested in collaborating.\n\n* See [the site](http://www.penrose.ink/)
  for more information and examples. \n* See the [wiki](https://github.com/penrose/penrose/wiki)
  for more system-specific information on building, running, testing, and debugging
  the system. \n* For even more documentation, see Nimo Ni's [README](https://github.com/wodeni/notes-public/blob/master/penrose/archive/ramp-down.md).\n\n###
  Example\n\nHere's a simple Penrose visualization in the domain of set theory.\n\n<img
  src=\"https://i.imgur.com/3JHZeaX.png\" width=300>\n\nIt's specified by the following
  Substance and Style programs.\n\n- `tree.sub`\n    ```\n    Set A\n    Set B\n    Set
  C\n    Set D\n    Set E\n    Set F\n    Set G\n    Subset B A\n    Subset C A \n
  \   Subset D B\n    Subset E B\n    Subset F C\n    Subset G C\n    NoIntersect
  E D\n    NoIntersect F G\n    NoIntersect B C\n    ```\n- `venn.sty`\n    ```\n
  \   Set x {\n        shape = Circle { }\n        constraint contains(x, x.label)\n
  \   }\n\n    Intersect x y {\n        constraint overlapping(x, y)\n        constraint
  outsideOf(y.label, x)\n        constraint outsideOf(x.label, y)\n    }\n\n    NoIntersect
  x y {\n        constraint nonOverlapping(x, y)\n    }\n\n    Subset x y {\n        constraint
  contains(y, x)\n        constraint smallerThan(x, y)\n        constraint outsideOf(y.label,
  x)\n    }\n\n    NoSubset x y {\n        objective repel(x, y)\n        constraint
  outsideOf(x, y)\n        constraint outsideOf(y.label, x)\n        constraint outsideOf(x.label,
  y)\n        constraint nonOverlapping(x, y)\n    }\n    ```\n\nHere's how the optimization
  looks live in the UI. \n\n<img src=\"https://github.com/penrose/penrose/blob/master/assets/penrose_readme.gif?raw=true\"
  width=500>\n"
license-name: MIT
