homepage: https://github.com/Boarders/perfect-vector-shuffle
changelog-type: markdown
hash: e05f719d3eb7eb680d6b94af59a3771e4ea6f9aa4e3cfb30e3048c2ac9520ee3
test-bench-deps:
  base: ! '>=4.9 && <4.15'
  perfect-vector-shuffle: ^>=0.1.1.1
  quickcheck-instances: ! '>=0.3.19 && <0.4'
  tasty-quickcheck: ^>=0.10
  random: ! '>=1.1 && <1.2'
  tasty: ! '>=1.2 && <1.3'
  QuickCheck: ! '>=2.13 && <2.15'
  vector: ! '>=0.12.0 && <0.13'
maintainer: callan.mcgill@gmail.com
synopsis: Library for performing vector shuffles
changelog: |
  Changelog
  ==========

  ## [0.1.1] - 2019-07-18

  * Added sample without replacement, maximal cycle and derangement functions
  * Added test coverage for all new functionality
  * Added example executable

  ## [0.1.0] - 2019-05-02

  * Added Fisher--Yates shuffle algorithms
  * Added test suite
basic-deps:
  MonadRandom: ! '>=0.5.1.1 && <0.6'
  base: ! '>=4.9 && <4.15'
  perfect-vector-shuffle: ^>=0.1.1.1
  random: ==1.1.*
  primitive: ! '>=0.6.4 && <0.8'
  vector: ! '>=0.12.0 && <0.13'
all-versions:
- 0.1.0
- 0.1.1
- 0.1.1.1
author: Callan McGill
latest: 0.1.1.1
description-type: haddock
description: |2-

  This package contains functions for performing in-place Fisher--Yates
  shuffles on mutable and immutable vectors along with some related
  functionality. The shuffles are uniform at random amongst all
  permuations.

  For an example of how to use it:

  @
  module Main where

  import Data.Vector
  import Immutable.Shuffle

  main :: IO ()
  main = do {
  shuffleMyVector >>= print;
  cycleMyVector   >>= print;
  derangeMyVector >>= print;
  }

  myVector :: Vector Int
  myVector = fromList [1..10]

  shuffleMyVector :: IO (Vector Int)
  shuffleMyVector = shuffleM myVector

  cycleMyVector :: IO (Vector Int)
  cycleMyVector = maximalCycleM myVector

  derangeMyVector :: IO (Vector Int)
  derangeMyVector = derangementM myVector
  @

  This gives the following:

  @
  >>> main
  [2,8,1,5,10,9,7,3,6,4]
  [6,8,4,10,9,2,5,7,3,1]
  [8,5,4,1,10,9,3,6,2,7]

  >>> main
  [7,9,3,5,10,6,8,1,2,4]
  [2,4,10,7,8,1,5,9,3,6]
  [4,8,5,2,7,3,9,6,10,1]
  @
license-name: BSD-3-Clause
