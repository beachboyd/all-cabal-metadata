homepage: https://github.com/Boarders/perfect-vector-shuffle
changelog-type: markdown
hash: bd2f5bdf54c377c8db2cd9da979bc474080ea67d277e3c945f1399021d8024bd
test-bench-deps:
  base: ^>=4.12.0.0
  perfect-vector-shuffle: ^>=0.1.0
  quickcheck-instances: ! '>=0.3.19 && <0.4'
  tasty-quickcheck: ^>=0.10
  random: ^>=1.1
  tasty: ! '>=1.2 && <1.3'
  QuickCheck: ^>=2.12.6.1
  vector: ! '>=0.12.0 && <0.13'
maintainer: callan.mcgill@gmail.com
synopsis: Library for performing vector shuffles
changelog: |+
  0.1.0

basic-deps:
  MonadRandom: ! '>=0.5.1.1 && <0.6'
  base: ^>=4.12.0.0
  random: ^>=1.1
  primitive: ! '>=0.6.4.0 && <0.7'
  vector: ! '>=0.12.0 && <0.13'
all-versions:
- 0.1.0
author: Callan McGill
latest: 0.1.0
description-type: haddock
description: |2-

  This package contains functions for performing shuffles on mutable and
  immutable vectors. The shuffles are uniform at random amongst all
  permuations.

  For an example of how to use it:

  @
  module Example where

  import Data.Vector
  import Immutable.Shuffle

  myVector :: Vector Int
  myVector = fromList [1..10]

  shuffleMyVector :: IO (Vector Int)
  shuffleMyVector = shuffleM myVector
  @

  This gives the following:

  @
  > shuffleMyVector
  [1,10,4,7,2,3,5,9,8,6]
  > shuffleMyVector
  [7,4,2,10,9,8,6,5,1,3]
  @
license-name: BSD-3-Clause
