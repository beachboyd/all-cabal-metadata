homepage: https://github.com/choener/DPutils
changelog-type: markdown
hash: ad09634e473d9b023a9a398939e270e220cdec9dcd25c101d5825e3cb2190ea6
test-bench-deps:
  streaming: -any
  bytestring: -any
  tasty-th: ! '>=0.1'
  base: -any
  pipes-bytestring: ! '>=2.0'
  criterion: ! '>=1.1'
  containers: -any
  lens: ! '>=4.0'
  pipes-parse: ! '>=3.0'
  pipes: -any
  tasty-quickcheck: ! '>=0.8'
  mtl: -any
  timeit: ! '>=2.0'
  DPutils: -any
  tasty: ! '>=0.11'
  QuickCheck: -any
  streaming-bytestring: -any
  vector: -any
maintainer: choener@bioinf.uni-leipzig.de
synopsis: utilities for DP
changelog: ! "0.0.2.0\n-------\n\n- Data.ByteString.Streaming.Split with generic splitting
  operations for the\n  bytestring-streaming library\n\n0.0.1.0\n-------\n\n- Pipes.Split.ByteString
  splits a bytestring based on a given pattern (example\n  usage in tests/properties.hs)\n\n0.0.0.2\n-------\n\n-
  Math.TriangularNumbers collects functions for triangular numbers and indexing\n-
  Data.Paired.Foldable for upper triangular pairings [work in progress]\n- renamed
  modules into new Paired hierarchy\n- helper functions for parallelisation within
  a pipes pipe\n\n0.0.0.1\n-------\n\n- initial checkin\n- upper triangular and rectangular
  combinations\n\n"
basic-deps:
  streaming: ! '>=0.1'
  bytestring: -any
  base: ! '>=4.7 && <5.0'
  kan-extensions: ! '>=4.0'
  stringsearch: ! '>=0.3'
  containers: -any
  pipes: ! '>=4.0'
  attoparsec: ! '>=0.13'
  transformers: ! '>=0.5'
  parallel: ! '>=3.0'
  QuickCheck: ! '>=2.7'
  streaming-bytestring: ! '>=0.1'
  vector: ! '>=0.10'
all-versions:
- 0.0.0.2
- 0.0.1.0
- 0.0.2.0
author: Christian Hoener zu Siederdissen, 2016-2018
latest: 0.0.2.0
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/choener/DPutils.svg?branch=master)](https://travis-ci.org/choener/DPutils)\n\n#
  DPutils\n\nSmall set of utility functions. Currently centered around dynamic programming.\n\n*Math.TriangularNumbers*
  provides indexing into upper triangular tables. With\nback and forth between the
  index pair and the linear index.\n\n*Data.Paired.Vector* provided rectangular and
  upper-triangular pairing of\nelements from a vector.\n\n*Data.Paired.Foldable* is
  a more powerful generalization of such pairing for\nany foldable container. We try
  to only retain elements that will be needed for\nthe pairing, while others are being
  filtered out.\n\n*Pipes.Parallel* provides some simple tools for parallelisation
  of tasks with\nthe pipes eco-system.\n\n#### Contact\n\nChristian Hoener zu Siederdissen
  \ \nLeipzig University, Leipzig, Germany  \nchoener@bioinf.uni-leipzig.de  \nhttp://www.bioinf.uni-leipzig.de/~choener/
  \ \n\n"
license-name: BSD-3-Clause
