homepage: ''
changelog-type: ''
hash: 14c0355c0d19dcdf7722860529c61793c8b056a459f4c48a3869a354e3db7676
test-bench-deps:
  base: ! '>=4.9.0.0 && <4.10'
  hspec: ! '>=2.2.3 && <2.3'
  smallcheck: ! '>=1.1.1 && <1.2'
  lens: ==4.14.*
  should-not-typecheck: ! '>=2.1.0 && <2.2'
  mtl: ! '>=2.2.1 && <2.3'
  ruin: ! '>=0.1.0.1 && <0.2'
  optparse-applicative: ! '>=0.12.1.0 && <0.13'
  template-haskell: ! '>=2.11.0.0 && <2.12'
maintainer: nicolas.frisby@gmail.com
synopsis: Pliable records
changelog: ''
basic-deps:
  cereal: ! '>=0.5.2.0 && <0.6'
  base: ! '>=4.9 && <=5'
  unordered-containers: ! '>=0.2.7.1 && <0.3'
  parsec: ! '>=3.1.11 && <3.2'
  binary: ! '>=0.8.3.0 && <0.9'
  ghc-prim: ! '>=0.5.0.0 && <0.6'
  deepseq: ! '>=1.4.2.0 && <1.5'
  template-haskell: ! '>=2.11.0.0 && <2.12'
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Nicolas Frisby
latest: 0.1.0.1
description-type: haddock
description: ! '@ruin@ is a DSL for working with record types. It focuses on

  converting between conventionally-declared record types and

  supporting named function arguments.


  * Uses @-XOverloadedLabels@, so that @#x@ is a first-class label for

  the field named @x@.

  * Provides @GHC.Generics@ defaults.

  * Named arguments: @\\[rna|x y z] -> (x,y,z)@ inhabits @("x" :\@ a,"y"

  :\@ b,"z" :\@ c) -> (a,b,c)@.

  * Relies on @-XDuplicateRecordFields@; the generic defaults only

  work if record selector names do not have distinguishing prefices.

  * Custom type errors, such as @ruin: Could not find the field \`x\''

  in the type ...@

  * "Data.Ruin.R" provides anonymous record types where the order of

  fields is irrelevant.


  See the "Data.Ruin" module for an overview.'
license-name: BSD-3-Clause
