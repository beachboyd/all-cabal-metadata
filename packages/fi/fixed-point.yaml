homepage: ''
changelog-type: ''
hash: 1eee3899188be4c8cc5bfe2d3c3ec96f41a6774bf5627882488e45e27be409bf
test-bench-deps: {}
maintainer: Jake McArthur <Jake.McArthur@gmail.com>
synopsis: Binary fixed-point arithmetic
changelog: ''
basic-deps:
  base: ==4.3.* || ==4.4.*
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.5.0.0
- 0.5.0.1
author: Jake McArthur
latest: 0.5.0.1
description-type: haddock
description: ! 'This package defines a type for binary

  fixed-precision arithmetic. The main differences

  between this and Data.Fixed are that this is

  binary fixed-point and it''s polymorphic in the

  underlying representation.

  When is this more appropriate than floating

  point? You''ll mainly want to use this when you

  need to be able to represent fractional values

  within a bounded range. Fixed-point numbers have

  the advantage of uniformity in these cases. On

  the downside, you lose precision relative to

  floating point numbers as you approach zero, and

  you lose the ability to express very large (but

  imprecise) values that floating point can

  express. On some architectures, fixed-point

  arithmetic might be faster than floating-point

  arithmetic, but this is probably not the case on

  x86.'
license-name: MIT
