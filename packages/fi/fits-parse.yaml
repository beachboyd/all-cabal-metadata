homepage: https://github.com/krakrjak/fits-parse#readme
changelog-type: ''
hash: 63bec3dc2f0eebd50aa41771ca6536bdcf6ca7d6da79ef00759e73f56cef8736
test-bench-deps: {}
maintainer: krakrjak@gmail.com
synopsis: Parse FITS files
changelog: ''
basic-deps:
  text-latin1: ! '>=0.3.1 && <0.4'
  JuicyPixels: ! '>=3.3.3 && <3.4'
  bytestring: ! '>=0.10.8.2 && <0.11'
  base: ! '>=4.7 && <5'
  parser-combinators: ! '>=1.0.1 && <1.1'
  text: ! '>=1.2.3.1 && <1.3'
  megaparsec: ! '>=7.0.4 && <7.1'
  data-default: ! '>=0.7.1.1 && <0.8'
  fast-logger: ! '>=2.4.13 && <2.5'
  binary: ! '>=0.8.6.0 && <0.9'
  statistics: ! '>=0.15.0.0 && <0.16'
  fits-parse: -any
  optparse-applicative: ! '>=0.14.3.0 && <0.15'
  vector: ! '>=0.12.0.2 && <0.13'
all-versions:
- 0.0.1
author: Zac Slade
latest: 0.0.1
description-type: markdown
description: |+
  [![Build Status](https://travis-ci.com/krakrjak/fits-parse.svg?branch=master)](https://travis-ci.com/krakrjak/fits-parse)
  [![Documentation Status](https://readthedocs.org/projects/fits-parse/badge/?version=latest)](https://fits-parse.readthedocs.io/en/latest/?badge=latest)

  # fits-parse

  FITS - Flexible Image Transport System

  This project focuses on building a Haskell native parser for FITS files. This file format is used widely by Astronomers and those analyzing astronomical data. There is currently a C library called `fitsio` and a Haskell wrapper for the library. However, this library can be cumbersome to use and the Haskell bindings are very thin and close to the metal of the `fitsio` library. This project focuses on providing good Haskell bindings and datatypes by implementing the FITS spec directly in Haskell, without the need for a C library. The reference for this work comes from NASA in the US. Conformance is currently limited to the Version 4.0 specification with no extensions. See [the NASA site](https://fits.gsfc.nasa.gov/fits_standard.html) for more details and to download the spec.

  # Reading Documentation

  The [readthedocs](https://fits-parse.readthedocs.org) pages contain documentation for the *examples*.
  The [API Haddock](https://krakrjak.github.io/fits-parse/index.html) docs for the *master* branch are
  on github.io, release documentation will be on [Hackage](https://hackage.haskell.org/package/fits-parse).

  You can build the Haddocks for offline use with `stack build --haddock`.

  # RTD Building

  To build the [readthedocs](https://fits-parse.readthedocs.org) docs you need `sphinx`. To install it
  locally for a single user use `pip` with the `--user` option to install `sphinx` and `sphinx-rtd-theme`.
  Alternatively, on Ubuntu you can install the `python3-sphinx` and `python3-sphinx-rtd-theme` package.


license-name: BSD-2-Clause
