homepage: https://github.com/emilypi/base32
changelog-type: markdown
hash: 5869f48509a431b24a5769cfd3fa7f31ac1ef6de928f8385ba5cab3f4fd1b3a6
test-bench-deps:
  bytestring: -any
  base: '>=4.10 && <5'
  text: -any
  criterion: -any
  memory: -any
  random-bytestring: -any
  base32: -any
  tasty-hunit: -any
  tasty: -any
  deepseq: -any
maintainer: emilypi@cohomolo.gy
synopsis: RFC 4648-compliant Base32 encodings/decodings
changelog: |
  # Revision history for base32

  ## 0.1.1.1 -- 2020-02-16

  * Documentation now references correct RFC section

  ## 0.1.1 -- 2020-02-16

  * Textual interface now uses correct unpadded version

  ## 0.1.0.0 -- 2020-02-16

  * First version. Released on an unsuspecting world.
basic-deps:
  bytestring: ^>=0.10
  base: '>=4.10 && <5'
  text: ^>=1.2
all-versions:
- 0.1.0.0
- 0.1.1
- 0.1.1.1
- 0.1.1.2
author: Emily Pillmore
latest: 0.1.1.2
description-type: markdown
description: |
  # Base32

  [![Build Status](https://travis-ci.com/emilypi/base32.svg?branch=master)](https://travis-ci.com/emilypi/base32)
  [![Hackage](https://img.shields.io/hackage/v/base32.svg)](https://hackage.haskell.org/package/base32)

  Padded and unpadded base32 and base32hex encoding and decoding for `Text` and `ByteString` values.

  For the companion optics and pattern synonyms, see [base32-lens](https://hackage.haskell.org/package/base32-lens).


  ### Summary

  What does this library provide? Here is the summary:

  - Support for padded and unpadded Base32 and Base32hex
  - Support for `Text` encodings and decodings
  - Optics for handling more complex structures with Base32 representations via the `base32-lens` package
  - Checks for both valid Base32 and correct Base32 and Base32hex encodings

  There are no dependencies aside from those bundled with GHC:

  ![base32 dependencies](https://i.imgur.com/8CdVsey.png)
license-name: BSD-3-Clause
