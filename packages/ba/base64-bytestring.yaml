homepage: https://github.com/haskell/base64-bytestring
changelog-type: markdown
hash: f4f998235fc0825ab636ca9241b827de5805b336625eb1c7822f1798a238b6ac
test-bench-deps:
  test-framework-hunit: -any
  bytestring: -any
  test-framework: -any
  base: -any
  base64-bytestring: -any
  test-framework-quickcheck2: -any
  criterion: -any
  HUnit: -any
  deepseq: '>=1.1'
  QuickCheck: -any
maintainer: |-
  Herbert Valerio Riedel <hvr@gnu.org>,
  Mikhail Glushenkov <mikhail.glushenkov@gmail.com>,
  Emily Pillmore <emilypi@cohomolo.gy>
synopsis: Fast base64 encoding and decoding for ByteStrings
changelog: "See also http://pvp.haskell.org/faq\n\n# 1.2.0.1\n\n* Package update:
  support for `bytestring >=0.11`\n \n# 1.2.0.0\n\n* Security fix: reject non-canonical
  base64 encoded values - ([#38](https://github.com/haskell/base64-bytestring/pull/38))
  fixing issue [#24](https://github.com/haskell/base64-bytestring/issues/24).\n\n*
  Security fix: reject bytestrings with improper padding that can be \"completed\"
  by the unpadded-Base64url workflow, and homogenize error messages ([#33](https://github.com/haskell/base64-bytestring/pull/33))\n\n*
  Test coverage expanded to 98% of the library. All critical paths covered.\n\n\n#
  1.1.0.0\n\n* `joinWith` has been removed ([#32](https://github.com/haskell/base64-bytestring/pull/32))\n*
  Bugfix: `decode` formerly allowed for padding chars to be interspersed in a valid
  base64-encoded string. This is now not the case, and it is fully spec-compliant
  as of [#31](https://github.com/haskell/base64-bytestring/pull/31)\n* The default
  behavior for Base64url `decode` is now to support arbitrary padding. If you need
  strict padded or unpadded decode semantics, use `decodePadded` or `decodeUnpadded`.\n*
  Added strict unpadded and padded decode functions for Base64url ([#30](https://github.com/haskell/base64-bytestring/pull/30))\n*
  Added unpadded encode for Base64url\n  ([#26](https://github.com/haskell/base64-bytestring/pull/26)).\n\n----\n\n###
  1.0.0.3\n\n* Made performance more robust\n  ([#27](https://github.com/haskell/base64-bytestring/pull/27)).\n*
  Improved documentation\n  ([#23](https://github.com/haskell/base64-bytestring/pull/23)).\n*
  Improved the performance of decodeLenient a bit\n  ([#21](https://github.com/haskell/base64-bytestring/pull/21)).\n\n###
  1.0.0.2\n\n* Fixed a write past allocated memory in joinWith (potential security\n
  \ issue).\n\n## 0.1.1.0 - 1.0.0.1\n\n* Changelog not recorded for these versions.\n\n###
  0.1.0.3\n\n*  Fixed: wrong encoding table on big-endian systems.\n*  Fixed: too
  big indices in encoding table construction.\n\n### 0.1.0.2\n\n*  Changelog not recorded
  up to this version.\n"
basic-deps:
  bytestring: '>=0.9 && <0.12'
  base: '>=4 && <5'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.1.0
- 0.1.1.1
- 0.1.1.3
- 0.1.2.0
- 1.0.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.0.3
- 1.1.0.0
- 1.2.0.0
- 1.2.0.1
author: Bryan O'Sullivan <bos@serpentine.com>
latest: 1.2.0.1
description-type: markdown
description: |
  # Base64 Support for ByteStrings [![Hackage version](https://img.shields.io/hackage/v/base64-bytestring.svg?label=Hackage)](https://hackage.haskell.org/package/base64-bytestring) [![Stackage version](https://www.stackage.org/package/base64-bytestring/badge/lts?label=Stackage)](https://www.stackage.org/package/base64-bytestring) [![Build Status](https://secure.travis-ci.org/haskell/base64-bytestring.svg?branch=master)](http://travis-ci.org/haskell/base64-bytestring)

  This package provides a Haskell library for working with base64-encoded
  data quickly and efficiently, using the `ByteString` type.

  # Get involved!

  Please report bugs via the
  [GitHub issue tracker](https://github.com/haskell/base64-bytestring).

  Master [Git repository](https://github.com/haskell/base64-bytestring):

  * `git clone git://github.com/haskell/base64-bytestring.git`


  # Authors

  This library is written by [Bryan O'Sullivan](mailto:bos@serpentine.com). It
  is maintained by [Herbert Valerio Riedel](mailto:hvr@gnu.org), [Mikhail
  Glushenkov](mailto:mikhail.glushenkov@gmail.com), and [Emily Pillmore](mailto:emilypi@cohomolo.gy).
license-name: BSD-3-Clause
