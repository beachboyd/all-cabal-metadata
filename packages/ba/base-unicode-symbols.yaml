homepage: http://haskell.org/haskellwiki/Unicode-symbols
changelog-type: ''
hash: 62577079cd08b31ee8e6808c5db2c969ad9a66ba272adc2b39571938686fdf3b
test-bench-deps: {}
maintainer: Roel van Dijk <vandijk.roel@gmail.com>
synopsis: Unicode alternatives for common functions and operators
changelog: ''
basic-deps:
  base: ! '>=4.8.0.0 && <5'
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.2.1
- 0.1.3
- 0.1.4
- '0.2'
- 0.2.1
- 0.2.1.1
- 0.2.1.2
- 0.2.1.3
- 0.2.1.4
- 0.2.1.5
- 0.2.2
- 0.2.2.1
- 0.2.2.2
- 0.2.2.3
- 0.2.2.4
- 0.2.3
author: Roel van Dijk <vandijk.roel@gmail.com>
latest: 0.2.3
description-type: markdown
description: ! 'This package defines Unicode symbol aliases for a number of functions
  and

  operators in the `base` package of the Haskell standard library.

  Many of these aliases enable the use of standard mathematical notation in place
  of ASCII approximations or textual names.

  For example, `(∧)` (U+2227 LOGICAL AND) can be used in place of `(&&)` for boolean
  AND.


  All symbols are documented with their actual definition and their Unicode code point.
  They should be

  completely interchangeable with their definitions.


  # Versus the `UnicodeSyntax` language extension


  This library only provides Unicode aliases for *library* functions.

  If you want to use Unicode symbols for core language tokens, also enable the

  [`UnicodeSyntax`](http://www.haskell.org/ghc/docs/latest/html/users_guide/syntax-extns.html#unicode-syntax)

  language extension. This extension enables Unicode characters to be

  used to stand for certain ASCII character sequences, i.e. `→` instead of

  `->`, `∀` instead of `forall` and many others.


  # Credits


  Original idea by Péter Diviánszky.

'
license-name: BSD-3-Clause
