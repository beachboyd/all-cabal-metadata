homepage: ''
changelog-type: markdown
hash: 40afd56bea207f8abf15143be8993138f9af81426e6188eb5c7e13b7f7520d1d
test-bench-deps: {}
maintainer: hvr@gnu.org
synopsis: Semantic CPP feature macros for base
changelog: ! '# Revision history for base-feature-macros


  ## 0.1.0.1


  * Fix `HAVE_SEMIGROUP_IN_BASE` (#2)

  * Add protection against transitive leakage


  ## 0.1


  * First release

'
basic-deps:
  base: ! '>=4.3 && <4.11'
all-versions:
- '0.1'
- 0.1.0.1
author: Herbert Valerio Riedel
latest: 0.1.0.1
description-type: haddock
description: ! 'This provides a set of feature macros describing features of @base@
  in a semantic way.


  See \<</package/base-feature-macros/src/base-feature-macros.h base-feature-macros.h>\>
  for the set of currently provided macros.


  In order to use the CPP header provided by this package, add this package as a dependency
  to your @.cabal@ file, i.e.


  > build-depends: base-feature-macros: >= 0.1 && < 0.2


  while making sure that the version specified as lower bound defines the feature-macros
  your code tests for. This is particularly important as CPP will implicitly treat
  undefined CPP macros as having the value @0@. See also GNU CPP/CC''s @-Wundef@ warning
  to detect such errors;

  or starting with GHC 8.2, <https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html#ghc-flag--Wcpp-undef
  -Wcpp-undef> can be used:


  > if impl(ghc >= 8.2)

  >     ghc-options: -Wcpp-undef


  Then in your code, you can include and use the @\<base-feature-macros.h\>@ header
  like so


  > module M where

  >

  > #include <base-feature-macros.h>

  >

  > #if !HAVE_FOLDABLE_TRAVERSABLE_IN_PRELUDE

  > import Data.Foldable (Foldable (..))

  > import Prelude       hiding (foldr, foldr1)

  > #endif

  > #if !HAVE_MONOID_IN_PRELUDE

  > import Data.Monoid hiding ((<>))

  > #endif


  This package is inspired by the blogpost

  <https://github.com/quchen/articles/blob/master/haskell-cpp-compatibility.md "Make
  macros mean something â€“ readable backwards compatibility with CPP">.'
license-name: BSD-3-Clause
