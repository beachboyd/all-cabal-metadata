homepage: https://github.com/emilypi/base64
changelog-type: markdown
hash: 49928f5691e41e09f12ab22e4de2d2fb2ab05eef64bee613b6379d74a8da8658
test-bench-deps:
  bytestring: -any
  base: ! '>=4.10 && <5'
  base64-bytestring: -any
  text: -any
  criterion: -any
  memory: -any
  random-bytestring: -any
  base64: -any
  tasty-hunit: -any
  tasty: -any
  deepseq: -any
maintainer: emilypi@cohomolo.gy
synopsis: RFC 4648-compliant padded and unpadded base64 and base64url encodings
changelog: |
  # Revision history for base64

  ## 0.3.1.1 -- 2020-01-15

  * Make sure benchmark code builds

  ## 0.3.1.0 -- 2020-01-08

  * Bug fix for `isBase64` and `isBase64Url` - wrong alphabet was used
  * Added `isValidBase64` and `isValidBase64Url` for alphabet conformity. The `isBase64*` functions now tell if it's *correct* base64 now in the sense that it's decodable and valid.
  * Dropped Cabal version to 2.0 for backcompat with Stack
  * Better documentation

  ## 0.3.0.0 -- 2020-01-07

  * After a discussion with lexilambda, we're making 'encodeBase64' be `ByteString -> Text` by default, offering `ByteString -> ByteString` as
    a secondary format.
  * Add `decodeBase64Lenient` to the API for phadej
  * Fix unpadded decoding bug where garbage was appended to the end of garbage inputs. A cleaner way to do this is to simply encode as Base64 with
    padding and then strip padding chars until I come up with a workflow specific to unpadded inputs (I used to have this, so I'll have to dig it up)
  * Added `isBase64` and `isBase64Url` to the API
  * Performance is stable

  ## 0.2.0.0 -- 2020-01-05

  * After a discussion with phadej, we're doing away with the flags, and splitting the optics out into their own separate library
  * Removed unnecessary inline pragmas

  ## 0.1.0.0 -- 2020-01-05

  * Do away with the typeclasses, and just provide prisms + synonyms
  * Continued performance improvements to decoding
  * Corrected benchmarks

  ## 0.0.1.0 -- 2020-01-03

  * First version. Released on an unsuspecting world.
  * Preliminary release
basic-deps:
  bytestring: ^>=0.10
  base: ! '>=4.10 && <5'
  text: ^>=1.2
  deepseq: ^>=1.4
all-versions:
- 0.0.1.0
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
- 0.3.1.1
author: Emily Pillmore
latest: 0.3.1.1
description-type: markdown
description: |
  # Base64

  [![Build Status](https://travis-ci.com/emilypi/base64.svg?branch=master)](https://travis-ci.com/emilypi/base64)
  [![Hackage](https://img.shields.io/hackage/v/base64.svg)](https://hackage.haskell.org/package/base64)

  Padded and unpadded base64 and base64url encoding and decoding for `Text` and `ByteString` values.

  For the companion optics and pattern synonyms, see [base64-lens](https://hackage.haskell.org/package/base64-lens).


  ### Summary

  What does this library provide? Here is the summary:

  - Good performance compared to existing Base64 libraries (see [PERFORMANCE.md](benchmarks/PERFORMANCE.md))
  - Support for padded and unpadded Base64 and Base64url
  - Support for `Text` encodings and decodings
  - Optics for handling more complex structures with Base64 representations via the `base64-lens` package
  - Checks for both valid Base64 and correct Base64 and Base64url encodings

  There are no dependencies aside from those bundled with GHC:

  ![base64 dependencies](https://i.imgur.com/qynI5HM.png)

  ### Motivation

  Haskell has two main libraries for Base64: `memory`, and `base64-bytestring`.

  Of these, `memory` is geared towards integration with other memory primitives in the library, without much of an eye towards performance, while `base64-bytestring` is built to exclusively address `ByteString` encoding and decoding, and is very performant. Many great strides have been made in the realm of Base64 performance and vectorization just in the past 5 years, which this library attempts to capture. Additionally, we attempt to fix perceived shortcomings with both APIs in the support of unpadded Base64 and Base64-url support (which `memory` provides, but not `base64-bytestring`), as well as supporting `Text` values (neither libraries provide).
license-name: BSD-3-Clause
