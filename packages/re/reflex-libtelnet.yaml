homepage: https://git.sr.ht/~jack/reflex-libtelnet
changelog-type: markdown
hash: 46e1de8d7da4e924d7cf3e7aa0ae05000db7012deba773cf65a4be7f6f4752e1
test-bench-deps: {}
maintainer: jack@jackkelly.name
synopsis: Reflex bindings for libtelnet
changelog: |
  # Revision history for reflex-libtelnet

  ## 0.1.0.0 -- 2019-12-03

  * First version. Released on an unsuspecting world.
basic-deps:
  bytestring: ! '>=0.10.8.2 && <0.11'
  dependent-sum: ! '>=0.6.2.0 && <=0.7'
  dependent-sum-template: ! '>=0.1 && <0.2'
  base: ! '>=4.11 && <4.13'
  dependent-map: ! '>=0.3 && <0.4'
  data-default: ! '>=0.7.1.1 && <0.8'
  lens: ! '>=4.16.1 && <4.18'
  libtelnet: ! '>=0.1 && <0.2'
  reflex: ! '>=0.5 && <0.7'
all-versions:
- 0.1.0.0
author: Jack Kelly
latest: 0.1.0.0
description-type: markdown
description: |
  # Reflex Bindings to libtelnet

  This is a [reflex](https://reflex-frp.org/) wrapper around
  [libtelnet](https://git.sr.ht/~jack/libtelnet-haskell), which lets you
  describe data flows through the telnet state tracker using reflex
  `Event`s.

  This library thinly wraps the libtelnet functions, so you should read
  [the libtelnet
  documentation](http://hackage.haskell.org/package/libtelnet) alongside
  the haddocks for this package.

  ## Quick Start

  1. Assemble a `config :: TelnetConfig t`, which holds the event
     streams that feed into a telnet state tracker. The easiest way to
     do this is to call `def` (there is an `instance Reflex t => Default
     (TelnetConfig t)`) and overwrite the fields you care about using
     record updates or lenses. You will almost certainly want to
     overwrite `_cRecv` to be the stream of incoming data from a socket,
     and `_cSend` to be the stream of outgoing data from your application.

  2. Call `telnet config`, and save the resulting `TelnetEvents t`. This
     structure holds the output event streams from a single telnet state
     tracker.

  3. Wire the ouput events into your application.

  ## Other Resources

  * A [telnet echo
    server](https://git.sr.ht/~jack/reflex-libtelnet/tree/master/reflex-libtelnet-example/src/Main.hs)
    exists in the [`reflex-libtelnet`
    repo](https://git.sr.ht/~jack/reflex-libtelnet), outside this
    package. It is packaged separately so that it can be licensed more
    permissively, and to minimise `reflex-libtelnet`'s dependency
    footprint.

  * Questions should go to the
    [reflex-libtelnet-discuss](https://lists.sr.ht/~jack/reflex-libtelnet-discuss)
    mailing list.

  * Bug reports should go to the
    [bug tracker](https://todo.sr.ht/~jack/reflex-libtelnet).
license-name: GPL-3.0-or-later
