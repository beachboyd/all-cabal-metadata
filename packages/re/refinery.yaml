homepage: https://github.com/totbwf/refinery#readme
changelog-type: markdown
hash: 5ec9588de8f9752b2a947a87ca6a5a0156150ed7b0197975730c007c4549e7fb
test-bench-deps:
  exceptions: '>=0.10'
  logict: '>=0.6'
  checkers: -any
  base: '>=4.7 && <5'
  hspec: -any
  mtl: '>=2'
  mmorph: '>=1'
  refinery: -any
  QuickCheck: -any
maintainer: reedmullanix@gmail.com
synopsis: Toolkit for building proof automation systems
changelog: |-
  # Changelog for refinery


  * 0.1.0.0
    Initial Release of the library

  ## Unreleased changes

  * 0.2.0.0
    Added Alternative/MonadPlus instances to ProofStateT, TacticT, RuleT
basic-deps:
  exceptions: '>=0.10'
  logict: '>=0.6'
  base: '>=4.7 && <5'
  mtl: '>=2'
  mmorph: '>=1'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
author: Reed Mullanix
latest: 0.3.0.0
description-type: markdown
description: |
  # refinery

  `refinery` is a toolkit for building proof refinement/proof automation systems, based roughly on the [
  Algebraic Foundations of Proof Refinement](https://arxiv.org/abs/1703.05215).

  ## Overview
  The main datatype of the library is `TacticT goal extract m a`, which is a monad transformer that behaves as a tactic.
  When creating your domain-specific tactics, you should use `RuleT` and `rule` to implement them.
license-name: BSD-3-Clause
