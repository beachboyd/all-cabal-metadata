homepage: https://github.com/ndmitchell/record-hasfield#readme
changelog-type: text
hash: c7f39b8d3f9299c7361e115e97f3474274b3487233cb155c58eb0bec7625afcb
test-bench-deps:
  base: -any
  record-hasfield: -any
maintainer: Neil Mitchell <ndmitchell@gmail.com>
synopsis: A version of GHC.Records as available in future GHCs.
changelog: |
  Changelog for record-hasfield

  1.0, released 2019-03-21
      Initial version
basic-deps:
  base: ! '>=4.4 && <5'
all-versions:
- '1.0'
author: Neil Mitchell <ndmitchell@gmail.com>
latest: '1.0'
description-type: markdown
description: |
  # record-hasfield [![Hackage version](https://img.shields.io/hackage/v/record-hasfield.svg?label=Hackage)](https://hackage.haskell.org/package/record-hasfield) [![Stackage version](https://www.stackage.org/package/record-hasfield/badge/nightly?label=Stackage)](https://www.stackage.org/package/record-hasfield) [![Build status](https://img.shields.io/travis/ndmitchell/record-hasfield/master.svg?label=Build)](https://travis-ci.org/ndmitchell/record-hasfield)

  This package provides a version of "GHC.Records" as it will be after the implementation of
  [GHC proposal #42](https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0042-record-set-field.rst), which reads:

  ```haskell
  -- | Constraint representing the fact that the field @x@ can be get and set on
  --   the record type @r@ and has field type @a@.
  class HasField x r a | x r -> a where
      -- | Function to get and set a field in a record.
      hasField :: r -> (a -> r, a)
  ```

  In GHC these will be magically solved, but this package doesn't provide that. This package does provide extra helper functions for working with the `HasField` type class.
license-name: BSD-3-Clause
