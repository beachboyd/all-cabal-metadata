homepage: https://github.com/ChrisKuklewicz/regex-tdfa
changelog-type: markdown
hash: e1662cba85dcddf80cb942c5914d78e9453faad831b5502e6d5b86e2bbae26f6
test-bench-deps: {}
maintainer: Artyom <yom@artyom.me>, Christopher Kuklewicz <TextRegexLazy@personal.mightyreason.com>
synopsis: Replaces/Enhances Text.Regex
changelog: ! "# 1.2.3\n\n* Added `Semigroup` instances for some types (h/t Herbert
  Valerio Riedel).\n\n# 1.2.2\n\n* New maintainer.\n* Now we don't reexport the problematic
  `Show` instance for functions.\n\n# 1.2.1\n\n* Updated dependency versions.\n\n#
  1.2.0\n\n\"Almost ghc-7.8\" with the array 0.4 changes for `Data.Array.Unsafe`\n\n#
  1.1.8\n\nMake ghc-7.0.2 on platorm 2011.2.0.0.0 happy\n\n# 1.1.7\n\nfix url below\n\n#
  1.1.6\n\nFix bug preventing `[]] [-] [^]] [^-]` (thanks to Maxime Henrion)\n\n#
  1.1.5\n\ntry `needUniqTags` in `POr` in CorePattern.hs, try `toAdvice b` for `PStar
  child`\n\n# 1.1.4\n\nfixed \n\n# 1.1.3\n\nBROKEN after 100 characters the `compressOrbit`
  dies!\n\n# 1.1.2\n\nworked\n\n# 1.1.1\n\nadd gnu escapes\n\n# 1.1.0\n\nNewDFA code
  working\n\n# 1.0.7\n\nmake NewDFA directory and String_NC\n\n# 1.0.6\n\ntry NewDFATest_SBS
  with `uncons`\n\n# 1.0.5\n\nuse `uncons` on SBS\n\n# 1.0.4\n\ntry repaired NewDFATest_SBS\n\n*
  np13: try to improve readability with the `mm` combinator? Yes!\n* np12: expand
  `o` in the case where `t` lookup get `Nothing`? Yes – this is the fix!?\n* np11:
  break multi to not look at `o` and just return `True`? Yes !!!!\n* np10: Peel off
  `CharMap`/`IntMap` and DFA/DT with pattern matching? No\n* np9:  `INLINE` `endOf`?
  No\n* np8:  np6 and `NOINLINE` `endOff`? No\n* np7:  just return `True`? Fast\n*
  np6:  comment out ans check? No\n* np5:  comment out all `Multi0` code? No\n* np4:
  \ comment out all `Single0` and `Single` code? No\n* np3:  `!off` the multi? No\n*
  np2:  comment out all Testing code? No\n\n# 1.0.3\n\ntry to alter `matchTest` to
  not have the `Bool` args? No\n\n# 1.0.2\n\narg, the prof is fast and the normal
  slow!\n\n# 1.0.1\n\nadd NewDFATest.hs\n\n# 0.99.20\n\ngo to many vs single?\n\n#
  0.99.19\n\ntry for pre-comparison of orbit-logs!\n\n# 0.99.18\n\ntry alternate lazy/strict
  strategy in NewDFA. Fix offset laziness.\n\n# 0.99.17\n\nradical removal of flag
  array and adding of `SetVal` to handle groups\n\n# 0.99.16\n\nperformance? up to
  v15\n\n# 0.99.15\n\nget string with NewDFA testing, unit tests and 1000 random regex
  pass\n\n# 0.99.14\n\nstart changing to the new real DFA\n\n# 0.99.13\n\nmore cleanup\n\n#
  0.99.12\n\ntry to debug 0.99.11: fixed `updateWinner`\n\n# 0.99.11\n\nimprove above
  fix and make stuff work better – HAS BUG, along with old TDFA!\n\n# 0.99.10\n\nfixed
  `((.?)*)*` patterns by changing `PStar nullView` when `mayFirstBeNull`\n\n# 0.99.9\n\ntesting
  changing `bestTrans`/`chooseWith`/`choose` to include `enterOrbit`/`newFlags`/`(_,True)`
  info\n\n# 0.99.8\n\ntesting changing `Maximize` to `Minimize` for `Tag`s, decide
  `(a*)*` is canonical problem\n\n# 0.99.7\n\nUse `(PGroup Nothing)` in `Pattern`
  to decompose `PBound`\n\n# 0.99.6\n\nchange to nested `nonEmpty` calls for `PBound`\n\n#
  0.99.5\n\nremove `PNonEmpty` constructor\n\n# 0.99.4\n\ntests `pnonempty' = \\ p
  -> POr [ PEmpty, p ]` instead of `PNonEmpty`\n"
basic-deps:
  bytestring: -any
  base: ! '>=4 && <5'
  parsec: -any
  array: ! '>=0.4'
  containers: -any
  ghc-prim: -any
  regex-base: ! '>=0.93.1'
  mtl: -any
all-versions:
- '0.92'
- '0.94'
- '0.95.1'
- '0.95.2'
- '0.97.1'
- '0.97.3'
- '0.97.4'
- '1.0.0'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.1.4'
- '1.1.6'
- '1.1.7'
- '1.1.8'
- '1.2.0'
- '1.2.1'
- '1.2.2'
- '1.2.3'
author: Christopher Kuklewicz
latest: '1.2.3'
description-type: haddock
description: A new all Haskell "tagged" DFA regex engine, inspired by libtre
license-name: BSD3
