homepage: https://github.com/basvandijk/regions/
changelog-type: ''
hash: 21878a1df50f4fdf7470d9e3f016c1ee03460d1d5f61f51ab5f557b6abe489e8
test-bench-deps: {}
maintainer: Bas van Dijk <v.dijk.bas@gmail.com>
synopsis: ! 'Provides the region monad for safely opening and working with

  scarce resources.'
changelog: ''
basic-deps:
  base-unicode-symbols: ! '>=0.1.1 && <0.3'
  base: ! '>=4 && <4.5'
  monad-control: ! '>=0.2 && <0.3'
  transformers: ! '>=0.2 && <0.3'
all-versions:
- '0.1'
- 0.1.0.1
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- 0.6.0.1
- '0.7'
- 0.7.0.1
- '0.8'
- 0.8.1
- '0.9'
- '0.10'
- '0.11'
author: Bas van Dijk
latest: '0.11'
description-type: markdown
description: ! 'This package provides the region monad transformer. Scarce resources

  like files, memory pointers or USB devices for example can be opened

  in a region. When the region terminates, all opened resources will be

  automatically closed. The main advantage of regions is that the opened

  resources can not be returned from the region which ensures no I/O

  with closed resources is possible.


  The primary technique used in this package is called "Lightweight

  monadic regions" which was [invented][1] by Oleg Kiselyov and

  Chung-chieh Shan.


  Also see the [regions-mtl] and [regions-monadstf] packages which

  provide instances for the classes in the respected monad transformers

  packages.


  For an example on how to use this library see the

  [safer-file-handles], [usb-safe] or [regional-pointers] packages.


  [1]: http://okmij.org/ftp/Haskell/regions.html#light-weight


  [regions-mtl]:        http://hackage.haskell.org/package/regions-mtl

  [regions-monadstf]:   http://hackage.haskell.org/package/regions-monadstf

  [safer-file-handles]: http://hackage.haskell.org/package/safer-file-handles

  [usb-safe]:           http://hackage.haskell.org/package/usb-safe

  [regional-pointers]:  http://hackage.haskell.org/package/regional-pointers

'
license-name: BSD-3-Clause
