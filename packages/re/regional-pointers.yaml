homepage: https://github.com/basvandijk/regional-pointers/
changelog-type: ''
hash: 3c3d695fff4ee5f0a9a1e2ddf191797615c00880f6a4ca1e5b334a09eb0be347
test-bench-deps: {}
maintainer: Bas van Dijk <v.dijk.bas@gmail.com>
synopsis: Regional memory pointers
changelog: ''
basic-deps:
  base-unicode-symbols: ! '>=0.1.1 && <0.3'
  base: ! '>=4 && <4.5'
  regions: ! '>=0.11 && <0.12'
  transformers: ! '>=0.2 && <0.3'
all-versions:
- '0.1'
- 0.1.0.1
- 0.1.0.2
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- 0.6.0.1
- '0.7'
author: Bas van Dijk
latest: '0.7'
description-type: markdown
description: ! 'The library allows you to allocate memory in a region yielding a regional

  pointer to it. When the region terminates all pointers are automatically

  freed. Most importantly, a pointer can''t be returned from the region. So it''s

  impossible to reference unallocated memory.


  The primary technique used in this package is called "Lightweight monadic

  regions" which was [invented][1] by Oleg Kiselyov and Chung-chieh Shan.


  This technique is implemented in the [regions] package which is re-exported from

  this library.


  This library provides wrappers around all the `Ptr` functions from the

  [`Foreign.*`][foreign] modules of the `base` library.


  [1]: http://okmij.org/ftp/Haskell/regions.html#light-weight

  [regions]:  http://hackage.haskell.org/package/regions

  [foreign]: http://hackage.haskell.org/packages/archive/base/latest/doc/html/Foreign.html

'
license-name: BSD-3-Clause
