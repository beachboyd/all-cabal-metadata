homepage: http://haskell.org/haskellwiki/reactive
changelog-type: text
hash: 9a3f5445cf166c2c05523b615263cdcb397907c3edfb77c4158b081844f58e7e
test-bench-deps: {}
maintainer: conal@conal.net
synopsis: Push-pull functional reactive programming
changelog: ! '== Version 0 ==


  === Version 0.8 ===


  === Version 0.8.1 ===


  * Adding QuickCheck tests.


  ''''Fill in missing versions''''



  === Version 0.3 ===


  * Commented out LANGUAGE pragmas and added OPTIONS_GHC -fglasgow-exts for ghc-6.6
  compatibility.


  === Version 0.2 ===


  * Fixed <hask>switcher</hask>.  Didn''t terminate.  Thanks to Ivan Tomac for the
  bug report.


  === Version 0.1 ===


  * Added <hask>Never</hask> constructor for Future.  Allows optimizations, including
  a huge improvement for <hask>(>>=)</hask> on <hask>Event</hask> (which had been
  piling up <hask>never</hask>s).

  * removed <code>-threaded</code> comment

  * added <hask>traceR</hask> (reactive value tracing)

  * use idler in <code>src/Examples.hs</code> (for single-threaded use of wxHaskell)


  === Version 0.0 ===


  * New project.

'
basic-deps:
  Stream: ! '>=0.3.1'
  checkers: ! '>=0.2.3'
  unamb: ! '>=0.1.5'
  base: ! '>=4 && <5'
  vector-space: ! '>=0.5'
  TypeCompose: ! '>=0.8.0'
  category-extras: ! '>=0.53.5'
  old-time: -any
  random: -any
  QuickCheck: ! '>=2.1.0.2'
all-versions:
- '0.0'
- '0.2'
- '0.3'
- '0.5'
- 0.5.0.1
- 0.8.3
- 0.8.6
- 0.8.8
- 0.9.0
- 0.9.1
- 0.9.3
- 0.9.4
- 0.9.5
- 0.9.6
- 0.9.7
- 0.9.8
- 0.9.9
- 0.9.10
- 0.10.0
- 0.10.1
- 0.10.2
- 0.10.3
- 0.10.4
- 0.10.5
- 0.10.7
- '0.11'
- 0.11.2
- 0.11.3
- 0.11.4
- 0.11.5
author: Conal Elliott
latest: 0.11.5
description-type: text
description: ! "_Reactive_ [1] is a simple foundation for programming reactive systems\nfunctionally.
  \ Like Fran/FRP, it has a notions of (reactive) behaviors and\nevents.  Like DataDriven
  [2], Reactive has a data-driven implementation.\n\nThe inspiration for Reactive
  was Mike Sperber's Lula [3] implementation of\nFRP.  Mike used blocking threads,
  which I had never considered for FRP.\nWhile playing with the idea, I realized that
  I could give a very elegant\nand efficient solution to caching, which DataDriven
  doesn't do.  (For an\napplication \"f <*> a\" of a varying function to a varying
  argument, caching\nremembers the latest function to apply to a new argument and
  the last\nargument to which to apply a new function.)\n\nThe theory and implementation
  of Reactive are described in the paper\n\"Push-pull functional reactive programming\"
  [4].\n\nNote that cabal[5], version 1.4.0.1 or greater is required for installation.\n\nYou
  can configure, build, and install all in the usual way with Cabal\ncommands.\n\n
  \ runhaskell Setup.lhs configure\n  runhaskell Setup.lhs build\n  runhaskell Setup.lhs
  install\n\n\nReferences:\n\n[1] http://haskell.org/haskellwiki/Reactive\n[2] http://haskell.org/haskellwiki/DataDriven\n[3]
  http://www-pu.informatik.uni-tuebingen.de/lula/deutsch/publications.html\n[4] http://conal.net/papers/push-pull-frp/\n[5]
  http://www.haskell.org/cabal/download.html\n"
license-name: LicenseRef-OtherLicense
