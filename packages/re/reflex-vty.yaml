homepage: ''
changelog-type: markdown
hash: 7360e68c4b96eecbbc762ab222b13576ddd2451166e2cee863043bbc17919cd3
test-bench-deps: {}
maintainer: maintainer@obsidian.systems
synopsis: Reflex FRP host and widgets for vty applications
changelog: |
  # Revision history for reflex-vty

  ## 0.1.1.1

  * Bump minimum version of reflex

  ## 0.1.1.0

  * Set version bounds in cabal file
  * Add travis CI config

  ## 0.1.0.0

  * Initial release
basic-deps:
  bimap: ! '>=0.3.3 && <0.4'
  dependent-sum: ! '>=0.3 && <0.7'
  stm: ! '>=2.4 && <2.6'
  exception-transformers: ! '>=0.4.0 && <0.5'
  base: ! '>=4.10.0 && <4.13'
  time: ! '>=1.8.0 && <1.9'
  text: ! '>=1.2.3 && <1.3'
  dependent-map: ! '>=0.2.4 && <0.4'
  vty: ! '>=5.21 && <5.26'
  ref-tf: ! '>=0.4.0 && <0.5'
  data-default: ! '>=0.7.1 && <0.8'
  containers: ! '>=0.5.0 && <0.7'
  mtl: ! '>=2.2.2 && <2.3'
  reflex: ! '>=0.6.2.4 && <0.7'
  transformers: ! '>=0.5.5 && <0.6'
  reflex-vty: -any
  primitive: ! '>=0.6.3 && <0.7'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
author: Obsidian Systems LLC
latest: 0.1.1.1
description-type: markdown
description: |+
  # reflex-vty [![hackage](https://img.shields.io/hackage/v/reflex-vty.svg)](https://hackage.haskell.org/package/reflex-vty) [![hackage-ci](https://matrix.hackage.haskell.org/api/v2/packages/reflex-vty/badge)](https://matrix.hackage.haskell.org/#/package/reflex-vty) [![travis-ci](https://api.travis-ci.org/reflex-frp/reflex-vty.svg?branch=develop)](https://travis-ci.org/reflex-frp/reflex-vty)

  ## A library for building functional reactive terminal applications

  ![reflex-vty example animation](doc/welcome.gif)

  Feature requests, pull requests, and other feedback are welcome and appreciated (see the [contribution guide](CONTRIBUTING.md)). This library
  is still experimental, so big changes are possible!
  ### How to Build

  #### With reflex-platform

  Enter a nix-shell for the project:
  ```bash
  git clone git@github.com:reflex-frp/reflex-platform
  git clone git@github.com:reflex-frp/reflex-vty
  cd reflex-vty
  ../reflex-platform/scripts/work-on ghc ./.
  ```

  From within the nix-shell you can:
  * Run the example: `cabal repl example`
  * Load the library in the repl: `cabal repl reflex-vty`
  * Build the example executable: `cabal build example`
  * Build the docs: `cabal haddock`
  * Run ghcid for immediate compiler feedback when you save a .hs file: `ghcid -c "cabal repl reflex-vty --ghc-options=-Wall"`
  * etc.

  #### With cabal

  Please see the `tested-with` field of the cabal file for known-compatible versions of GHC.

  From the reflex-vty project directory:

  ```bash
  cabal new-configure
  cabal new-build # to build the library and example
  cabal new-repl # to enter a repl for the library
  cabal new-repl example # to enter a repl for the example executable
  ```


license-name: BSD-3-Clause
