homepage: https://github.com/feuerbach/regex-applicative
changelog-type: markdown
hash: 32129b4f0b2a3d370fb182dea4a2ee13aa127285f358f2f2224ffe982581df82
test-bench-deps:
  tasty-smallcheck: -any
  base: <5
  smallcheck: ! '>=1.0'
  containers: -any
  tasty-hunit: -any
  regex-applicative: -any
  transformers: -any
  tasty: -any
maintainer: Roman Cheplyaka <roma@ro-che.info>
synopsis: Regex-based parsing with applicative interface
changelog: ! "Changes\n=======\n\n0.3.3\n-----\n\nAdd `replace`\n\n0.3.2.1\n-------\n\n*
  Use strict left fold in decimal/hexadecimal\n* Include a missing test module in
  the sdist tarball\n\n0.3.2\n-----\n\nAdd `msym`\n\n0.3.1\n-----\n\nAdd `comap`\n\n0.3.0.3\n-------\n\n*
  Fix the test suite\n* Fix build with GHC 7.9\n\n0.3.0.2\n-------\n\nFix the test
  suite\n\n0.3.0.1\n-------\n\nPort the test suite to tasty\n\n0.3\n---\n* Add a new
  module, `Text.Regex.Applicative.Common`, which contains some\n  commonly used regexps
  (by Aleksey Khudyakov)\n* Improve the test suite\n\n0.2.1\n-----\n* Add the `withMatched`
  function\n* Make matching functions a bit more lax\n* Fix a bug in the `empty` method\n\n0.2\n---\n*
  Infix matching functions\n* Improved documentation\n* Improved performance\n* Improved
  portability\n\n0.1.5\n-----\n* Expose Object interface\n* Allow matching prefixes
  rather than the whole string\n* Add non-greedy repetitions\n\n0.1.4\n-----\n* Completely
  rewrite the engine. Now it's faster and runs in constant space.\n* Add 'string'
  function and 'IsString' instance.\n\n0.1.3\n-----\n* Fix a .cabal-file issue introduced
  in 0.1.2\n* Change the fixity of =~\n\n0.1.2\n-----\n* Relax the constraint on the
  containers version\n\n0.1.1\n---\n* Fix a bug in 'reFoldl' and 'many'\n* \"Lazy\"
  infinite regexes are no longer supported\n\n0.1\n---\n* Initial release\n"
basic-deps:
  base: <5
  containers: -any
  transformers: -any
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- '0.2'
- 0.2.1
- '0.3'
- 0.3.0.1
- 0.3.0.2
- 0.3.0.3
- 0.3.1
- 0.3.2
- 0.3.2.1
- 0.3.3
author: Roman Cheplyaka
latest: 0.3.3
description-type: markdown
description: ! "regex-applicative\n=================\n\n*regex-applicative* is aimed
  to be an efficient and easy to use parsing combinator\nlibrary for Haskell based
  on regular expressions.\n\nPerl programmers often use regular expressions for parsing,
  even if it is not\nan appropriate tool for the job, because Perl has so good support
  for regexps.\n\nThe opposite seems to be valid about Haskell programmers -- they
  use parsing\ncombinators (which recognize context-free or even context-sensitive
  grammars),\neven when the language is actually regular!\n\nHopefully, this library
  will improve the situation.\n\nInstallation\n------------\nInstall this library
  using `cabal-install` tool:\n\n    cabal update\n    cabal install regex-applicative\n\nDocumentation\n-------------\nThe
  [API reference][haddock] is available from Hackage.\n\nTo get started, see some
  [examples][examples] on the wiki.\n\nOther resources\n---------------\n\n* [This
  package on Hackage][hackage]\n* [Issue tracker][issues]\n* [Repository][github]\n\n\n[examples]:
  https://github.com/feuerbach/regex-applicative/wiki/Examples\n[haddock]: http://hackage.haskell.org/packages/archive/regex-applicative/latest/doc/html/Text-Regex-Applicative.html\n[hackage]:
  http://hackage.haskell.org/package/regex-applicative\n[issues]: https://github.com/feuerbach/regex-applicative/issues\n[github]:
  https://github.com/feuerbach/regex-applicative\n"
license-name: MIT
