homepage: https://github.com/basvandijk/bindings-levmar
changelog-type: ''
hash: ad8675ff9ff7e892b93e6bc162fa7a1952513fdd4300eaa1247f4f4fa412bd1d
test-bench-deps: {}
maintainer: Roel van Dijk <vandijk.roel@gmail.com> & Bas van Dijk <v.dijk.bas@gmail.com>
synopsis: Low level bindings to the C levmar (Levenberg-Marquardt) library
changelog: ''
basic-deps:
  base: ! '>=3 && <5'
  bindings-DSL: ! '>=1.0.15'
all-versions:
- '0.1'
- 0.1.0.1
- 0.1.1
- 0.1.1.1
- 0.2.0.1
- '1.0'
- 1.0.0.1
- 1.0.0.2
- '1.1'
- 1.1.0.1
- 1.1.0.2
- 1.1.0.3
- 1.1.0.4
- 1.1.0.5
author: Roel van Dijk <vandijk.roel@gmail.com> & Bas van Dijk <v.dijk.bas@gmail.com>
latest: 1.1.0.5
description-type: markdown
description: ! 'Low level Haskell bindings to the [C levmar (Levenberg-Marquardt)

  library](http://www.ics.forth.gr/~lourakis/levmar/)


  See the [levmar](http://hackage.haskell.org/package/levmar) package

  for a high-level wrapper around this package.


  The Levenberg-Marquardt algorithm is an iterative technique that finds

  a local minimum of a function that is expressed as the sum of squares

  of nonlinear functions. It has become a standard technique for

  nonlinear least-squares problems and can be thought of as a

  combination of steepest descent and the Gauss-Newton method. When the

  current solution is far from the correct one, the algorithm behaves

  like a steepest descent method: slow, but guaranteed to converge. When

  the current solution is close to the correct solution, it becomes a

  Gauss-Newton method.


  Both unconstrained and constrained (under linear equations and box

  constraints) Levenberg-Marquardt variants are included.  All functions

  have `Double` and `Float` variants.


  Note that the included C library is lightly patched to make it

  pure. This way the functions can be used inside `unsafePerformIO`.


  License

  =======


  All files **except** those in the `levmar-2.4` directory fall under

  the BSD3 license. The levmar C library, which is bundled with this

  binding, falls under the GPL. If you build a program which is linked

  with this binding then it is also linked with levmar. This means such

  a program can only by distributed under the terms of the GPL.

'
license-name: LicenseRef-OtherLicense
