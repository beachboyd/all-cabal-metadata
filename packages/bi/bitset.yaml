homepage: ''
changelog-type: text
hash: 20a61c3dc942da4691a1603947c6479480bd92fd93947c12c8571347ac66de72
test-bench-deps:
  base: ! '>=4.4.0 && <4.8'
  criterion: ==0.8.*
  integer-gmp: -any
  random-shuffle: ==0.0.4
  containers: ! '>=0.4.2'
  ghc-prim: -any
  tasty-quickcheck: ==0.8.*
  bitset: -any
  random: ==1.0.*
  tasty: ==0.8.*
  deepseq: ==1.3.*
  QuickCheck: ==2.6.*
maintainer: superbobry@gmail.com
synopsis: A space-efficient set data structure.
changelog: ! "bitset Changelog\n================\n\nHere you can see the full list
  of changes between each bitset release.\n\nVersion 1.4.8\n\n- Add support for GHC
  7.8\n- IsList instance for BitSet, so it's possible to use OverloadedLists extension.\n\nVersion
  1.4.7\n-------------\n\nReleased on August 25th, 2013\n\n- 'GBitSet' was renamed
  to 'BitSet' and is now 'newtype' as suggested\n  by John Ericson, see #10 on GitHub
  for details.\n\nVersion 1.4.6\n-------------\n\nReleased on July 17th, 2013\n\n-
  Fixed build issues on Windows, see #9 on GitHub for details.\n\nVersion 1.4.5\n-------------\n\nReleased
  on June 6th, 2013\n\n- Fixed 'Ord' instance, same bug as in 'Eq'. Where is my mind?\n\nVersion
  1.4.4\n-------------\n\nReleased on May 14th, 2013\n\n- Fixed 'Eq' instance, equal
  sizes don't mean a thing!\n\nVersion 1.4.3\n-------------\n\nReleased on May 13th,
  2013\n\n- Fixed bug with broken cabal distribution.\n\nVersion 1.4.2\n-------------\n\n-
  Switched to GMP bit fiddling functions, the corresponding patch for\n  'integer-gmp'
  was submitted to GHC, see\n  http://hackage.haskell.org/trac/ghc/ticket/7860\n\nVersion
  1.4.1\n-------------\n\nReleased on April 24th, 2013\n\n- Removed 'clearBitInteger'
  which didn't update the size field of\n  the newly created 'Integer'. Turns out
  it's completely non-trivial\n  to implement.\n\n\nVersion 1.4.0\n-------------\n\nReleased
  on April 4th, 2013\n\n- More speed optimizations, 'Data.BitSet.Dynamic' is close
  to 'Data.Set'\n  performance on most operations.\n- Added 'Data.BitSet.Word', a
  bit set with native integer as container\n  type, significantly faster then 'Data.Set'
  for enumerated types with\n  small number of constructors.\n- Added folds, 'map'
  and 'filter' for consistency with other Haskell\n  containers.\n\nVersion 1.3.0\n-------------\n\nReleased
  on March 25th, 2013\n\n- Added a generic bit set data type, abstract with respect
  to the underlying\n  container.\n- Improved dynamic bit set performance via optimized
  'popCount' and\n  'testBit' functions.\n\nVersion 1.2\n-----------\n\nInitial release,
  released on March 22th, 2013\n"
basic-deps:
  base: ! '>=4.4.0 && <4.8'
  integer-gmp: -any
  ghc-prim: -any
  deepseq: ==1.3.*
all-versions:
- '0.5'
- '0.6'
- '1.0'
- '1.1'
- '1.2'
- 1.3.0
- 1.4.0
- 1.4.1
- 1.4.2
- 1.4.3
- 1.4.4
- 1.4.5
- 1.4.6
- 1.4.7
- 1.4.8
author: ! 'Sergei Lebedev <superbobry@gmail.com>

  , Aleksey Kladov <aleksey.kladov@gmail.com>

  , Fedor Gogolev <knsd@knsd.net>'
latest: 1.4.8
description-type: haddock
description: ! 'A /bit set/ is a compact data structure, which maintains a set of
  members

  from a type that can be enumerated (i. e. has an `Enum'' instance).'
license-name: MIT
