homepage: https://github.com/mstksg/bins#readme
changelog-type: markdown
hash: 98db8f59aa861d7c2dfbf8d16c9222c990b7260c77eeb7e408665a187af9ae27
test-bench-deps: {}
maintainer: justin@jle.im
synopsis: Aggregate continuous values into discrete bins
changelog: ! "# Changelog\n\nVersion 0.1.1.0\n---------------\n\n*August 21, 2018*\n\n<https://github.com/mstksg/backprop/releases/tag/v0.1.1.0>\n\n*
  \  Added `pointed`, convenient church-style deconstructor for `Pointed` data\n    type.\n*
  \  Added `binFinExt` and `binFinComp`, for \"extended\" and \"compressed\"\n    `Finite`
  indices out of `Bin`s.\n\nVersion 0.1.0.0\n---------------\n\n*August 20, 2018*\n\n<https://github.com/mstksg/backprop/releases/tag/v0.1.0.0>\n\n*
  \  Initial release\n\n"
basic-deps:
  reflection: -any
  base: ! '>=4.7 && <5'
  vector-sized: ! '>=1.0'
  ghc-typelits-knownnat: -any
  ghc-typelits-natnormalise: -any
  tagged: -any
  containers: -any
  math-functions: -any
  finite-typelits: -any
  profunctors: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
author: Justin Le
latest: '0.1.1.0'
description-type: markdown
description: ! "# [bins][hackage]\n\nBin continuous values into discrete containers
  in an interval, useful for\nhistograms.\n\n[hackage]: https://hackage.haskell.org/package/bins\n\n##
  Usage\n\n```haskell\n-- divide into 10 bins between 5 and 50, logarithmically\nghci>
  withBinner (logBS @10 5 50) $ \\toBin -> do\n        print (toBin 1)\n        print
  (toBin 30)\n        print (binIx (toBin 30))\n        print (toBin 100)\n```\n\n```\nBin
  (-inf .. 5.0)       -- 1 is outside of range\nBin [25.06 .. 31.55)    -- 30 is inside
  bin enclosed by 25.06 and 31.55\nPElem (Finite 7)        -- 30 is in Bin #7 (indexed
  from 0)\nBin [50 .. -inf)        -- 100 is outside of range\n```\n\n```haskell\n--
  Generate a histogram based on the bins from valules in a list\nghci> xs = [1..100]
  :: [Double]\nghci> withBinner (logBS @10 5 50) $ \\toBin -> do\n         mapM_ (\\(b,
  n) -> putStrLn (displayBinDouble 4 b ++ \"\\t\" ++ show n))\n       . M.toList\n
  \      $ binFreq toBin xs\n```\n\n```\n(-inf .. 5.0000)        4\n[5.0000 .. 6.2946)
  \     2\n[6.2946 .. 7.9245)      1\n[7.9245 .. 9.9763)      2\n[9.9763 .. 12.5594)
  \    3\n[12.5594 .. 15.8114)    3\n[15.8114 .. 19.9054)    4\n[19.9054 .. 25.0594)
  \   6\n[25.0594 .. 31.5479)    6\n[31.5479 .. 39.7164)    8\n[39.7164 .. 50.0000)
  \   10\n[50.0000 .. +inf)       51\n```\n"
license-name: BSD3
