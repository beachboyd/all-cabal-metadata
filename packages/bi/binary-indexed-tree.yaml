homepage: ''
changelog-type: ''
hash: 209727b319d444edd9232c63a773c121d545ae68f921104651863016c0233ba9
test-bench-deps: {}
maintainer: Maxwell Sayles <maxwellsayles@gmail.com>
synopsis: Binary Indexed Trees (a.k.a. Fenwick Trees).
changelog: ''
basic-deps:
  base: ! '>=3 && <5'
  array: ! '>=0.3'
all-versions:
- '0.1'
author: Maxwell Sayles <maxwellsayles@gmail.com>
latest: '0.1'
description-type: haddock
description: ! 'Binary indexed trees are a data structure on indexes

  1 through n.  They allow you to compute the sum

  of all values at indexes 1 through i in O(logn) and to

  increase the value at index i in O(logn).


  This implements binary indexed trees, both

  as an immutable data structure in pure code

  and as a mutable data structure using the ST Monad.


  Both the immutable and mutable version have the

  same runtime complexity, but the mutable version

  has a smaller constant.


  Written by Maxwell Sayles (2012).'
license-name: LicenseRef-LGPL
