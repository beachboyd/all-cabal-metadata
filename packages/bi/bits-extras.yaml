homepage: ''
changelog-type: ''
hash: ed3bc33bdb8f544f23baea198afda34b32da608531e20efafe494cd4b315ff79
test-bench-deps: {}
maintainer: Gabriel Wicke <wicke@wikidev.net>
synopsis: Efficient high-level bit operations not found in Data.Bits
changelog: ''
basic-deps:
  base: ! '>=4 && <6'
all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
author: Gabriel Wicke <wicke@wikidev.net>
latest: 0.1.3
description-type: haddock
description: ! 'This package contains efficient implementations of high-level bit
  operations

  missing from Data.Bits. The implementation is based on GCC builtins, which

  translate to specialized instructions where available.


  All operations in this package can also be (less efficiently) implemented in

  terms of Data.Bits operations.


  /Issues:/ A GCC-provided library, @libgcc_s@, is dynamically linked to

  provide software fallbacks on architectures without instructions

  corresponding to specific operations. This is currently only expected to work

  on Linux systems, and even there can lead to issues with GHCi''s custom

  linker. A workaround for GHCi on a linux system: @ln -s \/lib\/libgcc_s.so.1

  \/lib\/libgcc_s.so@.


  The current plan for broader support is to replace the libgcc dependency with

  built-in fallbacks in C or Haskell code. This needs to closely follow GCC''s

  fall-back behaviour for each architecture. Alternative ideas would be

  appreciated.


  Relevant Hackage tickets:


  * <http://hackage.haskell.org/trac/ghc/ticket/3563>


  * <http://hackage.haskell.org/trac/ghc/ticket/4102>


  /Changes/:


  * 0.1.3: Added a first test and tweaked documentation. No functional changes.


  * 0.1.2: Moved the ''Data.Bits.Atomic'' module to the package @bits-atomic@.

  Those operations do not depend on libgcc_s and should work wherever GCC 4.X

  is available.  Link to @bits-atomic@ on hackage:

  <http://hackage.haskell.org/package/bits-atomic>'
license-name: BSD-3-Clause
