homepage: https://github.com/lpeterse/haskell-mqtt
changelog-type: ''
hash: 9ab6c58e37da06cd2ff610d3fb4ffe1a114e522efc83a046fca5fab0172c5d8f
test-bench-deps:
  exceptions: -any
  bytestring: -any
  base: ! '>=4.8 && <5'
  text: -any
  uuid: -any
  tls: -any
  criterion: -any
  async: -any
  containers: -any
  mqtt: -any
  binary: -any
  tasty-quickcheck: -any
  network-uri: -any
  tasty-hunit: -any
  attoparsec: -any
  random: -any
  tasty: ! '>=0.11'
  deepseq: -any
maintainer: info@lars-petersen.net
synopsis: An MQTT protocol implementation.
changelog: ''
basic-deps:
  bytestring: -any
  case-insensitive: -any
  x509-validation: -any
  base: ! '>=4.8 && <5'
  socket: -any
  text: -any
  uuid: -any
  clock: -any
  tls: ! '>=1.3.9 && <1.4'
  async: -any
  websockets: ! '>=0.10.0.0 && <0.11'
  containers: -any
  x509: -any
  binary: -any
  hslogger: -any
  attoparsec: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Lars Petersen
latest: 0.1.1.0
description-type: markdown
description: ! "A pure Haskell MQTT client and server implementation\n====================================================\n\n##
  Project goal\n\nThis project aims to supply a rock-solid MQTT 3.1.1 implementation
  suitable for production use.\n\nThe planned features are:\n\n  - A broker implementation
  capable of handing and serving several thousands of\n    connections.\n  - A client
  implementation with integrated broker which allows one client to be\n    used by
  several threads/consumers simultaneously.\n  - TLS and WebSocket connections.\n
  \ - An interface for pluggable authentication and authorization.\n  - High test
  and benchmark coverage.\n\n## Project state (2017-03-22)\n\n  - The broker implementation
  is nearly feature complete and well-tested.\n    The [hummingbird](https://github.com/lpeterse/haskell-hummingbird)
  project\n    is a full-fledged broker built on-top of this library.\n  - The client
  implementation went out of focus for now and is currently\n    commented out. It's
  still a planned feature and is essentially a low\n    hanging fruit as all the protocol
  parsers etc. are already in place.\n\n## License\n\nPermission is hereby granted
  under the terms of the MIT license:\n\n> Copyright (c) 2016 Lars Petersen\n>\n>
  Permission is hereby granted, free of charge, to any person obtaining\n> a copy
  of this software and associated documentation files (the\n> \"Software\"), to deal
  in the Software without restriction, including\n> without limitation the rights
  to use, copy, modify, merge, publish,\n> distribute, sublicense, and/or sell copies
  of the Software, and to\n> permit persons to whom the Software is furnished to do
  so, subject to\n> the following conditions:\n>\n> The above copyright notice and
  this permission notice shall be included\n> in all copies or substantial portions
  of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY
  KIND,\n> EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n> MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n> IN NO EVENT SHALL THE AUTHORS
  OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n> CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  IN AN ACTION OF CONTRACT,\n> TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE\n> SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
license-name: MIT
