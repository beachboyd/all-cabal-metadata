homepage: https://github.com/rkaippully/gamgee#readme
changelog-type: markdown
hash: 4126b04fc2f0a27da5660eb21e4647aa902145c0463b9ab19d341e7a6e5667d3
test-bench-deps:
  bytestring: ! '>=0.10.8.2 && <0.11'
  base: ! '>=4.12.0.0 && <4.13'
  tasty-golden: ! '>=2.3.2 && <2.4'
  time: ! '>=1.8.0.2 && <1.9'
  text: ! '>=1.2.3.1 && <1.3'
  filepath: ! '>=1.4.2.1 && <1.5'
  memory: ! '>=0.14.18 && <0.15'
  gamgee: -any
  quickcheck-instances: ! '>=0.3.22 && <0.4'
  relude: ! '>=0.5.0 && <0.6'
  cryptonite: ==0.25.*
  tasty-quickcheck: ! '>=0.10.1 && <0.11'
  polysemy: ! '>=1.0.0.0 && <1.1'
  tasty: ! '>=1.2.3 && <1.3'
  QuickCheck: ! '>=2.13.2 && <2.14'
  aeson: ! '>=1.4.4.0 && <1.5'
maintainer: rkaippully@gmail.com
synopsis: Tool for generating TOTP MFA tokens.
changelog: |
  # Changelog
  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/).

  ## [Unreleased]

  ## [1.2.0] - 2019-09-11
  - Added `change-password` command

  ## [1.1.0] - 2019-07-25
  - Added an info command to get information about Gamgee installation (https://github.com/rkaippully/gamgee/issues/5)
  - Generate build/configuration files via dhall
  - Remove polysemy-plugin so that haddock will run :(
  - Updated to latest stackage nightly
  - Upgraded to latest version of polysemy

  ## [1.0.0] - 2019-07-16
  - Major reimplementation based on polysemy

  ## [0.2.0] - 2018-06-07

  ### Added
  - Support for secrets in non-canonical format (https://github.com/rkaippully/gamgee/issues/2)

  ## [0.1.0] - 2018-06-05

  ### Added
  - First version.
  - Supports TOTP based tokens
  - Secure storage of tokens via AES256 encryption
  - Added installation and usage instructions to README
basic-deps:
  bytestring: ! '>=0.10.8.2 && <0.11'
  unix: ! '>=2.7.2.2 && <2.8'
  base: ! '>=4.12.0.0 && <4.13'
  time: ! '>=1.8.0.2 && <1.9'
  base64-bytestring: ! '>=1.0.0.2 && <1.1'
  text: ! '>=1.2.3.1 && <1.3'
  safe-exceptions: ! '>=0.1.7.0 && <0.2'
  filepath: ! '>=1.4.2.1 && <1.5'
  Hclip: ==3.0.0.4
  memory: ! '>=0.14.18 && <0.15'
  gamgee: -any
  relude: ! '>=0.5.0 && <0.6'
  cryptonite: ==0.25.*
  polysemy: ! '>=1.0.0.0 && <1.1'
  optparse-applicative: ! '>=0.14.3.0 && <0.15'
  aeson: ! '>=1.4.4.0 && <1.5'
  directory: ! '>=1.3.3.0 && <1.4'
all-versions:
- 1.0.0
- 1.1.0
- 1.2.0
author: Raghu Kaippully
latest: 1.2.0
description-type: markdown
description: |
  [![Build Status](https://travis-ci.org/rkaippully/gamgee.svg?branch=master)](https://travis-ci.org/rkaippully/gamgee)
  [![Release](https://img.shields.io/github/release/rkaippully/gamgee.svg)](https://github.com/rkaippully/gamgee/releases)

  # About
  Gamgee is your sidekick for managing multi-factor authentication
  tokens. It is a command-line tool that can be used as a drop-in
  replacement for Google Authenticator app or any other similar app
  providing multi-factor authentication using Time-based One-Time
  Password (TOTP) algorithm.

  Gamgee implements the TOTP algorithm specified in
  [RFC6238](https://tools.ietf.org/html/rfc6238)

  # Installation
  On MacOS, install using homebrew:

  ```
  brew install rkaippully/tools/gamgee
  ```

  See other releases here:
  https://github.com/rkaippully/gamgee/releases/latest

  # Usage
  Gamgee is a replacement for apps like Google Authenticator or Authy
  that are used to generate TOTP tokens. Typically, such tools scan a QR
  code to create an account. Gamgee cannot scan a QR code (yet), but you
  can instead get a secret token from your service and add that to
  Gamgee.

  1. Go to the multi-factor authentication setup page of your service
     (such as Github, Gmail, etc).  You will see a QR code in that page
     and instructions to scan it with an app.
  2. Look for a link in the page that gives alternative installation
     instructions. For example, many services include a "Can't scan
     barcode?" or "Enter this text code" link next to the QR code.
     Follow that link.
  3. Note down the secret code mentioned in the page. Once you get the
     secret, create a token with this command:

  ```
  gamgee add -l "<token-label>" -s "<secret-code>"
  ```

  `token-label` is a convenient label that you choose for this token.

  Now you are ready to generate an OTP with your token:

  ```
  gamgee <token-label>
  ```

  This will generate an OTP and copy it to your clipboard. You can paste
  it into your authentication service. Alternatively, you can write the
  OTP to standard output with:

  ```
  gamgee <token-label> --stdout
  ```

  You can find a list of all your tokens with:

  ```
  gamgee list
  ```

  You can also remove a token if it is no longer needed. Please remember
  that this cannot be undone:

  ```
  gamgee delete -l "<token-label>"
  ```

  Polysemy stores the tokens in a configuration file under your home
  directory. You can find the location of this file (along with some
  other details) by running:

  ```
  gamgee info
  ```

  # License
  Gamgee is distributed under Mozilla Public License 2.0. See the file
  LICENSE for details.

  This Source Code Form is "Incompatible With Secondary Licenses", as
  defined by the Mozilla Public License, v. 2.0.
license-name: MPL-2.0
