homepage: ''
changelog-type: ''
hash: 6777b126dad455aba3fad3f67a5622210ac94087adddf72eb5e94115ce35baed
test-bench-deps: {}
maintainer: maintainer@obsidian.systems
synopsis: Manage PostgreSQL servers with gargoyle
changelog: ''
basic-deps:
  gargoyle: ==0.1.*
  gargoyle-postgresql: -any
  bytestring: ==0.10.*
  unix: ==2.7.*
  base: ! '>=4.9 && <4.11'
  text: ==1.2.*
  stringsearch: ==0.3.*
  process: ==1.4.*
  directory: ==1.3.*
all-versions:
- '0.1'
author: Obsidian Systems LLC
latest: '0.1'
description-type: haddock
description: ! 'This package provides tools for managing PostgreSQL servers that live
  in local folders and communicate via a Unix domain socket. It uses the <https://hackage.haskell.org/package/gargoyle
  gargoyle> package in order to automatically initialize, spin up, and spin down such
  servers according to client demand.


  The `gargoyle-psql` executable is such a client which will try to connect to a PostgreSQL
  server at a given location:


  > gargoyle-psql db


  > psql (9.5.6)

  > Type "help" for help.

  >

  > postgres=#


  Note that `gargoyle-psql` assumes that PostgreSQL executables such as `psql` are
  available on the PATH. A custom ''Gargoyle'' is required to use non-standard PostgreSQL
  installations.


  The following is an example of using this package to run <https://hackage.haskell.org/package/postgresql-simple
  postgresql-simple> actions using a local DB:


  > import Database.PostgreSQL.Simple

  > import Gargoyle

  > import Gargoyle.PostgreSQL

  >

  > withDb :: String -> (Connection -> IO a) -> IO a

  > withDb dbPath a = withGargoyle defaultPostgres dbPath $ \dbUri -> a =<< connectPostgreSQL
  dbUri'
license-name: BSD3
