homepage: ''
changelog-type: markdown
hash: c8fafaf0da5be7d222945fa39e10b04d8cc9b49b02b869221eb857ea04c2bd76
test-bench-deps: {}
maintainer: maintainer@obsidian.systems
synopsis: Automatically spin up and spin down local daemons
changelog: |
  # Changelog for gargoyle

  ## 0.1.1

  * Bugfix: Error cases on opening file were non-exhaustive
  * Loosen version bounds

  ## 0.1

  * Initial release
basic-deps:
  unix: '>=2.7.2 && <2.8'
  base: '>=4.12.0 && <4.15'
  filepath: '>=1.4.2 && <1.5'
  process: '>=1.5.0 && <1.7'
  network: '>=2.6.0 && <3.2'
  filelock: '>=0.1.1 && <0.2'
  directory: '>=1.3.3 && <1.4'
all-versions:
- '0.1'
- 0.1.1.0
author: Obsidian Systems LLC
latest: 0.1.1.0
description-type: markdown
description: |
  # gargoyle

  Gargoyle is a framework for managing daemons from Haskell. Currently, the only requirement is that the daemon be able to communicate over a Unix domain socket. See [gargoyle-postgresql](https://hackage.haskell.org/package/gargoyle-postgresql) for an example that uses gargoyle to manage postgresql.

  To use Gargoyle the client must:
  * Define a value of the 'Gargoyle' type which specifies how to administer the daemon.
  * Create an executable whose `main` is `gargoyleMain`. The name of this executable should match the executable name specified in the `_gargoyle_exec` field of the `Gargoyle`.
  * The client will run their code with `withGargoyle` to gain access to the daemon.

  # Importing into Haskell package set

  ```nix
  haskellPackages.override {
    overrides = self: super:
      let gargoylePkgs = import ./path/to/gargoyle-repo { haskellPackages = self; };
      in gargoylePkgs // {
        # .. your overrides
      };
  }
  ```

  By default `gargoyle-postgresql-nix` will use the `postgresql` of the `pkgs` used by your `haskellPackages`. To override this, pass `postgresql` by changing the above line to look more like

  ```nix
  gargoylePkgs = import ./path/to/gargoyle-repo { haskellPackages = self; postgresql = myCustomVersion; }
  ```

  # Hacking

  Do something like this:

  ```shell
  nix-shell -A gargoyle-postgresql.env --run 'cd gargoyle-postgresql && cabal new-repl'
  ```
license-name: BSD-3-Clause
