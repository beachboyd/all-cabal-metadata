homepage: https://github.com/ta0kira/zeolite
changelog-type: markdown
hash: b745f3280339440d8241b16ab5731b0199aa9723b3dfbde17dfabaeea4c3c4ef
test-bench-deps:
  base: -any
  filepath: -any
  zeolite-internal: -any
  directory: -any
maintainer: Kevin P. Barry <ta0kira@gmail.com>
synopsis: Zeolite is a statically-typed, general-purpose programming language.
changelog: |
  # Revision history for zeolite-lang

  ## 0.1.2.0  -- 2020-04-28

  * **[fix]** Fixes a parser issue with empty `{}` blocks following `scoped`.

  * **[behavior]** Updates `cleanup` procedures to allow setting named-return
    values. Previously, initializing a named return in `cleanup` was not
    sufficient.

  * **[behavior]** Updates `zeolite-setup` to unconditionally rebuild supporting
    libraries. Incidentally, this causes all existing user modules to be out of
    date.

  ## 0.1.1.0  -- 2020-04-27

  * **[behavior]** Set the default output path for binaries to the module's path
    rather than the current directory.

  * **[new]** Allows a base path (`-p`) with recompile mode (`-r`).

  ## 0.1.0.0  -- 2020-04-27

  * First version. Released on an unsuspecting world.
basic-deps:
  unix: -any
  base: -any
  filepath: -any
  containers: -any
  zeolite-internal: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.2.1
author: Kevin P. Barry
latest: 0.1.2.1
description-type: haddock
description: |-
  Zeolite is an experimental general-purpose programming language. See
  <https://github.com/ta0kira/zeolite Zeolite on GitHub> for more details.

  The installation process is still a bit rough, and therefore must be done in a
  few stages:

  * Ensure that you have a C++ compiler such as @clang++@ or @g++@ installed,
  and an archiver such as @ar@ installed, all callable from a shell.
  * Install the binaries using @cabal@. After this step, the compiler itself is
  installed, but it cannot actually create executables from source code.

  @
  cabal install zeolite-lang
  @

  * Execute the setup binary that gets installed by @cabal@. This will give you
  a series of prompts to verify the binaries above. It will then
  automatically build the supporting libraries.

  @
  zeolite-setup
  @

  * (Optional) Once the setup above is completed, you should run the
  integration tests to ensure that code can be compiled and run. These can
  take quite a while to complete. Please create an
  <https://github.com/ta0kira/zeolite/issues issue on GitHub> if you encounter
  any errors.

  @
  ZEOLITE_PATH=$(zeolite --get-path)
  zeolite -p "$ZEOLITE_PATH" -t tests lib\/file lib\/util
  @

  The <https://github.com/ta0kira/zeolite/tree/master/example code examples> are
  located in @$ZEOLITE_PATH/example@. You should not normally need to use
  @$ZEOLITE_PATH@ outside of running included tests and examples.
license-name: Apache-2.0
