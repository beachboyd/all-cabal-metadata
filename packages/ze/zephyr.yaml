homepage: https://github.com/coot/zephyr#readme
changelog-type: ''
hash: 261d2ae1aef0b874bb41ab9f6b1588890131b6d68a594cf748caa3f9e2082d19
test-bench-deps:
  base: '>=4.8 && <5'
  hspec: -any
  text: -any
  hspec-core: -any
  process: <1.7.0.0
  HUnit: -any
  containers: -any
  zephyr: -any
  base-compat: '>=0.6.0'
  language-javascript: ^>=0.7
  utf8-string: '>=1 && <2'
  purescript: ^>=0.13.8
  mtl: '>=2.1.0 && <2.3.0'
  transformers: '>=0.3.0 && <0.6'
  optparse-applicative: '>=0.13.0'
  QuickCheck: '>=2.12.1'
  aeson: '>=1.0 && <1.5'
  directory: '>=1.2.3'
maintainer: Marcin Szamotulski <profunctor@pm.me>
synopsis: Zephyr, tree-shaking for the PureScript language
changelog: ''
basic-deps:
  bytestring: -any
  ansi-wl-pprint: -any
  base: '>=4.8 && <5'
  text: -any
  filepath: -any
  async: -any
  containers: -any
  ansi-terminal: '>=0.7.1 && <0.11'
  zephyr: -any
  base-compat: '>=0.6.0'
  language-javascript: ==0.7.*
  utf8-string: '>=1 && <2'
  formatting: -any
  purescript: '>=0.13.8 && <0.14'
  mtl: '>=2.1.0 && <2.3.0'
  transformers: '>=0.3.0 && <0.6'
  optparse-applicative: '>=0.13.0'
  boxes: ^>=0.1.4
  Glob: '>=0.9 && <0.11'
  aeson: '>=1.0 && <1.5'
  safe: ^>=0.3.9
  directory: '>=1.2.3'
all-versions:
- 0.1.1.0
- 0.1.4
- 0.2.0
- 0.2.1
- 0.3.1
author: Marcin Szamotulski <profunctor@pm.me>
latest: 0.3.1
description-type: markdown
description: "# zephyr\n[![Maintainer: coot](https://img.shields.io/badge/maintainer-coot-lightgrey.svg)](http://github.com/coot)\n![zephyr](https://github.com/coot/zephyr/workflows/Haskell%20CI/badge.svg)\n\nAn
  experimental tree-shaking tool for [PureScript](https://github.com/purescript/purescript).\n\n#
  Usage\n```sh\n# compile your project (or use `pulp build -- -g corefn`)\npurs compile
  -g corefn bower_components/purescript-*/src/**/*.purs src/**/*.purs\n\n# run `zephyr`\nzephyr
  -f Main.main\n\n# bundle your code\nwebpack\n```\n\nor you can bundle with `pulp`:\n\n```sh\npulp
  browserify --skip-compile -o dce-output -t app.js\n```\n\nYou can also specify modules
  as entry points, which is the same as specifying\nall exported identifiers.\n\n```sh\n#
  include all identifiers from Data.Eq module\nzephyr Data.Eq\n\n# as above\nzephyr
  module:Data.Eq\n\n# include Data.Eq.Eq identifier of Data.Eq module\nzephyr ident:Data.Eq.Eq\n\n#
  include Data.Eq.eq identifier (not the lower case of the identifier!)\nzephyr Data.Eq.eq\n```\n\n`zephyr`
  reads corefn json representation from `output` directory, removes non\ntransitive
  dependencies of entry points and dumps common js modules (or corefn\nrepresentation)
  to `dce-output` directory.\n\n# Zephyr eval\n\nZephyr can evaluate some literal
  expressions.\n```purescript\nimport Config (isProduction)\n\na = if isProduction\n
  \ then \"api/prod/\"\n  else \"api/dev/\"\n```\nwill be transformed to\n```purescript\na
  = \"api/prod/\"\n```\nwhenever `isProduction` is `true`.  This allows you to have
  different\ndevelopment and production environment while still ship a minified code
  in your\nproduction environment.  You may define `isProduction` in a module under\na
  `src-prod` directory and include it when compiling production code with `pulp\nbuild
  -I src-prod` and to have another copy for your development environment\nunder `src-dev`
  where `isProduction` is set to `false`.\n\n# Build & Test\n\n```sh\ncabal build
  exe:zephyr\n```\n\nTo run tests\n\n```sh\ncabal run zephyr-test\n```\n\n# Comments\n\nThe
  `-f` switch is not 100% safe.  Upon running, `zephyr` will remove exports from\nforeign
  modules that seems to be not used: are not used in purescript code and\nseem not
  to be used in the foreign module.  If you simply assign to `exports`\nusing javascript
  dot notation then you will be fine, but if you use square\nnotation `exports[var]`
  in a dynamic way (i.e. var is a true variable rather\nthan a string literal), then
  `zephyr` might remove code that shouldnâ€™t be\nremoved.\n\nThe best practice is to
  run a JavaScript tree-shaking algorithm via `webpack` or \n`rollup` on the JavaScript
  code that is pulled in your bundle by foreign imports.\n"
license-name: MPL-2.0
