homepage: http://github.com/twittner/zeromq-haskell/
changelog-type: ''
hash: 370acadad81769667fd72bfa979a354c9ee94f308cbe866620249892bd5cab35
test-bench-deps:
  MonadCatchIO-transformers: -any
  bytestring: -any
  checkers: ! '>=0.3'
  base: ! '>=3 && <5'
  async: -any
  zeromq3-haskell: -any
  containers: -any
  ansi-terminal: ! '>=0.6'
  transformers: -any
  QuickCheck: ! '>=2.6'
maintainer: Toralf Wittner <tw@dtex.org>
synopsis: Bindings to ZeroMQ 3.x
changelog: ''
basic-deps:
  MonadCatchIO-transformers: -any
  bytestring: -any
  base: ! '>=3 && <5'
  async: -any
  semigroups: -any
  containers: -any
  transformers: -any
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- '0.2'
- 0.3.0
- 0.3.1
- '0.4'
- '0.5'
- 0.5.1
- 0.5.2
author: Toralf Wittner
latest: 0.5.2
description-type: markdown
description: ! "This library provides Haskell bindings to 0MQ 3.2.x (http://zeromq.org).\nAPI
  documentation can be found at: http://twittner.github.io/zeromq-haskell/\n\nCurrent
  status\n--------------\n\nThis software currently has *beta* status, i.e. it had
  seen limited testing.\n\nVersion 0.5   - `Poll` has an additional type-parameter
  representing the socket\n                type. This integrates `poll` with the monadic
  layer.\n\nVersion 0.4   - Return `Async a` in `System.ZMQ3.Monadic.async`. Also
  require\n                `Data.List.NonEmpty` in `System.ZMQ3.sendMulti`.\n\nVersion
  0.3   - Add monadic layer on top of System.ZMQ3 and substitute\n                String
  for ByteString in a number of cases, where the 0MQ\n                API speaks of
  \"binary data\", i.e. `subscribe`/`unsubscribe`,\n                `identity`/`setIdentity`
  and `setTcpAcceptFilter`.\n\nVersion 0.2   - Add additional functionality from 3.2
  stable release, e.g.\n                zmq_proxy support, new socket options, socket
  monitoring etc.\n                *API Change*: `withContext` no longer accepts the
  number of\n                I/O threads as first argument.\n\nVersion 0.1.4 - Expose
  `waitRead` and `waitWrite`.\n\nVersion 0.1.3 - Deprecated `Xreq`, `XRep` in favour
  of `Dealer` and `Router`\n                as in libzmq. Fixes to compile and run
  with GHC 7.4.1.\n\nVersion 0.1.2 - Add `sendMulti` and `receiveMulti`. Rename `SndMore`
  to\n                `SendMore`.\n\nVersion 0.1.1 - Include better error message
  when trying to build against\n                invalid 0MQ version.\n\nVersion 0.1
  \  - First release to provide bindings against 0MQ 3.1.0\n\nInstallation\n------------\n\nAs
  usual for Haskell packages this software is installed best via Cabal\n(http://www.haskell.org/cabal).
  In addition to GHC it depends on 0MQ 3.1.x\nof course.\n\nNotes\n-----\n\nzeromq3-haskell
  mostly follows 0MQ's API. One difference though is that sockets\nare parameterized
  types, i.e. there is not one single socket type but when\ncreating a socket the
  desired socket type has to be specified, e.g. `Pair` and\nthe resulting socket is
  of type `Socket Pair`.\nThis additional type information is used to ensure that
  only options applicable\nto the socket type can be set.\n\nOther differences are
  mostly for convenience. Also one does not deal directly\nwith 0MQ messages, instead
  these are created internally as needed.\n\nFinally note that `receive` is already
  non-blocking internally.\nGHC's I/O manager is used to wait for data to be available,
  so from a client's\nperspective `receive` appears to be blocking.\n\nDifferences
  to the 0MQ 2.x binding\n----------------------------------\n\nThis library is based
  on the zeromq-haskell binding for 0MQ 2.x. Socket types\nand options have been aligned
  with 0MQ 3.x and instead of using a big\n`SocketOption` datatype, this library provides
  separate get and set functions for\neach available option, e.g. `affinity`/`setAffinity`.
  For details, please refer\nto the module's haddock documentation.\n\nExamples\n--------\n\nThe
  examples folder contains some simple tests mostly mimicking the ones that come\nwith
  0MQ.\n\nBugs\n----\n\nIf you find any bugs or other shortcomings I would greatly
  appreciate a bug\nreport, preferably via http://github.com/twittner/zeromq-haskell/issues
  or\ne-mail to tw@dtex.org\n"
license-name: MIT
