homepage: https://github.com/phaazon/zero
changelog-type: markdown
hash: a64a9a295932cad47f8e73578b03b968e66c3f5e60b80688169b3e88dae257fb
test-bench-deps: {}
maintainer: Dimitri Sabadie <dimitri.sabadie@gmail.com>
synopsis: Semigroups with absorption
changelog: ! '## 0.1.4


  - Support for GHC 8.0.1.


  ### 0.1.3.1


  - semigrous-0.18 support.


  ## 0.1.3


  - semigroups-0.17 support.


  ## 0.1.2


  - Replace hard-coded wrappers by Data.Monoid’s ones.

  - Fixed typo.


  ## 0.1.1


  - Added Any.

  - Added success and failure.


  ## 0.1


  - Initial revision.

'
basic-deps:
  base: ! '>=4.8 && <5.0'
  semigroups: ! '>=0.16 && <0.19'
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.3.1
- 0.1.4
author: Dimitri Sabadie <dimitri.sabadie@gmail.com>
latest: 0.1.4
description-type: haddock
description: ! '''Monoid'' is a ''Semigroup'' glued with a neutral element

  called ''mempty''. In the same idea, ''Zero'' is a ''Semigroup''

  glued with an absorbing element called ''zero''.


  Keep in mind that ''Zero'' requires ''Semigroup''. If you have

  ''Semigroup'' defined to work with ''Monoid'', you might end up

  with no way to implement ''Zero''. That’s why the ''Semigroup''

  instance for ''Maybe'' is confusing, because it relies on

  ''Monoid'', and cannot be used with ''Zero''. ''Success'' is the

  ''Zero'' equivalent of ''Maybe'' + ''Monoid''.'
license-name: BSD-3-Clause
