homepage: http://code.haskell.org/~aavogt/HListPP
changelog-type: text
hash: e3d8468d0979c816f51752311a74e72c0f0a2400d07eb6bdb5bf24c45249b11d
test-bench-deps: {}
maintainer: Adam Vogt <vogt.adam@gmail.com>
synopsis: A preprocessor for HList labelable labels
changelog: ! 'Nov 6 2015

  Release 0.2.1


  Change base dependency bounds


  May 28 2014

  Release 0.2

  Report filename given an error.

  Avoid parsing within comments.


  May 20 2014

  Initial release 0.1

'
basic-deps:
  base: ! '>=4.6 && <4.9'
  regex-applicative: ! '>=0.3 && <0.4'
  applicative-quoters: ! '>=0.1 && <0.2'
all-versions:
- '0.1'
- '0.2'
- 0.2.1
author: Adam Vogt <vogt.adam@gmail.com>
latest: 0.2.1
description-type: haddock
description: ! 'A preprocessor that replaces @`longDescriptiveName@ with


  > hLens'' (Label :: Label "longDescriptiveName")


  Use with ghc flags @-F -pgmF HListPP@, which can

  be added per-file with a pragma:


  > ❴-# OPTIONS_GHC -F -pgmF HListPP #-❵ -- change braces to ascii (haddock doesn''t
  allow literal comments in files)


  Note that @`labels@ is expanded to something that

  takes up about 26 more columns. To avoid issues with

  layout, put a newline after keywords that introduce

  layout, at least if there are @`labels@ in the same row.

  In other words:


  > `character.`position.`x %= \ x -> let

  >      msg = "a really long message about x>0"

  >      pos = x - 5

  >    in if pos < 0

  >          then error msg

  >          else pos


  Instead of


  > `character.`position.`x %= \ x -> let msg = "a really long message about x>0"

  >                                       pos = x - 5

  >                            in if pos < 0

  >                                then error msg

  >                                else pos


  A blank library is included in this package to make

  it possible to depend on HListPP'
license-name: BSD-3-Clause
