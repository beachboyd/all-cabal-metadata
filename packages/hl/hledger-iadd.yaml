homepage: https://github.com/hpdeifel/hledger-iadd#readme
changelog-type: markdown
hash: e2040675026e174a11676117ded26114a1e20910948678d2ee34a3481dd27f06
test-bench-deps:
  free: ! '>=4.12.4'
  hledger-lib: ! '>=1.0 && <1.6'
  base: ! '>=4.8 && <5'
  time: ! '>=1.5'
  hspec: -any
  text: -any
  megaparsec: ! '>=5.0 && <6.4'
  text-zipper: ! '>=0.10'
  hledger-iadd: -any
  transformers: ! '>=0.3'
  text-format: -any
  QuickCheck: -any
  vector: -any
maintainer: Hans-Peter Deifel <hpd@hpdeifel.de>
synopsis: A terminal UI as drop-in replacement for hledger add
changelog: ! "# 1.3.0\n\n  - Detect duplicate transactions and warn about them\n  -
  Add empty line before transactions when writing to journal\n  - Don't elide the
  last amount in transactions\n  - Support account directive for account completion\n
  \ - Bugfixes and dependency bumps\n\n# 1.2.6\n\n  - Fix build with hledger-lib >=
  1.3.1\n  - Support for megaparsec-6.1\n  - Support for brick <= 0.24\n  - Fix test
  suite with ghc 8.2\n\n# 1.2.5\n\n  - Fix broken release tarball\n\n# 1.2.4\n\n  -
  Support for megaparsec-6.0\n\n# 1.2.3\n\n  - Support for brick-0.20\n  - Restore
  compatibility with brick-0.17\n  - Support for hledger-lib-1.3\n\n# 1.2.2\n\n  -
  Support for megaparsec-5.3.0\n  - Bump brick dependency to 0.19\n\n# 1.2.1\n\n  -
  Support for hledger-lib-1.2\n  - Minor documentation fixes\n\n# 1.2\n\n  - Add support
  for comments (bound to `;`)\n  - Restore previous text input on undo\n  - Bump text-zipper
  dependency to 0.10\n\n# 1.1.4\n\n  - Sort account names by frequency for completion\n
  \ - Bind Home/End im entry field\n  - Bump brick and vty dependencies\n\n# 1.1.3\n\n
  \ - Add more emacs/readline like keybindings in entry field (`C-f`/`C-b`,\n    `M-f`/`M-b`,
  `M-Del`/`C-w`, `M-d`)\n  - Fix account suggestion order to be more like `hledger
  add`\n\n# 1.1.2\n\n - Respect ${LEDGER_FILE} environment variable\n - Add --version
  command\n - Bump brick dependency to 0.15.2\n - Bump hledger-lib dependency to 1.1\n
  - Bind C-u to 'delete to beginning of line'\n\n# 1.1.1\n\n - bugfix: Show cursor
  in empty entry widget\n - bugfix: Correctly execute `--help` and `--dump-default-config`
  in\n   the presence of syntax errors in the config file\n\n# 1.1\n\n - Add a configuration
  file for persistent settings\n - Disallow unbalanced transactions\n - Order postings
  naturally and omit balancing amounts in transaction preview (thanks Tristan Hume)\n
  - Suggest account based on last transaction if no similar transaction is found (thanks
  Tristan Hume)\n - Make completed dates as recent as possible (thanks Thorsten Wißmann)\n
  - Optional fuzzy matching via config option \"completion-engine\" (thanks Tristan
  Hume)\n - Add Ctrl-d as new keybinding for 'quit'\n - Make ESC quit at the toplevel\n
  - Various bug fixes\n\n# 1.0\n\n - Initial release\n"
basic-deps:
  free: ! '>=4.12.4'
  xdg-basedir: -any
  microlens-th: -any
  hledger-lib: ! '>=1.0 && <1.6'
  base: ! '>=4.8 && <5'
  time: ! '>=1.5'
  unordered-containers: -any
  text: -any
  megaparsec: ! '>=5.0 && <6.4'
  vty: ! '>=5.4'
  semigroups: ! '>=0.5.0'
  text-zipper: ! '>=0.10'
  containers: -any
  hledger-iadd: -any
  transformers: ! '>=0.3'
  optparse-applicative: -any
  text-format: -any
  microlens: -any
  brick: ! '>=0.17 && <0.33'
  vector: -any
  directory: -any
all-versions:
- '1.1'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.1.4'
- '1.2'
- '1.2.1'
- '1.2.2'
- '1.2.3'
- '1.2.5'
- '1.2.6'
- '1.3.0'
author: Hans-Peter Deifel <hpd@hpdeifel.de>
latest: '1.3.0'
description-type: markdown
description: ! "# hledger-iadd\n\nAn interactive terminal UI as drop-in replacement
  for `hledger add`.\n\n![Screencast](doc/screencast.gif)\n\n## Features\n\nThis project
  improves in the following ways on hledger's `add` command:\n\n - Interactive as-you-type
  completion for account names and\n   descriptions with optional fuzzy matching (see
  [below](#configuration-file)).\n\n - Integrated calculator: Amounts can be written
  as simple sums with\n   real-time feedback on the result.\n\n - All actions while
  entering a transaction can be undone\n\n - Configurable format for date input. Instead
  of `y/m/d` it is also\n   possible to use other formats like the german `d.m.y`.\n\nAlso
  see the user guide under [Usage](#usage).\n\n## Installation\n### Latest release\n####
  stack\n\nThe easiest method would be [stack]: Install the [stack] program and\ntype:\n\n
  \   stack install --resolver=nightly hledger-iadd\n\nThis downloads and builds `hledger-iadd`
  and all it's Haskell\ndependencies. After that, it copys the resulting binary to\n`~/.local/bin`.
  See `stack --help` for more options. You may get asked\nto install the GHC Haskell
  compiler locally. To do that, type `stack\nsetup`.\n\n#### cabal\n\nFirst, install
  the GHC Haskell compiler and the `cabal install`,\n`alex` and `happy` build tools,
  possibly from your distribution or the\n[haskell platform]. Type\n\n    cabal install
  --bindir ~/bin hledger-iadd\n\nto install the binary in `~/bin`.\n\n### Development
  version\n\nTo install the development version, clone the git repository first:\n\n
  \   git clone https://github.com/hpdeifel/hledger-iadd.git\n\tcd hledger-iadd\n\n####
  stack\n\nThe easiest method would be [stack]: Install the [stack] program and\ntype:\n\n
  \   stack install\n\nTo build and install all Haskell dependencies locally and install\n`hledger-iadd`
  to `~/.local/bin`. See `stack --help` for more options.\nYou may get asked to install
  the GHC Haskell compiler locally. To do\nthat, type `stack setup`.\n\n#### Cabal\n\nFirst,
  install the GHC Haskell compiler and the `cabal install`,\n`alex` and `happy` build
  tools, possibly from your distribution or the\n[haskell platform].\n\nSince `cabal`
  builds regularly break in non-isolated environments, the\nrecommended next step
  is to create a cabal sandbox where all\ndependencies will be installed in:\n\n    cd
  hledger-iadd\n\tcabal sandbox init\n\nYou can now download and install all dependencies
  locally with\n\n    cabal install --only-dependencies\n\nAnd finally you're ready
  to build and install `hledger-iadd`:\n\n    cabal configure --bindir ~/bin\n\tcabal
  build\n\tcabal copy\n\n## Usage\n\nYou can start the program either with\n\n    hledger
  iadd\n\nor simply `hledger-iadd`.\n\nThe following command line options are available:\n\n
  \ - `-f/--file/`: Path to the journal file. (Default: `~/.hledger.journal`)\n  -
  `--date-format`: Format for parsing dates. (Default:\n    `[[%y/]%m/]%d`, the usual
  ledger date format). Brackets can be\n    used to specify optional parts. E.g the
  german date format would\n    be `%d[.[%m[.[%y]]]]`. (Dates are written as `y/m/d`
  to the\n    journal regardless of this option).\n  - `--completion-engine`: Algorithm
  for account name completion. Can\n    be `substrings` or `fuzzy`.\n  - `--dump-default-config`:
  Print the example config file to stdout\n    and exit\n\nThe UI is partitioned in
  4 regions:\n\n    Current Transaction (view of your work in progress)\n\t---------------------------------------------------\n\tQuestion:
  [ text area                             ]\n\t---------------------------------------------------\n\tContext
  information (e.g. list of accounts)\n\n\n\n\n\t---------------------------------------------------\n\tMessage
  area\n\nFor each transaction, you will get asked the following questions in\norder:\n\n
  1. Date?\n 2. Description?\n 3. Account name?\n 4. Amount?\n 5. The last two questions
  are repeated until you enter the empty account\n 6. Do you want to add this transaction
  to the journal?\n\nTo accept the default answer, immediately press <kbd>Return</kbd>
  at a\npromt.\n\nWhile you type, the context area shows possible completions. Pressing\n<kbd>Return</kbd>
  answers the question with the currently selected\ncompletion. You can select differnt
  completions with <kbd>C-n</kbd>\nand <kbd>C-p</kbd>.\n\nThe following keyboard shortcuts
  are available:\n\n| Key                             | Function                                                                      |\n|
  ------------------------------- | -----------------------------------------------------------------------------
  |\n| <kbd>C-c</kbd>, <kbd>C-d</kbd>  | Quit the program without saving the current
  transaction                       |\n| <kbd>Esc</kbd>                  | Abort the
  current transaction or exit when at toplevel                        |\n| <kbd>Ret</kbd>
  \                 | Accept the currently selected answer                                          |\n|
  <kbd>Alt-Ret</kbd>              | Accept the current answer verbatim from the text
  area, ignoring the selection |\n| <kbd>C-z</kbd>                  | Undo the last
  action                                                          |\n| <kbd>Tab</kbd>
  \                 | Insert the currently selected answer into the text area                       |\n|
  <kbd>C-n</kbd>,<kbd>↓</kbd>     | Select the next context item                                                  |\n|
  <kbd>C-p</kbd>,<kbd>↑</kbd>     | Select the previous context item                                              |\n|
  <kbd>;</kbd>                    | Edit comment for current prompt                                               |\n|
  <kbd>Alt-;</kbd>                | Edit transaction comment                                                      |\n|
  <kbd>F1</kbd>,<kbd>Alt-?</kbd>  | Show help dialog                                                              |\n\n##
  Default Currency\n\nTo make entry easier it is recommended that you set a [default
  commodity](http://hledger.org/manual.html#default-commodity)\nin your ledger file
  if you haven't already done so.\nThat way when entering amounts, `hledger-iadd`
  will add the symbols for you.\nYou can do this by adding a line like below to the
  top of your ledger file:\n\n```lisp\n; sets the default commodity symbol and placement,
  thousands separator, and decimal symbol\nD $1,000.00\n```\n\n## Configuration File\n\n`hledger-iadd`
  is optionally configurable through a configuration file\nin `${XDG_CONFIG_HOME}/hledger-iadd/config.conf`.
  This file consists\nof simple\n\n    key = value\n\nassignments on individual lines
  with whitespace or comments starting\nwith `#` between them. The default config
  can be obtained by\npassing `--dump-default-config` to `hledger-iadd`.\n\nThe following
  options are currently available:\n\n  - `file`: Path to the journal file.\n  - `date-format`:
  The date format. See the documentation for\n    `--date-format` for details.\n  -
  `completion-engine`: Algorithm used to find completions for\n    account names.
  Possible values are:\n\t- `substrings`: Every word in the search string has to occur\n
  \     somewhere in the account name\n\t- `fuzzy`: All letters from the search string
  have to appear in\n      the name in the same order\n\n## License\n\nThe code of
  `hledger-iadd` is released under the [BSD3] license, but\nsince `hledger-lib` --
  the library that `hledger-iadd` uses -- is\nlicensed under the [GPLv3], the terms
  of the GPL apply to the compiled\nand linked binary.\n\n[stack]: https://github.com/commercialhaskell/stack\n[haskell
  platform]: https://www.haskell.org/platform/\n[BSD3]: https://opensource.org/licenses/BSD-3-Clause\n[GPLv3]:
  https://www.gnu.org/licenses/gpl-3.0.en.html\n"
license-name: BSD3
