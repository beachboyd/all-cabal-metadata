homepage: http://hledger.org
changelog-type: text
hash: be1dd481f78e53819ad849689012be5aca8df15336e6b7db397e7f5b6fdc5138
test-bench-deps:
  mtl-compat: -any
  hledger-lib: -any
  bytestring: -any
  extra: -any
  split: ! '>=0.1'
  base-compat-batteries: ! '>=0.10.1 && <0.11'
  base: ! '>=4.8 && <4.12'
  time: ! '>=1.5'
  blaze-markup: ! '>=0.5.1'
  parser-combinators: ! '>=0.4.0'
  text: ! '>=1.2'
  easytest: -any
  megaparsec: ! '>=6.4.1 && <7'
  filepath: -any
  parsec: ! '>=3'
  doctest: ! '>=0.16'
  data-default: ! '>=0.5'
  array: -any
  containers: -any
  ansi-terminal: ! '>=0.6.2.3'
  cassava: -any
  utf8-string: ! '>=0.3.5'
  hashtables: ! '>=1.2.3.1'
  old-time: -any
  regex-tdfa: -any
  mtl: -any
  cmdargs: ! '>=0.10'
  uglymemo: -any
  tabular: ! '>=0.2'
  pretty-show: ! '>=1.6.4'
  transformers: ! '>=0.2'
  deepseq: -any
  Decimal: -any
  Glob: ! '>=0.9'
  call-stack: -any
  safe: ! '>=0.2'
  cassava-megaparsec: -any
  directory: -any
maintainer: Simon Michael <simon@joyful.com>
synopsis: Core data types, parsers and functionality for the hledger accounting tools
changelog: ! "API-ish changes in the hledger-lib package. \nMost user-visible changes
  are noted in the hledger changelog, instead.\n\n\n# 1.11.1 (2018/10/06)\n\n* add,
  lib: fix wrong transaction rendering in balance assertion errors\n  and when using
  the add command\n\n\n# 1.11 (2018/9/30)\n\n* compilation now works when locale is
  unset (#849)\n\n* all unit tests have been converted from HUnit+test-framework to
  easytest\n\n* doctests now run quicker by default, by skipping reloading between
  tests. \n  This can be disabled by passing --slow to the doctests test suite\n  executable.\n\n*
  doctests test suite executable now supports --verbose, which shows\n  progress output
  as tests are run if doctest 0.16.0+ is installed\n  (and hopefully is harmless otherwise).\n\n*
  doctests now support file pattern arguments, provide more informative output.\n
  \ Limiting to just the file(s) you're interested can make doctest start\n  much
  quicker. With one big caveat: you can limit the starting files,\n  but it always
  imports and tests all other local files those import.\n\n* a bunch of custom Show
  instances have been replaced with defaults,\n  for easier troubleshooting.  These
  were sometimes obscuring\n  important details, eg in test failure output. Our new
  policy is:\n  stick with default derived Show instances as far as possible, but\n
  \ when necessary adjust them to valid haskell syntax so pretty-show\n  can pretty-print
  them (eg when they contain Day values, cf\n  https://github.com/haskell/time/issues/101).
  \ By convention, when\n  fields are shown in less than full detail, and/or in double-quoted\n
  \ pseudo syntax, we show a double period (..) in the output.\n\n* Amount has a new
  Show instance.  Amount's show instance hid\n  important details by default, and
  showing more details required\n  increasing the debug level, which was inconvenient.
  \ Now it has a\n  single show instance which shows more information, is fairly\n
  \ compact, and is pretty-printable.\n\n  ghci> usd 1\n  OLD:\n  Amount {acommodity=\"$\",
  aquantity=1.00, ..}\n  NEW:\n  Amount {acommodity = \"$\", aquantity = 1.00, aprice
  = NoPrice, astyle = AmountStyle \"L False 2 Just '.' Nothing..\", amultiplier =
  False}\n\n  MixedAmount's show instance is unchanged, but showMixedAmountDebug\n
  \ is affected by this change:\n\n  ghci> putStrLn $ showMixedAmountDebug $ Mixed
  [usd 1]\n  OLD:\n  Mixed [Amount {acommodity=\"$\", aquantity=1.00, aprice=, astyle=AmountStyle
  {ascommodityside = L, ascommodityspaced = False, asprecision = 2, asdecimalpoint
  = Just '.', asdigitgroups = Nothing}}]\n  NEW:\n  Mixed [Amount {acommodity=\"$\",
  aquantity=1.00, aprice=, astyle=AmountStyle \"L False 2 Just '.' Nothing..\"}]\n\n*
  Same-line & next-line comments of transactions, postings, etc.\n  are now parsed
  a bit more precisely (followingcommentp). \n  Previously, parsing no comment gave
  the same result as an empty\n  comment (a single newline); now it gives an empty
  string.  \n  Also, and perhaps as a consequence of the above, when there's no\n
  \ same-line comment but there is a next-line comment, we'll insert an\n  empty first
  line, since otherwise next-line comments would get moved\n  up to the same line
  when rendered.\n\n* Hledger.Utils.Test exports HasCallStack\n\n* queryDateSpan,
  queryDateSpan' now intersect date AND'ed date spans\n  instead of unioning them,
  and docs are clearer.\n\n* pushAccount -> pushDeclaredAccount\n\n* jaccounts ->
  jdeclaredaccounts\n\n* AutoTransaction.hs -> PeriodicTransaction.hs & TransactionModifier.hs\n\n*
  Hledger.Utils.Debug helpers have been renamed/cleaned up\n\n\n# 1.10 (2018/6/30)\n\n*
  build cleanly with all supported GHC versions again (7.10 to 8.4)\n\n* support/use
  latest base-compat (#794)\n\n* support/require megaparsec 6.4+\n\n* extensive refactoring
  and cleanup of parsers and related types and utilities\n\n* readJournalFile(s) cleanup,
  these now use InputOpts\n\n* doctests now run a bit faster (#802)\n\n\n# 1.9.1 (2018/4/30)\n\n*
  new generic PeriodicReport, and some report-related type aliases\n\n* new BudgetReport\n\n*
  make (readJournal|tryReader)s?WithOpts the default api, dropping \"WithOpts\"\n\n*
  automated postings and command line account aliases happen earlier\n  in journal
  processing (see hledger changelog)\n\n\n# 1.9 (2018/3/31)\n\n* support ghc 8.4,
  latest deps\n\n* when the system text encoding is UTF-8, ignore any UTF-8 BOM prefix\nfound
  when reading files.\n\n* CompoundBalanceReport amounts are now normally positive.\nThe
  bs/bse/cf/is commands now show normal income, liability and equity\nbalances as
  positive.  Negative numbers now indicate a contra-balance\n(eg an overdrawn checking
  account), a net loss, a negative net worth,\netc.  This makes these reports more
  like conventional financial\nstatements, and easier to read and share with others.
  (experimental)\n\n* splitSpan now returns no spans for an empty datespan\n\n* don't
  count periodic/modifier txns in Journal debug output\n\n* lib/ui/web/api: move embedded
  manual files to extra-source-files\n\n* Use skipMany/skipSome for parsing spacenonewline
  (Moritz Kiefer)\nThis avoids allocating the list of space characters only to then\ndiscard
  it.\n\n* rename, clarify purpose of balanceReportFromMultiBalanceReport\n\n* fix
  some hlint warnings\n\n* add some easytest tests\n\n\n# 1.5 (2017/12/31)\n\n* -V/--value
  uses today's market prices by default, not those of last transaction date. #683,
  #648)\n\n* csv: allow balance assignment (balance assertion only, no amount) in
  csv records (Nadrieril)\n\n* journal: allow space as digit group separator character,
  #330 (Mykola Orliuk)\n\n* journal: balance assertion errors now show line of failed
  assertion posting, #481 (Sam Jeeves)\n\n* journal: better errors for directives,
  #402 (Mykola Orliuk)\n\n* journal: better errors for included files, #660 (Mykola
  Orliuk)\n\n* journal: commodity directives in parent files are inherited by included
  files, #487 (Mykola Orliuk)\n\n* journal: commodity directives limits precision
  even after -B, #509 (Mykola Orliuk)\n\n* journal: decimal point/digit group separator
  chars are now inferred from an applicable commodity directive or default commodity
  directive. #399, #487 (Mykola Orliuk)\n\n* journal: numbers are parsed more strictly
  (Mykola Orliuk)\n\n* journal: support Ledger-style automated postings, enabled with
  --auto flag (Dmitry Astapov)\n\n* journal: support Ledger-style periodic transactions,
  enabled with --forecast flag (Dmitry Astapov)\n\n* period expressions: fix \"nth
  day of {week,month}\", which could generate wrong intervals (Dmitry Astapov)\n\n*
  period expressions: month names are now case-insensitive (Dmitry Astapov)\n\n* period
  expressions: stricter checking for invalid expressions (Mykola Orliuk)\n\n* period
  expressions: support \"every 11th Nov\" (Dmitry Astapov)\n\n* period expressions:
  support \"every 2nd Thursday of month\" (Dmitry Astapov)\n\n* period expressions:
  support \"every Tuesday\", short for \"every <n>th day of week\" (Dmitry Astapov)\n\n*
  remove upper bounds on all but hledger* and base (experimental)\n  It's rare that
  my deps break their api or that newer versions must\n  be avoided, and very common
  that they release new versions which I\n  must tediously and promptly test and release
  hackage revisions for\n  or risk falling out of stackage. Trying it this way for
  a bit.\n\n\n# 1.4 (2017/9/30)\n\n* add readJournalFile[s]WithOpts, with simpler
  arguments and support\nfor detecting new transactions since the last read.\n\n*
  query: add payee: and note: query terms, improve description/payee/note docs (Jakub
  Zárybnický, Simon Michael, #598, #608)\n\n* journal, cli: make trailing whitespace
  significant in regex account aliases\nTrailing whitespace in the replacement part
  of a regular expression\naccount alias is now significant. Eg, converting a parent
  account to\njust an account name prefix: --alias '/:acct:/=:acct '\n\n* timedot:
  allow a quantity of seconds, minutes, days, weeks, months\n  or years to be logged
  as Ns, Nm, Nd, Nw, Nmo, Ny\n\n* csv: switch the order of generated postings, so
  account1 is first.\nThis simplifies things and facilitates future improvements.\n\n*
  csv: show the \"creating/using rules file\" message only with --debug\n\n* csv:
  fix multiple includes in one rules file\n\n* csv: add \"newest-first\" rule for
  more robust same-day ordering\n\n* deps: allow ansi-terminal 0.7\n\n* deps: add
  missing parsec lower bound, possibly related to #596, fpco/stackage#2835\n\n* deps:
  drop oldtime flag, require time 1.5+\n\n* deps: remove ghc < 7.6 support, remove
  obsolete CPP conditionals\n\n* deps: fix test suite with ghc 8.2\n\n\n# 1.3.1 (2017/8/25)\n\n*
  Fix a bug with -H showing nothing for empty periods (#583, Nicholas Niro)\nThis
  patch fixes a bug that happened when using the -H option on\na period without any
  transaction. Previously, the behavior was no\noutput at all even though it should
  have shown the previous ending balances\nof past transactions. (This is similar
  to previously using -H with -E,\nbut with the extra advantage of not showing empty
  accounts)\n\n* allow megaparsec 6 (#594)\n\n* allow megaparsec-6.1 (Hans-Peter Deifel)\n\n*
  fix test suite with Cabal 2 (#596)\n\n\n# 1.3 (2017/6/30)\n\njournal: The \"uncleared\"
  transaction/posting status, and associated UI flags\nand keys, have been renamed
  to \"unmarked\" to remove ambiguity and\nconfusion.  This means that we have dropped
  the `--uncleared` flag,\nand our `-U` flag now matches only unmarked things and
  not pending\nones.  See the issue and linked mail list discussion for more\nbackground.
  \ (#564)\n\ncsv: assigning to the \"balance\" field name creates balance\nassertions
  (#537, Dmitry Astapov).\n\ncsv: Doubled minus signs are handled more robustly (fixes
  #524, Nicolas Wavrant, Simon Michael)\n\nMultiple \"status:\" query terms are now
  OR'd together. (#564)\n\ndeps: allow megaparsec 5.3.\n\n\n# 1.2 (2017/3/31)\n\n##
  journal format\n\nA pipe character can optionally be used to delimit payee names
  in\ntransaction descriptions, for more accurate querying and pivoting by\npayee.
  \ Eg, for a description like `payee name | additional notes`,\nthe two parts will
  be accessible as pseudo-fields/tags named `payee`\nand `note`.\n\nSome journal parse
  errors now show the range of lines involved, not just the first.\n\n## ledger format\n\nThe
  experimental `ledger:` reader based on the WIP ledger4 project has\nbeen disabled,
  reducing build dependencies.\n\n## Misc\n\nFix a bug when tying the knot between
  postings and their parent transaction, reducing memory usage by about 10% (#483)
  (Mykola Orliuk)\n\nFix a few spaceleaks (#413) (Moritz Kiefer)\n\nAdd Ledger.Parse.Text
  to package.yaml, fixing a potential build failure.\n\nAllow megaparsec 5.2 (#503)\n\nRename
  optserror -> usageError, consolidate with other error functions\n\n\n# 1.1 (2016/12/31)\n\n##
  journal format\n\n-   balance assignments are now supported (#438, #129, #157, #288)\n\n
  \   This feature also brings a slight performance drop (~5%);\n    optimisations
  welcome.\n\n-   also recognise `*.hledger` files as hledger journal format\n\n##
  ledger format\n\n-   use ledger-parse from the ledger4 project as an alternate reader
  for C++ Ledger journals\n    \n    The idea is that some day we might get better
  compatibility with Ledger files this way.\n    Right now this reader is not very
  useful and will be used only if you explicitly select it with a `ledger:` prefix.\n
  \   It parses transaction dates, descriptions, accounts and amounts, and ignores
  everything else.\n    Amount parsing is delegated to hledger's journal parser, and
  malformed amounts might be silently ignored.\n\n    This adds at least some of the
  following as new dependencies for hledger-lib:\n    parsers, parsec, attoparsec,
  trifecta.\n\n## misc\n\n-   update base lower bound to enforce GHC 7.10+\n    \n
  \   hledger-lib had a valid install plan with GHC 7.8, but currently requires GHC
  7.10 to compile.\n    Now we require base 4.8+ everywhere to ensure the right GHC
  version at the start.\n    \n-   Hledger.Read api cleanups\n\n-   rename dbgIO to
  dbg0IO, consistent with dbg0, and document a bug in dbg*IO\n\n-   make readJournalFiles
  [f] equivalent to readJournalFile f (#437)\n\n-   more general parser types enabling
  reuse outside of IO (#439)\n\n\n# 1.0.1 (2016/10/27)\n\n- allow megaparsec 5.0 or
  5.1\n\n\n# 1.0 (2016/10/26)\n\n## timedot format\n\n-   new \"timedot\" format for
  retroactive/approximate time logging.\n\n    Timedot is a plain text format for
  logging dated, categorised\n    quantities (eg time), supported by hledger.  It
  is convenient\n    for approximate and retroactive time logging, eg when the\n    real-time
  clock-in/out required with a timeclock file is too\n    precise or too interruptive.
  \ It can be formatted like a bar\n    chart, making clear at a glance where time
  was spent.\n\n## timeclock format\n\n-   renamed \"timelog\" format to \"timeclock\",
  matching the emacs package\n\n-   sessions can no longer span file boundaries (unclocked-out\n\n
  \   sessions will be auto-closed at the end of the file).\n\n-   transaction ids
  now count up rather than down (#394)\n\n-   timeclock files no longer support default
  year directives\n\n-   removed old code for appending timeclock transactions to
  journal transactions.\n\n    A holdover from the days when both were allowed in
  one file.\n\n## csv format\n\n-   fix empty field assignment parsing, rule parse
  errors after megaparsec port (#407) (Hans-Peter Deifel)\n\n## journal format\n\n-
  \  journal files can now include timeclock or timedot files (#320)\n\n    (but not
  yet CSV files).\n\n-   fixed an issue with ordering of same-date transactions included
  from other files\n\n-   the \"commodity\" directive and \"format\" subdirective
  are now supported, allowing\n\n    full control of commodity style (#295) The commodity
  directive's\n    format subdirective can now be used to override the inferred\n
  \   style for a commodity, eg to increase or decrease the\n    precision. This is
  at least a good workaround for #295.\n\n-   Ledger-style \"apply account\"/\"end
  apply account\" directives are now used to set a default parent account.\n\n-   the
  Ledger-style \"account\" directive is now accepted (and ignored).\n\n-   bracketed
  posting dates are more robust (#304)\n\n    Bracketed posting dates were fragile;
  they worked only if you\n    wrote full 10-character dates. Also some semantics
  were a bit\n    unclear. Now they should be robust, and have been documented\n    more
  clearly. This is a legacy undocumented Ledger syntax, but\n    it improves compatibility
  and might be preferable to the more\n    verbose \"date:\" tags if you write posting
  dates often (as I do).\n    Internally, bracketed posting dates are no longer considered
  to\n    be tags.  Journal comment, tag, and posting date parsers have\n    been
  reworked, all with doctests.\n\n-   balance assertion failure messages are clearer\n\n-
  \  with --debug=2, more detail about balance assertions is shown.\n\n## misc\n\n-
  \  file parsers have been ported from Parsec to Megaparsec \\o/ (#289, #366) (Alexey
  Shmalko, Moritz Kiefer)\n\n-   most hledger types have been converted from String
  to Text, reducing memory usage by 30%+ on large files\n\n-   file parsers have been
  simplified for easier troubleshooting (#275).\n\n    The journal/timeclock/timedot
  parsers, instead of constructing\n    opaque journal update functions which are
  later applied to build\n    the journal, now construct the journal directly by modifying
  the\n    parser state. This is easier to understand and debug. It also\n    rules
  out the possibility of journal updates being a space\n    leak. (They weren't, in
  fact this change increased memory usage\n    slightly, but that has been addressed
  in other ways).  The\n    ParsedJournal type alias has been added to distinguish\n
  \   \"being-parsed\" journals and \"finalised\" journals.\n\n-   file format detection
  is more robust.\n\n    The Journal, Timelog and Timedot readers' detectors now check\n
  \   each line in the sample data, not just the first one. I think the\n    sample
  data is only about 30 chars right now, but even so this\n    fixed a format detection
  issue I was seeing. \n    Also, we now always try parsing stdin as journal format
  (not just sometimes).\n\n-   all file formats now produce transaction ids, not just
  journal (#394)\n\n-   git clone of the hledger repo on windows now works (#345)\n\n-
  \  added missing benchmark file (#342)\n\n-   our stack.yaml files are more compatible
  across stack versions (#300)\n\n-   use newer file-embed to fix ghci working directory
  dependence (<https://github.com/snoyberg/file-embed/issues/18>)\n\n-   report more
  accurate dates in account transaction report when postings have their own dates\n\n
  \   (affects hledger-ui and hledger-web registers).\n    The newly-named \"transaction
  register date\" is the date to be\n    displayed for that transaction in a transaction
  register, for\n    some current account and filter query.  It is either the\n    transaction
  date from the journal (\"transaction general date\"),\n    or if postings to the
  current account and matched by the\n    register's filter query have their own dates,
  the earliest of\n    those posting dates.\n\n-   simplify account transactions report's
  running total.\n\n    The account transactions report used for hledger-ui and -web\n
  \   registers now gives either the \"period total\" or \"historical\n    total\",
  depending strictly on the --historical flag. It doesn't\n    try to indicate whether
  the historical total is the accurate\n    historical balance (which depends on the
  user's report query).\n\n-   reloading a file now preserves the effect of options,
  query arguments etc.\n\n-   reloading a journal should now reload all included files
  as well.\n\n-   the Hledger.Read.\\* modules have been reorganised for better reuse.\n\n
  \   Hledger.Read.Utils has been renamed Hledger.Read.Common\n    and holds low-level
  parsers & utilities; high-level read\n    utilities are now in Hledger.Read.\n\n-
  \  clarify amount display style canonicalisation code and terminology a bit.\n\n
  \   Individual amounts still have styles; from these we derive\n    the standard
  \"commodity styles\". In user docs, we might call\n    these \"commodity formats\"
  since they can be controlled by the\n    \"format\" subdirective in journal files.\n\n-
  \  Journal is now a monoid\n\n-   expandPath now throws a proper IO error\n\n-   more
  unit tests, start using doctest\n\n\n\n\n0.27 (2015/10/30)\n\n- The main hledger
  types now derive NFData, which makes it easier to\n  time things with criterion.\n\n-
  Utils has been split up more.\n\n- Utils.Regex: regular expression compilation has
  been memoized, and\n  memoizing versions of regexReplace[CI] have been added, since\n
  \ compiling regular expressions every time seems to be quite\n  expensive (#244).\n
  \n- Utils.String: strWidth is now aware of multi-line strings (#242).\n\n- Read:
  parsers now use a consistent p suffix.\n\n- New dependencies: deepseq, uglymemo.\n\n-
  All the hledger packages' cabal files are now generated from\n  simpler, less redundant
  yaml files by hpack, in principle. In\n  practice, manual fixups are still needed
  until hpack gets better,\n  but it's still a win.\n\n0.26 (2015/7/12)\n\n- allow
  year parser to handle arbitrarily large years\n- Journal's Show instance reported
  one too many accounts\n- some cleanup of debug trace helpers\n- tighten up some
  date and account name parsers (don't accept leading spaces; hadddocks)\n- drop regexpr
  dependency\n\n0.25.1 (2015/4/29)\n\n- support/require base-compat >0.8 (#245)\n\n0.25
  (2015/4/7)\n\n\n- GHC 7.10 compatibility (#239)\n\n0.24.1 (2015/3/15)\n\n- fix JournalReader
  \"ctx\" compilation warning\n- add some type signatures in Utils to help make ghci-web\n\n0.24
  (2014/12/25)\n\n- fix combineJournalUpdates folding order\n- fix a regexReplaceCI
  bug\n- fix a splitAtElement bug with adjacent separators\n- mostly replace slow
  regexpr with regex-tdfa (fixes #189)\n- use the modern Text.Parsec API\n- allow
  transformers 0.4*\n- regexReplace now supports backreferences\n- Transactions now
  remember their parse location in the journal file\n- export Regexp types, disambiguate
  CsvReader's similarly-named type\n- export failIfInvalidMonth/Day (fixes #216)\n-
  track the commodity of zero amounts when possible\n  (useful eg for hledger-web's
  multi-commodity charts)\n- show posting dates in debug output\n- more debug helpers\n\n0.23.3
  (2014/9/12)\n\n- allow transformers 0.4*\n\n0.23.2 (2014/5/8)\n\n- postingsReport:
  also fix date sorting of displayed postings (#184)\n\n0.23.1 (2014/5/7)\n\n- postingsReport:
  with disordered journal entries, postings before the\n  report start date could
  get wrongly included. (#184)\n\n0.23 (2014/5/1)\n\n- orDatesFrom -> spanDefaultsFrom\n\n0.22.2
  (2014/4/16)\n\n- display years before 1000 with four digits, not three\n- avoid
  pretty-show to build with GHC < 7.4\n- allow text 1.1, drop data-pprint to build
  with GHC 7.8.x\n\n0.22.1 (2014/1/6) and older: see http://hledger.org/release-notes
  or doc/CHANGES.md.\n"
basic-deps:
  mtl-compat: -any
  bytestring: -any
  extra: -any
  split: ! '>=0.1'
  base-compat-batteries: ! '>=0.10.1 && <0.11'
  base: ! '>=4.8 && <4.12'
  time: ! '>=1.5'
  blaze-markup: ! '>=0.5.1'
  parser-combinators: ! '>=0.4.0'
  text: ! '>=1.2'
  easytest: -any
  megaparsec: ! '>=6.4.1 && <7'
  filepath: -any
  parsec: ! '>=3'
  data-default: ! '>=0.5'
  array: -any
  containers: -any
  ansi-terminal: ! '>=0.6.2.3'
  cassava: -any
  utf8-string: ! '>=0.3.5'
  hashtables: ! '>=1.2.3.1'
  old-time: -any
  regex-tdfa: -any
  mtl: -any
  cmdargs: ! '>=0.10'
  uglymemo: -any
  tabular: ! '>=0.2'
  pretty-show: ! '>=1.6.4'
  transformers: ! '>=0.2'
  deepseq: -any
  Decimal: -any
  Glob: ! '>=0.9'
  call-stack: -any
  safe: ! '>=0.2'
  cassava-megaparsec: -any
  directory: -any
all-versions:
- '0.9'
- '0.10'
- '0.11'
- '0.11.1'
- '0.12'
- '0.12.1'
- '0.13'
- '0.14'
- '0.15'
- '0.15.2'
- '0.16'
- '0.16.1'
- '0.17'
- '0.18'
- '0.18.1'
- '0.18.2'
- '0.19'
- '0.19.1'
- '0.19.3'
- '0.20'
- '0.20.0.1'
- '0.21'
- '0.21.1'
- '0.21.2'
- '0.21.3'
- '0.22'
- '0.22.1'
- '0.22.2'
- '0.23'
- '0.23.1'
- '0.23.2'
- '0.23.3'
- '0.24'
- '0.24.1'
- '0.25'
- '0.25.1'
- '0.26'
- '0.27'
- '0.27.1'
- '1.0'
- '1.0.1'
- '1.1'
- '1.2'
- '1.3'
- '1.3.1'
- '1.3.2'
- '1.4'
- '1.5'
- '1.5.1'
- '1.9'
- '1.9.1'
- '1.10'
- '1.11'
- '1.11.1'
author: Simon Michael <simon@joyful.com>
latest: '1.11.1'
description-type: text
description: ! 'A reusable library containing hledger''s core functionality.

  This is used by most hledger* packages for common data parsing,

  command line option handling, reporting etc.

'
license-name: GPL-3
