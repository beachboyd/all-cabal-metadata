homepage: http://hledger.org
changelog-type: markdown
hash: 195ee28ad8284a5682d256028df1b7ff4396ca74922a4ae65ce68f2a7e37a7e5
test-bench-deps:
  shakespeare: ! '>=2.0.2.2'
  mtl-compat: -any
  hledger-lib: ==1.16.*
  bytestring: -any
  extra: ! '>=1.6.3'
  haskeline: ! '>=0.6'
  split: ! '>=0.1'
  base-compat-batteries: ! '>=0.10.1 && <0.12'
  hledger: -any
  base: ! '>=4.9 && <4.14'
  time: ! '>=1.5'
  unordered-containers: -any
  text: ! '>=0.11'
  megaparsec: ! '>=7.0.0 && <8'
  wizards: ! '>=1.0'
  filepath: -any
  criterion: -any
  process: -any
  parsec: ! '>=3'
  data-default: ! '>=0.5'
  utility-ht: ! '>=0.0.13'
  containers: -any
  ansi-terminal: ! '>=0.6.2.3'
  math-functions: ! '>=0.2.0.0'
  utf8-string: ! '>=0.3.5'
  old-time: -any
  regex-tdfa: -any
  mtl: -any
  cmdargs: ! '>=0.10'
  html: -any
  tabular: ! '>=0.2'
  pretty-show: ! '>=1.6.4'
  terminfo: -any
  timeit: -any
  transformers: -any
  temporary: -any
  tasty: ! '>=1.2.3'
  Decimal: -any
  safe: ! '>=0.2'
  directory: -any
maintainer: Simon Michael <simon@joyful.com>
synopsis: Command-line interface for the hledger accounting tool
changelog: "User-visible changes in the hledger command line tool and library.\n\n\n#
  1.16 2019-12-01\n\n## General\n\n- add support for GHC 8.8, base-compat 0.11 (#1090)\n\n-
  drop support for GHC 7.10\n\n- The benchmark suite has been disabled.\n\n- The --anon
  flag now also anonymises transaction codes and account\n  names declared with account
  directives. (Mykola Orliuk) (#901)\n\n## commands\n\n- balance/bs/cf/is: balance
  commands now support the -%/--percent flag\n  to show amounts as percentages of
  the column's total. (Michael Kainer)\n\n  If there are multiple commodities involved
  in a report hledger bails\n  with an error message. This can be avoided by using
  -B/--cost. Also note\n  that if one uses -% with the balance command the chances
  are high that\n  all numbers are 0. This is due to the fact that by default balance
  sums\n  up to zero. If one wants to use -% in a meaningful way with balance one\n
  \ has to add a query.\n\n  In order to keep the implementation as simple as possible
  --tree has no\n  influence over how the percentages are calculated, i.e., the percentages\n
  \ always represent the fraction of the columns total. If one wants to know\n  the
  percentages relative to a parent account, one has to use a query to\n  narrow down
  the accounts.\n\n- balance: --budget no longer errors when there is neither budget
  nor\n  transactions in the report period (Dmitry Astapov)\n\n- balance: --budget
  has improved debug output (shows budget txns)\n  (Dmitry Astapov)\n\n- check-dates:
  now sets the exit status code (Amitai Burstein)\n\n- close: no longer strips zeroes
  after the decimal mark, and preserves\n  parseable output (#1137)\n\n- close: the
  --close-to, --open-from options allow closing/opening\n  account names to be chosen\n\n-
  import: create the journal if missing, like the add command\n  Streamlines import/migration
  instructions.\n\n- import: --catchup marks all transactions imported, without importing\n\n-
  import: more informative output: mention the input files, also show\n  a message
  when nothing was imported\n\n- prices: show price amounts with proper display style;
  always show\n  full precision\n\n- roi: don't give an error with empty input data
  (Dmitry Astapov)\n\n- tests: unit tests are now run by tasty (#1090).\n  Test running
  options have changed, see the command help. \n  Some unit tests have been collapsed,
  so the reported test count has\n  dropped a little.\n\n## journal format\n\n- journal:
  fix generation of periodic transactions with\n  days/months/... repeat (Dmitry Astapov)\n\n##
  csv format\n\n- CSV reading improvements (#1095)\n\n  - can now generate a variable
  number of postings, from zero to nine (#627, #1095)\n  - can now generate postings
  with balance assignments (#1000)\n  - skip can be used in conditional blocks; so
  can the new \"end\" rule (skips all remaining) (#1076)\n  - both the amount-in/amount-out
  fields having a value is now ok, if one of them is zero (#570)\n  - line feeds/carriage
  returns in quoted CSV values are now converted to spaces (#416, #841)\n  - field
  assignments can now unset a field (eg a posting can be\n    suppressed by assigning
  no value to its account)\n  - fixed: empty field assignment consumes next line (#1001)\n
  \ - fixed: interpolation of field names containing punctuation (underscore, hyphens
  etc)\n  - fixed: show two spaces between description and comment, not three\n  -
  clarified that hledger field assignments can reference csv fields only, not other
  hledger fields (#500)\n  - new docs, tests\n\n  Migration notes:\n\n  - When `print`ing
  from CSV, there is now one less space between\n    transaction descriptions and
  comments. If you are comparing old\n    and new reports, diff -w (--ignore-all-space)
  will ignore this\n    change.\n\n  - CSV rules now give you more freedom to generate
  any journal\n    entries you want, including malformed or unbalanced ones. \n    The
  csv reader now checks the journal after conversion,\n    so it will report any problems
  with the generated entries.\n\n  - Balance assertions generated from CSV are not
  checked, currently.\n    This is appropriate when you are downloading partial CSV
  data to\n    be merged into your main journal. If you do need to check balance\n
  \   assertions right away, you can pipe through hledger again:\n\n        $ hledger
  -f a.csv print | hledger -f- print\n\n- csv: finalise and check journals generated
  from CSV (#1000)\n  Invalid transactions generated from CSV will now be rejected.\n
  \ I updated some csv tests to avoid this, except for 21, which\n  probably needs
  more cleanup.\n\n- csv: allow csv records with varying lengths, padding with empties\n
  \ Sometimes trailing empty fields are omitted entirely (including the\n  commas)
  in CSV records. (I see this in exported Google spreadsheets.)\n  Now we don't raise
  an error in this case, instead we automatically pad\n  any \"short\" records with
  empty fields. Not yet well tested.\n\n- csv: fix parsing of whitespace on line after
  an if block (fix #1120)\n\n- csv: csv reader gets balance-type directive (Dmitry
  Astapov)\n\n- csv: support generation of (un)balanced virtual postings in csv reader
  (Dmitry Astapov)\n\n\n# 1.15.2 2019-09-05\n\n- -V and -X now respect a report end
  date (set with -e or -p or date:)\n  when choosing the valuation date (which determines
  the market prices\n  used). This is how -V works in hledger 1.14 and Ledger, and
  it means\n  that -V isn't exactly equivalent to either --value=end or\n  --value=now.
  Possibly some other corner cases in valuation have been\n  fixed as well. \"Effect
  of --value on reports\" in the hledger manual\n  has been updated and is more accurate.\n\n#
  1.15.1 2019-09-02\n\n- add commodities, descriptions, diff, notes, payees commands
  to manual\n\n# 1.15 2019-09-01\n\n## General\n\n- There is a new valuation option
  `--value=TYPE[,COMM]`, with\n  backwards-compatible `-B/--cost`, `-V/--market`,
  `-X/--exchange=COMM`\n  variants. These provide control over valuation date (#329),
  and\n  inference of indirect market prices (similar to Ledger's -X) (#131).\n  Experimental.\n
  \ \n- Market valuation (-V/-X/--value) is now much faster (#999):\n\n      +-------------------------------------------++--------------+--------------+\n
  \     |                                           || hledger-1.14 | hledger-1.15
  |\n      +===========================================++==============+==============+\n
  \     | -f examples/10000x1000x10.journal bal -Y  ||         2.43 |         2.44
  |\n      | -f examples/10000x1000x10.journal bal -YV ||        44.91 |         6.48
  |\n      | -f examples/10000x1000x10.journal reg -Y  ||         4.60 |         4.15
  |\n      | -f examples/10000x1000x10.journal reg -YV ||        61.09 |         7.21
  |\n      +-------------------------------------------++--------------+--------------+\n\n-
  How date options like `-M` and `-p` interact has been updated and clarified.\n  (Jakob
  Sch√∂ttl) (#1008, #1009, #1011)\n\n- Restore `--aux-date` and `--effective` as `--date2`
  aliases (#1034).\n  These Ledger-ish spellings were dropped over the years, to improve\n
  \ `--help`'s layout. Now we support them again, as semi-hidden flags\n  (`--help`
  doesn't list them, but they are mentioned in `--date2`'s help).\n\n## commands\n\n-
  add, web: on Windows, trying to add transactions to a file path\n  containing trailing
  periods (eg `hledger add -f  Documents.\\.hledger.journal`) \n  now gives an error,
  since this could cause data loss otherwise (#1056).\n  This affects the add command
  and hledger-web's add form.\n\n- bal: --budget: don't always convert to cost.\n\n-
  bal: --budget: don't show a percentage when budgeted and actual\n  amounts are in
  different commodities.\n\n- bal/bs/bse: `-H/--historical` or `--cumulative` now
  disables `-T/--row-total` (#329).\n  Multiperiod balance reports which show end
  balances (eg, `bal -MH` or `bs -M`)\n  no longer show a Totals column, since summing
  end balances generally\n  doesn't make sense.\n\n- bs: show end date(s) in title,
  not transactions date span (#1078)\n  Compound balance reports showing ending balances
  (eg balancesheet),\n  now show the ending date (single column) or range of ending\n
  \ dates (multi column) in their title. ,, (double comma) is used\n  rather than
  - (hyphen) to suggest a sequence of discrete dates\n  rather than a continuous span.\n\n-
  close: preserve transaction prices (costs) accurately (#1035).\n  The generated
  closing/opening transactions were collapsing/misreporting\n  the costs in balances
  involving multiple costs.\n  Now, each separately-priced amount gets its own posting.\n
  \ (And only the last of these (for each commodity) gets a balance assertion.)\n
  \ Also the equity posting's amount is now always shown explicitly, \n  which in
  multicommodity situations means that multiple equity postings are shown. \n  The
  upshot is that a balance -B report will be unchanged after\n  the closing & opening
  transactions generated by the close command.\n\n- descriptions, payees, notes commands
  added (Caleb Maclennan)\n\n- diff: Gabriel Ebner's hledger-diff is now a built in
  command,\n  and https://github.com/gebner/hledger-diff is deprecated.\n\n- help:
  don't require a journal file\n\n- print: now also canonicalises the display style
  of balance assertion amounts (#1042)\n\n- reg: show negative amounts in red, like
  balance and Ledger\n\n- reg: fix `--average`, broken since 1.12 (#1003)\n\n- stats:
  show count of market prices (P directives), and the commodities covered\n\n- tags:
  add --values flag to list tag values.\n\n- tags: now runs much faster when there
  many tags\n\n## journal format\n\n- Transactions and postings generated/modified
  by periodic transaction\n  rules and/or transaction modifier rules are now marked
  with tags\n  (`generated-transaction`, `generated-posting`, `modified`) for\n  easier
  troubleshooting and filtering.\n\n## csv format\n\n- When interpolating CSV values,
  outer whitespace is now stripped.\n  This removes a potential snag in amount field
  assignments (#1051),\n  and hopefully is harmless and acceptable otherwise.\n\n-
  We no longer add inter-field spaces in CSV error messages.\n  Some CSV errors would
  show the problem record, eg:\n\n      2000-01-01,a,\"1\"\n  \n  with extra spaces
  added, eg:\n\n      the CSV record is: \"2000-01-01\", \"a\", \"1\"\n\n  which was
  inaccurate and not valid RFC-4180 CSV format.\n\n- CSV parse errors are human-readable
  again (broken since 1.11) (#1038)\n\n- CSV rules now allow the amount to be unassigned,
  if there is an\n  assignment to \"balance\" (generating a balance assignment in
  this\n  case). (#1000)\n\n\n# 1.14.2 2019-03-20\n\n- require easytest <0.3 to fix
  build issue\n\n- fix some CSV parse errors which weren't in human readable format\n\n#
  1.14.1 2019-03-01\n\n- fix missing Commodities.txt build error\n\n# 1.14 2019-03-01\n\n-
  journal: subaccount-including balance assertions have been\n  added, with syntax
  =* and ==* (experimental) (#290)\n\n- new commodities command lists commodity symbols\n\n-
  new --invert option flips sign of amounts in reports\n\n# 1.13.2 (2019/02/04)\n\n-
  print, register: restore the accidentally dropped -o, -O flags (#967)\n\n# 1.13.1
  (2019/02/02)\n\n- stop depending on here to avoid haskell-src-meta/stackage blockage.\n\n#
  1.13 (2019/02/01)\n\n- cli: reorganised commands list. Addons now have a + prefix.\n\n-
  cli: the command line help and manual section for all hledger's\n  commands are
  now consistent, and generated from the same source.\n\n- cli: comprehensive bash
  completion support is now provided (in\n  shell-completion/). See how-to in the
  Cookbook. (Jakob Sch√∂ttl)\n\n- balance --budget: budget amounts now aggregate hierarchically,
  like\n  account balances. Unbudgeted accounts can be shown with -E/--empty\n  (along
  with zero-balance accounts), and the --show-budgeted flag has\n  been dropped.  (Dmitry
  Astapov)\n\n- balance: new --transpose flag switches the rows and columns of\n  tabular
  balance reports (in txt and csv output formats). (Dmitry\n  Astapov)\n\n- close:
  generated balance assertions now have exact amounts with all\n  decimal digits,
  ignoring display precision. Also, balance assertion\n  amounts will no longer contain
  prices. (#941, #824, #958)\n\n- files: now shows up in the commands list\n\n- import:
  be silent when there's nothing to import\n\n- roi: percentages smaller than 0.01%
  are displayed as zero (Dmitry\n  Astapov)\n\n- stats, ui: correct file order is
  preserved when using --auto (#949)\n\n- journal: account directive: the account
  name can now be followed by\n  a comment on the same line\n\n- journal: account
  directive: account types for the bs/bse/cf/is\n  commands can now be set with a
  `type:` tag, whose value is `Asset`,\n  `Liability`, `Equity`, `Revenue`, `Expense`,
  `A`, `L`, `E`, `R` or\n  `X` (case-insensitive).  The previous syntax (`account
  assets A`) is\n  now deprecated.\n\n- journal: account directive: account sort codes
  like `account 1000`\n  (introduced in 1.9, deprecated in 1.11) are no longer supported.\n\n-
  journal: transaction modifiers (auto postings) can affect periodic\n  transactions
  (--auto can add postings to transactions generated with\n  --forecast). (Dmitry
  Astapov)\n\n- journal: balance assertion errors now show exact amounts with all\n
  \ decimal digits.  Previously it was possible, in case of a commodity\n  directive
  limiting the display precision, to have a balance\n  assertion error with asserted
  and actual amounts looking the\n  same. (#941)\n\n- journal: fixed a periodic transaction
  parsing failure (#942) (Dmitry\n  Astapov)\n\n# 1.12.1 (2018/12/03)\n\n-   roi:
  use math-functions lib instead of statistics,\n    be more stackage nightly compatible\n\n#
  1.12 (2018/12/02)\n\n-   install script: ensure a new-enough version of stack; more
  informative output\n\n-   build with GHC 8.6/base-4.12 (Peter Simons)\n\n-   add
  required upper bound for statistics (Samuel May)\n\n-   --anon anonymises more thoroughly
  (including linked original postings) (Moritz Kiefer)\n\n-   unbalanced transaction
  errors now include location info (Mykola Orliuk)\n\n-   accounts command: --drop
  also affects the default flat output, without needing an explicit --flat flag\n\n-
  \  accounts command: the --codes flag has been dropped\n\n-   accounts command:
  filtering by non-account-name queries now works\n\n-   add command: fix transaction
  rendering regression during data entry and in journal file\n\n-   balance command:
  fix wrongful eliding of zero-balance parent accounts in tree mode (Dmitry Astapov)\n\n-
  \  journal format, bs/bse/cf/is commands: account directives can declare account
  types (#877)\n    Previously you had to use one of the standard english account
  names\n    (assets, liabilities..) for top-level accounts, if you wanted them to\n
  \   appear in the right place in the balancesheet, balancesheetequity,\n    cashflow
  or incomestatement reports.\n\n    Now you can use your preferred account names,
  and use account directives\n    to declare which accounting class (Asset, Liability,
  Equity, Revenue or\n    eXpense) an account (and its subaccounts) belongs to, by
  writing one of\n    the letters A, L, E, R, X after the account name, after two
  or more\n    spaces. This syntax may change (see issue). Experimental.\n\n    Currently
  we allow unlimited account type declarations anywhere in the\n    account tree.
  So you could declare a liability account somewhere under\n    assets, and maybe
  a revenue account under that, and another asset account\n    even further down.
  In such cases you start to see oddities like accounts\n    appearing in multiple
  places in a tree-mode report. I have left it this\n    way for now in case it helps
  with, eg, modelling contra accounts, or\n    combining multiple files each with
  their own account type\n    declarations. (In that scenario, if we only allowed
  type declarations on\n    top-level accounts, or only allowed a single account of
  each type,\n    complications seem likely.)\n\n-   journal format: periodic transaction
  rules now require a double space separator.\n    In periodic transaction rules which
  specify a transaction description or\n    same-line transaction comment, this must
  be separated from the period\n    expression by two or more spaces, to prevent ambiguous
  parsing. Eg\n    this will parse correctly as \"monthly\" thanks to the double space:\n\n
  \       ~ monthly  In 2020 we'll end this monthly transaction.\n\n-   journal format:
  exact/complete balance assertions (Samuel May).\n    A stronger kind of balance
  assertion, written with a double equals sign,\n    asserts an account's complete
  account balance, not just the balance in\n    one commodity. (But only if it is
  a single-commodity balance, for now.)\n    Eg:\n\n        1/1\n          (a)  A
  1\n          (a)  B 1\n          (a)  0   =  A 1   ; commodity A balance assertion,
  succeeds\n          (a)  0   == A 1   ; complete balance assertion, fails\n\n-   journal
  format: account directives now allow whitespace or a comment after the account name\n\n-
  \  journal format: using \\~ for home directory in include directives now works
  (#896) (Mykola Orliuk)\n\n-   journal format: prevent misleading parse error messages
  with cyclic include directives (#853) (Alex Chen)\n\n-   journal format: transaction
  modifier multipliers handle total-priced amounts correctly (#928).\n    Multipliers
  (*N) in transaction modifier rules did not multiply\n    total-priced amounts properly.
  Now the total prices are also multiplied,\n    keeping the transaction balanced.\n\n-
  \  journal format: do amount inference/balance assignments/assertions before transaction
  modifiers (#893, #908) (Jesse Rosenthal)\n    Previously, transaction modifier (auto
  postings) rules were applied\n    before missing amounts were inferred. This meant
  amount multipliers could\n    generate too many missing-amount postings, making
  the transaction\n    unbalanceable (#893).\n\n    Now, missing amount inference
  (and balance assignments, and balance\n    assertions, which are interdependent)
  are done earlier, before\n    transaction modifier rules are applied (#900, #903).\n\n
  \   Also, we now disallow the combination of balance assignments and\n    transaction
  modifier rules which both affect the same account, which\n    could otherwise cause
  confusing balance assertion failures (#912).\n    (Because assignments now generate
  amounts to satisfy balance assertions\n    before transaction modifier rules are
  applied (#908).)\n\n-   journal format: periodic transaction rules are now aware
  of Y default year directives. (#892)\n    Ie when a default year Y is in effect,
  they resolve partial or relative\n    dates using Y/1/1 as the reference date, rather
  than today's date.\n\n# 1.11.1 (2018/10/06)\n\n-   fix wrong transaction rendering
  in balance assertion errors and when\n    using the add command\n\n# 1.11 (2018/9/30)\n\n-
  \  The default display order of accounts is now influenced by\n    the order of
  account directives. Accounts declared by account\n    directives are displayed first
  (top-most), in declaration order,\n    followed by undeclared accounts in alphabetical
  order. Numeric\n    account codes are no longer used, and are ignored and considered\n
  \   deprecated.\n\n    So if your accounts are displaying in a weird order after
  upgrading,\n    and you want them alphabetical like before, just sort your account\n
  \   directives alphabetically.\n\n-   Account sorting (by name, by declaration,
  by amount) is now more\n    robust and supported consistently by all commands (accounts,\n
  \   balance, bs..) in all modes (tree & flat, tabular & non-tabular).\n\n-   close:
  new --opening/--closing flags to print only the opening or\n    closing transaction\n\n-
  \  files: a new command to list included files\n\n-   prices: query arguments are
  now supported. Prices can be filtered by\n    date, and postings providing transaction
  prices can also be filtered.\n\n-   rewrite: help clarifies relation to print --auto
  (#745)\n\n-   roi: a new command to compute return on investment, based on hledger-irr\n\n-
  \  test: has more verbose output, more informative failure messages,\n    and no
  longer tries to read the journal\n\n-   csv: We use a more robust CSV lib (cassava)
  and now support\n    non-comma separators, eg --separator ';' (experimental, this
  flag\n    will probably become a CSV rule) (#829)\n\n-   csv: interpolated field
  names in values are now properly case insensitive, so\n    this works:\n\n        fields
  \ ...,Transaction_Date,...\n        date %Transaction_Date\n\n-   journal: D (default
  commodity) directives no longer break multiplier\n    amounts in transaction modifiers
  (AKA automated postings) (#860)\n\n-   journal: \"Automated Postings\" have been
  renamed to \"Transaction Modifiers\".\n\n-   journal: transaction comments in transaction
  modifier rules are now parsed correctly. (#745)\n\n-   journal: when include files
  form a cycle, we give an error instead\n    of hanging.\n\n-   upper-case day/month
  names in period expressions no longer give an error (#847, #852)\n\n# 1.10 (2018/6/30)\n\n-
  \  journal: many parse error messages have become more informative, and\n    some
  now show the source line and error location.\n\n-   journal: ;tag: is no longer
  parsed as a tag named \";tag\" (#655)\n\n-   journal: transaction price amounts
  having their own price amounts is\n    now a parse error\n\n-   journal: amounts
  with space as digit group separator and trailing whitespace\n    now parse correctly
  (#780)\n\n-   journal: in amounts containing digits and a single space, the space\n
  \   is now interpreted as a digit group separator, not a decimal separator (#749)\n\n-
  \  journal: in commodity/format/D directives, the amount must now include a decimal
  separator.\n\n    When more precise control is needed over number parsing, our\n
  \   recommended solution is commodity directives. Commodity directives\n    that
  don't specify the decimal separator leave things ambiguous,\n    increasing the
  chance of misparsing numbers. In some cases it could\n    cause amounts with a decimal
  point to be parsed as if with a digit\n    group separator, so 1.234 became 1234.\n\n
  \   It seems the simple and really only way to do this reliably is to require\n
  \   an explicit decimal point character. Most folks probably do this already.\n
  \   Unfortunately, it makes another potential incompatibility with ledger and\n
  \   beancount journals. But the error message will be clear and easy to\n    work
  around.\n\n-   journal: directives currently have diverse and somewhat tricky\n
  \   semantics, especially with multiple files. The manual now describes\n    their
  behaviour precisely.\n\n-   journal: `alias` and `apply account` directives now
  affect `account` directives (#825)\n\n-   journal: periodic transactions can now
  have all the usual transaction fields\n    (status mark, code, description, comment),
  for generating more expressive\n    forecast transactions.\n\n-   journal: forecast
  transactions now have the generating period\n    expression attached as a tag named
  \"recur\".\n\n-   journal: periodic transactions now start on the first instance
  of the\n    recurring date, rather than the day after the last regular transaction
  (#750)\n\n-   journal: periodic transaction rules now allow period expressions relative
  to today's date\n\n-   csv: amount-in/amount-out errors are more detailed\n\n-   balance:
  --drop is now ignored when not in flat mode,\n    rather than producing a corrupted
  report (#754)\n\n-   budget: --drop now preserves the <unbudgeted> top-level account
  in --budget reports\n\n-   register: in CSV output, the code field is now included
  (#746)\n\n-   smart dates now allow the YYYYMM format, and are better documented\n\n-
  \  use hledger-lib 1.10\n\n# 1.9.1 (2018/4/30)\n\n-   use hledger-lib 1.9.1\n\n-
  \  budget (balance --budget): monthly columns are displayed in the\n    proper order.
  This fixes a regression in 1.9.\n\n-   budget: budgets can be built from periodic
  transactions with\n    different intervals again. In 1.9, budgets were restricted
  to a\n    single interval, but this was a mistake. This restores the 1.5\n    behaviour.\n\n-
  \  budget: budget reports are more intuitive and much less likely to\n    produce
  no output.\n\n-   budget: when no report interval is specified, a budget report
  for\n    the whole journal period is shown.\n\n-   budget: periodic transactions
  and the requested report period can\n    each have their own start/end dates, and
  the resulting report will\n    span the union of those periods, showing zeroes where
  data is\n    missing.\n\n-   budget: total row and total/average columns are now
  calculated correctly\n\n-   budget: actual, percentage, and goal amounts are now
  aligned in\n    columns for better readability (usually, unless numbers get huge).\n\n-
  \  budget: combining --budget and --sort-amount is not yet supported\n    and now
  gives an error.\n\n-   csv: handle \"-%amount\" in a rule when the CSV amount is
  parenthesised (#736)\n\n-   journal: automated postings are now generated early,
  before journal finalisation,\n    so they are present for amount inference, transaction
  balancing, and balance assertions\n    (#729)\n\n-   journal: automated postings
  are now inserted right after the posting that triggered them\n    (#729)\n\n-   cli:
  command-line account aliases are now applied early, before journal finalisation,\n
  \   so they are equivalent to alias directives in the journal (#730)\n\n-   journal:
  inferred amounts now have the appropriate standard amount style applied\n    (setting
  the precision correctly, eg). (#737)\n\n-   journal: when checking for balanced
  transactions, amount styles declared with\n    commodity directives are also used
  (previously only inferred amount styles were).\n\n# 1.9 (2018/3/31)\n\n-   support
  ghc 8.4, latest deps\n\n-   journal: account directives can define a numeric account
  code to\n    customize sorting. bal/bs/cf/is will sort accounts by account code,\n
  \   if any, then account name.\n\n-   journal: support scientific number notation
  (#704, #706)\n\n-   csv: reading a CSV file containing no records is no longer an
  error\n\n-   cli: when the system text encoding is UTF-8, ignore any UTF-8 BOM\n
  \   prefix found when reading files. (Paypal's new CSV has this BOM\n    prefix,
  causing a confusing parse error.)\n\n-   cli: tabular reports no longer have a trailing
  blank line added.\n    (This allows omitting the \">=0\" delimiters in our functional
  tests,\n    making them easier to read and maintain.)\n\n-   acc: the accounts command
  now has --declared and --used flags\n\n-   bal: the --invert flag flips all signs\n\n-
  \  bal: --drop now works with CSV output\n\n-   bal/bs/bse/cf/is: show overall report
  span in title\n\n-   bal/bs/bse/cf/is: show short month names as headings in monthly
  reports\n\n-   bal/bs/bse/cf/is: these commands can now generate HTML output\n\n-
  \  bal/bs/is/cf: drop short name and indent fields from multicolumn CSV\n\n-   bs/bse/cf/is:
  these, the \"financial statement\" commands, now show\n    normal income, liability
  and equity balances as positive numbers.\n    Negative numbers now indicate a contra-balance
  (eg an overdrawn\n    checking account), a net loss, or a negative net worth. This
  makes\n    these reports more like conventional financial statements, and easier\n
  \   to read and share with others. (Other commands, like balance, have not\n    changed.)
  (experimental)\n\n-   bs/cf/is: always show a tabular report, even with no report\n
  \   interval. Previously you would get a simple borderless report like\n    the
  original balance command. Less code, fewer bugs.\n\n-   bs/bse/cf/is: in CSV output,
  don't repeat the headings row for each subreport\n\n-   budget: warn that CSV output
  with bal --budget is unimplemented\n\n-   budget: bal --budget shows budget goals
  even with no or zero actual amounts.\n    Makes budget reports more intuitive, at
  the cost of a temporary hack\n    which may misorder columns in some cases (if actual
  and budget\n    activity occur in a different range of columns).\n\n-   budget:
  --budget uses only periodic txns with the selected interval.\\\n    Budgets with
  different interval, eg a daily and weekly budget, are independent.\n\n-   budget:
  show mostly fixed-width columns for readability\n\n-   budget: fix bug where a budget
  report could include budget goals\n    ending on the day before the report start
  date (splitSpan issue)\n\n-   close: the equity command has been renamed to close.
  It now ignores\n    any begin date (it always closes historical end balances). It
  also\n    ignores --date2.\n\n# 1.5 (2017/12/31)\n\n-   --auto adds Ledger-style
  automated postings to transactions (Dmitry Astapov, Mykola Orliuk)\n\n-   --forecast
  generates Ledger-style periodic transactions in the future (Dmitry Astapov, Mykola
  Orliuk)\n\n-   -V/--value uses today's market prices by default, not those of last
  transaction date. #683, #648\n\n-   add: suggest implied (parent) and declared (by
  account directives) account names also\n\n-   bal: --budget shows performance compared
  to budget goals defined\n    with periodic transactions. Accounts with budget goals
  are\n    displayed folded (depth-clipped) at a depth matching the budget\n    specification.
  Unbudgeted accounts are hidden, or with\n    --show-unbudgeted, shown at their usual
  depth. (Dmitry Astapov)\n\n-   import: the output of --dry-run is now valid journal
  format\n\n-   print: -B shows converted amounts again, as in 1.1, even without\n
  \   -x. #551 (Mykola Orliuk, Simon Michael)\n\n-   tag: the first argument now filters
  tag names, additional arguments\n    filter transactions (#261)\n\n-   remove upper
  bounds on all but hledger* and base (experimental)\n\n# 1.4 (2017/9/30)\n\n-   cli:
  a @FILE argument reads flags & args from FILE, one per line\n\n-   cli: reorganized
  commands list, added some new command aliases:\n\n    -   accounts: a\n    -   balance:
  b\n    -   print: p, txns\n    -   register: r\n\n-   cli: accept -NUM as a shortcut
  for --depth=NUM (eg: -2)\n\n-   cli: improve command-line help for --date2 (#604)\n\n-
  \  cli: make --help and -h the same, drop --man and --info for now (#579)\n\n-   help:
  offers multiple formats, accepts topic substrings.\n    The separate info/man commands
  have been dropped. help now\n    chooses an appropriate documentation format as
  follows:\n\n    -   it uses info if available,\n    -   otherwise man if available,\n
  \   -   otherwise $PAGER if defined,\n    -   otherwise less if available,\n    -
  \  otherwise it prints on stdout\n    -   (and it always prints on stdout when piped).\n\n
  \   You can override this with the `--info`/`--man`/`--pager`/`--cat` flags.\n    (#579)\n\n-
  \  bal/bs/cf/is: --sort-amount/-S sorts by largest amount instead of\n    account
  name\n\n-   bs/cf/is: support --output-file and --output-format=txt\\|csv\n    The
  CSV output should be reasonably ok for dragging into a\n    spreadsheet and reformatting.\n\n-
  \  bal/bs/cf/is: consistent double space between columns, consistent\n    single
  final blank line. Previously, amounts wider than the column\n    headings would
  be separated by only a single space.\n\n-   bs/is: don't let an empty subreport
  disable the grand totals (fixes #588)\n\n-   cf: exclude asset accounts with \":fixed\"
  in their name (Christian G. Warden, Simon Michael, #584)\n\n-   new balancesheetequity
  command: like balancesheet but also shows\n    equity accounts (Nicholas Niro)\n\n-
  \  new import command: adds new transactions seen in one or more input\n    files
  to the main journal file\n\n-   print: --new shows only transactions added since
  last time\n    (saves state in .latest.JOURNALFILE file)\n\n-   new tags command:
  lists tags in matched transactions\n\n-   most addons formerly shipped in bin/ are
  now builtin commands. These\n    include: check-dates, check-dupes, equity, prices,
  print-unique,\n    register-match, rewrite.\n\n-   refactor: new Commands module
  and subdirectory.\n    Builtin commands are now gathered more tightly in a single
  module,\n    Hledger.Cli.Commands, facilitating change. The legacy \"convert\"\n
  \   command has been dropped.\n\n-   refactor: BalanceView -> CompoundBalanceCommand\n\n-
  \  deps: drop support for directory < 1.2\n\n-   deps: allow ansi-terminal 0.7\n\n-
  \  deps: drop oldtime flag, require time 1.5+\n\n-   deps: simplify shakespeare
  bounds\n\n-   deps: remove ghc < 7.6 support\n\n# 1.3.1 (2017/8/25)\n\n-   bs/is:
  don't let an empty subreport disable the grand totals (#588)\n\n-   allow megaparsec
  6 (#594)\n\n-   allow megaparsec-6.1 (Hans-Peter Deifel)\n\n-   restore upper bounds
  on hledger packages\n\n# 1.3 (2017/6/30)\n\nThe \"uncleared\" transaction/posting
  status, and associated UI flags\nand keys, have been renamed to \"unmarked\" to
  remove ambiguity and\nconfusion. This means that we have dropped the `--uncleared`
  flag,\nand our `-U` flag now matches only unmarked things and not pending\nones.
  See the issue and linked mail list discussion for more\nbackground. (#564)\n\nAlso
  the -P short flag has been added for --pending, and the -U/-P/-C\nflags can be combined.\n\nbs/is:
  fix \"Ratio has zero denominator\" error (#535)\n\nbs/is/cf: fix --flat (#552) (Justin
  Le, Simon Michael)\n\nbal/bs/is/cf: show negative amounts in red (Simon Michael,
  Justin Le).\nThese commands now shows negative amounts in red, when hledger detects\nthat
  ANSI codes are supported, (ie when TERM is not \"dumb\" and stdout\nis not being
  redirected or piped).\n\nprint: show pending mark on postings (fixes #563).\nA pending
  mark on postings is now displayed, just like a cleared mark.\nAlso there will now
  be a space between the mark and account name.\n\nprint: amounts are now better aligned,
  eg when there are posting\nstatus marks or virtual postings\n\n# 1.2 (2017/3/31)\n\n##
  CLI\n\n\"hledger\" and \"hledger -h\" now print a better organised commands list\nand
  general usage message respectively (#297).\n\nThe common reporting flags can now
  be used anywhere on the command line.\n\nFixed deduplication of addons in commands
  list.\n\nFixed ugly stack traces in command line parse error messages.\n\nThe -V/--value
  flag is now a global report flag, so it works with\nbalance, print, register, balancesheet,
  incomestatement, cashflow,\netc. (Justin Le)\n\nThe `--pivot` global reporting option
  replaces all account names with\nthe value of some other field or tag. It has been
  improved, eg:\n\n-   we don't add the field/tag name name as a prefix\n-   when
  pivoting on a tag, if the tag is missing we show a blank\n    (rather than showing
  mixed tag values and account names)\n-   a pipe character delimiter may be used
  in descriptions to get a more accurate\n    and useful payee report (`hledger balance
  --pivot payee`)\n\noptions cleanups\n\n## Addons\n\nEasier installation:\nmove add-ons
  and example scripts to bin/,\nconvert to stack scripts,\nadd a build script to install
  all deps,\nadd some functional tests,\ntest add-ons with Travis CI,\nadd installation
  docs to download page.\n\nImproved docs:\nall addons now contain their own documentation.
  Most of them (all but\nhledger-budget) use a new reduced-boilerplate declaration
  format\nand can show short (-h) and long (--help) command line help.\n(Long help
  is declared with pre and postambles to the generated\noptions help, short help is
  that truncated at the start of the hledger\ncommon flags.)\n\n`hledger` now shows
  a cleaner list of addon commands, showing only the\ncompiled version of an addon
  when both source and compiled versions\nare in $PATH. (Addons with .exe extension
  or no extension are\nconsidered compiled. Modification time is not checked, ie,
  an old\ncompiled addon will override a newer source version. If there are\nthree
  or more versions of an addon, all are shown. )\n\nNew addons added/included:\n\n-
  \  autosync - example symlink to ledger-autosync\n-   budget - experimental budget
  reporting command supporting Ledger-like periodic transactions and automated transactions
  (Mykola Orliuk)\n-   chart - pie-chart-generating prototype, a repackaging of the
  old hledger-chart tool\n-   check - more powerful balance assertions (Michael Walker)\n-
  \  check-dupes - find accounts sharing the same leaf name (Stefano Rodighiero)\n-
  \  prices - show all market price records (Mykola Orliuk)\n-   register-match -
  a helper for ledger-autosync's deduplication, finds best match for a transaction
  description\n\nThe equity command now always generates a valid journal transaction,\nhandles
  prices better, and adds balance assertions (Mykola Orliuk).\n\nThe rewrite command
  is more robust and powerful (Mykola Orliuk):\n\n-   in addition to command-line
  rewrite options, it understands rewrite rules\n    defined in the journal, similar
  to Ledger's automated transactions (#99).\n    Eg:\n\n        = ^income\n            (liabilities:tax)
  \ *.33\n\n        = expenses:gifts\n            budget:gifts  *-1\n            assets:budget
  \ *1\n\n-   it can generate diff output, allowing easier review of the proposed\n
  \   changes, and safe modification of original journal files (preserving\n    file-level
  comments and directives). Eg:\n\n        hledger-rewrite --diff Agency --add-posting
  'Expenses:Taxes  *0.17' | patch\n\n-   rewrites can affect multiple postings in
  a transaction, not just one.\n\n-   posting-specific dates are handled better\n\n##
  balance\n\nA new --pretty-tables option uses unicode characters for rendering\ntable
  borders in multicolumn reports (#522) (Moritz Kiefer)\n\n## balancesheet/cashflow/incomestatement\n\nThese
  commands are now more powerful, able to show multicolumn reports\nand generally
  having the same features as the balance command. (Justin Le)\n\nbalancesheet has
  always ignored a begin date specified with a `-b` or\n`-p` option; now it also ignores
  a begin date specified with a `date:`\nquery. (Related discussion at #531)\n\n##
  print\n\nThe output of print is now always a valid journal (fixes #465) (Mykola
  Orliuk).\n\nprint now tries to preserves the format of implicit/explicit balancing\namounts
  and prices, by default. To print with all amounts explicit,\nuse the new `--explicit/-x`
  flag (fixes #442). (Mykola Orliuk)\n\nDon't lose the commodity of zero amounts/zero
  balance assertions (fixes #475) (Mykola Orliuk)\n\n## Misc\n\nFix a regression in
  the readability of option parsing errors (#478) (Hans-Peter Deifel)\n\nFix an example
  in Cli/Main.hs (Steven R. Baker)\n\nAllow megaparsec 5.2 (#503)\n\n# 1.1 (2016/12/31)\n\n##
  balance\n\n-   with -V, don't ignore market prices in the future (#453, #403)\n\n-
  \  with -V and multiple same-date market prices, use the last parsed not the highest
  price (#403)\n\n## misc\n\n-   fix non-existent \"oldtime\" dependency (#431)\n\n-
  \  extra/hledger-equity.hs now generates valid journal format when there are multiple
  commodities\n\n# 1.0.1 (2016/10/27)\n\n-   allow megaparsec 5.0 or 5.1\n\n-   fix
  benchmark build failure (#423)\n\n# 1.0 (2016/10/26)\n\n## add\n\n-   suggest only
  one commodity at a time as default amount (#383)\n\n    (since we currently can't
  input more than one at a time)\n\n## balance\n\n-   added --change flag for consistency\n\n-
  \  -H/--historical now also affects single-column balance reports with a start date
  (#392).\n\n    This has the same effect as just omitting the start date, but adds
  consistency.\n\n-   in CSV output, render amounts in one-line format (#336)\n\n##
  balancesheet\n\n-   fix an infinite loop (#393)\n\n## print\n\n-   in CSV output,
  fix and rename the transaction id field\n\n## register\n\n-   fix a sorting regression
  with --date2 (#326)\n\n-   --average/-A is now affected by --historical/-H\n\n-
  \  added --cumulative flag for consistency\n\n-   in CSV output, include the transaction
  id and rename the total field (#391)\n\n## stats\n\n-   fixed an issue with ordering
  of include files\n\n## misc\n\n-   --pivot option added, groups postings by tag
  instead of account (#323) (Malte Brandy)\n\n-   --anon option added, obfuscates
  account names and descriptions (#265) (Brian Scott)\n\n    (Only affects the hledger
  tool, for now.)\n\n-   try to clarify balance/register's various report modes,\n\n
  \   kinds of \"balance\" displayed, and related options and language.\n\n-   with
  multiple --change/--cumulative/--historical flags, use the last one instead of complaining\n\n-
  \  don't add the \"d\" suffix when displaying day periods\n\n-   stack-ify extra/hledger-rewrite.hs\n\n##
  misc\n\n-   added GHC 8 support, dropped GHC 7.6 and 7.8 support.\n\n    GHC 7.8
  support could be restored with small code changes and a maintainer.\n\n-   a cabal.project
  file has been added (Moritz Kiefer)\n\n-   use hpack for maintaining cabal files
  (#371).\n\n    Instead of editing cabal files directly, we now edit the less\n    verbose
  and less redundant package.yaml files and let stack (or\n    hpack) update the cabal
  files. We commit both the .yaml and\n    .cabal files.\n\n-   clean up some old
  cabal flags\n\n-   tools/simplebench has been spun off as the quickbench package.\n\n-
  \  add Appveyor CI builds, provide up-to-date binaries for Windows\n\n-   extra:
  add a bunch of CSV rules examples\n\n## docs\n\n-   the website is simpler, clearer,
  and more mobile-friendly.\n\n    Docs are now collected on a single page and organised
  by type: getting started, reference, more.\n\n-   reference docs have been split
  into one manual for each executable and file format.\n\n    This helps with maintenance
  and packaging and also should make it\n    easier to see what's available and to
  read just what you need.\n\n-   manuals are now provided in html, plain text, man
  and info formats\n\n    generated from the same source by a new Shake-based docs
  build system. (#292)\n\n-   versioned manuals are provided on the website, covering
  recent releases and the latest dev version (#385, #387)\n\n-   manuals are built
  in to the hledger executables, allowing easy offline reading on all platforms.\n\n
  \       PROG -h              shows PROG's command-line usage\n        PROG --help
  \         shows PROG's manual (fixed width)\n        PROG --man           shows
  PROG's manual with man (formatted/paged)\n        PROG --info          shows PROG's
  manual with info (hypertext)\n        hledger help [TOPIC] shows any manual\n        hledger
  man  [TOPIC] shows any manual with man\n        hledger info [TOPIC] shows any manual
  with info\n\n-   the general and reporting options are now listed in all executable
  manuals.\n\n    We assume any of them which are unsupported are harmlessly ignored.\n\n-
  \  demo.hledger.org is using beancount's example journal.\n\n    This is the somewhat
  realistic example journal from the beancount\n    project, tweaked for hledger.\n\n-
  \  minor copyedits (jungle-boogie)\n\n## cli\n\n-   parsing multiple input files
  is now robust.\n\n    When multiple -f options are provided, we now parse each file\n
  \   individually rather than just concatenating them, so they can\n    have different
  formats (#320). Note this also means that\n    directives (like \\`Y\\` or \\`alias\\`)
  no longer carry over from one\n    file to the next.\n\n-   -I has been added as
  the short flag for --ignore-assertions\n\n    (this is different from Ledger's CLI,
  but useful for hledger-ui).\n\n-   parsing an argument-less --debug option is more
  robust\n\n0.27 (2015/10/30)\n\nAccount aliases:\n\n-   Regular expression account
  aliases are now fast enough that you can\n    use lots of them without slowing things
  down. They now take\n    O(aliases x accounts) time, instead of O(aliases x transactions);\n
  \   also, regular expressions are no longer recompiled unnecessarily.\n\nDocumentation:\n\n-
  \  Each hledger package now includes one or more man pages, generated\n    from
  markdown by the mighty pandoc. Currently there are six: one\n    for each main executable
  and each input file format. Currently these\n    somewhat duplicate the manual on
  the website; this will be resolved\n    somehow. (#282).\n\n-   The site is now
  built with hakyll-std, a generic hakyll script.\n\n-   hledger once again has a
  HCAR entry.\n\nTools:\n\n-   The hledger cabal files are now generated from package.yaml
  files by\n    hpack, in principle, removing a lot of error-prone duplication and\n
  \   boilerplate. (In practice, both files are being updated manually\n    for the
  moment, until hpack supports flags and conditional blocks.)\n\n-   Time/allocation
  and heap profiling is working again, and easier:\n\n    -   `make quickprof-CMD`
  generates a profile for CMD, which runs\n        against one of the sample journals.
  (CMD must be one word,\n        enclosing in double quotes isn't working here for
  some reason).\n\n    -   `make quickheap-CMD` generates a heap profile for CMD,
  in\n        hledgerprof.ps, and tries to open it in a viewer (currently the\n        mac-friendly
  \"open\" executable, so you may need to adjust this in\n        the makefile). As
  with quickprof, CMD must be one word and runs\n        against one of the sample
  journals.\n\n    -   `make hledgerprof` builds the hledgerprof executable used for\n
  \       time/allocation profiling. `make hledgercov` builds the hledgercov\n        executable
  used for coverage reports.\n\n-   Travis CI now tests the build on each github push
  and announces\n    status changes by email and on #hledger.\n\nJournal format:\n\n-
  \  Dates must now begin with a digit (not /, eg).\n\n-   The comment directive longer
  requires an end comment, and will\n    extend to the end of the file(s) without
  it.\n\nCommand-line interface:\n\n-   Output (balance reports, register reports,
  print output etc.)\n    containing wide characters, eg chinese/japanese/korean characters,\n
  \   should now align correctly, when viewed in apps and fonts that show\n    wide
  characters as double width (#242).\n\n-   The argument for --depth or depth: must
  now be positive.\n\nadd:\n\n-   Journal entries are now written with all amounts
  explicit, to avoid\n    losing price info (#283).\n\n-   Fixed a bug which sometimes
  (when the same letter pair was repeated)\n    caused it not to pick the most similar
  past transaction for defaults.\n\nbalance:\n\n-   There is now a -V/--value flag
  to report current market value (as in Ledger).\n    It converts all reported amounts
  using their \"default market price\".\n    \"Market price\" is the new name for
  \"historical prices\", defined with the P directive.\n    The default market price
  for a commodity is the most recent one found in the journal on or before the report
  end date.\n\n    Unlike Ledger, hledger's -V uses only the market prices recorded\n
  \   with P directives; it does not use the \"transaction prices\"\n    recorded
  as part of posting amounts (which are used by -B/--cost).\n    Also, using both
  -B and -V at the same time is supported.\n\n-   Fixed a bug in amount normalization
  which caused amount styles\n    (commodity symbol placement, decimal point character,
  etc.) to be\n    lost in certain cases (#230, #276).\n\n-   The balance command's
  --format option can now adjust the rendering\n    style of multi-commodity amounts,
  if you begin the format string\n    with one of:\n\n        %_  - renders amounts
  on multiple lines, bottom-aligned (the default)\n        %^  - renders amounts on
  multiple lines, top-aligned\n        %,  - renders amounts on one line, comma-separated\n\n-
  \  The balance report's final total (and the line above it) now adapt\n    themselves
  to a custom --format.\n\nprint:\n\n-   The --match option prints the journal entry
  that best matches a\n    description (ie whose description field is most similar
  to the value\n    given, and if there are several equally similar, the most recent).\n
  \   This was originally an add-on I used to guess account names for\n    ledger-autosync.
  It's nice for quickly looking up a recent\n    transaction from a guessed or partial
  description.\n\n-   print now always right-aligns the amounts in an entry, even
  when\n    they are wider than 12 characters. (If there is a price, it's\n    considered
  part of the amount for right-alignment.)\n\nregister:\n\n-   Amount columns now
  resize automatically, using more space if it's\n    needed and available.\n\n0.26
  (2015/7/12)\n\nAccount aliases:\n\n-   Account aliases are once again non-regular-expression-based,
  by default. (#252)\n\n    The regex account aliases added in 0.24 trip up people
  switching between\n    hledger and Ledger. (Also they are currently slow).\n\n    This
  change makes the old non-regex aliases the default; they are\n    unsurprising,
  useful, and pretty close in functionality to Ledger's.\n\n    The new regex aliases
  are still available; they must be enclosed\n    in forward slashes. (Ledger effectively
  ignores these.)\n\nJournal format:\n\n-   We now parse, and also print, journal
  entries with no postings, as\n    proposed on the mail lists. These are not well-formed
  General\n    Journal entries/transactions, but here is my rationale:\n\n    -   Ledger
  and beancount parse them\n    -   if they are parsed, they should be printed\n    -
  \  they provide a convenient way to record (and report) non-transaction events\n
  \   -   they permit more gradual introduction and learning of the concepts.\n        So
  eg a beginner can keep a simple journal before learning about accounts and postings.\n\n-
  \  Trailing whitespace after a `comment` directive is now ignored.\n\nCommand-line
  interface:\n\n-   The -f/file option may now be used multiple times.\n    This is
  equivalent to concatenating the input files before running hledger.\n    The add
  command adds entries to the first file specified.\n\nQueries:\n\n-   real: (no argument)
  is now a synonym for real:1\n\n-   tag: now matches tag names with a regular expression,
  like most other queries\n\n-   empty: is no longer supported, as it overlaps a bit
  confusingly with\n    amt:0. The --empty flag is still available.\n\n-   You can
  now match on pending status (#250)\n\n    A transaction/posting status of ! (pending)
  was effectively equivalent\n    to * (cleared). Now it's a separate state, not matched
  by --cleared.\n    The new Ledger-compatible --pending flag matches it, and so does\n
  \   --uncleared.\n\n    The relevant search query terms are now status:*, status:!
  and\n    status: (the old status:1 and status:0 spellings are deprecated).\n\n    Since
  we interpret --uncleared and status: as \"any state except cleared\",\n    it's
  not currently possible to match things which are neither cleared\n    nor pending.\n\nactivity:\n\n-
  \  activity no longer excludes 0-amount postings by default.\n\nadd:\n\n-   Don't
  show quotes around the journal file path in the \"Creating...\"\n    message, for
  consistency with the subsequent \"Adding...\" message.\n\nbalancesheet:\n\n-   Accounts
  beginning with \"debt\" or now also recognised as liabilities.\n\nprint:\n\n-   We
  now limit the display precision of inferred prices. (#262)\n\n    When a transaction
  posts to two commodities without specifying the\n    conversion price, we generate
  a price which makes it balance (cf\n    http://hledger.org/manual.html#prices).
  The print command showed\n    this with full precision (so that manual calculations
  with the\n    displayed numbers would look right), but this sometimes meant we\n
  \   showed 255 digits (when there are multiple postings in the\n    commodity being
  priced, and the averaged unit price is an\n    irrational number). In this case
  we now set the price's display\n    precision to the sum of the (max) display precisions
  of the\n    commodities involved. An example:\n\n          hledgerdev -f- print\n
  \         <<<\n          1/1\n              c    C 10.00\n              c    C 11.00\n
  \             d  D -320.00\n          >>>\n          2015/01/01\n              c
  \ C 10.00 @ D 15.2381\n              c  C 11.00 @ D 15.2381\n              d     D
  -320.00\n\n          >>>=0\n\n    There might still be cases where this will show
  more price decimal\n    places than necessary.\n\n-   We now show inferred unit
  prices with at least 2 decimal places.\n\n    When inferring prices, if the commodities
  involved have low\n    display precisions, we don't do a good job of rendering\n
  \   accurate-looking unit prices. Eg if the journal doesn't use any\n    decimal
  places, any inferred unit prices are also displayed with\n    no decimal places,
  which makes them look wrong to the user. Now,\n    we always give inferred unit
  prices a minimum display precision of\n    2, which helps a bit.\n\nregister:\n\n-
  \  Postings with no amounts could give a runtime error in some obscure case, now
  fixed.\n\nstats:\n\n-   stats now supports -o/--outputfile, like register/balance/print.\n-
  \  An O(n\\^2) performance slowdown has been fixed, it's now much faster on large
  journals.\n\n        +--------------------------------------++--------+--------+\n
  \       |                                      ||   0.25 |   0.26 |\n        +======================================++========+========+\n
  \       | -f data/100x100x10.journal     stats ||   0.10 |   0.16 |\n        | -f
  data/1000x1000x10.journal   stats ||   0.45 |   0.21 |\n        | -f data/10000x1000x10.journal
  \ stats ||  58.92 |   2.16 |\n        +--------------------------------------++--------+--------+\n\nMiscellaneous:\n\n-
  \  The June 30 day span was not being rendered correctly; fixed. (#272)\n\n-   The
  bench script invoked by \"cabal bench\" or \"stack bench\" now runs\n    some simple
  benchmarks.\n\n    You can get more accurate benchmark times by running with --criterion.\n
  \   This will usually give much the same numbers and takes much longer.\n\n    Or
  with --simplebench, it benchmarks whatever commands are\n    configured in bench/default.bench.
  This mode uses the first\n    \"hledger\" executable in $PATH.\n\n-   The deprecated
  shakespeare-text dependency has been removed more thoroughly.\n\n0.25.1 (2015/4/29)\n\n-
  \  timelog: support the description field (#247)\n\n0.25 (2015/4/7)\n\n-   GHC 7.10
  compatibility (#239)\n\n-   build with terminfo support on POSIX systems by default\n\n
  \   On non-windows systems, we now build with terminfo support by\n    default,
  useful for detecting terminal width and other things.\n\n    This requires the C
  curses dev libraries, which makes POSIX\n    installation slightly harder; if it
  causes problems you can\n    disable terminfo support with the new `curses` cabal
  flag, eg:\n    cabal install -f-curses ... (or cabal might try this\n    automatically,
  I'm not sure).\n\n-   register: use the full terminal width, respect COLUMNS, allow
  column width adjustment\n\n    On POSIX systems, register now uses the full terminal
  width by\n    default. Specifically, the output width is set from:\n\n    1.  a
  --width option\n    2.  or a COLUMNS environment variable (NB: not the same as a
  bash shell var)\n    3.  or on POSIX (non-windows) systems, the current terminal
  width\n    4.  or the default, 80 characters.\n\n    Also, register's --width option
  now accepts an optional\n    description column width following the overall width
  (--width\n    WIDTH\\[,DESCWIDTH\\]). This also sets the account column width, since\n
  \   the available space (WIDTH-41) is divided up between these two\n    columns.
  Here's a diagram:\n\n          <--------------------------------- width (W) ---------------------------------->\n
  \         date (10)  description (D)       account (W-41-D)     amount (12)   balance
  (12)\n          DDDDDDDDDD dddddddddddddddddddd  aaaaaaaaaaaaaaaaaaa  AAAAAAAAAAAA
  \ AAAAAAAAAAAA\n\n    Examples:\n\n          $ hledger reg                 # use
  terminal width on posix\n          $ hledger reg -w 100          # width 100, equal
  description/account widths\n          $ hledger reg -w 100,40       # width 100,
  wider description\n          $ hledger reg -w $COLUMNS,100 # terminal width and
  set description width\n\n-   balance: new -T/--row-total and -A/--average options\n\n
  \   In multicolumn balance reports, -T/--row-total now shows a row totals\n    column
  and -A/--average shows a row averages column.\n    This helps eg to see monthly
  average expenses (hledger bal \\^expenses -MA).\n\n    NB our use of -T deviates
  from Ledger's UI, where -T sets a custom\n    final total expression.\n\n-   balance:
  -N is now short for --no-total\n-   balance: fix partially-visible totals row with
  --no-total\n\n    A periodic (not using --cumulative or --historical) balance report\n
  \   with --no-total now hides the totals row properly.\n\n-   journal, csv: comment
  lines can also start with *\n\n    As in Ledger. This means you can embed emacs
  org/outline-mode nodes in\n    your journal file and manipulate it like an outline.\n\n0.24.1
  (2015/3/15)\n\n-   journal: fix balance accumulation across assertions (#195)\n\n
  \   A sequence of balance assertions asserting first one commodity, then\n    another,
  then the first again, was not working.\n\n-   timelog: show hours with two decimal
  places instead of one (#237)\n-   in weekly reports, simplify week 52's heading
  like the others\n-   disallow trailing garbage in a number of parsers\n\n    Trailing
  garbage is no longer ignored when parsing the following:\n    balance --format option,
  register --width option, hledger-rewrite\n    options, hledger add's inputs, CSV
  amounts, posting amounts,\n    posting dates in tags.\n\n-   allow utf8-string-1
  (fpco/stackage/#426)\n\n0.24 (2014/12/25)\n\nGeneral:\n\n-   fix redundant compilation
  when cabal installing the hledger packages\n-   switch to Decimal for representing
  amounts (#118)\n-   report interval headings (eg in balance, register reports) are
  shown\n    compactly when possible\n-   general speedups\n\nJournal format:\n\n-
  \  detect decimal point and digit groups more robustly (#196)\n-   check that transaction
  dates are followed by whitespace or newline\n-   check that dates use a consistent
  separator character\n-   balance assertions now are specific to a single commodity,
  like\n    Ledger (#195)\n-   support multi-line comments using \"comment\", \"end
  comment\"\n    directives, like Ledger\n\nCSV format:\n\n-   reading CSV data from
  stdin now works better\n-   the rules file include directive is now relative to
  the current\n    file's directory (#198)\n-   the original order of same-day transactions
  is now usually preserved\n    (if the records appear to be in reverse date order,
  we reverse them\n    before finally sorting by transaction date)\n-   CSV output
  is now built in to the balance, print, and register\n    commands, controlled by
  -O/--output-format (and -o/--output-file,\n    see below)\n\nCLI:\n\n-   the --width
  and --debug options now require their argument (#149)\n-   when an option is repeated,
  the last value takes precedence (#219).\n    This is helpful eg for customising
  your reporting command aliases on\n    the fly.\n-   smart dates (used in -p/-b/-e/date:/date2:)
  now must use a\n    consistent separator character, and must be parseable to the
  end\n-   output destination and format selection is now built in to the\n    balance,
  print and register commands, controlled by -o/--output-file\n    and -O/--output-format
  options. Notes:\n    -   -o - means stdout\n    -   an output file name suffix matching
  a supported format will also\n        set the output format, unless overridden by
  --output-format\n    -   commands' supported output formats are listed in their\n
  \       command-line help. Two formats are currently available:\n        txt (the
  default) and csv.\n-   balance assertions can be disabled with --ignore-assertions\n\nAccount
  aliases:\n\n-   all matching account aliases are now applied, not just one directive\n
  \   and one option\n-   account aliases now match by case insensitive regular expressions\n
  \   matching anywhere in the account name\n-   account aliases can replace multiple
  occurrences of the pattern\n    within an account name\n-   an account alias replacement
  pattern can reference matched groups\n    with \\N\n\nQueries:\n\n-   date:/date2:
  with a malformed date now reports an error instead of\n    being ignored\n-   amt:
  now supports >= or <=\n-   clarify status: docs and behaviour; \\\"*\\\" is no longer
  a synonym for\n    \"1\" (fixes #227)\n\nbalance:\n\n-   fix: in tree mode, --drop
  is ignored instead of showing empty account names\n-   a depth limit of 0 now shows
  summary items with account name \"...\",\n    instead of an empty report (#206)\n-
  \  in multicolumn balance reports, -E now also shows posting-less\n    accounts
  with a non-zero balance during the period (in addition to\n    showing leading &
  trailing empty columns)\n-   in multicolumn reports, multi-commodity amounts are
  rendered on one\n    line for better layout (#186)\n-   multicolumn reports' title
  now includes the report span\n\nregister:\n\n-   runs faster with large output\n-
  \  supports date2:, and date:/date2: combined with --date2, better (fixes\n    #201,
  #221, #222)\n-   a depth limit of 0 now shows summary items (see balance)\n-   -A/--average
  now implies -E/--empty\n-   postings with multi-commodity amounts are now top-aligned,
  like\n    Ledger\n\nExtra commands:\n\n-   hledger-equity: fix end date in title;
  print closing entry too\n-   hledger-check-dates: added\n\n0.23.3 (2014/9/12)\n\n-
  \  allow text 1.2+ (#207)\n\n0.23.2 (2014/5/8)\n\n-   register: also fix date sorting
  of postings (#184)\n\n0.23.1 (2014/5/7)\n\n-   register: fix a refactoring-related
  regression that the tests\n    missed: if transactions were not ordered by date
  in the journal,\n    register could include postings before the report start date
  in the\n    output. (#184)\n-   add: don't apply a default commodity to amounts
  on entry (#138)\n-   cli: options before the add-on command name are now also passed
  to it (#182)\n-   csv: allow the first name in a fields list to be empty (#178)\n-
  \  csv: don't validate fields count in skipped lines (#177)\n\n0.23 (2014/5/1)\n\nJournal
  format:\n\n-   A # (hash) in column 0 is now also supported for starting a top-level
  journal comment, like Ledger.\n-   The \"too many missing amounts\" error now reminds
  about the 2-space rule.\n-   Fix: . (period) is no longer parsed as a valid amount.\n-
  \  Fix: default commodity directives no longer limit the maximum display precision
  (#169).\n-   Fix: + before an amount is no longer parsed as part of the commodity
  (#181).\n\nCLI:\n\n-   Command-line help cleanups, layout improvements.\n-   Descriptions
  are shown for known add-ons in the command list.\n-   Command aliases have been
  simplified.\n-   Add-ons can now have any of these file extensions:\n    none, hs,
  lhs, pl, py, rb, rkt, sh, bat, com, exe.\n-   Add-ons are displayed without their
  file extensions when possible.\n-   Add-ons with the same name as a built-in command
  or alias are ignored.\n-   Fix: add-on detection and invocation now works on windows.\n-
  \  Fix: add-ons with digits in the name are now found.\n-   Fix: add-on arguments
  containing a single quote now work.\n-   Fix: when -- is used to hide add-on options
  from the main program,\n    it is no longer passed through as an add-on argument.\n\nQueries:\n\n-
  \  The currency/commodity query prefix (sym:) has been renamed to cur:.\n-   Currency/commodity
  queries are applied more strongly in register and\n    balance reports, filtering
  out unwanted currencies entirely. Eg\n    hledger balance cur:'$' now reports only
  the dollar amounts even if\n    there are multi-currency transactions or postings.\n-
  \  Amount queries like amt:N, amt:<N and amt:>N, where N is not 0, now do an unsigned\n
  \   comparison of the amount and N. That is, they compare the absolute magnitude.\n
  \   To do a signed comparison instead, write N with its sign (eg amt:+N, amt:<+N,
  amt:>-N).\n-   Fix: amount queries no longer give false positives on multi-commodity
  amounts.\n\naccounts:\n\n-   An accounts command has been added, similar to Ledger's,
  for listing account names\n    in flat or hierarchical mode.\n\nadd:\n\n-   Tab
  completion now works at all prompts, and will insert the default if the input area
  is empty.\n-   Account and amount defaults are more robust and useful.\n-   Transactions
  may also be completed by the enter key, when there are no more default postings.\n-
  \  Input prompts are displayed in a different colour when supported.\n\nbalance:\n\n-
  \  Balance reports in flat mode now always show exclusive (subaccount-excluding)
  balances.\n-   Balance reports in flat mode with --depth now aggregate deeper accounts
  at the depth limit instead of excluding them.\n-   Multicolumn reports in flat mode
  now support --drop.\n-   Multicolumn balance reports can now show the account hierarchy
  with --tree.\n-   Multicolumn report start/end dates are adjusted to encompass the
  displayed\n    report periods, so the first and last periods are \"full\" and comparable
  to the others.\n-   Fix: zero-balance leaf accounts below a non-zero-balance parent
  are no longer always shown (#170).\n-   Fix: multicolumn reports now support --date2
  (cf #174).\n\nbalancesheet, cashflow, incomestatement:\n\n-   These commands now
  support --flat and --drop.\n\nprint:\n\n-   Tag queries (tag:) will now match a
  transaction if any of its postings match.\n\nregister:\n\n-   The --display option
  has been dropped. To see an accurate running total which\n    includes the prior
  starting balance, use --historical/-H (like balance).\n-   With a report interval,
  report start/end dates are adjusted to encompass the displayed\n    periods, so
  the first and last periods are \"full\" and comparable to the others.\n-   Fix:
  --date2 now works with report intervals (fixes #174).\n\nMiscellaneous:\n\n-   Default
  report dates now derive from the secondary dates when --date2 is in effect.\n-   Default
  report dates now notice any posting dates outside the transaction dates' span.\n-
  \  Debug output improvements.\n-   New add-on example: extra/hledger-rewrite.hs,
  adds postings to matched entries.\n-   Compatible with GHC 7.2 (#155) - GHC 7.8,
  shakespeare 2\n\n0.22.2 (2014/4/16)\n\n-   display years before 1000 with four digits,
  not three\n-   avoid pretty-show to build with GHC < 7.4\n-   allow text 1.1, drop
  data-pprint to build with GHC 7.8.x\n\n0.22.1 (2014/1/6) and older: see http://hledger.org/release-notes
  or doc/release-notes.md.\n"
basic-deps:
  shakespeare: ! '>=2.0.2.2'
  mtl-compat: -any
  lucid: -any
  hledger-lib: ==1.16.*
  bytestring: -any
  extra: ! '>=1.6.3'
  haskeline: ! '>=0.6'
  split: ! '>=0.1'
  base-compat-batteries: ! '>=0.10.1 && <0.12'
  hledger: -any
  base: ! '>=4.9 && <4.14'
  time: ! '>=1.5'
  Diff: -any
  unordered-containers: -any
  text: ! '>=0.11'
  megaparsec: ! '>=7.0.0 && <8'
  wizards: ! '>=1.0'
  filepath: -any
  process: -any
  parsec: ! '>=3'
  data-default: ! '>=0.5'
  utility-ht: ! '>=0.0.13'
  containers: -any
  ansi-terminal: ! '>=0.6.2.3'
  math-functions: ! '>=0.2.0.0'
  utf8-string: ! '>=0.3.5'
  old-time: -any
  regex-tdfa: -any
  mtl: -any
  cmdargs: ! '>=0.10'
  tabular: ! '>=0.2'
  hashable: ! '>=1.2.4'
  pretty-show: ! '>=1.6.4'
  terminfo: -any
  timeit: -any
  transformers: -any
  temporary: -any
  tasty: ! '>=1.2.3'
  Decimal: -any
  safe: ! '>=0.2'
  directory: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- 0.5.1
- '0.6'
- 0.6.1
- 0.7.0
- '0.8'
- '0.9'
- '0.10'
- '0.11'
- 0.11.1
- '0.12'
- 0.12.1
- '0.13'
- '0.14'
- '0.15'
- 0.15.1
- 0.15.2
- '0.16'
- 0.16.1
- '0.17'
- '0.18'
- 0.18.1
- 0.18.2
- '0.19'
- 0.19.1
- 0.19.2
- 0.19.3
- '0.20'
- 0.20.0.1
- '0.21'
- 0.21.1
- 0.21.2
- 0.21.3
- '0.22'
- 0.22.1
- 0.22.2
- '0.23'
- 0.23.1
- 0.23.2
- 0.23.3
- '0.24'
- 0.24.1
- '0.25'
- 0.25.1
- '0.26'
- '0.27'
- 0.27.1
- '1.0'
- 1.0.1
- '1.1'
- '1.2'
- '1.3'
- 1.3.1
- '1.4'
- '1.5'
- '1.9'
- 1.9.1
- '1.10'
- '1.11'
- 1.11.1
- '1.12'
- 1.12.1
- '1.13'
- 1.13.1
- 1.13.2
- '1.14'
- 1.14.1
- 1.14.2
- '1.15'
- 1.15.1
- 1.15.2
- '1.16'
author: Simon Michael <simon@joyful.com>
latest: '1.16'
description-type: markdown
description: "#  hledger\n\n## lightweight, portable, dependable accounting tools\n\nhledger
  is a computer program for easily tracking money, time, or other commodities,\non
  unix, mac and windows (and web-capable mobile devices, to some extent).\n\nIt is
  first a command-line tool, but there are also terminal and\nweb interfaces, and
  a Haskell library\n(http://hackage.haskell.org/package/hledger-lib) for building
  your own\nprograms and scripts (hledger is written in Haskell).  hledger was\ninspired
  by and is largely compatible with Ledger.  hledger is free\nsoftware available under
  the GNU General Public License v3+.\n\nhledger aims to help both computer experts
  and regular folks\nto gain clarity and control in their finances and time management,\nbut
  currently it is a bit more suited to techies.\nI use it every day to:\n\n-   track
  spending and income\n-   see time reports by day/week/month/project\n-   get accurate
  numbers for client billing and tax filing\n-   track invoices\n\nThough limited
  in features, hledger is lightweight, usable and reliable.\nFor some, it is a simpler,
  less distracting, more future-proof alternative to Quicken or GnuCash.\n\nFor more,
  see http://hledger.org.\n\n## Support\n\n### Backers\nSupport us with a monthly
  donation and help us continue our activities. [[Become a backer](https://opencollective.com/hledger#backer)]\n\n<a
  href=\"https://opencollective.com/hledger/backer/0/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/1/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/1/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/2/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/3/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/3/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/4/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/5/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/5/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/6/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/7/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/7/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/8/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/9/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/9/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/10/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/11/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/11/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/12/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/13/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/13/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/14/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/15/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/15/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/16/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/17/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/17/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/18/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/19/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/19/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/20/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/21/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/21/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/22/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/23/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/23/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/24/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/25/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/25/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/26/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/27/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/27/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/backer/28/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/backer/29/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/backer/29/avatar.svg\"></a>\n\n###
  Sponsors\nBecome a sponsor and get your logo on our README on Github with a link
  to your site. [[Become a sponsor](https://opencollective.com/hledger#sponsor)]\n\n<a
  href=\"https://opencollective.com/hledger/sponsor/0/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/1/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/1/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/2/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/3/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/3/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/4/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/5/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/5/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/6/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/7/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/7/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/8/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/9/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/9/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/10/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/11/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/11/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/12/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/13/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/13/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/14/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/15/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/15/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/16/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/17/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/17/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/18/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/19/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/19/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/20/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/21/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/21/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/22/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/23/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/23/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/24/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/25/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/25/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/26/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/27/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/27/avatar.svg\"></a>\n<a
  href=\"https://opencollective.com/hledger/sponsor/28/website\" target=\"_blank\"><img
  src=\"https://opencollective.com/hledger/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/hledger/sponsor/29/website\"
  target=\"_blank\"><img src=\"https://opencollective.com/hledger/sponsor/29/avatar.svg\"></a>\n\n[![license](https://img.shields.io/badge/license-GPLv3+-brightgreen.svg)](http://www.gnu.org/licenses/gpl.html)\n\n[![OpenCollective](https://opencollective.com/hledger/backers/badge.svg)](#backers)
  \n[![OpenCollective](https://opencollective.com/hledger/sponsors/badge.svg)](#sponsors)\n[![bountysource](https://api.bountysource.com/badge/team?team_id=75979&style=bounties_received)](https://github.com/simonmichael/hledger/issues?q=label:bounty)\n[![github
  issues](https://img.shields.io/github/issues/simonmichael/hledger.svg)](http://bugs.hledger.org)\n\n[![on
  hackage](https://img.shields.io/hackage/v/hledger.svg?label=hackage&colorB=green)](http://hackage.haskell.org/package/hledger)\n[![on
  stackage nightly](http://stackage.org/package/hledger/badge/nightly)](http://stackage.org/nightly/package/hledger)\n[![on
  stackage lts](http://stackage.org/package/hledger/badge/lts)](http://stackage.org/lts/package/hledger)\n[![on
  stackage lts 7](http://stackage.org/package/hledger/badge/lts-7)](http://stackage.org/lts-7/package/hledger)\n<!--
  [![github\nrelease](https://img.shields.io/github/release/simonmichael/hledger.svg?label=github+release)](https://github.com/simonmichael/hledger/releases)\n-->
  <!-- [![github latest release\ndownloads](https://img.shields.io/github/downloads/simonmichael/hledger/latest/total.svg?label=github+downloads)](https://github.com/simonmichael/hledger/releases)\n-->
  <!-- [![gratipay](https://img.shields.io/gratipay/hledger.svg)]()\n-->\n\n[![travis
  build status](https://img.shields.io/travis/simonmichael/hledger.svg)](https://travis.hledger.org)\n[![appveyor
  windows build status](https://ci.appveyor.com/api/projects/status/5vejw0w5n5igdr42?svg=true)](https://appveyor.hledger.org)\n[![](https://img.shields.io/hackage-deps/v/hledger-lib.svg?label=hledger-lib+bounds)](http://packdeps.haskellers.com/feed?needle=hledger-lib)\n[![](https://img.shields.io/hackage-deps/v/hledger.svg?label=hledger+bounds)](http://packdeps.haskellers.com/feed?needle=hledger)\n[![](https://img.shields.io/hackage-deps/v/hledger-ui.svg?label=hledger-ui+bounds)](http://packdeps.haskellers.com/feed?needle=hledger-ui)\n[![](https://img.shields.io/hackage-deps/v/hledger-web.svg?label=hledger-web+bounds)](http://packdeps.haskellers.com/feed?needle=hledger-web)\n\n"
license-name: GPL-3.0-only
