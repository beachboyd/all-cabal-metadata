homepage: https://github.com/fpco/th-utilities#readme
changelog-type: markdown
hash: fbbb48b4e8d52153bda04f4e4e0c755506696125dee1f9278044e1c50b5eda7f
test-bench-deps:
  th-utilities: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  hspec: -any
  text: -any
  th-orphans: -any
  syb: -any
  filepath: -any
  containers: -any
  template-haskell: ! '>=2.7'
  primitive: -any
  vector: -any
  directory: -any
maintainer: Michael Sloan <sloan@fpcomplete.com>
synopsis: Collection of useful functions for use with Template Haskell
changelog: ! "# ChangeLog\n\n## 0.2.0.0\n\n* Adds TH.ReifySimple, which supports reifying
  most of the information TH users\n  care about.\n\n* Adds some utilities based on
  SYB, which is often useful for TH.\n\n* Makes relative path stuff less noisyi with
  GHCi.\n\n## 0.1.0.0\n\n* First public release\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  text: -any
  th-orphans: -any
  syb: -any
  filepath: -any
  containers: -any
  template-haskell: ! '>=2.7'
  primitive: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.1.1
- 0.2.0.0
- 0.2.0.1
author: ''
latest: 0.2.0.1
description-type: markdown
description: ! "# th-utilities\n\n[![Build Status](https://travis-ci.org/commercialhaskell/th-utilities.svg?branch=master)](https://travis-ci.org/fpco/th-utilities)\n\nThe
  'th-utilities' package provides a number of useful utilities for\n[Template Haskell](https://hackage.haskell.org/package/template-haskell-2.10.0.0).\nIn
  particular:\n\n* [`TH.Derive`](https://github.com/fpco/th-utilities/blob/master/src/TH/Derive.hs)\n
  \ provides a convenient system for using TH to derive typeclass instances. It\n
  \ allows for open registration of TH derivers, and reuses instance syntax for\n
  \ invoking them.\n\n  - [`TH.Derive.Storable`](https://github.com/fpco/th-utilities/blob/master/src/TH/Derive/Storable.hs)\n
  \   defines derivation of Storable for ADTs.\n\n* [`TH.ReifyDataType`](https://github.com/fpco/th-utilities/blob/master/src/TH/ReifyDataType.hs)\n
  \ provides utilities for reifying simplified datatype info. It omits details\n  that
  you don't usually want to handle, making it much more straightforward to\n  generate
  code based on datatype structure.\n\n* [`TH.RelativePaths`](https://github.com/fpco/th-utilities/blob/master/src/TH/RelativePaths.hs)\n
  \ provides utilities for loading files based on paths relative to the cabal\n  file.
  This is particularly handy for loading code into ghci even when its\n  current dir
  isn't the package dir. Ideally, this module would be used by\n  everyone who currently
  uses `qAddDependentFile`.\n\n* [`TH.Utilities`](https://github.com/fpco/th-utilities/blob/master/src/TH/Utilities.hs)\n
  \ provides a miscellaneous set of utilities that are useful within this package\n
  \ and elsewhere.\n"
license-name: MIT
