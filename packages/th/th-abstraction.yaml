homepage: https://github.com/glguy/th-abstraction
changelog-type: markdown
hash: 1c0636ce6119d05b7fce7e8d0a65c73204e3967e593ac1bf16afae3f3bafcc75
test-bench-deps:
  base: -any
  th-abstraction: -any
  containers: -any
  template-haskell: -any
maintainer: emertens@gmail.com
synopsis: Nicer interface for reified information about data types
changelog: ! "# Revision history for th-abstraction\n\n## 0.2.8.0 -- 2018-06-29\n*
  GADT reification is now much more robust with respect to `PolyKinds`:\n  * A bug
  in which universally quantified kind variables were mistakenly\n    flagged as existential
  has been fixed.\n  * A bug in which the kinds of existentially quantified type variables\n
  \   were not substituted properly has been fixed.\n  * More kind equalities are
  detected than before. For example, in the\n    following data type:\n\n    ```haskell\n
  \   data T (a :: k) where\n      MkT :: forall (a :: Bool). T a\n    ```\n\n    We
  now catch the `k ~ Bool` equality.\n* Tweak `resolveTypeSynonyms` so that failing
  to reify a type constructor\n  name so longer results in an error. Among other benefits,
  this makes\n  it possible to pass data types with GADT syntax to `normalizeDec`.\n\n##
  0.2.7.0 -- 2018-06-17\n* Fix bug in which data family instances with duplicate occurrences
  of type\n  variables in the left-hand side would have redundant equality constraints\n
  \ in their contexts.\n\n## 0.2.6.0 -- 2017-09-04\n* Fix bug in which `applySubstitution`
  and `freeVariables` would ignore\n  type variables in the kinds of type variable
  binders.\n\n## 0.2.5.0\n\n* Added `pragLineDCompat`, `newtypeDCompat` and `tySynInstDCompat`\n\n##
  0.2.4.0 -- 2017-07-31\n\n* Fix bug that caused GADT equality constraints to be incorrect
  in some cases.\n* Expose `Unpackedness` and `Strictness` (which were unexported
  by accident).\n\n## 0.2.3.0 -- 2017-06-26\n\n* Add `resolvePredSynonyms`\n* Add
  `reifyConstructor`, which allows reification of `ConstructorInfo` from\n  a constructor
  name, and `lookupByConstructorName`, which allows directly\n  looking up a `ConstructorInfo`
  from a `DatatypeInfo` value for a given\n  constructor `Name`.\n* Augment `reifyDatatype`
  to be able to look up `DatatypeInfo` from the `Name`\n  of a record selector for
  one of its constructors. Also add `reifyRecord` for\n  reification of of `ConstructorInfo`
  from a record name, and\n  `lookupByRecordName`, which allows directly looking up
  a `ConstructorInfo`\n  from a `DatatypeInfo` value for a given record `Name`.\n*
  Fix bug that caused `th-abstraction` to fail on GHC 7.0 and 7.2 when passing\n  a
  vanilla constructor name to `reifyDatatype`\n* Make `normalizeDec` and `normalizeCon`
  more robust with respect to\n  data family instances on GHC 7.6 and 7.8\n\n## 0.2.2.0
  -- 2017-06-10\n\n* Fix `freeVariables` on lists not not produce duplicates.\n\n##
  0.2.1.0 -- 2017-06-09\n\n* Add sensible reify defaults and error messages when we\n
  \ can't backport fixes to old GHC Template Haskell output\n  due to hand-written
  Decs being processed.\n\n## 0.2.0.0 -- 2017-06-03\n\n* Added `reifyFixityCompat`\n*
  Added `constructorStrictness` field to `ConstructorInfo`\n* Infer more kind signatures
  when missing on old GHCs\n* Added parameter to `normalizeCon`\n* Support GHC back
  to 7.0.4\n\n## 0.1.3.0 -- 2017-05-27\n\n* Added `resolveInfixT` which uses reified
  fixity information to resolve `UInfixT`\n* Added `asEqualPred` and `asClassPred`\n*
  Fixed data-instance GADTs\n\n## 0.1.2.1  -- 2017-05-21\n\n* Add eta reduction fixes
  to GHC 7.6\n\n## 0.1.2.0  -- 2017-05-21\n\n* Added `arrowKCompat`\n* Added workaround
  for GHC 7.8 data instance eta reduction bug\n* Added kind signatures to datatypeVars\n\n##
  0.1.1.0  -- 2017-05-20\n\n* Better matching of constraints generated for GADTs across
  GHC versions\n* Added `dataDCompat`\n* Support for giving value constructors to
  reifyDatatype. This enables\n  data families to be reified easily.\n\n## 0.1.0.0
  \ -- 2017-04-26\n\n* First version.\n"
basic-deps:
  base: ! '>=4.3 && <5'
  containers: ! '>=0.4 && <0.6'
  ghc-prim: -any
  template-haskell: ! '>=2.5 && <2.14'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.2.1'
- '0.1.3.0'
- '0.2.0.0'
- '0.2.1.0'
- '0.2.2.0'
- '0.2.3.0'
- '0.2.4.0'
- '0.2.5.0'
- '0.2.6.0'
- '0.2.7.0'
- '0.2.8.0'
author: Eric Mertens
latest: '0.2.8.0'
description-type: markdown
description: ! 'th-abstraction

  ==============


  [![Hackage](https://img.shields.io/hackage/v/th-abstraction.svg)](https://hackage.haskell.org/package/th-abstraction)
  [![Build Status](https://secure.travis-ci.org/glguy/th-abstraction.png?branch=master)](http://travis-ci.org/glguy/th-abstraction)


  This package provides a consistent interface to a subset of Template Haskell.


  Currently the package provides a consistent view of the reified declaration

  information about datatypes, newtypes, and data family instances. These

  interfaces abstract away the differences in the normal and GADT syntax used to

  define these types.


  Contact Information

  -------------------


  Please contact me via GitHub or on the #haskell IRC channel on irc.freenode.net

'
license-name: ISC
