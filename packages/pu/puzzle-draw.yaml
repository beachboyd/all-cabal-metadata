homepage: ''
changelog-type: markdown
hash: 3219b0bcc7c751a3cd8c0cce49ad5aa4618d9f3aaba7a8ce163dae70e2916a6a
test-bench-deps:
  diagrams-lib: ! '>=1.4.2.3 && <1.5'
  blaze-svg: ==0.3.*
  bytestring: ==0.10.*
  base: ! '>=4.8 && <5'
  hspec: ! '>=2.5.4 && <2.6'
  text: ! '>=1.1 && <1.3'
  tasty-hspec: ! '>=1.1.5 && <1.2'
  containers: ==0.5.*
  tasty-hunit: ! '>=0.8 && <0.11'
  tasty: ! '>=0.8 && <1.2'
  deepseq: ! '>=1.3 && <1.5'
  puzzle-draw: -any
  yaml: ! '>=0.8.4 && <0.9'
maintainer: rob@vllmrt.net
synopsis: Creating graphics for pencil puzzles.
changelog: ! "0.3.0.0: 20180718\n-----------------\n\n* Switch backend to diagrams-rasterific,
  losing the dependency on Cairo.\n* Upgrade to diagrams 1.4.\n* Various new puzzle
  types, including Minesweeper, Tents, Snake,\n  Country Road, Killer Sudoku.\n\n0.2.0.0:
  20161211\n-----------------\n\n* Upgrade diagrams version.\n* Add various new puzzle
  types.\n* Add solution code markers.\n\n0.1.0.4: 20141115\n-----------------\n\n*
  add installation and usage instructions to README\n* merge puzzle-draw-cmdline\n*
  update for diagrams 1.2 and ghc 7.8\n* add new puzzle types: Bahnhof, Cave\n* rename
  `countnumbers` to `meanderingnumbers`\n* include and use a nicer font\n* command-line
  option to list supported puzzle types\n* various tweaks and fixes\n\n0.1.0.3: 20140519\n-----------------\n\n*
  add new puzzle types: Maximal Lengths, Prime Place, Magic Labyrinth\n\n\n0.1.0.2:
  20140419\n-----------------\n\n* add new puzzle types: Japanese Sums, Coral\n\n0.1.0.1:
  20140409\n-----------------\n\n* add new puzzle type: Tapa\n\n0.1.0.0\n-------\n\n*
  first release\n"
basic-deps:
  diagrams-lib: ! '>=1.4.2.3 && <1.5'
  SVGFonts: ==1.7.*
  base: ! '>=4.8 && <5'
  diagrams-rasterific: ! '>=1.4.1 && <1.5'
  unordered-containers: ==0.2.*
  text: ! '>=1.1 && <1.3'
  vector-space: ! '>=0.8 && <0.14'
  filepath: ! '>=1.3 && <1.5'
  parsec: ==3.1.*
  containers: ==0.5.*
  linear: ! '>=1.20.8 && <1.21'
  mtl: ! '>=2.1 && <2.3'
  hashable: ==1.2.*
  optparse-applicative: ! '>=0.13 && <0.15'
  aeson: ! '>=0.7 && <1.4'
  puzzle-draw: -any
  yaml: ! '>=0.8.4 && <0.9'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.2.0.0'
- '0.3.0.0'
author: Robert Vollmert
latest: '0.3.0.0'
description-type: markdown
description: ! "[![Build Status](https://api.travis-ci.org/robx/puzzle-draw.png)][travis]\n\npuzzle-draw\n===========\n\npuzzle-draw
  is a library and command-line tool for drawing pencil\npuzzles using [Diagrams][diagrams].
  It aims to provide a utility layer\non top of Diagrams to help with drawing arbitrary
  puzzles, as well as\nsupporting several specific puzzle types directly. In addition,
  it\nincludes functionality for parsing puzzle data from a YAML file format.\n\nExamples\n--------\n\nA
  [liar slitherlink][liarslither] with solution:\n\n![Liar Slitherlink](doc/slitherlink-liar-example.png)\n\nThis
  was rendered from the following YAML document:\n\n```\ntype: slitherlinkliar\npuzzle:
  |\n  1..0.3\n  .03222\n  0....1\n  3....3\n  32202.\n  3.3..3\nsolution:\n  loop:
  |\n    o o-o-o-o o-o\n     .|. . .|.|.|\n    o o o-o-o o o\n     .|.|. . .|.|\n
  \   o o o-o-o-o o\n     .|. . . . .|\n    o-o o o-o-o o\n    |. . .|. .|.|\n    o-o
  o-o o o o\n     .|.|. . .|.|\n    o-o o o o o o\n    |. .|. . .|.|\n    o-o-o o
  o o-o\n  liars: |\n    ...X..\n    .X....\n    X.....\n    .....X\n    ....X.\n
  \   ..X...\n```\n\nThere is a [demo web application][demo] that provides some more\nexamples
  and that can be used to generate SVG images from such\npuzzle descriptions.\n\nOr
  see a [puzzle set][twentyfour] that covers the puzzle types\nthat are supported
  as of 2014-05.\n\nInstalling\n----------\n\nThis is a brief overview of how to install
  the command line tool.\nThe easiest way right now is to get [stack](https://www.stackage.org/),\nclone
  this repository, and install using\n\n```\n$ stack install\n```\n\nAlternatively,
  get a Haskell environment by installing the\n[Haskell Platform](https://www.haskell.org/platform/).\nThen
  install `puzzle-draw` with cabal:\n\n```\n$ cabal install puzzle-draw\n```\n\nRunning\n-------\n\nAs
  an example, suppose the Liar Slitherlink puzzle description above\nis copied into
  a file `slitherliar.pzl`.\n\n```\n$ drawpuzzle slitherliar.pzl\n```\n\nThis will
  generate two files `slitherliar.svg` and `slitherliar-sol.svg`,\ncontaining the
  puzzle and solved puzzle, respectively. Run\n\n```\n$ drawpuzzle -h\n```\n\nto see
  some command line options that allow modifying the program's\nbehaviour, e.g., choosing
  the output format.\n\n[travis]: https://travis-ci.org/robx/puzzle-draw\n[liarslither]:
  https://maybepuzzles.wordpress.com/types/liar-slither-link/\n[twentyfour]: https://maybepuzzles.wordpress.com/2014/03/29/puzzle-set-24-hour-marathon/\n[diagrams]:
  http://projects.haskell.org/diagrams/\n[demo]: https://arp.vllmrt.net/puzzles/draw/static/puzzle.html\n"
license-name: MIT
