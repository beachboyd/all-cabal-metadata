homepage: ''
changelog-type: ''
hash: d4bd987bab0a580eca7eb4ad77b92bb58c52ac7cc49ed80c1b4a1ecc1793a115
test-bench-deps: {}
maintainer: Hugo Pacheco <hpacheco@gmail.com>
synopsis: Put-based lens library
changelog: ''
basic-deps:
  split: ! '>=0.2.2'
  base: ! '>=4.3 && <5'
  containers: ! '>=0.4.2.1'
  lens: ! '>=4.4.0.2'
  ghc-prim: ! '>=0.2.0.0'
  mtl: ! '>=2.1.2'
  transformers: ! '>=0.3.0.0'
  random: ! '>=1.0.1.1'
  QuickCheck: ! '>=2.7 && <2.8'
  template-haskell: ! '>=2.9.0.0 && <2.10.0.0'
  safe: ! '>=0.3.3'
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
author: Hugo Pacheco <hpacheco@gmail.com>
latest: 0.1.3
description-type: text
description: ! 'Putlenses


  This cabal package can be installed with:


  $ cabal install putlenses


  For a manual install, execute:


  $ runhaskell Setup.lhs configure

  $ runhaskell Setup.lhs build

  $ runhaskell Setup.lhs install


  You can now start playing with the example code that comes with the library, under
  Language.Pointless.Examples.Examples.

  The easiest way is to create a new module that imports some library modules


  module Test where


  import Test.QuickCheck.Test

  import Generics.Pointless.Lenses

  import Generics.Pointless.Lenses.Examples.Examples


  and interpret it


  $ ghci Test.hs


  We can now run some examples:

  > exMssPut2

  > exMssPut3

'
license-name: BSD-3-Clause
