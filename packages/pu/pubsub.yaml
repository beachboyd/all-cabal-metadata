homepage: http://projects.haskell.org/pubsub/
changelog-type: text
hash: 73d14fa816f23c4427c981aa2748aab3266cc2656628b7b41adc7d82c11c0b44
test-bench-deps: {}
maintainer: Sigbjorn Finne <sigbjorn.finne@gmail.com>
synopsis: A library for Google/SixApart pubsub hub interaction
changelog: ! "Version 0.10:\n\n  Initial release of PubSubHub Haskell package.\n"
basic-deps:
  mime: -any
  feed: ! '>=0.3.7'
  base: ==3.*
  fastcgi: -any
  json: -any
  network: -any
  xml: -any
  utf8-string: -any
  HTTP: ! '>=4000.0.8'
  random: -any
all-versions:
- '0.10'
- '0.11'
author: Sigbjorn Finne <sigbjorn.finne@gmail.com>
latest: '0.11'
description-type: text
description: ! "== Intro ==\n\nThis package is an early-release of the webhooks /
  publish-subscribe\nprotocol that http://pubsubhubbub.googlecode.com/ is working
  and\nrapidly deploying for various Google services.\n\nThe protocol itself isn't
  tied or limited to a Google service; a\nnumber of hubs have been created and deployed
  already (see the\nabove URL for list.)\n\nThis Haskell package adds support for
  working with these\nHTTP-based publish-subscribe hub servers, i.e., you may\nsubscribe
  to notification to URLs ('topics') from a hub and it\nwill push updates down as
  they occur (rather than you polling.)\n\n== Getting started ==\n\nThe protocol is
  dependent on having some callback/endpoints\nto forward 'topic' updates to you locally.
  There's a number of\nways of providing this in Haskell...for testing purposes, I've\nincluded
  a 'fastcgi' proxy/relaying script that handles this;\nsee examples/Main.hs It operates
  by forwarding incoming requests\nto a local server for processing -- the thinking
  being that\nit provides a robust web front-end, leaving your basic Haskell\ncode
  to do the interesting bits of proccessing the pubsub\nnotifications. An example
  of how this could be done is provided\nin examples/Feeder.hs which uses the pubsubhub
  service that\nsuperfeedr.com provides.\n\nTo use, you need to:\n\n * build the cabal
  package..(!)\n * Make the fastcgi script pubsub.fcgi available on\n   'web-visible'
  URL. \n * Adjust the settings at the top of examples/Feeder.hs\n   to match your
  local settings for the script's URL +\n   settle on a hub to use.\n\nFor actual
  code / documentation on the bits that implement the\nvery-straightforward PubSubHub
  protocol, see Web/PubSub.hs\n\n\nenjoy\n--sigbjorn 09/08/2009\n"
license-name: BSD-3-Clause
