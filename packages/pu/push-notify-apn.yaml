homepage: https://github.com/memrange/apn#readme
changelog-type: markdown
hash: 75adedab80b0af14af6dc1515ef4deb9e0561bbc67c169ba2f453e8b21288ae1
test-bench-deps:
  base: -any
  push-notify-apn: -any
maintainer: hc@hcesperer.org
synopsis: Send push notifications to mobile iOS devices
changelog: ! "0.1.0.8\n=======\n\n- Remove version constraints for http2-client\n\n0.1.0.7\n=======\n\n-
  Make compatible with latest http2-client-0.7.0.0\n\n0.1.0.6\n=======\n\n- Use http2-client-0.5.0.0
  or greater\n- Detect http2 goaway frames and remove connections from the\n  connection
  pool accordingly\n- Detect connection errors when sending messages and remove\n
  \ connections from the pool when they happen\n- Fix in the README: The parameter
  is not timeout, but\n  parallelConnections\n\n0.1.0.5\n=======\n\n- Bugfix: Close
  the cleanup thread when closing a session\n- Check if the certificates and key exist
  early, when the session is created\n- Catch IO errors and return a temporary failure
  instead\n- Depend explicitly on http2-client-0.3.0.2 for now\n\n0.1.0.4\n=======\n\n-
  Add an interactive/scriptable mode where messages are read from stdin\n- Re-structure
  exports to improve readability of the documentation\n- Close connections in addition
  to sending http2 gtfo when idle time exceeded (needs http2-client-0.3.0.2)\n- Add
  a closeSession method\n- Close sessions when they are garbage collected\n\n0.1.0.3\n=======\n\n-
  Filter out invalid token characters when hex encoded tokens are supplied\n- Clarify
  the documentation\n- Close the flow control thread when closing connections\n\n0.1.0.1\n=======\n\n-
  Initial release\n"
basic-deps:
  bytestring: -any
  http2: -any
  base: ! '>=4.7 && <5'
  time: -any
  text: -any
  tls: -any
  http2-client: -any
  x509-store: -any
  data-default: -any
  containers: -any
  x509: -any
  binary: -any
  push-notify-apn: -any
  base16-bytestring: -any
  optparse-applicative: -any
  random: -any
  aeson: -any
all-versions:
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.1.0.7'
- '0.1.0.8'
author: Hans-Christian Esperer
latest: '0.1.0.8'
description-type: markdown
description: ! "# push-notify-apn\n\npush-notify-apn is a library and command line
  utility that can be used to send\npush notifications to mobile devices running iOS.
  Push notifications are small\nmessages that can be sent to apps on smart phones
  and tablets\nwithout the need to keep open a long lived TCP connection per app,
  dramatically\nreducing the power consumption in standby mode.\n\nThe library is
  still in an experimental state. Bug and success reports\nas well as feature and
  pull requests are very welcome.\n\nSending a message is as simple as:\n\n    let
  sandbox     = True -- Development environment\n        maxParallel = 10   -- Number
  of parallel connections to\n                           -- the APN Servers\n    session
  <- newSession \"my.key\" \"my.crt\"\n        \"/etc/ssl/ca_certificates.txt\" sandbox\n
  \       maxParallel \"my.bundle.id\"\n    let payload = alertMessage \"Title\" \"Hello
  From Haskell\"\n        message = newMessage payload\n        token   = base16EncodedToken
  \"the-token\"\n    success <- sendMessage session token payload\n    print success\n\n#
  command line utility\n\nThe command line utility can be used for testing your app.
  Use like this:\n\n    sendapn -c ../apn.crt -k ../apn.key -a \\\n        /etc/ssl/certs/ca-certificates.crt
  -b your.bundle.id -s \\\n        -t your-token -m \"Your-message\"\n\nThe -s flag
  means \"sandbox\", i.e., for apps that are deployed in a\ndevelopment environment.\n\nYou
  can also use an interactive mode, where messages are read from\nstdin in this format:\n\n
  \   token:sound:title:message\n    \nTo use, invoke like this:\n\n    stack exec
  -- sendapn -k ~/greaselapn.key -c ~/greaselapn.crt -a /etc/ssl/cert.pem -b org.hcesperer.greasel
  -s -i\n    \nDo remove the -s flag when using the production instead of the sandbox
  environment.\n\n# credentials\n\napn.crt and apn.key are the certificate and private
  key of your\nAPN certificate from apple. To extract them from a .p12 file,\nuse
  openssl:\n\n    openssl pkcs12 -in mycredentials.p12 -out apn.crt -nokeys\n    openssl
  pkcs12 -in mycredentials.p12 -nodes -out apn.key -nocerts\n    \nca-certificates.crt
  is a truststore that contains the root certificates\nthat are used to verify the
  apn server's server certificates.\n"
license-name: BSD3
