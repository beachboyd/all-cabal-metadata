homepage: https://github.com/emilypi/nonempty-vector
changelog-type: markdown
hash: 4f43152485a17009a0c2177a6a5f7a0d3627a1183fd37c3163cb38b8dc506bae
test-bench-deps:
  base: ! '>=4.9 && <5'
  doctest: -any
maintainer: emilypi@cohomolo.gy
synopsis: Non-empty vectors
changelog: |
  # Revision history for nonempty-vector

  ## 0.2.0.1

  * Missed a strictness tick in `postscanl'`

  * INLINE pragma for slice

  ## 0.2.0.0

  * Remove naughty `Generic`, and `Alternative` instances as they can construct empty `NonEmptyVector`s

  * Handwritten `Read` and `Read1` instances with safe cons

  * Added `uncons`, `unsnoc`, `replicate1`, `generate1`, `iterateN1`, `unsafeCreate`, `unsafeCreateT`, `unfoldr1`, `unfoldr1N`, `unfoldr1M`, `unfoldr1NM`,

  * Added `unsafeFromList`, `unsafeFromVector`, and `fromNonEmptyN1`

  * Add `ifilterM`

  * Add doctests for all new functions + many familiar ones

  ## 0.1.0.0

  * Remove `MonadFail` instance for the sake of backcompat with LTS < 13
  * Drop Cabal version down to 2.0

  ## 0.0.1.1 -- 2019-10-20

  * Export `toMVector` and `fromMVector`
  * clean up docs

  ## 0.0.1.0 -- 2019-10-20

  * First version. Released on an unsuspecting world.
basic-deps:
  base: ! '>=4.9 && <5'
  semigroups: ! '>=0.17 && <0.20'
  deepseq: -any
  primitive: ! '>=0.6 && <0.8'
  vector: ! '>=0.12 && <0.13'
all-versions:
- 0.0.1.0
- 0.0.1.1
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
author: Emily Pillmore
latest: 0.2.0.1
description-type: markdown
description: |
  # Non-empty Vectors

  [![Build Status](https://travis-ci.org/emilypi/nonempty-vector.svg?branch=master)](https://travis-ci.org/emilypi/nonempty-vector) [![Hackage](https://img.shields.io/hackage/v/nonempty-vector.svg)](https://hackage.haskell.org/package/nonempty-vector)

  This package presents thin wrappers around mutable and immutable [Data.Vector](https://hackage.haskell.org/package/vector) types. The entire Vector API is supported for both sets of boxed vectors, with future plans to support unboxed, primitive, storable, and generic vectors.

  There are no external dependencies that are not already in `base`.

  ![nonempty-vector dependencies](https://i.imgur.com/6H21P7e.png)

  ### Motivation

  Every "container" in the Haskell ecosystem features a [non-empty variant](https://hackage.haskell.org/package/nonempty-containers), including the venerable [list](https://hackage.haskell.org/package/semigroups), aside from `vector`. Many (including myself) use `vector` for its incredible performance characteristics achieved over many years by the CLC and authors of the library. But many of us also want to adhere to the principle of least power, and not have to worry about whether `head` or `tail` (for example) are safe. This package addresses both of the previous points. No new pointer indirection is exposed by this library except at construction (and even then - `unsafe` constructors are supplied), with as much reuse of `vector`'s library as possible to make sure asymptotics stay the same.
license-name: BSD-3-Clause
