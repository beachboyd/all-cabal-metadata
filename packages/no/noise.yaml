homepage: http://github.com/brow/noise
changelog-type: ''
hash: 7a788ced140b5dc3c96b2974344adf5fb604cc7fe5eb742d58be69ff5e413d2b
test-bench-deps:
  HTF: ==0.10.*
  base: ==4.5.*
  string-qq: ==0.0.*
  parsec: ==3.1.*
  noise: -any
  HUnit: ==1.2.*
  QuickCheck: ==2.5.*
maintainer: Tom Brow <tom@tombrow.com>
synopsis: A friendly language for graphic design
changelog: ''
basic-deps:
  blaze-svg: ==0.3.*
  bytestring: ==0.9.*
  base: ==4.5.*
  blaze-markup: ==0.5.*
  network: ==2.3.*
  parsec: ==3.1.*
  noise: -any
  containers: ==0.4.*
  cryptohash: ==0.8.*
all-versions:
- 0.0.1
author: Tom Brow
latest: 0.0.1
description-type: markdown
description: ! "# Noise\n\nNoise is a concise, friendly language for graphic design
  that translates directly to [SVG 1.1](http://www.w3.org/TR/SVG11/). You can learn
  more about the language at [its webpage](http://tombrow.com/noise).\n\nThis project
  is an implementation of Noise written in [Haskell](http://haskell.org). It includes
  an interpreter and a library of modules that you can use to write your own interpreter.\n\n##
  Installation\n\nFirst, install the [Haskell Platform](http://www.haskell.org/platform/).
  Then:\n\n    git clone git@github.com:brow/noise.git\n    cd noise\n    cabal install\n\nLet's
  make sure it worked:\n\n    $ noise --help\n    Usage: noise [file]\n      -h  --help
  \ Print this help text.\n\n## Usage\n\n`noise` reads Noise code from standard input
  and writes SVG to standard output:\n\n    echo \"shape.circle(10,10,10,fill:color.red)\"
  | noise > circle.svg\n\nIt can also read from a file:\n\n    echo \"shape.rectangle(0,0,10,10,fill:color.blue)\"
  > rectangle.noise\n    noise rectangle.noise > rectangle.svg\n\nUse `convert` from
  the [ImageMagick](http://www.imagemagick.org/) package to write other image formats:\n\n
  \   echo \"shape.circle(10,10,10,fill:color.green)\" | noise | convert -size 20x20
  svg:- circle.png\n\n## Development\n\nI recommend using `cabal-dev` to maintain
  a sandboxed build environment. If you don't have it already:\n\n    cabal install
  cabal-dev\n\nThen, in the project root:\n\n    cabal-dev install-deps --enable-tests\n
  \   cabal-dev configure --enable-tests\n\nAfter performing the above setup once,
  you can build and test `noise` like so:\n\n    cabal-dev build && cabal-dev test\n\nFor
  a more detailed and colorful test report, try this:\n\n    cabal-dev build && ./dist/build/test/test\n"
license-name: MIT
