homepage: http://github.com/jhickner/smtp-mail
changelog-type: markdown
hash: f1f87b72395bcb3e82a856ffe90051ced58556aeef72f2b720255216c543119e
test-bench-deps: {}
maintainer: parsonsmatt@gmail.com
synopsis: Simple email sending via SMTP
changelog: "# CHANGELOG\n\nThis package follows the Package Versioning Policy.\nRoughly
  speaking, this means that we have four digits standing for:\n\n- Major: A significant
  rewrite of the library.\n- Major: A breaking change\n- Minor: A non-breaking addition\n-
  Patch: A non-breaking bugfix\n\n## Upcoming\n\nIf you are doing a pull-request,
  please update this list.\nA template is provided:\n\n```\n- [# PR number](URL to
  pr) @your_github_username\n  - Describe change #1\n  - Describe change #2\n  - Indicate
  if changes are major, minor, or patch changes.\n```\n\n## 0.2.0.0\n\n- [#25](https://github.com/jhickner/smtp-mail/pull/25)
  @shulhi\n    - References to the deprecated `Network` module were removed and replaced
  \n      with the new `connection` package. \n    - Duplicate functionality was deprecated.\n-
  [#23](https://github.com/jhickner/smtp-mail/pull/23) @alexandersgreen\n    - The
  `Cc` and `Bcc` fields will be sent to the SMTP server, and they'll \n      actually
  be sent now. \n"
basic-deps:
  bytestring: -any
  base: ! '>=4.5 && <5'
  base64-bytestring: -any
  text: -any
  filepath: -any
  network: -any
  connection: -any
  array: -any
  mime-mail: -any
  base16-bytestring: -any
  network-bsd: -any
  cryptohash: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.4.0
- 0.1.4.1
- 0.1.4.2
- 0.1.4.3
- 0.1.4.4
- 0.1.4.5
- 0.1.4.6
- 0.2.0.0
author: Jason Hickner, Matt Parsons
latest: 0.2.0.0
description-type: markdown
description: "SMTP-MAIL\n=========\n\nMaking it easy to send SMTP emails from Haskell.\n\n```\ncabal
  install smtp-mail\n```\n\n### Sending with an SMTP server\n\n```haskell\n{-# LANGUAGE
  OverloadedStrings #-}\n\nimport Network.Mail.SMTP\n\nfrom       = Address Nothing
  \"email@domain.com\"\nto         = [Address (Just \"Jason Hickner\") \"email@domain.com\"]\ncc
  \        = []\nbcc        = []\nsubject    = \"email subject\"\nbody       = plainTextPart
  \"email body\"\nhtml       = htmlPart \"<h1>HTML</h1>\"\n\nmail = simpleMail from
  to cc bcc subject [body, html]\n\nmain = sendMail host mail\n```\n\nor with an attachment:\n\n```haskell\nmain
  = do\n  attachment <- filePart \"application/octet-stream\" \"path/to/attachment.zip\"\n
  \ let mail = simpleMail from to cc bcc subject [body, html, attachment]\n  sendMail
  host mail\n```\n\nor, with authentication:\n\n```haskell\nmain = sendMailWithLogin
  host user pass mail\n```\n\nNote: `sendMail'` and `sendMailWithLogin'` variations
  are also provided if you want to specify a port as well as a hostname.\n\n\n###
  Sending with sendmail\n\nIf you'd like to use sendmail, the sendmail interface from
  ```Network.Mail.Mime``` \nis reexported as well:\n\n```haskell\n-- send via the
  default sendmail executable with default options\nrenderSendMail mail\n\n-- send
  via the specified executable with specified options\nrenderSendMailCustom filepath
  [opts] mail\n```\n\nFor more complicated scenarios or for adding attachments or
  CC/BCC\naddresses you can import ```Network.Mail.Mime``` and construct ```Mail```\nobjects
  manually.\n\n\n### Thanks\n\nThis library is based on code from HaskellNet, which
  appears to be no longer\nmaintained. I've cleaned up the error handling, added some
  API functions to\nmake common operations easier, and switched to ByteStrings where
  applicable.\n"
license-name: BSD-3-Clause
