homepage: https://github.com/andrewthad/small-bytearray-builder
changelog-type: markdown
hash: 71751243f8e0d37b6114ee6f11db0908cc9cad84c8f8d79f74cc133e455ca5a8
test-bench-deps:
  base: ! '>=4.12.0.0 && <5'
  small-bytearray-builder: -any
  byteslice: -any
  tasty-quickcheck: ! '>=0.10.1 && <0.11'
  tasty: ! '>=1.2.3 && <1.3'
  QuickCheck: ! '>=2.13.1 && <2.14'
  primitive: -any
  vector: -any
maintainer: andrew.thaddeus@gmail.com
synopsis: Serialize to a small byte arrays
changelog: |
  # Revision history for small-bytearray-builder

  ## 0.1.0.0 -- YYYY-mm-dd

  * First version. Released on an unsuspecting world.
basic-deps:
  base: ! '>=4.12.0.0 && <5'
  run-st: ! '>=0.1 && <0.2'
  primitive-offset: ! '>=0.2 && <0.3'
  byteslice: ! '>=0.1 && <0.2'
  primitive: ! '>=0.7 && <0.8'
  vector: ! '>=0.12.0.3 && <0.13'
all-versions:
- 0.1.0.0
author: Andrew Martin
latest: 0.1.0.0
description-type: haddock
description: |-
  This is similar to the builder facilities provided by
  `Data.ByteString.Builder`. It is intended to be used in
  situations where the following apply:

  * An individual entity will be serialized as a small
  number of bytes (less than 512).

  * A large number (more than 32) of entities will be serialized
  one after another without anything between them.

  Unlike builders from the `bytestring` package, these builders
  do not track their state when they run out of space. A builder
  that runs out of space simply aborts and is rerun at the beginning
  of the next chunk. This strategy for building is suitable for most
  CSVs and several line protocols (carbon, InfluxDB, etc.).
license-name: BSD-3-Clause
