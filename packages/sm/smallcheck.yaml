homepage: https://github.com/feuerbach/smallcheck
changelog-type: markdown
hash: 88323376798ed08d8778650f8431e71d2928123abac7da3c299ce7d2d7a55a5b
test-bench-deps: {}
maintainer: Roman Cheplyaka <roma@ro-che.info>
synopsis: A property-based testing library
changelog: ! "Changes\n=======\n\nVersion 1.1.5\n-------------\n\n* Add `limit ::
  Monad m => Int -> Series m a -> Series m a`\n* Add `genericSeries` and `genericCoseries`,
  so that you can use the generic\n  implementations more flexibly. Previously, the
  generic implementation was\n  only avaialable as the default method for `series`/`coseries`
  but not as\n  standalone functions.\n\nVersion 1.1.4\n-------------\n\n* Add instances
  for fixed-width Int and Word types (Int8, Word8 etc.)\n\nVersion 1.1.3.1\n---------------\n\n*
  Fix compatibility with GHC 7.8 and older\n\nVersion 1.1.3\n-------------\n\n* Add
  `Serial` and `CoSerial` instances for `Word` and `Natural`\n\nVersion 1.1.2\n-------------\n\n*
  Export the `test` function\n* Add a `listSeries` function\n\nVersion 1.1.1\n-------------\n\nExport
  some auxiliary functions from `T.S.Series`, and document how to express\n`consN`
  and `altsN` for `N > 4`.\n\nVersion 1.1.0.1\n---------------\n\nDocumentation fixes\n\nVersion
  1.1\n-----------\n\n* Add a `Serial` instance for `Ratio`\n* Add the `NonEmpty`
  wrapper for lists\n* Add `listM` (the monadic version of `list`)\n* Add optional
  explanation for test outcomes\n\nVersion 1.0.4\n-------------\n\nFix compatibility
  with GHC 7.4.1\n\nVersion 1.0.3\n-------------\n\nFix a bug where no test cases
  were generated for some functional types (#19).\n\nVersion 1.0.2\n-------------\n\nFix
  a bug in the generic instance\n\nVersion 1.0.1\n-------------\n\nMake SmallCheck
  build with GHC 7.4\n\nVersion 1.0\n-----------\n\nThis is a major incompatible release
  of SmallCheck. Virtually every function has\nchanged its name, type, semantics or
  module. So please carefully read the docs\nwhen upgrading.\n\nFor some highlights,
  see [this blog post](http://ro-che.info/articles/2013-02-19-smallcheck.html).\n\nVersion
  0.6.2\n-----------\n* Derive Typeable Property instance\n* Add smallCheckPure\n\nVersion
  0.6.1\n-----------\n\n* Documentation improvements\n* Make the package build with
  GHC 7.4.1\n\nVersion 0.6\n-----------\n\n* Default Generic implementation of Serial
  instance (by Bas van Dijk)\n* The code is split into modules\n* Convert much of
  README into haddock documentation\n* Many small API changes\n* Remove impure Testable
  (IO a) instance\n\nVersion 0.5\n-----------\n\nMake the package build with GHC 7.2.
  Some cosmetic changes.\n\nVersion 0.4\n-----------\n\nThe module SmallCheck is now
  Test.SmallCheck.  Packaged with Cabal.\n\nVersion 0.3\n-----------\n\nExistential
  quantifiers now have unique variants for which two witnesses\nare reported when
  uniqueness fails.  The over-generating coseries method\nfor functions of functional
  arguments has been replaced; now 'coseries'\nand the 'alts<N>' family take a series
  argument. Test counters are\nnow Integers, not Ints.  Ord and Eq are now derived
  for the N types.\nExamples extended.\n\nVersion 0.2\n-----------\n\nThe 'smallCheck'
  driver now takes an argument d and runs test series\nat depths 0..d without interaction,
  stopping if any test fails.\nThe interactive variant is still available as 'smallCheckI'.
  \ All\nPrelude numeric types now have Serial instances, including floating-point\ntypes.
  Serial types Nat and Natural are also defined.  Examples extended.\n\nVersion 0.1\n-----------\n\nThe
  differences from 0.0 are two fixes (space-fault, output buffering),\nan 'unsafe'
  but sometimes useful Testable (IO a) instance and additional\nexamples.\n"
basic-deps:
  logict: -any
  base: ! '>=4.5 && <5'
  ghc-prim: ! '>=0.2'
  mtl: -any
  pretty: -any
all-versions:
- '0.2.1'
- '0.4'
- '0.5'
- '0.6'
- '0.6.1'
- '0.6.2'
- '1.0'
- '1.0.1'
- '1.0.2'
- '1.0.3'
- '1.0.4'
- '1.1'
- '1.1.0.1'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.1.3.1'
- '1.1.4'
- '1.1.5'
author: Colin Runciman, Roman Cheplyaka
latest: '1.1.5'
description-type: markdown
description: ! "SmallCheck: a property-based testing library for Haskell\n========================================================\n\nSmallCheck
  is a testing library that allows to verify properties for all test\ncases up to
  some depth. The test cases are generated automatically by\nSmallCheck.\n\nUsefulness
  of such an approach to testing is based on the following observation:\n\n> If a
  program fails to meet its specification in some cases, it almost always\n> fails
  in some simple case.\n\nTo get started with SmallCheck:\n\n* Read the [documentation][haddock]\n*
  If you have experience with QuickCheck, [read the comparison of QuickCheck and SmallCheck][comparison]\n*
  Install it and give it a try!  \n  `cabal update; cabal install smallcheck`\n* Read
  the [paper][paper] or [other materials][oldpage] from the original\n  authors of
  SmallCheck (note that that information might be somewhat outdated)\n* If you see
  something that can be improved, please [submit an issue][issues]\n* Check out [the
  source code][github] at GitHub\n\n[haddock]: http://hackage.haskell.org/packages/archive/smallcheck/latest/doc/html/Test-SmallCheck.html\n[hackage]:
  http://hackage.haskell.org/package/smallcheck\n[paper]: http://www.cs.york.ac.uk/fp/smallcheck/smallcheck.pdf\n[oldpage]:
  http://www.cs.york.ac.uk/fp/smallcheck/\n[comparison]: https://github.com/feuerbach/smallcheck/wiki/Comparison-with-QuickCheck\n[github]:
  https://github.com/feuerbach/smallcheck\n[issues]: https://github.com/feuerbach/smallcheck/issues\n\nMaintainers\n-----------\n\n[Roman
  Cheplyaka](https://github.com/feuerbach) is the primary maintainer.\n\n[Oliver Charles](https://github.com/ocharles)
  is the backup maintainer. Please\nget in touch with him if the primary maintainer
  cannot be reached.\n"
license-name: BSD3
