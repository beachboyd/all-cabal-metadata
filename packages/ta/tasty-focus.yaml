homepage: ''
changelog-type: markdown
hash: a88198ac2e688f52ac9fad05276a106b9cb5f089590cc351a1f6fa11e7564962
test-bench-deps:
  tasty-focus: -any
  base: '>=4.9 && <5'
  tasty-expected-failure: -any
  tasty-hunit: -any
  tasty: -any
maintainer: Jonas Carpay <jonascarpay@gmail.com>
synopsis: Simple focus mechanism for tasty
changelog: |
  # Changelog

  ## 1.0.0

  ### [Added]
  - Initial version
basic-deps:
  base: '>=4.9 && <5'
  tagged: -any
  tasty: -any
all-versions:
- 1.0.0
author: Jonas Carpay
latest: 1.0.0
description-type: markdown
description: "## tasty-focus\n\nSimple focus mechanism for `tasty`, similar to `hspec`.\n\nMark
  the root of your test tree with `withFocus`.\nThen, if any of the subtrees of your
  test suite are marked with `focus`, only those test trees will be run.\n\nThe intended
  use case is similar to `--pattern`, but for quick `ghcid`-based feedback loops.\nUsing
  `focus` will throw a deprecation warning, so that together with `-Werror` you can
  check that you don't accidentally leave tests focused on CI.\n\n### Example\nIn
  this example, only `barTests` will run. Removing either `focus` or `withFocus` will
  run the entire tree again.\n\n```haskell\nmain :: IO ()\nmain = defaultMain . withFocus
  $\n  testGroup \"tests\"\n    [ fooTests\n    , testGroup \"subgroup\"\n      [
  focus barTests\n      , bazTests\n\t  ]\n\t, quuxTests\n    ]\n```\n"
license-name: BSD-3-Clause
