homepage: http://github.com/ucsd-progsys/tagged-timers
changelog-type: ''
hash: dbb1a0fdf3e9040f1d06c344860dc69969153907d9d1a5bddbf46b135a473d35
test-bench-deps: {}
maintainer: jhala@cs.ucsd.edu
synopsis: Simple wrappers for timing IO actions (single-threaded)
changelog: ''
basic-deps:
  base: ! '>=4.8 && <4.9'
  time: ! '>=1.5 && <1.6'
  unordered-containers: -any
  transformers: ! '>=0.4 && <0.5'
all-versions:
- 0.1.0.0
author: Ranjit Jhala
latest: 0.1.0.0
description-type: markdown
description: ! "# README\n\n`tagged-timers` is a simple package for timing different
  `IO`\nthat occur within a program and grouping the results\naccording to dynamically
  generated `String` tags.\n\n## Example\n\nFor a simple example of usage, see `examples/Example.hs`\n\n```haskell\nmain
  :: IO ()\nmain = do\n  t <- T.create\n  T.time t \"cat\" (act \"cat\" 5)\n  T.time
  t \"dog\" (act \"dog\" 2)\n  r <- T.result t\n  putStrLn $ \"Time Result: \" ++
  show r\n```\n\nwhich, when executed, yields the following behavior:\n\n```\nPrelude>
  :l examples/Example.hs\n...\n*Main> main\nStarting action cat\nOh so sleepy...\n(5
  seconds later)\nFinished action cat\nStarting action dog\nOh so sleepy...\n(2 seconds
  later)\nFinished action dog\nTime Result: [(\"cat\",5.003739s),(\"dog\",2.003825s)]\n```\n"
license-name: MIT
