homepage: https://github.com/jdnavarro/tasty-laws
changelog-type: markdown
hash: e00616ef19d04b2aa8d68a55cfaf4d7643317cd9516b34a7df5cf5697d5a4cb7
test-bench-deps:
  tasty-laws: -any
  base: ! '>=4.6 && <4.9'
  smallcheck: ! '>=1.1.1'
  smallcheck-laws: ! '>=0.3'
  tasty: ! '>=0.10'
maintainer: j@dannynavarro.net
synopsis: Test common laws
changelog: ! "# Change Log\nAll notable changes to this project will be documented
  in this file. This file\nfollows the formatting recommendations from [Keep a\nCHANGELOG](http://keepachangelog.com/).
  This project adheres to [Semantic\nVersioning](http://semver.org/).\n\n## [0.3.1][0.3.1]
  - 2015-09-07\n### Changed\n- `Serial` instances instead `Proxy` where possible.\n\n###
  Added\n- Default tests for type constructors parametrized with `()`.\n- Exhaustive
  `TestTree`s.\n\n## [0.2] - 2015-09-04\n### Removed\n- `smallcheck` specific modules
  from\n  [`smallcheck-laws-0.1`](https://hackage.haskell.org/package/smallcheck-laws-0.1).\n
  \ This package now contains `Tasty` specific modules.\n\n### Changed\n- Simplify
  module hierarchy: `Test.Tasty.SmallCheck.Laws` -> `Test.Tasty.Laws`\n\n[0.3]: https://github.com/jdnavarro/tasty-laws/compare/v0.2...v0.3.1\n[0.2]:
  https://github.com/jdnavarro/tasty-laws/compare/bf1caa5...v0.2\n"
basic-deps:
  tasty-smallcheck: ! '>=0.8.0.1'
  base: ! '>=4.6 && <4.9'
  smallcheck: ! '>=1.1.1'
  smallcheck-series: ! '>=0.3'
  smallcheck-laws: ! '>=0.3'
  tasty: ! '>=0.10'
all-versions:
- 0.3.1
author: Danny Navarro
latest: 0.3.1
description-type: markdown
description: ! '# Tasty Laws


  [![Hackage Version](https://img.shields.io/hackage/v/tasty-laws.svg)](https://hackage.haskell.org/package/tasty-laws)

  [![Build Status](https://img.shields.io/travis/jdnavarro/tasty-laws.svg)](https://travis-ci.org/jdnavarro/tasty-laws)


  Preassembled `tasty` `TestTree`s for property testing the following laws:


  - Monoids

  - Functors

  - Applicatives

  - Monads


  It uses [`smallcheck-laws`](https://github.com/jdnavarro/smallcheck-laws) under

  the hood. If you don''t find any runners that suite you, you can use this

  package as a reference to implement your own `smallcheck-laws` test runners.


  ## Contact


  Contributions and bug reports are welcome!


  Please feel free to contact jdnavarro on the #haskell IRC channel on

  irc.freenode.net.

'
license-name: BSD-3-Clause
