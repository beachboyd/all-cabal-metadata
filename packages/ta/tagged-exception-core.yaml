homepage: https://github.com/trskop/tagged-exception-core
changelog-type: markdown
hash: ec7fdc2de3f7f35642d55982e0ec4e968a19c10942e373dec82574a8bd8e9506
test-bench-deps: {}
maintainer: peter.trsko@gmail.com
synopsis: Reflect exceptions using phantom types.
changelog: ! "# ChangeLog / ReleaseNotes\n\n\n## Version 2.2.0.0\n\n* Deprecating
  module `Control.Monad.TaggedException.Utilities`, definitions\n  from it were moved
  in to `Control.Monad.TaggedException.Core`. (**change**)\n* Type `Throws` has now
  instance for `Generic1`, but only on GHC >=7.10, due to\n  `PolyKinds`. (**new**)\n*
  `HiddenException` instances for `AllocationLimitExceeded` and `Void`, both\n  defined
  in base >=4.8. (**new**)\n* `HiddenException` instance for `TypeError`, defined
  in base >=4.9. (**new**)\n* Bumped upper bound of [transformers][] package to include
  0.5.\\* branch.\n  (**change**)\n\n\n## Version 2.1.0.1\n\n* Relaxing upper bound
  on [exceptions][] package to include versions up to\n  0.8.\\*. (**new**)\n* Not
  uploaded on to [Hackage][], instead opted to modify package metadata of\n  [2.1.0.0](http://hackage.haskell.org/package/tagged-exception-core-2.1.0.0)\n
  \ release.\n\n\n## Version 2.1.0.0\n\n* Builds on GHC from 7.4 to 7.10, later with
  base 4.8. (**change**)\n* Bumping [transformers][] bounds to include 0.4.\\* versions.
  (**change**)\n* Dropped last threads of support for base <= 4.5; it hadn't worked
  anyway\n  since [exceptions][] ==0.6 depend on base >=4.5 && <5. (breaking change)\n*
  Instances for [mtl][] >=2.1 package. Package [exceptions][] already depends\n  on
  [mtl][], so it doesn't make sense to shy away from them. (**new**)\n* Introduced
  unsafe functions (**new**):\n\n    ```Haskell\n    liftCCLike\n        :: (((a ->
  m b) -> m' c) -> m'' d)\n        -> ((a -> Throws e m b) -> Throws e m' c) -> Throws
  e m'' d\n\n    liftEmbedLike\n        :: (forall a. m a -> Throws e n a)\n        ->
  Throws e' m b -> Throws e n b\n\n    liftHoistLike\n        :: (forall a. m a ->
  n a)\n        -> Throws e m b -> Throws e' n b\n    ```\n\n* Documentation updates.
  (**new**)\n* Uploaded to [Hackage][]:\n  <http://hackage.haskell.org/package/tagged-exception-core-2.1.0.0>\n\n\n##
  Version 2.0.0.0\n\n* First public release.\n* Rewritten to use classes from [exceptions][]
  package.\n* Uploaded to [Hackage][]:\n  <http://hackage.haskell.org/package/tagged-exception-core-2.0.0.0>\n\n\n\n[exceptions]:\n
  \ http://hackage.haskell.org/package/exceptions\n  \"exceptions package on Hackage\"\n[Hackage]:\n
  \ http://hackage.haskell.org/\n  \"HackageDB (or just Hackage) is a collection of
  releases of Haskell packages.\"\n[mtl]:\n  http://hackage.haskell.org/package/mtl\n
  \ \"mtl package on Hackage\"\n[transformers]:\n  http://hackage.haskell.org/package/transformers\n
  \ \"transformers package on Hackage\"\n"
basic-deps:
  exceptions: ! '>0.6 && <0.9'
  base: ! '>=4.5 && <5'
  mtl: ! '>=2.1 && <2.3'
  mmorph: ! '>=1.0.0 && <1.1'
  transformers: ! '>=0.3 && <0.6'
all-versions:
- 2.0.0.0
- 2.1.0.0
- 2.2.0.0
author: Peter TrÅ¡ko
latest: 2.2.0.0
description-type: markdown
description: ! "# Tagged Exception Core\n\n[![Hackage](http://img.shields.io/hackage/v/tagged-exception-core.svg)][Hackage:
  tagged-exception-core]\n[![Hackage Dependencies](https://img.shields.io/hackage-deps/v/tagged-exception-core.svg)](http://packdeps.haskellers.com/reverse/tagged-exception-core)\n[![Haskell
  Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]\n[![BSD3
  License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal:
  BSD3]\n\n[![Build](https://travis-ci.org/trskop/tagged-exception-core.svg)](https://travis-ci.org/trskop/tagged-exception-core)\n\n\n##
  Description\n\nReflect exceptions using phantom types. This library provides core
  API and\nothers may build on top of it.\n\n\n## Usage Example\n\nExample of reflecting
  reised exception in type:\n\n```Haskell\n{-# LANGUAGE DeriveDataTypeable #-}\n\nimport
  Control.Exception (Exception)\n\nimport Control.Monad.TaggedException (Throws)\nimport
  qualified Control.Monad.TaggedException as E (liftT, throw)\nimport Data.Typeable
  (Typeable)\n\n\ndata NotReady = NotReady String\n    deriving (Show, Typeable)\n
  \       -- Both required by Exception class\n\ninstance Exception NotReady\n\nmyFunction
  :: Input -> Throws NotReady IO Output\nmyFunction input = do\n\n    -- ... some
  stuff ...\n\n    -- isReady :: Input -> IO Bool\n    ready <- E.liftT $ isReady
  input\n    unless ready\n        . E.throw $ NotReady \"Resource of myFunction is
  not ready.\"\n\n    -- ... some other stuff ...\n```\n\n## License\n\nThe BSD 3-Clause
  License, see [LICENSE][] file for details.\n\n\n## Contributions\n\nContributions,
  pull requests and bug reports are welcome! Please don't be\nafraid to contact author
  using GitHub or by e-mail.\n\n\n\n[Hackage: tagged-exception-core]:\n  http://hackage.haskell.org/package/tagged-exception-core\n
  \ \"tagged-exception-core package on Hackage\"\n[Haskell.org]:\n  http://www.haskell.org\n
  \ \"The Haskell Programming Language\"\n[LICENSE]:\n  https://github.com/trskop/tagged-exception-core/blob/master/LICENSE\n
  \ \"License of endo package.\"\n[tl;dr Legal: BSD3]:\n  https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29\n
  \ \"BSD 3-Clause License (Revised)\"\n"
license-name: BSD-3-Clause
