homepage: https://github.com/greydot/log-effect-syslog
changelog-type: ''
hash: bb40c0ed8fa6af93e19492ad3b9bd35b2964187c578fdcbc7fbf57f30f2b81e0
test-bench-deps: {}
maintainer: lanablack@amok.cc
synopsis: Syslog functions for log-effect
changelog: ''
basic-deps:
  bytestring: ! '>=0.10'
  extensible-effects: ! '>=2.6.0.0'
  base: ! '>=4.9 && <5.0'
  hsyslog: ==5.*
  monad-control: ! '>=1.0'
  transformers-base: -any
  log-effect: ! '>=1.0.0'
all-versions:
- 0.1.0
author: Lana Black
latest: 0.1.0
description-type: markdown
description: ! "# log-effect-syslog\n\nThis package contains a set of utility functions
  that provide ability to log to\nsyslog using\n(extensible-effects)[https://hackage.haskell.org/package/extensible-effects]\nand
  (log-effect)[https://hackage.haskell.org/package/log-effect].\n\n## Example\n\n```haskell\nimport
  Control.Eff\nimport Control.Eff.Lift\nimport Control.Eff.Log\nimport Control.Eff.Log.Syslog\n\nsomeComp
  :: ( [LogM IO SyslogMsg] <:: r\n            , Lifted IO r\n            ) => Eff
  r ()\nsomeComp = do logInfo \"Doing something\"\n              logDebug \"Doing
  something else\"\n              {- ... -}\n              logInfo \"Ok, we're done\"\n\nmain
  :: IO ()\nmain = runLift $ runSyslog \"MyProgram\" [LogPID] User\n               $
  someComp\n```\n"
license-name: BSD-3-Clause
