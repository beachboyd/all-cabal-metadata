homepage: https://github.com/haroldl/log2json
changelog-type: ''
hash: 94826f391563bd517398ec483f21f0e97c7ab4df64580324120cb093972cfd85
test-bench-deps: {}
maintainer: harold@hotelling.net
synopsis: Turn log file records into JSON.
changelog: ''
basic-deps:
  base: ! '>=3 && <5'
  json: ==0.3.6
  parsec: ! '>=3'
  containers: -any
all-versions:
- '0.1'
author: harold@hotelling.net
latest: '0.1'
description-type: markdown
description: ! "log2json\n--------\n\nThe log2json command takes the LogFormat string
  to use and a list of\nfilenames as command-line arguments. If nothing is supplied,
  it goes\ninto \"demo\" mode, prompting you for a LogFormat and a single log\nrecord
  to parse.\n\n    log2json '%b' a.log b.log\n\nLogFormat\n---------\n\nLogFormat
  is a Haskell module that makes it trivial to parse access\nlog records.\n\nLogFormat
  will take the [LogFormat configuration][mod_log_config] from\nyour httpd.conf file
  and a log file and give you your log records as\nMaps where the key is the field
  name.\n\nThe Apache httpd configuration files allow you to customize the format\nof
  your log file records using the LogFormat directive. For example,\nif you want every
  line of your access log to read \"Hello Web\" you can\ndo that like so:\n\n    LogFormat
  \"Hello Web\" custom\n\nMore often you'll use a value such as\n\n    LogFormat \"%h
  %l %u %t \\\"%r\\\" %>s %b\" common\n\nand receive log records like\n\n    127.0.0.1
  - frank [10/Oct/2000:13:55:36 -0700] \"GET /apache_pb.gif HTTP/1.0\" 200 2326\n\n[mod_log_config]:
  http://httpd.apache.org/docs/2.0/mod/mod_log_config.html\n"
license-name: LicenseRef-GPL
