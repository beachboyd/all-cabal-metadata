homepage: https://github.com/jship/logging-effect-extra#readme
changelog-type: markdown
hash: f8033595b193395a8341dc67767ac3d1f7f90f96bcc58e54b48f1664a498d448
test-bench-deps: {}
maintainer: Jason Shipman
synopsis: Handy logging handler combinators
changelog: ! '# Change log


  ## 1.1.4


  * Bump upper bound on `exceptions` from 0.10 to 0.11


  ## 1.1.3


  * Bump upper bound on `exceptions` from 0.9 to 0.10


  ## 1.1.2


  * Bump upper bound on `time` from 1.9 to 1.10


  ## 1.1.1


  * Update `iso8601PlusHandler` time output to zero-padded, fixed width fraction of
  second


  ## 1.1.0


  * Add `routeHandler`

  * Deprecate `dispatchHandler`


  ## 1.0.0


  * Initial release

'
basic-deps:
  exceptions: ! '>=0.8.0.2 && <0.11'
  base: ! '>=4.8 && <4.11'
  time: ! '>=1.5 && <1.10'
  logging-effect: ! '>=1.1.0 && <1.3'
  wl-pprint-text: ! '>=1.1.0.4 && <1.2'
  logging-effect-extra-handler: -any
all-versions:
- '1.0.0'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.1.4'
author: Jason Shipman
latest: '1.1.4'
description-type: markdown
description: ! "# [logging-effect-extra-handler][]\n\n## Synopsis\n\n```haskell\n{-#
  LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE OverloadedStrings #-}\n\nmodule Main
  (main) where\n\nimport Control.Monad.Log (MonadLog, WithSeverity)\nimport qualified
  Control.Monad.Log as Log\nimport qualified Control.Monad.Log.Extra.Handler as Log\nimport
  Text.PrettyPrint.Leijen.Text (Doc)\n\napp :: MonadLog (WithSeverity Doc) m => m
  ()\napp = do\n  Log.logEmergency \"GAH! All systems are down!!!\"\n  Log.logAlert
  \"Red alert!\"\n  Log.logCritical \"Critical hit!\"\n  Log.logError \"Errors abound!\"\n
  \ Log.logWarning \"Cargo number 2331 has commandeered the vessel\"\n  Log.logNotice
  \"Heads up, but it's no biggie.\"\n  Log.logInfo \"Does anyone read these?\"\n  Log.logDebug
  \"Sleuthing with log messages...\"\n\nmain :: IO ()\nmain =\n  Log.withStdoutHandler
  $ \\stdoutHandler ->\n  Log.withStderrHandler $ \\stderrHandler ->\n  Log.runLoggingT
  app (Log.routeHandler (Log.iso8601Handler stdoutHandler)\n                                        (Log.iso8601Handler
  stderrHandler)\n                                        id)\n```\n\n## Usage via
  `stack`\n\n``` sh\n# Build the project.\nstack build\n\n# Run the `iso8601-handler`
  example\nstack exec iso8601-handler\n\n# Run the `iso8601plus-handler` example\nstack
  exec iso8601plus-handler\n\n# Run the `rfc822-handler` example\nstack exec rfc822-handler\n\n#
  Run the `route-handler-with-iso8601` example\nstack exec route-handler-with-iso8601\n\n#
  Run the `route-handler` example\nstack exec route-handler\n```\n\n[logging-effect-extra-handler]:
  https://github.com/jship/logging-effect-extra\n"
license-name: MIT
