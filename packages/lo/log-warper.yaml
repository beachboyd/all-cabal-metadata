homepage: https://github.com/serokell/log-warper
changelog-type: markdown
hash: 14ef79b015f7d76671ad34a4ee8fd99aad5be9986be56dbcb3aa1fa21f3f085d
test-bench-deps:
  base: -any
  unordered-containers: -any
  hspec: -any
  universum: -any
  filepath: -any
  async: -any
  data-default: -any
  HUnit: -any
  log-warper: -any
  QuickCheck: -any
  microlens-mtl: -any
  directory: -any
maintainer: Serokell <hi@serokell.io>
synopsis: Flexible, configurable, monadic and pretty logging
changelog: ! "1.8.3\n=====\n\n* [#79](https://github.com/serokell/log-warper/issues/79):\n
  \ Add `launchWithConfig` to `Launcher` module.\n\n1.8.2\n=====\n\n* Migrate to `universum-1.0.0`.\n*
  [#71](https://github.com/serokell/log-warper/issues/71):\n  Use `microlens-platform`
  instead of `lens`.\n  `LoggerMap` is now has field `LoggerName` instead of `Text`.\n
  \ `zoomLogger` is now work with `LoggerName` instead of `Text`.\n  Remove `LogHandler.Syslog`
  module and `network` library.\n  Remove `extra`, `errors`, `exceptions`, `hashable`,
  `text-format`, `formatting` dependencies.\n  Remove `loggerNameF` function.\n  Change
  `lens` to `microlens-mtl` in tests.\n\n1.8.1\n=====\n\n* [#75](https://github.com/serokell/log-warper/issues/75):\n
  \ Bump up `universum` lower bound.\n\n1.8.0\n=====\n\n* [#55](https://github.com/serokell/log-warper/issues/55):\n
  \ Return back `lcFilePrefix` field in `LoggerConfig`, rename to `lcLogsDirectory`.\n\n1.7.6\n=====\n\n*
  Upgrade `universum` to version `0.9.1`. Add `Semigroup` instances.\n\n1.7.5\n=====\n\n*
  Relax `containers` package dependency from `>= 0.5.10.2` to `>= 0.5.7.1`.\n  Also
  use stable LTS for building package.\n\n1.7.4\n=====\n\n* [#55](https://github.com/serokell/log-warper/issues/55):\n
  \ Remove `lcFilePrefix` field from `LoggerConfig`.\n\n1.7.3\n=====\n\n* [#61](https://github.com/serokell/log-warper/issues/61):\n
  \ Add `launchFromFile`, `defaultConfig` and `launchSimpleLogging` functions.\n\n1.7.2\n=====\n\n*
  [#57](https://github.com/serokell/log-warper/issues/57):\n  Add `Exception` module
  with `logException` and `catchLog` functions.\n* [#60](https://github.com/serokell/log-warper/issues/60):\n
  \ Fix documentation for `termSeveritiesOut` and `termSeveritiesErr`.\n* [#63](https://github.com/serokell/log-warper/issues/63):\n
  \ Timestamp rounding by powers of 10.\n\n1.7.1\n=====\n\n* Bump `containers` to
  version `0.5.10`.\n\n1.7.0\n=====\n\n* [#48](https://github.com/serokell/log-warper/issues/48):\n
  \ Output for severities is now configured in config file with `termSeveritiesOut`\n
  \ and `termSeveritiesErr` for writing into `stdout` and `stderr` accordingly.\n
  \ Default behavior: `Errors` into `stderr`, all other into `stdout`.\n* In yaml
  config file added new keywords for dealing with `Severities`:\n  'All' -- all severities,
  'X+' -- severities greater or equal to X.\n* Changed .yaml format: logger severity
  receives set of severities (`Severities`).\n* [#32](https://github.com/serokell/log-warper/issues/32):\n
  \ Changed .yaml format: `LoggerTree` should be written under 'loggerTree:'.\n* [#49](https://github.com/serokell/log-warper/issues/49):\n
  \ Add `WithLoggerIO` constraint.\n* [#50](https://github.com/serokell/log-warper/issues/50):\n
  \ Add `liftLogIO` function into `CanLog` module.\n\n1.6.0\n=====\n\n* `Error` is
  now printed only to `stderr`, all other messages to `stdout`.\n* `Logger` severity
  is now `Set Severity`.\n* Interface changes: functions which worked with `Severity`
  now work with `Set Severity`.\n* Remove `releaseAllHandlers`, `streamHandlerWithLock`,\n
  \ `trapLogging`, `debugM`, `errorM`, `infoM`, `noticeM`, `warningM`.\n* Rename `Wrapper`
  module to `Terminal`.\n* Rename `Handler` module to `LogHandler`.\n* Rename `Logger`
  module to `IOLogger`.\n* Move `setSeverity` and `setSeverityMaybe` to `IOLogger`.\n*
  Lift all functions inside `IOLogger` module to `MonadIO`.\n* `handle` from `LogHandler`
  module is renamed to `logHandlerMessage`\n  and moved out of type class `LogHandler`.\n\n1.5.3\n=====\n\n*
  Add `launchNamedPureLogWith` to `PureLogging`\n* Improve documentation for `launchNamedPureLog`\n\n1.5.2\n=====\n\n*
  Add `logPureAction` to `PureLogging`.\n* Add `withSublogger` to `HasLoggerName`.\n\n1.5.1\n=====\n\n*
  Add `usingNamedPureLogger` to `PureLogging`.\n\n1.5.0\n=====\n\n* Replace `String`
  to `Text` in `LoggerName`.\n* Rename `LoggerName` field name to `getLoggerName`.\n*
  Rename `getLoggerName` of `HasLoggerName` class to `askLoggerName`.\n* Use `LoggerName`
  instead of `Text` where possible.\n* Make separate `HasLoggerName` module.\n* Make
  separate `PureLogging` module.\n* Remove `safecopy` dependency and refactor code.\n\n1.4.1\n=====\n\n*
  Add `logEvents` function to log `[LogEvent]` with proper logName.\n\n1.4.0\n=====\n\n*
  Add ability to specify custom logging action.\n\n1.3.4\n====\n\n* Correct logger
  config parsing\n\n1.3.3\n=====\n\n* Fixed a bug related to ugly output to stdout
  even when it was turned off.\n\n1.3.2\n=====\n\n* Minor dependencies update.\n\n1.3.1\n=====\n\n*
  Fix minor bug with stdout severity.\n\n1.3.0\n=====\n\n* Allow to use arbitrary
  text formatter function.\n\n1.2.4\n=====\n\n* Add ability to specify time format
  for logs.\n* Some space leaks elimination:\n  + The `MemoryQueue` has been partially
  reworked to get rid of the \"inline\" State manipulation;\n  + Strings have been
  dropped almost everywhere in favour of `Text`;\n  + A `LogFormatter` has been reworked
  to yield a `IO Builder`;\n  + `replaceVarM` has been reworked to be pure _and_ to
  work with builders rather than plain Text/Strings;\n  + The pure logger has been
  reworked to use strict's `StateT` instead of WriterT;\n  + The pure logger have
  been polished to drop instances which required the `UndecidableInstances` pragma;\n
  \ + The `Sized` instance for `Text` has been reworked and multiplied by a constant
  factor of 16 (see below).\n\n1.2.3\n=====\n\n* Now we create a directory for log
  files if it's missing.\n\n1.2.2\n=====\n\n* Fixed memory leak (PR #17).\n\n1.2.1\n=====\n\n*
  Supports Unix paths in log configs even on Windows.\n\n1.2.0\n=====\n\n* Uses universum-0.6.1.\n\n1.1.4\n=====\n\n*
  Add `CanLog` and `HasLoggerName` instances for both strict and lazy `State`.\n\n1.1.3\n=====\n\n*
  Add config parameter to print `ThreadId` optionally.\n* Boolean monoidal builders
  for `LoggerConfig` now set boolean\n  parameter to default â‰  `mempty` parameter.\n"
basic-deps:
  microlens-platform: ! '>=0.3.9'
  fmt: ! '>=0.5.0.0'
  unix: -any
  base: ! '>=4.7 && <5'
  time: ! '>=1.6.0.1'
  unordered-containers: ! '>=0.2.7.1'
  text: ! '>=1.2.2.1'
  markdown-unlit: ! '>=0.4.0'
  universum: ! '>=1.0.0'
  monad-loops: ! '>=0.4.3'
  monad-control: ! '>=1.0.1.0'
  filepath: ! '>=1.4.1'
  containers: ! '>=0.5.7.1'
  ansi-terminal: ! '>=0.6.2.3'
  log-warper: -any
  mtl: ! '>=2.2.1'
  mmorph: ! '>=1.0.9'
  transformers-base: ! '>=0.4.4'
  transformers: ! '>=0.5.2'
  deepseq: ! '>=1.2.0.0'
  aeson: ! '>=0.11.2.1'
  yaml: ! '>=0.8.20'
  vector: ! '>=0.12'
  directory: ! '>=1.2.6.2'
all-versions:
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.5'
- '0.3'
- '0.3.1'
- '0.4'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.4'
- '0.4.5'
- '0.5.0'
- '0.5.1'
- '1.0.0'
- '1.0.1'
- '1.0.2'
- '1.0.3'
- '1.0.4'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.1.4'
- '1.2.0'
- '1.2.1'
- '1.2.2'
- '1.2.3'
- '1.2.3.1'
- '1.3.0'
- '1.3.1'
- '1.3.2'
- '1.3.3'
- '1.3.4'
- '1.4.0'
- '1.4.1'
- '1.5.0'
- '1.5.1'
- '1.5.2'
- '1.5.3'
- '1.6.0'
- '1.7.0'
- '1.7.1'
- '1.7.2'
- '1.7.3'
- '1.7.4'
- '1.7.5'
- '1.7.6'
- '1.8.0'
- '1.8.1'
- '1.8.2'
- '1.8.3'
author: ! '@serokell'
latest: '1.8.3'
description-type: markdown
description: ! 'log-warper

  ==========


  [![Build Status](https://travis-ci.org/serokell/log-warper.svg)](https://travis-ci.org/serokell/log-warper)

  [![Hackage](https://img.shields.io/hackage/v/log-warper.svg)](https://hackage.haskell.org/package/log-warper)

  [![Stackage LTS](http://stackage.org/package/log-warper/badge/lts)](http://stackage.org/lts/package/log-warper)

  [![Stackage Nightly](http://stackage.org/package/log-warper/badge/nightly)](http://stackage.org/nightly/package/log-warper)

  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)


  Auxilary logging library, which is wrapper over

  [hslogger](http://hackage.haskell.org/package/hslogger) but allows

  to keep logger name into monadic context, making logging less boilerplate.


  Key features:


  1. Output is colored :star:

  2. Supports logging initialization from `.yaml` configuration file

  3. Has wrapper for pure logging via `WriterT`

  4. Supports log rotation

  5. Flexibles and easy setting up of loggers (using monoidal builders and lenses)

  6. Ability to acquire last `N` megabytes of logs from in-memory cache


  Contributing

  ------------


  > **This project uses [`universum`](https://github.com/serokell/universum)

  > as default prelude**

'
license-name: MIT
