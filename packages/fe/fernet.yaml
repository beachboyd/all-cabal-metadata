homepage: https://github.com/rvl/fernet-hs
changelog-type: markdown
hash: 5ba6f70006184b05b8a6bd460895e0fedc4c8fe8dc0b44666f848858010bd1a7
test-bench-deps:
  bytestring: -any
  base: -any
  tasty-golden: -any
  time: -any
  HUnit: -any
  memory: ! '>=0.14.1'
  tasty-quickcheck: -any
  tasty-hunit: -any
  tasty: -any
  QuickCheck: -any
  fernet: -any
  aeson: ! '>=1.0.2 && <1.1'
maintainer: dev@rodney.id.au
synopsis: Generate and verify HMAC-based authentication tokens.
changelog: ! '# Revision history for fernet


  ## 0.1.0.0  -- 2017-03-22


  * First version. Released on an unsuspecting world.

'
basic-deps:
  bytestring: ! '>=0.10.8 && <0.11'
  unix: ! '>=2.7.2.1 && <2.8'
  base: ==4.9.*
  time: ! '>=1.6.0 && <1.7'
  memory: ! '>=0.14.1 && <0.15'
  binary: ! '>=0.8.3.0 && <0.10'
  cryptonite: ! '>=0.21 && <0.23'
  byteable: ! '>=0.1.1 && <0.2'
  optparse-applicative: ! '>=0.12 && <0.15'
  fernet: -any
all-versions:
- 0.1.0.0
author: Rodney Lorrimar
latest: 0.1.0.0
description-type: markdown
description: ! "# Fernet Haskell Implementation\n\n[![Build Status](https://travis-ci.org/rvl/fernet-hs.svg?branch=master)](https://travis-ci.org/rvl/fernet-hs)
  [![Hackage](https://img.shields.io/hackage/v/fernet.svg)](http://hackage.haskell.org/package/fernet)\n\n*Fernet*
  generates and verifies HMAC-based authentication tokens.\n\nOriginally designed
  for use within OpenStack clusters, it was intended\nto be fast and light-weight,
  with non-persistent tokens. Integrity and\nconfidentiality of the token contents
  are implemented with HMAC SHA256\nand AES128 CBC.\n\nSee the [Fernet Spec][spec]
  for a little more information.\n\n[spec]: https://github.com/fernet/spec/blob/master/Spec.md\n\n##
  Usage\n\nTo encrypt a token:\n\n    >>> import Network.Fernet\n    >>> k <- generateKey\n
  \   >>> keyToBase64 k\n    \"JQAeL3iFN9wIW_hMKiIzA1EiG_EZNivnMPBOOJn2wZc=\"\n    >>>
  token <- encrypt k \"secret text\"\n    >>> print token\n    \"gAAAAABY0H9kx7ihkcj6ZF_bQ73Lvc7aG-ZlEtjx24io-DQy5tCjLbq1JvVY27uAe6BuwG8css-4LDIywOJRyY_zetq7aLPPag==\"\n\nThe
  resulting token can be distributed to clients. To check and\ndecrypt the token,
  use the same key:\n\n    >>> decrypt k 60 token\n    Right \"secret text\"\n\nDo
  read the [Network.Fernet module][haddock] documentation for further\ninformation.\n\n[haddock]:
  http://hackage.haskell.org/package/fernet/docs/Network-Fernet.html\n\n\n## Command-line
  tool\n\nThis package also includes a command-line tool for encrypting and\ndecrypting
  tokens.\n\n    Fernet Utility\n\n    Usage: fernet (((-k|--key STRING) | --key-file
  FILENAME) ([-e|--encrypt] |\n                  [-d|--decrypt]) [--ttl SECONDS] |
  (-g|--gen-key))\n      Encrypts/decrypts Fernet tokens. One token written to stdout
  for each line\n      read from stdin. Use --gen-key to make a key.\n\n    Available
  options:\n      -h,--help                Show this help text\n      -k,--key STRING
  \         Base64-urlsafe-encoded 32 byte encryption key\n      --key-file FILENAME
  \     File containing the encryption key\n      -e,--encrypt             Encryption
  mode (default: autodetect)\n      -d,--decrypt             Decryption mode (default:
  autodetect)\n      --ttl SECONDS            Token lifetime in seconds (default:
  1 minute)\n      -g,--gen-key             Generate a key from the password on standard
  input\n\n## Development\n\n### Building with Stack\n\n```\nstack build\n```\n\n###
  Building with Nix\n\n```\nnix-shell -p cabal2nix --command \"cabal2nix --shell .
  > default.nix\"\nnix-shell --command \"cabal configure\"\ncabal build\n```\n\n##
  Better & Cooler Stuff\n\nYou might also be interested in [hsoz](https://github.com/rvl/hsoz).\n"
license-name: LGPL-3.0-only
