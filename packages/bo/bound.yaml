homepage: http://github.com/ekmett/bound/
changelog-type: markdown
hash: d1a00472d6f317cb07e3ea8d642e7bf7dd014dba39c8c96908b88f93b9babb0b
test-bench-deps:
  void: -any
  bound: -any
  base: -any
  deriving-compat: ! '>=0.3.4 && <0.5'
  doctest: ! '>=0.11.2 && <0.17'
  transformers: -any
  functor-classes-compat: -any
  transformers-compat: -any
  vector: ! '>=0.9 && <0.13'
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Making de Bruijn Succ Less
changelog: ! "2.0.1\n-----\n* Add `abstractEither` and `instantiateEither` to `Bound.Scope`,
  and\n  add `abstractEitherName` and `instantiateEitherName` to `Bound.Scope.Name`\n*
  Add `Generic(1)` instances for `Name` and `Scope`\n* Support `doctest-0.12`\n\n2\n-\n*
  GHC 8.0 and 8.2 support\n* Converted from `prelude-extras` to `transformers` + `transformers-compat`
  for the `Eq1`, `Ord1`, `Show1`, and `Read1` functionality.\n* `makeBound` supports
  `Functor` components\n* Add `MFunctor` instance for `Scope`\n* Add `NFData` instances
  for `Name`, `Scope`, and `Var`\n* Revamp `Setup.hs` to use `cabal-doctest`. This
  makes it build\n  with `Cabal-1.25`, and makes the `doctest`s work with `cabal new-build`
  and\n  sandboxes.\n\n1.0.7\n------\n* Added an `-f-template-haskell` option to allow
  disabling `template-haskell` support. This is an unsupported configuration but may
  be useful for expert users in sandbox configurations.\n* Support `cereal` 0.5\n\n1.0.6\n-----\n*
  Compiles warning-free on GHC 7.10\n\n1.0.5\n-----\n* Widened version bound on `bifunctors`.\n*
  Widened version bound on `profunctors`.\n\n1.0.4\n-----\n* Widened version bound
  on `transformers`.\n\n1.0.3\n-----\n* Added `bitransverseScope`.\n\n1.0.2\n-----\n*
  Removed unneccesary constraint on `hoistScope`.\n\n1.0.1\n-----\n* Added a monomorphic
  `hoistScope` for `Bound.Scope.Simple`\n\n1.0\n---\n* Added instances for `Bound`
  for all of the `mtl` monads.\n* Added `Data` and `Typeable` support to both versions
  of `Scope`\n* Added the missing `Applictive` instance to `Bound.Scope.Simple`\n*
  Moved `hoistScope`, `bitraverseScope`, `transverseScope`, and `instantiateVars`
  here from the `ermine` compiler.\n\n0.9.1.1\n-------\n* Updated to work with `bifunctors`
  4.0\n\n0.9.1\n-----\n* Updated to work with `comonad` 4.0 and `profunctors` 4.0\n\n0.9\n---\n*
  Added the missing instance for `Applicative (Scope b f)`\n\n0.8.1\n-----\n* SafeHaskell
  support\n\n0.8\n---\n* Added `Serial`, `Binary` and `Serialize` instances for `Scope`.\n\n0.7\n---\n*
  Added `Hashable`, `Hashable1` and `Hashable2` instances where appropriate for `Name`,
  `Var` and `Scope`.\n\n0.6.1\n-----\n* More aggressive inlining\n* Added `unvar`,
  `_B`, `_F` to `Bound.Var`.\n* Added `_Name` to `Bound.Name`.\n\n0.6\n---\n* Support
  for `prelude-extras` 0.3\n\n0.5.1\n-----\n* Removed my personal inter-package dependency
  upper bounds\n* Updated doctest suite to use exact versions.\n\n0.5\n---\n* Created
  a `doctest`-based test suite\n* Added many examples\n* 100% haddock coverage\n*
  Added the `Name` `Comonad`, to help retain names for bound variables.\n* Bumped
  dependencies\n"
basic-deps:
  cereal: ! '>=0.3.5.2 && <0.6'
  base: ! '>=4 && <5'
  comonad: ! '>=3 && <6'
  bifunctors: ! '>=3 && <6'
  binary: ! '>=0.5 && <0.9'
  mmorph: ! '>=1.0 && <1.2'
  hashable: ! '>=1.2.5.0 && <1.3'
  transformers: ! '>=0.2 && <0.6'
  deepseq: ! '>=1.1 && <1.5'
  template-haskell: ! '>=2.7 && <3'
  transformers-compat: ! '>=0.5 && <1'
  profunctors: ! '>=3.3 && <6'
  bytes: ! '>=0.4 && <1'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.2'
- '0.2.1'
- '0.3.1'
- '0.3.2'
- '0.4'
- '0.5'
- '0.5.0.1'
- '0.5.0.2'
- '0.5.1'
- '0.6'
- '0.6.1'
- '0.7'
- '0.8'
- '0.8.1'
- '0.9'
- '0.9.0.1'
- '0.9.1'
- '0.9.1.1'
- '1.0'
- '1.0.1'
- '1.0.2'
- '1.0.3'
- '1.0.4'
- '1.0.5'
- '1.0.6'
- '1.0.7'
- '2'
- '2.0.1'
author: Edward A. Kmett
latest: '2.0.1'
description-type: markdown
description: ! "Bound\n=====\n\n[![Hackage](https://img.shields.io/hackage/v/bound.svg)](https://hackage.haskell.org/package/bound)
  [![Build Status](https://secure.travis-ci.org/ekmett/bound.png?branch=master)](http://travis-ci.org/ekmett/bound)\n\nGoals\n-----\n\nThis
  library provides convenient combinators for working with \"locally-nameless\" terms.
  These can be useful\nwhen writing a type checker, evaluator, parser, or pretty printer
  for terms that contain binders like forall\nor lambda, as they ease the task of
  avoiding variable capture and testing for alpha-equivalence.\n\nSee [the documentation](http://hackage.haskell.org/package/bound)
  on hackage for more information, but here is an example:\n\n```haskell\n{-# LANGUAGE
  DeriveFunctor #-}\n{-# LANGUAGE DeriveFoldable #-}\n{-# LANGUAGE DeriveTraversable
  #-}\n{-# LANGUAGE TemplateHaskell #-}\n\nimport Bound\nimport Control.Applicative\nimport
  Control.Monad\nimport Data.Functor.Classes\nimport Data.Foldable\nimport Data.Traversable\nimport
  Data.Eq.Deriving (deriveEq1)      -- these two are from the\nimport Text.Show.Deriving
  (deriveShow1)  -- deriving-compat package\n\ninfixl 9 :@\ndata Exp a = V a | Exp
  a :@ Exp a | Lam (Scope () Exp a)\n  deriving (Eq,Show,Functor,Foldable,Traversable)\n\ninstance
  Applicative Exp where pure = V; (<*>) = ap\n\ninstance Monad Exp where\n  return
  = V\n  V a      >>= f = f a\n  (x :@ y) >>= f = (x >>= f) :@ (y >>= f)\n  Lam e
  \   >>= f = Lam (e >>>= f)\n\nlam :: Eq a => a -> Exp a -> Exp a\nlam v b = Lam
  (abstract1 v b)\n\nwhnf :: Exp a -> Exp a\nwhnf (f :@ a) = case whnf f of\n  Lam
  b -> whnf (instantiate1 a b)\n  f'    -> f' :@ a\nwhnf e = e\n\nderiveEq1 ''Exp\nderiveShow1
  ''Exp\n\nmain :: IO ()\nmain = do\n  let term = lam 'x' (V 'x') :@ V 'y'\n  print
  term         -- Lam (Scope (V (B ()))) :@ V 'y'\n  print $ whnf term  -- V 'y'\n```\n\n
  \  There are longer examples in the [examples/ folder](https://github.com/ekmett/bound/tree/master/examples).\n\nContact
  Information\n-------------------\n\nContributions and bug reports are welcome!\n\nPlease
  feel free to contact me through github or on the #haskell IRC channel on irc.freenode.net.\n\n-Edward
  Kmett\n\n"
license-name: BSD3
