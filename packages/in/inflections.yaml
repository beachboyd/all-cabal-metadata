homepage: https://github.com/stackbuilders/inflections-hs
changelog-type: markdown
hash: f2fbaed941d7c5bba49ebeaca934bf384b4688bb489eccaf8a9179f40271c4f2
test-bench-deps:
  base: ! '>=4.6 && <5.0'
  hspec: ! '>=2.0 && <3.0'
  text: ! '>=0.2 && <1.3'
  megaparsec: -any
  containers: ! '>=0.5 && <0.7'
  inflections: -any
  hspec-megaparsec: ! '>=2.0 && <3.0'
  QuickCheck: ! '>=2.7.6 && <3.0'
maintainer: Justin Leitgeb <justin@stackbuilders.com>
synopsis: Inflections library for Haskell
changelog: ! "## Inflections 0.4.0.3\n* Support `megaparsec` == 7.0*.\n* **Drop support**
  for `GHC 7.8.4`.\n\n## Inflections 0.4.0.3\n* Support `exceptions` == 0.10.*\n\n##
  Inflections 0.4.0.2\n* Support `exceptions` == 0.9.*\n\n## Inflections 0.4.0.1\n*
  Support `megaparsec` >= 6.4.0\n\n## Inflections 0.4.0.0\n\n* Update megaparsec to
  version 6.\n\n## Inflections 0.3.0.0\n\n* A more type-safe API forbidding creation
  of invalid words.\n\n* Made the API use `Text` instead of `String` (which significally
  improved\n  speed).\n\n* Switched to Megaparsec 5 for parsing.\n\n* Renamed `defaultMap`
  to `defaultTransliterations`.\n\n* Words now can contain digits (recognized by all
  parsers).\n\n* `parseSnakeCase` now is not confused when a word happens to have
  prefix\n  coinciding with an acronym. This is harder to fix for `parseCamelCase`\n
  \ because acronym may contain capital letters, so old behavior is preserved\n  for
  `parseCamelCase` for now.\n\n* `parseCamelCase` and `parseSnakeCase` take any instance
  of `Foldable` as a\n  collection of acronyms, not just lists.\n\n* Added the `CHANGELOG.md`
  file.\n\n* Switched test suite to Hspec.\n\n* The `toUnderscore`, `toDashed`, and
  `toCamelCased` are not partial\n  anymore. They return parse error in `Left` just
  like parsing functions,\n  but this result can be lifted into any instance of `MonadThrow`
  with\n  `betterThrow` helper.\n\n* Improved documentation.\n\n## Inflections 0.2.0.1\n\n*
  Support for GHC 8.0.\n\n## Inflections 0.2.0.0\n\n* Added `other-modules` to test
  suite.\n\n## Inflections 0.1.0.10\n\n* Support for GHC 7.10.\n\n## Inflections 0.1.0.9\n\n*
  Support for GHC 7.8.\n\n## Inflections 0.1.0.8\n\n* Fixed a typo in docs of `humanize`.\n\n*
  Added `toUnderscore`, `toDashed`, and `toCamelCased`.\n\n## Inflections 0.1.0.7\n\n*
  Support for `base-4.7`.\n\n* Improved documentation.\n\n## Inflections 0.1.0.6\n\n*
  Added `titleize` and `humanize`.\n\n* Improved documentation.\n\n## Inflections
  0.1.0.5\n\n* Added module documentation for `Text.Inflections`.\n\n## Inflections
  0.1.0.4\n\n* Reduced number of public modules to one: `Text.Inflections`.\n\n* Added
  `ordinal` and `ordinalize`.\n\n* Improved documentation.\n\n## Inflections 0.1.0.3\n\n*
  Added `camelize`, `camelizeCustom`, `underscore`, and `underscoreCustom`.\n\n* Made
  the word parser accept empty input.\n\n* Improved documentation.\n\n## Inflections
  0.1.0.2\n\n* Added the `transliterate` and `transliterateCustom` functions.\n\n##
  Inflections 0.1.0.1\n\n* No changes.\n\n## Inflections 0.1.0.0\n\n* Initial release.\n"
basic-deps:
  exceptions: ! '>=0.6 && <0.11'
  base: ! '>=4.6 && <5.0'
  unordered-containers: ! '>=0.2.7 && <0.3'
  text: ! '>=0.2 && <1.3'
  megaparsec: ! '>=7.0.1 && <8.0'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
- 0.1.0.8
- 0.1.0.9
- 0.1.0.10
- 0.2.0.0
- 0.2.0.1
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.3
- 0.4.0.4
author: Justin Leitgeb <justin@stackbuilders.com>
latest: 0.4.0.4
description-type: markdown
description: ! '# String Inflections for Haskell


  [![License MIT](https://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)

  [![Hackage](https://img.shields.io/hackage/v/inflections.svg)](http://hackage.haskell.org/package/inflections)

  [![Stackage Nightly](http://stackage.org/package/inflections/badge/nightly)](http://stackage.org/nightly/package/inflections)

  [![Stackage LTS](http://stackage.org/package/inflections/badge/lts)](http://stackage.org/lts/package/inflections)

  [![Build Status](https://travis-ci.org/stackbuilders/inflections-hs.svg?branch=master)](https://travis-ci.org/stackbuilders/inflections-hs)


  This library is a partial port of the

  [String Inflector](http://api.rubyonrails.org/classes/ActiveSupport/Inflector.html)

  from Ruby on Rails. It currently implements methods such as `parameterize`,

  `transliterate`, `camelize`, `underscore` and `dasherize`. Please see the

  haddock documentation for a complete list of the functions implemented by this

  library.


  Unlike the ActiveSupport (Rails) and Ember implementations of inflections, this

  library uses a parser to verify the input to functions like `camelize`. This is

  done to ensure that the output strings adhere to the syntax that they are

  supposed to generate. You can read more about the philosophy behind this library

  in the

  [Haddock documentation](http://hackage.haskell.org/package/inflections/docs/Text-Inflections.html).


  ## Usage


  The following examples demonstrate usage of the `parameterize`, `transliterate`

  and `camelize` functions:


  ```haskell

  λ: parameterize "Hola. ¿Cómo estás?"

  "hola-como-estas"


  λ: transliterate "Hola. ¿Cómo estás?"

  "Hola. ?Como estas?"


  λ: import Control.Monad (liftM)

  λ: liftM camelize $ parseSnakeCase "hey_there"

  "HeyThere"

  ```


  ## Customization


  Part of parameterizing strings is approximating all characters in the input

  encoding to ASCII characters. This library copies the character approximation

  table from the Ruby i18n library. This data structure is provided as

  `defaultCharacterTransliterations`. You can provide your own transliteration map

  by passing a Map structure (from Data.Map) to the `parameterizeCustom` function.


  If you want to specify a custom default replacement or approximation table for

  the `transliterate` function, you should instead call the `transliterateCustom`

  function which accepts a String for replacements and a Map for substitution.


  ## TODO


  I''d like this library to implement other functions found in the Rails

  inflections library. If you need one of those functions, please submit a pull

  request!


  ## Further documentation


  For more information, please see the the

  [Haddock docs for this module](http://hackage.haskell.org/package/inflections/docs/Text-Inflections.html).


  ## Author


  Justin Leitgeb <justin@stackbuilders.com>


  ## Contributing


  You may submit pull requests to this repository on GitHub. Tests are appreciated
  with your contribution.


  ## License


  MIT - see [the LICENSE file](LICENSE).

'
license-name: MIT
