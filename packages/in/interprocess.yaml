homepage: https://github.com/achirkin/interprocess
changelog-type: ''
hash: 484a5077f46577abcd3c254f5ff35c7cbfb05d46afb4248d73099ace6c72bfbe
test-bench-deps:
  interprocess: -any
  base: -any
  typed-process: ! '>=0.2'
maintainer: chirkin@arch.ethz.ch
synopsis: Shared memory and control structures for IPC
changelog: ''
basic-deps:
  interprocess: -any
  base: ! '>=4.8 && <5'
  typed-process: ! '>=0.2'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
author: Artem Chirkin
latest: '0.2.0.0'
description-type: markdown
description: ! "# interprocess\n\nWIP: platform-independent interprocess communication.\n\nThe
  core feature is shared memory allocator implemented using POSIX mmap and Windows
  CreateFileMapping.\nYou can create as many allocators as you want (as your RAM can
  afford) and\nconcurrently malloc and free memory in different processes using them.\n\nFeatures
  and TODO:\n\n  * [x] `Foreign.SharedPtr` -- `malloc`, `realloc` and `free` in the
  shared memory region\n        that can be accessed by multiple processes.\n  * [x]
  Semaphores\n  * [ ] Mutexes (not sure if need this)\n  * [x] Mutable variables via
  `Storable` instance plus garbage collection.\n  * [ ] Proper error messages\n  *
  [ ] Debug, verbose mode\n\nThe idea of the library is to address GHC stop-the-world
  GC problem:\n\n  1. Create several instances of your program in different isolated
  processes\n     using e.g. `typed-process` library.\n  2. Establish shared memory
  and semaphore usage via this program\n  3. Garbage collection events in one process
  do not affect another one at all. Profit!\n"
license-name: BSD3
