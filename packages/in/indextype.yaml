homepage: ''
changelog-type: ''
hash: 416ec9ba770b218da2a936c38cbf060f1d9c24712e71332b822252d7b959c0ef
test-bench-deps:
  base: ==4.9.*
  hspec: ==2.4.*
maintainer: clintonmead@gmail.com
synopsis: A series of type families and constraints for "indexable" types.
changelog: ''
basic-deps:
  base: ==4.9.*
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.2.0'
- '0.2.3.0'
author: Clinton Mead
latest: '0.2.3.0'
description-type: haddock
description: ! 'This package deals with types that can roughly be "indexed" at compile
  time by an integer.

  For example, tuples and be indexed by their nth elements, and functions by their
  nth argument.

  A number of type functions allow one to extract these subtypes, i.e. the type of
  the 2nd element of a given tuple.

  Furthermore, constraints are defined which allow one to easily constrain types to
  these index types,

  e.g. a constraint that says "''t'' is a 3 tuple". ''Control.IndexT'' has more detail.'
license-name: BSD3
