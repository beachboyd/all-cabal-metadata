homepage: https://github.com/commercialhaskell/intero
changelog-type: text
hash: 8c70899999117ae574095db7cb71e42adf8f2336308282b8bda0bcbbb5c5e62b
test-bench-deps:
  base: -any
  hspec: -any
  filepath: -any
  process: -any
  regex-compat: -any
  transformers: -any
  temporary: -any
  directory: -any
maintainer: chrisdone@fpcomplete.com
synopsis: Complete interactive development program for Haskell
changelog: "0.1.38:\n\t* Fix bug of getting encoding for networked queries\n\n0.1.37:\n\t*
  Fix completion listing deferred names\n\n0.1.36:\n\t* Fix handling of unicode for
  type/info queries\n\n0.1.35:\n\t* Support for GHC 8.6.3\n\n0.1.34:\n\t* Support
  for GHC 8.6.1\n\n0.1.33:\n\t* Support for GHC 8.4.4\n\n0.1.32:\n\t* Support for
  GHC 8.4.3\n\n0.1.31:\n\t* Collecting type info no longer prints messages\n\n0.1.29:\n\t*
  Support GHC 8.4\n\n0.1.27:\n\t* Add experimental :fill command.\n\n0.1.23:\n\t*
  :cd handles quoted filepaths properly\n\n0.1.22:\n\t* Support for :move and :sleep\n\n0.1.20:\n\t*
  More robust name finding, fixes bug https://github.com/commercialhaskell/intero/issues/98\n\n0.1.19:\n\t*
  Support completion of qualified identifiers\n\n0.1.18:\n        * Completion in
  the REPL gets updated properly when imports\n\tadded/removed https://github.com/commercialhaskell/intero/issues/112\n\n0.1.17:\n\t*
  :unset -XFoo now works\n\n0.1.16:\n\t* Re-add back collecting type info after any
  load\n\n0.1.14:\n\t* Bring back :completion\n\n0.1.13:\n\t* Fix bug in :type-at
  returning outer span info (https://github.com/commercialhaskell/intero/issues/47)\n\n0.1.12:\n\t*
  Emacs mode automatically installs latest intero.\n\t* intero-list-buffers command.\n\t*
  Fix cl-case reference\n\t* Add warning when used outside of stack exec/stack ghci\n\t*
  Transfer to commercialhaskell\n\n0.1.11:\n\t* Support --version\n\n0.1.10:\n\t*
  Completion for module's local imports and definitions (https://github.com/chrisdone/intero/issues/31)\n\t*
  Starting the REPL takes the targets chosen for the backend\n\t* Prompt displays
  interrobang for cuteness (https://github.com/chrisdone/intero/issues/40)\n\n0.1.9:\n\t*
  Support GHC 8\n\t* Fix completion before any module is loaded (https://github.com/chrisdone/intero/issues/34)\n\t*
  Add completion for custom commands\n\t* Add data-files entry for Emacs Lisp code\n\t*
  Collect type-info whenever anything is loaded (https://github.com/chrisdone/intero/issues/37)\n\n0.1.8:\n\t*
  Don't use -dynamic on Windows.\n\n0.1.7:\n\t* Remove \"flags: \" message\n\n0.1.6:\n\t*
  Make better, more liberal :type-at (https://github.com/chrisdone/intero/issues/29)\n\t*
  Better argument parser for :type-at, :loc-at, :uses\n\t* Retain names that were
  in scope after a successful load for :complete\n\n0.1.5:\n\t* Add upper bound for
  GHC (https://github.com/chrisdone/intero/issues/27)\n\n0.1.4:\n\t* Fix cache invalidation
  bug for interpreted mode (https://github.com/chrisdone/intero/issues/1)\n\n0.1.3:\n\t*
  Added test suite\n\t* Fix bug in :type-at that excluded a type constraint (https://github.com/chrisdone/intero/issues/14)\n\n0.1.2:\n\t*
  Fixed bug in :uses, by using location equality.\n"
basic-deps:
  ghc: ! '>=7.8 && <=8.6.3'
  bytestring: -any
  unix: -any
  haskeline: -any
  base: <5
  time: -any
  syb: -any
  filepath: -any
  process: -any
  network: -any
  array: -any
  containers: -any
  ghc-paths: -any
  mtl: -any
  ghci: -any
  transformers: -any
  random: -any
  ghc-boot-th: -any
  directory: -any
all-versions:
- 0.0.0
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.8
- 0.1.9
- 0.1.10
- 0.1.11
- 0.1.12
- 0.1.13
- 0.1.14
- 0.1.15
- 0.1.16
- 0.1.17
- 0.1.18
- 0.1.19
- 0.1.20
- 0.1.21
- 0.1.22
- 0.1.23
- 0.1.24
- 0.1.25
- 0.1.26
- 0.1.27
- 0.1.28
- 0.1.29
- 0.1.30
- 0.1.31
- 0.1.32
- 0.1.33
- 0.1.34
- 0.1.35
- 0.1.38
author: Chris Done, The University of Glasgow
latest: 0.1.38
description-type: markdown
description: |
  # intero [![Build Status](https://travis-ci.org/chrisdone/intero.svg)](https://travis-ci.org/chrisdone/intero) ![Build status](https://ci.appveyor.com/api/projects/status/23bdffi0bmycxn50?svg=true)

  Complete interactive development program for Haskell

  ## Intero for Emacs

  [![MELPA](https://melpa.org/packages/intero-badge.svg)](https://melpa.org/#/intero) [![MELPA Stable](https://stable.melpa.org/packages/intero-badge.svg)](https://stable.melpa.org/#/intero)

  Please see
  [the homepage for Intero for Emacs](http://chrisdone.github.io/intero).

  #### Default key bindings

  Key binding | Description
  --- | ---
  `M-.` | Jump to definition
  `C-c C-i` | Show information of identifier at point
  `C-c C-t` | Show the type of thing at point, or the selection
  `C-u C-c C-t` | Insert a type signature for the thing at point
  `C-c C-l` | Load this module in the REPL
  `C-c C-c` | Evaluate the selected region in the REPL
  `C-c C-r` | Apply suggestions from GHC
  `C-c C-k` | Clear REPL
  `C-c C-z` | Switch to and from the REPL

  ## Install requirements

  Make sure you have this package installed on Linux:

      libtinfo-dev

  (People on other platforms please contribute the equivalent
  dependency.)

  ## Enabling intero

  To enable `intero` in all `haskell-mode` buffers by default, enable
  `intero-global-mode`, by using `M-x customize` or by adding
  `(intero-global-mode 1)` to your Emacs start-up files.

  Intero will then activate for all projects, and for files without a
  stack.yaml, it will assume the "global" project. If you want to use an
  alternate stack yaml configuration file (for example, when developing
  for multiple GHC versions), use `M-x intero-stack-yaml` to switch
  file. When switching configuration, you will asked whether you want to
  preserve this choice across emacs sessions for the given project.

  ## Whitelisting/blacklisting projects

  Some users prefer to enable Intero selectively. The custom variables
  `intero-blacklist` and `intero-whitelist` are provided for this
  purpose, and are honoured by `intero-global-mode`:

  If the parent directory of a Haskell file is listed in
  `intero-blacklist`, then `intero` will not be enabled for that file,
  unless a parent directory of that file is also listed in
  `intero-whitelist`. In other words, whitelist entries take
  precedence. You can therefore blacklist `/` to disable `intero` in all
  projects unless they are whitelisted.

  ## Intero support for other editors and IDEs

  Although not supported by the Intero maintainers, integrations with other editors exist:

  * [intero-neovim](https://github.com/parsonsmatt/intero-neovim)
  * [haskero](https://gitlab.com/vannnns/haskero) (vscode)
  * [Haskelly](https://github.com/haskelly-dev/Haskelly) (vscode)
  * [sublime-intero](https://github.com/dariusf/sublime-intero)

  If you would like to build support into a new editor or IDE, please see
  [TOOLING.md](https://github.com/commercialhaskell/intero/blob/master/TOOLING.md).
license-name: BSD-3-Clause
