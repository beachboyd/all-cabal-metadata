homepage: https://github.com/minad/intro#readme
changelog-type: ''
hash: 89fb19f7246e7870c4a48d6918e3d4c5fafc157b276ede5296a7335b39eb5b7b
test-bench-deps:
  bytestring: ! '>=0.9 && <0.11'
  extra: ! '>=1.5.1 && <1.7'
  base: ! '>=4.8 && <5.0'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=0.7 && <1.3'
  dlist: ! '>=0.7 && <0.9'
  intro: -any
  containers: ! '>=0.5 && <0.7'
  lens: -any
  bifunctors: ! '>=5.2 && <5.5'
  binary: ! '>=0.7 && <0.9'
  writer-cps-mtl: ! '>=0.1.1.2 && <0.2'
  mtl: ! '>=2.2 && <2.3'
  hashable: ! '>=1.2.5 && <1.3'
  transformers: ! '>=0.4 && <0.6'
  deepseq: ! '>=1.4 && <1.5'
  QuickCheck: -any
  safe: ! '>=0.3.11 && <0.4'
maintainer: Daniel Mendler <mail@daniel-mendler.de>
synopsis: ! '"Fixed Prelude" - Mostly total and safe, provides Text and Monad transformers'
changelog: ''
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  extra: ! '>=1.5.1 && <1.7'
  base: ! '>=4.8 && <5.0'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=0.7 && <1.3'
  dlist: ! '>=0.7 && <0.9'
  containers: ! '>=0.5 && <0.7'
  bifunctors: ! '>=5.2 && <5.5'
  binary: ! '>=0.7 && <0.9'
  writer-cps-mtl: ! '>=0.1.1.2 && <0.2'
  mtl: ! '>=2.2 && <2.3'
  hashable: ! '>=1.2.5 && <1.3'
  transformers: ! '>=0.4 && <0.6'
  deepseq: ! '>=1.4 && <1.5'
  safe: ! '>=0.3.11 && <0.4'
all-versions:
- '0.0.1.0'
- '0.0.2.0'
- '0.0.2.1'
- '0.0.2.2'
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.1.0.6'
- '0.1.0.7'
- '0.1.0.8'
- '0.1.0.9'
- '0.1.0.10'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.1.0'
- '0.3.2.0'
author: Daniel Mendler <mail@daniel-mendler.de>
latest: '0.3.2.0'
description-type: markdown
description: ! '# Intro: My current Haskell Prelude


  [![Hackage](https://img.shields.io/hackage/v/intro.svg)](https://hackage.haskell.org/package/intro)

  [![Build Status](https://secure.travis-ci.org/minad/intro.png?branch=master)](http://travis-ci.org/minad/intro)


  Intro is a modern Prelude which provides safe alternatives

  for most of the partial functions and follows other

  best practices, e.g., Text is preferred over String.

  For String overloading the extension ''OverloadedStrings'' should be used.

  Container types and Monad transformers are provided.


  Most important - this Prelude tries to keep things simple.

  This means it just reexports from base and commonly used libraries

  and adds only very few additional functions.


  List of design decisions:


  * Keep everything at one place (There are three modules and Intro.Trustworthy is
  only there for Safe Haskell)

  * Conservative extension over the base Prelude

  * Rely only on very common external libraries

  * Avoid writing custom functions

  * Export everything explicitly to provide a stable interface and for good documentation

  * Export only total functions or provide safe alternatives (Very few exceptions
  like div etc.)

  * Prefer Text over String, provide ConvertString and EncodeString

  * Provide Monad transformers

  * Provide container types

  * Prefer generic functions

  * Debugging functions, like ''Intro.Trustworthy.trace'' and ''undefined'' are available
  but produce compile time warnings

  * Don''t provide error, only panic instead

  * Compatibility with unqualified import of Control.Lens

'
license-name: MIT
