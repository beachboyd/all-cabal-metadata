homepage: http://hub.darcs.net/thielema/interpolation/
changelog-type: text
hash: 3511f5a64db202b161b50747967278af71ffe5353bc8fa4a4d99e0832bacd9ac
test-bench-deps:
  interpolation: -any
  base: ! '>=4.5 && <5'
  array: ! '>=0.4 && <0.6'
  utility-ht: ! '>=0.0.9 && <0.1'
  containers: ! '>=0.4 && <0.7'
  QuickCheck: ! '>=2.4 && <3'
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: piecewise linear and cubic Hermite interpolation
changelog: ! "0.1:\n\n* Hermite1 interpolation: different order of coefficients\n\n
  \ Interleave node values and derivatives\n  in order to get a narrow banded Gramian
  matrix\n  from a sampled interpolation basis.\n\n  Rename from 'cubic' to 'hermite1'.\n"
basic-deps:
  base: ! '>=4 && <5'
  utility-ht: ! '>=0.0.1 && <0.1'
all-versions:
- '0.0'
- '0.1'
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
author: Henning Thielemann
latest: 0.1.0.3
description-type: haddock
description: ! 'Represent real functions by linear or cubic polynomial segments.

  The package provides both data structures

  for efficient lookup of interpolation intervals,

  and computation of basis functions.


  There are two examples that can be built with


  > cabal install -fbuildExamples


  * @example/Plot.hs@:

  Interpolate a sinus curve using piecewise linear interpolation

  and piecewise Hermite cubic interpolation.

  For the latter one we provide the derivatives of the sinus function

  at the interpolation nodes.


  * @example/Fit.hs@:

  Demonstrates how to use the basis functions

  for fitting an interpolation function to a given function

  using a linear least squares solver like @<\>@ from @hmatrix@.

  We use a distorted sinus as target.


  The package needs only Haskell 98.

  Most of the package dependencies are only needed for the examples

  and are only installed if you enable to build them.'
license-name: BSD-3-Clause
