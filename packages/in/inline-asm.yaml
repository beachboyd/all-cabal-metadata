homepage: https://github.com/0xd34df00d/inline-asm#readme
changelog-type: markdown
hash: 14089b73fd1aab767d95a3c5291d9c6e3ab29a98672644d10b302560e2a66e9e
test-bench-deps:
  either: -any
  base: ! '>=4.7 && <5'
  hspec: -any
  megaparsec: -any
  uniplate: -any
  containers: -any
  ghc-prim: -any
  mtl: -any
  inline-asm: -any
  QuickCheck: -any
  template-haskell: ! '>=2.15.0.0'
maintainer: 0xd34df00d@gmail.com
synopsis: Inline some Assembly in ur Haskell!
changelog: |
  # Changelog for inline-asm

  ## v0.3.0.0

  * Support named arguments for doubles and floats as well.
  * Support passing Ptr values.

  ## v0.2.0.0

  * Support named arguments.

  ## v0.1.1.0

  * Support returning tuples.

  ## v0.1.0.0

  * Initial implementation.
basic-deps:
  either: -any
  base: ! '>=4.7 && <5'
  megaparsec: -any
  uniplate: -any
  containers: -any
  ghc-prim: -any
  mtl: -any
  inline-asm: -any
  template-haskell: ! '>=2.15.0.0'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
- 0.2.1.0
author: Georg Rudoy
latest: 0.2.1.0
description-type: markdown
description: |
  # inline-asm

  [![Build Status][travis-badge]][travis]

  _When inline C is too safe_.

  Did you try `inline-c`, but it's not enough? You need more? Nothing seems to satisfy?
  `inline-asm` to the rescue!

  For now the usage is pretty straightforward: use `defineAsmFun` to define the
  corresponding function, like
  ```haskell
  defineAsmFun "timesTwo" [t| Word -> Word |] "add %rbx, %rbx"
  ````
  and then use the function `timesTwo` as any other function of type `Word -> Word`:
  ```haskell
  main = print $ timesTwo 21
  ```

  There is also an alternative notation allowing named arguments to avoid remembering
  which arguments are passed in which registers:
  ```haskell
  defineAsmFun "swap2p1"
    [asmTy| (a : Int) (b : Int) | (_ : Int) (_ : Int)]
    [asm|
    xchg ${a}, ${b}
    add $1, ${b}
    |]
  ```

  [travis]:        <https://travis-ci.org/0xd34df00d/inline-asm>
  [travis-badge]:  <https://travis-ci.org/0xd34df00d/inline-asm.svg?branch=master>
license-name: BSD-3-Clause
