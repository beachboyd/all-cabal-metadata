homepage: ''
changelog-type: markdown
hash: 690699f657d383a8a268625a35fe21e512568c4949a28652257e29a98353eac7
test-bench-deps: {}
maintainer: vamchale@gmail.com
synopsis: A build tool for ATS
changelog: ! "# ats-pkg\n\n## 3.2.3.0\n\n  * Update to not use `cpphs`\n\n## 3.2.2.4\n\n
  \ * Fix `dhall/atslib.dhall` file that is embedded into the binary\n\n## 3.3.2.0\n\n
  \ * Update `Debian` type and adjust prelude accordingly\n  * Allow Debian packages
  built to include header files and libraries.\n  * Bug fixes related to Debian packaging.\n\n##
  3.2.1.8\n\n  * Update Dhall prelude\n\n## 3.2.1.2\n\nBug Fixes:\n\n  * Don't default
  to 4 processors\n  * Use `getAppUserDirectory` for better portability\n\nBreaking
  Changes:\n\n  * Only build C sources when sensible to do so\n"
basic-deps:
  http-client: -any
  quaalude: -any
  shake: -any
  zip-archive: -any
  ats-pkg: -any
  bytestring: -any
  bzlib: -any
  ansi-wl-pprint: -any
  shake-c: ! '>=0.4.0.0'
  Cabal: ! '>=2.2.0.0'
  filemanip: -any
  base: ! '>=4.10 && <5'
  dhall: ! '>=1.15.0'
  text: -any
  shake-ext: ! '>=3.0.0.0'
  process: -any
  containers: -any
  cli-setup: -any
  tar: -any
  dependency: ! '>=1.2.0.0'
  shake-ats: ! '>=1.8.0.0'
  lzma: -any
  http-client-tls: -any
  zlib: -any
  mtl: -any
  parallel-io: -any
  file-embed: -any
  temporary: -any
  optparse-applicative: -any
  microlens: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.0.1'
- '0.3.0.1'
- '0.3.0.2'
- '1.0.0.0'
- '1.1.0.0'
- '1.1.0.1'
- '1.1.0.2'
- '1.1.0.3'
- '1.2.0.0'
- '1.2.0.1'
- '1.2.0.2'
- '1.2.0.3'
- '1.2.0.4'
- '1.2.0.5'
- '1.2.0.6'
- '1.2.0.7'
- '1.2.0.8'
- '1.2.1.0'
- '1.2.1.3'
- '1.3.0.0'
- '1.4.0.0'
- '1.4.0.1'
- '1.4.0.3'
- '1.4.0.6'
- '2.0.0.2'
- '2.0.0.4'
- '2.0.0.6'
- '2.0.0.7'
- '2.0.0.8'
- '2.0.0.9'
- '2.0.0.10'
- '2.0.0.11'
- '2.0.0.12'
- '2.0.0.13'
- '2.1.0.0'
- '2.1.0.3'
- '2.1.0.5'
- '2.1.0.6'
- '2.1.0.7'
- '2.1.0.8'
- '2.1.0.9'
- '2.1.0.10'
- '2.2.0.0'
- '2.2.0.1'
- '2.2.0.2'
- '2.2.0.5'
- '2.2.0.6'
- '2.2.0.7'
- '2.2.0.8'
- '2.2.0.11'
- '2.2.0.15'
- '2.2.0.16'
- '2.2.0.17'
- '2.2.0.18'
- '2.2.1.0'
- '2.2.1.1'
- '2.3.0.0'
- '2.3.0.3'
- '2.3.0.6'
- '2.4.0.0'
- '2.4.0.3'
- '2.4.0.6'
- '2.4.1.0'
- '2.4.1.6'
- '2.4.2.0'
- '2.4.2.7'
- '2.4.2.8'
- '2.4.2.9'
- '2.4.2.18'
- '2.4.2.19'
- '2.5.0.3'
- '2.6.0.0'
- '2.6.0.1'
- '2.6.0.2'
- '2.6.0.3'
- '2.6.1.0'
- '2.6.1.1'
- '2.6.1.2'
- '2.6.1.3'
- '2.6.1.11'
- '2.6.1.16'
- '2.7.0.10'
- '2.7.0.22'
- '2.7.1.0'
- '2.7.1.1'
- '2.7.1.2'
- '2.8.0.0'
- '2.8.0.8'
- '2.9.0.0'
- '2.9.0.1'
- '2.9.0.2'
- '2.10.0.0'
- '2.10.0.2'
- '2.10.0.8'
- '2.10.0.11'
- '2.10.0.17'
- '2.10.0.20'
- '2.10.1.5'
- '2.10.1.8'
- '2.10.2.0'
- '2.10.2.2'
- '2.10.2.5'
- '2.11.0.1'
- '2.11.0.7'
- '2.11.0.8'
- '2.11.0.9'
- '2.11.0.10'
- '3.0.0.0'
- '3.0.0.1'
- '3.0.0.2'
- '3.0.0.4'
- '3.0.0.10'
- '3.0.0.11'
- '3.1.0.2'
- '3.1.0.6'
- '3.1.0.12'
- '3.2.1.2'
- '3.2.1.8'
- '3.2.2.0'
- '3.2.2.2'
- '3.2.2.3'
- '3.2.3.0'
author: Vanessa McHale
latest: '3.2.3.0'
description-type: markdown
description: ! "# ATSPackage\n\n[![Build Status](https://travis-ci.org/vmchale/atspkg.svg?branch=master)](https://travis-ci.org/vmchale/atspkg)\n[![Windows
  build status](https://ci.appveyor.com/api/projects/status/github/vmchale/atspkg?svg=true)](https://ci.appveyor.com/project/vmchale/atspkg)\n[![Hackage](https://img.shields.io/hackage/v/ats-pkg.svg)](http://hackage.haskell.org/package/ats-pkg)\n[![Dependencies
  of latest version on Hackage](https://img.shields.io/hackage-deps/v/ats-pkg.svg)](https://hackage.haskell.org/package/ats-pkg)\n\nThis
  is a build system for ATS written in Haskell and configured with Dhall. It\nis not
  fully working, but the configuration format is now stable.\n\n`atspkg` works quite
  well as a build system, and acceptably well as a package manager.\n\n## Features
  & Non-Features\n\nThings that `atspkg` will do for you:\n\n  * Dramatically simplify
  CI for ATS projects\n  * Simplify distribution of your project\n  * Enable Haskell
  builds that depend on ATS code\n  * Enable ATS builds that depend on Haskell code\n
  \ * Track all file dependencies\n  * Make contributing to your projects easier\n
  \ * Run builds in parallel (like `make`)\n  * Install `patscc` and other ATS tooling\n
  \ * Install manual pages and shell completions\n  * Install ATS libraries\n  * Dependency
  resolution\n\nThings that `atspkg` will not do for you:\n\n  * Give you the full
  flexibility of the C/ATS ecosystem\n  * Integrate with other ecosystems\n  * Provide
  a centralized package repository\n  * Cache builds (like `nix` or `cabal new-build`)\n\n###
  Example\n\nAs an example, the following will install `polyglot`:\n\n```bash\natspkg
  remote https://github.com/vmchale/polyglot/archive/master.zip\n```\n\nAs you can
  see, this greatly simplifies distribution and testing of programs\nwritten in ATS.\n\n##
  Installation\n\n### Script\n\nThe easiest way to install is via a script, viz.\n\n```bash\ncurl
  -sSl https://raw.githubusercontent.com/vmchale/atspkg/master/bash/install.sh | sh
  -s\n```\n\nThereafter, you can run\n\n```bash\natspkg upgrade\n```\n\nto upgrade
  to the latest release.\n\n### Source\n\nIf that doesn't work, you can download\n[Cabal](https://www.haskell.org/cabal/download.html)
  and\n[GHC](https://www.haskell.org/ghc/download.html) and install with\n\n```bash\ncabal
  update\ncabal new-install ats-pkg --symlink-bindir ~/.local/bin --happy-options='-gcsa'
  --alex-options='-g'\n```\n\nNote that `$HOME/.local/bin` will need to be on your
  `PATH`.\n\n## Quick Start\n\nInstall [pi](http://github.com/vmchale/project-init)
  with\n\n```\ncurl -LSfs https://japaric.github.io/trust/install.sh | sh -s -- --git
  vmchale/project-init\n```\n\nInitialize an ATS project with\n\n```\npi new ats project\n```\n\nThen
  build & run it:\n\n```\ncd project\natspkg run\n```\n\n## Examples\n\nYou can find
  several examples with explanation\n[here](https://github.com/vmchale/atspkg/blob/master/ats-pkg/EXAMPLES.md).\n\n##
  Global Configuration\n\n\n`atspkg` is configured via a file in `$HOME/.config/atspkg/config.dhall`.
  You can\nset a custom package set as follows:\n\n```\nlet version = \"master\"\nin\n\nlet
  cfg =\n  { defaultPkgs = \"https://raw.githubusercontent.com/vmchale/atspkg/${version}/ats-pkg/pkgs/pkg-set.dhall\"\n
  \ , path = ([] : Optional Text)\n  , githubUsername = \"vmchale\"\n  , filterErrors
  = False\n  }\nin cfg\n```\n\nI recommend setting `version` to whichever branch your
  version of `atspkg` was\nbuilt from.\n"
license-name: BSD3
