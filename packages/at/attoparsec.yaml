homepage: https://github.com/bos/attoparsec
changelog-type: markdown
hash: a765937e4d2e80535af530fe53dddf6722291a9fecb15a6934f2b4b1f4de1239
test-bench-deps:
  bytestring: ! '>=0.10.4.0'
  case-insensitive: -any
  base: ==4.*
  unordered-containers: -any
  text: ! '>=1.1.1.0'
  filepath: -any
  criterion: ! '>=1.0'
  parsec: ! '>=3.1.2'
  array: -any
  quickcheck-unicode: -any
  containers: -any
  ghc-prim: -any
  tasty-quickcheck: ! '>=0.8'
  transformers: ! '>=0.4.1.0'
  tasty: ! '>=0.11'
  deepseq: ! '>=1.1'
  scientific: -any
  QuickCheck: ! '>=2.7 && <2.10'
  http-types: -any
  vector: -any
  directory: -any
maintainer: Bryan O'Sullivan <bos@serpentine.com>, Ben Gamari <ben@smart-cactus.org>
synopsis: Fast combinator parsing for bytestrings and text
changelog: ! "0.13.2.1\n\n* Improved performance of `Data.Attoparsec.Text.asciiCI`\n\n0.13.2.0\n\n*
  `pure` is now strict in `Position`\n\n0.13.1.0\n\n* `runScanner` now correctly returns
  the final state\n  (https://github.com/bos/attoparsec/issues/105).\n* `Parser`,
  `ZeptoT`, `Buffer`, and `More` now expose `Semigroup` instances.\n* `Parser`, and
  `ZeptoT` now expose `MonadFail` instances.\n\n0.13.0.2\n\n* Restore the fast specialised
  character set implementation for Text\n* Move testsuite from test-framework to tasty\n*
  Performance optimization of takeWhile and takeWhile1\n\n0.13.0.1\n\n* Fixed a bug
  in the implementations of inClass and notInClass for\n  Text (https://github.com/bos/attoparsec/issues/103)\n\n0.13.0.0\n\n*
  Made the parser type in the Zepto module a monad transformer\n  (needed by aeson's
  string unescaping parser).\n\n0.12.1.6\n\n* Fixed a case folding bug in the ByteString
  version of stringCI.\n\n0.12.1.5\n\n* Fixed an indexing bug in the new Text implementation
  of string,\n  reported by Michel Boucey.\n\n0.12.1.4\n\n* Fixed a case where the
  string parser would consume an unnecessary\n  amount of input before failing a match,
  when it could bail much\n  earlier (https://github.com/bos/attoparsec/issues/97)\n\n*
  Added more context to error messages\n  (https://github.com/bos/attoparsec/pull/79)\n\n0.12.1.3\n\n*
  Fixed incorrect tracking of Text lengths\n  (https://github.com/bos/attoparsec/issues/80)\n\n0.12.1.2\n\n*
  Fixed the incorrect tracking of capacity if the initial buffer was\n  empty (https://github.com/bos/attoparsec/issues/75)\n\n0.12.1.1\n\n*
  Fixed a data corruption bug that occurred under some circumstances\n  if a buffer
  grew after prompting for more input\n  (https://github.com/bos/attoparsec/issues/74)\n\n0.12.1.0\n\n*
  Now compatible with GHC 7.9\n\n* Reintroduced the Chunk class, used by the parsers
  package\n\n0.12.0.0\n\n* A new internal representation makes almost all real-world
  parsers\n  faster, sometimes by big margins.  For example, parsing JSON data\n  with
  aeson is now up to 70% faster.  These performance improvements\n  also come with
  reduced memory consumption and some new capabilities.\n\n* The new match combinator
  gives both the result of a parse and the\n  input that it matched.\n\n* The test
  suite has doubled in size.  This made it possible to switch\n  to the new internal
  representation with a decent degree of\n  confidence that everything was more or
  less working.\n\n* The benchmark suite now contains a small family of benchmarks
  taken\n  from real-world uses of attoparsec.\n\n* A few types that ought to have
  been private now are.\n\n* A few obsolete modules and functions have been marked
  as deprecated.\n  They will be removed from the next major release.\n\n0.11.3.0\n\n*
  New function scientific is compatible with rational, but parses\n  integers more
  efficiently (https://github.com/bos/aeson/issues/198)\n\n0.11.2.0\n\n* The new Chunk
  typeclass allows for some code sharing with Ed\n  Kmett's parsers package: http://hackage.haskell.org/package/parsers\n\n*
  New function runScanner generalises scan to return the final state\n  of the scanner
  as well as the input consumed.\n\n\n0.11.1.0\n\n* New dependency: the scientific
  package.  This allows us to parse\n  numbers much more efficiently.\n\n* peekWord8',
  peekChar': new primitive parsers that allow\n  single-character lookahead.\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.2 && <5'
  text: ! '>=1.1.1.3'
  array: -any
  containers: -any
  transformers: ! '>=0.4.1.0'
  deepseq: -any
  scientific: ! '>=0.3.1 && <0.4'
all-versions:
- '0.4'
- '0.5'
- '0.5.1'
- '0.6'
- '0.7.1'
- '0.7.2'
- '0.8.0.0'
- '0.8.0.1'
- '0.8.0.2'
- '0.8.1.0'
- '0.8.1.1'
- '0.8.2.0'
- '0.8.3.0'
- '0.8.4.0'
- '0.8.5.0'
- '0.8.5.1'
- '0.8.5.2'
- '0.8.5.3'
- '0.8.6.0'
- '0.8.6.1'
- '0.9.0.0'
- '0.9.1.1'
- '0.9.1.2'
- '0.10.0.0'
- '0.10.0.1'
- '0.10.0.2'
- '0.10.0.3'
- '0.10.1.0'
- '0.10.1.1'
- '0.10.2.0'
- '0.10.3.0'
- '0.10.4.0'
- '0.11.1.0'
- '0.11.2.1'
- '0.11.3.0'
- '0.11.3.1'
- '0.11.3.2'
- '0.11.3.3'
- '0.11.3.4'
- '0.12.0.0'
- '0.12.1.0'
- '0.12.1.1'
- '0.12.1.2'
- '0.12.1.3'
- '0.12.1.4'
- '0.12.1.5'
- '0.12.1.6'
- '0.13.0.0'
- '0.13.0.1'
- '0.13.0.2'
- '0.13.1.0'
- '0.13.2.0'
- '0.13.2.1'
- '0.13.2.2'
author: Bryan O'Sullivan <bos@serpentine.com>
latest: '0.13.2.2'
description-type: markdown
description: ! '# Welcome to attoparsec


  attoparsec is a fast Haskell parser combinator library, aimed

  particularly at dealing efficiently with network protocols and

  complicated text/binary file formats.


  # Join in!


  I''m happy to receive bug reports, fixes, documentation enhancements,

  and other improvements.


  Please report bugs via the

  [github issue tracker](https://github.com/bos/attoparsec/issues).


  Master [git repository](https://github.com/bos/attoparsec):


  * `git clone git://github.com/bos/attoparsec.git`


  Authors

  -------


  This library is written and maintained by Bryan O''Sullivan,

  <bos@serpentine.com>.

'
license-name: BSD3
