homepage: https://github.com/georgefst/evdev
changelog-type: markdown
hash: f362b4f04b110fec974219acd4e5d86775a2771cf545ec16fff21bb6b97706f0
test-bench-deps: {}
maintainer: George Thomas
synopsis: Bindings to libevdev
changelog: |
  # Revision history for evdev

  ## 2.0.0.0 -- 2020-05-30
  * This is really what should have been the `1.0` release, had I had a better understanding of the PVP when starting off.
  * Split Streamly integration into a separate package, `evdev-streamly`.
  * Safety improvements - `UnknownEvent` is used to handle a number of what were previously potential crashes.
  * Lots of other, minor improvements, including simplifying the API in places, and exposing lower-level functionality where it is likely to be useful.

  ## 1.3.0.0 -- 2020-03-03
  * Fix memory management issues and file descriptor leaks.
  * Rename 'ReadFlags' to 'ReadFlag' as the type clearly represents just one flag.

  ## 1.2.0.0 -- 2019-12-19
  * Add `newDevices` stream.
  * More robust error handling when reading from multiple devices.

  ## 1.1.0.1 -- 2019-12-18
  * Add `pkgconfig-depends` field to cabal file.

  ## 1.1.0.0 -- 2019-12-16
  * Hide LowLevel.

  ## 1.0.0.0 -- 2019-12-15
  * First stable release.

  ## 0.1.0.0 -- 2019-07-20
  * First version. Released on an unsuspecting world.
basic-deps:
  bytestring: ^>=0.10
  extra: ^>=1.6.18 || ^>=1.7
  unix: ^>=2.7.2
  base: '>=4.11 && <5'
  time: ^>=1.9.3 || ^>=1.10
  monad-loops: ^>=0.4.3
  containers: ^>=0.6.2
all-versions:
- 0.2.0.0
- 0.2.0.1
- 1.0.0.0
- 1.1.0.0
- 1.1.0.1
- 1.2.0.0
- 1.2.0.1
- 1.3.0.0
- 2.0.0.0
- 2.0.0.1
author: George Thomas
latest: 2.0.0.1
description-type: markdown
description: |
  Evdev
  =====

  This library provides access to the Linux [evdev](https://en.wikipedia.org/wiki/Evdev) interface, for reading input events from devices. It uses [c2hs](https://github.com/haskell/c2hs/wiki/User-Guide)-generated bindings to [libevdev](https://www.freedesktop.org/wiki/Software/libevdev/), which should be available on almost any modern Linux distro.

  It aims to expose the full set of functionality exposed by `libevdev`, while providing stronger types, and a higher level of abstraction - no worrying about memory management, ordering of operations etc.

  Your user will need to be a member of the `input` group in order to read from devices. Try `usermod -a -G input [username]`.

  For a higher-level, more functional API based on event streams, see [evdev-streamly](http://hackage.haskell.org/package/evdev-streamly).
license-name: BSD-3-Clause
