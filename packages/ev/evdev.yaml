homepage: https://github.com/georgefst/evdev
changelog-type: markdown
hash: 98aa9121be2b3db1042c35baa83ad750286e1721865c2fbfcf8ba554f9de3ad3
test-bench-deps: {}
maintainer: George Thomas
synopsis: Bindings to libevdev
changelog: |
  # Revision history for evdev

  ## 0.1.0.0 -- 2019-07-20

  * First version. Released on an unsuspecting world.

  ## 1.0.0.0 -- 2019-12-15

  * First stable release.

  ## 1.1.0.0 -- 2019-12-16

  * Hide LowLevel.

  ## 1.1.0.1 -- 2019-12-18

  * Add `pkgconfig-depends` field to cabal file.

  ## 1.2.0.0 -- 2019-12-19

  * Add `newDevices` stream.
  * More robust error handling when reading from multiple devices.
basic-deps:
  rawfilepath: ^>=0.2.4
  either: ^>=5.0.1
  bytestring: ^>=0.10
  extra: ^>=1.6.18
  unix: ^>=2.7.2
  streamly-fsnotify: ^>=1.0
  base: ^>=4.11 || ^>=4.12 || ^>=4.13
  time: ^>=1.9.3
  monad-loops: ^>=0.4.3
  process: ^>=1.6.5
  posix-paths: ^>=0.2.1
  containers: ^>=0.6.2
  hinotify: ^>=0.4
  paths: ^>=0.2
  streamly: ^>=0.6.1 || ^>=0.7
  safe: ^>=0.3.18
all-versions:
- 0.2.0.0
- 0.2.0.1
- 1.0.0.0
- 1.1.0.0
- 1.1.0.1
- 1.2.0.0
author: George Thomas
latest: 1.2.0.0
description-type: markdown
description: |
  Haskell evdev library
  =====================

  http://hackage.haskell.org/package/evdev

  This library provides access to the Linux [evdev](https://en.wikipedia.org/wiki/Evdev) interface, for reading input events from devices. It uses [c2hs](https://github.com/haskell/c2hs/wiki/User-Guide)-generated bindings to [libevdev](https://www.freedesktop.org/wiki/Software/libevdev/), which should be available on almost any modern Linux distro.

  Modules
  -------
  - `Evdev` provides the basic functionality for initialising devices, reading events etc.
  - `Evdev.Codes` contains datatypes corresponding to the constants in `input-event-codes.h`, such as keys and device properties.
  - `Evdev.Stream` provides a higher-level [Streamly](https://hackage.haskell.org/package/streamly)-based interface, for obtaining a stream of events.


  Why streamly?
  -------------
  Compared to other Haskell streaming libraries, I've found `streamly` to have a remarkably easy-to-use API, and the best, simplest support for concurrency. For example, merging concurrent streams of events, from different devices, is trivial.

  If you wish to use this library alongside `conduit`, `pipes` etc. then see [here](https://hackage.haskell.org/package/streamly-0.7.0/docs/Streamly-Tutorial.html#g:39) for a guide on interoperation.

  Getting started
  ---------------
  Your user will need to be a member of the `input` group in order to read from devices. Try `usermod -a -G input [username]`.

  If you wish to make use of concurrency, e.g. to use functions like `allEvents`, be sure to pass the option `-threaded` to GHC, in order to enable the threaded runtime.

  The [evdev-examples](https://github.com/georgefst/evdev/tree/master/evdev-examples) folder contains a basic `evtest` clone, with the added ability to read events from multiple devices concurrently.

  See [Hackage](http://hackage.haskell.org/package/evdev) for further documentation. Full descriptions for each function, datatype etc. will be uploaded in the very near future.
license-name: BSD-3-Clause
