homepage: ''
changelog-type: ''
hash: baf2bfdd946ca66b3b51317f2b2a24e2234528bfddd0276acec100351b2138bc
test-bench-deps:
  test-framework-hunit: -any
  monad-par: -any
  test-framework: ! '>=0.4.1'
  base: ! '>=4'
  time: -any
  test-framework-quickcheck2: -any
  data-default: -any
  HUnit: ! '>=1.2 && <2'
  array: -any
  tagged: -any
  linear-algebra-cblas: -any
  accelerate: -any
  fpnla: -any
  random: -any
  parallel: -any
  deepseq: -any
  fpnla-examples: -any
  QuickCheck: ! '>=2.4'
  hmatrix: -any
  repa: -any
  vector: -any
maintainer: Pablo Perdomo <pperdomo@fing.edu.uy>, Mauro Blanco <mblanco@fing.edu.uy>
synopsis: Example implementations for FPNLA library
changelog: ''
basic-deps:
  monad-par: ! '>=0.3.4.2'
  base: ! '>=4 && <5'
  array: ! '>=0.4.0.1'
  linear-algebra-cblas: -any
  accelerate: ! '>=0.13.0.5'
  fpnla: -any
  parallel: ! '>=3.2.0.3'
  deepseq: ! '>=1.3.0.1'
  hmatrix: ! '>=0.14.1.0'
  repa: ! '>=3.2.3.3'
  vector: ! '>=0.10.0.1'
all-versions:
- '0.1'
- 0.1.1
author: Mauro Blanco, Pablo Perdomo, Pablo Ezzatti, Alberto Pardo, Marcos Viera
latest: 0.1.1
description-type: haddock
description: ! '

  This package provides many example implementations of the operations defined in
  package @fpnla@ (<http://hackage.haskell.org/package/fpnla>) using various data
  structures and algorithms.


  IMPORTANT: Many algorithms are only partially implemented


  The structures currently used are:


  - @hmatrix@ <http://hackage.haskell.org/package/hmatrix>


  - @vector@ <http://hackage.haskell.org/package/vector>


  - @array@ <http://hackage.haskell.org/package/array>


  - @repa arrays@ <http://hackage.haskell.org/package/repa>


  - @accelerate arrays@ <http://hackage.haskell.org/package/accelerate>


  - @array@ <http://hackage.haskell.org/package/array>


  - Haskell lists <http://hackage.haskell.org/package/base-4.6.0.1/docs/Data-List.html>


  Operations are parallelized using the @parallel@ framework (<http://hackage.haskell.org/package/parallel>),
  @Monad-Par@ (<http://hackage.haskell.org/package/monad-par>), @Repa@ (<http://hackage.haskell.org/package/repa>)
  and @Accelerate@ (<http://hackage.haskell.org/package/accelerate>).


  Details about the package may be found in the paper: Towards a functional run-time
  for dense NLA domain. In Proceedings of the 2Nd ACM SIGPLAN Workshop on

  Functional High-performance Computing. New York, NY, USA. ACM, pages 85-96 (<http://www.fing.edu.uy/~mviera/papers/fhpc13.pdf>).

'
license-name: BSD-3-Clause
