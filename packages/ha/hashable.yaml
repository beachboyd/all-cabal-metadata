homepage: http://github.com/tibbe/hashable
changelog-type: markdown
hash: 03b6836ca9cd3ad0e5a2f3cce989b001dd0e05f306a873db3196037adb30e0a4
test-bench-deps:
  test-framework-hunit: -any
  bytestring: -any
  test-framework: ! '>=0.3.3'
  unix: -any
  base: ! '>=4.0 && <5.0'
  text: ! '>=0.11.0.5'
  test-framework-quickcheck2: ! '>=0.2.9'
  criterion: ! '>=1.0'
  HUnit: -any
  integer-gmp: ! '>=0.2'
  ghc-prim: -any
  hashable: -any
  siphash: -any
  random: ! '>=1.0 && <1.2'
  QuickCheck: ! '>=2.4.0.1'
maintainer: johan.tibell@gmail.com
synopsis: A class for types that can be converted to a hash value
changelog: ! "## Version 1.2.7.0\n\n * Add `Hashable` and `Hashable1` instances for
  `Complex`\n\n * Fix undefined behavior in `hashable_fn_hash()` implementation\n
  \  due to signed integer overflow (#152)\n\n * Mark `Data.Hashable.Lifted` as `Trustworthy`
  (re SafeHaskell)\n\n * Support GHC 8.4\n\n## Version 1.2.6.1\n\n * Use typeRepFingerprint
  from Type.Reflection.Unsafe\n\n * Bump minimum version of base to 4.4.\n\n## Version
  1.2.6.0\n\n * Add support for type-indexed `Typeable`.\n\n * Rework the `Generic`
  hashable for sums.\n\n## Version 1.2.5.0\n\n  * Add `Hashable1` and `Hashable2`\n\n
  \ * Add instances for: `Eq1`, `Ord1`, `Show1`, `Ptr`, `FunPtr`, `IntPtr`, `WordPtr`\n\n
  \ * Add `Hashed` type for caching the `hash` function result.\n\n## Version 1.2.4.0\n\n
  * Add instances for: Unique, Version, Fixed, NonEmpty, Min, Max, Arg,\n   First,
  Last, WrappedMonoid, Option\n\n * Support GHC 8.0\n\n## Version 1.2.3.3\n\n * Support
  integer-simple.\n\n## Version 1.2.3.2\n\n * Add support for GHC 7.10 typeRepFingerprint\n\n##
  Version 1.2.3.1\n\n * Added support for random 1.1.*.\n\n## Version 1.2.3.0\n\n
  * Silence integer literal overflow warning\n\n * Add support for GHC 7.10 `integer-gmp2`
  & `Natural`\n\n * Add instance for Data.Void\n\n * Make the SSE .cabal flags manual\n\n
  * Add an upper bound on bytestring\n\n## Version 1.2.2.0\n\n * Add instances for
  `Data.ByteString.Short`\n\n * Use a 32-bit default salt on 32-bit archs.\n\n## Version
  1.2.1.0\n\n * Revert instances to their 1.1 implementations to regain the\n   performance
  we had then.\n\n * Remove use of random salt altogether. Without using SipHash the\n
  \  benefit is unclear (i.e. collision attacks still work) and the\n   complexity
  is no longer worth it.\n\n * Documentation improvements.\n\n## Version 1.2.0.10\n\n
  * Fix for GHC 7.0.\n\n## Version 1.2.0.9\n\n * Stop using SipHash. The current implementation
  still has segfault\n   causing bugs that we won't be able to fix soon.\n\n * Stop
  using Wang hash. It degrades performance of fixed-size integer\n   hashing too much.\n\n##
  Version 1.2.0.8\n\n * Fix linking issue when SSE was disabled.\n\n * Hash small
  signed Integers correctly.\n\n## Version 1.2.0.7\n\n * Add flags to control usage
  of SSE.\n\n## Version 1.2.0.6\n\n * Fix another segfault caused by SSE2 code.\n\n##
  Version 1.2.0.5\n\n * More portability fixes.\n\n * Force stack alignment to 16
  bytes everywhere. Fixes a segfault.\n\n * Fix bug where code relied on rewrite rules
  firing for correctness.\n\n## Version1.2.0.4\n\n * Update docs to match code.\n\n
  * Work around bug in GHCi runtime linker, which never call static\n   initializers.\n\n##
  Version1.2.0.3\n\n * Make building of SSE 4.1 code conditional, as it doesn't work
  on all\n   platforms.\n\n * Use a fixed salt, but allow random salting. Random salting
  by\n   default broke people's code.\n\n## Version1.2.0.2\n\n * Work around ghci
  linker bug on Windows.\n\n## Version1.2.0.1\n\n * Fix performance bug in SSE implementation
  of SipHash.\n\n * Fix segfault due to incorrect stack alignment on Windows.\n\n##
  Version1.2.0.0\n\n * Switch string hashing from FNV-1 to SipHash, in an effort to\n
  \  prevent collision attacks.\n\n * Switch fixed-size integer hashing to Wang hash.\n\n
  * The default salt now switched on every program run, in an effort to\n   prevent
  collision attacks.\n\n * Move hash method out of Hashable type class.\n\n * Add
  support for generic instance deriving.\n\n * Add instance for Ordering.\n\n## Version1.1.2.5\n\n
  * Bug fix for bytestring < 0.10.0.\n\n## Version1.1.2.4\n\n * Switch string hashing
  from Bernstein to FNV-1\n\n * Faster instance for Integer.\n\n * Update dependency
  on base, ghc-prim\n\n * Now works with GHC 7.6.\n\n## Version1.1.2.3\n\n * Add instance
  for TypeRep.\n\n * Update dependency on test-framework.\n\n## Version1.1.2.2\n\n
  * Bug fix for GHC 7.4\n\n## Version1.1.2.1\n\n * Update dependency on test-framework.\n\n
  * Improve documentation of combine.\n\n## Version1.1.2.0\n\n * Add instances for
  Interger, Ratio, Float, Double, and StableName.\n\n * Fix hash collision issues
  for lists and tuples when using a\n   user-specified salt.\n\n## Version1.1.1.0\n\n
  * Improved instances for tuples and lists.\n\n * Add instances for StableName, Float,
  Double, Integer, and Ratio.\n\n## Version1.1.1.0\n\n * Add hashWithSalt, which allows
  the user to create different hash\n   values for the same input by providing different
  seeds. This is\n   useful for application like Cuckoo hashing which need a family
  of\n   hash functions.\n\n * Fix a bug in the Hashable instance for Int64/Word64
  on 32-bit\n   platforms.\n\n * Improved resilience to leading zero in the input
  being hashed.\n\n## Version1.1.0.0\n\n * Add instance for: strict and lazy Texts,
  ThreadId\n\n * Add hashPtrWithSalt and hashByteArrayWithSalt.\n\n * Faster ByteArray#
  hashing.\n\n * Fix a signedness bug that affected ByteString.\n\n * Fix ByteString
  hashing to work correctly on both 32 and 64-bit\n   platforms.\n\n## Version1.0.1.1\n\n
  * Fix bug in Hashable instance for lazy ByteStrings where differences\n   in the
  internal structure of the ByteString could cause different\n   hash values for ByteStrings
  that are equal according to ==.\n\n## Version1.0.1.0\n\n * Add two helpers for creating
  Hashable instances: hashPtr and\n   hashByteArray.\n\n## Version1.0.0\n\n * Separate
  Hashable class to its own package from hashmap 1.0.0.3.\n"
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4.4 && <4.13'
  text: ! '>=0.11.0.5'
  integer-gmp: ! '>=0.2'
  ghc-prim: -any
  deepseq: ! '>=1.3 && <1.5'
all-versions:
- 1.0.0
- 1.0.1.0
- 1.0.1.1
- 1.1.0.0
- 1.1.1.0
- 1.1.2.0
- 1.1.2.1
- 1.1.2.2
- 1.1.2.3
- 1.1.2.4
- 1.1.2.5
- 1.2.0.0
- 1.2.0.1
- 1.2.0.2
- 1.2.0.3
- 1.2.0.4
- 1.2.0.5
- 1.2.0.6
- 1.2.0.7
- 1.2.0.8
- 1.2.0.9
- 1.2.0.10
- 1.2.1.0
- 1.2.2.0
- 1.2.3.0
- 1.2.3.1
- 1.2.3.2
- 1.2.3.3
- 1.2.4.0
- 1.2.5.0
- 1.2.6.0
- 1.2.6.1
- 1.2.7.0
author: ! 'Milan Straka <fox@ucw.cz>

  Johan Tibell <johan.tibell@gmail.com>'
latest: 1.2.7.0
description-type: markdown
description: ! 'The hashable package

  ====================


  This package defines a class, `Hashable`, for types that can be

  converted to a hash value.  This class exists for the benefit of

  hashing-based data structures.  The package provides instances for

  basic types and a way to combine hash values.

'
license-name: BSD-3-Clause
