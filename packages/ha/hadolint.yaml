homepage: https://github.com/hadolint/hadolint
changelog-type: ''
hash: 4321cc24f3e3dc5355330ac0ecf7120847dfcb38508f5a41d9f182225c3feabe
test-bench-deps:
  bytestring: ! '>=0.10'
  split: ! '>=0.2'
  base: ! '>=4.8 && <5'
  hadolint: -any
  hspec: -any
  text: -any
  ShellCheck: ! '>=0.5.0'
  megaparsec: ! '>=6.4'
  language-docker: ! '>=6.0.4 && <7'
  HUnit: ! '>=1.2'
  aeson: -any
maintainer: me@lukasmartinelli.ch
synopsis: Dockerfile Linter JavaScript API
changelog: ''
basic-deps:
  void: -any
  bytestring: -any
  split: ! '>=0.2'
  base: ! '>=4.8 && <5'
  hadolint: -any
  text: -any
  ShellCheck: ! '>=0.5.0'
  megaparsec: ! '>=6.4'
  language-docker: ! '>=6.0.4 && <7'
  filepath: -any
  gitrev: ! '>=1.3.1'
  containers: -any
  mtl: -any
  optparse-applicative: ! '>=0.14.0'
  aeson: -any
  yaml: -any
  directory: ! '>=1.3.0'
all-versions:
- '1.2.5'
- '1.2.6'
- '1.3.0'
- '1.4.0'
- '1.5.0'
- '1.6.0'
- '1.6.1'
- '1.6.2'
- '1.6.3'
- '1.6.4'
- '1.6.5'
- '1.6.6'
- '1.7.0'
- '1.7.1'
- '1.7.2'
- '1.7.3'
- '1.7.4'
- '1.7.5'
- '1.8.0'
- '1.9.0'
- '1.10.1'
- '1.10.2'
- '1.10.3'
- '1.10.4'
- '1.11.0'
- '1.11.1'
- '1.11.2'
author: Lukas Martinelli
latest: '1.11.2'
description-type: markdown
description: ! "[![Linux/OSX Build Status][travis-img]][travis]\n[![Windows Build
  status][appveyor-img]][appveyor]\n[![GPL-3 licensed][license-img]][license]\n[![GitHub
  release][release-img]][release]\n[![Github downloads][downloads-img]]()\n<img align=\"right\"
  alt=\"pipecat\" width=\"150\"\nsrc=\"http://hadolint.lukasmartinelli.ch/img/cat_container.png\"
  />\n\n# Haskell Dockerfile Linter\n\nA smarter Dockerfile linter that helps you
  build [best practice][] Docker\nimages. The linter is parsing the Dockerfile into
  an AST and performs rules on\ntop of the AST. It is standing on the shoulders of
  [ShellCheck][] to lint\nthe Bash code inside `RUN` instructions.\n\n<!-- [:globe_with_meridians:
  **Check the online version on\n hadolint.lukasmartinelli.ch**](http://hadolint.lukasmartinelli.ch/.)\n[![Screenshot](screenshot.png)](http://hadolint.lukasmartinelli.ch/)
  -->\n\n## How to use\n\nYou can run `hadolint` locally to lint your Dockerfile.\n\n```bash\nhadolint
  <Dockerfile>\nhadolint --ignore DL3003 --ignore DL3006 <Dockerfile> # exclude specific
  rules\nhadolint --trusted-registry my-company.com:500 <Dockerfile> # Warn when using
  untrusted FROM images\n```\n\nDocker comes to the rescue to provide an easy way
  how to run `hadolint` on most\nplatforms.\nJust pipe your `Dockerfile` to `docker
  run`:\n\n```bash\ndocker run --rm -i hadolint/hadolint < Dockerfile\n```\n\n## Install\n\nYou
  can download prebuilt binaries for OSX, Windows and Linux from the latest\n[release
  page][]. However, if it doesn't work for you, please fall back to\nDocker, `brew`
  or source installation.\n\nIf you are on OSX you can use [brew](https://brew.sh/)
  to install `hadolint`.\n\n```bash\nbrew install hadolint\n```\n\nAs shown before,
  `hadolint` is available as a Docker container:\n\n```bash\ndocker pull hadolint/hadolint\n```\n\nIf
  you need a Docker container with shell access, use the Debian variant of the\nDocker
  image:\n\n```bash\ndocker pull hadolint/hadolint:latest-debian\n```\n\nYou can also
  build `hadolint` locally. You need [Haskell][] and the [stack][]\nbuild tool to
  build the binary.\n\n```bash\ngit clone https://github.com/hadolint/hadolint\ncd
  hadolint\nstack install\n```\n\n## Configure\n\n`hadolint` supports specifying the
  ignored rules using a configuration file. The configuration\nfile should be in `yaml`
  format. This is one valid configuration file as an example:\n\n```yaml\nignored:\n
  \ - DL3000\n  - SC1010\n```\n\nAdditionally, `hadolint` can warn you when images
  from untrusted repositories are being\nused in Dockerfiles, you can append the `trustedRegistries`
  keys to the configuration\nfile as shown below:\n\n```yaml\nignored:\n  - DL3000\n
  \ - SC1010\n\ntrustedRegistries:\n  - docker.io\n  - my-company.com:5000\n```\n\nConfiguration
  files can be used globally or per project. By default, `hadolint` will look for\na
  configuration file in the current directory with the name `.hadolint.yaml`\n\nThe
  global configuration file should be placed in the folder specified by `XDG_CONFIG_HOME`,\nwith
  the name `hadolint.yaml`. In summary, the following locations are valid for the
  configuration\nfile, in order or preference:\n\n- `$PWD/.hadolint.yaml`\n- `$XDG_CONFIG_HOME/hadolint.yaml`\n-
  `~/.config/hadolint.yaml`\n\nIn windows, the `%LOCALAPPDATA%` environment variable
  is used instead of `XDG_CONFIG_HOME`\n\nAdditionally, you can pass a custom configuration
  file in the command line with\nthe `--config` option\n\n```bash\nhadolint --config
  /path/to/config.yaml Dockerfile\n```\n\n## Inline ignores\n\nIt is also possible
  to ignore rules by using a special comment directly above the Dockerfile\ninstruction
  you want to make an exception for. Ignore rule comments look like\n`# hadolint ignore=DL3001,SC1081`.
  For example:\n\n```dockerfile\n# hadolint ignore=DL3006\nFROM ubuntu\n\n# hadolint
  ignore=DL3003,SC1035\nRUN cd /tmp && echo \"hello!\"\n```\n\nInline ignores will
  only work if place directly above the instruction.\n\n## Integrations\n\nTo get
  most of `hadolint` it is useful to integrate it as a check to your CI\nor to your
  editor to lint your `Dockerfile` as you write it. See our\n[Integration][] docs.\n\n##
  Rules\n\nAn incomplete list of implemented rules. Click on the error code to get
  more\ndetailed information.\n\n-   Rules with the prefix `DL` originate from `hadolint`.
  Take a look at\n`Rules.hs` to find the implementation of the rules.\n\n-   Rules
  with the `SC` prefix originate from **ShellCheck** (Only the most\ncommon rules
  are listed, there are dozens more)\n\nPlease [create an issue][] if you have an
  idea for a good rule.\n\n| Rule                                                         |
  Description                                                                                                                                         |\n|:-------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------|\n|
  [DL3000](https://github.com/hadolint/hadolint/wiki/DL3000)   | Use absolute WORKDIR.
  \                                                                                                                              |\n|
  [DL3001](https://github.com/hadolint/hadolint/wiki/DL3001)   | For some bash commands
  it makes no sense running them in a Docker container like ssh, vim, shutdown, service,
  ps, free, top, kill, mount, ifconfig. |\n| [DL3002](https://github.com/hadolint/hadolint/wiki/DL3002)
  \  | Last user should not be root.                                                                                                                       |\n|
  [DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)   | Use WORKDIR to switch
  to a directory.                                                                                                               |\n|
  [DL3004](https://github.com/hadolint/hadolint/wiki/DL3004)   | Do not use sudo as
  it leads to unpredictable behavior. Use a tool like gosu to enforce root.                                                        |\n|
  [DL3005](https://github.com/hadolint/hadolint/wiki/DL3005)   | Do not use apt-get
  upgrade or dist-upgrade.                                                                                                         |\n|
  [DL3007](https://github.com/hadolint/hadolint/wiki/DL3007)   | Using latest is prone
  to errors if the image will ever update. Pin the version explicitly to a release
  tag.                                         |\n| [DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)
  \  | Always tag the version of an image explicitly.                                                                                                      |\n|
  [DL3008](https://github.com/hadolint/hadolint/wiki/DL3008)   | Pin versions in apt-get
  install.                                                                                                                    |\n|
  [DL3009](https://github.com/hadolint/hadolint/wiki/DL3009)   | Delete the apt-get
  lists after installing something.                                                                                                |\n|
  [DL3010](https://github.com/hadolint/hadolint/wiki/DL3010)   | Use ADD for extracting
  archives into an image.                                                                                                      |\n|
  [DL3011](https://github.com/hadolint/hadolint/wiki/DL3011)   | Valid UNIX ports
  range from 0 to 65535.                                                                                                             |\n|
  [DL3012](https://github.com/hadolint/hadolint/wiki/DL3012)   | Provide an email
  address or URL as maintainer.                                                                                                      |\n|
  [DL3013](https://github.com/hadolint/hadolint/wiki/DL3013)   | Pin versions in pip.
  \                                                                                                                               |\n|
  [DL3014](https://github.com/hadolint/hadolint/wiki/DL3014)   | Use the `-y` switch.
  \                                                                                                                               |\n|
  [DL3015](https://github.com/hadolint/hadolint/wiki/DL3015)   | Avoid additional
  packages by specifying --no-install-recommends.                                                                                    |\n|
  [DL3016](https://github.com/hadolint/hadolint/wiki/DL3016)   | Pin versions in `npm`.
  \                                                                                                                             |\n|
  [DL3017](https://github.com/hadolint/hadolint/wiki/DL3017)   | Do not use `apk upgrade`.
  \                                                                                                                          |\n|
  [DL3018](https://github.com/hadolint/hadolint/wiki/DL3018)   | Pin versions in apk
  add. Instead of `apk add <package>` use `apk add <package>=<version>`.                                                          |\n|
  [DL3019](https://github.com/hadolint/hadolint/wiki/DL3019)   | Use the `--no-cache`
  switch to avoid the need to use `--update` and remove `/var/cache/apk/*` when done
  installing packages.                        |\n| [DL3020](https://github.com/hadolint/hadolint/wiki/DL3020)
  \  | Use `COPY` instead of `ADD` for files and folders.                                                                                                  |\n|
  [DL3021](https://github.com/hadolint/hadolint/wiki/DL3021)   | `COPY` with more
  than 2 arguments requires the last argument to end with `/`                                                                        |\n|
  [DL3022](https://github.com/hadolint/hadolint/wiki/DL3022)   | `COPY --from` should
  reference a previously defined `FROM` alias                                                                                    |\n|
  [DL3023](https://github.com/hadolint/hadolint/wiki/DL3023)   | `COPY --from` cannot
  reference its own `FROM` alias                                                                                                 |\n|
  [DL3024](https://github.com/hadolint/hadolint/wiki/DL3024)   | `FROM` aliases (stage
  names) must be unique                                                                                                         |\n|
  [DL3025](https://github.com/hadolint/hadolint/wiki/DL3025)   | Use arguments JSON
  notation for CMD and ENTRYPOINT arguments                                                                                        |\n|
  [DL3026](https://github.com/hadolint/hadolint/wiki/DL3026)   | Use only an allowed
  registry in the FROM image                                                                                                      |\n|
  [DL4000](https://github.com/hadolint/hadolint/wiki/DL4000)   | MAINTAINER is deprecated.
  \                                                                                                                          |\n|
  [DL4001](https://github.com/hadolint/hadolint/wiki/DL4001)   | Either use Wget or
  Curl but not both.                                                                                                               |\n|
  [DL4003](https://github.com/hadolint/hadolint/wiki/DL4003)   | Multiple `CMD` instructions
  found.                                                                                                                  |\n|
  [DL4004](https://github.com/hadolint/hadolint/wiki/DL4004)   | Multiple `ENTRYPOINT`
  instructions found.                                                                                                           |\n|
  [DL4005](https://github.com/hadolint/hadolint/wiki/DL4005)   | Use `SHELL` to change
  the default shell.                                                                                                            |\n|
  [DL4006](https://github.com/hadolint/hadolint/wiki/DL4006)   | Set the `SHELL` option
  -o pipefail before `RUN` with a pipe in it                                                                                   |\n|
  [SC1000](https://github.com/koalaman/shellcheck/wiki/SC1000) | `$` is not used specially
  and should therefore be escaped.                                                                                          |\n|
  [SC1001](https://github.com/koalaman/shellcheck/wiki/SC1001) | This `\\c` will be
  a regular `'c'`  in this context.                                                                                                 |\n|
  [SC1007](https://github.com/koalaman/shellcheck/wiki/SC1007) | Remove space after
  `=` if trying to assign a value (or for empty string, use `var='' ...`).                                                         |\n|
  [SC1010](https://github.com/koalaman/shellcheck/wiki/SC1010) | Use semicolon or
  linefeed before `done` (or quote to make it literal).                                                                              |\n|
  [SC1018](https://github.com/koalaman/shellcheck/wiki/SC1018) | This is a unicode
  non-breaking space. Delete it and retype as space.                                                                                |\n|
  [SC1035](https://github.com/koalaman/shellcheck/wiki/SC1035) | You need a space
  here                                                                                                                               |\n|
  [SC1045](https://github.com/koalaman/shellcheck/wiki/SC1045) | It's not `foo &;
  bar`, just `foo & bar`.                                                                                                            |\n|
  [SC1065](https://github.com/koalaman/shellcheck/wiki/SC1065) | Trying to declare
  parameters? Don't. Use `()` and refer to params as `$1`, `$2` etc.                                                                |\n|
  [SC1066](https://github.com/koalaman/shellcheck/wiki/SC1066) | Don't use $ on the
  left side of assignments.                                                                                                        |\n|
  [SC1068](https://github.com/koalaman/shellcheck/wiki/SC1068) | Don't put spaces
  around the `=` in assignments.                                                                                                     |\n|
  [SC1077](https://github.com/koalaman/shellcheck/wiki/SC1077) | For command expansion,
  the tick should slant left (\\` vs ´).                                                                                        |\n|
  [SC1078](https://github.com/koalaman/shellcheck/wiki/SC1078) | Did you forget to
  close this double-quoted string?                                                                                                  |\n|
  [SC1079](https://github.com/koalaman/shellcheck/wiki/SC1079) | This is actually
  an end quote, but due to next char, it looks suspect.                                                                              |\n|
  [SC1081](https://github.com/koalaman/shellcheck/wiki/SC1081) | Scripts are case
  sensitive. Use `if`, not `If`.                                                                                                     |\n|
  [SC1083](https://github.com/koalaman/shellcheck/wiki/SC1083) | This `{/}` is literal.
  Check expression (missing `;/\\n`?) or quote it.                                                                              |\n|
  [SC1086](https://github.com/koalaman/shellcheck/wiki/SC1086) | Don't use `$` on
  the iterator name in for loops.                                                                                                    |\n|
  [SC1087](https://github.com/koalaman/shellcheck/wiki/SC1087) | Braces are required
  when expanding arrays, as in `${array[idx]}`.                                                                                   |\n|
  [SC1095](https://github.com/koalaman/shellcheck/wiki/SC1095) | You need a space
  or linefeed between the function name and body.                                                                                    |\n|
  [SC1097](https://github.com/koalaman/shellcheck/wiki/SC1097) | Unexpected `==`.
  For assignment, use `=`. For comparison, use `[/[[`.                                                                               |\n|
  [SC1098](https://github.com/koalaman/shellcheck/wiki/SC1098) | Quote/escape special
  characters when using `eval`, e.g. `eval \"a=(b)\"`.                                                                             |\n|
  [SC1099](https://github.com/koalaman/shellcheck/wiki/SC1099) | You need a space
  before the `#`.                                                                                                                    |\n|
  [SC2002](https://github.com/koalaman/shellcheck/wiki/SC2002) | Useless cat. Consider
  <code>cmd < file &#124; ..</code> or <code>cmd file &#124; ..</code> instead.                                                 |\n|
  [SC2015](https://github.com/koalaman/shellcheck/wiki/SC2015) | Note that <code>A
  && B &#124;&#124; C</code> is not if-then-else. C may run when A is true.                                                         |\n|
  [SC2026](https://github.com/koalaman/shellcheck/wiki/SC2026) | This word is outside
  of quotes. Did you intend to 'nest '\"'single quotes'\"' instead'?                                                               |\n|
  [SC2028](https://github.com/koalaman/shellcheck/wiki/SC2028) | `echo` won't expand
  escape sequences. Consider `printf`.                                                                                            |\n|
  [SC2035](https://github.com/koalaman/shellcheck/wiki/SC2035) | Use `./*glob*` or
  `-- *glob*` so names with dashes won't become options.                                                                            |\n|
  [SC2046](https://github.com/koalaman/shellcheck/wiki/SC2046) | Quote this to prevent
  word splitting                                                                                                                |\n|
  [SC2086](https://github.com/koalaman/shellcheck/wiki/SC2086) | Double quote to prevent
  globbing and word splitting.                                                                                                |\n|
  [SC2140](https://github.com/koalaman/shellcheck/wiki/SC2140) | Word is in the form
  `\"A\"B\"C\"` (B indicated). Did you mean `\"ABC\"` or `\"A\\\"B\\\"C\"`?                                                                   |\n|
  [SC2154](https://github.com/koalaman/shellcheck/wiki/SC2154) | var is referenced
  but not assigned.                                                                                                                 |\n|
  [SC2155](https://github.com/koalaman/shellcheck/wiki/SC2155) | Declare and assign
  separately to avoid masking return values.                                                                                       |\n|
  [SC2164](https://github.com/koalaman/shellcheck/wiki/SC2164) | Use <code>cd ...
  &#124;&#124; exit</code> in case `cd` fails.                                                                                       |\n\n##
  Develop\n\nIf you are an experienced Haskeller we would be really thankful if you
  would\ntear our code apart in a review.\n\n### Setup\n\n1.  Clone repository\n\n
  \   ```bash\n    git clone --recursive git@github.com:hadolint/hadolint.git\n    ```\n\n1.
  \ Install the dependencies\n\n    ```bash\n    stack install\n    ```\n\n### REPL\n\nThe
  easiest way to try out the parser is using the REPL.\n\n```bash\n# start the repl\nstack
  repl\n# parse instruction and look at AST representation\nparseString \"FROM debian:jessie\"\n```\n\n###
  Tests\n\nRun unit tests.\n\n```bash\nstack test\n```\n\nRun integration tests.\n\n```bash\n./integration_test.sh\n```\n\n###
  AST\n\nDockerfile syntax is fully described in the [Dockerfile reference][]. Just
  take\na look at [Syntax.hs][] in the `language-docker` project to see the AST definition.\n\n##
  Alternatives\n\n- RedCoolBeans/[dockerlint](https://github.com/RedCoolBeans/dockerlint/)\n-
  projectatomic/[dockerfile_lint](https://github.com/projectatomic/dockerfile_lint/)\n\n<!--
  References -->\n[travis-img]: https://travis-ci.org/hadolint/hadolint.svg?branch=master\n[travis]:
  https://travis-ci.org/hadolint/hadolint\n[appveyor-img]: https://ci.appveyor.com/api/projects/status//github/hadolint/hadolint?svg=true&branch=master\n[appveyor]:
  https://ci.appveyor.com/project/hadolint/hadolint/branch/master\n[license-img]:
  https://img.shields.io/badge/license-GPL--3-blue.svg\n[license]: https://tldrlegal.com/l/gpl-3.0\n[release-img]:
  https://img.shields.io/github/release/hadolint/hadolint.svg\n[release]: https://github.com/hadolint/hadolint/releases/latest\n[downloads-img]:
  https://img.shields.io/github/downloads/hadolint/hadolint/total.svg\n[best practice]:
  https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices\n[shellcheck]:
  https://github.com/koalaman/shellcheck\n[release page]: https://github.com/hadolint/hadolint/releases/latest\n[haskell]:
  https://www.haskell.org/platform/\n[stack]: http://docs.haskellstack.org/en/stable/install_and_upgrade.html\n[integration]:
  docs/INTEGRATION.md\n[create an issue]: https://github.com/hadolint/hadolint/issues/new\n[dockerfile
  reference]: http://docs.docker.com/engine/reference/builder/\n[syntax.hs]: https://www.stackage.org/haddock/nightly-2018-01-07/language-docker-2.0.1/Language-Docker-Syntax.html\n"
license-name: GPL-3
