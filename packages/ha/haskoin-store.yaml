homepage: http://github.com/haskoin/haskoin-store#readme
changelog-type: markdown
hash: dcb4bc0d8804007c93caf5ef794deaf82a6b10dc2f958da9d89c6694caa7a3af
test-bench-deps:
  warp: '>=3.3.10'
  cereal: '>=0.5.8.1'
  haskoin-core: '>=0.12.0'
  bytestring: '>=0.10.10.0'
  rocksdb-query: '>=0.3.1'
  wai: '>=3.2.2.1'
  unliftio: '>=0.2.12.1'
  base: '>=4.9 && <5'
  time: '>=1.9.3'
  unordered-containers: '>=0.2.10.0'
  hspec: '>=2.7.1'
  text: '>=1.2.4.0'
  network: '>=3.1.1.1'
  conduit: '>=1.3.2'
  data-default: '>=0.7.1.1'
  rocksdb-haskell: '>=1.0.1'
  containers: '>=0.6.2.1'
  haskoin-node: '>=0.11.0'
  nqe: '>=0.6.1'
  mtl: '>=2.2.2'
  hashable: '>=1.3.0.0'
  monad-logger: '>=0.3.32'
  transformers: '>=0.5.6.2'
  random: '>=1.1'
  deepseq: '>=1.4.4.0'
  QuickCheck: '>=2.13.2'
  hedis: '>=0.12.13'
  string-conversions: '>=0.4.0.1'
  scotty: '>=0.11.5'
  http-types: '>=0.12.3'
  aeson: '>=1.4.7.1'
maintainer: jprupp@protonmail.ch
synopsis: Storage and index for Bitcoin and Bitcoin Cash
changelog: "# Changelog\nAll notable changes to this project will be documented in
  this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand
  this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n##
  0.23.19\n### Changed\n- Use set peer timeout instead of constant in block store.
  \n\n## 0.23.18\n### Changed\n- Allow setting peer timeouts in command line.\n\n###
  Fixed\n- Bump Haskoin Node dependency to fix another premature timeout condition.\n\n##
  0.23.17\n### Fixed\n- Touch syncing peer whenever we process one of its blocks to
  avoid premature timeout.\n\n## 0.23.16\n### Changed\n- Better algorithm to avoid
  importing transaction multiple times in cache.\n- Depend on latest Haskoin Node.\n\n##
  0.23.15\n### Changed\n- Do not storm the cache with mempool transactions.\n\n##
  0.23.13\n### Fixed\n- Do not ignore deleted incoming transactions.\n\n## 0.23.12\n###
  Fixed\n- Do not do RBF checks when replacing a mempool transaction with a confirmed
  one.\n\n## 0.23.11\n### Fixed\n- Streamline mempool transaction importing.\n\n##
  0.23.10\n### Fixed\n- Fix transactions not recorded in cache mempool set.\n- Fix
  transactions being downloaded multiple times.\n\n### Removed\n- Do not store orphan
  transactions in database.\n\n### Changed\n- Use sets for incoming transactions instead
  of lists.\n- Do not do anything to the cache if there are no xpubs in it.\n\n##
  0.23.9\n### Fixed\n- Wiping mempool fixed.\n\n## 0.23.8\n### Added\n- Chunk transactions
  to be deleted from mempool.\n\n## 0.23.7\n### Added\n- Mempool improvements.\n\n##
  0.23.6\n### Added\n- Ability to wipe mempool at start.\n- Improvements to mempool
  processing code.\n\n## 0.23.5\n### Changed\n- Tighten the locking loop to avoid
  slow cache building.\n\n## 0.23.5\n### Fixed\n- Wrong error in cache when acquiring
  lock.\n\n## 0.23.4\n### Added\n- Add extra debug logging for cache code.\n\n###
  Fixed\n- Fix a bug with xpub growing algorithm.\n\n### Changed\n- Use locks instead
  of transactions to update cache.\n\n## 0.23.3\n### Fixed\n- Reduce contention when
  many instances of Haskoin Store share a cache.\n\n## 0.23.2\n### Added\n- Allow
  retrieving xpub data without using cache.\n\n## 0.23.1\n### Added\n- Allow xpub
  eviction from cache via API.\n- Clarify cache address addition code.\n\n### Fixed\n-
  Balances were incorrectly computed in cache when new transactions arrived.\n\n##
  0.23.0\n### Added\n- Support for Redis transactions.\n- Use a smaller initial gap
  for empty xpubs.\n\n### Changed\n- Remove custom JSON encoding class.\n- Refactor
  and code simplification.\n\n## 0.22.5\n### Fixed\n- Cache was being completely pruned.\n\n##
  0.22.4\n### Fixed\n- Cache now prunes correctly.\n\n## 0.22.3\n### Fixed\n- Bug
  was making cache get stuck when pruning.\n\n## 0.22.2\n### Changed\n- More efficient
  algorithms for caching and cache misses.\n- Better debug logging of cache hits and
  misses.\n\n## 0.22.1\n### Added\n- More debug logging for cache hits.\n\n### Fixed\n-
  Bug using maximum against empty list.\n\n## 0.22.0\n### Changed\n- Extreme code
  refactoring.\n- Move all code to Haskoin and drop Network from modules.\n\n### Added\n-
  Use Redis pipelining when importing multiple transactions into cache.\n- Implement
  configurable LRU for Redis cache.\n- Import xpubs directly into cache from web worker
  thread when a key is requested.\n\n### Removed\n- Only expose a few modules to external
  API.\n\n## 0.21.7\n### Changed\n- Improve build configuration.\n\n### Fixed\n- Use
  minimum used addresses instead of minimum index for xpub cache decision.\n\n## 0.21.6\n###
  Fixed\n- Fix missing xpub unspent outputs when using cache.\n\n## 0.21.5\n### Added\n-
  Only store xpubs in cache if they have more than a threshold addresses used.\n\n##
  0.21.4\n### Fixed\n- Fix shared cache case where head is set beyond header chain
  by another node.\n\n## 0.21.3\n### Fixed\n- Fix bug where best head was not being
  registered in cache.\n- Fix best head in cache being decoded incorrectly.\n\n##
  0.21.2\n### Added\n- Complete support for Redis xpub cache.\n\n## 0.21.1\n### Fixed\n-
  Latest version of secp256k1-haskell works with Debian 9.\n\n## 0.21.0\n### Fixed\n-
  Fix output of web API calls when issuing limits with offsets.\n\n### Changed\n-
  Massive refactoring of entire codebase.\n\n### Added\n- Work in progress Redis caching
  for extended public keys.\n\n## 0.20.2\n### Changed\n- Filter xpub address balances
  on web API to show only addresses that have been used.\n\n### Removed\n- Remove
  paths and addresses from xpub summary.\n\n## 0.20.1\n### Changed\n- Refactor code
  greatly.\n- Depend on new Haskoin Store package to avoid missing tx broadcasts.\n-
  Merge StoreStream class into StoreRead.\n- Move former streaming functions to use
  lists instead of conduits.\n- Remove excessively verbose debugging.\n\n## 0.20.0\n###
  Added\n- Set minimum version bounds for some dependencies.\n- Now compatible with
  GHC 8.8.\n- Extended key caching system using Redis.\n\n### Changed\n- Massively
  refactored codebase.\n- Less verbose debug logging.\n\n### Removed\n- Removed conduits
  for faster queries.\n\n## 0.19.6\n### Added\n- Use a parallel strategy to compute
  key derivations.\n\n### Fixed\n- Do not fail health check upon transaction timeout
  while syncing.\n\n### Changed\n- Do not use conduits for xpub balance streams.\n-
  Multiple minor refactorings.\n\n## 0.19.5\n### Changed\n- Minor refactor to block
  import code.\n\n### Fixed\n- Minor fix to transaction timeout check.\n\n## 0.19.4\n###
  Fixed\n- Clarify and correct health check algorithm.\n\n## 0.19.3\n### Changed\n-
  Add address transactions to cache.\n- Improve multi-address transaction retrieval
  algorithms.\n\n## 0.19.2\n### Removed\n- Cache-Control header turned out to be unnecessary.\n\n###
  Fixed\n- Fix some minor errors in web module.\n\n## 0.19.1\n### Added\n- Set Cache-Control
  header to no-cache.\n\n## 0.19.0\n### Changed\n- Store mempool in single key/value
  pair.\n\n## 0.18.11\n### Changed\n- Do not stream mempool.\n\n## 0.18.10\n### Removed\n-
  Disable timeout checks for testnets.\n\n## 0.18.9\n### Added\n- Endpoint to locate
  a block by unix timestamp.\n\n### Removed\n- No more persistence for peers due to
  dependency on newest haskoin-node.\n\n## 0.18.8\n### Added\n- Transaction and block
  timeouts for health check.\n- Raw blocks.\n\n## 0.18.7\n### Fixed\n- Missing tranasctions
  on xpub listings.\n\n## 0.18.6\n### Removed\n- Follow Stack advise removing `-O2`
  GHC option.\n\n## 0.18.5\n### Added\n- Compatibility with SegWit on extended public
  key endpoints.\n\n### Changed\n- Fix syncing peer not reset after timeout.\n- Use
  simpler monad for streaming data.\n\n## 0.18.4\n### Changed\n- Bump Haskoin Node
  to fix peers not stored and excessively verbose logging.\n\n## 0.18.3\n### Changed\n-
  Configurable HTTP request logging. Disabled by default.\n\n## 0.18.2\n### Changed\n-
  Fix for memory leak.\n\n## 0.18.1\n### Removed\n- Remove transaction count from
  xpub summary object.\n\n## 0.18.0\n### Changed\n- Simplified limits and start point
  handling on web API.\n- Made transaction streaming algorithm faster for xpub transactions.\n-
  Extended public key summary output contains all addresses that have received transactions.\n\n###
  Added\n- Fine-grained control for maximum limits via command line options.\n- Transaction
  hash as starting point.\n- Block hash as starting point.\n- Timestamp as starting
  point.\n- Configurable xpub gap limit.\n- Transaction count added to xpub summary.\n-
  UTXO count added to xpub summary.\n\n### Removed\n- Mempool endpoint now has no
  limits or offsets and always returns full list.\n- Extended public key summary output
  no longer includes any transactions.\n- Offsets not allowed for transaction lists
  involving multiple addresses or xpubs.\n- Confusing block position parameter no
  longer part of web API.\n\n## 0.17.2\n### Changed\n- Stream address balances and
  unspent outputs.\n- Add configurable max value for limit and offset which defaults
  at 10000.\n\n## 0.17.1\n### Changed\n- When posting a transaction to the network,
  timeout is now five seconds.\n- Improve error message when transaction post timeout
  reached.\n- Remove obsolete `not found` error for transaction post.\n- Endpoints
  for retrieving blocks now do streaming for better performance.\n- Improve Swagger
  API documentation.\n\n## 0.17.0\n### Added\n- Endpoints for retrieving block transactions.\n-
  Endpoint for retrieving set of latest blocks.\n\n### Changed\n- Use standardized
  JSON and binary serialization schemes for raw transaction endpoints.\n\n## 0.16.6\n###
  Changed\n- Now logging info messages too by default.\n- Consolidated web logging
  in middleware.\n\n### Removed\n- UUIDs for web requests.\n\n## 0.16.5\n### Removed\n-
  Remove concurrency from xpub balance requests to prevent RocksDB segfaults.\n\n##
  0.16.4\n### Removed\n- Remove concurrency from requests using iterators to prevent
  RocksDB from segfaulting.\n\n## 0.16.3\n### Added\n- Debugging information for web
  API.\n\n## 0.16.2\n### Changed\n- Debugging disabled by default (use `--debug` to
  enable).\n\n## 0.16.1\n### Added\n- Cache mempool transactions.\n- Improve initial
  syncing performance.\n\n## 0.16.0\n### Added\n- Orphan transaction support.\n- Full
  address balance cache in RocksDB.\n- Full unspent output cache in RocksDB.\n\n###
  Changed\n- Significantly refactor code.\n- Move web stuff to its own module.\n-
  Change types related to databases.\n- Make xpub balance, transaction and unspent
  queries fetch data in parallel.\n\n## 0.15.2\n### Added\n- Internal data types to
  support orphan transactions.\n\n### Changed\n- Do not spam block actor with pings.\n-
  Fix balance/unspent cache not reverting when importing fails.\n- Fix transaction
  sorting algorithm not including transaction position information.\n- Fix conflicting
  mempool transaction preventing block from importing.\n\n## 0.15.1\n### Changed\n-
  Fix duplicate coinbase transaction id bug.\n\n## 0.15.0\n### Removed\n- Removed
  `PreciseUnixTime` data type.\n\n### Changed\n- Use 64 bits for Unix time representation.\n-
  Data model now uses simplified Unix time representation.\n\n## 0.14.9\n### Added\n-
  Last external/change index information to xpub summary object.\n\n## 0.14.8\n###
  Added\n- Endpoint for xpub summaries.\n- Endpoints for full transactions.\n- Ability
  to query by offset/limit.\n- More API documentation.\n\n## 0.14.7\n### Added\n-
  Debug information for `publishTx`.\n\n### Changed\n- Transaction publishing no longer
  requests mempool.\n- Fixed serialization for `TxId` freezing the entire program
  by infinitely recursing.\n\n## 0.14.6\n### Changed\n- Enable full threading again
  as it was deemed not responsible for the freezing behaviour.\n\n## 0.14.5\n### Changed\n-
  Enable threading but leave it at a single thread to be able to open more than 1024
  files.\n\n## 0.14.4\n### Changed\n- Target LTS Haskell 13.20 and disable threading
  in new attempt to fix freezing bug.\n\n## 0.14.3\n### Changed\n- Remove `-O2`.\n\n##
  0.14.2\n### Changed\n- Target LTS Haskell 12.26 to attempt to fix freezing bug.\n\n##
  0.14.1\n### Added\n- Extra debugging around code that freezes.\n\n### Changed\n-
  Bump dependency on `haskoin-node`.\n\n## 0.14.0\n### Removed\n- Dump slow protobuf
  serialization.\n\n### Added\n- Add custom serialization.\n- Extra debug logging.\n\n###
  Changed\n- Bump `haskoin-core` and `haskoin-node`.\n\n## 0.13.1\n### Changed\n-
  Bump `haskoin-node` in `stack.yaml`.\n- Do not send empty `getdata` messages.\n\n##
  0.13.0\n### Added\n- Primitive content negotiation for web exceptions.\n- Protobuf
  support for errors.\n- Protobuf support for tranasction ids.\n\n### Changed\n- Protobuf
  format changed in non-backwards-compatible manner for transaction ids.\n\n## 0.12.0\n###
  Added\n- Support for binary serialization using Protocol Buffers.\n- New endpoints
  for binary raw transactions (not hex-encoded).\n\n### Changed\n- Services field
  now a hex string instead of a number to avoid overflowing signed 64-bit integer.\n-
  Flatten list of block data objects when responding to request for multiple block
  heights.\n- Errors now reported in plain text without container JSON object.\n-
  Transaction broadcasts are responded to with transaction id in plaintext hex (no
  JSON).\n- Remove database snapshots to improve performance.\n\n## 0.11.2\n### Changed\n-
  Fix duplicate mempool transaction announcements in event stream.\n\n## 0.11.1\n###
  Removed\n- Removed latest block time check.\n\n## 0.11.0\n### Changed\n- Improve
  post transactions endpoint.\n\n## 0.10.1\n### Changed\n- Fix bug where transaction
  lists from multiple addresses would sort incorrectly.\n- Address gap reduced to
  20.\n\n## 0.10.0\n### Removed\n- Remove addresses from transaction lists.\n- No
  longer use container objects for xpub transactions.\n\n## 0.9.3\n### Added\n- Permissive
  CORS headers to allow queries from any domain.\n- Improved documentation using real-world
  examples from the BCH testnet.\n\n## 0.9.2\n### Added\n- HTTP JSON API switch to
  turn off transaction list when retrieving blocks.\n\n## 0.9.1\n### Added\n- Total
  block fees.\n- Total block outputs.\n- Block subsidy.\n\n### Changed\n- Do not consider
  the blocks less one block away from headers as out of sync in health check.\n- Health
  check now returns HTTP 503 when not OK or out of sync.\n\n## 0.9.0\n### Added\n-
  Version to health check output.\n- Block weight for segwit.\n- Transaction weight
  for segwit.\n\n## 0.8.1\n### Added\n- Health check endpoint.\n\n## 0.8.0\n### Added\n-
  Limits and skips.\n- Add timestamps to transactions.\n- Add transaction count to
  address balance object.\n- Add Merkle root to block data.\n- Total funds received
  by an address now shows up in balance.\n- Balances for any address that ever had
  funds show up in xpub endpoints.\n\n### Changed\n- Data model update.\n- Performance
  improvement for xpub calls.\n- Transactions are returned in reverse mempool/block
  order (highest or most recent first).\n- Balance objects do not get deleted from
  database ever.\n\n## 0.6.9\n### Changed\n- Reduce number of coinbase checks to 10,000
  ancestors.\n\n## 0.6.8\n### Changed\n- Further optimize coinbase after height checks.\n\n##
  0.6.7\n### Changed\n- Impose restrictions on recursion for coinbase after height
  checks.\n\n## 0.6.6\n### Added\n- Check whether a transaction can be traced back
  to a coinbase after certain height.\n\n## 0.6.5\n### Changed\n- Delete transactions
  in reverse topological order when reverting a block.\n\n## 0.6.4\n### Changed\n-
  Do not fail silently when importing orphan transactions into the mempool.\n\n##
  0.6.3\n### Changed\n- Dummy release to bump haskoin-node in stack.yaml.\n\n## 0.6.2\n###
  Changed\n- Correct bug where coinbase transactions weren't properly flagged.\n\n##
  0.6.1\n### Changed\n- Compatibility with Bitcoin Cash hard fork.\n- Various bug
  fixes.\n\n## 0.6.0\n### Added\n- Address balance cache in memory.\n\n### Changed\n-
  Simplify data model further.\n- Fix bug importing outputs with UTXO cache.\n- Unspent
  balances cannot be negative.\n\n## 0.5.0\n### Added\n- Add UTXO cache in memory.\n-
  Get transactions with witness data in segwit networks.\n\n### Changed\n- Paths for
  derivations in xpubs is a list and no longer a string.\n- Various bug fixes.\n\n##
  0.4.2\n### Removed\n- Remove extended public key itself from output of relevant
  endpoints to save bandwidth.\n\n## 0.4.1\n### Changed\n- Fix bug when deleting coinbase
  transactions.\n- Extended public key API support.\n\n## 0.4.0\n### Changed\n- Generate
  events for mempool transactions.\n- Respond with entire block data when querying
  blocks by height.\n\n## 0.3.1\n### Changed\n- Do not import transactions to mempool
  while not synced.\n- Only sync mempool against a single peer.\n- Allow duplicate
  transactions to fix re-introduced sync bug.\n\n## 0.3.0\n### Added\n- Update dependencies.\n-
  Keep orphan blocks and deleted transactions in database.\n- Add a `mainchain` field
  for block data and a `deleted` field for transactions.\n- Stream records for performance.\n-
  Show witness data for transaction inputs in SegWit network.\n- Support RBF in SegWit
  network.\n\n### Changed\n- Refactor all data access code away from actor.\n- Refactor
  import logic away from actor.\n- Abstract data access using typeclasses.\n- Implement
  data access using clean layered architecture.\n- Make most of import logic code
  pure.\n- Database now in `db` as opposed to `blocks` directory.\n- Use latest `haskoin-node`.\n\n###
  Removed\n- Remove some data from peer information output.\n- Remove full transaction
  from address transaction data.\n- Remove limits from address transaction data.\n-
  Remove block data from previous output.\n- Remove spender from JSON response when
  output not spent.\n- Remove block hash from block reference.\n\n## 0.2.3\n### Removed\n-
  Do not send transaction notifications if a block is being imported.\n\n## 0.2.2\n###
  Added\n- Peer information endpoint.\n\n### Changed\n- Update `haskoin-node`.\n\n##
  0.2.1\n### Changed\n- Fix tests\n\n## 0.2.0\n### Added\n- Documentation everywhere.\n-
  Ability to retrieve address transactions.\n\n### Changed\n- New versions of NQE
  and Haskoin Node upstream.\n- Improve and simplify API.\n- Multi-element endpoints
  return arrays of arrays.\n- Database snapshots for all queries are now mandatory.\n\n###
  Removed\n- Retrieving unspent and spent outputs for an address.\n- Redundant API
  endpoints for multiple elements.\n\n## 0.1.3\n### Changed\n- Fix a bug with transaction
  notifications.\n- Improve handling orphan transactions.\n\n## 0.1.2\n### Changed\n-
  Specify dependencies better.\n\n## 0.1.1\n### Changed\n- Dependency `secp256k1`
  is now `secp256k1-haskell`.\n\n## 0.1.0\n### Added\n- New `CHANGELOG.md` file.\n-
  Bitcoin (BTC) and Bitcoin Cash (BCH) compatibility.\n- RocksDB database.\n- Mempool
  support.\n- HTTP streaming for events.\n- CashAddr support.\n- Bech32 support.\n-
  Rate limits.\n\n### Changed\n- Split out of former `haskoin` repository.\n- Use
  hpack and `package.yaml`.\n\n### Removed\n- Removed Stylish Haskell configuration
  file.\n- Remvoed `haskoin-core` and `haskoin-wallet` packages from this repository.\n"
basic-deps:
  warp: '>=3.3.10'
  cereal: '>=0.5.8.1'
  haskoin-core: '>=0.12.0'
  bytestring: '>=0.10.10.0'
  rocksdb-query: '>=0.3.1'
  wai: '>=3.2.2.1'
  unliftio: '>=0.2.12.1'
  base: '>=4.9 && <5'
  time: '>=1.9.3'
  unordered-containers: '>=0.2.10.0'
  text: '>=1.2.4.0'
  filepath: -any
  haskoin-store: -any
  network: '>=3.1.1.1'
  conduit: '>=1.3.2'
  data-default: '>=0.7.1.1'
  rocksdb-haskell: '>=1.0.1'
  containers: '>=0.6.2.1'
  haskoin-node: '>=0.11.0'
  nqe: '>=0.6.1'
  mtl: '>=2.2.2'
  hashable: '>=1.3.0.0'
  monad-logger: '>=0.3.32'
  transformers: '>=0.5.6.2'
  optparse-applicative: -any
  random: '>=1.1'
  deepseq: '>=1.4.4.0'
  hedis: '>=0.12.13'
  string-conversions: '>=0.4.0.1'
  scotty: '>=0.11.5'
  http-types: '>=0.12.3'
  aeson: '>=1.4.7.1'
all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.3.0
- 0.3.1
- 0.4.0
- 0.4.1
- 0.4.2
- 0.5.0
- 0.6.0
- 0.6.1
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.5
- 0.6.6
- 0.6.7
- 0.6.8
- 0.6.9
- 0.7.0
- 0.8.0
- 0.8.1
- 0.9.0
- 0.9.1
- 0.9.2
- 0.9.3
- 0.10.0
- 0.10.1
- 0.11.0
- 0.11.1
- 0.11.2
- 0.12.0
- 0.13.0
- 0.13.1
- 0.14.0
- 0.14.1
- 0.14.2
- 0.14.3
- 0.14.4
- 0.14.5
- 0.14.6
- 0.14.7
- 0.14.8
- 0.14.9
- 0.15.0
- 0.15.1
- 0.15.2
- 0.16.0
- 0.16.1
- 0.16.2
- 0.16.3
- 0.16.4
- 0.16.5
- 0.16.6
- 0.17.0
- 0.17.1
- 0.17.2
- 0.18.0
- 0.18.1
- 0.18.2
- 0.18.3
- 0.18.4
- 0.18.5
- 0.18.6
- 0.18.7
- 0.18.8
- 0.18.9
- 0.18.10
- 0.18.11
- 0.19.0
- 0.19.2
- 0.19.3
- 0.19.4
- 0.19.5
- 0.20.0
- 0.20.1
- 0.20.2
- 0.21.0
- 0.21.1
- 0.21.2
- 0.21.3
- 0.21.4
- 0.21.5
- 0.21.6
- 0.21.7
- 0.22.0
- 0.22.1
- 0.22.2
- 0.22.3
- 0.22.4
- 0.22.5
- 0.23.0
- 0.23.1
- 0.23.2
- 0.23.3
- 0.23.4
- 0.23.5
- 0.23.6
- 0.23.7
- 0.23.8
- 0.23.9
- 0.23.10
- 0.23.11
- 0.23.12
- 0.23.13
- 0.23.14
- 0.23.15
- 0.23.16
- 0.23.18
- 0.23.19
author: Jean-Pierre Rupp
latest: 0.23.19
description-type: markdown
description: |
  # Haskoin Store

  Full blockchain index & store featuring:

  - Bitcoin Cash (BCH) & Bitcoin SegWit (BTC) support.
  - Address balance, transaction, and UTXO index.
  - Mempool support (SPV).
  - XPub balance, transaction, and UTXO support.
  - Persistent storage using RocksDB.
  - RESTful endpoints for blockchain data.
  - Concurrent non-blocking transactional design.
  - JSON and Protocol Buffers serialization support.


  ## Install

  * Get [Stack](https://haskell-lang.org/get-started).
  * Get [Nix](https://nixos.org/nix/).
  * Clone this repository `git clone https://github.com/haskoin/haskoin-store`.
  * From the root of this repository run `stack --nix build --copy-bins`.
  * File will usually be installed in `~/.local/bin/haskoin-store`.

  ## Cache

  A memory-based RocksDB database can be used as a cache to store:

  * Address balances.
  * Unspent outputs.

  Give `haskoin-store` the path to a directory mapped to RAM, and it will populate a RockDB database for caching. Needs around 25 GB at the moment (May 2019).


  ## API Documentation

  * [Swagger API Documentation](https://api.haskoin.com/).
license-name: LicenseRef-PublicDomain
