homepage: https://github.com/scrive/happstack-static-routing
changelog-type: markdown
hash: 64402285d6d7bfd4333948de238c23b64c7e6769bc35930ca2f12bedbbaba9de
test-bench-deps: {}
maintainer: ! 'Gracjan Polak <gracjanpolak@gmail.com>,

  Jonathan Jouty <jonathan@scrive.com>,

  Mikhail Glushenkov <mikhail@scrive.com>'
synopsis: Support for static URL routing with overlap detection for Happstack.
changelog: ! '# happstack-static-routing-0.6.0.0  (2017-06-20)

  * No longer uses OverlappingInstances.


  # happstack-static-routing-0.1  (2011-12-13)

  * Initial release.

'
basic-deps:
  happstack-server: ! '>=6'
  base: ! '>=4 && <=10'
  list-tries: ! '>=0.4'
  containers: ! '>=0.3'
  transformers: ! '>=0.2'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- 0.3.1
- 0.3.2
- 0.4.0
- 0.4.2
- 0.6.0.0
author: Scrive AB
latest: 0.6.0.0
description-type: markdown
description: ! '# happstack-static-routing [![Hackage version](https://img.shields.io/hackage/v/happstack-static-routing.svg?label=Hackage)](https://hackage.haskell.org/package/happstack-static-routing)
  [![Build Status](https://secure.travis-ci.org/scrive/happstack-static-routing.svg?branch=master)](http://travis-ci.org/scrive/happstack-static-routing)


  If you have a large routing table in Happstack and want to insert a

  new handler, you might run into overlap problems (ambiguity).  The new

  handler might not fire because it matches against a URL that is

  already handled earlier.  Or if you put your new handler first, it

  might steal requests from existing handlers.


  This Happstack support library allows you to detect overlap cases and

  build unambiguous routing tables where the order of the handlers is

  irrelevant.

'
license-name: BSD-3-Clause
