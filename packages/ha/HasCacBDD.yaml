homepage: https://github.com/m4lvin/HasCacBDD
changelog-type: ''
hash: 923abba6ab76eb73d82f06289b9f337203b3585a40b20062a89d3c98f8421213
test-bench-deps:
  base: ! '>=4.8'
  hspec: -any
  HasCacBDD: -any
  QuickCheck: ! '>2.4'
maintainer: malvin@w4eg.de
synopsis: Haskell bindings for CacBDD
changelog: ''
basic-deps:
  base: ! '>=4.8 && <5'
  process: ! '>=1.1'
  QuickCheck: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
author: Malvin Gattinger
latest: 0.1.0.2
description-type: markdown
description: |
  HasCacBDD
  =========

  [![Release](https://img.shields.io/github/release/m4lvin/HasCacBDD.svg)](https://github.com/m4lvin/HasCacBDD/releases)
  [![Hackage](https://img.shields.io/hackage/v/HasCacBDD.svg)](https://hackage.haskell.org/package/HasCacBDD)
  [![Build Status](https://travis-ci.org/m4lvin/HasCacBDD.svg?branch=master)](https://travis-ci.org/m4lvin/HasCacBDD)

  Haskell bindings for CacBDD, a Binary Decision Diagram (BDD) package with dynamic cache management.

  Original C++ code from <http://kailesu.net/CacBDD> and a C wrapper are included.


  # Getting Started

  1. Install C compilers and stack if necessary:

         apt install build-essential git
         curl -sSL https://get.haskellstack.org/ | sh

  2. Download, build and load the lastest version:

         git clone https://github.com/m4lvin/HasCacBDD.git
         cd HasCacBDD
         stack setup
         stack build
         stack exec ghci

      Note: `stack ghci` apparently does not work with the shared library.
      You really need `stack build` and then `stack exec ghci`.

  3. Play :-)

         位> import Data.HasCacBDD
         位> var 5
         Var 5 Top Bot
         位> neg (var 5)
         Var 5 Bot Top
         位> dis (neg (var 3)) (var 3)
         Top
license-name: GPL-2.0-only
