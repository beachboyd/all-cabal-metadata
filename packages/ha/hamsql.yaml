homepage: https://git.hemio.de/hemio/hamsql
changelog-type: text
hash: 5a5bb443dd3d0a15d2f0de195a965f812dfad96894e316189c2646aa8dc602ec
test-bench-deps:
  hamsql: -any
  base: ! '>=4.8 && <5.0'
maintainer: Michael Herold <quabla@hemio.de>
synopsis: Interpreter for SQL-structure definitions in YAML (YamSql)
changelog: ! "v0.9.0.0\n  - Fixes DELETE BASE before schema definitions are read (#64)\n
  \ - Fixes incorrect naming of sequences for SERIAL emulation\n  - Fixes bugs in
  table constraint statements (#59)\n  - Adds listing of blocking connections if database
  can't be deleted\n  - Adds project status description to README\n  - Adds link to
  example project to README\n  - Adds bash completion install (closes #63)\n  - Adds
  revocation of role memberships (fixes #37)\n  - Better internal code structure\nv0.8.0.0\n
  \ - Replaces pandoc with doctemplates to halve dependency compile time\n    Big
  thanks to @jgm for implementing doctemplates right away!\n    <https://github.com/jgm/pandoc/issues/3134>\n
  \ - Adds --delete-residual-roles option (closes #30)\n  - Adds --sql-log-hide-rollbacks
  option (closes #55)\n  - Adds Internal libraries to exposed modules\n  - Adds dropping
  of basic role privileges (#37)\n  - Changes YamSql objects to Internal.Obj.* (closes
  #58)\n  - Changes to a better SqlObj and SqlContext structure (closes #60)\n  -
  Changes to treat columns as independent objects (closes #33)\n  - Updates README\nv0.7.0.0\n
  \ - Fixes all compiler warnings\n  - Fixes several bugs related to ROLE upgrades\n
  \ - Fixes table checks missing after upgrade\n  - Adds --sql-log flag\n  - Adds
  --version flag\n  - Better SQL-Error presentation\n  - Better test coverage, now
  using pytest3\n  - Better usage information for CLI\n  - Code coverage reports\n
  \ - Refactoring of many code parts\n  - Removes support for column templates\n  -
  Splits library from binary (cabal)\n  - Started API and implementation docs\nv0.6.0.0\n
  \ - Adds resolve complicated dependency issues\n  - Adds resolve change of function
  return type (if function can be dropped)\n  - Changes connection options to suppress
  SQL NOTICE messages\n  - Fixes fundamental logic error in pgsqlUpdateFragile\n    Without
  --perimit-data-deletion upgrades would not create objects etc.\n  - Fixes constraints
  in schema public are not deleted\n  - Renames Module to Schema\n  - Copletely new
  Library structure\n  - Reworked Documentation feature\n  - Removes avoidable dependencies\n
  \ - Mostly uses Data.Text instead of String\n  - Renames modules to schemas\nv0.5.0\n
  \ - Adds proper deletion of obsolete functions\n  - Changes to no data deletion
  as default for upgrades\nv0.4.1\n  - First release used in production\n"
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  frontmatter: ! '>=0.1 && <0.2'
  hamsql: -any
  base: ! '>=4.8 && <5.0'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=1.2 && <1.3'
  groom: ! '>=0.1 && <0.2'
  doctemplates: ! '>=0.1 && <0.2'
  filepath: ! '>=1.4 && <1.5'
  containers: ! '>=0.5 && <0.6'
  postgresql-simple: ! '>=0.4 && <0.6'
  network-uri: ! '>=2.6 && <2.7'
  file-embed: ! '>=0.0 && <0.1'
  transformers: ! '>=0.5 && <0.6'
  optparse-applicative: ! '>=0.13 && <0.14'
  aeson: ! '>=1.0 && <1.1'
  yaml: ! '>=0.8 && <0.9'
  directory: ! '>=1.2 && <1.3'
all-versions:
- 0.7.0.0
- 0.8.0.0
- 0.9.0.0
author: Michael Herold <quabla@hemio.de>
latest: 0.9.0.0
description-type: markdown
description: ! "HamSql\n======\n\nAn interpreter for SQL structure definitions in
  YAML ([YamSql](http://yamsql.readthedocs.io/))\n\n[![build status](https://git.hemio.de/hemio/hamsql/badges/master/build.svg)](https://git.hemio.de/hemio/hamsql/commits/master)\n[![Hackage-Deps](https://img.shields.io/hackage-deps/v/hamsql.svg?maxAge=2592000)](https://hackage.haskell.org/package/hamsql)\n[![Hackage](https://img.shields.io/hackage/v/hamsql.svg?maxAge=2592000)](https://hackage.haskell.org/package/hamsql)\n\n##
  About HamSql\n\nHamSql is a software that parses SQL structures defined in a YAML
  based language and deploys them on PostgreSQL servers. It allows to maintain PostgreSQL
  projects in a form more similar to other programming languages.\n\nIn contrast to
  the `CREATE OR REPLACE FUNCTION` approaches, residual structures are deleted, column
  properties are deleted without explicit definition of the migration and the ordering
  imposed by dependencies is resolved automatically.\n\nHamSql is on hackage, which
  means you can build it with `cabal install hamsql`. Please note the build requirements
  and details at the bottom. HamSql binaries for Linux amd64 are available as [build
  artifacts](https://git.hemio.de/hemio/hamsql/tags) from our build server.\n\n**HamSql
  can be used for**\n\n- Neat SQL development with clearer versioning via \"one object
  one file\" principle\n- More flexible development with features like function and
  table templates\n- On site deployments of SQL structures\n- Off-line computation
  of upgrade strategies for known status quo\n- Documentation generation of SQL structures
  and APIs\n\n\n### What is there\n\n- `hamsql install` command that deploys the defined
  structure\n- `hamsql upgrade` command that updates existing structures\n  - Per
  default no data are at risk during upgrade (no column/table deletion)\n  - Overwrite
  via `--permit-data-deletion` possible\n  - SQL command ordering that avoids dependency
  conflicts\n  - Complicated dependencies are resolved via trial and error\n- `hamsql
  doc` creates a documentation of the complete sql structure\n  - Custom templates
  can be provided using [doctemplates](https://hackage.haskell.org/package/doctemplates)
  known from pandoc\n  - The build-in template creates [Sphinx and Read the Docs](https://docs.readthedocs.io)
  ready *.rst* files\n- Code basis tailored for the support of many SQL features\n-
  [Basic documentation of the YamSql Language](http://yamsql.readthedocs.io)\n\n###
  Coming soon\n\n- Support for views and triggers\n- Warn about name conflicts for
  SQL objects before deployment\n- Output defining YamSql file for each type of error\n\n###
  What is missing\n\nThose are all things on the radar but the exact requirements
  are unclear or the workforce is missing.\n\n- [Support for several other PostgreSQL
  features](https://git.hemio.de/hemio/hamsql/issues?milestone_title=Support+all+SQL+Features)\n-
  Stable definition of YamSql\n- Support for renaming tables and columns\n- Covering
  other strategies required for upgrade\n- Unit and integration test as part of YamSql\n
  \ - Define scenarios that are loaded into the database\n  - Define test and expected
  result for a function for a scenario\n  - Define operations with expected outcome
  (to tests triggers etc.)\n\n## Example Project\n\nThe example project below could
  be deployed via\n\n    hamsql install -c postgresql:///dbname\n\nLater changes can
  be pushed via\n\n    hamsql upgrade -c postgresql:///dbname\n\nThe default documentation
  can be written to *docs/* via\n\n    hamsql doc\n\nYou can have a look at the [output
  rendered via Sphinx.](http://yamsql-example-project.readthedocs.io)\n\nThose are
  the YamSql files for the project:\n\n```yaml\n# setup.yml\nschemas:\n - math\nschema_dirs:\n
  - schemas\n```\n\n```yaml\n# schema/math/schema.yml\nname: math\ndescription: |\n
  Some basic math in SQL\n```\n\n```yaml\n---\n# schema/math/function.d/factorial.plsql\nname:
  factorial\ndescription: |\n Factorial function using the\n ``WITH RECURSIVE`` SQL
  feature.\n\n Logical definition::\n\n     f(0) = 1\n     f(n) = n * f (n - 1)\n\nparameters:\n
  - name: p_n\n   type: int\nreturns: int\n---\nRETURN (\n  WITH RECURSIVE t AS (\n
  \     SELECT 1 AS f, 0 AS n\n    UNION ALL\n      SELECT f * (n + 1), n + 1 FROM
  t\n  )\n  SELECT f FROM t WHERE n=p_n LIMIT 1\n);\n```\n\n```yaml\n---\n# schema/math/function.d/erf.py\nname:
  erf \ndescription: |\n Gauss error function\n\n This function is a wrapper for the\n
  Python 3 implementation.\n\nparameters:\n - name: x\n   type: float\nreturns: float\n\nlanguage:
  plpython3u\n---\nimport math\nreturn math.erf(x)\n\n```\n\n## Building HamSql on
  Debian Stretch\n\nTo completely build HamSql from source\n\n    apt install make
  ghc cabal-install libpq-dev happy\n    make\n    make install\n    \nTo avoid compiling
  all the dependencies you can use the following set of debian packages instead of
  the above ones\n\n```sh\napt install \\\n make \\\n ghc \\\n cabal-install \\\n
  libghc-aeson-dev \\\n libghc-file-embed-dev \\\n libghc-network-uri-dev \\\n libghc-optparse-applicative-dev
  \\\n libghc-pandoc-dev \\\n libghc-postgresql-simple-dev \\\n libghc-text-dev \\\n
  libghc-unordered-containers-dev \\\n libghc-yaml-dev\n```\n\n"
license-name: GPL-3.0-only
