homepage: http://documentup.com/haskell-suite/haskell-names
changelog-type: markdown
hash: 77c37b305e02af2f6aecd6cb0d735dab72d95f68b38b1503a71afb373a2d4e76
test-bench-deps:
  traverse-with-class: ! '>=1.0.0.0 && <1.1'
  filemanip: ! '>=0.3.6.3 && <0.4'
  base: ! '>=4 && <5'
  tasty-golden: ! '>=2.2.1 && <2.4'
  filepath: ! '>=1.1 && <1.5'
  containers: ! '>=0.2 && <0.7'
  haskell-src-exts: ! '>=1.21 && <1.22'
  mtl: ! '>=2.2.1 && <2.3'
  haskell-names: -any
  pretty-show: ! '>=1.6.1 && <1.10'
  tasty: ! '>=0.12 && <1.2'
maintainer: Philipp Schuster
synopsis: Name resolution library for Haskell
changelog: ! "Changes\n=======\n\nVersion 0.9.1\n-------------\n\n* Use haskell-src-exts
  1.20\n\nVersion 0.9.0\n-------------\n\n* Preliminary support for pattern synonyms\n*
  Relax bounds on aeson and haskell-src-exts\n* Fix bug with instance declarations
  where class is qualified\n* Fix bugs with record wildcards and record puns\n* Fix
  bug where we'd produce duplicate symbols in environment\n* Use traverse-with-class-1.0.0.0\n*
  haskell-names now requires GHC 8.0 or later\n\nVersion 0.8.0\n------------\n\n*
  Relax bounds on aeson\n* Relax bounds on transformers\n* Bugfixes\n* Use haskell-src-exts
  1.18\n\nVersion 0.7.0\n-------------\n\n* Improve annotation performance\n\nVersion
  0.6.0\n-------------\n\n* Use haskell-src-exts 1.17\n* Remove dependency on haskell-packages\n\nVersion
  0.5.3\n------------\n\n* Compatibility with GHC 7.8.4\n\nVersion 0.5.2\n-------------\n\n*
  Handle more syntactic constructs\n\nVersion 0.5.1\n-------------\n\n* Resolve associated
  types\n* Resolve fixity declarations\n* Resolve classes and instances\n* Various
  bugfixes\n\nVersion 0.5.0\n-------------\n\n* Unify type-level and value-level symbols\n*
  Remove fixities from symbol type\n* Properly annotate classes and instances\n* Inline
  original name into symbol type\n* Remove original package from symbol type\n* Annotate
  symbol references with the way they are referenced\n\nVersion 0.4.1\n-------------\n\n*
  Export types defined by top level data family declarations\n* Update to haskell-src-exts
  1.16\n\nVersion 0.4\n-----------\n\nReplace `data-lens` with `data-lens-light`\n\nVersion
  0.3.3.2\n---------------\n\nRemove the upper version bound on Cabal\n\nVersion 0.3.3.1\n---------------\n\nUpdate
  to work with haskell-src-exts 1.15\n\nVersion 0.3.3\n-------------\n\n* Expose `Language.Haskell.Names.ModuleSymbols.getTopDecls`\n*
  Define a `Monoid` instance for `LocalSymbolTable.Table`\n* Support for parallel
  list comprehensions\n\nVersion 0.3.2.8\n---------------\n\nIntroduce a lower dependency
  bound on `tasty-golden` in the test suite\n\nVersion 0.3.2.7\n---------------\n\n`type-eq`
  is fixed; depend on the new version\n\nVersion 0.3.2.6\n---------------\n\nWork
  around a regression in `type-eq`\n\nVersion 0.3.2.5\n---------------\n\nRelax `pretty-show`
  version bound\n\nVersion 0.3.2.4\n---------------\n\nMake haskell-names build GHC
  7.8\n\nVersion 0.3.2.3\n---------------\n\nInclude interfaces for `array`\n\nVersion
  0.3.2.2\n---------------\n\nAllow `pretty-show-1.6.2` in the test suite\n\nVersion
  0.3.2.1\n---------------\n\nUse `pretty-show-1.6.1` in the test suite\n\nVersion
  0.3.2\n-------------\n\n* Export `getDeclHead` from `Language.Haskell.Names.SyntaxUtils`\n*
  Annotate `QName`s in export lists\n* Update the bundled library interfaces (they
  were broken in earlier 0.3.*\n  versions because of the interface format change)\n\nVersion
  0.3.1\n-------------\n\n* Documentation improvements\n* Add `rfoldMap`\n* Relax
  Cabal dependency constraint to include Cabal-1.14\n\nVersion 0.3\n-----------\n\nThis
  release brings support for record puns and wildcards.\n\n### Interface file format
  changes\n\nFor field selectors, the new field `constructors` is added. It contains
  a list\nof constructors that contain that field.\n\n### API changes\n\n* The `sv_constructors`
  field is added to `SymSelector`\n* Add `Language.Haskell.Names.SyntaxUtils.stringToName`\n*
  The class `GetBound` is moved to a new module,\n  `Language.Haskell.Names.GetBound`.
  Its method, `getBound`, now has a new\n  argument, the global symbol table\n* `NameInfo`
  got two more constructors to annotate wildcards,\n  `RecPatWildcard` and `RecExpWildcard`\n*
  `Scope` now has a new field of type `WcNames`, which can be accessed\n  through
  the `wcNames` lens. This is needed for record wildcards\n  resolution.\n* Add field
  selectors to `GName`\n* Don't export `GName` and `OrigName` from `GlobalSymbolTable`\n\n\nVersion
  0.2.1\n-------------\n\n* Fix a bug where global symbols were annotated as local\n*
  Make the code compile with aeson-0.6.2.0\n\nVersion 0.2\n-------------\n\n* Proper
  annotations for types and binding sites. `NameContext` now has a few\n  new constructors.\n*
  Properly support n+k patterns\n* Expose the `Alg` datatype for open name resolution\n*
  Expose the `HasOrigName` class\n\nVersion 0.1.2\n-------------\n\nRestore compatibility
  with Cabal 1.16\n\nVersion 0.1.1\n-------------\n\nDummy release to force rebuild
  on hackage (now that haskell-src-exts 1.14 is\nreleased).\n"
basic-deps:
  traverse-with-class: ! '>=1.0.0.0 && <1.1'
  bytestring: ! '>=0.10.4.0 && <0.11'
  data-lens-light: ! '>=0.1.2.1 && <0.2'
  base: ! '>=4 && <5'
  filepath: ! '>=1.1 && <1.5'
  uniplate: ! '>=1.5.1 && <1.7'
  containers: ! '>=0.2 && <0.7'
  haskell-src-exts: ! '>=1.21 && <1.22'
  mtl: ! '>=2.2.1 && <2.3'
  transformers: ! '>=0.4.2.0 && <0.6'
  aeson: ! '>=0.8.0.2 && <1.5'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.2'
- '0.2.1'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.3.2.1'
- '0.3.2.2'
- '0.3.2.3'
- '0.3.2.4'
- '0.3.2.5'
- '0.3.2.6'
- '0.3.2.7'
- '0.3.2.8'
- '0.3.3'
- '0.3.3.1'
- '0.3.3.2'
- '0.4'
- '0.4.1'
- '0.5.0'
- '0.5.1'
- '0.5.2'
- '0.5.3'
- '0.6.0'
- '0.7.0'
- '0.8.0'
- '0.9.0'
- '0.9.1'
- '0.9.2'
- '0.9.3'
- '0.9.4'
- '0.9.5'
author: Philipp Schuster, Roman Cheplyaka, Lennart Augustsson
latest: '0.9.5'
description-type: markdown
description: ! "haskell-names [![Build Status](https://travis-ci.org/phischu/haskell-names.svg?branch=master)](https://travis-ci.org/phischu/haskell-names)\n=============\n\nhaskell-names
  does name and module resolution for haskell-src-exts AST.\n\nNamely, it can do the
  following:\n\n* For a list of modules, compute the list of symbols each module exports.\n
  \ This is called `resolve`.\n* For each name in a module, figure out what it refers
  to â€” whether it's bound\n  locally (say, by a `where` clause) or globally (and then
  give its origin).\n  This is called `annotate`.\n\nInstallation\n------------\n\nIf
  you're building a development version, then you might also need to install\na development
  version of [haskell-src-exts][hse].\n\n[hse]: https://github.com/haskell-suite/haskell-src-exts\n\n\nEnvironments\n-----------------\n\nAn
  environment is a map from module name to list of symbols the module exports.\nSymbols
  are for example types, classes, functions etc. We persist these lists in\na JSON
  format.\nFor example, here are a couple of entries from `Prelude.names`:\n\n```
  json\n[\n  {\n    \"name\": \"map\",\n    \"entity\": \"value\",\n    \"module\":
  \"GHC.Base\"\n  },\n  {\n    \"name\": \"IO\",\n    \"entity\": \"newtype\",\n    \"module\":
  \"GHC.Types\"\n  },\n  ...\n]\n```\n\nAs you see, each entity is annotated with
  the module where it was\noriginally defined. Additionally, class methods, field
  selectors, and data\nconstructors are annotated with the class or type they belong
  to.\n\n`haskell-names` provides functions `readSymbols` and `writeSymbols`\nto read
  and write interface files.\n\nName resolution\n---------------\n\nThe `annotate`
  function annotates the given module with scoping information.\n\nIts essence is
  described in the article [Open your name resolution][openrec].\n\n[openrec]: http://ro-che.info/articles/2013-03-04-open-name-resolution.html\n\n###
  Examples\n\nThe example in `examples/HeadUsage.hs` shows how you would find out
  if a\nHaskell modules given on stdin uses `Prelude.head`.\n\n```\n% cabal exec --
  runghc examples/HeadUsages.hs\none = head [1]\n^D\nPrelude.head is used at stdin:
  (1:7) - (1:11)\n\n% cabal exec -- runghc examples/HeadUsages.hs\nimport Prelude
  hiding (head)\nimport Data.Text\n\nf = head (pack \"foo\")\n^D\nCongratulations!
  Your code doesn't use Prelude.head\n```\n\nThe example in `examples/ModuleExports.hs`
  shows how the `resolve` function\nbehaves. It expects to find `examples/moduleexports.Example.hs`
  and\n`examples/moduleexports/Example/Internal.hs`.\n\n```\n% cabal exec -- runghc
  examples/ModuleExports.hs\nOnly example: fromList [(ModuleName () \"Example\",[])]\nOnly
  internal: fromList [(ModuleName () \"Example.Internal\",[Value {symbolModule = ModuleName
  () \"Example.Internal\", symbolName = Ident () \"details\"}])]\nExample & Internal:
  fromList [(ModuleName () \"Example\",[Value {symbolModule = ModuleName () \"Example.Internal\",
  symbolName = Ident () \"details\"}]),(ModuleName () \"Example.Internal\",[Value
  {symbolModule = ModuleName () \"Example.Internal\", symbolName = Ident () \"details\"}])]\nInternal
  & Example: fromList [(ModuleName () \"Example\",[Value {symbolModule = ModuleName
  () \"Example.Internal\", symbolName = Ident () \"details\"}]),(ModuleName () \"Example.Internal\",[Value
  {symbolModule = ModuleName () \"Example.Internal\", symbolName = Ident () \"details\"}])]\nExample
  after Internal: fromList [(ModuleName () \"Example\",[Value {symbolModule = ModuleName
  () \"Example.Internal\", symbolName = Ident () \"details\"}]),(ModuleName () \"Example.Internal\",[Value
  {symbolModule = ModuleName () \"Example.Internal\", symbolName = Ident () \"details\"}])]\nInternal
  after Example: fromList [(ModuleName () \"Example\",[]),(ModuleName () \"Example.Internal\",[Value
  {symbolModule = ModuleName () \"Example.Internal\", symbolName = Ident () \"details\"}])]\n```\n\n\n###
  API documentation\n\nThe core module you need is [Language.Haskell.Names][]\n\nOther
  modules are more experimental, less documented, and you probably don't need\nthem
  anyway.\n\n[doc-index]: http://haskell-suite.github.io/docs/haskell-names/\n[Language.haskell.Names]:
  http://haskell-suite.github.io/docs/haskell-names/Language-Haskell-Names.html\n\n###
  Known issues\n\nSee the [list of all issues][issues].\n\n* haskell-names doesn't
  perform validation yet. If a module is not valid\n  Haskell, then the behaviour
  is undefined. See the issues marked as\n  [validation][].\n* Symbol fixities are
  not recorded ([#1][])\n* Type variables are not resolved ([#2][])\n* Arrows are
  not fully supported ([#8][])\n\n[issues]: https://github.com/haskell-suite/haskell-names/issues/\n[#1]:
  https://github.com/haskell-suite/haskell-names/issues/1\n[#2]: https://github.com/haskell-suite/haskell-names/issues/2\n[#8]:
  https://github.com/haskell-suite/haskell-names/issues/8\n[#32]: https://github.com/haskell-suite/haskell-names/issues/32\n[validation]:
  https://github.com/haskell-suite/haskell-names/issues?labels=validation&page=1&state=open\n\nMaintainers\n-----------\n\n[Philipp
  Schuster](https://github.com/phischu) is the primary maintainer.\n\n[Adam Bergmark](https://github.com/bergmark)
  is the backup maintainer. Please\nget in touch with him if the primary maintainer
  cannot be reached.\n\n"
license-name: BSD3
