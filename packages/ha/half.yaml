homepage: http://github.com/ekmett/half
changelog-type: markdown
hash: 48cc70e3cd42ccd13039b8d5865ca3aeffe526572aff7e2baf9cf9c28bc31eeb
test-bench-deps:
  base: ! '>=4.3 && <5'
  hspec: ! '>=2.4'
  QuickCheck: ! '>=2.9'
  half: -any
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Half-precision floating-point
changelog: ! '0.3

  ---

  * Fixed bound in `floatRange`.

  * Fixed `decodeFloat`.

  * Added a `Lift` instance for `Half` for `template-haskell` support.


  0.2.2.3

  -------

  * Avoid the new warnings for missing pattern synonym signatures on GHC 8


  0.2.2.2

  -------

  * Fixed an issue with `Storable` that was causing crashing for some users.


  0.2.2.1

  -------

  * Added support for older GHCs still. `unsafeShiftR` was only added in 7.4.


  0.2.2

  -----

  * Fixed `isInfinite`.

  * Added support for older GHCs. On GHC < 7.8 the pattern synonyms are disabled.


  0.2.1

  -----

  * Removed need for `GeneralizedNewtypeDeriving` and `ScopedTypeVariables`.


  0.2.0.1

  -------

  * Fixed source repository location


  0.2

  ---

  * Renamed `toFloat` to `fromHalf` for easier unqualified use.

  * Added a `Read` instance.


  0.1.1

  -----

  * Added a `CTYPE` to the Half declaration so that it can be used with `CApiFFI`
  as an unsigned short.


  0.1

  ---

  * Initial release


'
basic-deps:
  base: ! '>=4.3 && <5'
  deepseq: ! '>=1.4 && <1.5'
  template-haskell: -any
all-versions:
- '0.1'
- '0.1.1'
- '0.2'
- '0.2.0.1'
- '0.2.1'
- '0.2.2'
- '0.2.2.1'
- '0.2.2.2'
- '0.2.2.3'
- '0.3'
author: Edward A. Kmett
latest: '0.3'
description-type: markdown
description: ! 'half

  ====


  [![Hackage](https://img.shields.io/hackage/v/half.svg)](https://hackage.haskell.org/package/half)
  [![Build Status](https://secure.travis-ci.org/ekmett/half.png?branch=master)](http://travis-ci.org/ekmett/half)


  This package supplies half-precision floating point values w/ 1 bit of sign, 5 bits
  of exponent, 11 bits of mantissa trailing a leading 1 bit with proper underflow.


  These arise commonly in GPU applications.


  Contact Information

  -------------------


  Contributions and bug reports are welcome!


  Please feel free to contact me through github or on the #haskell IRC channel on
  irc.freenode.net.


  -Edward Kmett

'
license-name: BSD3
