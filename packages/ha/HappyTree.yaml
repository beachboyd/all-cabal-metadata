homepage: https://github.com/MarisaKirisame/HappyTree#readme
changelog-type: markdown
hash: e8017a89d7864b7a4a14756e276f859c9ae1eb5316a8970b4d771075905337ca
test-bench-deps:
  base: ! '>=4.7 && <5'
  constraints: ==0.9.1
  singletons: ==2.3.1
  generics-sop: ==0.3.1.0
  HappyTree: -any
maintainer: lolisa@marisa.moe
synopsis: ''
changelog: ! '# Changelog for HappyTree


  ## Unreleased changes

'
basic-deps:
  base: ! '>=4.7 && <5'
  constraints: ==0.9.1
  singletons: ==2.3.1
  generics-sop: ==0.3.1.0
all-versions:
- '0.2018.1.5'
- '0.2018.1.7'
author: Marisa Kirisame
latest: '0.2018.1.7'
description-type: markdown
description: ! '# HappyTree


  Happy Tree is a end-to-end decision tree library in Haskell.


  That mean, it''s main selling point is, while most decision tree library support
  splitting on Discrete Category/Continuous Variable (Read: essentially Int and Double),
  Happy Tree let you split on any type, as long as you specify how to split on it.


  Want to decide on List or AST? No Problem!


  Want to use your custom quantile search like thingy to speed up splitting on continuous
  variable? Piece of Cake!


  Want to use different split strategy at the same time, splitting on the finest choice?
  You Name It: It form a monoid.


  ## Known Problem


  Can only split on finitely many type now. Cannot split on


  data Perfect a = Here a | More (Perfect (a, a)).

'
license-name: BSD3
