homepage: https://github.com/stepcut/hackage-whatsnew
changelog-type: ''
hash: 396e3922b9fe5706109ab46593149ddeaac4a18f102ac3bce417f590ae2de753
test-bench-deps: {}
maintainer: jeremy@n-heptane.com
synopsis: Check for differences between working directory and hackage
changelog: ''
basic-deps:
  Cabal: ! '>=1.16 && <2.3'
  base: ! '>=4.6 && <5.0'
  filepath: ! '>=1.3 && <1.5'
  process: ! '>=1.1 && <1.7'
  hackage-db: ! '>=1.22 && <2.1'
  containers: ! '>=0.5 && <0.6'
  temporary: ! '>=1.2 && <1.3'
  directory: ! '>=1.2 && <1.4'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.1'
author: Jeremy Shaw
latest: '0.1.1'
description-type: markdown
description: ! "hackage-whatsnew [![Hackage](https://img.shields.io/hackage/v/hackage-whatsnew.svg)](https://hackage.haskell.org/package/hackage-whatsnew)
  [![Build Status](https://api.travis-ci.org/stepcut/hackage-whatsnew.svg?branch=master)](https://travis-ci.org/stepcut/hackage-whatsnew)\n================\n\nDo
  you often modify a package, check that it builds in travis, and then FORGET TO UPLOAD
  IT!\n\nThen this tool is for you! Its raison d'etre is to see if you have\nchanges
  in your local directory which are not on hackage.\n\nUsage\n-----\n\n`hackage-whatsnew`
  depends on the following executables:\n\n 1. cabal\n\n 2. tar\n\n 3. GNU diff (or
  any `diff` which supports the `-r`, `-u`, and `-N` options)\n\nThese binaries need
  to be in the current search path. Assuming\neverything is installed, to use `hackage-whatsnew`
  you simply need to:\n\n 1. run `cabal update`\n\n 2. cd into the same directory
  as the `.cabal` file\n\n 3. run `hackage-whatsnew`\n\nIf no changes are detected,
  then nothing is printed and the exit code is 0.\n\nIf changes are detected a recursive
  diff is displayed and the exit code is 1.\n\nHow It Works\n------------\n\nThis
  tool works as follows:\n\n 1. read the local `.cabal` file and figure out the package
  name\n\n 2. use `cabal fetch` to get the latest version of the package from hackage\n\n
  3. use `cabal sdist` to generate the `.tar.gz` for the local working directory\n\n
  4. untar both `.tar.gz` bundles into temporary directories\n\n 5. use `diff -ruN`
  to check for differences\n\n 6. exit with 0 if no differences found\n\n 7. exit
  with 1 if differences with found\n\n 8. exit with 2 if other errors encountered\n\n\nFAQ\n---\n\n**Q**:
  Why is it called `hackage-whatsnew` instead of `hackage-diff`?\n\n**A**: Because
  `hackage-diff` was already taken. The `whatsnew` term is inspired by `darcs whatsnew`.\n\n**Q**:
  Would it by great if the tool did XYZ?\n\n**A**: Yes! Please submit a pull request.\n"
license-name: BSD3
