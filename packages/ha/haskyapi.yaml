homepage: https://github.com/okue/haskyapi#readme
changelog-type: ''
hash: 8a0194dd3e9054f99f399d1103743967533d9d1496345143ab2b5c3ac0b37fd0
test-bench-deps:
  markdown: -any
  bytestring: -any
  split: -any
  base: ! '>=4.7 && <5'
  time: -any
  persistent: -any
  text: -any
  haskyapi: -any
  persistent-template: -any
  network: -any
  parsec: -any
  containers: -any
  utf8-string: -any
  mtl: -any
  blaze-html: -any
  http-conduit: -any
  tagsoup: -any
  persistent-sqlite: -any
  aeson: -any
  directory: -any
maintainer: nogideca@gmail.com
synopsis: HTTP server
changelog: ''
basic-deps:
  markdown: -any
  bytestring: -any
  split: -any
  base: ! '>=4.7 && <5'
  time: -any
  persistent: -any
  text: -any
  haskyapi: -any
  persistent-template: -any
  network: -any
  parsec: -any
  containers: -any
  utf8-string: -any
  mtl: -any
  blaze-html: -any
  http-conduit: -any
  tagsoup: -any
  persistent-sqlite: -any
  aeson: -any
  directory: -any
all-versions:
- '0.0.0.1'
- '0.0.0.2'
author: okue
latest: '0.0.0.2'
description-type: markdown
description: ! "<img src=\"https://raw.githubusercontent.com/okue/Haskyapi/master/html/img/logo.png\"
  width=\"60%\">\n\n[![Build Status](https://travis-ci.org/okue/Haskyapi.svg?branch=master)](https://travis-ci.org/okue/Haskyapi)\n\n##
  What is Haskyapi?\n\nHaskyapi is a HTTP server implemented in Haskell.\n\n### Build\n\n```sh\n$
  stack build\n$ stack install\n$ haskyapi migrate\n$ haskyapi runserver --port 8080
  --root .\nroot: .\nlisten on 8080\nhttp://localhost:8080/\nhttp://localhost:8080/index.html\nhttp://localhost:8080/hoge.md\n```\n\nor\n\n```sh\n$
  cabal build\n```\n\n### Options\n\n- `-p, --port` : port number\n- `-r, --root`
  : root directory\n- `-h, --help` : help\n\n\n`setting.yml` is a configuration file
  for these options.\n\n\n## How to use as web framework\n\n`app/Main.hs` in this
  repository is an example program using haskyapi as web framework.\n\nHere is a very
  simple example.\n\n```hs\nmodule Main where\nimport Web.Haskyapi.Console.Cli (haskyapi)\nimport
  Web.Haskyapi.Header (\n  Api,\n  ApiFunc,        -- type of api functions\n  Method(..),
  \    -- GET, POST, ...\n  ContentType(..) -- Cplain, Cjson, ...\n  )\n\nrouting
  :: [Api]\nrouting = [\n             (GET,  \"/test\", test, Cplain)\n            ,(POST,
  \"/test\", test, Cplain)\n          ]\n\ntest :: ApiFunc\ntest qry _ = return \"This
  is GET.\"\ntest qry _ = return \"This is POST.\"\n\nmain = haskyapi routing\n```\n\n##
  TODO\n\n- [x] Open Markdown file\n- [ ] Use Database easily\n- [ ] Implement RESTful
  api easily\n- [ ] Automatic generator of api reference document\n- [ ] HTTPS\n\n##
  Bash-completion\n\n`.haskyapi.bash` is a bash-completion setting file for **haskyapi**
  command.\n\n## Now\n\nHaskyapi works at [okue.site:80](http://okue.site/)\n\n- [Simple
  TODO](http://ftodo.okue.site/)\n- [/markdown-page.md](http://okue.site/markdown-page.md)\n-
  [/api/title?url=https://github.com/okue/Haskyapi](http://okue.site/api/title?url=https://github.com/okue/Haskyapi)\n\n"
license-name: MIT
