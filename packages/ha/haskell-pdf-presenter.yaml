homepage: http://michaeldadams.org/projects/haskell-pdf-presenter/
changelog-type: text
hash: 6c409b2e0a3267859227938ec67679a0eee0fde4b92310271d23cdaed5496a02
test-bench-deps: {}
maintainer: Michael D. Adams <http://michaeldadams.org/>
synopsis: Tool for presenting PDF-based presentations.
changelog: ! "CHANGELOG for Haskell Pdf Presenter\n========================================\n\n0.2.5\n\t*
  Fixed missing minus sign in negative times\n\n0.2.4\n\t* Change keybinding for changing
  monitors from \"S\" to \"M\"\n\t* Fix positioning errors in the Glade GUI file\n\t*
  Terminology fix: \"presenter window\" not \"screen\" or \"view\"\n\n0.2.3\n\t* Fix
  compilation on GHC 7.4\n\n0.2.2\n\t* Fixes to cabal meta-data\n\t* Make sure all
  version numbers are up to date\n\t* Spell checking and proof reading\n\n0.2.1\n\t*
  Added support for closing files\n\t* Added better time parsing\n\t* Added CHANGELOG\n\n0.2\n\t*
  Initial release\n"
basic-deps:
  bytestring: ! '>=0.9'
  base: ==4.*
  time: ! '>=1.1.2.0'
  glib: -any
  filepath: ! '>=1.0'
  cairo: -any
  containers: ! '>=0.1'
  poppler: ==0.12.2.*
  old-locale: -any
  zlib: ==0.5.*
  gtk: ! '>=0.12.2'
  template-haskell: ! '>=2.2'
  directory: ! '>=1.0'
all-versions:
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
author: Michael D. Adams
latest: 0.2.5
description-type: text
description: ! "*************************************\n***                               ***\n***
  Haskell Pdf Presenter (hpdfp) ***\n***                               ***\n*************************************\n\nThis
  application is a viewer for PDF-based presentations such as those\ngenerated by
  Beamer.  Unlike standard PDF viewers it has features\nspecifically for presentations
  such as a visual clock/timer and a\npreview showing the next slide to the person
  delivering the talk.\n\nFor basic use of the program, simply pass the path to the
  PDF as an\nargument as in the following:\n\n    $ hpdfp [filename]\n\nFor help with
  the command line use the \"--help\" flag.\n\nFor help with the GUI press the \"?\"
  key when the program is running.\n\nThere are a lot of features that may not be
  immediately obvious so\nplease be sure to look at those bits of documentation.\n\nYou
  can also visit the project home page for example use cases:\n    http://michaeldadams.org/projects/haskell-pdf-presenter/\n\n***********\nWARNING:
  This application intentionally disables both the screen saver\nand automatic screen
  dimming.  This is to avoid having the screen saver\nstart in the middle of your
  presentation.\n***********\n\n================\nFeatures\n================\n- Rendering\n
  \ - Slides are pre-rendered in the background\n  - Pre-rendered slides are compressed
  to memory usage is low\n      (e.g., my dissertation defense with 95 slides takes
  only 60MB at max resolution)\n  - slide number or file name until rendered\n  -
  Renders slide close to current slide first (at a rate of two forward per one backward).\n
  \ - Cache is filtered and wiped when the screen resizes\n  - Since poppler is not
  thread safe (see https://bugs.freedesktop.org/show_bug.cgi?id=50992),\n    we avoid
  using a separate thread for rendering, but it is still done incrementally\n    so
  the GUI is still responsive.\n\n- Compatible with most remote clickers\n\n- Disables
  screen saver when running in fullscreen mode\n  - WARNING: This is done by programatically
  giggling the mouse by zero pixels (even when running in the background).\n    This
  may lead to other programs thinking the mouse is constantly moving\n    (e.g. a
  video player may not dim the background or hide the mouse).\n    I haven't found
  any programs where this is an actual problem, but it is a possibility.\n\n- Audience
  window\n  - Mouse hides after ~3 seconds\n  - Shows on top if there is only one
  monitor\n  - Automatically placed on auxiliary monitor/projector if present\n  -
  Both black and white video mute\n\n- Presenter window\n  - Meta-data:\n    - A small
  progress bar is shown at the bottom while pre-rendering,\n      but since pre-rendering
  is done in the background, the GUI is\n      still be responsive and you do not
  have to wait for\n      pre-rendering to complete.\n    - Fonts are big (60pt =
  5 * 12pt)\n    - Resizeable\n    - Timer:\n      - Both stopped and paused mode:\n
  \       - Paused automatically starts on slide forward or back\n        - Stopped
  says stopped until user explicitly changes it\n      - Four different modes: count
  down, count up, 12 hour and 24 hour\n      - Grows to fit size (useful for session
  chairs)\n      - Colors: white, red (warning), purple (overtime)\n          Yeah,
  these colors are a bit strange, but I've chosen them to\n          be easily distinguishable
  even in peripheral vision or at a\n          glance.  I don't know how well they
  work for color-blind\n          people.  Feedback is welcome.\n      - Double click
  to configure timer\n        - Current remaining time\n        - Initial time\n        -
  Warning time\n    - Slide counter\n      - Double click to go to slide\n    - Mute
  status\n    - Timer status\n      - Multiple modes: Count down, count up, wall clock
  (12 or 24 hr)\n      - When paused (but not stopped) automatically goes to running
  if user\n        goes forward or backward one slide.  Changing slide in other ways
  does not unpause.\n      - NOTE: to start timer but stay on first slide, just hit
  the back key\n    - Progress bar when doing rendering in the background\n  - Preview\n
  \ - Thumbnails\n    - Current slide highlighted\n    - Tooltips show slide number
  (Currently disabled due to a bug in GTK)\n    - Click to go to slide\n    - Mouse
  wheel scrolls instead of changes slide\n\n- Times specified in dialogues or command
  line are parsed according to\n  the format \"-* ((float:)? float:)? float\" with
  whitespace\n  allowed anywhere. The following are some examples.\n    1:30:05     (1
  hour, 30 min and 5 seconds)\n      30:00     (30 min)\n         90     (90 seconds)\n
  \         0     (0 seconds)\n      -1:30     (negative 1 minute and 30 seconds =
  negative 90 seconds)\n      1:0:0     (1 hour)\n     1:-5:0     (1 hour minus 5
  minutes = 55 minutes)\n    1.5:0:0     (1.5 hours)\n\n- Key bindings:\n  (Note that
  the keys are far apart on a Qwerty keyboard and irreversible\n  actions (e.g., resetting
  the timer) all use a modifier key.)\n\n  - Help/About dialog: H, ?\n  - Quit: Alt-F4,
  Ctrl-Q\n  - Switching slides:\n    - Forward slide and unpause (shift moves by 10):
  space, page down, enter, right arrow, down arrow\n    - Backward slide and unpause
  (shift moves by 10): back space, page up, left arrow, up arrow\n    - First slide:
  home\n    - Last slide: end\n    - Goto slide number: Ctrl-G, double-click slide
  number\n    - History back: Alt-L, XF86Back\n    - History forward: Alt-R, XF86Forward\n
  \ - Clock/timer control:\n    - Toggle pause: P, pause\n    - Toggle stop: Shift-P\n
  \   - Reset timer: C\n    - Open timer dialog: Ctrl-C\n  - Mute:\n    - Toggle white:
  W\n    - Toggle black: B\n  - Presenter window:\n    - Switch views: Tab\n    -
  Change preview percentage: [, ], Shift-[ (minor), Shift-] (minor), = (standard stops)\n
  \     - Standard stops: 0, best-fit on left, 1/3, 1/2, 2/3, best-fit on right, 1\n
  \ - Files:\n    - Reload file: Ctrl-R\n    - Open file: Ctrl-O\n    - Close file:
  Shift-Q\n  - Window control:\n    - Enter fullscreen: F, F11, Alt-Enter, Control-L\n
  \   - Exit fullscreen: Escape, F, F11, Alt-Enter, Control-L\n    - Move between
  monitors: M, Shift-M (reverse)\n    - Move presenter window between monitors: Ctrl-S,
  Shift-Ctrl-S (reverse)\n    - Move audience window between monitors: Alt-S, Shift-Alt-S
  (reverse)\n\n- Command line:\n  - Zero or one files as argument\n      (NOTE: Zero
  files is useful for creating a simple timer with no slides)\n  - Options:\n    -h,
  -?   --help                                   Display usage message\n    -s INT
  \  --slide=INT                              Initial slide number (default 1)\n    -t
  TIME  --start-time=TIME, --starting-time=TIME  Start time (default 10:00)\n    -w
  TIME  --warn-time=TIME, --warning-time=TIME    Warning time (default 5:00)\n    -e
  TIME  --end-time=TIME, --ending-time=TIME      End time (default 0:00)\n    -f       --fullscreen
  \                            Start in full screen mode\n    -p INT   --preview-percentage=INT
  \                Initial preview percentage (default 50)\n             --presenter-monitor=INT
  \                 Initial monitor for presenter window (default 0)\n             --audience-monitor=INT
  \                  Initial monitor for audience window (default 1)\n             --video-mute=MODE
  \                       Initial video mute mode: \"black\", \"white\" or \"off\"
  (default)\n             --clock-mode=MODE                        Initial clock mode:
  \"remaining\" (default), \"elapsed\", \"12hour\" or \"24hour\"\n             --timer-mode=MODE
  \                       Initial timer mode: \"play\", \"pause\" (default) or \"stop\"\n
  \            --compression=[0-9]                      Compression level (default
  1). 0 is none. 1 is fastest. 9 is best.\n\n================\nInspired by\n================\n\n*
  pdfpc: http://davvil.github.com/pdfpc/\n\n* pdf-presenter-console: http://westhoffswelt.de/projects/pdf_presenter_console.html\n\n*
  pympress: http://pympress.org/\n\n================\nKnown Bugs\n================\n\nIf
  you\n  (1) are in full screen mode,\n  (2) are displaying to two monitors,\n  (3)
  have the presenter toggled to show thumbnails, and\n  (4) hover the mouse over the
  vertical scroll bar,\nthen the rendering will glitch and show older versions of
  the screen.\nI don't know why this happens, but I'm guessing it is a bug in GTK.\nA
  similar bug happens if you put tooltips on the thumbnails (which\nare currently
  disabled to avoid that bug).  Any help in solving\nthis bug would be appreciated.\n"
license-name: GPL-3.0-only
