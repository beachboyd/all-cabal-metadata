homepage: http://github.com/MarcWeber/hasktags
changelog-type: ''
hash: 04244d0ffe48e87653039a7b45d1ed07b5703f8ebcfdd929deafd9ee4c7afbcc
test-bench-deps:
  bytestring: -any
  unix: -any
  base: -any
  json: -any
  filepath: -any
  HUnit: -any
  utf8-string: -any
  directory: -any
maintainer: ! 'Jack Henahan <jhenahan@me.com>,

  Marc Weber <marco-oweber@gmx.de>,

  Marco Túlio Pimenta Gontijo <marcotmarcot@gmail.com>'
synopsis: Produces ctags "tags" and etags "TAGS" files for Haskell programs
changelog: ''
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  unix: -any
  base: ==4.*
  json: ! '>=0.5 && <0.10'
  hasktags: -any
  filepath: -any
  utf8-string: -any
  directory: ! '>=1.1 && <1.4'
all-versions:
- '0.67'
- '0.68'
- '0.68.1'
- '0.68.2'
- '0.68.6'
- '0.68.7'
- '0.69.0'
- '0.69.1'
- '0.69.2.1'
- '0.69.3'
- '0.69.4'
author: The GHC Team
latest: '0.69.4'
description-type: text
description: ! "# hasktags\nA tool to generate tag files for vim and emacs\n\nWhat
  is it for? A tag file is a index containing key items of your project such as\n-
  function names\n- module names\n- data declarations\n- ...\n\nSo that you can find
  / jump to them fast.\n\n## HOWTO (GENERATING TAG FILES):\nBuild hasktags (standard
  cabal build)\n\nCtag format:\n```bash\nhasktags --ignore-close-implementation --ctags
  .\n```\n\nEtag format (used by emacs):\n```bash\nhasktags --ignore-close-implementation
  --etags .\n```\n\nBoth formats:\n```bash\nhasktags --ignore-close-implementation
  .\n```\n\n*NB:* Generating both tags generates a file called `TAGS` for Emacs, and
  one called `ctags` for Vim.\n\n## HOWTO (USING TAG FILES):\n### ViM\n```viml\nlet
  tags+=tagfile \" tags,TAGS is the default setting so probably you don't have to
  do anything\n```\n`:tjump foo<tab>` or such. See `:h` tags\n\n### NEdit\nLoad the
  \"tags\" file using File/Load Tags File.\nUse \"Ctrl-D\" to search for a tag.\n\n###
  XEmacs/Emacs\nLoad the \"TAGS\" file using \"visit-tags-table\"\nUse \"M-.\" to
  search for a tag.\n\n### jedit\nThere is a plugin.\n\n### Tests\nTo run the tests,
  do `cd testcases; sh test.sh`.\n\n## History\nIn the past this tool was distributed
  with ghc. I forked and added some\nfeatures.  hasktags itself was moved out of the
  ghc repository. Then I only\nverified that my fork finds at least as much tags as
  the one forked by Igloo.\n\n## Future\nThings which could be done in the future:\n-
  make json support optional\n- Marco Túlio Pimenta Gontijo proposed replacing json
  by aeson because it might\n  be faster\n\n## Maintainers\nSee cabal file\n\n## Comments
  about literate haskell ([lhs][]):\nAlex no longer supports bird style \">\", so
  should we drop support, too?\n\n## Contributors\n- Tsuru Capital (github/liyang)\n-
  Marco Túlio Pimenta Gontijo (github/marcotmarcot)\n\n## TODO\nAdd all people having
  contributed before Oct 2012\nThis includes people contributing to the darcs repository
  as well as people\nhaving contributed when this repository has been part of ghc\n\n#
  Related work\nList taken from announce of lushtags.\n- https://github.com/bitc/lushtags\n-
  http://hackage.haskell.org/package/hasktags\n- http://kingfisher.nfshost.com/sw/gasbag/\n-
  http://hackage.haskell.org/package/hothasktags\n- http://majutsushi.github.com/tagbar/\n\nAnd
  probably much more\n\n[lhs]: http://www.haskell.org/haskellwiki/Literate_programming\n"
license-name: BSD3
