homepage: http://projects.haskell.org/hat/
changelog-type: ''
hash: 5f74d64ba9f952601857c445a87b1f06f5f5d9f769c8f8194d84ebd328ae5b83
test-bench-deps: {}
maintainer: oc@kent.ac.uk
synopsis: The Haskell tracer, generating and viewing Haskell execution traces
changelog: ''
basic-deps:
  bytestring: ! '>=0.9'
  haskeline: ! '>=0.6'
  base: ! '>=4.9 && <5'
  filepath: ! '>=1.3'
  process: ! '>=1.1'
  containers: ! '>=0.5.2'
  haskell-src-exts: ! '>=1.18 && <1.19'
  polyparse: ! '>=1.11'
  old-time: ! '>=1.1'
  old-locale: ! '>=1.0'
  random: ! '>=1.0'
  directory: ! '>=1.2'
all-versions:
- '2.7.0.0'
- '2.7.0.1'
- '2.7.0.2'
- '2.7.0.3'
- '2.7.0.4'
- '2.7.0.5'
- '2.7.0.6'
- '2.7.0.7'
- '2.7.0.8'
- '2.7.0.9'
- '2.7.0.10'
- '2.7.0.11'
- '2.7.0.12'
- '2.8.0.0'
- '2.9.0.0'
- '2.9.1'
- '2.9.2'
author: Hat team
latest: '2.9.2'
description-type: haddock
description: ! 'hat-trans transforms Module.hs into Hat/Module.hs such that when the
  program is

  executed, a trace file Programname.hat is generated.

  Various tools (hat-trail, hat-observe, hat-explore ...) then allow viewing the

  trace file in different ways, to locate a bug or understand how a program works.

  Hat 2.9 uses the haskell-src-exts parser and other Hackage libraries to

  reduce its own size and simplify extensions. Module imports and exports have

  also been improved to handle nearly all kinds of renaming, hiding, etc.

  Hat 2.9 works only with ghc for Haskell 98 (plus a few extensions) and

  the standard Haskell 98 libraries plus some Haskell 2010 libraries.

  Although it should build on any operating system,

  most viewing tools use ASCII console escape sequences and they open xterms;

  hence they will only work well under Unix and X11.

  Tested on MacOS X 10.11.6.

  Installation:

  > cabal -v install

  Flag -v allows you to see what is going on. Building takes a long time

  (one module has 25.000 lines of code).

  Don''t worry about numerous warning messages. The tracing transformation does produce

  code with lots of overlapping patterns.

  Use:

  > hat-make MyProgram.hs

  transforms and compiles all modules of your program and produces the tracing

  version Hat/MyProgram.

  Run your program

  > Hat/MyProgram

  which will produce trace files MyProgram.hat*

  Use the viewing tools to explore the trace:

  > hat-trail / hat-observe / hat-explore /...   MyProgram

  There is documentation in the "docs" folder, but it is partially outdated.

  There are a few small programs for exploring tracing in the "examples" folder.'
license-name: OtherLicense
