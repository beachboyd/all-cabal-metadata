homepage: http://www.haskell.org/haddock/
changelog-type: text
hash: 8b13cd3ce84afe5a52030416e0d67803cf33dbb38d7753d5b2a28c532bc4e5c1
test-bench-deps: {}
maintainer: David Waern <david.waern@gmail.com>
synopsis: A documentation-generation tool for Haskell libraries
changelog: ! "Changes in version 2.6.0:\n\n  * Drop support for GHC 6.10.*\n\n  *
  Add support for GHC 6.12.1\n\n  * Cross-package documentation: full documentation
  show up when re-exporting\n    things coming from external packages\n\n  * Lexing
  and parsing the Haddock comment markup is now done in Haddock\n    again, instead
  of in GHC\n\n  * Slightly prettier printing of instance heads\n\n  * Support platforms
  for which GHC has no native code generator\n\n  * Add a flag --print-ghc-libdir\n\n
  \ * Minor bug fixes\n\n-----------------------------------------------------------------------------\n\nChanged
  in version 2.5.0:\n\n  * Drop support for GHC 6.8.*\n\n  * Add support for GHC 6.10.3
  and 6.10.4\n\n  * Revert to the old multi-page index for large packages (#106)\n\n
  \ * Show GADT records in the generated documentation\n\n  * Create output directory
  if it doesn't exist (#104)\n\n  * Use the native codegen instead of compiling via
  C for TH modules\n\n  * Add --use-unicode flag for displaying prettier versions
  of common symbols\n\n  * Mutiple verbosity levels: remove --verbose and add --verbosity=n\n\n-----------------------------------------------------------------------------\n\nChanged
  in version 2.4.2:\n\n  * Support GHC 6.10.2\n\n  * Haddock no longer crashes on
  Template Haskell modules (#68)\n    (only with GHC 6.10.2 or above)\n\n  * Fix problem
  with Template Haskell-generated declarations disappearing (#59)\n\n  * Generate
  two anchors for each link for compatibility between IE and Opera\n    (#45)\n\n
  \ * Improved error messages\n\n  * Show re-exports from external packages again
  (GHC ticket #2746)\n\n  * Store hidden modules in .haddock files again (needed by
  the haddock\n    library)\n\n  * Avoid processing boot modules\n\n  * Pragmas may
  exist between document comments and declarations\n\n  * Do not indicate that a constructor
  argument is unboxed\n\n  * Fix problem with with non-working links to ghc-prim\n\n
  \ * Allow referring to a specific section within a module in a module link\n    (#65)\n\n
  \ * Fixes to the Hoogle backend\n  \n  * Improvements to the haddock library\n\n
  \ * Many other fixes (including #67, #69, #58, #57)\n\n-----------------------------------------------------------------------------\n\nChanged
  in version 2.4.1:\n\n  * Depend on base 4.* when GHC >= 6.9, otherwise 3.*\n\n-----------------------------------------------------------------------------\n\nChanged
  in version 2.4.0:\n\n  * Add framed view of the HTML documentation\n\n  * Build
  with GHC 6.8.2 and 6.8.3 again\n\n  * Support images in documentation comments again\n\n
  \ * Small improvements to the Hoogle output\n\n  * A few bugs has been fixed\n\n-----------------------------------------------------------------------------\n\nChanged
  in version 2.3.0:\n\n  * Support for GHC 6.10.1\n\n  * Slightly improved space usage\n\n
  \ * Fix a bug that made hidden modules show up in the contents & index pages\n\n
  \ * Fix a bug that made Haddock load modules twice\n\n  * Improvements to the Hoogle
  output\n\n-----------------------------------------------------------------------------\n\nChanged
  in version 2.2.2:\n\n  * Relax version dependency on ghc-paths\n\n-----------------------------------------------------------------------------\n\nChanges
  in version 2.2.1:\n\n  * Support for GHC 6.8.3\n\n  * The Hoogle backend is back,
  thanks to Neil Mitchell. The plan is to be\n    compatible with the upcoming Hoogle
  4 pre-release\n\n  * Show associated types in the documentation for class declarations\n\n
  \ * Show type family declarations\n\n  * Show type equality predicates\n\n  * Major
  bug fixes (#1 and #44)\n\n  * It is no longer required to specify the path to GHC's
  lib dir\n\n  * Remove unnecessary parenthesis in type signatures\n\n-----------------------------------------------------------------------------\n\nChanges
  in version 2.1.0:\n\n  * Fix a bug that made links point to the defining module
  instead\n    of the \"best\" one (e.g Int pointing to GHC.Base instead of Data.Int)\n\n
  \ * Fix a couple of smaller bugs\n\n  * The representation of DocName was changed
  in the library\n\n  * Add a flag --no-warnings for turning off warnings\n\n-----------------------------------------------------------------------------\n\nChanges
  in version 2.0.0.0:\n\n  * The GHC API is used as the front-end\n\n  * Haddock now
  understands all syntax understood by GHC 6.8.2\n\n  * Haddock can generate documentation
  for some of the language extensions\n    in GHC 6.8.2\n\n  * Format of module attributes
  has changed. The only way of specifiying\n    module attributes is via a new OPTIONS_HADDOCK
  pragma. Example: \n    {-# OPTIONS_HADDOCK hide, prune #-}\n\n  * Haddock understands
  literate source files\n\n  * Add a small library to read Haddock's interface files\n\n
  \ * Add a flag -B for passing the path to the GHC lib dir\n\n  * Add a flag --optghc
  for passing options to GHC\n\n  * Add a flag --ghc-version for printing the GHC
  version\n\n  * Remove --use-package, --allow-missing-html, --ghc-pkg, in favour
  of only\n    supporting --read-interface\n\n  * Remove --package flag, the GHC flag
  -package-name can be used instead\n\n  * Remove --no-implicit-prelude flag, the
  GHC flag -XNoImplicitPrelude can\n    be used instead\n\n-----------------------------------------------------------------------------\n\nChanges
  in version 0.9:\n\n  * Infix type operators, e.g., first :: a~>a' -> (a,b)~>(a',b)\n\n
  \ * Add a search box to the index page which automatically narrows\n    the index
  to the search as you type (thanks to Neil Mitchell).\n\n  * Add a --ghc-pkg flag\n\n
  \ * Add a flag --allow-missing-html\n\n  * URL expansion for %%, %L, %{LINE}\n\n
  \ * added substitution %{FILE///c}\n\n  * Lexing of /.../ is now more like '...',
  in that a / character must\n    be matched by another / character on the same line,
  otherwise it\n    is treated as a literal '/'.  This removes a common source of\n
  \   accidental parse errors in documentation.\n\n  * Various bugs were fixed.\n\n
  \ * Cabal 1.2 is now required, and Haddock builds with GHC 6.8.x.\n\n-----------------------------------------------------------------------------\n\nChanges
  in version 0.8:\n\n  * Haddock has a Cabal build system, and will build on Windows
  without\n    Cygwin or MSYS.  GHC 6.4 or later is required.\n\n  * New options:
  --comments-base, --comments-module, --comments-entity\n    for generating links
  to pages (eg. wiki) for collecting user comments.\n\n  * New options: --source-base,
  --source-module, --source-entity\n    for generating links to source code.  Haddock
  now understands\n    {-# LINE #-} pragmas, which means it can figure out the correct\n
  \   name for the source file even if the file is preprocessed.\n\n  * Haddock generates
  output for populating the Hoogle search engine.\n\n  * New markup <<url>> for including
  images.\n\n-----------------------------------------------------------------------------\n\nChanges
  in version 0.7:\n\n  * Changes in the way Haddock decides where to direct hyperlinks.
  \ Each entity\n    is now assigned a single \"home\" module, and all hyperlinks
  are directed\n    to that module.  See the docs (\"Hyperlinking and re-exported
  entities\")\n    for details.\n\n  * New options --ignore-all-exports, --hide\n\n
  \ * New option --use-package for creating documentation that hyperlinks to\n    the
  HTML documentation for existing packages on your system.  It works\n    by querying
  ghc-pkg for the location of the Haddock interface and\n    HTML for the given package.\n\n
  \ * Parts of the HTML documentation, notably lists of instances, are\n    now \"collapsible\"
  with a +/- button.  Also, the contents page is now\n    in the form of tree in which
  subtrees can be collapsed.\n\n  * Support for Microsoft DevHelp and HtmlHelp 2.0
  formats.\n\n  * Support for a short description for each module for the contents
  page.\n\n  * Compiles with GHC 6.4+\n\n  * Various bugfixes\n\n-----------------------------------------------------------------------------\n\nChanges
  in version 0.6:\n\n  * Implicit parameters, zip comprehensions and 'mdo' are now\n
  \   supported by the parser.\n\n  * Some lexical bugs were fixed, mainly concerning
  literal paragraphs\n    next to non-literal paragraphs.\n\n  * New options:  --gen-index,
  --use-index, --gen-contents and --use-contents,\n    for generting a combined index
  and contents for several libraries\n    from the appropriate .haddock files.\n\n
  \ * There is now one index rather than separate Function/Constructor and\n    Type/Class
  indices.  Where a name refers to several entities, these\n    are listed separately
  in the index.\n\n  * New option: -v, elicits more verbose warnings.  Some warnings
  are\n    now turned off by default; Haddock should be a little less noisy\n    in
  general.\n\n  * Markup for definition lists has been added.  See the documentation
  \n    for details.\n\n  * New option: --package for setting the package name.  The
  package\n    is listed alongside each module name in the combined contents.\n\n
  \ * Entities which are re-exported from another package now at least\n    leave
  a hyperlink in the generated HTML, rather than nothing at all.\n\n  * Some fixes
  for bugs which caused incorrect hyperlinks in the\n    generated HTML.  In particular,
  instances should now be linked\n    correctly.\n\n  * Some aesthetic improvements
  to the generated HTML.\n\n-----------------------------------------------------------------------------\n\nChanges
  in version 0.5:\n\n  * Compiles with recent versions of GHC.\n\n  * A few bugs have
  been fixed.\n\n  * New labelling/linking feature (see \"Anchors\" in the manual).\n\n-----------------------------------------------------------------------------\n\nChanges
  in version 0.4:\n\n  * Import declarations which list entities in parentheses, or
  with\n    hiding clauses, are now properly supported.  Modulo one or two\n    small
  infelicities, the full Haskell modules system is now supported.\n\n  * Haddock is
  now more flexible about the placing of separators\n    (commas, semicolons) in relation
  to doc comments.\n\n  * There is support for generating and reading \"interface
  files\"\n    which describe the exports of a set of modules.  This is useful\n    for
  generating documentation which hyperlinks to\n    previously-generated documentation.\n
  \   \n  * Support for generating the extra files required by the Microsoft\n    Help
  compiler.\n\n  * New option: --prologue specifies a file of documentation which
  is\n    placed on the contents page.\n\n  * Many bugs fixed\n\n-----------------------------------------------------------------------------\nChanges
  in version 0.3:\n  \n  * Documentation on individual function arguments is now implemented
  \n  \n  * Links can be made to identifiers that aren't in scope, by using\n    the
  fully qualified name.\n\n  * Instances are collected and listed with the appropriate
  classes\n    and datatypes (not for derived instances yet).\n\n  * Single quotes
  are only interpreted specially when they surround a\n    legal Haskell identifier,
  otherwise they are treated literally.\n\n  * Bird-tracked text is now literal.  If
  you want marked-up text in\n    a code block, use the @...@ notation instead.\n\n
  \ * Various changes to the layout, it generally looks nicer now.\n\n  * Various
  bugs fixed.\n\n-----------------------------------------------------------------------------\nChanges
  in version 0.2:\n\n  * The [...] markup for typewriter font has been changed to
  @...@.\n\n  * Module attributes introduced (see the documentation for details).\n\n
  \ * {- ... -} style comments may now be used for documentation annotations\n\n  *
  Recursive modules are detected and reported as an error.\n\n  * Existential constructors
  and rank-N types are now groked by the parser\n\n  * Some type rendering cleaned
  up\n\n  * `abc' is accepted as well as 'abc' to markup an identifier\n\n  * Several
  bugs fixed, and error messages improved.\n"
basic-deps:
  ghc: ! '>=6.12 && <6.14'
  Cabal: ! '>=1.5'
  base: ! '>=4.0.0.0 && <4.3.0.0'
  filepath: -any
  array: -any
  containers: -any
  ghc-paths: -any
  pretty: -any
  directory: -any
all-versions:
- 2.5.0
- 2.6.0
author: Simon Marlow, David Waern
latest: 2.6.0
description-type: text
description: ! "Haddock, a Haskell Documentation Tool\n=====================================\n\nThis
  is Haddock, a tool for automatically generating documentation\nfrom annotated Haskell
  source code.  It is primary intended for\ndocumenting library interfaces, but it
  should be useful for any kind\nof Haskell code.\n\nLike other systems ([1],[2]),
  Haddock lets you write documentation\nannotations next to the definitions of functions
  and types in the\nsource code, in a syntax that is easy on the eye when writing
  the\nsource code (no heavyweight mark-up).  The documentation generated by\nHaddock
  is fully hyperlinked - click on a type name in a type\nsignature to go straight
  to the definition, and documentation, for\nthat type.\n\nHaddock understands Haskell's
  module system, so you can structure your\ncode however you like without worrying
  that internal structure will be\nexposed in the generated documentation.  For example,
  it is common to\nimplement a library in several modules, but define the external
  API by\nhaving a single module which re-exports parts of these implementation\nmodules.
  \ Using Haddock, you can still write documentation annotations\nnext to the actual
  definitions of the functions and types in the\nlibrary, but the documentation annotations
  from the implementation\nwill be propagated to the external API when the documentation
  is\ngenerated.  Abstract types and classes are handled correctly.  In\nfact, even
  without any documentation annotations, Haddock can generate\nuseful documentation
  from your source code.\n\nHaddock can generate documentation in multiple formats;
  currently HTML\nis implemented, and there is partial support for generating DocBook.\nThe
  generated HTML uses stylesheets, so you need a fairly up-to-date\nbrowser to view
  it properly (Mozilla, Konqueror, Opera, and IE 6\nshould all be ok).\n\nFull documentation
  can be found in the doc/ subdirectory, in DocBook\nformat.\n\nPlease send questions
  and suggestions to:\n\nDavid Waern <david.waern@gmail.com> or\nSimon Marlow <simonmar@microsoft.com>\n\n\n[1]
  IDoc - A No Frills Haskell Interface Documentation System\n    http://www.cse.unsw.edu.au/~chak/haskell/idoc/\n\n[2]
  HDoc http://www.fmi.uni-passau.de/~groessli/hdoc/\n"
license-name: BSD-3-Clause
