homepage: https://github.com/mstksg/hakyll-dhall#readme
changelog-type: markdown
hash: 08c87095144f2573bc720390fdc783096df5b9156eaf38fbfaa5f6edcaafa0e2
test-bench-deps: {}
maintainer: justin@jle.im
synopsis: Dhall compiler for Hakyll
changelog: ! 'CHANGELOG

  =========


  Version 0.2.1.2

  ---------------


  *October 9, 2018*


  <https://github.com/mstksg/backprop/releases/tag/v0.2.1.2>


  *   Export `interpretDhallCompiler`.


  Version 0.2.1.1

  ---------------


  *October 8, 2018*


  <https://github.com/mstksg/backprop/releases/tag/v0.2.1.1>


  *   Rearranging documentation.


  Version 0.2.1.0

  ---------------


  *October 8, 2018*


  <https://github.com/mstksg/backprop/releases/tag/v0.2.1.0>


  *   Swap argument order for `parseDhall` and `parseDhallWith`.


  Version 0.2.0.0

  ---------------


  *October 8, 2018*


  <https://github.com/mstksg/backprop/releases/tag/v0.2.0.0>


  *   Revamped workflow; largely incompatible with v0.1.0.0.


  Version 0.1.0.0

  ---------------


  *October 7, 2018*


  <https://github.com/mstksg/backprop/releases/tag/v0.1.0.0>


  *   Initial release

'
basic-deps:
  base: ! '>=4.7 && <5'
  data-default-class: -any
  dhall: ! '>1.17'
  text: -any
  cborg: -any
  hakyll-dhall: -any
  filepath: -any
  lens-family-core: -any
  containers: -any
  binary: -any
  mtl: -any
  prettyprinter: -any
  transformers: -any
  hakyll: ! '>=4.10'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.1.0'
- '0.2.1.1'
- '0.2.1.2'
author: Justin Le
latest: '0.2.1.2'
description-type: markdown
description: ! "# [hakyll-dhall][]\n\n[![hakyll-dhall on Hackage](https://img.shields.io/hackage/v/hakyll-dhall.svg?maxAge=86400)](https://hackage.haskell.org/package/hakyll-dhall)\n[![Build
  Status](https://travis-ci.org/mstksg/hakyll-dhall.svg?branch=master)](https://travis-ci.org/mstksg/hakyll-dhall)\n\n[Hakyll][hakyll]
  compiler and loader for [Dhall][dhall] files.  Functions are\nintended to track
  all local dependencies within the project directory, so\nrebuilds are properly triggered
  on up-stream imports.  Provides options for\ncustomizing rebuilding behavior for
  network, environment variable, and\nnon-project local files.\n\n`loadDhall` and
  `loadDhallExpr` allow for loading and parsing of Dhall files\nfor usage within the
  'Compiler' monad, so you can use the results as\nintermediate parts in building
  your pages.  `parseDhall` allows directly\npassing in Dhall strings to parse and
  resolve, tracking imports.\n`dhallCompiler` is meant as a \"final end-point\", which
  just pretty-prints a\nparsed Dhall file, with optional normalization.\n\nHakyll
  compiler and loader for Dhall files.  Functions are intended to\ntrack all local
  dependencies within the project directory, so rebuilds\nare properly triggered on
  up-stream imports.  Provides options for\ncustomizing rebuilding behavior for network,
  environment variable, and\nnon-project local files.\n\nThere are three major workflows:\n\n1.
  `dExprCompiler`, `loadDhall`, and `dhallCompiler`, for loading underlying\n   Dhall
  files, saving them into the Hakyll cache and later interpreting them\n   as values.\n\n2.
  `parseDhall` and `parseDhallExpr`, for parsing Dhall expressions provided as\n   strings,
  and resolving them while tracking dependencies.\n\n3. `dhallPrettyCompiler`, for
  processing and re-formatting Dhall files and\n   presenting them as-is as a \"final
  end-point\".\n\n[hakyll-dhall]: http://hackage.haskell.org/package/hakyll-dhall\n[hakyll]:
  http://hackage.haskell.org/package/hakyll\n[dhall]: http://hackage.haskell.org/package/dhall\n"
license-name: BSD3
