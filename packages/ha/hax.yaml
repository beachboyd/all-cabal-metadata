homepage: http://johannesgerer.com/hax
changelog-type: ''
hash: 6f3b6fb1dba44f1367dc2dff79bb619170b6adb002545fd197bc75b0d2a7c853
test-bench-deps: {}
maintainer: Johannes Gerer <oss@johannesgerer.com>
synopsis: Haskell cash-flow and tax simulation
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.8.1 && <0.11'
  split: ! '>=0.2.3.1 && <0.3'
  base: ! '>=4.9.0.0 && <4.10'
  blaze-markup: ! '>=0.7.1.1 && <0.8'
  text: ! '>=1.2.2.1 && <1.3'
  filepath: ! '>=1.4.1.0 && <1.5'
  array: ! '>=0.5.0.0 && <0.6'
  containers: ! '>=0.5.5.1 && <0.6'
  mtl: ! '>=2.2.1 && <2.3'
  blaze-html: ! '>=0.8.1.3 && <0.9'
  transformers: ! '>=0.5.2.0 && <0.6'
  boxes: ! '>=0.1.4 && <0.2'
  Decimal: ! '>=0.4.2 && <0.5'
  aeson: ! '>=0.11.2.1 && <0.12'
  template-haskell: ! '>=2.11.0.0 && <2.12'
  directory: ! '>=1.2.6.2 && <1.3'
all-versions:
- 0.0.2
author: Johannes Gerer
latest: 0.0.2
description-type: markdown
description: ! '# hax

  A library for cash-flow and tax simulations. The type system is used to ensure correctness
  e.g. of double-entry accounting, and the correct calculation of taxes. The use of
  Haskell''s `do`-notation and type-classes permit an almost verbatim translation
  of the tax code into the program.


  It currently includes personal income tax (Einkommensteuer), corporate tax (KÃ¶rperschaftsteuer)
  and trade/business tax (Gewerbesteuer), but could easily be extended to other legal
  systems


  ## Usage


  ```

  stack runghc -- -isrc src/main

  ```


  will produce a folder named `html` containing the results of the [HAX.Example](src/HAX/Example.hs)
  that commes with this library. The look at the full ledger in `html/index.html`
  or the charts `static/charts.html`.


  ## Documentation


  The docs on [Hackage](https://hackage.haskell.org/package/hax) are quite comprehensive
  (with some parts in German).



  ## Srceenshots


  ![ledger](ledger.png)


  Charts


  ![charts](charts.png)



'
license-name: MIT
