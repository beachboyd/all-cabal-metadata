homepage: http://www.haskell.org/haddock/
changelog-type: markdown
hash: ecb5db3001bf481efcdf45aaa671c872a959143b4ea799cbb88dd702c9022bd7
test-bench-deps:
  haddock-library: -any
  bytestring: ! '>=0.9.2.1 && <0.11'
  base: ! '>=4.5 && <4.13'
  hspec: ! '>=2.4.4 && <2.6'
  text: ! '>=1.2.3.0 && <1.3'
  filepath: ^>=1.4.1.2
  parsec: ! '>=3.1.13.0 && <3.2'
  tree-diff: ^>=0.0.0.1
  containers: ! '>=0.4.2.1 && <0.7'
  base-compat: ! '>=0.9.3 && <0.11'
  transformers: ! '>=0.3.0 && <0.6'
  optparse-applicative: ^>=0.14.0.0
  deepseq: ! '>=1.3 && <1.5'
  QuickCheck: ^>=2.11
  directory: ^>=1.3.0.2
maintainer: Alec Theriault <alec.theriault@gmail.com>, Alex Biehl <alexbiehl@gmail.com>,
  Simon Hengel <sol@typeful.net>, Mateusz Kowalczyk <fuuzetsu@fuuzetsu.co.uk>
synopsis: Library exposing some functionality of Haddock.
changelog: ! "## Changes in version 1.6.1\n\n * Replace `attoparsec` with `parsec`
  (#799)\n\n## Changes in version 1.6.0\n\n * `MetaDoc` stores package name for since
  annotations\n\n## Changes in version 1.5.0.1\n\n * Support for parsing unicode operators
  (#458)\n\n## Changes in version 1.5.0\n\n * Bifunctor, Bifoldable and Bitraversable
  instances for DocH and MetaDoc\n\n * Support for grid tables\n   * added `DocTable`
  constructor to `DocH`\n   * added `Table`, `TableCell` and `TableRow` data types\n
  \  * added `markupTable` to `DocMarkupH` data type\n\n## Changes in version 1.4.5\n\n
  * Move markup related data types to haddock-library\n"
basic-deps:
  bytestring: ! '>=0.9.2.1 && <0.11'
  base: (>1 && <1) && >=4.5 && <4.13
  text: ! '>=1.2.3.0 && <1.3'
  parsec: ! '>=3.1.13.0 && <3.2'
  containers: ! '>=0.4.2.1 && <0.7'
  transformers: ! '>=0.3.0 && <0.6'
all-versions:
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '1.1.1'
- '1.2.0'
- '1.2.1'
- '1.4.1'
- '1.4.2'
- '1.4.3'
- '1.4.4'
- '1.4.5'
- '1.5.0.1'
- '1.6.0'
- '1.6.1'
author: ''
latest: '1.6.1'
description-type: haddock
description: ! 'Haddock is a documentation-generation tool for Haskell

  libraries. These modules expose some functionality of it

  without pulling in the GHC dependency. Please note that the

  API is likely to change so specify upper bounds in your

  project. For interacting with Haddock

  itself, see the [haddock package](https://hackage.haskell.org/package/haddock).'
license-name: BSD3
