homepage: https://github.com/alanz/haskell-lsp
changelog-type: markdown
hash: 53b6ccffeb2528ba01ccb8f70847dd14b69fb1d8e81ae4e58019c533793b871a
test-bench-deps:
  base: -any
  yi-rope: -any
  hspec: -any
  text: -any
  filepath: -any
  sorted-list: ==0.2.1.*
  containers: -any
  lens: ! '>=4.15.2'
  network-uri: -any
  hashable: -any
  aeson: -any
  haskell-lsp: -any
  directory: -any
maintainer: alan.zimm@gmail.com
synopsis: Haskell library for the Microsoft Language Server Protocol
changelog: ! "# Revision history for haskell-lsp\n\n## 0.5.0.0  -- 2018-xx-xx\n\n*
  Update Command.arguments to match specification\n* Update ClientCapabilities to
  v3.10\n* Add MarkupContent\n* Add new CompletionKinds\n* Add new SymbolKinds\n*
  Add preset version capabilities\n\n## 0.4.0.0  -- 2018-07-10\n\n* CodeAction support
  as per v3.8 of the specification, by @Bubba\n* Update VersionedTextDocumentIdentifier
  to match specification, by @Bubba\n\n## 0.3.0.0\n\n* Handle TextDocumentSync fallbacks
  with new TDS type.\n\n## 0.2.3.0  -- 2018-99-99\n\n* GHC 8.4.3 support\n* Apply
  changes to the VFS in the order received in a message.\n  This fixes vscode undo
  behaviour. By @Bubba\n* Introduce additional error codes as per the LSP spec. By
  @Bubba\n* Add preliminary support for recording LSP traffic for later playback\n
  \ in test scenarios. By @Bubba\n\n## 0.2.2.0  -- 2018-05-04\n\n* Make Diagnostic
  relatedInformation optional, as per the LSP Spec. By @Bubba.\n\n## 0.2.1.0  -- 2018-05-02\n\n*
  Support GHC 8.4.2\n* Split into two packages\n* Language.Haskell.LSP.TH.DataTypesJSON
  becomes Language.Haskell.LSP.Types\n* Diagnostic now has _relatedInformation. Can
  default it to mempty. via @AlexeyRaga\n* Correct the name of the DidChangeWatchedFilesParams
  field, by @robrix\n* Make sure to escape URIs properly for Windows file paths\n
  \ Fixes #75. Also added a couple of pretty dumb tests!, by @johnsonw\n\n\n## 0.2.0.1
  \ -- 2017-12-27\n\n* Built with LTS 10.1 (stack)\n* Don't escape semicolons after
  drive letters by @nponeccop\n* Add Foldable and Traversable instance to List by
  @noughtmare\n\n## 0.2.0.0  -- 2017-11-23\n\n* Major changes as implementation continued.
  Now seems stable, used in haskell-ide-engine\n\n## 0.1.0.0  -- 2017-07-19\n\n* First
  version. Implements version 3 of the Microsoft Language\n  Server Protocol\n"
basic-deps:
  bytestring: -any
  stm: -any
  base: ! '>=4.9 && <4.12'
  time: -any
  yi-rope: -any
  unordered-containers: -any
  text: -any
  filepath: -any
  parsec: -any
  data-default: -any
  sorted-list: ==0.2.1.*
  containers: -any
  lens: ! '>=4.15.2'
  hslogger: -any
  network-uri: -any
  mtl: -any
  hashable: -any
  transformers: -any
  haskell-lsp-types: ! '>=0.5'
  aeson: ! '>=1.0.0.0'
  haskell-lsp: -any
  vector: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.1.0'
- '0.2.2.0'
- '0.4.0.0'
- '0.5.0.0'
author: Alan Zimmerman
latest: '0.5.0.0'
description-type: markdown
description: ! "[![CircleCI](https://img.shields.io/circleci/project/github/alanz/haskell-lsp.svg)](https://circleci.com/gh/alanz/haskell-lsp)\n[![Hackage](https://img.shields.io/hackage/v/haskell-lsp.svg)](https://hackage.haskell.org/package/haskell-lsp)\n\n#
  haskell-lsp\nHaskell library for the Microsoft Language Server Protocol\n\nWarning:
  this library and its associated ecosystem is under development at the\nmoment. So
  do not have high expectations, it is not ready for casual use.\n\n## Hacking\n\nTo
  see this library in use you need to install the [haskell-ide-engine](https://github.com/alanz/haskell-ide-engine/)\n\n
  \   git clone https://github.com/haskell/haskell-ide-engine --recursive\n    cd
  haskell-ide-engine\n    stack install\n\nThis will put the `hie` executable in your
  path.\n\nThen, run the plugin in vscode:\n\n    git clone https://github.com/alanz/vscode-hie-server\n
  \   cd vscode-hie-server\n    code .\n\nIn vscode, press F5 to run the extension
  in development mode.\n\nYou can see a log from `hie` by doing\n\n    tail -F /tmp/hie-vscode.log\n\nThere
  are also facilities on the code to send back language-server-protocol log\nand show
  events.\n\nIt can also be used with emacs, see https://github.com/emacs-lsp/lsp-haskell\n\n##
  Using the example server\n\n    stack install\n\nwill generate a `lsp-hello` executable.\n\nChanging
  the server to be called in the [`vscode-hie-server`](https://github.com/alanz/vscode-hie-server/blob/master/hie-vscode.sh#L21)
  plugin from `hie` to\n`lsp-hello` will run the example server instead of hie.\n\nLikewise,
  changing the executable in `lsp-haskell` for emacs.\n\n## Useful links\n\n- https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md\n\n##
  Other resource\n\nSee #haskell-ide-engine on IRC freenode\n\n"
license-name: MIT
