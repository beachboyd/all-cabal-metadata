homepage: ''
changelog-type: markdown
hash: 3e15563d45b6686f4138a913c666504902eec4aaa4cb12d0b71ad8331de4545d
test-bench-deps:
  haverer: -any
  base: ! '>=4.8 && <4.9'
  text: ! '>=1.2 && <1.3'
  basic-prelude: ! '>=0.4.1 && <0.5'
  random-shuffle: -any
  containers: -any
  tasty-quickcheck: -any
  mtl: ! '>=2.2 && <2.3'
  tasty-hunit: -any
  tasty: ! '>=0.7'
  errors: ! '>=1.4.7 && <1.5'
maintainer: jml@mumak.net
synopsis: Implementation of the rules of Love Letter
changelog: ! "# 0.3.0.0 - 2015-06-08\n\n* `PlayerSet` moved to new module, `Haverer.PlayerSet`\n*
  `PlayerSet` now implements `Foldable` and `Traversable`\n* New `rotate` and `randomize`
  methods for `PlayerSet`\n\n# 0.2.0.0 - 2015-06-08\n\n* `Deck` uses associated types
  for whether or not it is complete\n* New `FullType` alias for `Deck 'Complete`\n*
  Burn card is the *first* card from the deck, rather than the first card\n  after
  players have been dealt.\n* Burn card is now available for finished rounds (`Haverer.Round.getBurnCard`)\n*
  A list of survivors of each round can be obtained, once the round is over\n  (`Haverer.Round.survivors`)\n\n#
  0.1.0.0 - 2015-06-07\n\nInitial release.\n"
basic-deps:
  haverer: -any
  MonadRandom: -any
  base: ==4.8.*
  text: ==1.2.*
  basic-prelude: ! '>=0.4.1 && <0.5'
  random-shuffle: -any
  containers: -any
  lens: ! '>=4.7'
  tasty-quickcheck: -any
  mtl: ! '>=2.2 && <2.3'
  tasty: ! '>=0.7'
  errors: ! '>=1.4.7 && <1.5'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
author: Jonathan M. Lange <jml@mumak.net>
latest: 0.3.0.0
description-type: markdown
description: ! '# Haverer


  Haverer is a simple implementation of the excellent card game,

  [Love Letter](http://boardgamegeek.com/boardgame/129622/love-letter).


  It follows the original Japanese rules, rather than the newer American ones.


  ## Running


  At the moment, you''ll need to compile from source, which means you''ll need to

  get set up with `cabal`. The easiest way to do this is to install the

  [Haskell Platform](https://www.haskell.org/platform/).


  Once you''ve done that, run the following commands:


  ```

  $ git clone https://github.com/jml/haverer.git

  $ cd haverer

  $ cabal sandbox init

  $ cabal configure

  $ cabal install --dependencies-only

  $ cabal run

  ```


  That last command, `cabal run`, will run a command-line version of the game.


  ## License


  This code is copyright Jonathan M. Lange, 2014-2015, and is made available

  under the Apache License, version 2.0. See LICENSE for details.


  ## Roadmap


  0. Procrastinate endlessly learning new Haskell tricks

  1. Wrap this whole thing in an API server

  2. Make that server available to the public

  3. Put a nice-ish web frontend in front


  ## Bugs


  Please file issues on the

  [Github issue tracker](https://github.com/jml/haverer/issues)


  ## Patches


  Are most welcome.


  ## History


  The original implementation of this game is called

  [loveletter](https://github.com/jml/loveletter) and is written in

  [Rust](http://www.rust-lang.org/).


  ## Thanks


  Thanks to the following people, who have helped with advice, kindness, or by patiently

  smiling and nodding while I''ve rambled on about this project:


  * metagnome

  * RAOF

  * @mithrandi

  * pjdelport

  * tomprince

  * radix

  * teh

  * simpson

  * joliette


  Any infelicities are my own.


  If you are one of these people and would like to be referred to in another way

  (perhaps you''d like me to link to your Github page?), please contact me. You

  know how.


'
license-name: Apache-2.0
