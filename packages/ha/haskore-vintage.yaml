homepage: http://haskell.org/haskore/
changelog-type: ''
hash: 95d6129672001cd3ac440d971deaff212ec70e01291dbb70764584ad6e172863
test-bench-deps: {}
maintainer: diatchki@galois.com
synopsis: The February 2000 version of Haskore.
changelog: ''
basic-deps:
  base: <5
all-versions:
- '0.1'
- '0.2'
- '0.3'
author: Paul Hudak
latest: '0.3'
description-type: text
description: ! "NOTE: This is a Cabalized version of what is described bellow.\nThe
  changes from the version bellow are as follows:\n  1. It lacks the CSound support,\n
  \ 2. The library modules are in the Haskore.* part of the name space,\n  3. The
  examples were sperated from the core library source.\n\n- Iavor (iavor.diatchki@gmail.com)\n\nOriginal
  notes for February 2000 release:\n\n\n \t\t\t Haskore Music System\n\t\t\t --------------------\n\nThis
  is the February 2000 release of Haskore, available from:\n\n  http://haskell.org/haskore\n\nThis
  version improves on the previous release through limited support\nfor Csound (thanks
  to Matt Zamec), the very popular computer music\npackage written as a pre-procesor
  to C.  This support comes in two\nforms:\n\n-- There is a translator from Haskore
  to Csound score files, thus\n   providing another platform besides Midi on which
  to experience\n   your compositions.\n\n-- You can design new instruments, in the
  style of Csound's orchestra\n   files, using a special data type in Haskore.  A
  translator then\n   converts this data type into a Csound orchestra file.  Currently\n
  \  support is provided for the basic synthesis elements --\n   oscillators, delay
  lines, basic filters, and basic effects --\n   but it is easy to add more of the
  (hundreds of) Csound primitives\n   if one desires.\n\nFor more details, see Section
  12 of the Tutorial.\n\nHaskore can also now be used under both Hugs and GHC (thanks
  to Stefan\nRatschan).  The files in the directory \"ghc_add\" are additions which\nare
  just needed when working with GHC.  In this case, they should be\nmoved into the
  source directory (\"Src\"), after which you just call\n\"make\" in the source directory
  which will build the file haskore.a and\na set of .hi files.  These .hi files need
  to be in the interface file\npath when compiling applications of Haskore (see the
  -i GHC option).\n\nNote that the file ghc_add/IOExtensions.hs is a partial replacement
  of\na library file of the same name under Hugs.  It does not work yet on\nWindows/GHC
  (where one has to distinguish between binary and text IO).\n\nThe best way to use
  the system with Hugs is to drop the entire Haskore\ndirectory into Hugs/lib (replacing
  the one that's there).  All of the\nfiles except this README file are in the directory
  Src.\n\nImportant files in the distribution:\n\n1) \"Haskore.lhs\" will load the
  entire basic Haskore system.  If your\n   Hugs has the proper paths set up, once
  you drop this directory into\n   Hugs/lib, you should be able to just say \"import
  Haskore\" and\n   everything should work correctly.\n2) Loading \"HaskoreExamples.lhs\"
  loads the above plus several other\n   modules containing useful demonstrations
  of \"Haskore in Action\".\n3) \"tutorial.tex\" is the root of the Haskore Tutorial,
  a literate\n   script that imports most other files in the directory.  \n   \"turorial.ps\"
  is the postscript version of this.\n\nThis release builds upon the November 1998
  version, which improved\nover previous releases in several ways:\n\n  1) You can
  now read MIDI files and convert them into Music values.\n  2) There is good support
  for percussion, based on the General Midi\n     percussion standard.\n  3) There
  are a number of new higher-level music constructions, the\n     most notable being
  functions for trills, and a parallel\n     composition operator that truncates the
  result to the shortest of\n     the two inputs.\n  4) A change in the underlying
  type for Durations, from Float to\n     Ratio Integer.  This is the only incompatible
  change.\n  5) Lots of code improvements.\n\nComments, questions, suggestions, etc.
  can be sent to me at the\naddress below.\n\n---\nProfessor Paul Hudak                  \nDepartment
  of Computer Science         Office: (203) 432-4715\nYale University                        FAX:
  \   (203) 432-0593\nP.O. Box 208285                        email:  paul.hudak@yale.edu\nNew
  Haven, CT 06520-8285\nWWW: http://www.cs.yale.edu/users/hudak-paul.html\n"
license-name: BSD-3-Clause
