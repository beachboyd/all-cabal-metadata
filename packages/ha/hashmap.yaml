homepage: https://github.com/foxik/hashmap
changelog-type: text
hash: 831096cd644d1b87f16c1933d19cdf938fe8f3911af7ed68b3e8c0bde4baeba4
test-bench-deps: {}
maintainer: Ryan Scott <ryan.gl.scott@gmail.com>
synopsis: Persistent containers Map and Set based on hashing.
changelog: ! '= Version 1.3.3, 2018-01-02 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Add Semigroup instances for Map and Set


  = Version 1.3.2, 2016-11-30 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Replace internal use of deprecated containers functions


  = Version 1.3.1.1, 2016-06-09 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Ensure hashmap.h is distributed with the tarball


  = Version 1.3.1, 2016-06-09 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * GHC 8 compatibility


  = Version 1.3.0.1, 2012-12-14 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Relax dependencies -- allow older versions of containers.

  A new flag is introduced, because there are dependencies

  between containers and deepseq versions: it is not possible

  to compile with deepseq >= 1.2 and containers < 0.4.2.


  = Version 1.3.0.0, 2012-12-11 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Add NFData instances.


  = Version 1.2.0.1, 2011-09-21 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Add missing StandaloneDeriving and DeriveDataTypeable

  GHC extensions to enable Typeable deriving. Also remove

  PatternGuards extension, which was needed only once.



  = Version 1.2.0.0, 2011-05-08 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Rename HashMap and HashSet to Map and Set.

  That allows to use this package as a drop-in

  replacement for Data.Map and Data.Set packages.

  HashMap and HashSet types are kept as deprecated

  type synonyms.



  = Version 1.1.0.1, 2011-04-19 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Convert the repository to Git.



  = Version 1.1.0, 2010-08-15 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Separating Hashable class to its own package

  and depending on it.



  = Version 1.0.0.3, 2010-08-07 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Improving the performance of HashSet and HashMap

  by using (Some a) datatype. This speeds up the

  case where only one value is stored for a given

  hash. The performance gain is ~10% for delete,

  ~15% for insert, 20-50% for union.



  = Version 1.0.0.2, 2010-06-01 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Improving performance of ByteString hash

  by using inlinePerformIO.



  = Version 1.0.0.1, 2010-05-30 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Doc fixes



  = Version 1.0.0, 2010-05-30 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Adding module HashSet



  = Version 0.9.0, 2010-05-29 =

  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * Initial versions of HashMap, Hashable

'
basic-deps:
  base: ! '>=4.0 && <5'
  containers: ! '>=0.4.2'
  hashable: ! '>=1.0'
  deepseq: ! '>=1.2'
all-versions:
- 0.9.0
- 1.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.0.3
- 1.1.0
- 1.1.0.1
- 1.2.0.0
- 1.2.0.1
- 1.3.0.0
- 1.3.0.1
- 1.3.1
- 1.3.1.1
- 1.3.2
- 1.3.3
author: Milan Straka
latest: 1.3.3
description-type: markdown
description: ! "# `hashmap`\n[![Hackage](https://img.shields.io/hackage/v/hashmap.svg)][Hackage:
  hashmap]\n[![Hackage Dependencies](https://img.shields.io/hackage-deps/v/hashmap.svg)](http://packdeps.haskellers.com/reverse/hashmap)\n[![Haskell
  Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]\n[![BSD3
  License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal:
  BSD3]\n[![Build](https://img.shields.io/travis/foxik/hashmap.svg)](https://travis-ci.org/foxik/hashmap)\n\n[Hackage:
  hashmap]:\n  http://hackage.haskell.org/package/hashmap\n  \"hashmap package on
  Hackage\"\n[Haskell.org]:\n  http://www.haskell.org\n  \"The Haskell Programming
  Language\"\n[tl;dr Legal: BSD3]:\n  https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29\n
  \ \"BSD 3-Clause License (Revised)\"\n\n:warning: Deprecated in favor of [`unordered-containers`](https://github.com/tibbe/unordered-containers)\n\nAn
  implementation of persistent `Map` and `Set` containers based on hashing. The implementation
  is build on top of `Data.IntMap.IntMap` and `Data.IntSet.IntSet`, with very similar
  API. It uses `Hashable` class from the `hashable` package for hashing.\n\nThis package
  can be used as a drop-in replacement for `Data.Map` and `Data.Set` modules.\n\nThe
  `Map key value` is an `Data.IntMap.IntMap` indexed by the hash value, containing
  either one (`key`, `value`) or a `Data.Map.Map key value` for all keys with the
  same hash value.\n\nThe `Set elem` is an `Data.IntMap.IntMap` indexed by the hash
  value, containing either one `elem` or `Data.Set.Set elem` for all elements with
  the same hash value.\n"
license-name: BSD-3-Clause
