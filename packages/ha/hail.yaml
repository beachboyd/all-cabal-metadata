homepage: https://github.com/TaktInc/hail
changelog-type: markdown
hash: 792a9c12cb36490c48c6cfa82c5a31da9884ec2fcc7a15d5b1510a3c70006b00
test-bench-deps: {}
maintainer: shea.levy@takt.com
synopsis: A service for pull-based continuous deployment based on hydra.
changelog: ! '# Revision history for hail


  ## 0.2.0.0  -- 2017-08-23


  * Exit when hydra URI is invalid (Philipp Hausmann)


  ## 0.1.0.2  -- 2017-05-16


  * Fix bug in --oneshot that made it actually --noshot


  ## 0.1.0.1  -- 2017-04-08


  * Add README to tarball.


  ## 0.1.0.0  -- 2017-04-08


  * Initial release

'
basic-deps:
  http-client: ! '>=0.5.6 && <0.6'
  bytestring: ! '>=0.10.8 && <0.11'
  lens-aeson: ! '>=1.0.0 && <1.1'
  base: ! '>=4.9 && <4.10'
  text: ! '>=1.2.2 && <1.3'
  filepath: ! '>=1.4.1 && <1.5'
  process: ! '>=1.4.3 && <1.5'
  parsec: ! '>=3.1.11 && <3.2'
  wreq: ! '>=0.5 && <0.6'
  lens: ! '>=4.15.1 && <4.16'
  network-uri: ! '>=2.6.1 && <2.7'
  optparse-applicative: ! '>=0.13.1 && <0.14'
  netrc: ! '>=0.2.0.0 && <0.3'
  directory: ! '>=1.3.0 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.2.0.0
author: Shea Levy
latest: 0.2.0.0
description-type: markdown
description: ! "hail\n==========\n\nA service for pull-based continuous deployment
  based on hydra\n\nUsage\n------\n\n`hail --profile PROFILE --job-uri HYDRA_JOB_URI`\n\nOptional
  flags:\n  * `--netrc-file NETRC_FILE` The path to a [netrc](https://linux.die.net/man/5/netrc)
  file specifying credentials for the hydra HTTP access.\n    Defaults to `/etc/netrc`
  if it exists.\n  * `--poll-period PERIOD` The period with which to poll the job,
  in minutes (default: 5)\n  * `--oneshot` Just update once, rather than in a loop.\n\n`hail`
  assumes that the `nix` available in its `PATH` is set up to pull from its hydra's
  binary cache.\n\nOperation\n----------\n\n`hail` will regularly poll the latest
  successful build of the provided `HYDRA_JOB_URI`. When it changes, it will update
  `/nix/var/nix/profiles/PROFILE` to point to the new build and run `/nix/var/nix/profiles/PROFILE/bin/activate`\n\nIf
  there is already a path at `/nix/var/nix/profiles/PROFILE` when `hail` starts up,
  it will run the `activate` program immediately.\n\nStep-by-step\n-------------\n\n1.
  Create a hydra jobset with a job that creates the profile for the service in question.
  The profile should have a program at `bin/activate` that:\n     * Sets up everything
  needed for the service to run (e.g. adding systemd/init.d services, initializing
  dbs if needed, etc)\n     * Is idempotent\n     * Can detect if there is a previous
  version of the service running and switch as atomically as possible\n2. Set up your
  nix config to pull from your hydra's binary cache.\n3. Run `hail` on all machines
  that should run the latest version of that service (see [Bootstrapping](#bootstrapping))\n4.
  Enjoy\n\nBootstrapping\n--------------\n\nIf there are multiple services each managed
  independently with `hail`, you probably want to have those `hail` instances themselves
  managed by a manager `hail` instance. See [hail-systemd-bootstrap.nix](./hail-systemd-bootstrap.nix)
  for a way to achieve this on systemd-based systems.\n\nFuture work\n------------\n\n*
  Error reporting in a monitorable way\n* Handle the case where we don't want to update
  until all of a jobset succeeds\n* Native haskell client to talk to the nix daemon\n*
  Proper handling of manually-initiated rollbacks etc.\n* Libraries/templates for
  easily deploying new services\n* A good blue-greening story\n* Handle service removal\n*
  Incorporate with distro-agnostic service runner\n"
license-name: Apache-2.0
