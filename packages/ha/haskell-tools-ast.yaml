homepage: https://github.com/nboldi/haskell-tools
changelog-type: ''
hash: b1b761c02423ef83b538ca4fab7273ce2ee46221da3192b5cca5461e9e6ce812
test-bench-deps: {}
maintainer: nboldi@elte.hu
synopsis: Haskell AST for efficient tooling
changelog: ''
basic-deps:
  ghc: ! '>=8.4 && <8.7'
  base: ! '>=4.11 && <4.13'
  references: ! '>=0.3 && <0.4'
  classyplate: ! '>=0.3 && <0.4'
  uniplate: ! '>=1.6 && <1.7'
  mtl: ! '>=2.2 && <2.3'
  pretty: ! '>=1.1 && <1.2'
  template-haskell: ! '>=2.13 && <2.15'
all-versions:
- 0.1.2.0
- 0.1.2.1
- 0.1.3.0
- 0.2.0.0
- 0.3.0.0
- 0.3.0.1
- 0.4.0.0
- 0.4.1.0
- 0.4.1.1
- 0.4.1.2
- 0.4.1.3
- 0.5.0.0
- 0.6.0.0
- 0.7.0.0
- 0.8.0.0
- 0.8.1.0
- 0.9.0.0
- 1.0.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.0.3
- 1.0.0.4
- 1.0.1.1
- 1.1.0.0
- 1.1.0.1
- 1.1.0.2
- 1.1.1.0
author: Boldizsar Nemeth
latest: 1.1.1.0
description-type: haddock
description: A representation of a Haskell Syntax tree that contain source-related
  and semantic annotations. These annotations help developer tools to work with the
  defined program. The source information enables refactoring and program transformation
  tools to change the source code without losing the original format (layout, comments)
  of the source. Semantic information helps analyzing the program. The representation
  is different from the GHC's syntax tree. It contains information from all representations
  in GHC (different version of syntax trees, lexical and module-level information).
  The module is split up to put the representation of different language elements
  into different modules. Additionally, it contains the representation of semantic
  and source annotations, helper functions and generated instances for the representation
  of language elements. Because langauge elements may refer each other (there can
  be a pattern inside an expression in case of a pattern match and an expression inside
  a pattern if view patterns are enabled), we use hs-boot files to break up dependency
  cycles.
license-name: BSD-3-Clause
