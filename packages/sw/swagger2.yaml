homepage: https://github.com/GetShopTV/swagger2
changelog-type: markdown
hash: 05f769320fbbe963eff9ed4016eabda588c664a4db23c4bb27d08b053f211a36
test-bench-deps:
  insert-ordered-containers: -any
  bytestring: -any
  base: -any
  time: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  doctest: -any
  HUnit: -any
  containers: -any
  lens: -any
  base-compat: -any
  mtl: -any
  hashable: -any
  swagger2: -any
  aeson-qq: -any
  QuickCheck: ! '>=2.8.2'
  Glob: -any
  aeson: ! '>=0.10.0.0'
  vector: -any
maintainer: nickolay@getshoptv.com
synopsis: Swagger 2.0 data model
changelog: ! "2.2\n---\n\n* Treat unknown properties as validation errors in `validateToJSON`;\n*
  Add `validateJSON` and `validateJSONWithPatternChecker` to validate JSON `Value`
  against `Schema` without classes;\n* Add more `Schema` helpers:\n    * `genericNameSchema`
  — to give a custom schema `Generic`-based name;\n    * `genericDeclareNamedSchemaNewtype`
  — to derive `NamedSchema` for `newtype`s;\n    * `declareSchemaBoundedEnumKeyMapping`
  — to derive more specific `Schema` for maps with `Bounded` `Enum` keys;\n* Add a
  few tests with invalid `Schema`.\n\n2.1.6\n-----\n\n* Add `ToParamSchema` and `ToSchema`
  instances for `Fixed` (see [#121](https://github.com/GetShopTV/swagger2/pull/121))
  and `Natural` (see [#123](https://github.com/GetShopTV/swagger2/pull/123));\n* Fix
  instance for `NominalDiffTime` (see [#121](https://github.com/GetShopTV/swagger2/pull/121));\n*
  Fix build for `aeson-1.2.2.0` (see [#125](https://github.com/GetShopTV/swagger2/pull/125)).\n\n2.1.5\n-----\n\n*
  Type error by default when deriving Generic-based instances for mixed sum types
  (see [#118](https://github.com/GetShopTV/swagger2/pull/118));\n* Adjust `allOf`
  to accept referenced schemas (see [#119](https://github.com/GetShopTV/swagger2/issues/119));\n*
  Add instances for `Identity` (see [#116](https://github.com/GetShopTV/swagger2/pull/116));\n*
  Add Gitter chat badge (see [#114](https://github.com/GetShopTV/swagger2/pull/114)).\n\n2.1.4.1\n-------\n\n*
  GHC-8.2 support (see [#95](https://github.com/GetShopTV/swagger2/issues/95), [#106](https://github.com/GetShopTV/swagger2/pull/106)
  and [#108](https://github.com/GetShopTV/swagger2/pull/108));\n* Documentation corrections
  (see [#105](https://github.com/GetShopTV/swagger2/pull/105));\n* Allow `generics-sop-0.3`
  (see [#102](https://github.com/GetShopTV/swagger2/pull/102));\n* Fix `ToSchema`
  example in docs (see [#104](https://github.com/GetShopTV/swagger2/pull/104)).\n\n2.1.4\n-----\n\n*
  Add `liftDeclare` (see [#100](https://github.com/GetShopTV/swagger2/pull/100));\n*
  Add `MonadDeclare` instances for all monad transformers (see [#100](https://github.com/GetShopTV/swagger2/pull/100)).\n\n2.1.3\n-----\n\n*
  Add [`UUID`](http://hackage.haskell.org/package/uuid-types/docs/Data-UUID-Types.html#t:UUID)
  instances (see [#81](https://github.com/GetShopTV/swagger2/pull/81)).\n* Add [`TypeError`](https://hackage.haskell.org/package/base-4.9.0.0/docs/GHC-TypeLits.html#g:4)
  `ToSchema` and `ToParamSchema ByteString` instances (see [#78](https://github.com/GetShopTV/swagger2/pull/78))\n*
  Improve documentation for generic sum type instance derivation (see [#75](https://github.com/GetShopTV/swagger2/pull/75))\n*
  Compile warning free (see [#82](https://github.com/GetShopTV/swagger2/pull/82))\n\n2.1.2.1\n-------\n\n*
  Bug fix previous release\n\n2.1.2\n---\n\n* Minor changes:\n  * Support `aeson-1.0.0.0`
  (see [#70](https://github.com/GetShopTV/swagger2/pull/70)).\n\n2.1.1\n---\n\n* Minor
  changes:\n  * Proper `Schema` examples for `Char`, `Day`, `LocalTime`, `ZonedTime`
  and `UTCTime`.\n\n2.1\n---\n\n* Major changes:\n  * Use `InsOrdHashMap` to preserve
  insertion order for endpoints and definitions (see [#56](https://github.com/GetShopTV/swagger2/pull/56));\n
  \ * Add support for GHC 8.0 (see [#65](https://github.com/GetShopTV/swagger2/pull/65)).\n\n2.0.2\n---\n\n*
  Fixes:\n  * Fix `additionalProperties` to allow references;\n  * Fix `ToSchema`
  instances for `Map` and `HashMap` (prevent infinite recursion for recursive values).\n\n2.0.1\n---\n\n*
  Fixes:\n    * Re-export `Pattern` synonym from `Data.Swagger`;\n    * Documentation
  fixes.\n\n2.0\n---\n\n* Major changes:\n    * GHC 7.8 support (see [#49](https://github.com/GetShopTV/swagger2/pull/49));\n
  \   * Switch to classy field lenses (see [#41](https://github.com/GetShopTV/swagger2/pull/41));\n
  \   * Add `Data.Swagger.Schema.Validation` (see [#18](https://github.com/GetShopTV/swagger2/pull/18));\n
  \   * Add `Data.Swagger.Operation` with helpers (see [#50](https://github.com/GetShopTV/swagger2/pull/50));\n
  \   * Add `IsString` instances for some types (see [#47](https://github.com/GetShopTV/swagger2/pull/47));\n
  \   * Add helpers to sketch `Schema` from JSON (see [#48](https://github.com/GetShopTV/swagger2/pull/48)).\n\n*
  Minor changes:\n    * Make `NamedSchema` a `data` rather than `type` (see [#42](https://github.com/GetShopTV/swagger2/pull/42));\n
  \   * Change `Definitions` to `Definitions Schema`;\n    * Add schema templates
  for `\"binary\"`, `\"byte\"` and `\"password\"` formats (see [63ed597](https://github.com/GetShopTV/swagger2/commit/63ed59736dc4f942f0e2a7d668d7cee513fa9eaf));\n
  \   * Add `Monoid` instance for `Contact`;\n    * Change `tags` to be `Set` rather
  than list.\n\n* Fixes:\n    * Fix schema for `()` and nullary constructors (see
  [ab65c4a](https://github.com/GetShopTV/swagger2/commit/ab65c4a48253c34f8a88221a53dc97bf5e6e8d29));\n
  \   * Fix `Operation` `FromJSON` instance to allow missing `tags` and `parameters`
  properties.\n\n1.2.1\n---\n\n* Minor changes:\n    * Change `_SwaggerItemsPrimitive`
  type from a `Prism'` to a more restrictive `Review`-like `Optic'`.\n\n* Fixes:\n
  \   * Fix build for GHC 8.0-rc1.\n\n1.2\n---\n* Minor changes (see [#36](https://github.com/GetShopTV/swagger2/pull/36)):\n
  \ * Change default `ToSchema` instance for unit data types (i.e. types with one
  nullable constructor like `data Unit = Unit`):\n    now these types are treated
  like sum types with only one alternative;\n  * Add generic `ToParamSchema` instance
  for unit data types;\n  * Add `items: []` to schema for `()` (making it a valid
  schema).\n\n* Fixes:\n    * Do not omit `items: []` from `Schema` JSON;\n    * Do
  not generate unused definitions for nested `newtype`s (see [#38](https://github.com/GetShopTV/swagger2/pull/38)).\n\n1.1.1\n---\n*
  Fixes:\n    * `CollectionFormat Param` -> `CollectionFormat ParamOtherSchema`;\n
  \     this change was necessary after putting `CollectionFormat` to `SwaggerItems`.\n\n1.1\n---\n*
  Major changes:\n    * Put `CollectionFormat` in one place (see [`3cc860d`](https://github.com/GetShopTV/swagger2/commit/3cc860dd3f002ab984f4d0e4ce1d1799f985832e)).\n\n*
  Minor changes:\n    * Use Swagger formats for `Int32`, `Int64`, `Float`, `Double`,
  `Day` and `ZonedTime` (see [#32](https://github.com/GetShopTV/swagger2/pull/32));\n
  \   * Export `HeaderName`, `TagName`, `HttpStatusCode` type synonyms;\n    * Add
  `ToParamSchema` instances for `[a]`, `Set a` and `HashSet a`;\n    * Add `Monoid`
  instances for `Header` and `Example`.\n\n* Fixes:\n    * Use overwrite strategy
  for `HashMap` `SwaggerMonoid` instances by default.\n\n1.0\n---\n* Major changes:\n
  \   * Add `Data` and `Typeable` instances for `Data.Swagger` types;\n    * Merge
  `ParamType`/`ItemsType`/`SchemaType` into `SwaggerType` GADT;\n    * Merge collection
  format types into `CollectionFormat` GADT;\n    * Introduce `SwaggerItems` GADT,
  replacing `Items` and `SchemaItems` in `ParamSchema` (see [#24](https://github.com/GetShopTV/swagger2/pull/24));\n
  \   * Move type, format and items fields to `ParamSchema` (former `SchemaComon`);\n
  \   * Prepend reference path automatically (see [commit 49d1fad](https://github.com/GetShopTV/swagger2/commit/49d1fadd2100644e70c442667180d0d73e107a5f))\n
  \     and thus remove `\"#/definitions/\"` from user code, leaving much clearer
  `Reference \"Name\"`;\n    * Change `Data.Swagger.Schema` (see [#19](https://github.com/GetShopTV/swagger2/pull/19)):\n
  \       * Change the only method of `ToSchema` to `declareNamedSchema` which should
  produce a `NamedSchema`\n          along with a list of schema definitions used
  to produce it;\n        * Add `declareSchema`, `declareSchemaRef`;\n        * Replace
  `genericTo*` helpers with `genericDeclare*` helpers;\n        * Add `paramSchemaTo[Named]Schema`
  helpers to facilitate code reuse for primitive schemas;\n        * Add helpers for
  inlining `Schema` references dynamically (see [#23](https://github.com/GetShopTV/swagger2/pull/23));\n
  \   * Add `ToParamSchema` class (see [#17](https://github.com/GetShopTV/swagger2/pull/17))
  with\n        * generic default implementation and\n        * instances for some
  base types compliant with `http-api-data` instances;\n    * Add `Data.Swagger.Declare`
  module with\n        * `DeclareT` monad transformer;\n        * `MonadDeclare` type
  class;\n        * various helpers;\n    * Rename parameter-related types:\n        *
  `Parameter` -> `Param`;\n        * `ParameterSchema` -> `ParamAnySchema`;\n        *
  `ParameterOtherSchema` -> `ParamOtherSchema`;\n        * `ParameterLocation` ->
  `ParamLocation`;\n        * `SchemaCommon` -> `ParamSchema`;\n        * `parameter*`
  fields renamed to `param*` fields;\n        * `schemaCommon*` fields renamed to
  `paramSchema*` fields;\n        * `HasSchemaCommon` -> `HasParamSchema`.\n\n* Minor
  changes:\n    * Replace TH-generated JSON instances with `Generic`-based (see [#25](https://github.com/GetShopTV/swagger2/pull/25));\n
  \   * Drop `template-haskell` dependency;\n    * Omit empty array/object properties
  from `toJSON` output ([#22](https://github.com/GetShopTV/swagger2/pull/22));\n    *
  Remove `minLength` property from schemas for `time` types;\n    * Move `SchemaOptions`
  to `Data.Swagger.SchemaOptions`;\n    * Remove `useReferences` from `SchemaOptions`
  (see [#23](https://github.com/GetShopTV/swagger2/pull/23));\n    * Place all internal
  submodules under `Data.Swagger.Internal`;\n    * Better documentation (see [#26](https://github.com/GetShopTV/swagger2/pull/26)).\n\n0.4.1\n---\n*
  Fixes:\n    * Use `PackageImports` for `Data.HashSet` to avoid test failure on stackage
  (see [#15](https://github.com/GetShopTV/swagger2/issues/15));\n    * Add an upper
  version bound for `aeson` due to `aeson-0.10.0.0` bug (see [bos/aeson#293](https://github.com/bos/aeson/issues/293));\n
  \   * Switch to Cabal-based multi GHC Travis config.\n\n0.4\n---\n* Remove `Swagger`/`swagger`
  prefixes;\n* Add `ToSchema` type class with default generic implementation;\n* Add
  configurable generic `ToSchema` helpers;\n* Add `doctest` test suite;\n* Fixes:\n
  \   * Fix `HasSchemaCommon` instance for `Schema`;\n    * Change `minimum`, `maximum`
  and `multipleOf` properties to be any number,\n      not necessarily an integer;\n
  \   * Fix all warnings.\n\n0.3\n---\n* Fixes:\n    * Fix `SwaggerMonoid Text` instance;\n
  \   * Wrap `Bool` in `Maybe` everywhere;\n    * These changes make all `Data.Swagger`
  `Monoid` instances obey monoid laws\n      (previously right identity law was broken
  by some instances).\n\n0.2\n---\n* Add `Data.Swagger.Lens`;\n* Support references;\n*
  Fixes:\n    * Fix `FromJSON SwaggerHost` instance;\n    * Add missing `Maybe`s for
  field types;\n    * Decode petstore `swagger.json` successfully.\n"
basic-deps:
  insert-ordered-containers: ! '>=0.1.0.0 && <0.3'
  bytestring: -any
  base: ! '>=4.7 && <4.11'
  time: -any
  unordered-containers: -any
  text: -any
  network: -any
  containers: -any
  lens: -any
  base-compat: ! '>=0.9.1 && <0.10'
  mtl: -any
  hashable: -any
  transformers: -any
  uuid-types: ! '>=1.0.2 && <1.1'
  scientific: -any
  generics-sop: ! '>=0.2 && <0.4'
  aeson: ! '>=1.0.0.0'
  template-haskell: -any
  http-media: ! '>=0.6.0'
  transformers-compat: ! '>=0.3'
  vector: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '1.0'
- '1.1'
- '1.1.1'
- '1.2'
- '1.2.1'
- '2.0'
- '2.0.1'
- '2.0.2'
- '2.1'
- '2.1.1'
- '2.1.2'
- '2.1.2.1'
- '2.1.3'
- '2.1.4'
- '2.1.4.1'
- '2.1.5'
- '2.1.6'
- '2.2'
author: Nickolay Kudasov
latest: '2.2'
description-type: markdown
description: ! '# swagger2


  [![Join the chat at https://gitter.im/haskell-swagger2/Lobby](https://badges.gitter.im/haskell-swagger2/Lobby.svg)](https://gitter.im/haskell-swagger2/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)


  [![Hackage](https://img.shields.io/hackage/v/swagger2.svg)](http://hackage.haskell.org/package/swagger2)

  [![Build Status](https://travis-ci.org/GetShopTV/swagger2.svg?branch=master)](https://travis-ci.org/GetShopTV/swagger2)

  [![Stackage LTS](http://stackage.org/package/swagger2/badge/lts)](http://stackage.org/lts/package/swagger2)

  [![Stackage Nightly](http://stackage.org/package/swagger2/badge/nightly)](http://stackage.org/nightly/package/swagger2)


  Swagger 2.0 data model.


  The original Swagger 2.0 specification is available at http://swagger.io/specification/.


  ## Usage


  This library is intended to be used for decoding and encoding Swagger 2.0 API specifications
  as well as manipulating them.


  Please refer to [haddock documentation](http://hackage.haskell.org/package/swagger2).


  Some examples can be found in [`examples/` directory](/examples).


  ## Trying out


  All generated swagger specifications can be interactively viewed on [Swagger Editor](http://editor.swagger.io/).


  Ready-to-use specification can be served as JSON and interactive API documentation

  can be displayed using [Swagger UI](https://github.com/swagger-api/swagger-ui).


  Many Swagger tools, including server and client code generation for many languages,
  can be found on

  [Swagger''s Tools and Integrations page](http://swagger.io/open-source-integrations/).


  ## Contributing


  We are happy to receive bug reports, fixes, documentation enhancements, and other
  improvements.


  Please report bugs via the [github issue tracker](https://github.com/GetShopTV/swagger2/issues).


  *GetShopTV Team*


'
license-name: BSD3
