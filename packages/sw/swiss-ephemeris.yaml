homepage: https://github.com/lfborjas/swiss-ephemeris#readme
changelog-type: markdown
hash: 79e9fd4ed80ce73059233f8406be4627e8164b388ceb637d955a46da087f725e
test-bench-deps:
  base: '>=4.7 && <4.14'
  hspec: '>=2.7 && <2.8'
  swiss-ephemeris: -any
  directory: '>=1.3 && <1.4'
maintainer: swiss-ephemeris@lfborjas.com
synopsis: Haskell bindings for the Swiss Ephemeris C library
changelog: "# Changelog for swiss-ephemeris\n\n## v0.1.0.0 (2020-08-12)\n\n* Bundles
  the C code for v2.09.01 of [Swiss\n  Ephemerides](https://www.astro.com/swisseph/swephinfo_e.htm)
  -- refer to that\n  page and related documentation for other possible additions
  to this package! \n* First release with basic bindings to calculate the coordinates
  of bodies\n  between the Sun and Chiron, plus cusps and major angles --\n`calculateCoordinates`
  and `calculateCusps`, respectively.\n* The functions `setEphemeridesPath` and `closeEphemerides`
  are provided to\n  initialize (important) and release (less important) resources
  related to\n  caching calculations and locating the data files for ephemerides.\n"
basic-deps:
  base: '>=4.7 && <4.14'
all-versions:
- 0.1.0.0
author: Luis Borjas Reyes
latest: 0.1.0.0
description-type: markdown
description: "# swiss-ephemeris\n\n![build](https://github.com/lfborjas/swiss-ephemeris/workflows/Haskell%20CI/badge.svg)\n\n\nHaskell
  bindings for the [Swiss Ephemeris](https://www.astro.com/swisseph/swephinfo_e.htm)
  library.\n\nSee the tests in the `spec` folder for example usage, but here's a simple
  \"main\" that demonstrates the current abilities, inspired by the [sample program
  in the official library](https://www.astro.com/swisseph/swephprg.htm#_Toc46406771):\n\n```haskell\nimport
  SwissEphemeris\n\nmain :: IO\nmain = do \n  -- location of your ephemeris directory,
  must be absolute. We bundle a sample one in `swedist`.\n  setEphemeridesPath \"/Users/luis/code/swiss-ephemeris/swedist/sweph_18\"\n\n
  \ let time = julianDay 1989 1 6 0.0\n  let place = defaultCoords{lat = 14.0839053,
  lng = -87.2750137}\n  -- locate all bodies between the Sun and Chiron (further asteroids
  currently not supported, but they're an enum entry away)\n  let planetPositions
  = map (\\p -> (p, (calculateCoordinates time p))) [Sun .. Chiron]\n  -- use the
  Placidus house system, which is the most traditional.\n  let cusps  = calculateCusps
  time place Placidus\n\n  forM_ planetPositions $ \\(planet, coord)->\n    putStrLn
  $ show planet <> \": \" <> show coord\n  putStrLn $ \"Cusps: \" <> show cusps\n```\n\nShould
  print the latitude and longitude (plus some velocities) for all planets, and the
  cusps and other major angles.\n\nTo see actual results, check out the tests. For
  some more advanced examples, see `swetest.c` and `swemini.c` in the `csrc` directory:
  they're the test/example \nprograms provided by the original authors.\n\n## Notes\n\nAll
  the code in the `csrc` folder comes directly from the [latest official tarball,
  v2.09.01](https://www.astro.com/ftp/swisseph/). \n\nThe `swedist` folder includes
  the original documentation from the tarball in PDF (see the `doc`) folder, and a
  copy of ephemeris data files.\n\nFor other formats of the original documentation,
  see: https://www.astro.com/ftp/swisseph/doc/\n\nThe authors also host HTML versions
  of the manuals. Two are provided, a general reference and a programming reference.
  Both are very useful to get\nacquainted with the functionality and implementation
  details.\n\n* [General Reference](https://www.astro.com/swisseph/swisseph.htm)\n*
  [Programmer's Reference](https://www.astro.com/swisseph/swephprg.htm)\n\n### Ephemerides
  files\n\nAs noted in the [original documentation](https://www.astro.com/swisseph/swisseph.htm)
  you can omit the `setEphePath` call and calculations will use a built-in analytical\nephemeris
  which:\n\n> provides \"only\" a precision of 0.1 arc seconds for the planets and
  3\" for the Moon. No asteroids will be available, and no barycentric option can
  be used.\n\nFor convenience, we bundle a few files for the time range `1800 AD â€“
  2399 AD`. If you were born before that, or plan to code e.g. transits for after
  that (!) or \nyou'd prefer even more precision, you can [download more ephemerides
  files from the astro.com downloads page](https://www.astro.com/ftp/swisseph/ephe/)\n\nI
  chose the bundled files due to this comment in the official docs:\n\n> If the [JPL]
  file is too big, then you can download the files sepl_18.se1 and semo_18.se1 from
  here: http://www.astro.com/ftp/swisseph/ephe/\n\nFor a full explanation of the files
  available, see the [Description of the Ephemerides](https://www.astro.com/swisseph/swisseph.htm#_Toc46391649)
  section of the original manual, also of\ninterest is the [comparison between the
  Swiss Ephemeris and the raw NASA JPL\ndata](https://www.astro.com/swisseph/swisseph.htm#_Toc46391741).\n\n###
  CI Build\n\nYou'll notice that I build against Github's [`macos-latest`](https://docs.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#supported-runners-and-hardware-resources)
  VM. This mirrors my development machine -- I noticed that the tests suffer a precision
  degradation when run on ubuntu, e.g.:\n\n```haskell\n expected: Right (Coordinates
  {lng = 285.64724200024165, lat = -8.254238068673002e-5, distance = 0.983344884137739,
  lngSpeed = 1.0196526213625938, latSpeed = 1.4968387810319695e-5, distSpeed = 1.734078975098347e-5})\n
  \ but got: Right (Coordinates {lng = 285.6472420002416, lat = -8.254238068996486e-5,
  distance = 0.9833448841377388, lngSpeed = 1.0196526213625938, latSpeed = 1.496838781028185e-5,
  distSpeed = 1.7340789750982604e-5})\n```\n\nNot sure if it's due to the C compiler
  in the GH environment, or if it's something on the actual software; however, caveat
  emptor!\n\n## Contributing\n\nI've only made available the types and functions that
  are useful for my own, traditional, horoscope calculations.\nFeel free to add more!
  See the [astro.com documentation](https://www.astro.com/swisseph/swisseph.htm) for
  ideas.\n\n"
license-name: GPL-2.0-only
