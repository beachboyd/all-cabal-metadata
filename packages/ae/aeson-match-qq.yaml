homepage: ''
changelog-type: ''
hash: b7d5815f862eb35d73227b46da87c79fe93a8e7e87814b55b0831a2fc7a1b600
test-bench-deps:
  base: ! '>=4.7 && <5'
  unordered-containers: -any
  hspec: -any
  aeson-match-qq: -any
  aeson-qq: -any
  aeson: -any
maintainer: matvey.aksenov@gmail.com
synopsis: Matching Aeson values with a quasiquoter
changelog: ''
basic-deps:
  either: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  unordered-containers: -any
  text: -any
  attoparsec: -any
  scientific: -any
  haskell-src-meta: -any
  aeson: -any
  template-haskell: -any
  vector: -any
all-versions:
- 1.0.0
author: ''
latest: 1.0.0
description-type: markdown
description: "aeson-match-qq\n==============\n\n[![Build status](https://circleci.com/gh/supki/aeson-match-qq.svg?style=svg)](https://circleci.com/gh/supki/aeson-match-qq)\n\nDeclarative
  JSON matchers.\n\nMotivation\n----------\n\nWhen testing an HTTP service that spouts
  JSON documents, it's often inconvenient to write out the whole response as\nthe
  expected value.  Sometimes, you only care about a couple specific properties, or
  simply want to ensure that the\nresponse has certain structure.  This package provides
  a quasiquoter to define declarative matchers using a variation\nof the familiar
  syntax.\n\nFeatures\n--------\n\n### Basic JSON construction\n\nSince this package
  is heavily inspired by [aeson-qq][0], the parser tries to follow its behavior and
  has support for\noptional quotes for simple keys and the `#{exp}` syntax for Haskell
  expression interpolation. It currently does not support\nvariable keys though and
  there are no plans to add them.\n\n### Spread-like syntax for arrays and objects\n\nThis
  syntax allows you to match only the part of the structure you care about:\n\n`[match|
  [1, 2, 3, ...] |]` matches arrays starting with `[1, 2, 3]`  \n`[match| {foo: 1,
  bar: 2, ...} |]` matches objects that are supersets of `{foo: 1, bar: 2}`\n\n###
  Holes\n\nHoles are placeholders that match anything:\n\n`[match| _ |]` matches any
  JSON document  \n`[match| {foo: _} |]` matches any object that has the `foo` property.\n\nIf
  a hole is named, its value will be returned from `match`\n\n`[match| {foo: {bar:
  _n} |]` will return `{n: 4}` if matched with `{foo: {bar: 4}}`\n\n  [0]: https://hackage.haskell.org/package/aeson-qq\n"
license-name: BSD-2-Clause
