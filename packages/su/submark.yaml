homepage: https://github.com/dahlia/submark#readme
changelog-type: markdown
hash: 60938f317d34e4e16a0c4bfbf8d1e0d9464201aa965134161c46def585c63798
test-bench-deps:
  hlint: ! '>=2.0.9 && <3'
  base: ! '>=4.7 && <5'
  hspec: ! '>=2.4.4 && <3.0.0'
  text: ==1.*
  cmark: ! '>=0.5.6 && <0.6.0'
  submark: -any
  template-haskell: ! '>=2.5'
maintainer: hong.minhee@gmail.com
synopsis: Extract a part from CommonMark/Markdown docs
changelog: ! '`subtoml` changelog

  ===================


  Version 0.1.0

  --------------


  Initial release.  Released on September 24, 2017.

'
basic-deps:
  base: ! '>=4.7 && <5'
  text: ==1.*
  cmark: ! '>=0.5.6 && <0.6.0'
  submark: -any
  optparse-applicative: ! '>=0.13.2.0 && <0.15.0.0'
all-versions:
- 0.1.0
author: Hong Minhee
latest: 0.1.0
description-type: markdown
description: ! "`submark`: Extract a part from CommonMark/Markdown docs\n=======================================================\n\n[![CircleCI][circleci-badge]][circleci]\n\n`submark`
  is a CLI program to extract some particular section from\na givne CommonMark/Markdown
  document.  I use it for myself to extract\nthe latest version section from the CHANGELOG.md
  file, and then reuse the text\nfor the corresponding release note on GitHub releases,
  during automated release\nprocess which is run on CI.\n\n[circleci-badge]: https://circleci.com/gh/dahlia/submark.svg?style=shield\n[circleci]:
  https://circleci.com/gh/dahlia/submark\n\n\nUsage examples\n--------------\n\nThe
  following examples use [John Gruber's original Markdown introduction][1]:\n\n~~~~~~~~
  bash\n$ wget https://daringfireball.net/projects/markdown/index.text\n~~~~~~~~\n\nExtracting
  an H3 heading *Command-Line*:\n\n~~~~~~~~ bash\n$ submark --h3 \"Command-Line\"
  index.text\n### Command-Line\n\nUse the `--html4tags` command-line switch to produce
  HTML output from a\nUnix-style command line. E.g.:\n\n    % perl Markdown.pl --html4tags
  foo.text\n\nType `perldoc Markdown.pl`, or read the POD documentation within the\nMarkdown.pl
  source code for more information.\n~~~~~~~~\n\nNote that its textual style differ
  from the original text.\nSince ``submark`` internally builds an abstract syntax
  tree from the given input\ntext and then render again the result tree, it doesn't
  maintain trivial styles\n(e.g., whitespaces, ATX vs. Setext headings) but only the
  semantics.\n\nThere are options from `--h1` to `--h6`:\n\n~~~~~~~~ bash\n$ submark
  --h2 \"Download\" index.text\n## Download\n\n[Markdown 1.0.1](http://daringfireball.net/projects/downloads/Markdown_1.0.1.zip)\n(18
  KB) -- 17 Dec 2004\n~~~~~~~~\n\nThe leading heading can be omitted:\n\n~~~~~~~~
  bash\n$ submark --h2 \"Download\" --omit-heading index.text\n[Markdown 1.0.1](http://daringfireball.net/projects/downloads/Markdown_1.0.1.zip)\n(18
  KB) -- 17 Dec 2004\n~~~~~~~~\n\nBy Unix convention, `-` means pipe: \n\n~~~~~~~~
  bash\n$ submark --h2 \"Download\" - < index.text\n## Download\n\n[Markdown 1.0.1](http://daringfireball.net/projects/downloads/Markdown_1.0.1.zip)\n(18
  KB) -- 17 Dec 2004\n~~~~~~~~\n\nThere's `-o`/`--out-file` option as well:\n\n~~~~~~~~
  bash\n$ submark -o download.md --h2 \"Download\" index.text\n~~~~~~~~\n\n[1]: https://daringfireball.net/projects/markdown/index.text\n"
license-name: GPL-3.0-only
