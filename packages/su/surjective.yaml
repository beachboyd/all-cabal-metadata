homepage: https://github.com/gelisam/surjective
changelog-type: markdown
hash: 1b57481f6e064d1d6ba7a20e326e6d4d3621667daa52995c3e0c9a688e47b84d
test-bench-deps: {}
maintainer: gelisam+github@gmail.com
synopsis: An output coverage checker
changelog: ! '## New in 0.1.0.0


  * Initial release of the `surjective` template-haskell function

'
basic-deps:
  base: ! '>=4.8.1.0 && <4.11'
  lens: ! '>=4.12.3 && <4.17'
  mtl: ! '>=2.2.1 && <2.3'
  template-haskell: ! '>=2.10.0.0 && <2.13'
all-versions:
- '0.1.0.0'
author: Samuel GÃ©lineau
latest: '0.1.0.0'
description-type: markdown
description: ! "# Surjective\n\n[![Build Status](https://travis-ci.org/gelisam/surjective.svg?branch=master)](https://travis-ci.org/gelisam/surjective)\n\nHere
  is a parsing function which is missing a case:\n\n    parseBool :: String -> Maybe
  Bool\n    parseBool = \\case\n      \"true\" -> Just True\n      _      -> Nothing\n\nAnd
  here is how to annotate the function using `surjective` so the compiler\nwarns us
  about that missing case:\n\n    -- Warning: Pattern match(es) are non-exhaustive\n
  \   -- In a case alternative: Patterns not matched: (Just False)\n    parseBool
  :: String -> Maybe Bool\n    parseBool = $$(surjective\n      [||\\covers -> \\case\n
  \       \"true\" -> covers $ \\(Just True) -> Just True\n        _      -> covers
  $ \\Nothing     -> Nothing\n      ||])\n\nSince the check is entirely syntactic,
  `surjective` can be used to check other\nkinds of coverage conditions, not just
  surjectivity. For example, here we\nattempt to list all the values of type `Maybe
  Bool`, but we are missing a case:\n\n    listMaybeBools :: [Maybe Bool]\n    listMaybeBools
  = [Just True, Nothing]\n\nHere is how to annotate the list using `surjective` so
  the compiler warns us\nabout that missing case:\n\n    -- Warning: Pattern match(es)
  are non-exhaustive\n    -- In a case alternative: Patterns not matched: (Just False)\n
  \   listMaybeBools :: [Maybe Bool]\n    listMaybeBools = $$(surjective\n      [||\\covers
  -> [ covers $ \\(Just True) -> Just True\n                    , covers $ \\Nothing
  \    -> Nothing\n                    ]\n      ||])\n"
license-name: PublicDomain
