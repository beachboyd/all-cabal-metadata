homepage: ''
changelog-type: markdown
hash: 604d5ed992405919dc71e3d02d33a4f2e3df2abbc875fd16d69b064dfd4553dd
test-bench-deps: {}
maintainer: gabriel@system.is, ollie@ocharles.org.uk
synopsis: Both high- and low-level bindings to the SDL library (version 2.0.4+).
changelog: ! "Unreleased\r\n==========\r\n\r\n\r\n\r\n2.3.0\r\n=====\r\n\r\n* Windows
  builds now use `-D_SDL_main_h`. See https://github.com/haskell-game/sdl2/issues/139
  for more discussion.\r\n* Some basic support for game controller events have been
  added. See `SDL.Input.GameController` and changes to `ControllerDeviceEventData`.\r\n*
  Support for event watching: `addEventWatch` and `delEventWatch`.\r\n* High-level
  bindings now distinguish between finger down / motion / up.\r\n  See `SDL.Event.TouchFingerEvent`
  and `SDL.Event.TouchFingerMotionEvent`.\r\n* Several event payloads now have their
  `Window` fields modified to use `Maybe Window`, substituting `Nothing` for null
  pointers.\r\n* High-level structure for controller button state: `ControllerButtonState`.\r\n*
  High-level structure for controller buttons: `ControllerButton`.\r\n* High-level
  structure for controller connection: `ControllerDeviceConnection`.\r\n* High-level
  structure for joystick device connection: `JoyDeviceConnection`.\r\n* High-level
  structure for joystick button state: `JoyButtonState`.\r\n* Support for user defined
  events: `registerEvent`, `pushRegisteredEvent`, and `getRegisteredEvent`.\r\n* Initial
  window visibility can be specified in `WindowConfig` for `createWindow` function.\r\n*
  `WarpMouseOrigin` is now fully exported and can warp to global coordinates.\r\n*
  It's possible to retrieve palette information with `paletteNColors`, `paletteColors`
  and `palletColor`.\r\n\r\n\r\n2.2.0\r\n=====\r\n\r\n* Version 2.0.4 of the SDL2
  C library is now required:\r\n  * `SDL.Event`:\r\n    * Add `AudioDeviceEvent` constructor
  to `Event`\r\n    * Add `KeymapChangedEvent` constructor to `EventPayload`\r\n    *
  Add `mouseWheelEventDirection` field to `MouseWheelEventData`\r\n  * `SDL.Input.Mouse`:\r\n
  \   * Add `MouseScrollDirection` enumeration\r\n  * `SDL.Raw.Audio`:\r\n    * Add
  `clearQueuedAudio` function\r\n    * Add `getQueuedAudioSize` function\r\n    *
  Add `queueAudio` function\r\n  * `SDL.Raw.Enum`:\r\n    * Add `SDL_GL_CONTEXT_RELEASE_BEHAVIOR`
  pattern synonym\r\n    * Add `JoystickPowerLevel` pattern synonyms\r\n    * Add
  `SDL_MOUSEWHEEL_NORMAL` and `SDL_MOUSEWHEEL_FLIPPED` pattern synonyms\r\n    * Add
  `SDL_KEYMAPCHANGED`, `SDL_AUDIODEVICEADDED`, `SDL_AUDIODEVICEREMOVED`,\r\n      `SDL_RENDER_TARGETS_RESET`,
  and `SDL_RENDER_DEVICE_RESET` pattern synonyms\r\n    * Add `SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE`
  and\r\n      `SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH` pattern synonyms\r\n    * Add
  `SDL_WINDOW_MOUSE_CAPTURE` pattern synonym\r\n  * `SDL.Raw.Event`:\r\n    * Add
  `captureMouse` function\r\n    * Add `getGlobalMouseState` function\r\n    * Add
  `warpMouseGlobal` function\r\n    * Add `joystickCurrentPowerLevel` function\r\n
  \   * Add `joystickFromInstanceID` function\r\n    * Add `gameControllerFromInstanceID`
  function\r\n  * `SDL.Raw.Event`:\r\n    * Add `AudioDeviceEvent` constructor to
  `Event`\r\n    * Add `KeymapChangedEvent` constructor to `Event`\r\n    * Add `mouseWheelEventDirection`
  field to `MouseMotionEvent` constructor\r\n\r\n* Add `SDL.Exception` module, exposing
  `SDLException`\r\n* Add new function, `createSoftwareRenderer`, to render onto a
  surface\r\n* Add joystick POV hat support\r\n* Remove deprecated functionality:\r\n
  \ * `InitEverything` enumeration in `SDL.Init`\r\n  * `mapRGB` in `SDL.Video.Renderer`\r\n
  \ * `setRelativeMouseMode` in `SDL.Input.Mouse`\r\n  * `getRelativeMouseMode` in
  `SDL.Input.Mouse`\r\n  * `getMouseLocation` in `SDL.Input.Mouse`\r\n* Remove `ClipboardUpdateEventData`\r\n*
  Merge `isScreenSaverEnabled`, `enableScreenSaver`, and `disableScreenSaver`\r\n
  \ into a `screenSaverEnabled` StateVar.\r\n* Make function `surfaceBlit` in `SDL.Video.Renderer`
  return final blit\r\n  rectangle post-clipping.\r\n* Make all fields in EventData
  constructors strict\r\n* Fix issue with `setWindowMode` transitions not working
  properly between\r\n  fullscreen and windowed modes.\r\n\r\n2.1.3.1\r\n=======\r\n\r\n*
  Raise upper bounds for `vector` to <0.13\r\n\r\n2.1.3\r\n=====\r\n\r\n* Cabal flag
  `no-linear` removes dependency on `linear` (and thus, transiently,\r\n  `lens`).
  See `SDL.Vect` for details.\r\n* Remove 'lens' dependency from all examples.\r\n*
  Add Cabal flag `opengl-example` to separate that target from `examples`,\r\n  because
  it is now the only example with an extra dependency (OpenGL).\r\n* Make `hlint`
  happy with examples.\r\n* Add `updateTexture` wrapper for native `SDL_UpdateTexture`.\r\n*
  Expose `glGetDrawableSize` (can differ from window size in some environments).\r\n*
  Correct `hintToString` output to match SDL hint tokens, rather than the names\r\n
  \ of the CPP macros defining them.\r\n* Removed `ghc-options: -Wall` until we drop
  support for GHC 7.8. (>1300 warnings!)\r\n* Various documentation updates.\r\n\r\n2.1.2.1\r\n=======\r\n\r\n*
  Raise upper bounds for `lens` to <4.15 (affects examples only)\r\n\r\n2.1.2\r\n=====\r\n\r\n*
  Revise some documentation examples to be more idomatic\r\n* Update `.gitignore`
  to cover `stack` and other tools\r\n* Raise upper bounds for `transformers` to <0.6\r\n*
  Lower required SDL2 version to 2.0.2.\r\n* Fix decoding of `TextEditingEvent` where
  the Raw bindings failed to stop reading\r\n  character data past the null terminator.\r\n\r\n2.1.1\r\n=====\r\n\r\n*
  `SDL.Input.Mouse` new has a new API for fetching the location of the mouse. This\r\n
  \ API gives you greater control over finding the mouse position with respect to
  the\r\n  various \"modes\" a mouse can be in. The old API still exists, but will
  be removed\r\n  at some point in the future.\r\n* `SDL.Raw` now has a binding to
  `SDL_free`.\r\n\r\n2.1.0\r\n=====\r\n\r\n* Introduce `initializeAll` and deprecate
  `InitEverything`. To fix this deprecation\r\n  warning, change `initialize [InitEverything]`
  to `initializeAll`.\r\n* `surfaceColorKey`, `surfaceFillRect` and `surfaceFillRects`
  now all operate on\r\n  on RGBA `V4 Word8` values. They all implicitly map and unmap
  (using `SDL_MapRGBA`\r\n  and `SDL_GetRGBA` respectively).\r\n* `SDL.mapRGB` is
  now deprecated, as this conversion is always done for you.\r\n  If you still need
  this routine, use `SDL.Raw.mapRGB`.\r\n* Fix a runtime crash when reading the current
  BlendMode of a texture. Thanks to\r\n  @seppeljordan for discovering and fixing
  this bug.\r\n\r\n2.0.0\r\n=====\r\n* Introduce a set of comprehensive high-level
  bindings to SDL. These bindings\r\n  should allow users to work with SDL while writing
  idiomatic Haskell code. They\r\n  take care of pointer manipulation, and wrap up
  values in much more \"natural\"\r\n  data types. The high-level bindings live in
  the `SDL` namespace, and have been\r\n  extensively documented.\r\n* Raw bindings
  have been moved from `Graphics.UI.SDL` to `SDL.Raw`.\r\n\r\n\r\n1.3.1\r\n=====\r\n*
  Correct type signature of `getSurfaceBlendMode`\r\n\r\n1.3.0\r\n=====\r\n* Use pattern
  synonyms exclusively\r\n  * `Graphics.UI.SDL.Enum.Pattern` overrides `Graphics.UI.SDL.Enum`\r\n*
  Generalize all IO functions over MonadIO\r\n* Add convenience wrapper functions
  for constructing FunPtr callbacks\r\n* Add Typeable instances to all type classes\r\n*
  Add strictness annotations to all data structure fields\r\n* Add missing `SDLK_AUDIOPREV`
  enumeration\r\n* Correct deserialization of `SDL_TEXTINPUT` event\r\n  * Data beyond
  the null terminator was returned previously\r\n\r\n1.2.0\r\n=====\r\n* Add support
  for pattern synonyms as an alternative for SDL enumerations\r\n  * Only present
  when compiling with GHC 7.8 or newer\r\n* Add missing enumerations:\r\n  * `keymodShift`,
  `keymodCtrl`, `keymodAlt`, `keymodGUI`\r\n  * `keyPressend`, `keyReleased`\r\n  *
  `toucheMouseID`\r\n* Specialize init flags over `InitFlag`, a `Word32`\r\n* Generalize
  `keymod*` enumerations over `Num`\r\n  * The C API is inconsistent on their types\r\n*
  Fix foreign imports on `Graphics.UI.SDL.Thread`\r\n* Correct type signature of `getRenderDrawBlendMode`\r\n*
  Correct type signature of `queryTexture`\r\n* Remove export of `Keycode` from `Graphics.UI.SDL.Types`\r\n
  \ * `Graphics.UI.SDL.Enum` already exports `Keycode`\r\n\r\n1.1.3\r\n=====\r\n*
  Add missing `Keycode` enumerations\r\n* Add missing enumerations:\r\n  * `audioAllowFrequencyChange`,
  `audioAllowFormatChange`\r\n  * `audioAllowChannelsChange`, `audioAllowAnyChange`\r\n\r\n1.1.2\r\n=====\r\n*
  Add `ClipboardUpdateEvent` to `Event` data structure\r\n* Add `UnknownEvent` to
  `Event` data structure\r\n\r\n1.1.1\r\n=====\r\n* Add `Graphics.UI.SDL.Platform`
  module\r\n* Add `Graphics.UI.SDL.Thread` module and associated types and enumerations\r\n*
  Add `getWindowWMInfo`\r\n* Add `setError`\r\n* Add additional logging functions\r\n\r\n1.1.0\r\n=====\r\n*
  Require SDL 2.0.3\r\n  * Add `gameControllerAddMappingsFromFile`\r\n  * Add `gameControllerAddMappingsFromRW`\r\n
  \ * Add `glResetAttributes`\r\n  * Add `mouseButtonEventClicks` field to `WindowEvent`\r\n*
  Add missing mouse button enumerations\r\n\r\n1.0.2\r\n=====\r\n* Correct type signature
  of `getNumTouchFingers`\r\n\r\n1.0.1\r\n=====\r\n* Factor type of `addHintCallback`
  and `delHintCallback` into `HintCallback`\r\n* Add `Version` data structure\r\n"
basic-deps:
  exceptions: ! '>=0.4 && <0.9'
  bytestring: ! '>=0.10.4.0 && <0.11'
  base: ! '>=4.7 && <5'
  text: ! '>=1.1.0.0 && <1.3'
  StateVar: ! '>=1.1.0.0 && <1.2'
  linear: ! '>=1.10.1.2 && <1.21'
  transformers: ! '>=0.2 && <0.6'
  vector: ! '>=0.10.9.0 && <0.13'
all-versions:
- '1.0.0'
- '1.0.1'
- '1.0.2'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.2.0'
- '1.3.0'
- '1.3.1'
- '2.0.0'
- '2.1.0'
- '2.1.1'
- '2.1.2'
- '2.1.2.1'
- '2.1.3'
- '2.1.3.1'
- '2.2.0'
- '2.3.0'
- '2.3.0.1'
author: Gabríel Arthúr Pétursson, Oliver Charles
latest: '2.3.0.1'
description-type: haddock
description: ! 'This package contains bindings to the SDL 2 library, in both high-
  and

  low-level forms:


  The ''SDL'' namespace contains high-level bindings, where enumerations are split

  into sum types, and we perform automatic error-checking.


  The ''SDL.Raw'' namespace contains an almost 1-1 translation of the C API into

  Haskell FFI calls. As such, this does not contain sum types nor error

  checking. Thus this namespace is suitable for building your own abstraction

  over SDL, but is not recommended for day-to-day programming.'
license-name: BSD3
