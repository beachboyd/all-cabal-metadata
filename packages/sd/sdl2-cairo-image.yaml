homepage: ''
changelog-type: markdown
hash: 985ced71ad1d87d6ae388088e552660080f6b6fb1d4b5efbf220b13b7c85492f
test-bench-deps: {}
maintainer: jaiyalas@gmail.com
synopsis: An image loading and rendering library for sdl2 / sdl2-cairo
changelog: ! '# Revision history for sdl2-cairo-image


  ## 0.0.0  -- YYYY-mm-dd


  * First version. Released on an unsuspecting world.

'
basic-deps:
  JuicyPixels: ! '>=3.2'
  sdl2-cairo: ! '>=0.1'
  base: ! '>=4 && <5'
  cairo: ! '>=0.13'
  sdl2: ! '>=2.0'
  linear: ! '>=1.19'
  convertible: ! '>=1.1'
  vector: ! '>=0.11'
all-versions:
- '1.0'
- 1.0.0.1
- 1.0.0.2
author: Yun-Yan Chi
latest: 1.0.0.2
description-type: markdown
description: ! "# sdl2-cairo-image\n\n[![MIT](http://b.repl.ca/v1/license-MIT-blue.png)](https://en.wikipedia.org/wiki/MIT_licenses)\n[![Haskell](http://b.repl.ca/v1/language-haskell-green.png)](http://haskell.org)\n\nAn
  image loading and rendering library for sdl2 / sdl2-cairo\n\n## Installation\n\nThis
  module can easily install via **Cabal**.\n\n``` bash\n> cabal update\n> cabal install
  sdl2-cairo-image\n```\n\n## Usage\n\n### Loading image\n\nAssume one import this
  module as\n\n``` haskell\nimport qualified SDL.Cairo.Image as I\n```\n\nOne can
  load an image within an `IO a`.\nFor example,\n\n``` haskell\nmain = do\n   img
  <- I.loadRGBA8 PNG \"wherever/your/image/is/img.png\"\n```\n\nIf this file is loaded
  correctly then `img` will be a `Image PixelRGBA8`.\nIf failed, `img` will be a default
  5x5 image (i.e. `I.defImageRGBA8`).\n\n### Displaying image\n\nPlease read [here](https://hackage.haskell.org/package/sdl2-cairo-image/docs/SDL-Cairo-Image-Render.html)!\n"
license-name: MIT
