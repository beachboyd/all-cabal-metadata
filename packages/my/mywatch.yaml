homepage: ''
changelog-type: markdown
hash: 2e4fefa2c6f6cdd6ab4149e975cc2dde3c181ab84083c0c0d3ff61c5497245c1
test-bench-deps: {}
maintainer: Igor Pashev <pashev.igor@gmail.com>
synopsis: Web application to view and kill MySQL queries
changelog: ! "0.3.0\n=====\n\n  * Support Sproxy's end-point `/.sproxy/access` to
  find servers, available\n    to the current user, in one single HTTP request. This
  requires\n    Sproxy2 >= 1.95.0. Fallback to old multiple-request way if that\n
  \   end-point returns error.\n\n\n0.2.1\n=====\n\n  * Compress all responses with
  gzip if acceptable\n\n\n0.2.0\n=====\n\n  * Allow killing queries via `CALL mysql.mywatch_kill(id)`.
  You should have\n    this routine on your database server and grant MyWatch privilege
  to\n    execute it. Provided a safe example of this function.\n\n  * Minor improvements
  in UI\n\n\n0.1.2\n=====\n\n  * Use location hash for server name\n  * Compact server
  list (`display: inline-block`)\n\n\n0.1.1\n=====\n\n  * Request `HEAD /server/:server/processlist.json`
  before\n    showing the server to user. This is to hide servers which\n    are not
  allowed by Sproxy to this user.\n\n  * Added a workaround for buggy haskell mysql
  package\n    causing a heisenbug that random sections of the\n    configuration
  files were not found by libmysqlclient.\n\n  * Added a workaround for the way MariaDB's
  libmysqlclient\n    processes SSL options. SSL now works with MariaDB's\n    libmysqlclient.\n\n
  \ * Fixed parsing of `GRANT` queries (they have `NULL` states)\n\n\n0.1.0\n=====\n\n
  \ * Initial version\n  * Only view queries\n\n"
basic-deps:
  warp: ! '>=3.2'
  MissingH: -any
  ConfigFile: ! '>=1.1'
  bytestring: ! '>=0.10'
  wai: ! '>=3.2'
  mysql: ! '>=0.1'
  unix: ! '>=2.7'
  base: ! '>=4.8 && <50'
  data-default-class: -any
  unordered-containers: ! '>=0.2'
  text: ! '>=1.2'
  docopt: ! '>=0.7'
  resource-pool: ! '>=0.2'
  filepath: -any
  network: ! '>=2.6'
  interpolatedstring-perl6: ! '>=1.0'
  fast-logger: -any
  mtl: ! '>=2.2'
  wai-extra: ! '>=3.0'
  wai-middleware-static: ! '>=0.8'
  scotty: ! '>=0.10'
  http-types: ! '>=0.9'
  aeson: ! '>=0.8'
  mysql-simple: ! '>=0.2'
all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.2.0
- 0.2.1
- 0.3.0
author: Igor Pashev <pashev.igor@gmail.com>
latest: 0.3.0
description-type: markdown
description: ! "My Watch\n========\n\nWeb application for viewing and killing MySQL
  queries on multiple\nservers. Designed to work behind [Sproxy](http://hackage.haskell.org/package/sproxy2).\n\n\nRequirements\n============\n\nMyWatch
  is written in Haskell with [GHC](http://www.haskell.org/ghc/).\nAll required Haskell
  libraries are listed in [mywatch.cabal](mywatch.cabal).\nUse [cabal-install](http://www.haskell.org/haskellwiki/Cabal-Install)\nto
  fetch and build all pre-requisites automatically.\n\n\nInstallation\n============\n\n
  \   $ git clone https://github.com/ip1981/mywatch.git\n    $ cd mywatch\n    $ cabal
  install\n\n\nUsage\n=====\n\nType `mywatch --help` to see usage summary:\n\n    Usage:\n
  \     mywatch [options] MYCNF\n\n    Options:\n\n      -d, --datadir=DIR        Data
  directory including static files [default: {cabal data dir}]\n\n      -s, --socket=SOCK
  \       Listen on this UNIX-socket [default: /tmp/mywatch.sock]\n      -p, --port=PORT
  \         Instead of UNIX-socket, listen on this TCP port (localhost)\n\n      -h,
  --help               Show this message\n\n\n\nConfiguration\n=============\n\nThe
  `MYCNF` argument denotes a MySQL client config file.  Each section in this\nfile
  describes a MySQL server where you can view processes. As usually, the\n\"client\"
  section applies internally to all other sections, but is ignored by\nMyWatch. Remember
  to make this file secret if it includes passwords, or use the\n`!include` directive.
  However, MyWatch does not parse included files for\nmore sections.\n\n```\n[foo]\nhost
  = example.com\nuser = user1\n...\n\n[bar]\nhost = example.net\nuser = user2\n...\n\n!include
  /run/keys/my.secret.cnf\n```\n\nSproxy Configuration\n====================\n\n*
  To access the service allow `GET` for `/`, `/static/%` and `/serverlist.json`.\n*
  To see processes on a particular MySQL server allow `GET` and (optional)\n  `HEAD`
  for `/server/:server/processlist.json`. The latter is only required with\n  Sproxy2
  before version 1.95.0\n* To kill processes allow `DELETE` for `/server/:server/process/%`\n\n\nDatabase
  Configuration\n======================\n\nMyWatch needs the [PROCESS](http://dev.mysql.com/doc/refman/en/privileges-provided.html#priv_process)\nprivilege.\n\nTo
  be able to kill queries a procedure named `mywatch_kill` must exist\nin the `mysql`
  database.  MyWatch invokes `CALL mysql.mywatch_kill(id)`\nfor killing queries.  It's
  up to you how to implement this routine, for a\nsafe example see [sql/mywatch_kill.sql](sql/mywatch_kill.sql).
  Of course,\nMyWatch should be granted to execute this procedure.  If this procedure\ndoes
  not exist, MyWatch will not show this possibility in user interface,\nAPI will work,
  but result in Internal Server Error (HTTP 500). There is no\nfiltering at application
  level, though the \"kill\" button may not be shown\nin some circumstances.\n\n\nScreenshots\n===========\n![MyWatch1](./screenshots/mywatch-1.png)\n![MyWatch2](./screenshots/mywatch-2.png)\n\n"
license-name: MIT
