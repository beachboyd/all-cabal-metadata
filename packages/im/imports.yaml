homepage: https://github.com/CindyLinz/Haskell-imports
changelog-type: ''
hash: 2422bcb73d58e2b168c8d91118220438d950c847793a3f9bd00db2a51c168986
test-bench-deps:
  base: ! '>=4.7 && <4.9'
  filepath: ==1.4.*
  mtl: ==2.2.*
  directory: ==1.2.*
maintainer: Cindy Wang (CindyLinz) <cindylinz@gmail.com>
synopsis: Generate code for importing directories automatically
changelog: ''
basic-deps:
  base: ! '>=4.7 && <4.9'
  filepath: ==1.4.*
  mtl: ==2.2.*
  directory: ==1.2.*
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.2.1
- 0.2.0.0
author: Cindy Wang (CindyLinz)
latest: 0.2.0.0
description-type: haddock
description: ! 'This module helps to automatically generate code for importing all
  the haskell files from directories.


  = Synopsis


  For <https://www.haskell.org/cabal/ cabal> inited project, we customize @Setup.hs@
  file to generate the importing code.


  * Be sure to modify the @build-type@ field in the @.cabal@ file from @Simple@ to
  @Custom@.


  * Then modify the @main@ function in @Setup.hs@ to generate importing code by either
  header file or a module file.


  Setup.hs:


  > import Distribution.Simple

  > import System.Imports (writeImportsHeader, writeImportsModule)

  >

  > main = do

  >   writeImportsHeader "imports.header" "Export" "Some.Where" "Some/Where"

  >   -- or

  >   writeImportsModule "ImportAll.hs" "ImportAll" "Some.Where" "Some/Where"

  >

  >   defaultMain


  Target.hs: (by header)


  @

  &#123;\-\# LANGUAGE CPP \#\-&#125;

  module Target where


  #include "imports.header"


  func = Export.funcFromSomeWhere

  @


  Target.hs: (by module)


  @

  module Target where


  import qualified ImportAll


  func = ImportAll.funcFromSomeWhere

  @'
license-name: MIT
