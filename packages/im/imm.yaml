homepage: https://github.com/k0ral/imm
changelog-type: ''
hash: 66f3a10b49e06aba8477a4b767ad558af62f78de0973c5e0a04fbd37feee5a1e
test-bench-deps: {}
maintainer: koral <koral@mailoo.org>
synopsis: Execute arbitrary actions for each unread element of RSS/Atom feeds
changelog: ''
basic-deps:
  atom-conduit: ! '>=0.4'
  http-client: ! '>=0.4.30'
  monoid-subclasses: -any
  bytestring: -any
  case-insensitive: -any
  dyre: -any
  stm: -any
  xml-conduit: ! '>=1.5'
  timerep: ! '>=2.0.0.0'
  base: ==4.*
  time: -any
  blaze-markup: -any
  text: -any
  safe-exceptions: -any
  streaming-with: -any
  monad-control: -any
  tls: -any
  filepath: -any
  network: -any
  lifted-base: -any
  connection: -any
  conduit: -any
  imm: -any
  rss-conduit: ! '>=0.4.1'
  monad-time: -any
  fast-logger: -any
  xml: -any
  containers: -any
  uri-bytestring: -any
  xml-types: -any
  HaskellNet-SSL: ! '>=0.3.3.0'
  http-client-tls: -any
  opml-conduit: ! '>=0.6'
  mtl: -any
  hashable: -any
  blaze-html: -any
  transformers-base: -any
  mime-mail: -any
  prettyprinter: -any
  optparse-applicative: -any
  HaskellNet: -any
  streaming-bytestring: -any
  http-types: -any
  microlens: -any
  aeson: -any
  streamly: -any
  mono-traversable: ! '>=1'
  prettyprinter-ansi-terminal: -any
  directory: ! '>=1.2.3.0'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.4.1.0
- 0.5.0.0
- 0.5.0.1
- 0.5.1.0
- 0.6.0.0
- 0.6.0.1
- 0.6.0.2
- 0.6.0.3
- 1.0.0.0
- 1.0.1.0
- 1.1.0.0
- 1.2.0.0
- 1.2.1.0
- 1.3.0.0
- 1.4.0.0
author: kamaradclimber, koral
latest: 1.4.0.0
description-type: markdown
description: |
  # imm

  *imm* is a tool to execute arbitrary actions for each new element from RSS/Atom feeds (e.g. sending a mail, or writing a file).

  *imm* is written and configured in *Haskell*.

  Technical documentation is available at [hackage][1].

  To get started, please consult documentation of `Imm.Boot` module.


  ## Example use cases

  ### Online feed reader

  For the sake of *I-want-the-mutt-of-feed-readers* zealots, it is possible to turn any mail reader into a feed reader, by having *imm* send an e-mail with unread elements to an arbitrary address.
  You can then browse your feeds through your favourite mail reader, and leverage any mail-related tool on your feeds.
  Bonus points if your mail reader is online as you can now access your feeds from any computer connected to the Internet.

  Check out `Imm.Hooks.SendMail` module.

  ### Offline read-it-later

  *imm* is able to store a local copy of unread elements, to read them later while offline for example. External links won't work offline though.

  Check out `Imm.Hooks.WriteFile` module.


  ## Example usage

  - Subscribe to a feed:

    ```
    imm subscribe http://your.feed.org
    ```
  - Import feeds from an OPML file:

    ```
    cat feeds.opml | imm import
    ```
  - List subscribed feeds:

    ```
    imm show
    ```
  - Unsubscribe from a feed:

    ```
    imm unsubscribe http://your.feed.org
    ```
  - Check for new elements without executing any action:

    ```
    imm check
    ```
  - Execute configured actions for each new element from subscribed feeds:

    ```
    imm run
    ```
  [1]: http://hackage.haskell.org/package/imm
license-name: LicenseRef-PublicDomain
