homepage: https://github.com/CindyLinz/Haskell-linked-list-with-iterator#readme
changelog-type: ''
hash: 9941189523d2cfc5f5feb10776447c6c989e5c00f5507dc5ef087e938a1ec7c9
test-bench-deps:
  base: -any
  linked-list-with-iterator: -any
maintainer: cindylinz@gmail.com
synopsis: A pure linked list which is mutable through iterators.
changelog: ''
basic-deps:
  base: ! '>=4.3 && <5'
  containers: ==0.5.*
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Cindy Wang (CindyLinz)
latest: 0.1.1.0
description-type: haddock
description: ! 'It''s iternally implemented by ''Data.IntMap.Strict.IntMap'' or ''Data.Map.Strict.Map''
  ''Integer'',

  using ''Int'' or ''Integer'' as the iterator type respectly.

  Most of the operations cost @O(lg N)@.


  Each newly inserted element will consume a unique number and never reuse old numbers.

  Choose ''Int'' one if you''re sure that there''re no more than ''Int'' space times
  of insertions,

  or choose ''Integer'' one otherwise.'
license-name: BSD-3-Clause
