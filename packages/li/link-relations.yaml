homepage: http://hub.darcs.net/fr33domlover/link-relations
changelog-type: text
hash: d186e311462609e6cd3a49460eb42b55504b493057279970c60d81eef2cffbcb
test-bench-deps: {}
maintainer: fr33domlover@riseup.net
synopsis: Use web link relation types (RFC 5988) in Haskell
changelog: ! "The changes are recorded by the version control system, Darcs. To see
  a log\nquickly from the terminal, run:\n\n  $ darcs changes --repo http://hub.darcs.net/fr33domlover/link-relations\n\nThere
  is also a web interface at <http://hub.darcs.net> which, among other\nthings, can
  display the history log.\n\nTo see the log in a local clone, first get a copy of
  the repository if you\nhaven't yet:\n\n  $ darcs get http://hub.darcs.net/fr33domlover/link-relations\n\nThen
  move into the newly created directory and run darcs:\n\n  $ cd link-relations\n
  \ $ darcs changes\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  unordered-containers: ! '>=0.2.5'
  uri-bytestring: ! '>=0.1.7'
  hashable: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
author: fr33domlover
latest: 0.1.1.0
description-type: markdown
description: ! "See the .cabal file for more info and link to project website the
  version\ncontrol.\n\nThe official download location is Hackage.\n\nThis library
  is free software, and is committed to software freedom. It is\nreleased to the public
  domain using the CC0 Public Domain Dedication. For the\nboring \"legal\" details
  see the file `COPYING`.\n\nSee the file `INSTALL` for hints on installation. The
  file `ChangeLog` explains\nhow to see the history log of the changes done in the
  code. `NEWS.md` provides\na friendly overview of the changes for each release.\n\n#
  How to Release\n\nThis package's source code is auto-generated using 3 files:\n\n1.
  A Haskell source file template\n2. CSV file containing the IANA link relation registry
  data\n3. A Haskell program which embeds the data into the template as Haskell code\n\nAll
  3 files are found in the `util/` directory.\n\n## (1) Update the source\n\n- To
  update the non-generated part of the code, edit the template file.\n- To update
  the CSV to a new version, download it from\n  <https://www.iana.org/assignments/link-relations/link-relations-1.csv>\n-
  To modify the source generation process, edit the generator program\n\n## (2) Update
  version and date\n\nIf you downloaded a new CSV version, update the `lastUpdated`
  value in the\ngenerator program. You can find that date at\n<http://www.iana.org/assignments/link-relations/link-relations.xhtml>.\n\nUpdate
  the package version number in the .cabal file. Use `darcs diff` to\nexamine the
  changes in the generated source and pick a version number according\nto PVP. The
  most common change in the registry will probably be new link\nrelations added, which
  means new API functions and therefore an increase of the\nminor version number (i.e.
  3rd number, e.g. /0.1.5.3/ becomes /0.1.6.0/).\nThat's because the `LinkRelation`
  constructors themselves aren't exported.\n\n## (3) Adjust other config\n\nNear the
  top of the generator program file there is a configuration section\n(e.g. the update
  date, file paths, etc.). If you made any changes which require\nupdates there, make
  the required modifications.\n\n## (4) Build and test\n\nThe generator program depends
  on the `cassava` package. The other dependencies\nare also dependencies of `cassava`
  (primarily `bytestring` and `vector`), which\nmeans you can install the dependencies
  like this:\n\n    $ cabal install cassava\n\nRun the generator program from the
  package toplevel. Either using the\ninterpreter:\n\n    $ runhaskell util/generate.hs\n\nOr
  like this, if you installed `cassava` into a sandbox:\n\n    $ cabal exec runhaskell
  util/generate.hs\n\nExamine the result. Switch between the old generated source
  and the new one\n(which is generated as a separate file in the same directory).\n\nBuild
  the library itself:\n\n    $ cabal build\n\n## (5) Record everything into the Darcs
  repo, make a tag, make a tarball etc.\n\nAs usual. Note that the 3 files in `util/`
  (i.e. including the CSV data) and\nthe generated source in `src/`, are all kept
  in the Darcs repo.\n"
license-name: LicenseRef-PublicDomain
