homepage: https://github.com/fumieval/liszt#readme
changelog-type: markdown
hash: d46880adca6eb5fad0e4319716ae8018e7e7ff6c640eb63b732c3eceadb5f583
test-bench-deps: {}
maintainer: fumiexcel@gmail.com
synopsis: Append only key-list database
changelog: ! '## 0.1


  Initial release

'
basic-deps:
  exceptions: -any
  bytestring: -any
  reflection: -any
  stm-delay: -any
  stm: -any
  base: ! '>=4.7 && <5'
  unordered-containers: -any
  text: -any
  liszt: -any
  filepath: -any
  network: -any
  containers: -any
  binary: -any
  sendfile: -any
  transformers: -any
  deepseq: -any
  scientific: -any
  winery: -any
  fsnotify: -any
  directory: -any
all-versions:
- '0.1'
author: Fumiaki Kinoshita
latest: '0.1'
description-type: markdown
description: ! '# Liszt


  Liszt is an append-only key-list database.


  ## Insertion


  For the sake of reliability, insertion is performed locally.


  ```haskell

  commitFile :: FilePath -> Transaction a -> IO a

  insert :: Serialise a => Key -> a -> Transaction ()


  > commitFile "foo.liszt" $ insert "message" ("hello, world" :: Text)

  ```


  ## Query


  `lisztd` starts a server. The first argument is the root directory to find liszt

  files.


  ```

  $ lisztd .

  ```


  You can use the command line utility to watch a stream. `-b 0` follows a stream

  from offset 0. `-f "%p\n"` prints payloads with newlines.


  ```

  $ liszt foo.liszt message -b 0 -f "%p\n"

  hello, world

  ```

'
license-name: BSD3
