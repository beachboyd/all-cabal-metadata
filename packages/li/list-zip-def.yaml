homepage: ''
changelog-type: ''
hash: 2c347c4f7f574ee52a5806fddecd0d45448f475af8d17faf25433ca5faa5946e
test-bench-deps: {}
maintainer: muesli4@gmail.com
synopsis: Provides zips with default values.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <4.13'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
author: Moritz Bruder
latest: 0.1.0.3
description-type: markdown
description: ! "# list-zip-def\n\nProvides zip functions that use a given default
  value, whenever one list is exhausted, but not all.\n\n    Prelude> import Data.List.Zip\n
  \   Prelude Data.List.Zip> zipDef 0 'x' [1, 2, 3] \"a\"\n    [(1,'a')(2,'x')(3,'x')]\n\nThe
  resulting list spine is also lazy:\n\n    Prelude Data.List.Zip> let xs = zipDef
  0 'x' [1, 2, 3 :: Int] \"a\"\n    Prelude Data.List.Zip> :sprint xs\n    xs = _\n
  \   Prelude Data.List.Zip> import Data.Maybe\n    Prelude Data.List.Zip Data.Maybe>
  listToMaybe xs \n    Just (1,'a')\n    Prelude Data.List.Zip Data.Maybe> :sprint
  xs\n    xs = (1,'a') : _\n"
license-name: LicenseRef-PublicDomain
