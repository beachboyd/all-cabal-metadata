homepage: ''
changelog-type: markdown
hash: 1032b6d854f8b353be80600fc98a84c3a148066aa64b759d3a53c9044d260f78
test-bench-deps:
  base: -any
  hspec: -any
  linear-socket: -any
  tasty-hspec: -any
  network: -any
maintainer: allele.dev@gmail.com
synopsis: Typed sockets
changelog: ! "# 0.3.3.3 (Sep 29, 2018)\n\n* fix some build issues\n* update copyright
  year\n\n# 0.3.3.0 (Dec. 3, 2017)\n\n* remove ynot-prelude dependency\n\n# 0.3.2.0
  (Dec. 3, 2017)\n\n* make CanShutdown constraints tighter\n\n# 0.3.1.0 (Dec. 2, 2017)\n\n*
  added socket creation functions that make things easier to use\n  * tcp4Socket\n
  \ * tcp6Socket\n  * tcpUnixSocket\n  * and UDP versions\n\n# 0.3.0.0 (Dec. 2, 2017)\n\n*
  made API friendlier for point-free operations\n* update type-level structures to
  make better use of shutdown status tracking\n\n# 0.2.0.0 (Dec. 2, 2017)\n\n* released\n\n#
  0.1.0.0 (November 29, 2017)\n\n* init\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  network: -any
all-versions:
- '0.3.3.0'
- '0.3.3.1'
- '0.3.3.2'
- '0.3.3.3'
author: Allele Dev
latest: '0.3.3.3'
description-type: markdown
description: ! "# linear-socket\n\n| linear-socket | 0.3.3.3                           |\n|
  ------------- | --------------------------------- |\n| Maintainer    | Allele Dev
  (allele.dev@gmail.com) |\n| Funding       | $0 USD                            |\n|
  Copyright     | Copyright (C) 2017 Allele Dev     |\n| License       | GPL-3                             |\n\n##
  Overview\n\nA networking socket library aiming to add tracking of socket\nproperties
  at the type level. Currently, the following are tracked:\n\n* socket status: unconnected,
  open, bound, etc\n* socket family: inet4, inet6, unix\n* socket protocol: tcp, udp\n*
  socket shutdown state: available, can't send, can't receive, etc\n\nThis makes it
  so that many socket programming errors are caught before\nthe program is ever run.
  For example:\n\n* sending or receiving from a TCP socket that isn't connected\n
  \ * can still `sendTo`/`recvFrom` for UDP sockets\n* listening on a socket that
  hasn't been bound\n* accepting from a socket that hasn't started listening\n* sending
  from a socket that has had it's send capability `shutdown`\n* receiving from a socket
  that has had it's recv capability `shutdown`\n\nHowever, the protection isn't perfect.
  In particular, until linear\ntypes are used, the following is one way to cause errors
  in lieu\nof the type protection:\n\n1. Create a thread taking a socket and modify
  the socket in the parent view:\n\n``` haskell\nsock <- tcp4Socket\nbound <- bind
  serverAddress sock\nserver <- listen 1 bound\nforkIO (doThing server)\nclose server\n\ndoThings
  :: SSocket f p s sh -> IO ()\ndoThings server = do\n  accept server -- this will
  crash because of the close above\n```\n\n## Examples\n\nImports:\n\n``` haskell\nimport
  Network.Typed.Socket\nimport Network.Socket (tupleToHostAddress)\n```\n\nSetting
  a TCP/IPv4 server address:\n\n``` haskell\nserverAddress = SockAddrInet 2291 (tupleToHostAddress
  (127,0,0,1))\n```\n\nAn echo server:\n\n```haskell\n-- point-free style\npfServer
  =\n  tcp4Socket\n    >>= bind serverAddress\n    >>= listen 1\n    >>= (\\server
  ->\n      accept server >>= (\\(client, _) ->\n        recv 32 client >>= (\\bs
  -> send bs client)))\n\n-- explicit do-notation\ndoServer = do\n  sock <- tcp4Socket\n
  \ bound <- bind serverAddress sock\n  server <- listen 1 bound\n  (client, _) <-
  accept server\n  bs <- recv 32 client\n  send bs client\n```\n\nAn echo client:\n\n```
  haskell\n-- point-free style\npfClient =\n  tcp4Socket\n    >>= connect serverAddress\n
  \   >>= (\\client -> send \"fish\" client >> recv 32 client)\n\n-- explicit do-notation\ndoClient
  = do\n  sock <- tcp4Socket\n  client <- connect serverAddress sock\n  send \"fish\"
  client\n  recv 32 client\n```\n\n## Contributing\n\nContributions are welcome! Documentation,
  examples, code, and\nfeedback - they all help.\n\nBe sure to review the included
  code of conduct. This project adheres\nto the [Contributor's Covenant](http://contributor-covenant.org/).
  By\nparticipating in this project you agree to abide by its terms.\n\nThis project
  currently has no funding, so it is maintained strictly on\nthe basis of its use
  to me. No guarantees are made about attention to\nissues or contributions, or timeliness
  thereof.\n\n## Developer Setup\n\nThe easiest way to start contributing is to install\n[stack](https://github.com/commercialhaskell/stack).
  stack can install\nGHC/Haskell for you, and automates common developer tasks.\n\nThe
  key commands are:\n\n* `stack setup`: install GHC\n* `stack build`: build the project\n*
  `stack clean`: clean build artifacts\n* `stack haddock`: builds documentation\n*
  `stack test`: run all tests\n* `stack bench`: run all benchmarks\n* `stack ghci`:
  start a REPL instance\n\n## Licensing\n\nThis project is distributed under the GPL-3
  license. See the included\n[LICENSE](./LICENSE) file for more details.\n"
license-name: GPL-3
