homepage: ''
changelog-type: markdown
hash: acad41f54dee933505f4d78f143e0e3e352f0b73aabcf7cde6ce108c5ecebaba
test-bench-deps: {}
maintainer: vanessa.mchale@iohk.io
synopsis: Haskell interface to libarchive
changelog: |
  # libarchive

  ## 1.0.5.1

    * Add `cross` flag

  ## 1.0.5.0

    * Add facilities for lazy packing, e.g. `entriesToBSL`
    * Minor documentation fixes

  ## 1.0.4.0

    * Add `noOpenCallback`
    * Add various facilities for lazy/streaming archives, viz. `unpackToDirLazy`,
      `bslToArchive`, and `readArchiveBSL`.
    * Remove `unsafe` stuff everywhere

  ## 1.0.3.0

    * Fix types for `archive_set_read_callback` and
      `archive_read_set_seek_callback`

  ## 1.0.2.0

    * Add `Eq` instance for `ArchiveFormat`

  ## 1.0.1.0

    * Remove functions from libarchive 3.3.3

  ## 1.0.0.0

    * Get rid of `cbits`
    * Add low-level FFI bindings
    * Add high-level functions for unpacking archives

  ## 0.2.1.2

    * Stream from a file when using `unpackArchive`

  ## 0.2.1.1

    * Preserve modification times by default

  ## 0.2.1.0

    * Enable autodetection of archive format/compression
    * Slightly improved docs
    * Rename `unpackTarball` to `unpackArchive`

  ## 0.2.0.0

    * Fix bug in paths
basic-deps:
  bytestring: -any
  composition-prelude: -any
  base: ! '>=4.9 && <5'
  filepath: -any
  dlist: -any
all-versions:
- 0.2.1.1
- 0.2.1.2
- 1.0.0.0
- 1.0.1.0
- 1.0.2.0
- 1.0.3.0
- 1.0.4.0
- 1.0.5.0
- 1.0.5.1
author: Vanessa McHale
latest: 1.0.5.1
description-type: markdown
description: |
  # libarchive

  [![Hackage CI](https://matrix.hackage.haskell.org/api/v2/packages/libarchive/badge)](https://matrix.hackage.haskell.org/package/libarchive)
  [![Hackage](https://img.shields.io/hackage/v/libarchive.svg)](http://hackage.haskell.org/package/libarchive)
  [![Dependencies of latest version on Hackage](https://img.shields.io/hackage-deps/v/libarchive.svg)](https://hackage.haskell.org/package/libarchive)

  This contains Haskell bindings to
  [libarchive](http://libarchive.org/). It was created as an alternative to
  [tar](http://hackage.haskell.org/package/tar), but it supports more archive
  formats.

  It has a high-level Haskell API for creating and unpacking archives in addition
  to the C API. Like the `tar` package, it can stream from lazy `ByteString`s.
license-name: BSD-3-Clause
