homepage: https://github.com/RyanGlScott/lift-generics
changelog-type: markdown
hash: 1a19a6c0f0257bd830621a3849b64f8a2213ebc6f40fc09387dd77ec649d9329
test-bench-deps:
  base: ! '>=4.3 && <5'
  hspec: ! '>=2 && <3'
  lift-generics: -any
  generic-deriving: ! '>=1.9 && <2'
  base-compat: ! '>=0.8.2 && <1'
  template-haskell: ! '>=2.4 && <2.16'
maintainer: Ryan Scott <ryan.gl.scott@gmail.com>
synopsis: GHC.Generics-based Language.Haskell.TH.Syntax.lift implementation
changelog: |
  ### 0.1.2
  * Add a case for `V1` (i.e., empty data types), which diverges in the way
    you'd expect.

  ### 0.1.1
  * Fix test suite on GHC 8.0

  ## 0.1
  * Initial commit
basic-deps:
  base: ! '>=4.3 && <5'
  generic-deriving: ! '>=1.9 && <2'
  ghc-prim: -any
  template-haskell: ! '>=2.4 && <2.16'
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
author: Ryan Scott
latest: 0.1.2
description-type: markdown
description: |
  # `lift-generics`

  [![Haskell Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]
  [![Hackage Dependencies](https://img.shields.io/hackage-deps/v/lift-generics.svg)](http://packdeps.haskellers.com/reverse/lift-generics)
  [![Haskell Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]
  [![BSD3 License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal: BSD3]
  [![Build](https://img.shields.io/travis/RyanGlScott/lift-generics.svg)](https://travis-ci.org/RyanGlScott/lift-generics)

  [Hackage: lift-generics]:
    http://hackage.haskell.org/package/lift-generics
      "lift-generics package on Hackage"
  [Haskell.org]:
    http://www.haskell.org
    "The Haskell Programming Language"
  [tl;dr Legal: BSD3]:
    https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29
    "BSD 3-Clause License (Revised)"

  This package provides a `GHC.Generics`-based `genericLiftWithPkg` function (intended for GHC 7.10 and earlier), as well as a `genericLift` function (only available on GHC 8.0 and later), both of which can be used for providing a `Language.Haskell.TH.Syntax.lift` implementation. See the documentation in the `Language.Haskell.TH.Lift.Generics` module to get started.

  Credit goes to Matthew Pickering for [suggesting this idea](https://ghc.haskell.org/trac/ghc/ticket/1830#comment:12).

  Note that due to API limitations, `GHC.Generics` wasn't powerful enough to come up with the entirety of a `lift` implementation prior to GHC 8.0. For this reason, `genericLiftWithPkg` requires you to produce the package name yourself, which proves to be no small feat (see the documentation for more info).

  Luckily, you don't have to jump through as many hoops on GHC 8.0 and later: simply use the `genericLift` function, and life is good.
license-name: BSD-3-Clause
