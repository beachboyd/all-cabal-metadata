homepage: https://github.com/haskell-linnet/linnet#readme
changelog-type: ''
hash: 448aa6ca43cfbfb7fbcc00b51534d744e3faa6c58afe25a2577bf2790cfc1f35
test-bench-deps:
  warp: ! '>=3.2.28 && <3.3'
  linnet: -any
  exceptions: ! '>=0.10.2 && <0.11'
  either: ! '>=5.0.1.1 && <5.1'
  bytestring: ! '>=0.10.8.2 && <0.11'
  wai: ! '>=3.2.2.1 && <3.3'
  bytestring-conversion: ! '>=0.3.1 && <0.4'
  case-insensitive: ! '>=1.2.0.11 && <1.3'
  base: ! '>=4.7 && <5'
  hspec: ! '>=2.7.1 && <2.8'
  text: ! '>=1.2.3.1 && <1.3'
  quickcheck-classes: ! '>=0.6.1.0 && <0.7'
  quickcheck-instances: ! '>=0.3.22 && <0.4'
  io-streams: ! '>=1.5.1.0 && <1.6'
  utf8-string: ! '>=1.0.1.1 && <1.1'
  uri-encode: ! '>=1.5.0.5 && <1.6'
  mtl: ! '>=2.2.2 && <2.3'
  transformers: ! '>=0.5.6.2 && <0.6'
  QuickCheck: ! '>=2.13.2 && <2.14'
  http-types: ! '>=0.12.3 && <0.13'
maintainer: whoisliar@gmail.com
synopsis: Lightweight library for building HTTP API
changelog: ''
basic-deps:
  warp: ! '>=3.2.28 && <3.3'
  exceptions: ! '>=0.10.2 && <0.11'
  either: ! '>=5.0.1.1 && <5.1'
  bytestring: ! '>=0.10.8.2 && <0.11'
  wai: ! '>=3.2.2.1 && <3.3'
  bytestring-conversion: ! '>=0.3.1 && <0.4'
  case-insensitive: ! '>=1.2.0.11 && <1.3'
  base: ! '>=4.7 && <5'
  text: ! '>=1.2.3.1 && <1.3'
  io-streams: ! '>=1.5.1.0 && <1.6'
  utf8-string: ! '>=1.0.1.1 && <1.1'
  uri-encode: ! '>=1.5.0.5 && <1.6'
  mtl: ! '>=2.2.2 && <2.3'
  transformers: ! '>=0.5.6.2 && <0.6'
  http-types: ! '>=0.12.3 && <0.13'
all-versions:
- 0.1.0.0
author: Sergey Kolbasov
latest: 0.1.0.0
description-type: markdown
description: |-
  Linnet
  ------

  Linnet [ˈlɪnɪt] is a lightweight Haskell library for building HTTP API on top of [WAI](http://hackage.haskell.org/package/wai). Library design is heavily inspired by Scala [Finch](https://github.com/finagle/finch).

  Check out [linnet.io](http://linnet.io) for documentation.

  Badges
  ------
  [![Travis (.com) branch](https://img.shields.io/travis/com/haskell-linnet/linnet/master?style=flat-square)](https://travis-ci.com/haskell-linnet/linnet) [![Gitter](https://img.shields.io/gitter/room/haskell-linnet/community?style=flat-square)](https://gitter.im/haskell-linnet/community) ![Hackage](https://img.shields.io/hackage/v/linnet?style=flat-square)

  Hello world
  -----------

  Here is an example of running simple application using Warp server:
  ```haskell
  {-# LANGUAGE FlexibleInstances      #-}
  {-# LANGUAGE MultiParamTypeClasses  #-}
  {-# LANGUAGE OverloadedStrings      #-}
  {-# LANGUAGE TypeApplications       #-}
  {-# LANGUAGE TypeSynonymInstances   #-}

  import Control.Exception (SomeException)
  import Data.Function ((&))
  import Data.Text (Text, append)
  import Linnet
  import Network.Wai.Handler.Warp (run)

  -- It's necessary to define encoding of exceptions for content-type "text/plain". Here it returns no content
  instance Encode TextPlain SomeException where
   encode _ = mempty

  helloWorld = get(p' "hello" // path @Text) ~>> (\name -> return $ ok ("Hello, " `append` name))

  main :: IO ()
  main = run 9000 app
  where
    app = bootstrap @TextPlain helloWorld & compile & toApp id
  ```

  Now try to call your application with:
  ```
  curl -v http://localhost:9000/hello/linnet
  ```

  Maintainers
  -------
  * [Sergey Kolbasov](https://github.com/sergeykolbasov)

  License
  -------
  Licensed under the **[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)** (the "License");
  you may not use this software except in compliance with the License.

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
license-name: LicenseRef-Apache
