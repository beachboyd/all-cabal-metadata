homepage: https://github.com/kowainik/life-sync
changelog-type: markdown
hash: 3dfd4c0f1af65978ceb0b01713bd9d0163590fdc9815e29afac1526407ea339b
test-bench-deps:
  path: -any
  tasty-hedgehog: -any
  filepath: -any
  hedgehog: -any
  base-noprelude: -any
  containers: -any
  life-sync: -any
  tasty: -any
maintainer: xrom.xkov@gmail.com
synopsis: ''
changelog: ! 'Change log

  ==========


  life-sync uses [PVP Versioning][1].

  The change log is available [on GitHub][2].


  # 1.0.1


  * Switch to `relude`.


  # 1.0


  * Initially created.


  [1]: https://pvp.haskell.org

  [2]: https://github.com/kowainik/life-sync/releases

'
basic-deps:
  exceptions: -any
  microlens-platform: -any
  fmt: -any
  bytestring: -any
  path: -any
  text: ! '>=1.2'
  process: -any
  base-noprelude: ! '>=4.9 && <5'
  containers: -any
  life-sync: -any
  ansi-terminal: -any
  relude: ! '>=0.1.0'
  optparse-applicative: -any
  path-io: -any
  tomland: ^>=0.3
all-versions:
- '1.0'
- 1.0.1
author: Kowainik
latest: 1.0.1
description-type: markdown
description: ! "# life-sync\n\n[![Hackage](https://img.shields.io/hackage/v/life-sync.svg)](https://hackage.haskell.org/package/life-sync)\n[![Build
  status](https://secure.travis-ci.org/kowainik/life-sync.svg)](https://travis-ci.org/kowainik/life-sync)\n[![MIT
  license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/kowainik/life-sync/blob/master/LICENSE)\n[![Stackage
  LTS](http://stackage.org/package/life-sync/badge/lts)](http://stackage.org/lts/package/life-sync)\n[![Stackage
  Nightly](http://stackage.org/package/life-sync/badge/nightly)](http://stackage.org/nightly/package/life-sync)\n\n`life-sync`
  is a CLI tool that makes it easier to synchronize a repository of \npersonal config
  files across multiple machines.\n\n## Motivation\n\nYou might have some configuration
  files with different settings for your system.\nFor example:\n\n1. Preferred settings
  for your editors (Spacemacs, Vim, etc.).\n2. Useful bash aliases and other miscellaneous
  shell settings.\n3. Git configuration.\n\nAnd much more! But sometimes you start
  working from a fresh machine without\nhaving your settings within reach, as in these
  situations:\n\n1. You bought a new PC or laptop.\n2. You reinstalled the operating
  system on your machine.\n3. You were given a new laptop at work.\n\nEvery time this
  happens, you need to walk through the tedious process of copying\nyour data again.
  It's a well-known practice to\n[store configs in a `dotfiles` GitHub repository](https://dotfiles.github.io/).\nAnd
  `life-sync` makes it much easier to maintain this repository! With a single\ncommand,
  your can copy every file and directory from your `dotfiles` repository to\nyour
  machine. Or update your remote `dotfiles` repository after multiple local\nchanges
  to different files.\n\n## Prerequisites\n\n* [`git`](https://git-scm.com)\n* [`hub`](https://github.com/github/hub)\n*
  SSH access to Github configured\n\n## Installation\n\nInstall with one simple command:\n\n```shell\n$
  cabal install life-sync\n```\n\nor\n\n```shell\n$ stack install life-sync-1.0\n```\n\nYou
  can turn on bash auto-completion by running the following command:\n\n```\n$ source
  <(life --bash-completion-script `which life`)\n```\n\n## Usage\n\nAfter installing
  `life-sync` you need to call the command `life` with specified options:\n\n```\n$
  life --help\nUsage: life COMMAND\n  life-sync synchronize your personal configs\n\nAvailable
  options:\n  -h,--help                Show this help text\n\nAvailable commands:\n
  \ init                     Initialize GitHub repository named 'dotfiles' if you\n
  \                          don't have one.\n  add                      Add file
  or directory to the life configuration.\n  remove                   Remove file
  or directory from the life configuration.\n  push                     Updates GitHub
  repository from local state and push\n                           the latest version.\n
  \ pull                     Updates local state of '.life' and 'dotfiles' from\n
  \                          GitHub repository.\n\n`life init` usage: life init OWNER\n
  \ OWNER                    Your github user name\n\n`life add` usage: life add ((-f|--file
  FILE_PATH) | (-d|--dir DIRECTORY_PATH))\n  -f,--file FILE_PATH      File to add\n
  \ -d,--dir FILE_PATH       Directory to add\n\n`life remove` usage: life remove
  ((-f|--file FILE_PATH) | (-d|--dir DIRECTORY_PATH))\n  -f,--file FILE_PATH      File
  to remove\n  -d,--dir FILE_PATH       Directory to remote\n\n`life push` usage:
  life push\n\n`life pull` usage: life pull OWNER [-f|--no-file FILE_PATH] [-d|--no-dir
  FILE_PATH]\n  OWNER                    Your github user name\n  -f,--no-file FILE_PATH
  \  Excluding these specific files from copying\n  -d,--no-dir FILE_PATH    Excluding
  these specific directories from copying\n\n```\n\n> **NOTE:** If a command takes
  a path to a file or a directory as an\n> argument, the path should be specifed relative
  to the home directory.\n\n`life-sync` keeps the structure of your `dotfiles` repository
  in its own file\ncalled `.life` which is also stored in your `dotfiles` repository.\n\nYou
  can see an example of a `dotfiles` repository maintained by `life-sync` here:\n\n*
  [ChShersh/dotfiles](https://github.com/ChShersh/dotfiles)\n\n## Examples\n\n###
  Create a `dotfiles` repository for the first time\n\n```\n$ life init MyGithubName\n```\n\n###
  Track a new file or directory\n\nTo track a file:\n\n```\n$ life add -f path/to/file/relative/from/home\n```\n\nTo
  track a directory:\n\n```\n$ life add -d path/to/dir/relative/from/home\n```\n\nTo
  stop tracking some file, use `life remove` instead.\n\n### Push all changes to the
  remote repository\n\n```\n$ life push\n```\n\n### Pull all changes from the remote
  repository\n\nTo pull every file and directory:\n\n```\n$ life pull ChShersh\n```\n\nTo
  pull everything except some files or some directories:\n\n```\n$ life pull ChShersh
  --no-file some/file --no-dir some/dir\n```\n"
license-name: MIT
