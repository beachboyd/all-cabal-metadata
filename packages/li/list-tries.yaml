homepage: http://iki.fi/matti.niemenmaa/list-tries/
changelog-type: text
hash: fbe6291b0dd5c0994842ed9cbed4bebf55a561cb19e18295d40140079761c147
test-bench-deps:
  test-framework-hunit: ! '>=0.2 && <0.4'
  test-framework: ! '>=0.2 && <0.9'
  base: ! '>=4.3 && <4.12'
  test-framework-quickcheck2: ! '>=0.2 && <0.4'
  list-tries: -any
  HUnit: ! '>=1.2 && <1.7'
  binary: ! '>=0.5 && <0.10'
  ChasingBottoms: ! '>=1.2 && <1.4'
  QuickCheck: ! '>=2.1 && <2.12'
  template-haskell: ! '>=2.3 && <2.14'
maintainer: Matti Niemenmaa <matti.niemenmaa+list-tries@iki.fi>
synopsis: ! 'Tries and Patricia tries: finite sets and maps for list keys'
changelog: ! "2018-03-20, 0.6.5:\n\tUpdated dependencies and code for GHC 8.4.1 and
  QuickCheck-2.11, thanks\n\tagain to Mikhail Glushenkov.\n\n2017-05-27, 0.6.4:\n\tUpdated
  dependencies for GHC 8.2.1 (release candidate 2) and\n\tbinary-0.9, thanks to Mikhail
  Glushenkov for helping with this.\n\n\tAlso a code change due to a newly problematic
  type inference.\n\n2016-07-18, 0.6.3:\n\tDependency update to allow dlist-0.8.\n\n2016-06-28,
  0.6.2:\n\tUpdated dependencies for GHC 8.0.1.\n\n\tAdded Semigroup instances, bringing
  in a new dependency on semigroups\n\ton pre-8.0 GHC versions.\n\n2015-04-03, 0.6.1:\n\tFixed
  build on base < 4.8.\n\n2015-03-28, 0.6.0:\n\tUpdated dependencies for GHC 7.10.\n\n\tFixed
  library vs. test executable dlist dependency mismatch.\n\n\tRenamed Map.toList to
  toListKV to avoid conflicts with the new Foldable\n\tclass. Also renamed Map.fromList
  and Map.fromListWith to fromListKV and\n\tfromListKVWith to match. Thanks to davean
  for the patch.\n\n\tAdded Cabal source-repository metadata, pointing to GitHub.\n\n2014-03-20,
  0.5.2:\n\tUpdated dependencies, for GHC 7.8 and other new packages.\n\n2013-05-10,
  0.5.1:\n\tFix cabal build.\n\n\tMinor documentation clarification.\n\n\tUpdate binary
  dependency.\n\n2013-05-09, 0.5:\n\tAdded the 'lookupPrefix' and 'deleteSuffixes'
  functions, of which especially\n\tthe former was an embarrassing omission:\n\n\t\tlookupPrefix
  \  :: [k] -> trie map k a -> trie map k a\n\t\tdeleteSuffixes :: [k] -> trie map
  k a -> trie map k a\n\n\tFixed the documentation headers to refer to 's' instead
  of 'k' as what we\n\tuse for the length of the given key.\n\n\tFixed documentation
  of 'deletePrefix': its complexity is O(s), not O(m).\n\n\tSome dependency updates.\n\n2012-10-18,
  0.4.3:\n\tDependency updates for GHC 7.6 and otherwise.\n\n2012-05-23, 0.4.2:\n\tDependency
  updates for GHC 7.4, thanks to Anders Kaseorg.\n\n2011-03-17, 0.4.1:\n\tDependency
  update and Cabalization of the test executable, thanks to JP\n\tMoresmau.\n\n2010-09-11,
  0.4:\n\tFixed documentation of the 'deletePrefix' function: if the given key is
  not\n\ta prefix of any key, an empty, not unchanged, map/set is returned. Thanks
  to\n\tBrian Bloniarz for the bug report.\n\n\tFixed bug in the Patricia version
  of 'deletePrefix' causing it to not delete\n\tanything if the prefix to be deleted
  was a proper prefix of the common\n\tprefix.\n\n\tChanged 'children' to return the
  map as-is instead of converting it into a\n\tlist first:\n\n\t\tchildren :: Trie
  trie st map k => trie map k a -> CMap trie map k a\n\n\tAdded the 'children1' function
  as a single-level equivalent of 'children',\n\tmore directly reflecting the structure
  of the non-Patricia tries. Requested\n\tby Brian Bloniarz.\n\n\t\tchildren1 :: Trie
  trie st map k => trie map k a -> CMap trie map k a\n\n2010-09-09, 0.3:\n   Fixed
  strictness of the strict versions of the following non-Patricia\n   functions: insert,
  adjust, alter, union, difference, intersection,\n   mapInKeys; as well as the Patricia
  versions of insert and adjust. Thanks to\n   Brian Bloniarz for the bug report.\n\n
  \  Applied the static argument transformation throughout, improving\n   performance.\n\n
  \  Dropped support for containers < 0.3; GHC 6.12 has been out long enough, and\n
  \  support for older versions is too crippled to make it worthwhile.\n\n2010-04-06,
  0.2:\n\tDependency update, nothing more.\n\n2009-07-05, 0.1:\n\tAll tries are now
  instances of Binary, thanks to Gregory Crosswhite. Adds a\n\tdependency on the 'binary'
  library as well as the following two methods to\n\tthe Map class in Base.Map:\n\n\t\tserializeToList
  \    :: m k a -> [(k,a)]\n\t\tdeserializeFromList :: [(k,a)] -> m k a\n\n2009-04-21,
  0.0:\n\tInitial release.\n"
basic-deps:
  base: ! '>=4.3 && <4.12'
  dlist: ! '>=0.4 && <0.9'
  containers: ! '>=0.4 && <0.6'
  binary: ! '>=0.5 && <0.10'
all-versions:
- '0.0'
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.5'
- '0.5.1'
- '0.5.2'
- '0.6.0'
- '0.6.1'
- '0.6.2'
- '0.6.3'
- '0.6.4'
- '0.6.5'
author: Matti Niemenmaa
latest: '0.6.5'
description-type: haddock
description: ! 'This library provides implementations of finite sets and maps for
  list keys

  using tries, both simple and of the Patricia kind. In most (or all? sorry,

  haven''t benchmarked yet) cases, the Patricia tries will have better

  performance, so use them unless you have reasons not to.


  The data types are parametrized over the map type they use internally to

  store the child nodes: this allows extending them to support different kinds

  of key types or increasing efficiency. Child maps are required to be

  instances of the Map class in Data.ListTrie.Base.Map. Some operations

  additionally require an OrdMap instance.


  The Eq, Ord, and Enum modules contain ready structures for key types which

  are instances of those classes, using lists of pairs, Data.Map, and

  Data.IntMap respectively.'
license-name: BSD3
