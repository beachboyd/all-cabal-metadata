homepage: https://github.com/soostone/charade
changelog-type: ''
hash: 31cad857ce9cc9af1dfa487c99a317bd336e768519caada50f0a9fce345a19a7
test-bench-deps: {}
maintainer: doug.beardsley@soostone.com
synopsis: Rapid prototyping websites with Snap and Heist
changelog: ''
basic-deps:
  snap: ==0.13.*
  base: ==4.*
  configurator: ! '>=0.2 && <0.4'
  text: ! '>=0.11 && <1.2'
  filepath: ! '>=1.3 && <1.4'
  containers: ==0.5.*
  snap-server: ! '>=0.9 && <0.10'
  xmlhtml: ==0.2.*
  lens: ! '>=4.0 && <4.5'
  snap-core: ! '>=0.9 && <0.10'
  mtl: ! '>=2.0 && <2.3'
  snap-extras: ! '>=0.7 && <0.10'
  heist: ! '>=0.13 && <0.15'
  random: ! '>=1.0 && <1.2'
  QuickCheck: ==2.7.*
all-versions:
- '0.1'
- 0.1.1.1
- 0.1.1.2
author: Doug Beardsley
latest: 0.1.1.2
description-type: markdown
description: ! "charade [![Build Status](https://travis-ci.org/Soostone/charade.svg?branch=master)](https://travis-ci.org/Soostone/charade)\n=======\n\nHaskell
  program that fills Heist templates with randomly generated data in\nsupport of rapid
  UI prototyping.\n\nTo see charade in action follow these steps:\n\n1. `git clone
  https://github.com/Soostone/charade.git`\n1. `cd charade`\n1. `cabal install`\n1.
  `dist/build/charade/charade`\n1. Point your browser at http://localhost:8000\n1.
  Look in templates/index.tpl to see how this example works\n\nCharade lets you prototype
  a site's HTML/CSS/JavaScript using *exactly* the\nHeist template markup that you
  will have in your final site, without needing\nto write any of the backend code
  to implement your splices.  Every time you\nuse a tag implemented as a Haskell splice,
  just include the \"fake\" attribute\ntelling charade how to render dummy data for
  that tag.\n\nCharade decouples the work of designers and backend developers.  A
  site could\nbe started by designers who have a good picture of what they want the\nfront-end
  interface to look like using just a small amount of knowledge about\nsplice tags
  should be structured.  Then developers could be hired to fill in\nthe back end.
  \ Alternatively, back end developers could start by developing a\nsite's data model
  and back end.  Then they could hire designers to build the\nlook and feel without
  needing to set up any back end database infrastructure\nor give them an application
  binary.  This allows designers to work in an\nenvironment much closer to what will
  ultimately be used in production.\n\nThe charade application is a snap application
  that serves Heist templates\nand static files.  The charade application allows you
  to add a \"fake\"\nattribute anywhere in your HTML to generate fake data in the
  place of that\ntag.  For instance, in the following paragraph charade will replace
  the\n\\<myParagraph\\> tag with a paragraph of lorem ipsum text.  \n\n    <p>\n
  \     <myParagraph fake=\"lorem\"/>\n    </p>\n\nCharade provides the following
  built-in primitives for generating dummy\ncontent with the \"fake\" attribute:\n\n*
  bool - true/false\n* yesno - yes/no\n* int \\<min\\> \\<max\\> - an integer in the
  interval [min,max]\n* decimal \\<min\\> \\<max\\> - a decimal in the interval [min,max]\n*
  list - a list of 5 copies of its child nodes\n* list \\<count\\> - a list of \\<count\\>
  copies of its child nodes\n* list \\<min\\> \\<max\\> - a randomly sized list\n*
  lorem - a paragraph of lorem ipsum text\n* lorem \\<count\\> - a paragraph of lorem
  ipsum text repeated \\<count\\> times\n* first-name - randomly chosen English first
  names\n* last-name - randomly chosen English last names\n* enum - arbitrary enumerations
  specified in a file\n\nThe charade application also requires a file \"charade.cfg\"
  in the current\ndirectory for configuration.  The config file should look like this:\n\n
  \   # Select whether random data is generated every request or only once when the\n
  \   # app is initialized.  If you specify \"dynamic\" here, then new random data\n
  \   # will be generated every request.  If you specify \"static\", then random data\n
  \   # will be generated once and every request will see the same data.\n    mode
  = \"dynamic\"\n    \n    # Directory holding Heist templates\n    tdir = \"snaplets/heist/templates\"\n
  \   \n    # List of files with custom enumerations for random generation\n    enums
  = [\"titles.txt\"]\n    \n    # Directory where static resources are located\n    staticDir
  = \"static\"\n    \n    # Route for accessing static data\n    staticRoute = \"\"\n"
license-name: BSD-3-Clause
