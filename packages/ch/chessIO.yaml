homepage: https://github.com/mlang/chessIO#readme
changelog-type: markdown
hash: 635aaba50a8bbf6708054391471481b462ce219b8a95066d1d718c42d9836874
test-bench-deps:
  bytestring: -any
  o-clock: -any
  MonadRandom: -any
  extra: -any
  stm: -any
  base: '>=4.10 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  megaparsec: '>=9.0'
  process: -any
  containers: -any
  binary: -any
  chessIO: -any
  file-embed: -any
  attoparsec: -any
  prettyprinter: -any
  random: -any
  parallel: -any
  vector: -any
  directory: -any
maintainer: mlang@blind.guru
synopsis: Basic chess library
changelog: |+
  # Releases

  ## chessIO 0.5.0.0

  - Split SAN parsing code into a separate module.
  - Adapt to VisualStream change in Megaparsec >= 9.
  - Use Maybe to indicate that bestmove in UCI can be empty.
  - instance Storable QuadBitboard

  ## chessIO 0.4.0.0

  - Support for letting UCI engines ponder.
  - Avoid a branch to further speed up move generation.

basic-deps:
  bytestring: -any
  o-clock: -any
  MonadRandom: -any
  extra: -any
  haskeline: -any
  stm: -any
  base: '>=4.10 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  megaparsec: '>=9.0'
  process: -any
  containers: -any
  binary: -any
  mtl: -any
  chessIO: -any
  file-embed: -any
  attoparsec: -any
  prettyprinter: -any
  optparse-applicative: -any
  random: -any
  vector: -any
all-versions:
- 0.0.0.0
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
- 0.3.1.1
- 0.3.1.2
- 0.4.0.0
- 0.5.0.0
author: Mario Lang
latest: 0.5.0.0
description-type: markdown
description: |
  # A Haskell chess library and console UCI frontend program

  `chessIO` is a Haskell library for working with chess positions and moves,
  and a console frontend program (cboard) to work with UCI compatible
  chess engines.

  ## The Library

  The main module provided by the library is
  [Game.Chess](https://hackage.haskell.org/package/chessIO/docs/Game-Chess.html),
  which defines data types and functions for working with chess positions
  and moves. It offers a fully compliant move generator and parsing for
  and printing positions in [Forsyth-Edwards
  Notation](https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation)
  and moves in [Algebraic
  Notation](https://en.wikipedia.org/wiki/Algebraic_notation_(chess)).

  Module
  [Game.Chess.UCI](https://hackage.haskell.org/package/chessIO/docs/Game-Chess-UCI.html)
  provides functionality to run an external process which understands the
  Universal Chess Interface protocol from within Haskell.

  ## Console frontend for the Universal Chess Interface protocl

  `cboard` is a simple console (text-mode) frontend for interacting with
  chess engines (like stockfish or glaurung) which make use of the UCI
  protocol.

  To launch a chess engine, simply pass its executable name and arguments
  to cboard. For instance, `cboard stockfish`.
license-name: BSD-3-Clause
