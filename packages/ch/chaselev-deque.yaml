homepage: https://github.com/rrnewton/haskell-lockfree/wiki
changelog-type: ''
hash: 7c2ae6933897c7323396c97f5d5e8f3463fc5f312a9a829d39fc7918a645e48f
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  base: ! '>=4.4.0.0 && <5'
  abstract-deque: ! '>=0.3 && <0.4'
  HUnit: -any
  array: -any
  containers: -any
  ghc-prim: -any
  atomic-primops: ! '>=0.5.0.2'
  abstract-deque-tests: ! '>=0.3'
  vector: -any
maintainer: rrnewton@gmail.com
synopsis: Chase & Lev work-stealing lock-free double-ended queues (deques).
changelog: ''
basic-deps:
  base: ! '>=4.4.0.0 && <5'
  abstract-deque: ! '>=0.3 && <0.4'
  array: -any
  ghc-prim: -any
  atomic-primops: ! '>=0.5.0.2'
  transformers: -any
  vector: -any
all-versions:
- 0.1.2
- 0.1.3
- '0.4'
- 0.5.0.2
- 0.5.0.3
- 0.5.0.5
author: Ryan R. Newton, Edward Kmett
latest: 0.5.0.5
description-type: haddock
description: ! 'A queue that is push/pop on one end and pop-only on the other.  These
  are commonly

  used for work-stealing.

  This implementation derives directly from the pseudocode in the 2005 SPAA paper:


  http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.170.1097&rep=rep1&type=pdf'
license-name: BSD-3-Clause
