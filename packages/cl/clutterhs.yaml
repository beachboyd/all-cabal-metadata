homepage: ''
changelog-type: ''
hash: 559a2afd6b199269ce4a5f96f763a6b9ae5e10eb5e0ffeb2b20f203e546346d7
test-bench-deps: {}
maintainer: arsenm2@rpi.edu
synopsis: Bindings to the Clutter animation library
changelog: ''
basic-deps:
  base: ! '>3 && <5'
  haskell98: -any
  glib: ! '>=0.10.1'
  X11: -any
  cairo: -any
  array: -any
  mtl: -any
  gtk: ! '>=0.10.1'
all-versions:
- '0.1'
author: Matthew Arsenault
latest: '0.1'
description-type: text
description: ! "=== Clutterhs README ==\n\nBindings for the Clutter (http://clutter-project.org/)
  animation\nlibrary for Haskell.\n\nThis currently depends on Gtk2hs from darcs,
  mostly using the\nGlib/GObject bindings.\n\ngit: http://jayne.hortont.com/git/cgit.cgi/clutterhs.git/\n\nThe
  closest things to examples are in clutter/demo in the git repo,\nthe most useful
  of which is probably ClutterGame.\n\nThis library is currently incomplete. Most
  of the core parts of\nClutter are bound. Basic actors and animations should all
  be bound\n(however incompletely tested). Documentation is partially complete. It\nis
  mostly copied from the Clutter C documentation, and some parts have\nnot been Haskellified
  yet. There's also quite a bit of mess internally\nthat will be cleaned up eventually.\n\nIf
  you have any comments, complaints, or suggestions on the API or\nanything, feel
  free to email me (arsenm2@rpi.edu).\n\nThe only major components that are somewhere
  between entirely unbound\nor effectively so are ClutterUnits, ClutterModel related
  things, and\nperhaps ClutterScriptable and Animatable. Also many random lower level\nfunctions,
  and things involving threads or timeouts are unbound. Also\nI haven't started binding
  COGL yet, but that's also planned.\n\nI've only tested on Linux, and only partially
  have the X11 backend\nspecific stuff bound (which you also can't yet disable, so
  this is\nmore or less X11-backend-only for right now). Clutter-gtk is in the source\ntree,
  but pretend it doesn't exist since nothing is actually there\nright now.\n\nAs another
  GObject based GUI library, use should be similar to gtk2hs\nin many ways. As a simple
  example of animations, you do something like\n\n  animate rectangle EaseOutBounce
  3000 [ actorX :-> rnd1 * w,\n                                         actorY :->
  rnd2 * h / 2 + h / 2,\n                                         actorRotationAngleZ
  :-> ang,\n                                         actorOpacity :-> 0 ]\n\nwhere
  the last argument to the animate function is a list of\nattributes and their ending
  values in the animation. Any writable\nproperty of the Clutter Actor you are animating
  should work, paired\nwith it's ending value with ':->'. The best example currently
  would be\nClutterGame.hs in the demo folder. Better examples and a tutorial are\nplanned.\n\nIn
  general, anything in the Clutter C API that takes a string name of\na property and
  a Gvalue uses an Attribute.\n\n\n"
license-name: LicenseRef-LGPL
