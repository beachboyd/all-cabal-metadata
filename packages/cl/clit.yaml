homepage: https://github.com/vmchale/command-line-tweeter#readme
changelog-type: ''
hash: d95e889190b3faf6c55dbee58c738696d3297655919872307826b38697a8e8e5
test-bench-deps: {}
maintainer: tmchale@wisc.edu
synopsis: Post tweets from stdin
changelog: ''
basic-deps:
  http-client: ! '>=0.5.6.1 && <0.6'
  MissingH: ! '>=1.4.0.1 && <1.5'
  bytestring: ! '>=0.10.8.1 && <0.11'
  ansi-wl-pprint: ! '>=0.6.7.3 && <0.7'
  split: ! '>=0.2.3.1 && <0.3'
  base: ! '>=4.9.1.0 && <4.10'
  text: ! '>=1.2.2.1 && <1.3'
  megaparsec: ! '>=5.2.0 && <5.3'
  data-default: ! '>=0.7.1.1 && <0.8'
  lens: ! '>=4.15.1 && <4.16'
  authenticate-oauth: ==1.6.*
  clit: ! '>=0.4.0.6 && <0.5'
  http-client-tls: ! '>=0.3.4 && <0.4'
  optparse-applicative: ! '>=0.13.2.0 && <0.14'
  http-types: ! '>=0.9.1 && <0.10'
  directory: ! '>=1.3.0.0 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.2.2
- 0.2.2.3
- 0.2.2.4
- 0.2.2.5
- 0.2.2.6
- 0.2.3.0
- 0.2.3.1
- 0.3.0.1
- 0.3.0.2
- 0.3.0.3
- 0.3.1.0
- 0.3.2.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.2
- 0.4.0.3
- 0.4.0.4
- 0.4.0.5
- 0.4.0.6
author: Vanessa McHale
latest: 0.4.0.6
description-type: markdown
description: ! "# Command Line Interface Tweeter\n\n![Displaying a user timeline in
  a terminal.](https://raw.githubusercontent.com/vmchale/command-line-tweeter/master/screenshot.png)\n##
  Config\nGenerate a token to authorize access to your twitter account by following
  the guide [here](https://dev.twitter.com/oauth/overview/application-owner-access-tokens)\n\nThen
  place your API keys and OAuth tokens in a file `~/.cred`, separated by a line break:\n\n```\napi-key:
  API_KEY_HERE\napi-sec: API_SECRET_HERE\ntok: OAUTH_TOKEN_HERE\ntok-sec: TOKEN_SECRET_HERE\n```\n\n##
  Installation\n\nIf you're on Linux/Windows the best way is probably to download
  the binaries\nfrom the releases page [here](https://github.com/vmchale/command-line-tweeter/releases).\n\nTo
  build from source, install [haskell stack](https://docs.haskellstack.org/en/stable/README/#how-to-install);
  on unix systems this is as simple as\n\n```\nwget -qO- https://get.haskellstack.org/
  | sh\n```\n\nThen type `stack install` in the directory and it will generate an
  executable called `tweet`, which is what we want.\n\n## Use\n\n### View Profiles
  and timelines\n\nTo get your timeline, simply type:\n\n```\ntweet view\n```\n\nTo
  view a user's profile, type e.g.\n\n```\ntweet user pinepapplesmear --color\n```\n\n###
  Sending tweets\nTo tweet from stderr, run a command that pipes stderr to stdin,
  i.e.\n\n```\nYOUR_BUILD_COMMAND 2>&1 >/dev/null | tweet input\n```\n\nThe `tweet`
  executable reads from stdIn only, but you can view the options (replies, number
  of tweets to thread, etc.) with\n\n```\ntweet --help\n```\n\nThis script powers
  the twitter account [@my\\_build\\_errors](https://twitter.com/my_build_errors)
  for instance. There's an example bash script for in `bash/example`\n\n### Viewing
  your timeline\n\nYou can also use\n\n```\ntweet view\n```\n\nor \n\n```\ntweet view
  --color\n```\n\nto view your own timeline.\n\n### Completions\n\nThe directory `bash/`
  has a `mkCompletions` script to allow command completions for your convenice.\n\n##
  Library\n\nA haskell package is included. It's fairly easy to use once you have
  the credentials set up, with two main functions: `thread` and `basicTweet`: the
  first for threading your own tweets or replying to someone else's and the second
  for just tweeting.\n\n### Finer details\n\nThe function `tweetData` will tweet an
  object of type `Tweet`. Its use is pretty self-explanatory, but how to best form
  `Tweet`s is not immediately obvious.\n\n`Tweet` is an instance of `Default` so you
  can use `def` to get an empty tweet replying to nobody and not fetching extended
  user data. This is especially useful if you want to use lenses and avoid ugly record
  syntax, e.g.\n\n```\nset status \"This is the new status field\" $ def\n```\n\nwill
  give you a `Tweet` with sensible defaults and the desired text.\n\n### Haskell\n\nThis
  \n"
license-name: BSD-3-Clause
