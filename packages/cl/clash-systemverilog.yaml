homepage: http://www.clash-lang.org/
changelog-type: markdown
hash: 34f8d72ee48113a8e6299e01345014c9c81219e7b323107c4a2e6061ef3e4488
test-bench-deps: {}
maintainer: Christiaan Baaij <christiaan.baaij@gmail.com>
synopsis: CAES Language for Synchronous Hardware - SystemVerilog backend
changelog: ! "# Changelog for the [`clash-systemverilog`](http://hackage.haskell.org/package/clash-systemverilog)
  package\n\n## 0.7.2 *April 25th 2017*\n* New features:\n  * Sum-of-product types:
  unused bits now \"don't-care\" [#212](https://github.com/clash-lang/clash-compiler/commit/fabf745793491ce3baf84ef0066b4ccf0753d503)\n\n##
  0.7.1 *April 11th 2017*\n* Fixes bugs:\n  * Incorrect unsigned->signed wrap-around
  and conversion\n  * Use unpacked array syntax in array literals\n  * Add braces
  when converting unpacked to packed arrays\n  * Fixed `rotateLeftS` systemverilog
  template\n  * Do not generate null-slices\n\n## 0.7 *January 16th 2017*\n* New features:\n
  \ * Support `clash-prelude` 0.11\n\n## 0.6.10 *October 17th 20168\n* Fixes bugs:\n
  \ * CLaSH.Sized.Vector.imap primitive gets indices in reverse order\n\n## 0.6.9
  *August 18th 2016*\n* Fixes bugs:\n  * Fix primitives for {Signed,Unsigned} rotateL#
  and rotateR# [#169](https://github.com/clash-lang/clash-compiler/issues/169)\n\n##
  0.6.8 *August 3rd 2016*\n* Fixes bugs:\n  * Fix primitive for CLaSH.Sized.Internal.Signed.mod#
  and GHC.Type.Integer.modInteger [#164](https://github.com/clash-lang/clash-compiler/issues/164)\n\n##
  0.6.7 *July 15th 2016*\n* New features:\n  * Support clash-lib-0.6.18\n\n## 0.6.6
  *March 11th 2016*\n* New features:\n  * Support `clash-lib` 0.6.11\n  * Generated
  structs are packed\n  * Elements of arrays are packed\n* Fixes bugs:\n  * Vivado
  fails to infer block ram [#127](https://github.com/clash-lang/clash-compiler/issues/127)\n
  \   * Users must use the `-clash-hdlsyn Vivado` flag in order to generate Xilinx
  Vivado specific HDL for which Vivado can infer block RAM.\n\n## 0.6.5 *January 29th
  2016*\n* New features:\n  * Support clash-lib-0.6.9\n  * Support for `Debug.Trace.trace`,
  thanks to @ggreif\n* Fixes bugs:\n  * BlockRAM elements must be bit vectors [#113](https://github.com/clash-lang/clash-compiler/issues/113)\n\n##
  0.6.4 *January 13th 2016*\n* New features:\n  * Support for Haskell's: `Char`, `Int8`,
  `Int16`, `Int32`, `Int64`, `Word`, `Word8`, `Word16`, `Word32`, `Word64`.\n  * Int/Word/Integer
  bitwidth for generated SystemVerilog is configurable using the `-clash-intwidth=N`
  flag, where `N` can be either 32 or 64.\n\n## 0.6.3 *November 17th 2015*\n* Fixes
  bugs:\n  * Integer literals missing \"32'sd\" prefix when used in assignments\n\n##
  0.6.2 *October 21st 2015*\n* New features:\n  * Support `clash-prelude` 0.10.2\n\n##
  0.6.1 *October 16th 2015*\n* New features:\n  * Support for `clash-prelude` 0.10.1\n\n##
  0.6 *October 3rd 2015*\n* New features:\n  * Support `clash-prelude-0.10`\n\n##
  0.5.10 *September 21st 2015*\n* New features:\n  * Report simulation time in assert
  messages\n\n## 0.5.9 *September 14 2015*\n* Support for clash-lib-0.5.12\n\n## 0.5.8
  *September 7th 2015*\n* Fixes bugs:\n  * Fix primitive for CLaSH.Sized.Internal.Signed.size#
  [#72](https://github.com/clash-lang/clash-compiler/pull/72)\n  * rem and quot on
  Signed are broken [#73](https://github.com/clash-lang/clash-compiler/issues/73)\n\n##
  0.5.7 *June 26th 2015*\n* Fixes bug:\n  * Incorrect primitive for `CLaSH.Prelude.Testbench.assert'`\n
  \ * Incorrect primitive for `CLaSH.Sized.Vec.index_int`\n  * Sometimes created incorrect
  nested `generate` statements\n\n## 0.5.6 *June 25th 2015*\n* New features:\n  *
  Support `clash-prelude-0.9`\n\n* Fixes bug:\n  * Can not operate \"shiftR\" on Int
  [#63](https://github.com/clash-lang/clash-compiler/issues/63)\n  * Fail to generate
  verilog when using \"quot\" and \"div\" on Index [#64](https://github.com/clash-lang/clash-compiler/issues/64)\n\n##
  0.5.5 *June 3rd 2015*\n* New features:\n  * Compile against `clash-lib-0.5.6`\n
  \ * Generated component names are prefixed by the name of the module containing
  the `topEntity`\n\n## 0.5.4 *May 10th 2015*\n* New features:\n  * Generate smarter
  labels for `register` and `blockRam` blackboxes to make finding longest paths easier\n\n##
  0.5.3 *May 5th 2015*\n* Fixes bugs:\n  * Incorrect implementation of rotateL and
  rotateR blackbox for BitVector\n\n## 0.5.2 *May 1st 2015*\n* New features:\n  *
  Support wrapper generation\n\n## 0.5.1 *April 20th 2015*\n* Update to clash-prelude
  0.7.2\n\n## 0.5 *March 11th 2015*\n* Initial release\n"
basic-deps:
  clash-prelude: ! '>=0.11 && <0.12'
  clash-lib: ! '>=0.7 && <0.8'
  base: ! '>=4.6.0.1 && <5'
  unordered-containers: ! '>=0.2.3.3 && <0.3'
  text: ! '>=0.11.3.1 && <1.3'
  lens: ! '>=3.9.2 && <4.16'
  wl-pprint-text: ! '>=1.1.0.0 && <1.2'
  fgl: ! '>=5.4.2.4 && <5.6'
  mtl: ! '>=2.1.2 && <2.3'
  hashable: ! '>=1.2.1.0 && <1.3'
all-versions:
- '0.5'
- 0.5.1
- 0.5.2
- 0.5.3
- 0.5.4
- 0.5.5
- 0.5.6
- 0.5.7
- 0.5.8
- 0.5.9
- 0.5.10
- '0.6'
- 0.6.1
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.5
- 0.6.6
- 0.6.7
- 0.6.8
- 0.6.9
- 0.6.10
- '0.7'
- 0.7.1
- 0.7.2
author: Christiaan Baaij
latest: 0.7.2
description-type: markdown
description: ! "# `clash-systemverilog` - SystemVerilog backend for the CλaSH compiler\n\n
  \ * See the LICENSE file for license and copyright details\n\n# CλaSH - A functional
  hardware description language\nCλaSH (pronounced ‘clash’) is a functional hardware
  description language that\nborrows both its syntax and semantics from the functional
  programming language\nHaskell. The CλaSH compiler transforms these high-level descriptions
  to\nlow-level synthesizable VHDL, Verilog, or SystemVerilog.\n\nFeatures of CλaSH:\n\n
  \ * Strongly typed (like VHDL), yet with a very high degree of type inference,\n
  \   enabling both safe and fast prototying using consise descriptions (like\n    Verilog).\n\n
  \ * Interactive REPL: load your designs in an interpreter and easily test all\n
  \   your component without needing to setup a test bench.\n\n  * Higher-order functions,
  with type inference, result in designs that are\n    fully parametric by default.\n\n
  \ * Synchronous sequential circuit design based on streams of values, called\n    `Signal`s,
  lead to natural descriptions of feedback loops.\n\n  * Support for multiple clock
  domains, with type safe clock domain crossing.\n\n# Support\nFor updates and questions
  join the mailing list clash-language+subscribe@googlegroups.com or read the [forum](https://groups.google.com/d/forum/clash-language)\n"
license-name: BSD-2-Clause
