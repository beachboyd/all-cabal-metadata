homepage: https://github.com/uecmma/haskell-library-collections/tree/master/cli-builder
changelog-type: ''
hash: a1340027c964640a2ef70a4e94bcb1d6a523b3b3e9af5d080a3afc3352af68ee
test-bench-deps:
  filemanip: -any
  base: -any
  hspec: -any
  doctest: -any
  cli-builder: -any
  QuickCheck: -any
maintainer: developer@mma.club.uec.ac.jp
synopsis: Simple project template from stack
changelog: ''
basic-deps:
  exceptions: ! '>=0.8.0.2'
  either: -any
  base: ! '>=4.7 && <5'
  transformers: ! '>=0.3.0.0 && <0.6'
  optparse-applicative: ! '>=0.12 && <0.14'
all-versions:
- 0.1.0
author: uecmma
latest: 0.1.0
description-type: markdown
description: ! "# CLI Builder\n\nThis packages contains builders to make cli application
  easily based `optparse-applicative`.\n\n## Getting Started\n\nHere is a simple example:\n\n```haskell\n{-#
  LANGUAGE RecordWildCards #-}\n\nimport System.CLI.Builder\n\ndata Options = Options\n
  \ { isSampleOption :: Bool\n  } deriving (Eq, Show)\n\noptionsParser :: OptionParser
  Options\noptionsParser = Options\n  <$> switch (long \"sample\" <> help \"Sample
  switch\")\n\ncliInfo :: CLIInfo\ncliInfo = baseCLIInfo \"Simple CLI\" \"Example
  for simple CLI\"\n\nrun :: Options -> IO ()\nrun Options{..} = do\n  putStrLn \"Sample
  application\"\n  putStrLn $ \"Is sample: \" ++ show isSampleOption\n\nmain :: IO
  ()\nmain = buildSimpleCLI cliInfo optionsParser run\n```\n\nThis action is such
  as:\n\n```bash\n$ sampleApp\nSample application\nIs sample: False\n$ sampleApp --sample\nSample
  application\nIs sample: True\n$ sampleApp --help\nSimple CLI\n\nUsage: <interactive>
  [--help]\n  Example for simple CLI\n\nAvailable options:\n  --help                   Show
  this help text\n  --sample                 Sample switch\n```\n\nFor more examples,
  see [examples](examples).\n"
license-name: MIT
