homepage: https://github.com/snoyberg/mono-traversable#readme
changelog-type: markdown
hash: f84aa407b84a76f8ba502172c5ffd06753ca3134daaf8dc6dcd18614c0d31f91
test-bench-deps:
  base: ! '>=4 && <5'
  unordered-containers: -any
  hspec: ! '>=1.3'
  containers: -any
  classy-prelude: -any
  transformers: -any
  QuickCheck: -any
maintainer: michael@snoyman.com
synopsis: A typeclass-based Prelude.
changelog: ! "## 1.3.1\n\n* Add terminal IO functions\n\n## 1.3.0\n\n* Tracing functions
  leave warnings when used\n\n## 1.2.0.1\n\n* Use `HasCallStack` in `undefined`\n\n##
  1.2.0\n\n* Don't generalize I/O functions to `IOData`, instead specialize to\n  `ByteString`.
  See:\n  http://www.snoyman.com/blog/2016/12/beware-of-readfile#real-world-failures\n\n##
  1.0.2\n\n* Export `parseTimeM` for `time >= 1.5`\n\n## 1.0.1\n\n* Add the `say`
  package reexports\n* Add the `stm-chans` package reexports\n\n## 1.0.0.2\n\n* Allow
  basic-prelude 0.6\n\n## 1.0.0.1\n\n* Support for safe-exceptions-0.1.4.0\n\n## 1.0.0\n\n*
  Support for mono-traversable-1.0.0\n* Switch to safe-exceptions\n* Add monad-unlift
  and lifted-async\n\n## 0.12.8\n\n* Add (<&&>),(<||>) [#125](https://github.com/snoyberg/classy-prelude/pull/125)\n\n##
  0.12.7\n\n* Concurrency: reexport `Control.Concurrent.Lifted` and provide `yieldThread`\n\n##
  0.12.6\n\n* Regeneralize intercalate [#119](https://github.com/snoyberg/classy-prelude/pull/119)\n*
  Add missing exports for `traverse_` and `for_`\n* Generalize `mapM_` and `forM_`
  for GHC 7.10\n\n## 0.12.5.1\n\n* Support for QuickCheck 2.8.2\n\n## 0.12.5\n\n*
  Expose `Alternative` and `optional`\n\n## 0.12.4\n\n* Expose `traverse_` and `for_`\n\n##
  0.12.3\n\n* mono-traversable-0.9.3 support\n\n## 0.12.2\n\nadd `errorM`, `terrorM`,
  and `terror`\n\n## 0.12.0\n\n* Drop system-filepath\n\n## 0.11.1.1\n\n* Compatibility
  with time >= 1.5 [#100](https://github.com/snoyberg/classy-prelude/pull/100)\n\n##
  0.11.1\n\n* Fix deprecation warnings for `elem`\n\n## 0.11.0\n\n* Upgrade to mutable-containers
  0.3\n* Include dlist support\n\n## 0.10.5\n\n* Export `Data.Mutable`\n\n## 0.10.4\n\n*
  Expose all of Data.Functor\n\n## 0.10.3\n\n* Expose `liftA` functions and `<**>`
  [#94](https://github.com/snoyberg/classy-prelude/pull/94)\n\n## 0.10.2\n\n* Provide
  `foldMap` and `fold` as synonyms for `concatMap` and `concat`.\n* Switch to more
  general `Traversable`-based functions (`sequence_` in particular).\n"
basic-deps:
  exceptions: ! '>=0.5'
  bytestring: -any
  stm: -any
  base: ! '>=4 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  basic-prelude: ! '>=0.4'
  safe-exceptions: ! '>=0.1.1'
  async: -any
  lifted-base: ! '>=0.2'
  mono-traversable-instances: -any
  dlist: ! '>=0.7'
  vector-instances: -any
  semigroups: -any
  containers: ! '>=0.4.2'
  bifunctors: -any
  mutable-containers: ! '>=0.3 && <0.4'
  chunked-data: ! '>=0.3'
  ghc-prim: -any
  mtl: -any
  lifted-async: ! '>=0.3'
  hashable: -any
  transformers-base: -any
  stm-chans: ! '>=3'
  monad-unlift: ! '>=0.2'
  transformers: -any
  deepseq: -any
  say: -any
  mono-traversable: ! '>=1.0'
  primitive: -any
  vector: -any
  time-locale-compat: -any
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.0.1'
- '0.3.0'
- '0.3.1'
- '0.4.0'
- '0.4.0.1'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.4'
- '0.5.0'
- '0.5.1'
- '0.5.2'
- '0.5.3'
- '0.5.4'
- '0.5.6'
- '0.5.7'
- '0.5.8'
- '0.5.9'
- '0.5.10'
- '0.6.0'
- '0.6.0.1'
- '0.7.0'
- '0.8.0'
- '0.8.0.1'
- '0.8.1'
- '0.8.1.1'
- '0.8.2'
- '0.8.3'
- '0.8.3.1'
- '0.9.0'
- '0.9.1'
- '0.9.2'
- '0.9.3'
- '0.9.4'
- '0.9.5'
- '0.10.0'
- '0.10.1'
- '0.10.2'
- '0.10.3'
- '0.10.4'
- '0.10.5'
- '0.11.0'
- '0.11.1'
- '0.11.1.1'
- '0.12.0'
- '0.12.0.1'
- '0.12.1'
- '0.12.1.1'
- '0.12.3'
- '0.12.4'
- '0.12.5'
- '0.12.5.1'
- '0.12.6'
- '0.12.7'
- '0.12.8'
- '1.0.0'
- '1.0.0.1'
- '1.0.0.2'
- '1.0.1'
- '1.0.2'
- '1.2.0'
- '1.2.0.1'
- '1.3.0'
- '1.3.1'
author: Michael Snoyman
latest: '1.3.1'
description-type: markdown
description: ! "classy-prelude\n==============\n\nA better Prelude. Haskell's Prelude
  needs to maintain backwards compatibility and has many aspects that no longer represents
  best practice. The goals of classy-prelude are:\n\n* remove all partial functions\n*
  modernize data structures\n  * generally use Text instead of String\n  * encourage
  the use of appropriate data structures such as Vectors or HashMaps instead of always
  using lists and associated lists\n* reduce import lists and the need for qualified
  imports\n\nclassy-prelude [should only be used by application developers](http://www.yesodweb.com/blog/2013/10/prelude-replacements-libraries).
  Library authors should consider using [mono-traversable](https://github.com/snoyberg/mono-traversable/blob/master/README.md),
  which classy-prelude builds upon.\n\nIt is worth noting that classy-prelude [largely
  front-ran changes that the community made to the base Prelude in GHC 7.10](http://www.yesodweb.com/blog/2014/10/classy-base-prelude).\n\nmono-traversable\n================\n\nMost
  of this functionality is provided by [mono-traversable](https://github.com/snoyberg/mono-traversable).
  Please read the README over there. classy-prelude gets rid of the `o` prefix from
  mono-traversable functions.\n\n\nText\n====\n\nLots of things use `Text` instead
  of `String`.\nNote that `show` returns a `String`.\nTo get back `Text`, use `tshow`.\n\n\nother
  functionality\n===================\n\n* exceptions package\n* system-filepath convenience
  functions\n* whenM, unlessM\n* hashNub and ordNub (efficient nub implementations).\n\n\nUsing
  classy-prelude\n====================\n\n* use the NoImplicitPrelude extension (you
  can place this in your cabal file) and `import ClassyPrelude`\n* use [base-noprelude](https://github.com/hvr/base-noprelude)
  in your project and define a Prelude module that re-exports `ClassyPrelude`.\n\n\nAppendix\n========\n\n*
  The [mono-traversable](https://github.com/snoyberg/mono-traversable) README.\n*
  [The transition to the modern design of classy-prelude](http://www.yesodweb.com/blog/2013/09/classy-mono).\n\nThese
  blog posts contain some out-dated information but might be helpful\n* [So many preludes!](http://www.yesodweb.com/blog/2013/01/so-many-preludes)
  (January 2013)\n* [ClassyPrelude: The good, the bad, and the ugly](http://www.yesodweb.com/blog/2012/08/classy-prelude-good-bad-ugly)
  (August 2012)\n\n\n\n"
license-name: MIT
