homepage: https://github.com/prikhi/wordpress-auth#readme
changelog-type: markdown
hash: 8371ac03f9ac4757143c52d9752d75ec2a5a62b61d527aad229c192fde6c41cf
test-bench-deps: {}
maintainer: pavan.rikhi@gmail.com
synopsis: Validate Wordpress Cookies & Nonces; Build Wordpress Hashes & Salts
changelog: ! '# ChangeLog


  ## v1.0.0.0


  Initial Release

'
basic-deps:
  cookie: ! '>=0.4 && <0.5'
  bytestring: ! '>=0.10 && <0.12'
  base: ! '>=4.7 && <5'
  time: ! '>=1 && <2'
  text: ! '>=1 && <2'
  cryptohash-md5: ! '>=0.11 && <0.12'
  cryptohash-sha256: ! '>=0.11 && <0.12'
  hs-php-session: ! '>=0.0.9 && <0.1'
  uri-encode: ! '>=1.5 && <1.6'
  mtl: ! '>=2 && <3'
  base16-bytestring: ! '>=0.1 && <0.2'
  http-types: ! '>=0.12 && <0.13'
all-versions:
- 1.0.0.0
author: Pavan Rikhi
latest: 1.0.0.0
description-type: markdown
description: ! '# wordpress-auth


  This package is used for validating Cookie data & Nonces from Wordpress.


  You may find it useful if you''re trying to serve a Haskell application

  alongside a Wordpress site. By validating the Cookies set by Wordpress, you

  can access the currently logged-in Wordpress user in Haskell without having

  to devise a Wordpress-to-Haskell authentication scheme.


  It includes a generalized authentication function, as well as various

  helpers, validators, & hashers if you''d like to build a custom

  authentication process.


  Servant users may want to just use the `servant-auth-wordpress` package.


  ## License


  BSD 3-clause, exceptions possible.

'
license-name: BSD-3-Clause
