homepage: https://gitlab.com/gonz/work-time#work-time
changelog-type: ''
hash: 3a964614fcad5ce70fd79163ffe0852875af53321ec5a21c192cfad1d934228b
test-bench-deps: {}
maintainer: gonz@severnatazvezda.com
synopsis: A library for parsing a chat-based work hour reporting scheme.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  text: ! '>=1.2.3.0 && <1.3'
  megaparsec: ! '>=6.4.1 && <7'
  work-time: -any
  containers: ! '>=0.5.10.2 && <0.6'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
author: Rickard Andersson
latest: '0.1.2.0'
description-type: markdown
description: ! '# work-time


  A library for extracting work hours from an ad-hoc work hour reporting format in

  (for example) Slack.


  ## Reason for existing


  We had already established an ad-hoc format for reporting work hours and tasks

  and parsing these manually was getting tedious. Hence this library.


  ## Example entry


  An entire entry will look as follows:


  ```text

  Rickard Andersson [11:16 PM]

  [28.02] 8.5h

  worked on missile guidance system

  cleaned up parsing code

  ```


  The first part is represented by a `MessageLine` and what follows is one

  `Workday` in this example.


  An entry can also look as follows:


  ```text

  steve [9:42 PM]

  [01.03] 9h

  fixed session management


  Rickard Andersson [11:16 PM]

  [28.02] 8.5h

  worked on missile guidance system

  cleaned up parsing code

  [01.03] 6h

  fixed critical bug in missile guidance system

  removed half of parsing code

  ```


  In this example we have several `Workday` in one `WorkTime`.


  ## Example report functionality


  ```haskell

  > hoursFromText testData

  Right [("RickardAndersson",14.5),("steve",9.0)]

  ```


  In the case of a `Left` being returned this will contain a more or less

  informative error message from the parsing stage of the process.'
license-name: BSD3
