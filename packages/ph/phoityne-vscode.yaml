homepage: https://github.com/phoityne/phoityne-vscode
changelog-type: markdown
hash: a2ce27bbbaa28ad565b56380505b1f8df50dd7115bf454a78a510ed4186db4e1
test-bench-deps: {}
maintainer: phoityne.hs@gmail.com
synopsis: Haskell Debug Adapter for Visual Studio Code.
changelog: ! "20180211 phoityne-vscode-0.0.21.0\n  * [MODIFY] [34](https://github.com/phoityne/phoityne-vscode/issues/34)
  : can not set breakpoint on vscode-1.20.0\n\n\n20180101 phoityne-vscode-0.0.20.0\n
  \ * [FIX] clearing frame id while handling stack trace request.\n  * [MODIFY] change
  stack trace size from 20 to 50(max).\n\n\n20171216 phoityne-vscode-0.0.19.0\n  *
  [ADD] checking hackage package version and inform on console if using lower version.\n
  \ * [MODIFY] Supporting Multi-root Workspaces. version up tasks.json.\n  * [MODIFY]
  Supporting Multi-root Workspaces. setBreakpointsRequest. \n\n\n20171112 phoityne-vscode-0.0.18.0\n
  \ * [FIX] [29](https://github.com/phoityne/phoityne-vscode/issues/29) : Space in
  filename and reload on save bug.\n  * [MODIFY] [20](https://github.com/phoityne/phoityne-vscode/issues/20)
  : During stopping on breakpoints selection is one character less.\n\n\n20171008
  phoityne-vscode-0.0.17.0\n  * [FIX] loading modules after ghci started, on ghc-8.2.1.\n
  \ * [ADD] [24](https://github.com/phoityne/phoityne-vscode/issues/24) : add variable
  \"ghciInitialPrompt\" to launch.json file.\n  * [ADD] [28](https://github.com/phoityne/phoityne-vscode/issues/28)
  : escape backslash of startup hs file path.\n  * [ADD] to set any start point, added
  startup function and arguments valiables in the launch.json file.\n\n\n20170910
  phoityne-vscode-0.0.16.0\n  * [ADD] supported ghc-8.2.0.\n  * [ADD] check hackage
  phoityen version, and show message for needs of updating.\n\n\n20170816 phoityne-vscode-0.0.15.0\n
  \ * [ADD] supported break-on-exception and break-on-error.\n  * [ADD] [5](https://github.com/phoityne/phoityne-vscode/issues/5)
  :adding ghci run enviroment variable setting. \n  * [MODIFY] [21](https://github.com/phoityne/phoityne-vscode/issues/21)
  : support evaluateName attribute for watch variable.\n\n\n20170507 phoityne-vscode-0.0.14.0\n
  \ * [ADD] [15](https://github.com/phoityne/phoityne-vscode/issues/15) : adding main
  args setting to launch.json\n  * [FIX] [16](https://github.com/phoityne/phoityne-vscode/issues/16)
  : Exit on stdin eof\n\n\n20170402 phoityne-vscode-0.0.13.0\n  * [FIX] [10](https://github.com/phoityne/phoityne-vscode/issues/10)
  : Unable to set breakpoints\n  * [FIX] [11](https://github.com/phoityne/phoityne-vscode/issues/11)
  : Debugger not progressing past IO\n  * [ADD] [12](https://github.com/phoityne/phoityne-vscode/issues/12)
  : support Column break points\n  * [MODIFY] [6](https://github.com/phoityne/phoityne-vscode/issues/6)
  : adding stopOnEntry setting on launch.json \n  * [MODIFY] : add ghci-options -fprint-evld-with-show
  to stack run command in launch.json file.\n\n\n20170205 phoityne-vscode-0.0.12.0\n
  \ * [FIX] [8](https://github.com/phoityne/phoityne-vscode/issues/8) : Unterminated
  process after leaving GHCi \n\n\n20161218 phoityne-vscode-0.0.11.0\n  * [ADD] Hit
  count break conditionに対応した。\n  * [FIX] エラー終了時にterminate eventを送信するように修正した。 \n\n\n20161009
  phoityne-vscode-0.0.10.0\n  * [MODIFY] REPL結果をイベントで返すように変更した。EvaluateResponseで返した場合は、複数行表示ができないため。
  \n  * [MODIFY] REPLにおいて、複数行の入力に対応した。 \n  * [MODIFY] REPLにおいて、デバッグ関連のコマンドを実行しないように変更した。
  \n  * [FIX] バインディング変数情報の取得において、複数行にまたがる情報のパースが失敗していた箇所を修正した。 \n\n\n20160919 phoityne-vscode-0.0.9.0\n
  \ * [ADD] ConfigurationDoneRequestに対応した。\n  * [ADD] CompletionsRequestに対応した。\n  *
  [MODIFY] Hover時の型表示を改善した。\n  * [MODIFY] Hover時のforce実行を止めた。\n  * [FIX] setBreakpointsResponse,
  setFunctionBreakpointsResponseのBodyデータにおいて、キー名を修正した。\n\n\n20160804 phoityne-vscode-0.0.8.0\n
  \ * [MODIFY] モジュール構成の変更。\n  * [MODIFY] debugger adopter interface Capabilitiesの変更に対応した。\n\n\n20160704
  phoityne-vscode-0.0.7.0\n  * [MODIFY] debugger adopter interface Capabilitiesの変更に対応した。\n
  \ * [MODIFY] debugger adopter interface StackFrameの変更に対応した。(endLin, endColumnの追加)\n
  \ * [MODIFY] debugger adopter interface Variableの変更に対応した。(typeの追加)\n  \n\n20160626
  phoityne-vscode-0.0.6.0\n\n  * [MODIFY] launchリクエストのghciCmdパラメータで指定したghci起動コマンドを使用するように変更した。\n
  \ * [MODIFY] ghciの起動に失敗した場合、デバッグを終了するように修正した。\n\n\n20160605 phoityne-vscode-0.0.5.0\n\n
  \ * [MODIFY] launchリクエストのnoDebugパラメータをMaybeに変更した。\n\n\n20160601 phoityne-vscode-0.0.4.0\n\n
  \ * [MODIFY] スタックトレースの表示を番号から関数名に変更した。\n  * [MODIFY] GHC-8.0.1のghciにおいて、:step結果の出力変更(Stopped
  in)に対応した。\n\n\n20160515 phoityne-vscode-0.0.3.0\n\n  * [ADD] tasks.jsonが存在しない場合は、作成するようにした。\n
  \ * [ADD] package.json にキーバインディング設定を追加した。(stack build, stack clean, stack test,
  stack watch)\n  * [ADD] hover requestに対して、:info結果を返すようにした。\n\n\n20160508 phoityne-vscode-0.0.2.0\n\n
  \ * [ADD] デバッガ起動後、ファイル保存時にghciにリロードするようにした。\n  * [ADD] 条件付きブレークポイントに対応した。\n\n\n20160504
  phoityne-vscode-0.0.1.0\n\n  * [INFO] Initial release.\n\n\n"
basic-deps:
  MissingH: -any
  ConfigFile: -any
  bytestring: -any
  split: -any
  Cabal: -any
  base: ! '>=4.7 && <5'
  text: -any
  safe-exceptions: -any
  filepath: -any
  process: -any
  parsec: -any
  conduit: -any
  data-default: -any
  conduit-extra: -any
  containers: -any
  lens: -any
  hslogger: -any
  mtl: -any
  cmdargs: -any
  transformers: -any
  fsnotify: -any
  resourcet: -any
  aeson: -any
  safe: -any
  directory: -any
all-versions:
- '0.0.1.0'
- '0.0.2.0'
- '0.0.3.0'
- '0.0.4.0'
- '0.0.5.0'
- '0.0.6.0'
- '0.0.7.0'
- '0.0.8.0'
- '0.0.9.0'
- '0.0.10.0'
- '0.0.11.0'
- '0.0.12.0'
- '0.0.13.0'
- '0.0.14.0'
- '0.0.15.0'
- '0.0.16.0'
- '0.0.17.0'
- '0.0.18.0'
- '0.0.19.0'
- '0.0.20.0'
- '0.0.21.0'
author: phoityne_hs
latest: '0.0.21.0'
description-type: markdown
description: ! "\n\n# Phoityne VSCode\n\nPhoityne is a Haskell GHCi debug adapter
  for Visual Studio Code.\n\n\n## Information\n* [2018/02/11] phoityne-vscode released.
  \ \n  * Marketplace [phoityne-vscode-0.0.19](https://marketplace.visualstudio.com/items?itemName=phoityne.phoityne-vscode)\n
  \ * hackage [phoityne-vscode-0.0.21.0](https://hackage.haskell.org/package/phoityne-vscode)
  \ \n  __Need update from hackage !!.__\n* Release Summary\n  * [MODIFY] [34](https://github.com/phoityne/phoityne-vscode/issues/34)
  : can not set breakpoint on vscode-1.20.0\n\n![10_quick_start.gif](https://raw.githubusercontent.com/phoityne/phoityne-vscode/master/docs/10_quick_start.gif)
  \ \n(This sample project is available from [here](https://github.com/phoityne/stack-project-template).)\n\n\n##
  Important\n\n* __LIMITATION__: Source file extension must be \".hs\"\n* __LIMITATION__:
  Can not use STDIN handle while debugging. \n* When you start debugging for the first
  time, .vscode/tasks.json will be created automatically. Then you can use F6, F7,
  F8 shortcut key.\n  * F5 : start debug\n  * F6 : show command menu (for stack watch)\n
  \ * Shift + F6 : stop stack watch\n  * F7 : stack clean & build\n  * F8 : stack
  test\n  * F9 : put bp on current line\n  * Shift + F9 : put bp on current column\n*
  While debugging, you can use F5, F9, F10, F11 shortcut key.\n  * F5 : jump to next
  bp\n  * F9 : put bp on the line\n  * Shift + F9 : put bp on the column\n  * F10
  : step next\n  * F11 : step into\n\n  \n## Features\n\n### Run to Cursor\n\n![03_run_to_cursor.gif](https://raw.githubusercontent.com/phoityne/phoityne-vscode/master/docs/03_run_to_cursor.gif)\n\n\n###
  Bindings & Watch\n\nThe variable added to watch will be forced.\n\n![02_watch.gif](https://raw.githubusercontent.com/phoityne/phoityne-vscode/master/docs/02_watch.gif)\n\n\n###
  Stack trace\n\n![05_stacktrace.gif](https://raw.githubusercontent.com/phoityne/phoityne-vscode/master/docs/05_stacktrace.gif)\n\n\n###
  Break condition\n\n![04_condition.gif](https://raw.githubusercontent.com/phoityne/phoityne-vscode/master/docs/04_condition.gif)\n\n###
  Hit count break condition\n\nSupports these operators.\n*  ==\n*  /=\n*  <, >\n*
  \ <=, >=\n*  mod, %\n*  just digit is same with '>='\n\n![07_hit_count.gif](https://raw.githubusercontent.com/phoityne/phoityne-vscode/master/docs/07_hit_count.gif)\n\n###
  Break on Exception\n\n![08_exception.gif](https://raw.githubusercontent.com/phoityne/phoityne-vscode/master/docs/08_exception.gif)\n\n\n###
  Repl & Completions\n\n![06_repl.gif](https://raw.githubusercontent.com/phoityne/phoityne-vscode/master/docs/06_repl.gif)\n\n###
  and more\n\nBetter inspection. This is an experimental enhancement.  \nThere are
  limitations and additional installation.  \n[Here are the details](https://github.com/phoityne/haskell-dap).
  \n\n![01_inspect_variables.gif](https://raw.githubusercontent.com/phoityne/haskell-dap/master/docs/01_inspect_variables.gif)
  \ \n\n## Capabilites\n\n* supportsConfigurationDoneRequest : **yes**\n* supportsFunctionBreakpoints
  : **yes**\n* supportsConditionalBreakpoints : **yes**\n* supportsHitConditionalBreakpoints
  : **yes**\n* supportsEvaluateForHovers : **yes**\n* exceptionBreakpointFilters :
  **yes**\n* supportsStepBack : no\n* supportsSetVariable : no\n* supportsRestartFrame
  : no\n* supportsGotoTargetsRequest : no\n* supportsStepInTargetsRequest : no\n*
  supportsCompletionsRequest : **yes**\n* supportsModulesRequest : no\n* additionalModuleColumns
  : no\n* supportedChecksumAlgorithms : no\n* supportsRestartRequest : no\n* supportsExceptionOptions
  : no\n* supportsValueFormattingOptions : no\n* supportsExceptionInfoRequest : no\n*
  supportTerminateDebuggee : no\n* supportsDelayedStackTraceLoading : no\n\n\n## Install\n\n\n###
  Run stack install\n\n    % stack install phoityne-vscode\n      . . . . .\n    %\n\nAdd
  'phoityne-vscode.exe' to PATH environment.\n\nWindows)\n\n    % where $path:phoityne-vscode.exe\n
  \   C:\\Users\\[user name]\\AppData\\Roaming\\local\\bin\\phoityne-vscode.exe\n
  \   \n    % phoityne-vscode --version\n    phoityne-vscode-x.x.x.x\n    %\n    %
  code\n\nlinux)\n\n    $ which phoityne-vscode\n    ~/.local/bin/phoityne-vscode\n
  \   $\n    $ phoityne-vscode --version\n    phoityne-vscode-x.x.x.x\n    $\n    $
  code\n\n### Install vscode extensions\n\n1. run VSCode and open stack project __Folder__
  from file menu. \n2. open Extensions from side menu of VSCode.\n3. search \"haskell\"
  \n4. select \"[__Haskell GHCi debug adapter Phoityne__](https://marketplace.visualstudio.com/items?itemName=phoityne.phoityne-vscode)\"\n\n
  \ \n\n## Configuration\n\n### __.vscode/launch.json__\n\n|NAME|REQUIRED OR OPTIONAL|DEFAULT
  SETTING|DESCRIPTION|\n|:--|:--:|:--|:--|\n|startup|required|${workspaceRoot}/test/Spec.hs|debug
  startup file, will be loaded automatically.|\n|startupFunc|optional|\"\" (empty
  string)|debug startup function, will be run instead of main function.|\n|startupArgs|optional|\"\"
  (empty string)|arguments for startup function. set as string type.|\n|ghciCmd|required|stack
  ghci --test --no-load --no-build --main-is TARGET --ghci-options -fprint-evld-with-show|launch
  ghci command, must be Prelude module loaded. For example, \"ghci -i${workspaceRoot}/src\",
  \"cabal exec -- ghci -i${workspaceRoot}/src\"|\n|ghciPrompt|required|H>>=|ghci command
  prompt string.|\n|ghciInitialPrompt|optional|\"Prelude> \"|initial pormpt of ghci.
  set it when using custom prompt. e.g. set in .ghci|\n|stopOnEntry|required|true|stop
  or not after debugger launched.\n|mainArgs|optional|\"\" (empty string)|main arguments.|\n|logFile|required|${workspaceRoot}/.vscode/phoityne.log|internal
  log file.|\n|logLevel|required|WARNING|internal log level.|\n\n\n#### changing ghci
  initial prompt \n\nIf you change ghci prompt in .ghci file, or ghci prompt is changed
  from \"Prelude>\" by applying _NoImplicitPrelude_ extension, set the initial prompt
  variable to same prompt string.\n\n    % diff .vscode/launch.json.old .vscode/launch.json\n
  \   19c19\n    <             \"ghciInitialPrompt\": \"Prelude> \"      // default
  value.\n    ---\n    >             \"ghciInitialPrompt\": \"> \"             //
  e.g.\n    %\n\nMake sure needs of the last space, and don't forget adding it.\n\n\n####
  setting the startup hs file\n\nSet the startup variable to the path of .hs file
  in which main function is defined.\n\n    % diff .vscode/launch.json.old .vscode/launch.json\n
  \   10c10\n    <             \"startup\": \"${workspaceRoot}/test/Spec.hs\",    //
  default value.\n    ---\n    >             \"startup\": \"${workspaceRoot}/app/run.hs\",
  \    // e.g.\n    %\n\n\n#### setting the startup function\n\nIf you want to run
  the specific function instead of main function, set the startupFunc variable.  \nFor
  example, when specifying the following startDebug function,\n\n    startDebug ::
  String -> IO ()\n    startDebug name = do\n      putStrLn \"hello\"\n      putStrLn
  name \n\nset the valiavles in the launch.json file.\n\n    % diff .vscode/launch.json.old
  .vscode/launch.json\n    11c12\n    <             \"startupFunc\": \"\",    // default
  value.\n    <             \"startupArgs\": \"\",    // default value.\n    ---\n
  \   >             \"startupFunc\": \"startDebug\",       // e.g.\n    >             \"startupArgs\":
  \"\\\"phoityne\\\"\",     // e.g.\n    %\n\n\n#### changing log level\n\nFor debuging
  phoityen itself, change the log level to DEBUG.  \nAdding Issue with the debug log.\n\n
  \   % diff .vscode/launch.json.old .vscode/launch.json\n    12c12\n    <             \"logLevel\":
  \"WARNING\",               // default value.\n    ---\n    >             \"logLevel\":
  \"DEBUG\",                 // e.g.\n    %\n\n\n### __.vscode/tasks.json__\n\n|TASK
  NAME|REQUIRED OR OPTIONAL|DEFAULT SETTING|DESCRIPTION|\n|:--|:--:|:--|:--|\n|stack
  build|required|stack build|task definition for F6 shortcut key.|\n|stack clean &
  build|required|stack clean && stack build|task definition for F7 shortcut key.|\n|stack
  test|required|stack test|task definition for F8 shortcut key.|\n|stack watch|required|stack
  build --test --no-run-tests --file-watch|task definition for F6 shortcut key.|\n\n"
license-name: BSD3
