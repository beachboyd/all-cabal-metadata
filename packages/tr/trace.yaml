homepage: ''
changelog-type: markdown
hash: b4f121cbca27f7a7fa4bbec1a89bd88794f131e4fea5ab1390b278dd9439777b
test-bench-deps: {}
maintainer: jon@jonmsterling.com
synopsis: A monad transformer for tracing provenience of errors
changelog: ! "0.2.0.0\n======\n\n* Provided `MonadTrace` instances to the `transformers`
  menagerie.\n\n* Provided the various `mtl` instance to `TraceT`.\n\n* Based `TraceT`
  on `ExceptT` to shed the `either` package dependency.\n\n* Remove some things that
  were of limited utility which had caused\n  `profunctors, kan-extensions` dependencies
  to be incurred.\n\n* Added a `Monad` superclass constraint to `MonadTrace`.\n\n\n0.1.0.5\n=======\n\n*
  \  Added `Typeable`, `Generic`, and `NFData` instances for `ErrorTrace`.\n\n"
basic-deps:
  base: ! '>=4.7 && <5.0'
  monad-control: ! '>=0.3'
  containers: ! '>=0.5.5'
  mtl: ! '>=2.1'
  transformers-base: ! '>=0.4'
  transformers: ! '>=0.4'
  deepseq: ! '>=1.3'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.2.0.0
author: Jon Sterling
latest: 0.2.0.0
description-type: markdown
description: ! 'hs-trace

  ========


  A monad transformer for tracing error provenience. If you want a nice example of
  how to use it, this [bidirectional type checker](https://github.com/jonsterling/itt-bidirectional/blob/master/src/TT/Judgement/Bidirectional.hs)
  provides a very nice example and motivation.

'
license-name: MIT
