homepage: http://github.com/transient-haskell/transient-universe-tls
changelog-type: markdown
hash: cfcb683a8977843c85630f8985c4fac7e16a0a563da89585e68c8956af3cb4eb
test-bench-deps: {}
maintainer: agocorona@gmail.com
synopsis: transient with secure communications
changelog: ''
basic-deps:
  transient-universe: ! '>=0.4.1'
  bytestring: -any
  base: ! '>=4.8 && <5.9'
  tls: -any
  network: -any
  x509-store: -any
  data-default: -any
  transient: -any
  x509-system: -any
  cprng-aes: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Alberto G. Corona
latest: 0.1.1.0
description-type: markdown
description: ! "# transient-universe-tls\r\nSecure communications for transient-universe.
  \r\n\r\n`initTLS` must be called before using any communication. Then any connection
  with other nodes is atempted to be secure. It is necessary a certificate and a key
  for the node at the folder where it is executed.  Certificate verification from
  calling nodes is disabled in this version, so encription of messages among nodes,
  and not verification is the goal initially.\r\n\r\nupon initTLS has been called,
  \ any `connect`  will try to establish a secure connection or will fail.\r\n\r\nConnection
  from web nodes accept `https` requests. If a connection is secure, socket communications
  are encripted too.\r\n\r\nIn order to generate a self-signed certificate for testing,
  try the following:\r\n\r\n     openssl genrsa -out key.pem 2048\r\n     openssl
  req -new -key key.pem -out certificate.csr\r\n     openssl x509 -req -in certificate.csr
  -signkey key.pem -out certificate.pem\r\n"
license-name: BSD-3-Clause
