homepage: http://github.com/ekmett/transformers-compat/
changelog-type: markdown
hash: b192b5379793e0193c343fdd882f51625bf713da119a24609d316e8ffa2cf0f0
test-bench-deps:
  base: ! '>=4.3 && <5'
  deriving-compat: ! '>=0.3.4 && <1'
  hspec: ! '>=2 && <3'
  tagged: ! '>=0.7 && <1'
  transformers: ! '>=0.2 && <0.6'
  QuickCheck: ! '>=2 && <3'
  transformers-compat: -any
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: A small compatibility shim for the transformers library
changelog: ! "0.6.0.6\n-------\n* Each of versions 0.6.0.2–0.6.0.6 is a 0.6 build
  with a different set of flags configured. Building this way allows us to work around
  bugs in `cabal`'s backtracker. The 0.6 release notes describe the changes in this
  version.\n  This release is configured with none of `-ftwo`, `-fthree`, `-ffour`,
  or `-ffive` (which works with `transformers-0.5.3` and above).\n\n0.6.0.5\n-------\n*
  Each of versions 0.6.0.2–0.6.0.6 is a 0.6 build with a different set of flags configured.
  Building this way allows us to work around bugs in `cabal`'s backtracker. The 0.6
  release notes describe the changes in this version.\n  This release is configured
  with `-ffive` (which works with `transformers-0.5` up until, but not including,
  `transformers-0.5.3`).\n\n0.6.0.4\n-------\n* Each of versions 0.6.0.2–0.6.0.6 is
  a 0.6 build with a different set of flags configured. Building this way allows us
  to work around bugs in `cabal`'s backtracker. The 0.6 release notes describe the
  changes in this version.\n  This release is configured with `-ffour` (which works
  with the `transformers-0.4` series).\n\n0.6.0.3\n-------\n* Each of versions 0.6.0.2–0.6.0.6
  is a 0.6 build with a different set of flags configured. Building this way allows
  us to work around bugs in `cabal`'s backtracker. The 0.6 release notes describe
  the changes in this version.\n  This release is configured with `-fthree` (which
  works with the `transformers-0.3` series).\n\n0.6.0.2\n-------\n* Each of versions
  0.6.0.2–0.6.0.6 is a 0.6 build with a different set of flags configured. Building
  this way allows us to work around bugs in `cabal`'s backtracker. The 0.6 release
  notes describe the changes in this version.\n  This release is configured with `-ftwo`
  (which works with the `transformers-0.2` series).\n\n0.6\n---\n* Introduce the `Data.Functor.Classes.Generic`
  module, which provides functions that can generically implement methods in the `Eq1`,
  `Ord1`, `Read1`, and `Show1` classes (without the usual boilerplate involved).\n*
  Introduce the `generic-deriving` flag. When enabled, `transformers-compat` will
  depend on the `generic-deriving` library on older versions of GHC to backport `GHC.Generics`
  support for `Generic` instances and the machinery in `Data.Functor.Classes.Generic`.\n*
  Some instances were present in `Data.Functor.Sum` but not in `Control.Monad.Trans.Instances`
  (e.g., the `Generic`, `Typeable`, and `Data` instances for `Sum`). This has been
  fixed.\n* Backport changes from `transformers-0.5.5`:\n  * Backport the `Semigroup`
  instance for `Constant`\n  * Add `mapSelect` and `mapSelectT`\n  * Define `selectToContT`
  (and deprecate `selectToCont` in favor of that)\n  * Define some explicit `(*>)`
  definitions to avoid space leaks\n* Backport changes from `transformers-0.5.4` (i.e.,
  add `Bifoldable` and `Bitraversable` instances for `Data.Functor.Constant`)\n* Backport
  changes from `transformers-0.5.3`:\n  * Backport the `Control.Monad.Trans.Accum`
  and `Control.Monad.Trans.Select` modules\n  * Backport the `eitherToErrors` and
  `elimLift` functions to `Control.Applicative.Lift`\n  * Backport `Bits`, `FiniteBits`,
  `IsString`, `Num`, `Real`, `Integral`, `Fractional`, `Floating`, `RealFrac`, and
  `RealFloat` instances for `Data.Functor.Identity`\n  * Backport `Monad`, `MonadFail`,
  and `MonadPlus` instances for `Data.Functor.Reverse`\n  * Backport `Eq1`, `Ord1`,
  `Read1`, and `Show1` instances for `Data.Proxy`\n* Backport changes from `transformers-0.5.2`
  (i.e., add more `INLINE` annotations)\n* Backport changes from `transformers-0.5.1`
  (i.e., add `Bounded`, `Enum`, `Ix`, and `Storable` instances for `Identity`)\n\n0.5.1.4\n-------\n*
  Each of versions 0.5.1.2–0.5.1.4 is a 0.5.1 build with a different set of flags
  configured. Building this way allows us to work around bugs in `cabal`'s backtracker.
  The 0.5.1 release notes describe the changes in this version.\n  This release is
  configured with neither `-ftwo` nor `-fthree` (which works with `transformers-0.4`
  and above).\n\n0.5.1.3\n-------\n* Each of versions 0.5.1.2–0.5.1.4 is a 0.5.1 build
  with a different set of flags configured. Building this way allows us to work around
  bugs in `cabal`'s backtracker. The 0.5.1 release notes describe the changes in this
  version.\n  This release is configured with `-fthree` (which works with the `transformers-0.3`
  series).\n\n0.5.1.2\n-------\n* Each of versions 0.5.1.2–0.5.1.4 is a 0.5.1 build
  with a different set of flags configured. Building this way allows us to work around
  bugs in `cabal`'s backtracker. The 0.5.1 release notes describe the changes in this
  version.\n  This release is configured with `-ftwo` (which works with the `transformers-0.2`
  series).\n\n0.5.1\n-----\n* Fix a bug in which `PolyKinds` was enabled on GHC 7.4,
  resulting in interface file bugs on that version of GHC.\n\n0.5.0.4\n-------\n*
  Each of versions 0.5.0.2–0.5.0.4 is a 0.5 build with a different set of flags configured.
  Building this way allows us to work around bugs in `cabal`'s backtracker. The 0.5
  release notes describe the changes in this version.\n  This release is configured
  with neither `-ftwo` nor `-fthree` (which works with `transformers-0.4` and above).\n\n0.5.0.3\n-------\n*
  Each of versions 0.5.0.2–0.5.0.4 is a 0.5 build with a different set of flags configured.
  Building this way allows us to work around bugs in `cabal`'s backtracker. The 0.5
  release notes describe the changes in this version.\n  This release is configured
  with `-fthree` (which works with the `transformers-0.3` series).\n\n0.5.0.2\n-------\n*
  Each of versions 0.5.0.2–0.5.0.4 is a 0.5 build with a different set of flags configured.
  Building this way allows us to work around bugs in `cabal`'s backtracker. The 0.5
  release notes describe the changes in this version.\n  This release is configured
  with `-ftwo` (which works with the `transformers-0.2` series).\n\n0.5\n---\n* Update
  `transformers-compat` to incorporate changes from the `transformers-0.5` series.
  These changes include:\n  * The `Data.Functor.Classes` module was completely redesigned.\n
  \ * Modules now have `Safe` or `Trustworthy` annotations.\n  * Data types and type
  synonyms are poly-kinded when possible.\n* Add `Control.Monad.Trans.Instances`,
  a module of orphan instances that mimic instances available in later versions of
  `transformers`.\n\n0.4.0.4\n-------\n* Each of versions 0.4.0.2–0.4.0.4 is a 0.4
  build with a different set of flags configured. Building this way allows us to work
  around bugs in `cabal`'s backtracker. The 0.4 release notes describe the changes
  in this version.\n  This release is configured with neither `-ftwo` nor `-fthree`
  (which works with `transformers-0.4` and above).\n\n0.4.0.3\n-------\n* Each of
  versions 0.4.0.2–0.4.0.4 is a 0.4 build with a different set of flags configured.
  Building this way allows us to work around bugs in `cabal`'s backtracker. The 0.4
  release notes describe the changes in this version.\n  This release is configured
  with `-fthree` (which works with the `transformers-0.3` series).\n\n0.4.0.2\n-------\n*
  Each of versions 0.4.0.2–0.4.0.4 is a 0.4 build with a different set of flags configured.
  Building this way allows us to work around bugs in `cabal`'s backtracker. The 0.4
  release notes describe the changes in this version.\n  This release is configured
  with `-ftwo` (which works with the `transformers-0.2` series).\n\n0.4\n---\n* Added
  support for the missing `ExceptT` instances from `mtl`.\n\n  This was not done lightly.
  While this means that by default incurring a dependency on `transformers-compat`
  drags in `mtl` when you are\n  using an old `transformers`, it means that users
  do not have to orphan these instances and permits wider adoption of `ExceptT`.\n\n
  \ If you absolutely can't stand `mtl` and really want this package to build as valid
  `Haskell98`, then you can use `cabal install transformers-compat -f-mtl` to avoid
  incurring the dependency to get these instances. However, that is effectively an
  unsupported configuration.\n\n0.3.3.4\n-------\n* Versions 0.3.3.2–0.3.3.4 were
  a successful attempt to fix build problems caused by the cabal backtracker.\n* Each
  of these is a build with a different set of flags configured.\n  This release is
  configured with neither `-ftwo` nor `-fthree` (which works with `transformers-0.4`
  and above).\n\n0.3.3.3\n-------\n* Versions 0.3.3.2–0.3.3.4 were a successful attempt
  to fix build problems caused by the cabal backtracker.\n* Each of these is a build
  with a different set of flags configured.\n  This release is configured with `-fthree`
  (which works with the `transformers-0.3` series).\n\n0.3.3.2\n-------\n* Versions
  0.3.3.2–0.3.3.4 were a successful attempt to fix build problems caused by the cabal
  backtracker.\n* Each of these is a build with a different set of flags configured.\n
  \ This release is configured with `-ftwo` (which works with the `transformers-0.2`
  series).\n\n0.3.2\n-----\n* This release was a failed (or at least, only partially
  successful) attempt to fix build problems caused by the cabal backtracker.\n\n0.3.1\n-----\n*
  `transformers 0.4.1` compatibility\n\n0.3\n---\n* Added the instances for `Data.Functor.Classes`
  from `transformers 0.4`\n* Switched `Control.Applicative.Backwards` and `Data.Functor.Reverse`
  to the split constructor/accessor style from `transformers 0.4`.\n\n0.2\n---\n*
  Added the new types and classes from `transformers 0.4`\n\n0.1.1.1\n-------\n* Wrote
  a better synopsis\n\n0.1.1\n-----\n* Updated to trick `cabal` into building an empty
  `libHStransformers-compat-0.1.a` on GHC 7.6.\n\n0.1\n---\n* Repository initialized
  by pulling the `transformers-0.2` compatibility layer out of `lens`.\n"
basic-deps:
  base: ! '>=4.3 && <5'
  ghc-prim: -any
  transformers: ! '>=0.5.3 && <0.6'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.1.1'
- '0.2'
- '0.3'
- '0.3.2'
- '0.3.3'
- '0.3.3.2'
- '0.3.3.3'
- '0.3.3.4'
- '0.4.0.2'
- '0.4.0.3'
- '0.4.0.4'
- '0.5.0.2'
- '0.5.0.3'
- '0.5.0.4'
- '0.5.1.2'
- '0.5.1.3'
- '0.5.1.4'
- '0.6.0.2'
- '0.6.0.3'
- '0.6.0.4'
- '0.6.0.5'
- '0.6.0.6'
author: Edward A. Kmett
latest: '0.6.0.6'
description-type: markdown
description: ! 'transformers-compat

  ===================


  [![Hackage](https://img.shields.io/hackage/v/transformers-compat.svg)](https://hackage.haskell.org/package/transformers-compat)
  [![Build Status](https://secure.travis-ci.org/ekmett/transformers-compat.png?branch=master)](http://travis-ci.org/ekmett/transformers-compat)


  This provides a thin compatibility shim on top of transformers-0.2 to add the types
  that were added in transformers-0.3.


  This enables users to maintain haskell-platform compatibility, while still gaining
  access ot the new functionality.


  Contact Information

  -------------------


  Contributions and bug reports are welcome!


  Please feel free to contact me through github or on the #haskell IRC channel on
  irc.freenode.net.


  -Edward Kmett

'
license-name: BSD3
