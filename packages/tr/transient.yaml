homepage: https://github.com/transient-haskell/transient
changelog-type: markdown
hash: 6b90d2a1430ab58f047b4076324fcada6517938c8de1475b400e00a9d3a4db65
test-bench-deps:
  bytestring: ! '>=0.10.6'
  stm: -any
  base: ! '>=4.8.1 && <5'
  time: ! '>=1.5'
  containers: ! '>=0.5.6'
  atomic-primops: -any
  mtl: -any
  transformers: ! '>=0.4.2'
  random: -any
  directory: ! '>=1.2.2'
maintainer: agocorona@gmail.com
synopsis: composing programs with multithreading, events and distributed computing
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.6'
  stm: -any
  base: ! '>=4.8.0 && <5'
  time: ! '>=1.5'
  containers: ! '>=0.5.6'
  atomic-primops: -any
  mtl: -any
  transformers: ! '>=0.4.2'
  random: -any
  directory: ! '>=1.2.2'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.8'
- '0.1.0.9'
- '0.1.1'
- '0.3'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.2.2'
- '0.4.4'
- '0.4.4.1'
- '0.5.1'
- '0.5.3'
- '0.5.4'
- '0.5.5'
- '0.5.6'
- '0.5.8'
- '0.5.9'
- '0.5.9.1'
- '0.5.9.2'
- '0.6.0.0'
- '0.6.0.1'
author: Alberto G. Corona
latest: '0.6.0.1'
description-type: markdown
description: ! "![Transient logo](https://github.com/transient-haskell/transient/raw/master/logo.png)\r\n=========\r\n\r\n[![Hackage](https://img.shields.io/hackage/v/transient.svg)](http://hackage.haskell.org/package/transient)\r\n[![Stackage
  LTS](http://stackage.org/package/transient/badge/lts)](http://stackage.org/lts/package/transient)\r\n[![Stackage
  Nightly](http://stackage.org/package/transient/badge/nightly)](http://stackage.org/nightly/package/transient)\r\n[![Build
  Status](https://api.travis-ci.org/transient-haskell/transient.png?branch=master)](https://travis-ci.org/transient-haskell/transient)\r\n[![Gitter](https://badges.gitter.im/theam/haskell-do.svg)](https://gitter.im/Transient-Transient-Universe-HPlay/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link)\r\n\r\n[![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif)](https://agocorona.github.io/donation.html)\r\n\r\nNOTE:
  distributed computing and web primitives Are in [transient-universe](https://github.com/transient-haskell/transient-universe)
  and [axiom](https://github.com/transient-haskell/axiom). Some examples at [transient-examples](https://github.com/transient-haskell/transient-examples)
  \r\n\r\n\r\n## Some feedback on `transient`:\r\n\r\n1. Rahul Muttineni @rahulmutt
  nov. 09 2016 03:40  Lead developper of ETA (the JVM Haskell compiler)\r\n\r\n   *It's
  a bit mind bending in that it's like using a higher-level list monad, but it's very,
  very cool. For beginning Haskellers, what would be really useful is a visualisation
  of what happens when you do various distributed/parallel stuff.* **It's almost shocking
  how effortlessly you can run computations across threads/nodes.**\r\n\r\n   *The
  cool part is the composability in the distributed setting. *You can make higher-order
  monadic functions that allow you to compose & reuse a long chain of distributed
  transactions via `wormhole` and `teleport`*. Another benefit is that the transaction
  becomes first class and* **you can see exactly what's going on in one place** *instead
  of distributing the logic across actors making the code equivalent to event callbacks,
  as you've stated.*\r\n\r\n  https://gitter.im/Transient-Transient-Universe-HPlay/Lobby?at=58228caa35e6cf054773303b\r\n\r\n##
  What is Transient?\r\n\r\nOne of the dreams of software engineering is unrestricted
  composability.\r\n\r\nThis may be put in these terms:\r\n\r\nlet `ap1` and `ap2`
  two applications with arbitrary complexity, with all effects including multiple
  threads, asynchronous IO, indeterminism, events and perhaps, distributed computing.\r\n\r\nThen
  the combinations:\r\n\r\n     - ap1 <|> ap2          -- Alternative expression\r\n
  \    - ap1 >>= \\x -> ap2    -- monadic sequence\r\n     - ap1 <> ap2           --
  monoidal expression\r\n     - (,) <$> ap1 <*> ap2  -- Applicative expression\r\n\r\nare
  possible if the types match, and generate new applications that are composable as
  well.\r\n\r\nTransient does exactly that.\r\n\r\nThe operators `<$>` `<*>` and `<>`
  express concurrency, the operator `<|>` express parallelism and `>>=` for sequencing
  of threads, distributed processes or web widgets. So even in the presence of these
  effects and others, everything is composable.\r\n\r\nFor this purpose transient
  is an extensible effects monad with all major effects and primitives for parallelism,
  events, asynchronous IO, early termination, non-determinism logging and distributed
  computing. Since it is possible to extend it with more effects without adding monad
  transformers, the composability is assured.\r\n\r\nDocumentation\r\n=============\r\n\r\nThe
  [Wiki](https://github.com/agocorona/transient/wiki) is more user oriented\r\n\r\nMy
  video sessions in [livecoding.tv](https://www.livecoding.tv/agocorona/videos/) not
  intended as tutorials or presentations, but show some of the latest features running.\r\n\r\nThe
  articles are more technical:\r\n\r\n- [Philosophy, async, parallelism, thread control,
  events, Session state](https://www.fpcomplete.com/user/agocorona/EDSL-for-hard-working-IT-programmers?show=tutorials)\r\n-
  [Backtracking and undoing IO transactions](https://www.fpcomplete.com/user/agocorona/the-hardworking-programmer-ii-practical-backtracking-to-undo-actions?show=tutorials)\r\n-
  [Non-deterministic list like processing, multithreading](https://www.fpcomplete.com/user/agocorona/beautiful-parallel-non-determinism-transient-effects-iii?show=tutorials)\r\n-
  [Distributed computing](https://www.fpcomplete.com/user/agocorona/moving-haskell-processes-between-nodes-transient-effects-iv?show=tutorials)\r\n-
  [Publish-Subscribe variables](https://www.schoolofhaskell.com/user/agocorona/publish-subscribe-variables-transient-effects-v)\r\n-
  [Distributed streaming, map-reduce](https://www.schoolofhaskell.com/user/agocorona/estimation-of-using-distributed-computing-streaming-transient-effects-vi-1)\r\n\r\nThese
  articles contain executable examples (not now, since the site no longer support
  the execution of haskell snippets).\r\n\r\n\r\nPlans\r\n=====\r\nOnce composability
  in the large is possible, there are a infinite quantity of ideas that may be realized.
  There are short term and long term goals. An status of development is regularly
  published in [![Gitter](https://badges.gitter.im/theam/haskell-do.svg)](https://gitter.im/Transient-Transient-Universe-HPlay/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link).
  \ \r\n\r\nAmong the most crazy ones is the possibility of extending this framework
  to other languages and make them interoperable. treating whole packaged applications
  as components, and docking them as lego pieces in a new layer of the Operating system
  where the shell allows such kind of type safe docking. this composable docker allows
  all kinds of composability, while the current docker platform is just a form of
  degraded monoid that do not compute.\r\n\r\nContribute:\r\n==========\r\nWanna contribute?
  Make sure that you've read our [contributor guidelines](https://github.com/transient-haskell/transient/blob/master/CONTRIBUTING.md).
  We'd like to hear from you and your ideas, get in touch with other contributors
  through:\r\n\r\n- [![Gitter](https://badges.gitter.im/theam/haskell-do.svg)](https://gitter.im/Transient-Transient-Universe-HPlay/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link)\r\n\r\n-
  [The issues page for transient](https://github.com/transient-haskell/transient/issues)
  \r\n- [The issues page for transient-universe](https://github.com/transient-haskell/transient-universe/issues)
  \r\n- [The issues page for axiom](https://github.com/transient-haskell/axiom/issues)
  \r\n\r\nOnce you learn something interesting, you can [contribute to the wiki](https://github.com/transient-haskell/transient/wiki)\r\n\r\n[You
  can also donate](https://agocorona.github.io/donation.html) to the lead developer
  in order to make possible the dedication of more time to fullfil the potential advantages
  of true software composability across the whole stack.\r\n\r\n"
license-name: MIT
