homepage: ''
changelog-type: markdown
hash: b6f481efd13fb584eb141465a73f9a733713b94f1fbc3acd9aab434916431d4a
test-bench-deps: {}
maintainer: Igor Pashev <pashev.igor@gmail.com>
synopsis: LDIF idempotent apply tool
changelog: ! "0.2.0\n=====\n\n  * Require [LDAP](https://hackage.haskell.org/package/LDAP)
  > 0.6.0 for `ldapExternalSaslBind`.\n  * Support simple bind. Added options `-x`,
  `-D`, `-w`, `-y` similar to `ldapmodify`.\n  * `changetype: delete` works if entry
  to be deleted does not exist.\n\n\n0.1.0\n=====\n\n  * Initial release.\n  * Works
  only with UNIX socket authentication.\n\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.8 && <50'
  unordered-containers: -any
  docopt: -any
  interpolatedstring-perl6: -any
  LDAP: ! '>0.6.10'
  ldif: -any
all-versions:
- 0.1.0
- 0.2.0
author: Igor Pashev <pashev.igor@gmail.com>
latest: 0.2.0
description-type: markdown
description: ! "ldapply\n=======\n\n[LDIF](https://www.ietf.org/rfc/rfc2849.txt) idempotent
  apply tool.\nThis tool is similar to `ldapmodify` with one exception: it's idempotent.\nIt
  was written to help declarative deployments with [NixOS](http://nixos.org/).\n\n\nHow
  it works\n============\n\n1. If change type is not specified, it adds or replaces
  an entry.\n2. If change type is specified, it acts like normal `ldapmodify`.\n\n\nRequirements\n============\n\n`ldapply`
  is written in Haskell with [GHC](http://www.haskell.org/ghc/).\nAll required Haskell
  libraries are listed in [ldapply.cabal](ldapply.cabal).\nUse [cabal-install](http://www.haskell.org/haskellwiki/Cabal-Install)
  to fetch\nand build all pre-requisites automatically.\n\n\nUsage\n=====\n\nType
  `ldapply --help` to see usage summary:\n\n    Usage:\n      ldapply [options] LDIF...\n\n
  \   Options:\n      -H <ldapuri>       LDAP URL to connect to [default: ldapi:///]\n\n
  \     -x                 Use simple bind instead of default SASL External\n      -D
  <binddn>        Use <binddn> for the distinguished name or authorization identity\n
  \     -w <passwd>        Use <passwd> as the password for simple bind\n      -y
  <passwdfile>    Read password from <passwdfile>, only the first line is read\n\n
  \     -h, --help         Show this message\n\n    If option -w is given, -y is ignored.\n\n\nLDIF
  example\n============\n\n```LDIF\ndn: dc=nodomain\nobjectClass: top\nobjectClass:
  dcObject\nobjectClass: organization\ndc: nodomain\no: Example, Inc.\n\ndn: cn=reader,dc=nodomain\nobjectclass:
  top\nobjectclass: organizationalRole\nobjectclass: simpleSecurityObject\ncn: reader\ndescription:
  Initial description\nuserPassword: qwerty123lol\n\n# description will be removed,
  userPassword changed:\ndn: cn=reader,dc=nodomain\nobjectclass: top\nobjectclass:
  simpleSecurityObject\nobjectclass: organizationalRole\ncn: reader\nuserPassword:
  foobar12345\n\n# userPassword will be changed:\ndn: cn=reader,dc=nodomain\nchangetype:
  modify\nreplace: userPassword\nuserPassword: anothersecretstuff\n\ndn: cn=reader,dc=nodomain\nchangetype:
  modify\nreplace: description\ndescription: foo\n\n# This will be deleted if exists:\ndn:
  cn=reader,dc=nodomain\nchangetype: delete\n\n```\n\n"
license-name: MIT
