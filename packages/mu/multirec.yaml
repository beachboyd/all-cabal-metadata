homepage: http://www.cs.uu.nl/wiki/GenericProgramming/Multirec
changelog-type: ''
hash: b4cd83db730a181d7743ef2fe389a82a132b79a485cdad9b47fb686031dadc3e
test-bench-deps:
  base: ! '>=3.0 && <5'
  multirec: -any
maintainer: generics@haskell.org
synopsis: Generic programming for families of recursive datatypes
changelog: ''
basic-deps:
  base: ! '>=3.0 && <5'
  template-haskell: ! '>=2.4 && <2.13'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '0.5'
- '0.5.1'
- '0.6'
- '0.7'
- '0.7.1'
- '0.7.2'
- '0.7.3'
- '0.7.4'
- '0.7.5'
- '0.7.6'
- '0.7.7'
- '0.7.8'
author: ! 'Alexey Rodriguez,

  Stefan Holdermans,

  Andres Löh,

  Johan Jeuring'
latest: '0.7.8'
description-type: haddock
description: ! 'Many generic programs require information about the recursive positions

  of a datatype. Examples include the generic fold, generic rewriting or

  the Zipper data structure. Several generic programming systems allow to

  write such functions by viewing datatypes as fixed points of a pattern

  functor. Traditionally, this view has been limited to so-called regular

  datatypes such as lists and binary trees. In particular, families of

  mutually recursive datatypes have been excluded.


  With the multirec library, we provide a mechanism to talk about fixed

  points of families of datatypes that may be mutually recursive. On top

  of this representations, generic functions such as the fold or the Zipper

  can then be defined.


  We expect that the library will be especially interesting for compiler

  writers, because ASTs are typically families of mutually recursive datatypes,

  and with multirec it becomes easy to write generic functions on ASTs.


  The library is based on ideas described in the paper:


  *  Alexey Rodriguez, Stefan Holdermans, Andres Löh, Johan Jeuring.

  /Generic programming with fixed points for mutually recursive datatypes/.

  ICFP 2009.'
license-name: BSD3
