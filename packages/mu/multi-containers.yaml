homepage: https://github.com/zliu41/multi-containers#readme
changelog-type: markdown
hash: 7950b08ec7aa3591f8486f333107f5ed957ccaf0112637893d554571d4585efe
test-bench-deps:
  base: ! '>=4.7 && <5'
  hspec: ! '>=2.4.8 && <2.8'
  multi-containers: -any
  containers: ! '>=0.5.10.2 && <0.7'
maintainer: Ziyang Liu <free@cofree.io>
synopsis: A few multimap variants.
changelog: |
  # Changelog for multi-containers

  ## 0.1.0.2

  - Remove redundant constraints

  ## 0.1.0.1

  - Update README

  ## 0.1.0.0

  - Initial release
basic-deps:
  extra: ! '>=1.6.9 && <1.7'
  base: ! '>=4.7 && <5'
  filepath: ! '>=1.4.1.2 && <1.5'
  containers: ! '>=0.5.10.2 && <0.7'
  directory: ! '>=1.3.0.2 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
author: Ziyang Liu <free@cofree.io>
latest: 0.1.0.2
description-type: markdown
description: |
  # multi-containers

  A library that provides three multimap variants:

  - [`Multimap k a`](https://hackage.haskell.org/package/multi-containers/docs/Data-Multimap.html), a multimap where values of each key form a list.
  - [`SetMultimap k a`](https://hackage.haskell.org/package/multi-containers/docs/Data-Multimap-Set.html), a multimap where values of each key form a set.
  - [`Table r c a`](https://hackage.haskell.org/package/multi-containers/docs/Data-Multimap-Table.html), a two dimensional table where
    values are indexed by row keys and column keys; it is essentially a multimap where values of each key form a map.

  For `Multimap` and `SetMultimap`, there's always at least one value associated with each key in the multimap. Upon removing
  the last value of a key, the key itself is removed from the multimap.

  For `Table`, similarly, each row key in a table always has at least one value. So does each column key.
license-name: BSD-3-Clause
