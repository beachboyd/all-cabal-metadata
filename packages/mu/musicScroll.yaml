homepage: https://github.com/RubenAstudillo/MusicScroll
changelog-type: markdown
hash: 14e434f68bd1c0da473806a6d08d44ece6d98be78442defa1075abe3c20cc157
test-bench-deps: {}
maintainer: ruben.astud@gmail.com
synopsis: Supply your tunes info without leaving your music player.
changelog: |
  # Revision history for music-scroll

  ## 0.1.1.0 -- 2020-01-22

  * Signal when the song couldn't be gotten from a lyrics website.

  ## 0.1.0.0 -- 2020-01-17

  * First version. Released on an unsuspecting world.
basic-deps:
  bytestring: -any
  stm: -any
  base: <4.13
  text: -any
  gi-gtk: -any
  async: -any
  req: -any
  containers: -any
  musicScroll: -any
  gi-gtk-hs: -any
  dbus: -any
  tagsoup: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Ruben Astudillo
latest: 0.1.1.0
description-type: markdown
description: |
  # MusicScroll

  ![Basic program for basic needs](https://i.imgur.com/BEa6RzJ.png)

  I don't like having to fire up a browser to get the lyrics of the songs
  I am currently hearing. I got basic needs, I download songs with good
  metadata and use SMPlayer to open the playlists. It would be nice if
  somehow I could get a basic windows with the lyrics of the song.

  MusicScroll does this. When you run the command `music-scroll` a window
  is opened with the lyrics of the song your are playing on SMPlayer and
  each change of song will retrieve new lyrics without your intervention.

  This works by getting the MPRIS info on your song, specifically the
  title and artists fields. After some clean up it will retrieve the lyrics
  from a lyrics website, clean the HTML a little and put it as text on a
  GTK window. Ideally it ought be not invasive so you can read only if you
  want.

  This was done as an excuse to learn more of gi-gtk & glade. But I am
  happy with the result so I am sharing. On the future I would like do
  write the lyrics to a SQLite database for offline usage and handle other
  videoplayers as VLC (this ought to be really easy, send a patch).

  I want to thanks to the `haskell-gi` and `haskell dbus` authors. I
  didn't know much about graphics programming or dbus, but the
  documentation, types and code samples helped me a lot on understanding
  how they ought to be organized. If I see you guys on a conference I will
  buy you a beer :-) . The `d-feet` program was really helpful for see how
  the data was layout on DBus.
license-name: GPL-3.0-only
