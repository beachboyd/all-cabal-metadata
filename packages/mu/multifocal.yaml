homepage: ''
changelog-type: ''
hash: 4aa6c3040e3a74d9384148982d9d97f8843e6cbdfca9f5510bee78f0fe55b893
test-bench-deps: {}
maintainer: Hugo Pacheco <hpacheco@di.uminho.pt>
synopsis: Bidirectional Two-level Transformation of XML Schemas
changelog: ''
basic-deps:
  pointless-lenses: ! '>=0.0.9'
  base: ==4.*
  HaXml: ! '>=1.22.5'
  syb: ! '>=0.3'
  process: -any
  parsec: ! '>=3.1.2'
  array: -any
  containers: -any
  hxt: ! '>=9.1.5'
  hxt-xpath: ! '>=9.1.1'
  haskell-src-exts: ! '>=1.11.1'
  pointless-haskell: ! '>=0.0.8'
  pointless-rewrite: ! '>=0.0.3'
  mtl: ! '>=1'
  pretty: ! '>=1.1.0.0'
all-versions:
- 0.0.1
author: Hugo Pacheco <hpacheco@di.uminho.pt>, Alcino Cunha <alcino@di.uminho.pt>
latest: 0.0.1
description-type: text
description: ! 'Multifocal


  This cabal package can be installed with:


  $ cabal install multifocal


  For a manual install, execute:


  $ runhaskell Setup.lhs configure

  $ runhaskell Setup.lhs build

  $ runhaskell Setup.lhs install


  For an example, try running the following steps:


  1) generate a target XML Schema file and an optimized lens executable from the source
  XML Schema file imdb.xsd according to the transformation imdb.2lt.


  $ multifocal -i examples/imdb.xsd -t examples/imdb.2lt -o examples/imdb2.xsd -c
  examples/Imdb.hs -e


  2) compile the resulting file


  $ ghc --make examples/Imdb.hs -o imdb


  3) Migrate a source XML document into a target XML document


  $ ./imdb -s examples/imdb.xml -f -o examples/imdb2.xml


  4) Translate an updated target XML document back to the source


  ./imdb -s examples/imdb.xml -t examples/imdb2mod.xml -b -o examples/imdbmod.xml




'
license-name: BSD-3-Clause
