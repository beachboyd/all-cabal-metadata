homepage: ''
changelog-type: text
hash: eb8ef5ca6d39c99f04b20099e9dba7fdf9534a21ab3a3c6925530c5892ae51ee
test-bench-deps: {}
maintainer: Joey Hess <id@joeyh.name>
synopsis: Arduino programming in haskell using the Copilot stream DSL
changelog: |
  arduino-copilot (1.1.1) unstable; urgency=medium

    * New Copilot.Arduino.Library.Serial module.
    * Added the analog pins for Uno and Nano, and support using
      them for digital IO, when the hardware allows that to be done.
    * Support reading voltage from analog pins.
    * Support PWM.
    * Added a way to enable pullup resistors for input pins.
    * Detect if a program tries to use the same pin for both input and
      output. This is not currently supported, so it will refuse to build the
      program.
    * Copilot.Arduino.Internals API changed.

   -- Joey Hess <id@joeyh.name>  Sun, 26 Jan 2020 20:37:26 -0400

  arduino-copilot (1.0.1) unstable; urgency=medium

    * Move example from cabal description (where it did not render correctly)
      to README.

   -- Joey Hess <id@joeyh.name>  Sat, 25 Jan 2020 16:01:19 -0400

  arduino-copilot (1.0.0) unstable; urgency=medium

    * First release.

   -- Joey Hess <id@joeyh.name>  Sat, 25 Jan 2020 10:33:09 -0400
basic-deps:
  copilot: (==3.1.*)
  unix: -any
  base: (>=4.5 && <5)
  filepath: -any
  containers: -any
  copilot-c99: (==3.1.*)
  copilot-language: (==3.1.*)
  mtl: -any
  optparse-applicative: (>=0.14.1)
  directory: -any
all-versions:
- 0.0.1
- 1.0.0
- 1.0.1
- 1.1.1
author: Joey Hess
latest: 1.1.1
description-type: text
description: "Arduino programming in haskell using the Copilot stream DSL\n\nSee Copilot.Arduino
  for details on how to use write a program using this\nlibrary.\n\nFor example, to
  make an Arduino blink its LED:\n\n\timport Copilot.Arduino\n\tmain = arduino $ do\n\t\tled
  =: blinking\n\t\tdelay =: constant 100\n\nThis and other examples are included in
  the examples/ directory, each\nwith their own README explaining how to build and
  use them.\n"
license-name: BSD-3-Clause
