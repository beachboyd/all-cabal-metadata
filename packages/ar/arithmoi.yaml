homepage: https://github.com/cartazio/arithmoi
changelog-type: text
hash: 0aba614e74f306c86715697db2012cd8cd1fe3649a01e4d491d94109bca812e8
test-bench-deps:
  integer-logarithms: -any
  tasty-smallcheck: ! '>=0.8 && <0.9'
  base: ! '>=4.6 && <5'
  smallcheck: ! '>=1.1.3 && <1.2'
  integer-gmp: <1.1
  gauge: -any
  containers: -any
  arithmoi: -any
  tasty-quickcheck: ! '>=0.9 && <0.11'
  tasty-hunit: ! '>=0.9 && <0.11'
  transformers: ! '>=0.5'
  random: -any
  tasty: ! '>=0.10 && <1.2'
  QuickCheck: ! '>=2.10 && <2.13'
  vector: -any
maintainer: ! 'Carter Schonwald  carter at wellposed dot com,

  Andrew Lelechenko andrew dot lelechenko at gmail dot com'
synopsis: Efficient basic number-theoretic functions.
changelog: ! "0.7.0.0\n    This release supports GHC 7.8, 7.10, 8.0, 8.2 and 8.4.\n\n
  \   Breaking changes:\n\n        Remove 'Math.NumberTheory.Powers.Integer', deprecated
  in 0.5.0.0.\n\n        Deprecate 'Math.NumberTheory.Primes.Heap'.\n        Use 'Math.NumberTheory.Primes.Sieve'
  instead.\n\n        Deprecate 'FactorSieve', 'TotientSieve', 'CarmichaelSieve' and\n
  \       accompanying functions. Use new general approach for bulk evaluation\n        of
  arithmetic functions instead (#77).\n\n        Now 'moebius' returns not a number,
  but a value of 'Moebius' type (#90).\n\n    New functions:\n\n        A general
  framework for bulk evaluation of arithmetic functions (#77):\n\n        > runFunctionOverBlock
  carmichaelA 1 10\n        [1,1,2,2,4,2,6,2,6,4]\n\n        Implement a sublinear
  algorithm for Mertens function (#90):\n\n        > map (mertens . (10 ^)) [0..9]\n
  \       [1,-1,1,2,-23,-48,212,1037,1928,-222]\n\n        Add basic support for cyclic
  groups and primitive roots (#86).\n\n        Implement an efficient modular exponentiation
  (#86).\n\n        Write routines for lazy generation of smooth numbers (#91).\n\n
  \       > smoothOverInRange (fromJust (fromList [3,5,7])) 1000 2000\n        [1029,1125,1215,1225,1323,1575,1701,1715,1875]\n\n
  \   Improvements:\n\n        Now factorisation of large integers and Gaussian integers
  produces\n        factors as lazy as possible (#72, #76).\n\n0.6.0.1:\n    Switch
  to smallcheck 1.1.3.\n\n0.6.0.0:\n    This release supports GHC 7.8, 7.10, 8.0 and
  8.2.\n\n    Breaking changes:\n\n        'Math.NumberTheory.Moduli' was split into\n
  \       'Math.NumberTheory.Moduli.{Chinese,Class,Jacobi,Sqrt}'.\n\n        Functions
  'jacobi' and 'jacobi'' return 'JacobiSymbol'\n        instead of 'Int'.\n\n        Functions
  'invertMod', 'powerMod' and 'powerModInteger' were removed,\n        as well as
  their unchecked counterparts. Use new interface to\n        modular computations,
  provided by 'Math.NumberTheory.Moduli.Class'.\n\n    New functions:\n\n        Brand
  new 'Math.NumberTheory.Moduli.Class' (#56), providing\n        flexible and type
  safe modular arithmetic. Due to use of GMP built-ins\n        it is also significantly
  faster.\n\n        New function 'divisorsList', which is lazier than 'divisors'
  and\n        does not require 'Ord' constraint (#64). Thus, it can be used\n        for
  'GaussianInteger'.\n\n    Improvements:\n\n        Speed up factorisation over elliptic
  curve up to 15x (#65).\n\n        Polymorphic 'fibonacci' and 'lucas' functions,
  which previously\n        were restricted to 'Integer' only (#63). This is especially
  useful\n        for modular computations, e. g., 'map fibonacci [1..10] :: [Mod
  7]'.\n\n        Make 'totientSum' more robust and idiomatic (#58).\n\n0.5.0.1:\n
  \   Switch to QuickCheck 2.10.\n\n0.5.0.0:\n    This release supports GHC 7.8, 7.10
  and 8.0. GHC 7.6 is no longer supported.\n\n    Breaking changes:\n\n        Remove
  deprecated interface to arithmetic functions (divisors, tau,\n        sigma, totient,
  jordan, moebius, liouville, smallOmega, bigOmega,\n        carmichael, expMangoldt).
  New interface is exposed via\n        Math.NumberTheory.ArithmeticFunctions (#30).\n\n
  \       Deprecate integerPower and integerWordPower from\n        Math.NumberTheory.Powers.Integer.
  Use (^) instead (#51).\n\n        Math.NumberTheory.Logarithms has been moved to
  the separate package\n        integer-logarithms (#51).\n\n        Rename Math.NumberTheory.Lucas
  to Math.NumberTheory.Recurrencies.Linear.\n\n    New functions:\n\n        Add basic
  combinatorial sequences: binomial coefficients, Stirling\n        numbers of both
  kinds, Eulerian numbers of both kinds, Bernoulli\n        numbers (#39). E. g.,\n\n
  \       > take 10 $ Math.NumberTheory.Recurrencies.Bilinear.bernoulli\n        [1
  % 1,(-1) % 2,1 % 6,0 % 1,(-1) % 30,0 % 1,1 % 42,0 % 1,(-1) % 30,0 % 1]\n\n        Add
  the Riemann zeta function on non-negative integer arguments (#44).\n        E. g.,\n\n
  \       > take 5 $ Math.NumberTheory.Zeta.zetas 1e-15\n        [-0.5,Infinity,1.6449340668482262,1.2020569031595945,1.0823232337111381]\n\n
  \   Improvements:\n\n        Speed up isPrime twice; rework millerRabinV and isStrongFermatPP
  (#22, #25).\n\n0.4.3.0:\n    This release supports GHC 7.6, 7.8, 7.10 and 8.0.\n\n
  \   Add Math.NumberTheory.ArithmeticFunctions with brand-new machinery\n    for
  arithmetic functions: divisors, tau, sigma, totient, jordan,\n    moebius, liouville,
  smallOmega, bigOmega, carmichael, expMangoldt (#30).\n    Old implementations (exposed
  via Math.NumberTheory.Primes.Factorisation\n    and Math.NumberTheory.Powers.Integer)
  are deprecated and will be removed\n    in the next major release.\n\n    Add Karatsuba
  sqrt algorithm, improving performance on large integers (#6).\n\n    Fix incorrect
  indexing of FactorSieve (#35).\n\n0.4.2.0:\n    This release supports GHC 7.6, 7.8,
  7.10 and 8.0.\n\n    Add new cabal flag check-bounds, which replaces all unsafe
  array functions with safe ones.\n\n    Add basic functions on Gaussian integers.\n
  \   Add Möbius mu-function.\n\n    Forbid non-positive moduli in Math.NumberTheory.Moduli.\n\n
  \   Fix out-of-bounds error in Math.NumberTheory.Primes.Heap, Math.NumberTheory.Primes.Sieve
  and Math.NumberTheory.MoebiusInversion.\n    Fix 32-bit build.\n    Fix binaryGCD
  on negative numbers.\n    Fix highestPower (various issues).\n\n0.4.1.0:\n    Add
  integerLog10 variants at Bas van Dijk's request and expose\n    Math.NumberTheory.Powers.Integer,
  with an added integerWordPower.\n0.4.0.4:\n    Update for GHC-7.8, the type of some
  primops changed, they return Int# now\n    instead of Bool.\n    Fixed bugs in modular
  square roots and factorisation.\n0.4.0.3:\n    Relaxed dependencies on mtl and containers\n
  \   Fixed warnings from GHC-7.5, Word(..) moved to GHC.Types\n    Removed SPECIALISE
  pragma from inline function (warning from 7.5, probably\n    pointless anyway)\n0.4.0.2:\n
  \   Sped up factor sieves. They need more space now, but the speedup is worth it,
  IMO.\n    Raised spec-constr limit in MoebiusInversion.Int\n0.4.0.1:\n    Fixed
  Haddock bug\n0.4.0.0:\n    Added generalised Möbius inversion, to be continued\n0.3.0.0:\n
  \   Added modular square roots and Chinese remainder theorem\n0.2.0.6:\n    Performance
  tweaks for powerModInteger (~10%) and\n    invertMod (~25%).\n0.2.0.5:\n    Fix
  bug in psieveFrom\n0.2.0.4:\n    Fix bug in nthPrime\n0.2.0.3:\n    Fix bug in powerMod\n0.2.0.2:\n
  \   Relax bounds on array dependency for 7.4.*\n0.2.0.1:\n    Fix copy-pasto (only
  relevant for 7.3.*)\n    Fix imports for ghc >= 7.3\n0.2.0.0:\n    Added certificates
  and certified testing/factorisation\n0.1.0.2:\n    Fixed doc bugs\n0.1.0.1:\n    Elaborate
  on overflow, work more on native Ints in Eratosthenes\n0.1.0.0:\n    First release\n"
basic-deps:
  integer-logarithms: ! '>=1.0'
  base: ! '>=4.7 && <5'
  array: ! '>=0.5 && <0.6'
  integer-gmp: <1.1
  containers: ! '>=0.5 && <0.7'
  exact-pi: ! '>=0.4.1.1'
  ghc-prim: <0.6
  mtl: ! '>=2.0 && <2.3'
  random: ! '>=1.0 && <1.2'
  vector: ! '>=0.12'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.0.3'
- '0.2.0.4'
- '0.2.0.5'
- '0.2.0.6'
- '0.3.0.0'
- '0.4.0.0'
- '0.4.0.1'
- '0.4.0.2'
- '0.4.0.3'
- '0.4.0.4'
- '0.4.1.0'
- '0.4.1.1'
- '0.4.1.2'
- '0.4.1.3'
- '0.4.2.0'
- '0.4.3.0'
- '0.5.0.0'
- '0.5.0.1'
- '0.6.0.0'
- '0.6.0.1'
- '0.7.0.0'
author: Daniel Fischer
latest: '0.7.0.0'
description-type: haddock
description: ! 'A library of basic functionality needed for

  number-theoretic calculations. The aim of this library

  is to provide efficient implementations of the functions.

  Primes and related things (totients, factorisation),

  powers (integer roots and tests, modular exponentiation).'
license-name: MIT
