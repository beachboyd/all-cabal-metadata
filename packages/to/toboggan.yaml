homepage: https://github.com/vmchale/toboggan#readme
changelog-type: ''
hash: f80b89efe1a958e2af98757ddce7f825d665e20db6ae6cd18269a8d59fe7bd5b
test-bench-deps: {}
maintainer: tmchale@wisc.edu
synopsis: Twitter bot generator
changelog: ''
basic-deps:
  optparse-generic: ! '>=1.1.4 && <1.2'
  base: ! '>=4.9.1.0 && <4.10'
  text: ! '>=1.2.2.1 && <1.3'
  madlang: ! '>=2.1.0.1 && <2.2'
  toboggan: ! '>=0.1.0.1 && <0.2'
  tweet-hs: ! '>=0.5.3.2 && <0.6'
  directory: ! '>=1.3.0.0 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Vanessa McHale
latest: 0.1.0.1
description-type: markdown
description: ! "## Toboggan - a twitter bot generator\n\n### Horoscope example\n\nThis
  is an example of how to use the `Text.Madlibs` and `Web.Tweet` modules; primarily
  to showcase the Madlibs DSL. You can try a test tweet with\n\n```\n $ toboggan --config
  configure/horoscope.mad --cred YOUR_CRED_FILE\n```\n\nYou'll get a JSON-encoded
  response saying it all worked nicely if all goes well. If you like the results you
  can also get an example crontab for a daily bot that runs at 1pm with \n\n```\n
  $ toboggan --cron --config template.mad --cred credential\n \n# m  h  dom mon dow
  \  command  9 13  *   *   *    ~/.local/bin/toboggan --cred /home/user/programs/toboggan/credential
  --config /home/user/programs/toboggan/template.mad\n\n(json response will be here)\n```\n\n###
  Installation\n\nInstall stack with\n\n```\ncurl -sSL http://haskellstack.org | sh\n```\n\nand
  then use `stack install toboggan` to install. \n\n### Configuration\n\nConfigure
  using a `.cred` file as described in `Web.Tweet` [documentation](https://hackage.haskell.org/package/clit-0.2.0.1/docs/Web-Tweet.html).
  Use a Madlibs file to generate the bot text.\n\n#### Editing\n\nYou'll probably
  want the [madlang-vim](http://github.com/vmchale/madlang-vim) if you use vim. \n"
license-name: BSD-3-Clause
