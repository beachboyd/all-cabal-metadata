homepage: ''
changelog-type: text
hash: 5668dc1d180e05d6c06c9566acddcf581dd3f50ed4fb3b17ea52daff47fdbf9f
test-bench-deps:
  split: -any
  base: -any
  QuickCheck: ! '>=2.4'
maintainer: byorgey@gmail.com
synopsis: Combinator library for splitting lists.
changelog: ! "* 0.2.3.3 (23 Jan 2018)\n\n  - Update for GHC-8.4, test with GHC 7.0-8.4\n\n*
  0.2.3.2 (15 May 2017)\n\n  - Move to github.\n\n* 0.2.3.1 (2 May 2016)\n\n  - Fix
  a test case which was causing occasional spurious test suite\n    failures due to
  too many discarded tests.  Thanks to Doug\n    Beardsley and Peter Simons for reporting
  the issue.\n\n* 0.2.3 (12 January 2016)\n\n  - New function 'divvy' (with associated
  tests) from Tim Washington.\n\n* 0.2.2r2 (7 Jan 2016)\n\n  - allow base-4.9\n\n*
  0.2.2r1 (12 Dec 2014)\n\n  - allow base-4.8\n\n* 0.2.2 (14 April 2013)\n\n  - Add
  'dropInnerBlanks' combinator for dropping blank chunks between\n    consecutive
  delimiters while still keeping the delimiters separate.\n\n* 0.2.1.3 (28 March 2013)\n\n
  \ - bump upper bound to allow base-4.7\n\n* 0.2.1.2 (28 January 2013)\n\n  - Patch
  from Daniel Wagner to make splitting lazier when using\n    keepDelimsR.  Previously
  nothing was output until encountering a\n    delimiter; now it can start outputting
  a Text chunk before\n    reaching a delimiter.\n\n* 0.2.1.1 (24 September 2012)\n\n
  \ - Update this CHANGES file with details from the past two releases.\n\n* 0.2.1.0
  (24 September 2012)\n\n  - Go back to generic definition of 'build' (reverses change\n
  \   introduced in 0.1.4.3), for simplicity and Haskell2010 compliance.\n\n* 0.2.0.0
  (21 August 2012)\n\n  - test with GHC 7.6.1 and bump base dependency to allow base-4.6\n\n
  \ - deprecate synonyms: sepBy, sepByOneOf, unintercalate, chunk\n\n  - rename splitEvery
  to chunksOf\n\n  - unify Delimiter definition, and get rid of GADTs extension\n\n*
  0.1.4.3 (7 June 2012)\n\n  - Import 'build' function from GHC.Exts instead of defining
  it by\n    hand, which can lead to some speedups (since GHC has special\n    rewriting
  rules for the version in GHC.Exts).  Of course this ties\n    it to GHC; if you
  want to build split under some other compiler,\n    let me know and I can add some
  CPP directives to define 'build'\n    conditionally.\n\n  - Remove unnecessary Rank2Types
  extension.\n\n* 0.1.4.2 (21 December 2011)\n\n  - Bump version upper bound for base
  and Test with GHC 7.4.1rc1\n\n* 0.1.4.1 (3 August 2011)\n\n  - Bump version upper
  bound for base and test with GHC 7.2.0rc1.\n\n* 0.1.4\n\n  - Add 'splitPlacesBlanks'
  function from Daniel Wagner; like\n    'splitPlaces' but pads the output with blank
  lists to match the\n    length of the input list of places to split.\n\n* 0.1.3\n\n
  \ - Add 'chop' list-processing function.\n\n* 0.1.2.3\n\n  - Now builds with GHC
  7\n\n* 0.1.2.2\n\n  - Fix typo in documentation (davidL)\n\n  - Lazier implementation
  of splitInternal from Jan Christiansen.\n    Performance on large lists with not
  very many split points is now\n    greatly improved."
basic-deps:
  base: <4.12
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.1.2.1'
- '0.1.2.2'
- '0.1.2.3'
- '0.1.3'
- '0.1.4'
- '0.1.4.1'
- '0.1.4.2'
- '0.1.4.3'
- '0.2.0.0'
- '0.2.1.0'
- '0.2.1.1'
- '0.2.1.2'
- '0.2.1.3'
- '0.2.2'
- '0.2.3'
- '0.2.3.1'
- '0.2.3.2'
- '0.2.3.3'
author: Brent Yorgey
latest: '0.2.3.3'
description-type: text
description: ! "\nData.List.Split provides a wide range of strategies and a unified\ncombinator
  framework for splitting lists with respect to some sort of\ndelimiter.\n\n------------------------------------------------------------------------\n\nDependencies:\n\n
  \ There are no dependencies other than the base package.\n  Data.List.Split has
  been tested with versions of GHC from 6.8.3 up\n  through 8.0.1.  It is completely
  Haskell2010 (probably also\n  Haskell98) compliant, so it probably builds with other
  compilers as\n  well.\n\n  The Properties.hs file depends on QuickCheck >= 2.4,
  but you don't\n  need it in order to build the library itself, only to run the tests.\n\nBuild
  with Cabal:\n\n    cabal install\n\nBuilding Haddock documentation (recommended):\n\n
  \   cabal haddock\n\n  Once the documentation has been built, you can access it
  by \n  pointing your browser to dist/doc/html/split/index.html.\n\nRunning the tests:\n\n
  \ cabal configure --enable-tests && cabal build && cabal test\n"
license-name: BSD3
