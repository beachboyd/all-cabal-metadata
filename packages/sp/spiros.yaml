homepage: https://github.com/sboosali/spiros#readme
changelog-type: ''
hash: 7633e30b0c2630922bc66bbd29a83468721952eed99fa1e48288aa4677013519
test-bench-deps:
  spiros: -any
  base: -any
  doctest: -any
maintainer: samboosalis@gmail.com
synopsis: Spiros Boosalis's Custom Prelude
changelog: ''
basic-deps:
  spiros: -any
  exceptions: ! '>=0.10'
  bytestring: -any
  case-insensitive: -any
  split: -any
  stm: -any
  base: ! '>=4.7 && <5.0'
  data-default-class: -any
  time: ! '>=1.8'
  unordered-containers: -any
  text: -any
  cpuinfo: ! '>=0.1.0.1'
  generic-deriving: ! '>=1.11'
  unix-compat: ! '>=0.5'
  filepath: ! '>=1.4'
  process: -any
  semigroups: ! '>=0.16.2'
  containers: -any
  string-conv: -any
  mtl: -any
  hashable: ! '>=1.2.5'
  prettyprinter: -any
  transformers: -any
  optparse-applicative: -any
  deepseq: ! '>=1.0'
  template-haskell: ! '>=2.10'
  safe: -any
  vector: -any
  directory: ! '>=1.3'
all-versions:
- 0.0.0
- 0.4.0
author: Spiros Boosalis
latest: 0.4.0
description-type: markdown
description: "[![Build Status](https://secure.travis-ci.org/sboosali/spiros.svg)](http://travis-ci.org/sboosali/spiros)\n[![Hackage](https://img.shields.io/hackage/v/spiros.svg)](https://hackage.haskell.org/package/spiros)\n\n#
  spiros\n\nmy custom prelude\n\n[reverse dependencies](http://packdeps.haskellers.com/reverse/spiros)\n\n#
  Notes\n\n[Haskell CPP Macros](http://www.edsko.net/2014/09/13/haskell-cpp-macros/):
  \n\n# Checking for minimal package versions\n\n    #if MIN_VERSION_process(1,2,0)\n
  \       -- ...\n    #else\n        -- ...\n    #endif\n\n## Checking GHC version\n\neither
  indirectly via `base`:\n\n    #if MIN_VERSION_base(4,7,0)\n\nor directly:\n\n    #if
  MIN_VERSION_GLASGOW_HASKELL(7,6,0,0)\n\nor, with an older macro:\n\n    #if __GLASGOW_HASKELL__
  >= 706\n\n# Checking host platform\n\n    #if defined(mingw32_HOST_OS)\n    #if
  defined(cygwin32_HOST_OS) \n    #if defined(darwin_HOST_OS)\n    #if defined(aix_HOST_OS)\n\n#
  Custom macros\n\nIn your Cabal file, [1] add a custom flag:\n\n    Flag development\n
  \     Description:   Turn on development settings.\n      Default:       False\n
  \  \nthat defines a custom CPP flag:\n\n    library\n      ...\n      if flag(development)\n
  \       cpp-options: -DDEVELOPMENT\n      ...\n\nwhich you can then condition on
  in your Haskell files (as normal):\n\n    #if DEVELOPMENT\n    ...\n\nSimilarly,
  your Cabal file can set flags given the: current architecture, package versions,
  etc. \n\nFor example, if you need a more fine-grained check for the GHC version
  (__GLASGOW_HASKELL__ gives major and minor version number but not patch level) you
  can add\n\n    library\n      if impl(ghc == 7.6.1)\n        cpp-options: -DGHC_761\n\n# "
license-name: Apache-2.0
