homepage: https://github.com/davnils/spoty
changelog-type: text
hash: 17b0cb1990a42917ed407ecae950e64e0a6ce888c42e45d450a0935ba0f4bff1
test-bench-deps: {}
maintainer: nilsson.dd+code@gmail.com
synopsis: Spotify web API wrapper
changelog: ! 'Changes in 1.0.0.2

  ------------------


  * Only support lens >=4.4 and wreq >=0.2 due to breaking changes


  Changes in 1.0.0.1

  ------------------


  * New upper bound for base 4.7 (supports haskell platform 2014.2.0.0 and GHC 7.8.3)


  * New upper bound for aeson 0.8


  Changes in 1.0.0.0

  ------------------


  * Initial release

'
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  lens-aeson: ! '>=1 && <1.1'
  base: ! '>=4.6 && <4.8'
  unordered-containers: ! '>=0.2.3 && <0.3'
  text: ! '>=0.11 && <1.2'
  wreq: ! '>=0.2 && <0.3'
  lens: ! '>=4.4 && <4.5'
  pipes: ! '>=4.1 && <4.2'
  aeson: ! '>=0.7.0.6 && <0.8.1'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
author: David Nilsson
latest: 0.1.0.2
description-type: haddock
description: ! 'Web API <https://developer.spotify.com/web-api/> wrapper powered by
  lens and pipes, allowing easy access to public endpoints.

  Does not have any external dependencies nor requirements regarding app registration.


  * Paging is handled transparently using pipes


  * All data types are navigated using lenses


  All public endpoints, with multi-get versions excluded, are implemented.


  > > :set -XOverloadedStrings

  > > :m +Control.Lens Utils.Spoty

  > > Just artist <- fetchOne (searchArtist "avicii")      -- assume at least one
  match

  > > popular <- getArtistTop (view spotifyID artist) "SE" -- retrieve the most popular
  tracks in Sweden

  > > mapM_ (print . view name) popular                    -- print the corresponding
  names

  > "Hey Brother"

  > "Addicted To You"

  > "Wake Me Up"

  > ...


  Please read the README for details.'
license-name: BSD-3-Clause
