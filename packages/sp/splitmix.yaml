homepage: ''
changelog-type: markdown
hash: 43c99d273df0ef6eae9b6fdb50e7208a74e3678f51a0941c696e0ac84573429c
test-bench-deps:
  tf-random: ==0.5.*
  bytestring: ! '>=0.10.4.0 && <0.11'
  base-compat-batteries: ! '>=0.10.1 && <0.11'
  base: -any
  criterion: ! '>=1.1.0.0 && <1.5'
  process: ! '>=1.1.0.2 && <1.7'
  splitmix: -any
  async: ! '>=2.2.1 && <2.3'
  containers: ! '>=0.5 && <0.6'
  random: -any
  deepseq: -any
  vector: ! '>=0.12.0.1 && <0.13'
maintainer: Oleg Grenrus <oleg.grenrus@iki.fi>
synopsis: Fast Splittable PRNG
changelog: ! "# 0.0.1\n\n- Add `NFData SMGen` instance\n- Fix a bug. http://www.pcg-random.org/posts/bugs-in-splitmix.html\n
  \ The generated numbers will be different for the same seeds!\n"
basic-deps:
  base: ! '>=4.5 && <4.12'
  time: ! '>=1.4.0.1 && <1.9'
  random: ! '>=1.1 && <1.2'
  deepseq: ! '>=1.3.0.1 && <1.5'
all-versions:
- '0'
- '0.0.1'
author: ''
latest: '0.0.1'
description-type: markdown
description: ! "# splitmix\n\nPure Haskell implementation of SplitMix pseudo-random
  number generator.\n\n## dieharder\n\n> [Dieharder](http://webhome.phy.duke.edu/~rgb/General/dieharder.php)
  is a random\nnumber generator (rng) testing suite. It is intended to test generators,
  not\nfiles of possibly random numbers as the latter is a fallacious view of what
  it\nmeans to be random. Is the number 7 random? If it is generated by a random\nprocess,
  it might be. If it is made up to serve the purpose of some argument\n(like this
  one) it is not. Perfect random number generators produce \"unlikely\"\nsequences
  of random numbers &ndash; at exactly the right average rate. Testing a rng\nis therefore
  quite subtle.\n\n```\ntime $(cabal-plan list-bin splitmix-dieharder) splitmix\n```\n\nThe
  test-suite takes around half-an-hour to complete.\nFrom 30 runs, 2.49% were weak
  (3247 passed, 83 weak, 0 failed).\n\nIn comparison, built-in [Marsenne Twister](https://en.wikipedia.org/wiki/Mersenne_Twister)\ntest
  takes around 15min.\n\n```\ntime dieharder -a\n```\n\n## benchmarks\n\n```\nbenchmarking
  list 64/random\ntime                 1.317 ms   (1.303 ms .. 1.335 ms)\n                     0.998
  R²   (0.998 R² .. 0.999 R²)\nmean                 1.380 ms   (1.365 ms .. 1.411
  ms)\nstd dev              70.83 μs   (37.26 μs .. 131.8 μs)\nvariance introduced
  by outliers: 39% (moderately inflated)\n\nbenchmarking list 64/tf-random\ntime                 141.1
  μs   (140.4 μs .. 142.1 μs)\n                     0.999 R²   (0.998 R² .. 1.000
  R²)\nmean                 145.9 μs   (144.6 μs .. 150.4 μs)\nstd dev              7.131
  μs   (3.461 μs .. 14.75 μs)\nvariance introduced by outliers: 49% (moderately inflated)\n\nbenchmarking
  list 64/splitmix\ntime                 17.86 μs   (17.72 μs .. 18.01 μs)\n                     0.999
  R²   (0.998 R² .. 1.000 R²)\nmean                 17.95 μs   (17.75 μs .. 18.47
  μs)\nstd dev              1.000 μs   (444.1 ns .. 1.887 μs)\nvariance introduced
  by outliers: 64% (severely inflated)\n\nbenchmarking tree 64/random\ntime                 800.3
  μs   (793.3 μs .. 806.5 μs)\n                     0.999 R²   (0.998 R² .. 0.999
  R²)\nmean                 803.2 μs   (798.1 μs .. 811.2 μs)\nstd dev              22.09
  μs   (14.69 μs .. 35.47 μs)\nvariance introduced by outliers: 18% (moderately inflated)\n\nbenchmarking
  tree 64/tf-random\ntime                 179.0 μs   (176.6 μs .. 180.7 μs)\n                     0.999
  R²   (0.998 R² .. 0.999 R²)\nmean                 172.7 μs   (171.3 μs .. 174.6
  μs)\nstd dev              5.590 μs   (4.919 μs .. 6.382 μs)\nvariance introduced
  by outliers: 29% (moderately inflated)\n\nbenchmarking tree 64/splitmix\ntime                 51.54
  μs   (51.01 μs .. 52.15 μs)\n                     0.999 R²   (0.998 R² .. 0.999
  R²)\nmean                 52.50 μs   (51.93 μs .. 53.55 μs)\nstd dev              2.603
  μs   (1.659 μs .. 4.338 μs)\nvariance introduced by outliers: 55% (severely inflated)\n```\n\nNote:
  the performance can be potentially further improved when GHC gets\n[SIMD Support](https://ghc.haskell.org/trac/ghc/wiki/SIMD/Implementation/Status).\n"
license-name: BSD3
