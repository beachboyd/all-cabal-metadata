homepage: https://github.com/sternenseemann/spacecookie
changelog-type: markdown
hash: 3b46ec61a40030a15dd68dc2eca115466613a188b8edd63a2714b9dd6cf7a1b4
test-bench-deps: {}
maintainer: git@lukasepple.de
synopsis: gopher server daemon
changelog: |
  # Revision history for spacecookie

  ## 0.2.0.0 initial release

  * First version. Released on an unsuspecting world. Includes:
    * Library for writing any gopher server / application.
    * File system based gopher server with support for gopher maps.
    * Supports logging, privilege dropping, the gopher protocol and common extensions.
basic-deps:
  bytestring: -any
  unix: -any
  base: ! '>=4.9.0.0 && <5'
  socket: -any
  spacecookie: -any
  filepath: -any
  fast-logger: ! '>=2.4.0 && <2.5'
  containers: -any
  mtl: -any
  attoparsec: -any
  transformers: -any
  hxt-unicode: -any
  aeson: -any
  directory: -any
all-versions:
- 0.2.0.1
author: Lukas Epple
latest: 0.2.0.1
description-type: markdown
description: "\t ____                                       _    _      \n\t/ ___|
  _ __   __ _  ___ ___  ___ ___   ___ | | _(_) ___ \n\t\\___ \\| '_ \\ / _` |/ __/
  _ \\/ __/ _ \\ / _ \\| |/ / |/ _ \\\n\t ___) | |_) | (_| | (_|  __/ (_| (_) | (_)
  |   <| |  __/\n\t|____/| .__/ \\__,_|\\___\\___|\\___\\___/ \\___/|_|\\_\\_|\\___|\n\t
  \     |_|    – haskell gopher server\n\n## What is Gopher?\n\n> The Gopher protocol
  /ˈɡoʊfər/ is a TCP/IP application layer protocol designed for distributing, searching,
  and retrieving documents over the Internet. The Gopher protocol was strongly oriented
  towards a menu-document design and presented an alternative to the World Wide Web
  in its early stages, but ultimately HTTP became the dominant protocol. The Gopher
  ecosystem is often regarded as the effective predecessor of the World Wide Web.\n\n–
  [WP](https://en.wikipedia.org/wiki/Gopher_(protocol))\n\n## What is Spacecookie?\n\nSpacecookie
  is a gopher server and…\n\n* is RFC1436-compliant\n* supports info-line in menus
  (compatible protocol extension)\n* supports gophermaps (see below)\n* includes a
  library for custom gopher applications\n\n## Configuration\n\nIn order to run your
  new gopher server, you got to configure it first. The example configuration file
  is `./etc/spacecookie.json`.\n\nLet's have a quick look at the options:\n\noption
  \    | meaning                                                 \n-----------|--------------------------------------------------------------------------------------------------------\n`hostname`
  | The hostname your spacecookie will be reachable through.\n`user`     | The user
  that just run spacecookie. It is used to drop root priveleges after binding the
  server socket.\n`port`     | The port spacecookie should listen on. The well-known
  port for gopher is 70.\n`root`     | The directory which the files to serve via
  gopher are located in.\n\n## Running\n\nAfter you've created your config file just
  start spacecookie like this:\n\n\tspacecookie /path/to/spacecookie.json\n\nOf course
  it is more convenient to run it as a system wide demon. For that reason a systemd
  `spacecookie.service` is provided. You can use it like this:\n\n\tsystemctl enable
  spacecookie.service\n\tsystemctl start  spacecookie.service\n\nPlease note that
  you have to move the necessary file in place manually at the moment.\n\n## Adding
  Content\n\nSpacecookie acts as a simple file server, only excluding files that start
  with a dot.\nIt generates gopher menus automatically; however you can use custom
  ones by adding a gophermap file.\n\nSpacecookie checks for `.gophermap` in every
  directory it serves and, if present, uses the menu specified in there.\n\nSuch a
  file looks like this:\n\n\tYou can just start writing text that\n\twill be displayed
  by the gopher client\n\twithout a link to a file. Empty lines are\n\talso possible.\n\n\t1Menu
  Entry for a directory full of funny stuff\t/funny\n\tiFunny Image\t/funy.jpg\n\tgcat
  gif\t/cat.gif\n\t0about me\t/about.txt\n\t1Floodgap's gopher server\t/\tgopher.floodgap.com\t70\n\nSo
  what does that all mean? These are the rules for a gophermap file:\n\n* comment
  lines (called info lines in spacecookie's code) are just lines of text. They must
  not contain a tab! They will be displayed as lines of text by the gopher client.\n*
  menu entries for files or directories start with a single char which specifies the
  file type, followed by the text for that file without a space or tab between them!
  Then the path is added after a tab.\n* \"Links\" to other servers are like file/directory
  menu entries but the server's hostname and its port must be added (tab-separated).\n\nThe
  file type characters are defined in [RFC1436](https://tools.ietf.org/html/rfc1436#page-10).
  Detailed documentation on the gophermap format [can be found here](./docs/gophermap-pygopherd.txt).\n"
license-name: GPL-3.0-only
