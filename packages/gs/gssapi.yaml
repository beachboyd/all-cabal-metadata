homepage: https://github.com/ondrap/gssapi
changelog-type: markdown
hash: ee35d9ff17b6600bfce0ca372f4678a1c6bba08014bc7d78644fc2fb0ede28cb
test-bench-deps: {}
maintainer: palkovsky.ondrej@gmail.com
synopsis: libgssapi and libkrb5 bindings for haskell
changelog: ! '## 0.2.0.1


  Relax base library constraints to allow 8.2 GHC.


  ## 0.2.0.0


  Better exception handling. `GssException` now contains both major and minor code
  and description for both.

'
basic-deps:
  bytestring: -any
  base: ! '>=4.8 && <5'
  transformers: -any
  resourcet: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
author: Ondrej Palkovsky
latest: 0.2.0.1
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/ondrap/gssapi.svg?branch=master)](https://travis-ci.org/ondrap/gssapi)
  [![Hackage](https://img.shields.io/hackage/v/gssapi.svg)](https://hackage.haskell.org/package/gssapi)\n\n##
  GSSAPI and Kerberos bindings for Haskell\n\nThis library provides a simplified kerberos
  and GSSAPI bindings for the SPNEGO authentication.\n\n- Modelled after [spnego-http-auth-nginx-module](https://github.com/stnoonan/spnego-http-auth-nginx-module)\n-
  See [this](https://ping.force.com/Support/PingFederate/Integrations/How-to-configure-supported-browsers-for-Kerberos-NTLM)
  on how to configure browsers\n- See [this](http://pythonhackers.com/p/bcandrea/spnego-http-auth-nginx-module)
  on how to\n  configure keys on the windows AD\n\n### Short story\n\n#### On the
  AD side, you need to\n\n- Create a new user, whose name should be the service name
  you'll be using Kerberos authentication on. E.g. `app.example`.\n- Set the \"User
  cannot change password\" and \"Password never expires\" options on the account\n-
  Set a strong password on it\n\nFrom a Windows cmd.exe window, generate the service
  principals and keytabs for this user. You need an SPN named `host/foo.example.com`,
  and another named `HTTP/foo.example.com`. It is crucial that foo.example.com is
  the DNS name of your web site in the intranet, and it is an A record. Given that
  app.example is the account name you created, you would execute:\n\n    C:\\> ktpass
  -princ host/foo.example.com@EXAMPLE.COM -mapuser\n    EXAMPLECOM\\app.example -pass
  * -out host.keytab -ptype KRB5_NT_PRINCIPAL -crypto All\n\n    C:\\> ktpass -princ
  HTTP/foo.example.com@EXAMPLE.COM -mapuser\n    EXAMPLECOM\\app.example -pass * -out
  http.keytab -ptype KRB5_NT_PRINCIPAL -crypto All\n\nVerify that the correct SPNs
  are created:\n\n    C:\\> setspn -Q */foo.example.com\n\nit should yield both the
  `HTTP/` and `host/` SPNs, both mapped to the app.example user.\n\n#### On the server
  side you need to\n\nCreate a krb5.keytab using ktutil, concatenating together the
  two SPNs keytabs:\n\n    # ktutil\n    ktutil:  rkt host.keytab\n    ktutil:  rkt
  http.keytab\n    ktutil:  wkt /etc/krb5.keytab\n    ktutil:  quit\n\n\nVerify that
  the created keytab file has been built correctly:\n\n    # klist -kt /etc/krb5.keytab\n
  \   Keytab name: WRFILE:/etc/krb5.keytab\n    KVNO Timestamp         Principal\n
  \   ---- ----------------- --------------------------------------------------------\n
  \   9 02/19/13 04:02:48 HTTP/foo.example.com@EXAMPLE.COM\n    8 02/19/13 04:02:48
  host/foo.example.com@EXAMPLE.COM\n\nKey version numbers (KVNO) will be different
  in your case.\n\nVerify that you are able to authenticate using the keytab, without
  password:\n\n    # kinit -5 -V -k -t /etc/krb5.keytab HTTP/foo.example.com\n      Authenticated
  to Kerberos v5\n\n    # klist\n    Ticket cache: FILE:/tmp/krb5cc_0\n    Default
  principal: HTTP/foo.example.com@EXAMPLE.COM\n\n    Valid starting     Expires            Service
  principal\n    02/19/13 17:37:42  02/20/13 03:37:40  krbtgt/EXAMPLE.COM@EXAMPLE.COM\n
  \           renew until 02/20/13 17:37:42\n\nMake the keytab file accessible only
  by appropriate users or groups\n\n    # chmod 440 /etc/krb5.keytab\n    # chown
  root:nginx /etc/krb5.keytab\n\n#### There are some issues regarding kvno changes\n\nYou
  can generate keys on the server by\n\n    $ kinit ....\n    # Note down kvno from
  next commands\n    $ kvno HTTP/machine.domain.org@DOMAIN.ORG\n    $ kvno host/machine.domain.org@DOMAIN.ORG\n
  \   # Add new keys to /etc/krb5.keytab (enter -k KVNO from previous commands)\n
  \   # Use the ciphers you need for your systems\n    $ ktutil\n    addent -password
  -p HTTP/machine.domain.org@DOMAIN.ORG -k 12 -e arcfour-hmac\n    addent -password
  -p host/machine.domain.org@DOMAIN.ORG -k 12 -e arcfour-hmac\n    wkt /etc/krb5.keytab\n"
license-name: BSD-3-Clause
