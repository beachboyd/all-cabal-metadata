homepage: ''
changelog-type: markdown
hash: 80a359b841579e49b38cff0257d4a2b212aa4e4e11fd39484c0c3e593b1c75b2
test-bench-deps:
  base: ! '>=4.9'
  random: ! '>=1.1'
  haskell-src-meta: ! '>=0.8.0.1'
  template-haskell: ! '>=2.11.1.0'
maintainer: nobrakal@cthugha.org
synopsis: Write your tests in comments
changelog: ! '# Revision history for testCom


  ## 0.3.0  -- 2017-10-31


  * Add test by specification

  * Parse error encapsulated


  ## 0.2.0  -- 2017-09-28


  * Can parse object correctly

  * Change syntax for tests


  ## 0.1.1  -- 2017-09-25


  * Maintenance, can now parse object.


  ## 0.1.0  -- 2017-09-24


  * First version. Released on an unsuspecting world.

'
basic-deps:
  base: ! '>=4.9 && <4.11'
  random: ! '>=1.1'
  haskell-src-meta: ! '>=0.8.0.1'
  template-haskell: ! '>=2.11.1.0'
all-versions:
- 0.1.0
- 0.1.1
- 0.2.0
- 0.3.0
author: Alexandre Moine
latest: 0.3.0
description-type: markdown
description: ! "## testCom\n\n### How to use it\n\n#### Write your tests\n\nAbove
  a function to test, write your tests like this:\n\n```\n--[1 2] [3]\n--O[add 1 2]
  [3]\n--S[x@Int y@Int] [x@ + y@] [10]\nadd :: Int -> Int -> Int\nadd x y = x+y\n```\n\n####
  Syntax\n\n* Without any prefix: [args For The Function] [ExpectedResult]\n* With
  a O (Override) prefix: [custom Function To Test] [ExpectedResult]\n* With a S (Specification)
  prefix: [args Involving variable@Type] [ExpectedResult Maybe Involving variable@]
  [numberOfTestToDo]\n(for now only basic types are supported: Int Char and Bool).
  variable@Type MUST be surrounded by spaces.\n\n#### Run them\nFor example\n```\n{-#
  LANGUAGE TemplateHaskell #-}\n\nimport Language.Haskell.TH\nimport Language.Haskell.TH.Syntax\nimport
  System.Exit\n\n$(makeAllTestsHere)\n$(makeAllTests \"some/Path/File.hs\")\n\n--
  Tests\nmain :: IO ()\nmain = do\n  let (str,res) = _TEST_path -- Here, path=directory_actualfile.
  If your file is put in tests/Main.hs, then path=tests_Main (without the \".hs\")\n
  \ let (str',res') = _TEST_some_Path_File\n  putStrLn str\n  putStrLn str'\n  if
  res && res' then exitSuccess else exitFailure\n```\n"
license-name: LicenseRef-GPL
