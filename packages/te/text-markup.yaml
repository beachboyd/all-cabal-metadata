homepage: https://github.com/jtdaugherty/text-markup/
changelog-type: markdown
hash: bb31473b1b92f1f9568e052c39babc0e74297d6fae88ba2625f1dcdda188d6e0
test-bench-deps:
  base: ! '>=4.8 && <5.0'
  text: -any
  quickcheck-text: -any
  tasty-quickcheck: -any
  text-markup: -any
  tasty: -any
  QuickCheck: <=2.8.2
maintainer: cygnus@foobox.com
synopsis: A data structure for mapping metadata to text subsequences
changelog: ! '0.1

  ---


  Initial release

'
basic-deps:
  base: ! '>=4.8 && <5.0'
  text: -any
  containers: -any
all-versions:
- '0.1'
author: Jonathan Daugherty
latest: '0.1'
description-type: markdown
description: ! "text-markup\n===========\n\nThis library provides a data structure
  for associating arbitrary\nmetadata (\"markup\") with subsequences of text. The
  motivation for\nthis library is to provide a tool for mapping text attributes to
  text\nsequences in terminal applications where we may want to perform many\nsuch
  mappings by searching text with regular expressions or using\nparsers to do syntax
  highlighting.\n\nThe main interface to the library is through three functions:\n\n
  * `toMarkup` - convert a `Text` into a `Markup a`,\n * `markRegion` - mark a region
  of the `Text` with a metadata value of\n   type `a`, and\n * `fromMarkup` - recover
  the subsequences of the text with accompanying\n   metadata.\n\nFor example,\n\n```\n>
  let m = toMarkup (T.pack \"some@email.com 192.168.1.1 http://google.com/\") Nothing\n>
  fromMarkup $ markRegion 27 18 (Just \"url\")\n             $ markRegion 15 11 (Just
  \"ipv4\")\n             $ markRegion 0 14 (Just \"e-mail\") m\n[ (\"some@email.com\"
  \   , Just \"e-mail\")\n, (\" \"                 , Nothing)\n, (\"192.168.1.1\"
  \      , Just \"ipv4\")\n, (\" \"                 , Nothing)\n, (\"http://google.com/\",
  Just \"url\")\n]\n```\n\nApplying the same markup to adjacent regions results in
  a merge:\n\n```\n> let m = toMarkup (T.pack \"foobar\") Nothing\n> fromMarkup $
  markRegion 0 3 (Just \"token\") m\n[(\"foo\",Just \"token\"),(\"bar\",Nothing)]\n>
  fromMarkup $ markRegion 3 3 (Just \"token\")\n             $ markRegion 0 3 (Just
  \"token\") m\n[(\"foobar\",Just \"token\")]\n```\n"
license-name: BSD-3-Clause
