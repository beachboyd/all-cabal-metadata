homepage: https://github.com/haskell/text
changelog-type: markdown
hash: 9dc17a9736056785e11d8a6e3e1e3a88b2a16ed78bf6f27d34ff0827bad1ca21
test-bench-deps:
  test-framework-hunit: ! '>=0.2'
  bytestring: ! '>=0.10.4'
  test-framework: ! '>=0.4'
  base: -any
  test-framework-quickcheck2: ! '>=0.2'
  HUnit: ! '>=1.2'
  array: -any
  integer-gmp: ! '>=0.2'
  quickcheck-unicode: ! '>=1.0.1.0'
  binary: -any
  ghc-prim: -any
  random: -any
  deepseq: -any
  QuickCheck: ! '>=2.7 && <2.10'
  directory: -any
maintainer: Bryan O'Sullivan <bos@serpentine.com>
synopsis: An efficient packed Unicode text type.
changelog: ! "### 1.2.3.0\n\n* Spec compliance: `toCaseFold` now follows the Unicode
  9.0 spec\n  (updated from 8.0).\n\n* Bug fix: the lazy `takeWhileEnd` function violated
  the\n  [lazy text invariant](https://github.com/bos/text/blob/1.2.3.0/Data/Text/Internal/Lazy.hs#L51)\n
  \ (gh-184).\n\n* Bug fix: Fixed usage of size hints causing incorrect behavior (gh-197).\n\n*
  New function: `unsnoc` (gh-173).\n\n* Reduce memory overhead in `encodeUTF8` (gh-194).\n\n*
  Improve UTF-8 decoder error-recovery (gh-182).\n\n* Minor documentation improvements
  (`@since` annotations, more\n  examples, clarifications).\n\n#### 1.2.2.2\n\n* The
  `toTitle` function now correctly handles letters that\n  immediately follow punctuation.
  Before, `\"there's\"` would turn into\n  `\"There'S\"`. Now, it becomes `\"There's\"`.\n\n*
  The implementation of unstreaming is faster, resulting in operations\n  such as
  `map` and `intersperse` speeding up by up to 30%, with\n  smaller code generated.\n\n*
  The optimised length comparison function is now more likely to be\n  used after
  some rewrite rule tweaking.\n\n* Bug fix: an off-by-one bug in `takeEnd` is fixed.\n\n*
  Bug fix: a logic error in `takeWord16` is fixed.\n\n#### 1.2.2.1\n\n* The switch
  to `integer-pure` in 1.2.2.0 was apparently mistaken.\n  The build flag has been
  renamed accordingly.  Your army of diligent\n  maintainers apologizes for the churn.\n\n*
  Spec compliance: `toCaseFold` now follows the Unicode 8.0 spec\n  (updated from
  7.0)\n\n* An STG lint error has been fixed\n\n### 1.2.2.0\n\n* The `integer-simple`
  package, upon which this package optionally\n  depended, has been replaced with
  `integer-pure`.  The build flag has\n  been renamed accordingly.\n\n* Bug fix: For
  the `Binary` instance, If UTF-8 decoding fails during a\n  `get`, the error is propagated
  via `fail` instead of an uncatchable\n  crash.\n\n* New function: `takeWhileEnd`\n\n*
  New instances for the `Text` types:\n    * if `base` >= 4.7: `PrintfArg`\n    *
  if `base` >= 4.9: `Semigroup`\n\n#### 1.2.1.3\n\n* Bug fix: As it turns out, moving
  the literal rewrite rules to simplifier\n  phase 2 does not prevent competition
  with the `unpack` rule, which is\n  also active in this phase. Unfortunately this
  was hidden due to a silly\n  test environment mistake. Moving literal rules back
  to phase 1 finally\n  fixes GHC Trac #10528 correctly.\n\n#### 1.2.1.2\n\n* Bug
  fix: Run literal rewrite rules in simplifier phase 2.\n  The behavior of the simplifier
  changed in GHC 7.10.2,\n  causing these rules to fail to fire, leading to poor code
  generation\n  and long compilation times. See\n  [GHC Trac #10528](https://ghc.haskell.org/trac/ghc/ticket/10528).\n\n####
  1.2.1.1\n\n* Expose unpackCString#, which you should never use.\n\n### 1.2.1.0\n\n*
  Added Binary instances for both Text types. (If you have previously\n  been using
  the text-binary package to get a Binary instance, it is\n  now obsolete.)\n\n####
  1.2.0.6\n\n* Fixed a space leak in UTF-8 decoding\n\n#### 1.2.0.5\n\n* Feature parity:
  repeat, cycle, iterate are now implemented for lazy\n  Text, and the Data instance
  is more complete\n\n* Build speed: an inliner space explosion has been fixed with
  toCaseFold\n\n* Bug fix: encoding Int to a Builder would infinite-loop if the\n
  \ integer-simple package was used\n\n* Deprecation: OnEncodeError and EncodeError
  are deprecated, as they\n  are never used\n\n* Internals: some types that are used
  internally in fusion-related\n  functions have moved around, been renamed, or been
  deleted (we don't\n  bump the major version if .Internal modules change)\n\n* Spec
  compliance: toCaseFold now follows the Unicode 7.0 spec\n  (updated from 6.3)\n\n####
  1.2.0.4\n\n* Fixed an incompatibility with base < 4.5\n\n#### 1.2.0.3\n\n* Update
  formatRealFloat to correspond to the definition in versions\n  of base newer than
  4.5 (https://github.com/bos/text/issues/105)\n\n#### 1.2.0.2\n\n* Bumped lower bound
  on deepseq to 1.4 for compatibility with the\n  upcoming GHC 7.10\n\n#### 1.2.0.1\n\n*
  Fixed a buffer overflow in rendering of large Integers\n  (https://github.com/bos/text/issues/99)\n\n##
  1.2.0.0\n\n* Fixed an integer overflow in the replace function\n  (https://github.com/bos/text/issues/81)\n\n*
  Fixed a hang in lazy decodeUtf8With\n  (https://github.com/bos/text/issues/87)\n\n*
  Reduced codegen bloat caused by use of empty and single-character\n  literals\n\n*
  Added an instance of IsList for GHC 7.8 and above\n\n### 1.1.1.0\n\n* The Data.Data
  instance now allows gunfold to work, via a virtual\n  pack constructor\n\n* dropEnd,
  takeEnd: new functions\n\n* Comparing the length of a Text against a number can
  now\n  short-circuit in more cases\n\n#### 1.1.0.1\n\n* streamDecodeUtf8: fixed
  gh-70, did not return all unconsumed bytes\n  in single-byte chunks\n\n## 1.1.0.0\n\n*
  encodeUtf8: Performance is improved by up to 4x.\n\n* encodeUtf8Builder, encodeUtf8BuilderEscaped:
  new functions,\n  available only if bytestring >= 0.10.4.0 is installed, that allow\n
  \ very fast and flexible encoding of a Text value to a bytestring\n  Builder.\n\n
  \ As an example of the performance gain to be had, the\n  encodeUtf8BuilderEscaped
  function helps to double the speed of JSON\n  encoding in the latest version of
  aeson! (Note: if all you need is a\n  plain ByteString, encodeUtf8 is still the
  faster way to go.)\n\n* All of the internal module hierarchy is now publicly exposed.
  \ If a\n  module is in the .Internal hierarchy, or is documented as internal,\n
  \ use at your own risk - there are no API stability guarantees for\n  internal modules!\n\n####
  1.0.0.1\n\n* decodeUtf8: Fixed a regression that caused us to incorrectly\n  identify
  truncated UTF-8 as valid (gh-61)\n\n# 1.0.0.0\n\n* Added support for Unicode 6.3.0
  to case conversion functions\n\n* New function toTitle converts words in a string
  to title case\n\n* New functions peekCStringLen and withCStringLen simplify\n  interoperability
  with C functionns\n\n* Added support for decoding UTF-8 in stream-friendly fashion\n\n*
  Fixed a bug in mapAccumL\n\n* Added trusted Haskell support\n\n* Removed support
  for GHC 6.10 (released in 2008) and older\n"
basic-deps:
  bytestring: ! '>=0.10.4'
  base: ! '>=4.2 && <5'
  array: ! '>=0.3'
  integer-gmp: ! '>=0.2'
  binary: -any
  ghc-prim: ! '>=0.2'
  deepseq: ! '>=1.1.0.0'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- '0.7'
- '0.7.0.1'
- '0.7.1.0'
- '0.7.2.1'
- '0.8.0.0'
- '0.8.1.0'
- '0.9.0.0'
- '0.9.0.1'
- '0.9.1.0'
- '0.10.0.0'
- '0.10.0.1'
- '0.10.0.2'
- '0.11.0.0'
- '0.11.0.1'
- '0.11.0.2'
- '0.11.0.3'
- '0.11.0.4'
- '0.11.0.5'
- '0.11.0.6'
- '0.11.0.7'
- '0.11.0.8'
- '0.11.1.0'
- '0.11.1.1'
- '0.11.1.2'
- '0.11.1.3'
- '0.11.1.5'
- '0.11.1.6'
- '0.11.1.7'
- '0.11.1.8'
- '0.11.1.9'
- '0.11.1.10'
- '0.11.1.11'
- '0.11.1.12'
- '0.11.1.13'
- '0.11.2.0'
- '0.11.2.1'
- '0.11.2.2'
- '0.11.2.3'
- '0.11.3.0'
- '0.11.3.1'
- '1.0.0.0'
- '1.0.0.1'
- '1.1.0.0'
- '1.1.0.1'
- '1.1.1.0'
- '1.1.1.1'
- '1.1.1.2'
- '1.1.1.3'
- '1.1.1.4'
- '1.2.0.0'
- '1.2.0.2'
- '1.2.0.3'
- '1.2.0.4'
- '1.2.0.5'
- '1.2.0.6'
- '1.2.1.0'
- '1.2.1.1'
- '1.2.1.2'
- '1.2.1.3'
- '1.2.2.0'
- '1.2.2.1'
- '1.2.2.2'
- '1.2.3.0'
author: Bryan O'Sullivan <bos@serpentine.com>
latest: '1.2.3.0'
description-type: markdown
description: ! '# `text`: Fast, packed Unicode strings, using stream fusion


  This package provides the Data.Text library, a library for the space-

  and time-efficient manipulation of Unicode text in Haskell.


  **Please refer to the [package description on Hackage](https://hackage.haskell.org/package/text#description)
  for more information.**


  # Get involved!


  Please report bugs via the

  [github issue tracker](https://github.com/haskell/text/issues).


  Master [git repository](https://github.com/haskell/text):


  * `git clone git://github.com/haskell/text.git`


  There''s also a [Mercurial mirror](https://bitbucket.org/bos/text):


  * `hg clone https://bitbucket.org/bos/text`


  (You can create and contribute changes using either Mercurial or git.)



  # Authors


  The base code for this library was originally written by Tom Harper,

  based on the stream fusion framework developed by Roman Leshchinskiy,

  Duncan Coutts, and Don Stewart.


  The core library was fleshed out, debugged, and tested by Bryan

  O''Sullivan <bos@serpentine.com>, and he is the current maintainer.

'
license-name: BSD2
