homepage: https://github.com/distrap/gcodehs
changelog-type: markdown
hash: 0cc00e6e68cfdbfcff05262ee95bfc594ae6a402d9729881230a62fb34f3e607
test-bench-deps:
  bytestring: -any
  ansi-wl-pprint: -any
  base: -any
  hspec: -any
  text: -any
  attoparsec: -any
  hspec-discover: -any
  gcodehs: -any
maintainer: srk@48.io
synopsis: GCode processor
changelog: |+
  # Version [0.1.2.0](https://github.com/distrap/gcodehs/compare/0.1.2.0...0.1.1.0) (2020-06-17)

  * Changelog started. Previous release was `0.1.1.0`.

  * Major rework, only core functionality and types unchanged
    * Little changes to parser and pretty printer, APIs unchaged

  * Additions
    * Canonical representation `Data.GCode.Canon`
    * Interepreters for both `GCode` and canonical representation
    * Line output
    * Tests
    * Helpers and monad for generating GCode
    * Pipes now exposed from library via `Data.GCode.Pipes`
    * `Data.GCode.RS274.Types` module with command decriptions

  ---

  `gcodehs` uses [PVP Versioning][1].

  [1]: https://pvp.haskell.org

basic-deps:
  bytestring: -any
  ansi-wl-pprint: -any
  base: '>=4.7 && <5'
  pipes-bytestring: -any
  text: -any
  double-conversion: -any
  containers: -any
  pipes-parse: -any
  pipes: -any
  pipes-attoparsec: -any
  attoparsec: -any
  transformers: -any
  optparse-applicative: -any
  pipes-safe: -any
  template-haskell: -any
  gcodehs: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
author: Richard Marko
latest: 0.1.2.0
description-type: markdown
description: |
  # gcodehs

  ## Installing

  * `git clone https://github.com/distrap/gcodehs/`
  * `cd gcodehs`
  * `nix-build` or `nix-shell`

  ## Usage

  To pretty-print `sample.gcode`::

  ```bash
  gcodehs pretty sample.gcode
  ```

  See `gcodehs --help` for usage information.

  ## Development status

  Pretty printing is slow due to conversion
  to text but we do have colors!

  Fast pretty printer is needed that operates
  with ByteStrings directly.

  ## Bash completion

  Generating bash completion::

  ```bash
  gcodehs --bash-completion-script `which gcodehs` &> gcodehs-completion.sh
  ```

  or sourcing directly::

  ```bash
  source <(gcodehs --bash-completion-script `which gcodehs`)
  ```
license-name: BSD-3-Clause
