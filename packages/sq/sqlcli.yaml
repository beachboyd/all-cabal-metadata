homepage: http://hub.darcs.net/mihaigiurgeanu/sqlcli
changelog-type: text
hash: 5da33dc0ba70ba25239bbe96a18623ab1a985270af77f9591f28593bd7dbe643
test-bench-deps: {}
maintainer: mihai.giurgean@gmail.com
synopsis: Sql Call-Level Interface bindings for Haskell.
changelog: ! "2018-03-17  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t* sqlcli.cabal
  (Flag ODBC): enable ODBC flag by default\n\n2017-12-26  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\t*
  src/SQL/CLI.hs (SQLINTEGER): fix SQLINTEGER problems with ODBC on 64 bit platforms
  by using SQLLEN and SQLHANDLE\n\tChanged all definitions taking a length parameter
  to use SQLLEN and SQLULEN types instead of SQLINTEGER.\n\n2017-11-30  Mihai Giurgeanu
  \ <mihai.giurgeanu@gmail.com>\n\n\t* src/SQL/CLI/Utils.hs (fetchAndRunWithFail):
  new function similar to fetchAndRun but offering control on fail conditions\n\t(forAllRecordsWithEndAndFail):
  new function similar to forAllRecords but gives control over end and fail conditions\n\n2017-11-28
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t* src/SQL/CLI/Utils.hs (collectColumnsInfo):
  refactor collectColumnsInfo into 2 functions: colllectColumnsInfo and collectColumnsInfo'\n\n2017-11-10
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t* src/SQL/CLI/Utils.hs (collectColumnsInfo):
  sort the columns list by the ordinal position of the column in the table\n\n2017-11-09
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t* src/SQL/CLI.hs (SQLINTEGER):
  changed definition of SQLINTEGER to 32 bit CInt\n\n\t* src/SQL/CLI/Utils.hs (collectColumnsInfo):
  clear size and buffer_length buffers after each record\n\n2017-11-01  Mihai Giurgeanu
  \ <mihai.giurgeanu@gmail.com>\n\n\t* src/SQL/CLI/Utils.hs: use a simple logging
  framework instead of hPutStrLn stderr\n\n2017-09-18  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t*
  src/SQL/CLI/Utils.hs (getDataAndRun): check the lenOrInd to see if more data is
  available\n\t(getCountOfDiagRecs): initialize return buffer with 0\n\n2017-09-17
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t* src/SQL/CLI/Utils.hs (endTran):
  add EndTran wrapper\n\t(collectColumnsInfo): log to stderr before calling forAllRecords\n\t(getDataAndRun):
  don't display warnings on more data\n\t(displayDiagRec): add function displayDiagRec\n\n2017-09-16
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t* src/SQL/CLI/Utils.hs (setConnectAttr):
  add SetConnectAttr wrapper\n\n2017-09-13  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t*
  src/SQL/CLI/Utils.hs (tableExists): add schema name parameter\n\t(collectColumnsInfo):
  add schema name parameter\n\t(paramData): fix error when ParamData returns success\n\t(getCountOfDiagRecs):
  fix reading diagnostic records count return type\n\t(getDataAndRun): fix checking
  for more date in diagnostics\n\n2017-09-12  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t*
  src/SQL/CLI/Utils.hs (getDescField): add wrapper for GetDescField\n\t(setDescField):
  add wrapper for SetDescField\n\t(toCLIType): add toCLIType function\n\n\t* src/SQL/CLI.hs
  (sql_desc_octet_length_ptr): fix spelling\n\n2017-09-11  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t*
  src/SQL/CLI/Utils.hs (getDesRec): add wrapper for SQL/CLI function\n\tGetDescRec\n\t(setDescRec):
  add wrapper for SQL/CLI function SetDescRec\n\t(getStorableStmtAttr): add helper
  function, getStorableStmtAttr\n\t(getData): fixed doc\n\t(forAllData): add forAllData
  function\n\n2017-09-10  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\n\n\t* src/SQL/CLI/Utils.hs
  (getStmtAttr): add wrapper for the SQL/CLI function\n\tGetStmtAttr\n\t(numResultCols):
  add wrapper for the SQL/CLI function NumResultCols\n\n2017-09-09  Mihai Giurgeanu
  \ <mihai.giurgeanu@gmail.com>\n\n\t* src/SQL/CLI/Utils.hs (paramData): add wrapper
  to SQL/CLI function ParamData\n\t(putData): add wrapper to SQL/CLI function PutData\n\t(bindParam):
  add wrapper for SQL/CLI function BindParam\n\n\t* src/SQL/CLI.hs (sqlparamdata):
  change second parameter to Ptr SQLPOINTER\n\n\t* src/SQL/CLI/Utils.hs (prepare):
  add wrapper to Prepare SQL/CLI API call\n\n\t* src/SQL/CLI.hs (sqlexecute): fix
  the name of imported function\n\n\t* src/SQL/CLI/Utils.hs (execDirect): add feeddata
  action to supply data\n\tfor dynamic parameters\n\t(execute): add wrapper for Execute
  SQL/CLI api call\n\nCopyright 2017 Mihai Giurgeanu\nCopying and distribution of
  this file, with or without modification, are\npermitted provided the copyright notice
  and this notice are preserved.\n"
basic-deps:
  base: ! '>=4.7 && <5'
  text: ! '>=0.11.3.1'
  transformers: ! '>=0.5 && <0.6'
  logging: ! '>=3.0 && <4'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
author: Mihai Giurgeanu
latest: 0.2.0.1
description-type: markdown
description: ! "# sqlcli\n\nA library wrapping X/Open's SQL/CLI specification for
  C bindings.\n\nThe `SQL.CLI` module contains all the foreign function calls, constants\nand
  types defined by the SQL/CLI specificaition. \n\n`SQL.CLI.Utils` module contains
  wrappers to SQL/CLI function calls \nthat make easier to treat the error cases and
  deal with the SQL/CLI\ndiagnostic as well as other useful constructs in calling
  SQL/CLI API.\n\n"
license-name: BSD-3-Clause
