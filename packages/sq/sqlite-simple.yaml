homepage: http://github.com/nurpax/sqlite-simple
changelog-type: text
hash: b50aea1c9eb53e37f2b483caaae9b3bf93492c44575cfa5507a323aeaf1e2f8a
test-bench-deps:
  bytestring: ! '>=0.9'
  base: -any
  time: -any
  sqlite-simple: -any
  text: -any
  direct-sqlite: -any
  HUnit: -any
  base16-bytestring: -any
maintainer: Janne Hellsten <jjhellst@gmail.com>
synopsis: Mid-Level SQLite client library
changelog: ! "0.4.14.0\r\n\t* Use @hvr's Only package for the Only single element
  typle type.\r\n\r\n0.4.13.0\r\n\t* Add columnCount (thanks @Shimuuar!)\r\n\t* Add
  withImmediateTransaction, withExclusiveTransaction (thanks @mbucc!)\r\n\t* Expose
  the Database.SQLite3 Statement type through Database.SQLite.Simple Statement\r\n\r\n0.4.12.1\r\n\t*
  Add Setup.hs (https://github.com/fpco/stackage/issues/2145)\r\n\r\n0.4.12.0\r\n\t*
  Add queryWith\r\n\r\n0.4.11.0\r\n\t* Add executeMany\r\n\r\n0.4.10.0\r\n\t* Expose
  sqlite3_changes/total_changes\r\n\r\n0.4.9.0\r\n\t* Provide queryWith_ to allow
  more fine-grained access to\r\n\t  constructing queries.\r\n\t* Expose error data
  constructors (pull request #42)\r\n\t* Improve haddocks\r\n\r\n0.4.8.0\r\n\t* Export
  `bindNamed'\r\n\r\n0.4.7.0\r\n\t* Add `withTransaction' for running IO actions inside
  SQL\r\n\t  transactions with automated rollback if any exceptions are thrown.\r\n\r\n0.4.6.1\r\n\t*
  Fix unit test build break with older bytestring versions\r\n\r\n0.4.6.0\r\n\t* Add
  \"named parameters\" variants of query & al.  Named params\r\n\t  allow queries
  like:\r\n\t  res <- queryNamed conn \"SELECT * FROM posts WHERE id = :id\" [\":id\"
  := postId]\r\n\t* Add FromField instances for Int8, Word, Word8, Word16, Word32\r\n\t
  \ and Word64.\r\n\t* Fix typos in some type conversion error messages.\r\n\t* Improved
  test coverage.\r\n\r\n0.4.5.2\r\n\t* Build fix for GHC 7.4\r\n\r\n0.4.5.1\r\n\t*
  Docs changes - uploaded new version to Hackage to update the\r\n\tHackage page.\r\n\r\n0.4.5.0\r\n\r\n\t*
  Various improvements to documentation.  Especially UTCTime\r\n\t  parsing and printing,
  and how it relates to SQLite datetimes is\r\n\t  better documented now.\r\n\r\n\t*
  Improved date/time parsing performance by adapting Leon\r\n\t  P. Smith's parsers
  from postgresql-simple for SQLite.  UTCTime\r\n\t  handling is also better defined
  now.\r\n\r\n\t* Improved query performance\r\n\t  (https://github.com/nurpax/sqlite-simple/issues/23)\r\n\r\n\t*
  Improved tests for all areas touched by the above change.\r\n\r\nv0.4.4.0\r\n\r\n\t*
  Add FromField instance for Float\r\n\r\n\t* Improve error handling for day parsing\r\n\r\n\t*
  + with tests\r\n\r\nv0.4.1.0 - v0.4.3.0 (missed tagging v0.4.2.0)\r\n\r\n\t* Improvements
  to withBind functionality and documentation\r\n\t  (see https://github.com/nurpax/sqlite-simple/pull/26)\r\n\r\n\t*
  Add columnName accessor for statements\r\n\r\n\t* Expose MonadPlus on RowParser\r\n\r\n\t*
  Allow access to the underlying direct-sqilte connection from an\r\n\t  sqlite-simple
  connection\r\n\r\n\t* Add Data.Text.Lazy and lazy ByteString From/ToField instances\r\n\r\nv0.4.0.0\r\n\r\n\t*
  Add lastInsertRowId\r\n\r\n\t* Expose SQLite statements based streaming API\r\n\t
  \ (see https://github.com/nurpax/sqlite-simple/pull/22)\r\n\r\nv0.3.0.0\r\n\r\n\t*
  Add fold, fold_, withConnection\r\n\r\nv0.2.0.0 - v0.2.1.0\r\n\r\n\t* Optimizations
  to improve query rows/sec performance\r\n"
basic-deps:
  Only: ! '>=0.1 && <0.1.1'
  bytestring: ! '>=0.9'
  base: ! '>=4.5 && <4.11'
  time: -any
  text: ! '>=0.11'
  blaze-textual: -any
  direct-sqlite: ! '>=2.3.13 && <2.4'
  containers: -any
  blaze-builder: -any
  attoparsec: ! '>=0.10.3'
  transformers: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.2.0.0'
- '0.2.1.0'
- '0.3.0.0'
- '0.4.0.0'
- '0.4.1.0'
- '0.4.2.0'
- '0.4.3.0'
- '0.4.3.1'
- '0.4.4.0'
- '0.4.5.0'
- '0.4.5.1'
- '0.4.5.2'
- '0.4.6.0'
- '0.4.6.1'
- '0.4.7.0'
- '0.4.8.0'
- '0.4.9.0'
- '0.4.10.0'
- '0.4.11.0'
- '0.4.12.0'
- '0.4.12.1'
- '0.4.13.0'
- '0.4.14.0'
author: Bryan O'Sullivan, Leon P Smith, Janne Hellsten
latest: '0.4.14.0'
description-type: markdown
description: ! "sqlite-simple: mid-level bindings to the sqlite database\r\n========================================================\r\n\r\nThis
  library is a mid-level Haskell binding to the SQLite database.\r\n\r\nSqlite-simple
  provides a convenient API to sqlite that does some level\r\nof automatic data conversion
  between the database and Haskell types.\r\nThe API has been modeled directly after\r\n[postgresql-simple](http://github.com/lpsmith/postgresql-simple)
  which\r\nin turn borrows from\r\n[mysql-simple](https://github.com/bos/mysql-simple).\r\n\r\n[The
  sqlite-simple API\r\nreference](https://hackage.haskell.org/package/sqlite-simple/docs/Database-SQLite-Simple.html)\r\ncontains
  more examples of use and information on its features.\r\n\r\nThe library is well
  tested and stable.  The library should also be\r\nreasonably performant.  You can
  find its benchmark suite here:\r\n[db-bench](https://github.com/nurpax/db-bench).
  \ You can read more\r\nabout sqlite-simple's expected performance in [my blog about\r\nsqlite-simple
  performance against direct-sqlite, Python and\r\nC](http://nurpax.github.io/posts/2013-08-17-sqlite-simple-benchmarking.html).\r\n\r\n[![Build
  Status](https://secure.travis-ci.org/nurpax/sqlite-simple.png)](http://travis-ci.org/nurpax/sqlite-simple)\r\n\r\nInstallation\r\n------------\r\n\r\nYou
  can install [sqlite-simple from Hackage](http://hackage.haskell.org/package/sqlite-simple)\r\nwith:\r\n\r\n```\r\ncabal
  install sqlite-simple\r\n```\r\n\r\nA Windows user?  It works but please see [this
  note](https://gist.github.com/3907344) on direct-sqlite Windows installation.\r\n\r\nExamples
  of use\r\n---------------\r\n\r\nCreate a test database by copy&pasting the below
  snippet to your\r\nshell:\r\n\r\n```\r\nsqlite3 test.db \"CREATE TABLE test (id
  INTEGER PRIMARY KEY, str text);\\\r\nINSERT INTO test (str) VALUES ('test string');\"\r\n```\r\n\r\n..and
  access it in Haskell:\r\n\r\n```haskell\r\n{-# LANGUAGE OverloadedStrings #-}\r\nimport
  Control.Applicative\r\nimport Database.SQLite.Simple\r\nimport Database.SQLite.Simple.FromRow\r\n\r\ndata
  TestField = TestField Int String deriving (Show)\r\n\r\ninstance FromRow TestField
  where\r\n  fromRow = TestField <$> field <*> field\r\n\r\nmain :: IO ()\r\nmain
  = do\r\n  conn <- open \"test.db\"\r\n  execute conn \"INSERT INTO test (str) VALUES
  (?)\"\r\n    (Only (\"test string 2\" :: String))\r\n  r <- query_ conn \"SELECT
  * from test\" :: IO [TestField]\r\n  mapM_ print r\r\n  close conn\r\n```\r\n\r\nMore
  simple usage examples can be found from [sqlite-simple unit\r\ntests](https://github.com/nurpax/sqlite-simple/blob/master/test/Simple.hs).\r\n\r\n\r\nDevelopment\r\n-----------\r\n\r\nThe
  development roadmap for sqlite-simple is mostly captured in the\r\ngithub issue
  database.\r\n\r\nI'm happy to receive bug reports, fixes, documentation enhancements,\r\nand
  other improvements.\r\n\r\nPlease report bugs via the\r\n[github issue tracker](http://github.com/nurpax/sqlite-simple/issues).\r\n\r\nFor
  general database issues with a Haskell focus, I recommend sending\r\ne-mail to the
  [database-devel mailing\r\nlist](http://www.haskell.org/mailman/listinfo/database-devel).\r\n\r\n###
  Contributing\r\n\r\nIf you send pull requests for new features, it'd be great if
  you could also develop unit\r\ntests for any such features.\r\n\r\n\r\nCredits\r\n-------\r\n\r\nA
  lot of the code is directly borrowed from\r\n[mysql-simple](http://github.com/bos/mysql-simple)
  by Bryan O'Sullivan\r\nand from\r\n[postgresql-simple](http://github.com/lpsmith/postgresql-simple)
  by\r\nLeon P. Smith.  Like Leon in postgresql-simple, I borrow code and\r\ndocumentation
  directly from both of these ancestor libraries.\r\n\r\nThis package builds on top
  of the\r\n[direct-sqlite](http://hackage.haskell.org/package/direct-sqlite)\r\npackage
  by Irene Knapp.\r\n\r\nSQLite is rather weakly-typed and thus the SQL to Haskell
  type\r\nstrictness of the parent projects does not necessarily apply to this\r\npackage.\r\n"
license-name: BSD3
