homepage: ''
changelog-type: ''
hash: fcb171fd3243033d1452fd00044efd389c78e080566375a82990c76ca6e69352
test-bench-deps: {}
maintainer: claude@mathr.co.uk
synopsis: double-double and quad-double number type via libqd
changelog: ''
basic-deps:
  base: ! '>=4 && <5'
  floatshow: ! '>=0.2 && <0.3'
all-versions:
- '0.1'
- '0.2'
- '0.4'
- 0.4.1
- '1.0'
- 1.0.2.1
author: Claude Heiland-Allen
latest: 1.0.2.1
description-type: haddock
description: ! 'This package supports both a double-double datatype (approx. 32 decimal
  digits)

  and a quad-double datatype (approx. 64 decimal digits), using libqd (which is

  implemented in C++ with C and Fortran wrappers).  To compile this package you

  need libqd to be installed.


  @''Numeric.QD.DoubleDouble.DoubleDouble''@ and @''Numeric.QD.QuadDouble.QuadDouble''@

  are strict tuples of @CDouble@s, with instances of:

  @''BinDecode''@, @''DecimalFormat''@, @''Eq''@, @''Floating''@, @''Fractional''@,
  @''Num''@,

  @''Ord''@, @''Read''@, @''Real''@, @''RealFrac''@, @''Show''@, @''Storable''@, @''Typeable''@.


  Additional note: libqd depends on 64bit doubles, while some FPU architectures

  use 80bit.  When using the Unsafe modules this might cause erroneous results;

  the Safe modules (used by the instances above) set and restore the FPU flags

  in foreign code to avoid race conditions from pre-emptive Haskell threading.'
license-name: BSD-3-Clause
