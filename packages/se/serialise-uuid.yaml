homepage: https://gitlab.com/k0001/serialise-uuid
changelog-type: markdown
hash: 3a1b604e1bce42c4ea0c8b6c545a02a1934fabfdab4f9b60da26a8c5db20912f
test-bench-deps:
  serialise: -any
  bytestring: -any
  base: -any
  serialise-uuid: -any
  tasty-quickcheck: -any
  tasty-hunit: -any
  tasty: -any
  uuid-types: -any
maintainer: renÎ»ren.zone
synopsis: Encode and decode UUID values in CBOR using uuid-types, cborg and serialise.
changelog: |
  # 0.1

  * Builds with GHC 8.6.5, GHC 8.8.2, GHCJS 8.6.0.
basic-deps:
  serialise: -any
  bytestring: -any
  base: ==4.*
  cborg: -any
  uuid-types: -any
all-versions:
- '0.1'
author: Renzo Carbonara
latest: '0.1'
description-type: markdown
description: |
  # serialise-uuid

  Encode and decode UUID values in CBOR
  using [uuid-types](
  https://hackage.haskell.org/package/uuid-types
  ), [cborg](
  https://hackage.haskell.org/package/cborg
  ) and [serialise](
  https://hackage.haskell.org/package/serialise
  ).

  # Development

  * Build all with `nix-build`.

  * Build with some GHC or GHCJS version with `nix-build -A $xxx`, where `$xxx` is
    one of `ghc865`, `ghc883`, `ghcjs86`.

  * Enter a development environment with `nix-shell -A $xxx.env`, where `$xxx` is
    one of `ghc865`, `ghc883`, `ghcjs86`.
license-name: BSD-3-Clause
