homepage: http://haskell-servant.readthedocs.org/
changelog-type: markdown
hash: 431c3a175b9341baaa23b48668159795a79176c0cbf7bb4a7a6cc96f0cf9973d
test-bench-deps:
  aeson-compat: ! '>=0.3.3 && <0.4'
  bytestring: -any
  filemanip: -any
  base: ==4.*
  hspec: ==2.*
  text: -any
  url: -any
  filepath: -any
  doctest: -any
  servant: -any
  quickcheck-instances: -any
  base-compat: -any
  attoparsec: -any
  QuickCheck: -any
  string-conversions: -any
  aeson: -any
  directory: -any
maintainer: haskell-servant-maintainers@googlegroups.com
synopsis: A family of combinators for defining webservices APIs
changelog: ! "[The latest version of this document is on GitHub.](https://github.com/haskell-servant/servant/blob/master/servant/CHANGELOG.md)\n\n0.12\n---\n\n###
  Significant changes\n\n- *servant-client* *servant-client-core*\n  Factored out
  of `servant-client` all the functionality that was\n  independent of the `http-client`
  backend.\n  ([#803](https://github.com/haskell-servant/servant/pull/803)\n   [#821](https://github.com/haskell-servant/servant/issues/821))\n\n
  \ If you have own combinators, you'll need to add an additional `m` argument\n  in
  `HasClient`, `Client` and `clientWithRoute`:\n\n  ```diff\n  -class HasClient api\n
  \ -  type Client (api :: *) :: *\n  -  clientWithRoute :: Proxy api -> Req -> Client
  api\n  +class HasClient m api\n  +  type Client (m :: * -> *) (api :: *) :: *\n
  \ +  clientWithRoute :: Proxy m -> Proxy api -> Request -> Client m api\n  ```\n\n
  \ See https://github.com/haskell-servant/servant-auth/pull/67/commits/f777818e3cc0fa3ed2346baff8328e96d62b1790
  for a real world example.\n\n- *servant-server* Added `hoistServer` member to the
  `HasServer` class, which is `HasServer`\n  specific `enter`.\n  ([#804](https://github.com/haskell-servant/servant/pull/804)\n
  \  [#824](https://github.com/haskell-servant/servant/pull/824))\n\n  `enter` isn't
  exported from `Servant` module anymore. You can change\n  `enter` to `hoistServer`
  in a straight forward way.\n  Unwrap natural transformation and add a api type `Proxy`:\n\n
  \ ```diff\n  -server = enter (NT nt) impl\n  +server = hoistServer (Proxy :: Proxy
  MyApi) nt impl\n  ```\n\n  If you have own combinators, you'll need to define a
  new method of\n  `HasServer` class, for example:\n\n  ```haskell\n  type ServerT
  (MyCombinator :> api) m = MyValue -> ServerT api m\n  hoistServerWithContext _ pc
  nt s = hoistServerWithContext (Proxy :: Proxy api) pc nt . s\n  ```\n\n  See https://github.com/haskell-servant/servant-auth/pull/67/commits/8ee3b6315247ac076516213fd7cfcdbfdb583ac9
  for a real world example.\n\n- Add `Description` and `Summary` combinators\n  ([#767](https://github.com/haskell-servant/servant/pull/767))\n\n
  \ It's possible to annotate endpoints with free form text.\n  This information is
  used by e.g. by `servant-swagger`, see screenshot in\n  https://github.com/phadej/servant-swagger-ui\n\n-
  Lower `:>` and `:<|>` infix precedence to 4 and 3 respectively\n  ([#761](https://github.com/haskell-servant/servant/issues/761))\n\n
  \ This should affect you, except if you define your own infix operators\n  for Servant
  type-level DSL.\n\n### Other changes\n\n- *servant-foreign* Derive `Data` for all
  types\n  ([#809](https://github.com/haskell-servant/servant/pull/809))\n- *servant-docs*
  Add authentication lenses\n  ([#787](https://github.com/haskell-servant/servant/pull/787))\n-
  *servant-docs* Generated markdown improvements\n  ([#813](https://github.com/haskell-servant/servant/pull/787)\n
  \  [#767](https://github.com/haskell-servant/servant/pull/767)\n   [#790](https://github.com/haskell-servant/servant/pull/790)\n
  \  [#788](https://github.com/haskell-servant/servant/pull/788))\n- Add `addLinks`
  to generate all links for unnested APIs.\n  ([#851](https://github.com/haskell-servant/servant/pull/851))\n-
  Allow newest dependencies\n ([#772](https://github.com/haskell-servant/servant/pull/772)\n
  \ [#842](https://github.com/haskell-servant/servant/pull/842))\n- Documentation
  improvements and typo fixes\n ([#757](https://github.com/haskell-servant/servant/pull/757)\n
  \ [#771](https://github.com/haskell-servant/servant/pull/771)\n  [#775](https://github.com/haskell-servant/servant/pull/775)\n
  \ [#790](https://github.com/haskell-servant/servant/pull/790)\n  [#791](https://github.com/haskell-servant/servant/pull/791)\n
  \ [#806](https://github.com/haskell-servant/servant/pull/806))\n- Development process
  improvements\n  ([#764](https://github.com/haskell-servant/servant/pull/764)\n   [#839](https://github.com/haskell-servant/servant/pull/839))\n\n0.11\n----\n\n###
  Breaking changes\n\n- `Enter` refactored\n  ([#734](https://github.com/haskell-servant/servant/issues/734)\n
  \ , [#736](https://github.com/haskell-servant/servant/pull/736))\n\n### Other changes\n\n-
  Add a type representing an empty API\n  ([#753](https://github.com/haskell-servant/servant/pull/753))\n-
  Add `linkURI'` and `Link` accessors\n  ([#745](https://github.com/haskell-servant/servant/pull/745)\n
  \ , [#717](https://github.com/haskell-servant/servant/pull/717)\n  , [#715](https://github.com/haskell-servant/servant/issues/715))\n-
  Prepare for GHC-8.2\n  ([#722](https://github.com/haskell-servant/servant/pull/722))\n-
  Add `HasLink AuthProtect` instance\n  ([#720](https://github.com/haskell-servant/servant/pull/720))\n-
  `AllCTRender [] ()` `TypeError` (use `NoContent`)\n  ([#671](https://github.com/haskell-servant/servant/pull/671))\n-
  Documentation improvements and typo fixes\n  ([#702](https://github.com/haskell-servant/servant/pull/702)\n
  \ , [#709](https://github.com/haskell-servant/servant/pull/709)\n  , [#716](https://github.com/haskell-servant/servant/pull/716)\n
  \ , [#725](https://github.com/haskell-servant/servant/pull/725)\n  , [#727](https://github.com/haskell-servant/servant/pull/727))\n\n0.10\n----\n\n###
  Breaking changes\n\n* Use `NT` from `natural-transformation` for `Enter`\n  ([#616](https://github.com/haskell-servant/servant/issues/616))\n\n*
  Change to `MkLink (Verb ...) = Link` (previously `URI`). To consume `Link`\n  use
  its `ToHttpApiData` instance or `linkURI`.\n  ([#527](https://github.com/haskell-servant/servant/issues/527))\n\n###
  Other changes\n\n* Add `Servant.API.TypeLevel` module with type families to work
  with API types.\n  ([#345](https://github.com/haskell-servant/servant/pull/345)\n
  \ , [#305](https://github.com/haskell-servant/servant/issues/305))\n\n* Default
  JSON content type change to `application/json;charset=utf-8`.\n  ([#263](https://github.com/haskell-servant/servant/issues/263))\n
  \ Related browser bugs:\n  [Chromium](https://bugs.chromium.org/p/chromium/issues/detail?id=438464)
  and\n  [Firefox](https://bugzilla.mozilla.org/show_bug.cgi?id=918742)\n\n* `Accept`
  class may accept multiple content-types. `MimeUnrender` adopted as well.\n  ([#613](https://github.com/haskell-servant/servant/pull/614)\n
  \ , [#615](https://github.com/haskell-servant/servant/pull/615))\n\n0.9.1\n------\n\n*
  Added 'noHeader' function for *not* adding response headers.\n\n0.9\n---\n\n* Added
  Eq, Show, Read, Generic and Ord instances to IsSecure\n* BACKWARDS INCOMPATIBLE:
  replace use of `ToFromByteString` with `To/FromHttpApiData` for `GetHeaders/BuildHeadersTo`\n*
  BACKWARDS INCOMPATIBLE: Moved `From/ToFormUrlEncoded` classes, which were renamed
  to `From/ToForm` to `http-api-data`\n\n0.8.1\n----\n\n* Add `CaptureAll` combinator.
  Captures all of the remaining segments in a URL.\n* Add `Servant.API.TypeLevel`
  module, with frequently used type-level\nfunctionaliy.\n\n0.8\n---\n\n* Minor fixes,
  documentation changes and cabal tweaks\n\n0.7.1\n-----\n\n* Add module `Servant.Utils.Enter`
  (https://github.com/haskell-servant/servant/pull/478)\n* Allow to set the same header
  multiple times in responses.\n\n0.5\n---\n\n* Add `WithNamedConfig` combinator.\n*
  Add `HttpVersion`, `IsSecure`, `RemoteHost` and `Vault` combinators\n* Fix safeLink,
  so Header is not in fact required.\n* Add more instances for (:<|>)\n* Use `http-api-data`
  instead of `Servant.Common.Text`\n* Remove matrix params.\n* Add PlainText String
  MimeRender and MimeUnrender instances.\n* Add new `Verbs` combinator, and make all
  existing and new verb combinators\ntype synonyms of it.\n* Add `BasicAuth` combinator
  to support Basic authentication\n* Add generalized authentication support\n\n0.4.2\n-----\n*
  Fix missing cases for `Patch` in `safeLink`\n\n0.4.1\n-----\n* Allow whitespace
  after parsing JSON\n* Stricter matching for `safeLink` for `Capture`\n\n0.4\n---\n*
  `Delete` now is like `Get`, `Post`, `Put`, and `Patch` and returns a response body\n*
  Multiple content-type/accept support for all the relevant combinators\n* Provide
  *JSON*, *PlainText*, *OctetStream* and *FormUrlEncoded* content types out of the
  box\n* Type-safe link generation to API endpoints\n* Support for the PATCH HTTP
  method\n* Removed the home-made QuasiQuote for writing API types in a more human-friendly
  format until we come up with a better design for it\n* Make most if not all of the
  haddock code examples run through doctest\n* Some general code cleanup\n* Add response
  headers\n"
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  case-insensitive: ! '>=1.2 && <1.3'
  base: ! '>=4.7 && <4.11'
  text: ! '>=1 && <1.3'
  http-api-data: ! '>=0.3 && <0.4'
  tagged: ! '>=0.7.3 && <0.9'
  base-compat: ! '>=0.9 && <0.10'
  vault: ! '>=0.3 && <0.4'
  network-uri: ! '>=2.6 && <2.7'
  mtl: ! '>=2.0 && <2.3'
  natural-transformation: ! '>=0.4 && <0.5'
  mmorph: ! '>=1 && <1.2'
  attoparsec: ! '>=0.12 && <0.14'
  string-conversions: ! '>=0.3 && <0.5'
  http-types: ! '>=0.8 && <0.12'
  aeson: ! '>=0.7 && <1.3'
  http-media: ! '>=0.4 && <0.8'
all-versions:
- '0.1'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.3.1'
- '0.4.4'
- '0.4.4.2'
- '0.4.4.3'
- '0.4.4.4'
- '0.4.4.5'
- '0.4.4.6'
- '0.4.4.7'
- '0.5'
- '0.6'
- '0.6.1'
- '0.7'
- '0.7.1'
- '0.8'
- '0.8.1'
- '0.9'
- '0.9.0.1'
- '0.9.1'
- '0.9.1.1'
- '0.10'
- '0.11'
- '0.12'
author: Servant Contributors
latest: '0.12'
description-type: haddock
description: ! 'A family of combinators for defining webservices APIs and serving
  them


  You can learn about the basics in the <http://haskell-servant.readthedocs.org/en/stable/tutorial/index.html
  tutorial>.


  <https://github.com/haskell-servant/servant/blob/master/servant/CHANGELOG.md CHANGELOG>'
license-name: BSD3
