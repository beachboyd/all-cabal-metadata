homepage: http://haskell-servant.readthedocs.org/
changelog-type: markdown
hash: b50f8f2067f60401f210b1160005454c8200c03519a647b2889c3863a406d269
test-bench-deps:
  base: -any
  hspec: ==2.*
  servant-client-core: -any
  base-compat: -any
  deepseq: -any
  QuickCheck: ! '>=2.7 && <2.11'
maintainer: haskell-servant-maintainers@googlegroups.com
synopsis: Core functionality and class for client function generation for servant
  APIs
changelog: ! "[The latest version of this document is on GitHub.](https://github.com/haskell-servant/servant/blob/master/servant-client-core/CHANGELOG.md)\n[Changelog
  for `servant` package contains significant entries for all core packages.](https://github.com/haskell-servant/servant/blob/master/servant/CHANGELOG.md)\n\n0.12\n----\n\n-
  First version. Factored out of `servant-client` all the functionality that was\n
  \ independent of the `http-client` backend.\n"
basic-deps:
  exceptions: ! '>=0.8 && <0.9'
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.7 && <4.11'
  base64-bytestring: ! '>=1.0.0.1 && <1.1'
  text: ! '>=1.2 && <1.3'
  http-api-data: ! '>=0.3.6 && <0.4'
  servant: ==0.12.*
  containers: ! '>=0.5 && <0.6'
  base-compat: ! '>=0.9.1 && <0.10'
  network-uri: ! '>=2.6 && <2.7'
  mtl: ! '>=2.1 && <2.3'
  generics-sop: ! '>=0.1.0.0 && <0.4'
  http-types: ! '>=0.8.6 && <0.12'
  safe: ! '>=0.3.9 && <0.4'
  http-media: ! '>=0.6.2 && <0.8'
all-versions:
- '0.12'
author: Servant Contributors
latest: '0.12'
description-type: markdown
description: ! "# servant-client-core\n\n![servant](https://raw.githubusercontent.com/haskell-servant/servant/master/servant.png)\n\nHTTP-client-agnostic
  client functions for servant APIs.\n\nThis library should mainly be of interest
  to backend- and combinator-writers.\n\n## For backend-writers\n\nIf you are creating
  a new backend, you'll need to:\n\n1. Define a `RunClient` instance for your datatype
  (call it `MyMonad`)\n2. Define a `ClientLike` instance. This will look like:\n\n```
  haskell\ninstance ClientLike (MyMonad a) (MyMonad a) where\n  mkClient = id\n```\n\n3.
  Re-export the module Servant.Client.Core.Reexport so that your end-users\n   can
  be blissfully unaware of 'servant-client-core', and so each\n   backend-package
  comes closer to the warm hearth of the drop-in-replacement\n   equivalence class.\n\n##
  For combinator-writers\n\nYou'll need to define a new `HasClient` instance for your
  combinator. There are\nplenty of examples to guide you in the\n[HasClient](src/Servant/Client/Core/Internal/HasClient.hs)
  module.\n"
license-name: BSD3
