homepage: https://github.com/cocreature/servant-match#readme
changelog-type: ''
hash: 7d904400d3766ffe2cac30f9cd5eee36afdd3cb16ddcceff2dc68d271a78f3e9
test-bench-deps:
  servant-match: -any
  base: -any
  hspec: -any
  text: -any
  servant: -any
  network-uri: -any
maintainer: moritz.kiefer@purelyfunctional.org
synopsis: Standalone implementation of servantâ€™s dispatching mechanism
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4.8 && <5'
  text: -any
  servant: ! '>=0.12'
  utf8-string: -any
  network-uri: -any
  http-types: -any
all-versions:
- 0.1.1
author: Moritz Kiefer
latest: 0.1.1
description-type: markdown
description: ! "# servant-match\n\n[![Travis](https://img.shields.io/travis/cocreature/servant-match.svg)](https://travis-ci.org/cocreature/servant-match)\n[![Hackage](https://img.shields.io/hackage/v/servant-match.svg)](https://hackage.haskell.org/package/servant-match)\n\nThis
  package provides a standalone implementation of dispatching a\nfunction by matching
  it against a Servant API. A common usecase for\nthis is to convert an `URI` to an
  ADT that provides a more structured\nrepresentation of the URL.\n\n## Usage\n\n```haskell\ndata
  DataView\n  = Show\n  | Edit\n  deriving (Show, Eq)\n\ndata View\n  = ViewUsers\n
  \ | ViewNewUser\n  | ViewUser !Text !DataView\n  deriving (Show, Eq)\n\ndata User
  = User\n\ntype API =\n  \"users\" :> (Get '[JSON] [User] :<|> \"new\" :> ReqBody
  '[JSON] User :> Post '[JSON] User) :<|>\n  \"user\" :> Capture \"user\" Text :>\n
  \   (Get '[JSON] User :<|>\n     \"edit\" :> ReqBody '[JSON] User :> Put '[JSON]
  User)\n\nparser :: MatchT API View\nparser =\n  (ViewUsers :<|> ViewNewUser) :<|>
  (\\u -> ViewUser u Show :<|> ViewUser u Edit)\n```\n"
license-name: BSD-3-Clause
