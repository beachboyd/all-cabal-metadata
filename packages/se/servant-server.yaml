homepage: http://haskell-servant.readthedocs.org/
changelog-type: markdown
hash: cd02cdf141854d0c8114adc08458b05beb4dd27961fea6f11b35c34357465c80
test-bench-deps:
  warp: -any
  exceptions: -any
  bytestring: -any
  wai: -any
  base: -any
  base64-bytestring: -any
  hspec: ! '>=2.4.4 && <2.6'
  text: -any
  network: -any
  parsec: ! '>=3.1.11 && <3.2'
  doctest: ! '>=0.13.0 && <0.16'
  servant-server: -any
  servant: -any
  base-compat: -any
  hspec-wai: ! '>=0.9 && <0.10'
  should-not-typecheck: ! '>=2.1.0 && <2.2'
  mtl: -any
  wai-extra: ! '>=3.0.21.0 && <3.1'
  transformers: -any
  temporary: ! '>=1.2.0.3 && <1.4'
  QuickCheck: ! '>=2.10.1 && <2.12'
  string-conversions: -any
  resourcet: -any
  http-types: -any
  aeson: -any
  safe: -any
  transformers-compat: -any
  directory: ! '>=1.2.1.0 && <1.4'
maintainer: haskell-servant-maintainers@googlegroups.com
synopsis: A family of combinators for defining webservices APIs and serving them
changelog: ! "[The latest version of this document is on GitHub.](https://github.com/haskell-servant/servant/blob/master/servant-server/CHANGELOG.md)\n[Changelog
  for `servant` package contains significant entries for all core packages.](https://github.com/haskell-servant/servant/blob/master/servant/CHANGELOG.md)\n\n0.13.0.1\n--------\n\n-
  Support `base-compat-0.10`\n\n0.13\n----\n\n- Streaming endpoint support.\n  ([#836](https://github.com/haskell-servant/servant/pull/836))\n-
  *servant* Add `Servant.API.Modifiers`\n  ([#873](https://github.com/haskell-servant/servant/pull/873))\n\n0.12\n----\n\n###
  Breaking changes\n\n* Added `hoistServer` member to the `HasServer` class, which
  is `HasServer`\n  specific `enter`.\n  ([#804](https://github.com/haskell-servant/servant/pull/804))\n\n0.11\n----\n\n###
  Breaking changes\n\n* Changed `HasServer` instances for `Header` to throw 400 when
  parsing fails\n  ([#724](https://github.com/haskell-servant/servant/pull/724))\n*
  Added `headersD` block to `Delayed`\n  ([#724](https://github.com/haskell-servant/servant/pull/724))\n\n###
  Other changes\n\n* Add `err418`, `err422` error codes\n  ([#739](https://github.com/haskell-servant/servant/pull/739))\n\n0.10\n----\n\n###
  Breaking changes\n\n* `Handler` is now an abstract datatype. Migration hint: change
  `throwE` to `throwError`.\n  ([#641](https://github.com/haskell-servant/servant/issues/641))\n\n*
  Changed `HasServer` instances for `QueryParam` and `QueryParam` to throw 400\n  when
  parsing fails\n  ([#649](https://github.com/haskell-servant/servant/pull/649))\n\n###
  Other changes\n\n* Added `paramsD` block to `Delayed`\n\n* Add `err422` Unprocessable
  Entity\n  ([#646](https://github.com/haskell-servant/servant/pull/646))\n\n* Deprecate
  `serveDirectory` and introduce `serveDirectoryFileServer`,\n  `serveDirectoryWebApp`,
  `serveDirectoryWebAppLookup`, `serveDirectoryEmbedded`\n  and `serveDirectoryWith`
  which offer 4 default options and a more flexible\n  one for serving static files.\n
  \ ([#658](https://github.com/haskell-servant/servant/pull/658))\n\n* `DelayedIO`
  is an instance of `MonadResource`, allowing safe resource handling.\n  ([#622](https://github.com/haskell-servant/servant/pull/622)\n
  \ , [#674](https://github.com/haskell-servant/servant/pull/674)\n  , [#675](https://github.com/haskell-servant/servant/pull/675))\n\n0.7.1\n------\n\n*
  Remove module `Servant.Server.Internal.Enter` (https://github.com/haskell-servant/servant/pull/478)\n*
  Support GHC 8.0\n\n0.7\n---\n\n* The `Router` type has been changed. Static router
  tables should now\n  be properly shared between requests, drastically increasing
  the\n  number of situations where servers will be able to route requests\n  efficiently.
  Functions `layout` and `layoutWithContext` have been\n  added to visualize the router
  layout for debugging purposes. Test\n  cases for expected router layouts have been
  added.\n* If an endpoint is discovered to have a non-matching \"accept header\",\n
  \ this is now a recoverable rather than a fatal failure, allowing\n  different endpoints
  for the same route, but with different content\n  types to be specified modularly.\n*
  Export `throwError` from module `Servant`\n* Add `Handler` type synonym\n\n0.6.1\n-----\n\n*
  If servers use the `BasicAuth` combinator and receive requests with missing or\n
  \ invalid credentials, the resulting error responses (401 and 403) could be\n  overwritten
  by subsequent alternative routes. Now `BasicAuth` uses `FailFatal`\n  and the error
  responses can't be overwritten anymore.\n\n0.6\n---\n\n* Query parameters that can't
  be parsed result in a `400` (was `404`).\n\n0.5\n---\n\n* Add `Config` machinery
  (https://github.com/haskell-servant/servant/pull/327).\n  This is a breaking change,
  as the signatures of both `route`, `serve` and the\n  typeclass `HasServer` now
  take an additional parameter.\n* Support for the `HttpVersion`, `IsSecure`, `RemoteHost`
  and `Vault` combinators\n* Drop `EitherT` in favor of `ExceptT`\n* Use `http-api-data`
  instead of `Servant.Common.Text`\n* Remove matrix params.\n* Remove `RouteMismatch`.\n*
  Redefined constructors of `RouteResult`.\n* Added `Delayed` and related functions
  (`addMethodCheck`, `addAcceptCheck`, `addBodyCheck`, `runDelayed`)\n* Added support
  for Basic Authentication\n* Add generalized authentication support via the `AuthServerData`
  type family and `AuthHandler` handler\n\n0.4.1\n-----\n* Bump attoparsec upper bound
  to < 0.14\n* Bump wai-app-static upper bound to < 3.2\n* Bump either upper bound
  to < 4.5\n\n0.4\n---\n* `Delete` now is like `Get`, `Post`, `Put`, and `Patch` and
  returns a response body\n* Add a `RouteMismatch` constructor for arbitrary HTTP
  response codes (https://github.com/haskell-servant/servant-server/pull/22)\n* Add
  support for the `Patch` combinator\n* Support for `Accept`/`Content-type` headers
  and for the content-type aware combinators in *servant-0.4*\n* Export `toApplication`
  from `Servant.Server` (https://github.com/haskell-servant/servant-server/pull/29)\n*
  Support other Monads than just `EitherT (Int, String) IO` (https://github.com/haskell-servant/servant-server/pull/21)\n*
  Make methods return status code 204 if they return () (https://github.com/haskell-servant/servant-server/issues/28)\n*
  Add server support for response headers\n* Use `ServantErr` instead of `(Int,String)`
  in `EitherT` handlers\n* Add `errXXX` functions for HTTP errors with sensible default
  reason strings\n* Add `enter` function for applying natural transformations to handlers\n\n0.2.4\n-----\n*
  Added support for matrix parameters, see e.g. http://www.w3.org/DesignIssues/MatrixURIs.html\n*
  Add support for serializing based on Accept header\n  (https://github.com/haskell-servant/servant-server/issues/9)\n*
  Ignore trailing slashes\n  (https://github.com/haskell-servant/servant-server/issues/5)\n\n\n0.2.3\n-----\n\n*
  Fix consuming request body issue\n  (https://github.com/haskell-servant/servant/issues/3)\n*
  Make code sample in Servant.Server complete\n"
basic-deps:
  warp: ! '>=3.2.13 && <3.3'
  exceptions: ! '>=0.8.3 && <0.11'
  bytestring: ! '>=0.10.4.0 && <0.11'
  wai: ! '>=3.2.1.1 && <3.3'
  split: ! '>=0.2.3.2 && <0.3'
  base: ! '>=4.7 && <4.12'
  base64-bytestring: ! '>=1.0.0.1 && <1.1'
  text: ! '>=1.2.3.0 && <1.3'
  http-api-data: ! '>=0.3.7.1 && <0.4'
  monad-control: ! '>=1.0.0.4 && <1.1'
  filepath: ! '>=1.3.0.2 && <1.5'
  network: ! '>=2.6.3.2 && <2.8'
  word8: ! '>=0.1.3 && <0.2'
  servant-server: -any
  servant: ==0.13.*
  tagged: ! '>=0.8.5 && <0.9'
  containers: ! '>=0.5.5.1 && <0.6'
  base-compat: ! '>=0.9.3 && <0.11'
  network-uri: ! '>=2.6.1.0 && <2.7'
  mtl: ! '>=2.1 && <2.3'
  transformers-base: ! '>=0.4.4 && <0.5'
  attoparsec: ! '>=0.13.2.0 && <0.14'
  transformers: ! '>=0.3.0.0 && <0.6'
  string-conversions: ! '>=0.4.0.1 && <0.5'
  system-filepath: ! '>=0.4 && <0.5'
  resourcet: ! '>=1.1.9 && <1.3'
  http-types: ! '>=0.12 && <0.13'
  wai-app-static: ! '>=3.1.6.1 && <3.2'
  aeson: ! '>=1.2.3.0 && <1.4'
  safe: ! '>=0.3.15 && <0.4'
  http-media: ! '>=0.7.0 && <0.8'
  transformers-compat: ! '>=0.5.1 && <0.7'
all-versions:
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.3.1'
- '0.4.4'
- '0.4.4.1'
- '0.4.4.2'
- '0.4.4.3'
- '0.4.4.4'
- '0.4.4.5'
- '0.4.4.6'
- '0.4.4.7'
- '0.5'
- '0.6'
- '0.6.1'
- '0.7'
- '0.7.1'
- '0.8'
- '0.8.1'
- '0.9'
- '0.9.0.1'
- '0.9.1'
- '0.9.1.1'
- '0.10'
- '0.11'
- '0.11.0.1'
- '0.12'
- '0.13'
- '0.13.0.1'
author: Servant Contributors
latest: '0.13.0.1'
description-type: markdown
description: ! '# servant-server


  ![servant](https://raw.githubusercontent.com/haskell-servant/servant/master/servant.png)


  This library lets you *implement* an HTTP server with handlers for each endpoint
  of a servant API, handling most of the boilerplate for you.


  ## Getting started


  We''ve written a [tutorial](http://haskell-servant.readthedocs.org/en/stable/tutorial/index.html)
  guide that introduces the core types and features of servant. After this article,
  you should be able to write your first servant webservices, learning the rest from
  the haddocks'' examples.

'
license-name: BSD3
