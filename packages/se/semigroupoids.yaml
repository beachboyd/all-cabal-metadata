homepage: http://github.com/ekmett/semigroupoids
changelog-type: markdown
hash: e1af439f85986c1019960ab9625270f2472bb98e579671b49a43c3332d7cba5d
test-bench-deps:
  semigroupoids: -any
  base: ! '>=4 && <5'
  doctest: ! '>=0.11.1 && <0.14'
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: ! 'Semigroupoids: Category sans id'
changelog: ! "5.2.2 [2018.01.18]\n------------------\n* Add `optional` to `Data.Functor.Alt`
  (analogous to the `optional` function\n  in `Control.Applicative`)\n* `liftF2` is
  now a class method of `Apply` (mirroring the fact that `liftA2`\n  is now a class
  method of `Applicative`). `liftF2` and `(<.>)` have default\n  definitions in terms
  of the other.\n* Allow building with GHC 8.4\n* `Apply` and `Bind` instances for
  `Q`, from the `template-haskell` package.\n* Add instances for `(:~:)` and `(:~~:)`
  from `Data.Type.Equality`, and\n  `Coercion` from `Data.Type.Coercion`\n\n5.2.1\n-----\n*
  Add the `toNonEmpty` method to `Foldable1`. Add `foldrM1` and `foldlM1`\n  functions
  to `Data.Semigroup.Foldable` that are defined in terms of `toNonEmpty`.\n* Add `Apply`,
  `Bind`, `Foldable1`, and `Traversable1` instances for `Complex`\n* Add `Apply` and
  `Bind` instances for `HashMap` from the `unordered-containers` package\n  (on which
  `semigroupoids` now depends)\n* Add `Semigroupoid` instances for `Tagged` and `Const`\n\n5.2\n---\n*
  Revamp `Setup.hs` to use `cabal-doctest`. This makes it build\n  with `Cabal-1.25`,
  and makes the `doctest`s work with `cabal new-build` and\n  sandboxes.\n* Added
  instances to `Alt`, `Plus`, `Apply`, `Bind` and `Extend` for `GHC.Generics`, `Tagged`
  and `Proxy` where appropriate.\n\n5.1\n---\n* The remaining orphan instances in
  `Data.Traversable.Instances` have been replaced in favor of the orphan instances
  from `transformers-compat-0.5`.\n* The documentation now states laws that instances
  of `Apply` are expected to uphold.\n* `doctest-0.11` support\n* Fixed compilation
  of tests with `stack`\n\n5.0.1\n-------\n* `transformers-compat` 0.5 support\n*
  Removed some redundant constraints.\n* GHC 8 support\n\n5.0.0.4\n-------\n* `doctest`
  0.10 support\n\n5.0.0.2\n-------\n* Bugfix for GHC 7.4. PolyKinds on 7.4 cause all
  sorts of haskell interface file errors. One of the #if guards that turned it off
  on 7.4 was missing and has been fixed.\n\n5.0.0.1\n-------\n* Added the CHANGELOG
  to the distribution so that `hackage` can link to it in the haddocks.\n\n5\n-\n*
  Absorbed `Data.Bifunctor.Apply`, `Data.Semigroup.Bifoldable` and `Data.Semigroup.Traversable`
  from `bifunctors`.\n* This caused us to pick up a dependency on `tagged`.\n* Exiled
  `Data.Semifunctor.*`, `Data.Semigroupoid.Product` and `Data.Semigroupoid.Coproduct`
  to `semigroupoid-extras`.\n* This let us open up to older versions of GHC again.\n*
  Set an explicit fixity for `-<-` and `->-`.\n\n4.5\n---\n* Major changes to the
  API to support PolyKinds and DataKinds. This necessarily shuts off GHC <= 7.4.\n*
  Orphan instances have moved upstream into a common `base-orphans` package.\n\n4.3.1\n-----\n*
  Added `asum1` to `Data.Semigroup.Foldable`.\n\n4.3.0.1\n-------\n* Support for 'ConstrainedClassMethods'
  is currently required for GHC HEAD.\n\n4.3\n-----\n* Added missing instances for
  `ExceptT`. Obtain it via `transformers-compat` if need be for old `transformers`
  versions.\n* Several `Bind` and `Apply` instances now require somewhat more minimal
  contexts.\n\n4.2\n---\n* Backported `Foldable`/`Traversable` instances from `lens`\n\n4.1\n---\n*
  `Foldable1`/`Traversable1` for tuples\n\n4.0.4\n-----\n* `contravariant` 1.0 support.\n\n4.0.3\n---\n*
  Added flags to provide unsupported cabal sandbox build modes.\n\n4.0.1\n-----\n*
  Fixed bitrot in the `Data.Functor.Extend` documentation.\n* Fixed warnings on GHC
  7.8.1rc2 caused by importing `Control.Monad.Instances`.\n\n4.0\n---\n* Merged in
  the contents of the `groupoids` and `semigroupoid-extras` packages.\n\n3.1\n---\n*
  Added the [rectangular band](http://en.wikipedia.org/wiki/Band_(mathematics)#Rectangular_bands)
  `Semigroupoid` for `(,)`. Would that make it a Bandoid?\n\n3.0.3\n-----\n* Claim
  to be `Trustworthy` where necessary\n\n3.0.2\n-----\n* Tightened the upper bounds
  slightly to enable PVP compliance while retaining a flexible development cycle.\n*
  Raised the upper bound on `contravariant`.\n\n3.0.1\n-----\n* Removed upper bounds
  relative to my other packages\n* Refactored directory layout\n"
basic-deps:
  base: ! '>=4.3 && <5'
  comonad: ! '>=4.2.6 && <6'
  unordered-containers: ! '>=0.2 && <0.3'
  distributive: ! '>=0.2.2 && <1'
  semigroups: ! '>=0.8.3.1 && <1'
  base-orphans: ! '>=0.5.4 && <1'
  tagged: ! '>=0.8.5 && <1'
  containers: ! '>=0.3 && <0.6'
  bifunctors: ! '>=5 && <6'
  contravariant: ! '>=0.2.0.1 && <2'
  hashable: ! '>=1.1 && <1.3'
  transformers: ! '>=0.2 && <0.6'
  template-haskell: -any
  transformers-compat: ! '>=0.5 && <0.6'
all-versions:
- '1.0.0'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.2.0'
- '1.2.1'
- '1.2.2'
- '1.2.2.1'
- '1.2.2.2'
- '1.2.2.3'
- '1.2.2.4'
- '1.2.4'
- '1.2.5'
- '1.2.6'
- '1.2.6.1'
- '1.2.6.2'
- '1.3'
- '1.3.1'
- '1.3.1.1'
- '1.3.1.2'
- '1.3.2'
- '1.3.2.1'
- '1.3.3'
- '1.3.4'
- '3.0'
- '3.0.0.1'
- '3.0.0.2'
- '3.0.1'
- '3.0.2'
- '3.0.3'
- '3.1'
- '4.0'
- '4.0.1'
- '4.0.2'
- '4.0.2.1'
- '4.0.3'
- '4.0.4'
- '4.2'
- '4.3'
- '5'
- '5.0.0.1'
- '5.0.0.2'
- '5.0.0.3'
- '5.0.0.4'
- '5.0.1'
- '5.1'
- '5.2'
- '5.2.1'
- '5.2.2'
author: Edward A. Kmett
latest: '5.2.2'
description-type: markdown
description: ! 'semigroupoids

  ==========


  [![Hackage](https://img.shields.io/hackage/v/semigroupoids.svg)](https://hackage.haskell.org/package/semigroupoids)
  [![Build Status](https://secure.travis-ci.org/ekmett/semigroupoids.png?branch=master)](http://travis-ci.org/ekmett/semigroupoids)


  A semigroupoid is a `Category` without `id`.


  Contact Information

  -------------------


  Contributions and bug reports are welcome!


  Please feel free to contact me through github or on the #haskell IRC channel on
  irc.freenode.net.


  -Edward Kmett

'
license-name: BSD3
