homepage: http://hub.darcs.net/thielema/set-cover/
changelog-type: markdown
hash: 0a92429ba40874b9616d1621f36ac19555c759acce8a34f06ad557807d4cefca
test-bench-deps: {}
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: Solve exact set cover problems like Sudoku, 8 Queens, Soma Cube, Tetris
  Cube
changelog: |
  # Change log for the `set-cover` package

  ## 0.0.8

   * `SetCover.Exact.Priority` implements the Algorithm X
     using a priority queue that registers the sets
     each element is contained in.
     This allows for drastic speedup of the `Nonogram` example.

  ## 0.0.7

   * `ESC.bitVectorFromSetAssigns` allows to turn sets
     into bit vectors without manual bit position gymnastics.

   * Use it in `Sudoku` and `Nonogram` examples.

  ## 0.0.6

   * Add `SetCover.Exact.Set` instances for `Map`, `Integer`, `IntSet`.

  ## 0.0.5.1

   * `example/Nonogram`: explore different encodings of the problem
basic-deps:
  base: ! '>=4 && <5'
  enummapset: ! '>=0.1 && <0.7'
  semigroups: ! '>=0.1 && <1.0'
  utility-ht: ! '>=0.0.12 && <0.1'
  containers: ! '>=0.4 && <0.7'
  psqueues: ! '>=0.2 && <0.3'
all-versions:
- '0.0'
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
- 0.0.5.1
- 0.0.6
- 0.0.7
- 0.0.8
- 0.0.9
author: Henning Thielemann, Helmut Podhaisky
latest: 0.0.9
description-type: haddock
description: |-
  Solver for exact set cover problems.
  Included examples:
  Sudoku, Nonogram, 8 Queens, Domino tiling, Mastermind,
  Soma Cube, Tetris Cube, Cube of L's, Logika's Baumeister puzzle.
  The generic algorithm allows to choose between
  slow but flexible @Set@ from @containers@ package
  and fast but cumbersome bitvectors.

  For getting familiar with the package
  I propose to study the Queen8 example along with "Math.SetCover.Exact".

  Build examples with @cabal install -fbuildExamples@.

  The package needs only Haskell 98.
license-name: BSD-3-Clause
