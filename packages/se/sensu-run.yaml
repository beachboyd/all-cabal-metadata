homepage: https://github.com/maoe/sensu-run#readme
changelog-type: markdown
hash: 7567dac553892c5b82304470dc2a7cbde99af33146dfbebedec5d02ac82515b3
test-bench-deps: {}
maintainer: maoe@foldr.in
synopsis: A tool to send command execution results to Sensu
changelog: ! '# Revision history for sensu-run


  ## 0.5.0 -- 2018-04-20


  * Add support for HTTPS (#18)

  * Do not append new line to the output when the command was successful

  * Add --redirect option (#12)

  * Relax upper version bound for temporary

  * Tighten upper version bound for unix


  ## 0.4.0.5 -- 2018-04-09


  * Relax upper version bounds for base and aeson


  ## 0.4.0.4 -- 2018-01-30


  * Relax upper version bounds for http-types, lens and time


  ## 0.4.0.3 -- 2017-11-07


  * Relax upper version bound for http-types


  ## 0.4.0.2 -- 2017-11-07


  * Relax upper version bound for unix-compat


  ## 0.4.0.1 -- 2017-10-26


  * Relax upper version bound for http-types


  ## 0.4.0 -- 2017-08-03


  * Include command output in response even on timeout/failure (#14)


  ## 0.3.0 -- 2017-07-25


  * Add user field to result JSON (#7)

  * Handle missing executable properly (#10)


  ## 0.2.0 -- 2017-07-12


  * Relax upper version bound for base

  * Kill child process(es) when timeout occurs


  ## 0.1.1.3 -- 2017-06-11


  * Relax upper version bound for optparse-applicative

  * Binary releases


  ## 0.1.1 -- 2017-06-09


  * Add --version option


  ## 0.1.0 -- 2017-06-07


  * Fix a bug that ignores --handle option by accident

  * Small documentation fixes

  * Enable AppVeyor builds


  ## 0.0.0  -- 2017-05-16


  * Initial release

'
basic-deps:
  http-client: ! '>=0.5.6 && <0.6'
  bytestring: ! '>=0.10 && <0.11'
  unix: <2.8
  base: ! '>=4.9 && <4.12'
  time: ! '>=1.5.0.1 && <1.10'
  text: ! '>=1.2.2 && <1.3'
  unix-compat: <0.6
  filepath: ! '>=1.4.1 && <1.5'
  process: ! '>=1.4 && <1.7'
  network: ! '>=2.2.3 && <2.7'
  async: <2.3
  wreq: ! '>=0.5.0 && <0.6'
  lens: ! '>=4.15 && <4.17'
  http-client-tls: <0.4
  temporary: ! '>=1.1 && <1.4'
  optparse-applicative: ! '>=0.12 && <0.15'
  http-types: ! '>=0.9.1 && <0.13'
  aeson: ! '>=0.11 && <1.4'
  vector: ! '>=0.11 && <0.13'
all-versions:
- '0.0.0'
- '0.1.0'
- '0.1.1'
- '0.1.1.3'
- '0.2.0'
- '0.3.0'
- '0.4.0'
- '0.4.0.1'
- '0.4.0.2'
- '0.4.0.3'
- '0.4.0.4'
- '0.4.0.5'
- '0.5.0'
author: Mitsutoshi Aoe
latest: '0.5.0'
description-type: markdown
description: ! "# sensu-run\n[![Hackage](https://img.shields.io/hackage/v/sensu-run.svg)](http://hackage.haskell.org/package/sensu-run)\n[![Hackage-Deps](https://img.shields.io/hackage-deps/v/sensu-run.svg)](http://packdeps.haskellers.com/feed?needle=sensu-run)\n[![Stackage
  LTS](http://stackage.org/package/sensu-run/badge/lts)](http://stackage.org/lts/package/sensu-run)\n[![Stackage
  Nightly](http://stackage.org/package/sensu-run/badge/nightly)](http://stackage.org/nightly/package/sensu-run)\n[![Build
  Status](https://travis-ci.org/maoe/sensu-run.svg?branch=master)](https://travis-ci.org/maoe/sensu-run)\n[![Build
  status](https://ci.appveyor.com/api/projects/status/k9594kkn4tncotqt/branch/master?svg=true)](https://ci.appveyor.com/project/maoe/sensu-run/branch/master)\n\n`sensu-run`
  runs a command and send its result to Sensu server using the [client socket input](https://sensuapp.org/docs/latest/reference/clients.html#client-socket-input)
  or via the Sensu API. It is useful to monitor cron jobs for example.\n\n## Installation\n\nNOTE:
  Currently sensu-run doesn't work on Windows. See [#16](https://github.com/maoe/sensu-run/issues/16).\n\nBinary
  releases are available at [GitHub Releases](https://github.com/maoe/sensu-run/releases).
  Currently supported platforms for the binary releases are:\n\n* Ubuntu (64bit)\n*
  macOS\n* Windows (x64, x86)\n\nYou can also build it yourself using [stack](https://docs.haskellstack.org/en/stable/README/):\n```sh\nstack
  install sensu-run\n```\nwill install the `sensu-run` command in `~/.local/bin`.\n\n##
  Usage\n\n```console\n% sensu-run --help\nUsage: sensu-run ([-n|--name NAME] [--source
  SOURCE] [--ttl SECONDS]\n                 [--timeout SECONDS] [--handler HANDLER]
  ([--port PORT] |\n                 [--server URL]) [--redirect] [--dry|--dry-run]
  [-s|--shell]\n                 [COMMAND] | [-v|--version])\n\nAvailable options:\n
  \ -h,--help                Show this help text\n  -n,--name NAME           The name
  of the check\n  --source SOURCE          The check source, used to create a JIT
  Sensu client\n                           for an external resource\n  --ttl SECONDS
  \           The time to live in seconds until check results are\n                           considered
  stale\n  --timeout SECONDS        The check executaion duration timeout in seconds\n
  \ --handler HANDLER        Sensu event handler(s) to use for events created by\n
  \                          the check\n  --port PORT              Send results to
  the local sensu-client listening on\n                           the specified port
  (default: 3030)\n  --server URL             Send results to the specified Sensu
  server\n  --redirect               Redirect command output to sensu-run's output\n
  \ --dry,--dry-run          Dump the JSON object which is supposed to be sent\n  -s,--shell
  \              Execute the command using the shell\n```\n\n`--dry-run` option is
  useful to check the JSON output:\n\n```console\n% sensu-run --name check-home-src-size
  --handler foo --dry-run -- du -s $HOME/src | jq .\n{\n  \"name\": \"check-home-src-size\",\n
  \ \"command\": \"du -s /home/maoe/src\",\n  \"issued\": 1501041549,\n  \"executed\":
  1501041549,\n  \"duration\": 1.674895,\n  \"status\": 0,\n  \"output\": \"55513524\\t/home/maoe/src\\n\",\n
  \ \"handlers\": [\n    \"foo\"\n  ],\n  \"user\": \"maoe\"\n}\n```\n\nUse the `--shell`
  option if you want to use shell functions:\n```console\n% sensu-run --name check-home-src-size
  --handler foo --dry-run --shell -- \"cd $HOME/src; du -s .\" | jq .\n{\n  \"name\":
  \"check-home-src-size\",\n  \"command\": \"cd /home/maoe/src; du -s .\",\n  \"issued\":
  1501041568,\n  \"executed\": 1501041568,\n  \"duration\": 1.224157,\n  \"status\":
  0,\n  \"output\": \"55513524\\t.\\n\",\n  \"handlers\": [\n    \"foo\"\n  ],\n  \"user\":
  \"maoe\"\n}\n```\n\nWithout the `--dry-run` option, `sensu-run` sends the output
  to localhost:PORT, which is expected to be listened by `sensu-client`.\n\n`sensu-run`
  sets the status field depending on the command exit code and timeout:\n\n| command
  exit code | `status` field |\n|-------------------|----------------|\n| 0                 |
  0 (OK)         |\n| non-zero          | 2 (CRITICAL)   |\n| command timed out |
  3 (UNKNOWN)    |\n\n### Sensu API\n\n`sensu-run` supports posting check results
  via Sensu API as well. Use `--server` option to specify Sensu server addresses.
  If multiple servers are specified, `sensu-run` tries them one by one until it succeeds.\n\n```sh\nsensu-run
  --name check-true --handler foo --server sensu1.example.com --server sensu2.example.com
  --dry-run -- du -s $HOME/src\n```\n"
license-name: BSD3
