homepage: https://github.com/seek-oss/serverless-haskell#readme
changelog-type: ''
hash: 0aa39d3d80d9362b8b878e4c38c7b18363204f1f1712c24277e725ee419d138e
test-bench-deps:
  bytestring: -any
  case-insensitive: -any
  aeson-casing: -any
  unix: -any
  base: ! '>=4.7 && <5'
  time: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  amazonka-kinesis: -any
  lens: -any
  amazonka-core: -any
  raw-strings-qq: -any
  serverless-haskell: -any
  iproute: -any
  hspec-discover: -any
  http-types: -any
  aeson: -any
  amazonka-s3: -any
  aeson-extra: -any
maintainer: akotlyarov@seek.com.au
synopsis: Deploying Haskell code onto AWS Lambda using Serverless
changelog: ''
basic-deps:
  bytestring: -any
  case-insensitive: -any
  aeson-casing: -any
  unix: -any
  base: ! '>=4.7 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  amazonka-kinesis: -any
  lens: -any
  amazonka-core: -any
  iproute: -any
  http-types: -any
  aeson: -any
  amazonka-s3: -any
  aeson-extra: -any
all-versions:
- '0.0.0'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.0.6'
- '0.1.0'
- '0.2.0'
- '0.2.1'
- '0.3.0'
- '0.3.1'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.5.0'
- '0.5.1'
- '0.5.2'
- '0.5.3'
- '0.6.0'
- '0.6.1'
- '0.6.2'
- '0.6.3'
- '0.6.4'
- '0.6.5'
- '0.6.6'
- '0.7.0'
- '0.7.1'
- '0.7.2'
- '0.7.3'
- '0.7.4'
author: ''
latest: '0.7.4'
description-type: markdown
description: ! "# Serverless Haskell\n\n[![Build status](https://img.shields.io/travis/seek-oss/serverless-haskell.svg)](https://travis-ci.org/seek-oss/serverless-haskell)\n[![Hackage](https://img.shields.io/hackage/v/serverless-haskell.svg)](https://hackage.haskell.org/package/serverless-haskell)\n[![Hackage
  dependencies](https://img.shields.io/hackage-deps/v/serverless-haskell.svg)](https://packdeps.haskellers.com/feed?needle=serverless-haskell)\n[![npm](https://img.shields.io/npm/v/serverless-haskell.svg)](https://www.npmjs.com/package/serverless-haskell)\n\nDeploying
  Haskell code onto [AWS Lambda] using [Serverless].\n\n## Requirements\n\n* AWS account\n*
  [Stack]\n* [NPM]\n* [Docker]\n\n## Usage\n\n* Create a [Stack] package for your
  code:\n\n  ```shell\n  stack new mypackage\n  ```\n\n  LTS 9-12 are supported, older
  versions are likely to work too but untested.\n\n* Initialise a Serverless project
  inside the Stack package directory and install\n  the `serverless-haskell` plugin:\n\n
  \ ```shell\n  cd mypackage\n  npm init .\n  npm install --save serverless serverless-haskell@x.y.z\n
  \ ```\n\n  The version of the NPM package to install must match the version of the\n
  \ Haskell package.\n\n* Create `serverless.yml` with the following contents:\n\n
  \ ```yaml\n  service: myservice\n\n  provider:\n    name: aws\n    runtime: nodejs8.10\n\n
  \ functions:\n    myfunc:\n      handler: mypackage.myfunc\n      # Here, mypackage
  is the Haskell package name and myfunc is the executable\n      # name as defined
  in the Cabal file. The handler field may be prefixed\n      # with a path of the
  form `dir1/.../dirn`, relative to `serverless.yml`,\n      # which points to the
  location where the Haskell package `mypackage` is\n      # defined. This prefix
  is not needed when the Stack project is defined at\n      # the same level as `serverless.yml`.\n\n
  \ plugins:\n    - serverless-haskell\n  ```\n\n* Write your `main` function:\n\n
  \ ```haskell\n  import qualified Data.Aeson as Aeson\n\n  import AWSLambda\n\n  main
  = lambdaMain handler\n\n  handler :: Aeson.Value -> IO [Int]\n  handler evt = do\n
  \   putStrLn \"This should go to logs\"\n    print evt\n    pure [1, 2, 3]\n  ```\n\n*
  Use `sls deploy` to deploy the executable to AWS Lambda. **Note**: `sls deploy\n
  \ function` is [not supported yet](https://github.com/seek-oss/serverless-haskell/issues/20).\n\n
  \ The `serverless-haskell` plugin will build the package using Stack and upload\n
  \ it to AWS together with a JavaScript wrapper to pass the input and output\n  from/to
  AWS Lambda.\n\n  You can test the function and see the invocation results with `sls
  invoke\n  myfunc`.\n\n  To invoke the function locally, use `sls invoke local -f
  myfunc`.\n\n### API Gateway\n\nThis plugin supports handling API Gateway requests.
  Declare the HTTP events\nnormally in `serverless.yml` and use\n[AWSLambda.Events.APIGateway](https://hackage.haskell.org/package/serverless-haskell/docs/AWSLambda-Events-APIGateway.html)\nin
  the handler to process them.\n\n[Serverless Offline] can be used for local testing
  of API Gateway requests.\n\n### Notes\n\n* `sls deploy function` is [not supported
  yet](https://github.com/seek-oss/serverless-haskell/issues/20).\n* Only AWS Lambda
  is supported at the moment. Other cloud providers would\n  require different JavaScript
  wrappers to be implemented.\n\nSee\n[AWSLambda](https://hackage.haskell.org/package/serverless-haskell/docs/AWSLambda.html)\nfor
  documentation, including additional options to control the deployment.\n\n## Testing\n\n*
  Haskell code is tested with Stack: `stack test`.\n* JavaScript code is linted with
  `eslint`.\n\n### Integration tests\n\nIntegration test verifies that the project
  can build and deploy a complete\nfunction to AWS, and it runs with expected functionality.\n\nIntegration
  test is only automatically run up to deployment due to the need for\nan AWS account.
  To run manually:\n\n* Ensure you have the required dependencies: `curl`, [jq], [NPM],
  `pwgen` and\n  [Stack].\n* Get an AWS account and add the access credentials into
  your shell environment.\n* Run `./integration-test/run.sh`. The exit code indicates
  success.\n* To verify just the packaging, without deployment, run\n  `./integration-test/run.sh
  --dry-run`.\n* By default, the integration test is run with LTS 12. To specify a
  different\nseries, use `RESOLVER_SERIES=lts-9`.\n\n## Releasing\n\n* Run the integration
  tests.\n* Install [bumpversion](https://github.com/peritus/bumpversion): `pip install
  bumpversion`.\n* Run `bumpversion major|minor|patch`.\n* Run `git push --tags &&
  git push`.\n\n[AWS Lambda]: https://aws.amazon.com/lambda/\n[Docker]: https://www.docker.com/\n[jq]:
  https://stedolan.github.io/jq/\n[NPM]: https://www.npmjs.com/\n[Serverless]: https://serverless.com/framework/\n[Serverless
  Offline]: https://github.com/dherault/serverless-offline\n[Stack]: https://haskellstack.org\n"
license-name: MIT
