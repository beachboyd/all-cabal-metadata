homepage: https://github.com/seek-oss/serverless-haskell#readme
changelog-type: ''
hash: a1dd8a02f81e3665b8a67b7a929d91c154503ee3720fdf0df8996ecd8b9ef368
test-bench-deps:
  bytestring: -any
  aeson-casing: -any
  unix: -any
  base: ! '>=4.7 && <5'
  time: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  amazonka-kinesis: -any
  lens: -any
  amazonka-core: -any
  raw-strings-qq: -any
  serverless-haskell: -any
  hspec-discover: -any
  aeson: -any
  amazonka-s3: -any
maintainer: akotlyarov@seek.com.au
synopsis: Deploying Haskell code onto AWS Lambda using Serverless
changelog: ''
basic-deps:
  bytestring: -any
  aeson-casing: -any
  unix: -any
  base: ! '>=4.7 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  amazonka-kinesis: -any
  lens: -any
  amazonka-core: -any
  aeson: -any
  amazonka-s3: -any
all-versions:
- '0.0.0'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.0.6'
- '0.1.0'
- '0.2.0'
- '0.2.1'
author: ''
latest: '0.2.1'
description-type: markdown
description: ! "# Serverless Haskell\n\nDeploying Haskell code onto [AWS Lambda] using
  [Serverless].\n\n## Requirements\n\n* AWS account\n* [`stack`](Stack)\n* [NPM]\n*
  [Docker] unless running on a Linux host\n\n## Usage\n\n* Create a [Stack] package
  for your code:\n\n  ```shell\n  stack new mypackage\n  ```\n\n  LTS 9 and 10 are
  supported, older versions are likely to work too but untested.\n\n* Initialise a
  Serverless project inside the Stack package directory and install\n  the `serverless-haskell`
  plugin:\n\n  ```shell\n  cd mypackage\n  npm init .\n  npm install --save serverless
  serverless-haskell\n  ```\n\n* Create `serverless.yml` with the following contents:\n\n
  \ ```yaml\n  provider:\n    name: aws\n    runtime: nodejs6.10\n\n  functions:\n
  \   myfunc:\n      handler: mypackage.myfunc\n      # Here, mypackage is the Haskell
  package name and myfunc is the executable\n      # name as defined in the Cabal
  file\n\n  plugins:\n    - serverless-haskell\n  ```\n\n* Write your `main` function:\n\n
  \ ```haskell\n  import qualified Data.Aeson as Aeson\n\n  import AWSLambda\n\n  main
  = lambdaMain handler\n\n  handler :: Aeson.Value -> IO [Int]\n  handler evt = do\n
  \   putStrLn \"This should go to logs\"\n    print evt\n    pure [1, 2, 3]\n  ```\n\n*
  Use `sls deploy` to deploy the executable to AWS Lambda. **Note**: `sls deploy\n
  \ function` is not supported.\n\n  The `serverless-haskell` plugin will build the
  package using Stack and upload\n  it to AWS together with a JavaScript wrapper to
  pass the input and output\n  from/to AWS Lambda.\n\n  You can test the function
  and see the invocation results with `sls invoke\n  myfunc`.\n\n### Notes\n\n* `sls
  deploy function` is not supported.\n* Only AWS Lambda is supported at the moment.
  Other cloud providers would\n  require different JavaScript wrappers to be implemented.\n\nSee\n[AWSLambda](https://hackage.haskell.org/package/serverless-haskell/docs/AWSLambda.html)\nfor
  documentation, including additional options to control the deployment.\n\n## Releasing\n\n*
  Install [bumpversion](https://github.com/peritus/bumpversion): `pip install bumpversion`.\n*
  Run `bumpversion major|minor|patch`.\n* Run `git push --tags && git push`.\n\n[AWS
  Lambda]: https://aws.amazon.com/lambda/\n[Docker]: https://www.docker.com/\n[NPM]:
  https://www.npmjs.com/\n[Serverless]: https://serverless.com/framework/\n[Stack]:
  https://haskellstack.org\n"
license-name: MIT
