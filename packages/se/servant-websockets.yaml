homepage: https://github.com/moesenle/servant-websockets#readme
changelog-type: markdown
hash: 3e384b0565a081f83da8935cccc0817fda120af9119befe55a0515efc4a44bfc
test-bench-deps: {}
maintainer: moesenle@gmail.com
synopsis: Small library providing WebSocket endpoints for servant.
changelog: ! "# Version 1.1.0\n\n  * Compatibility with servant-0.12.\n  * Added instance
  for WebSocketPending.\n\n# Version 1.0.0\n\n  * Initial release of `servant-websockets`.\n"
basic-deps:
  warp: -any
  exceptions: -any
  wai-websockets: -any
  bytestring: -any
  wai: -any
  servant-websockets: -any
  base: ! '>=4.7 && <5'
  text: -any
  async: -any
  websockets: -any
  conduit: -any
  servant-server: -any
  resourcet: -any
  aeson: -any
all-versions:
- 1.0.0
- 1.1.0
author: Lorenz Moesenlechner
latest: 1.1.0
description-type: markdown
description: ! '# Introduction


  This small library provides two servant endpoints for implementing

  websockets and is based on `websockets` and `wai-websockets`.


  This library provides three `servant` endpoints: `WebSocket`, `WebSocketPending`
  and

  `WebSocketConduit`. `WebSocket` is is a low-level interface for directly

  interacting with a `Connection` (see the

  [websockets](https://hackage.haskell.org/package/websockets) library

  for more information). `WebSocketPending` allows using the `rejectRequest`

  with various return codes for greater control. `WebSocketConduit`  provides a

  [conduit](https://hackage.haskell.org/package/conduit) based endpoint

  for JSON serializable input and output.


  See the module documentation for examples.

'
license-name: BSD-3-Clause
