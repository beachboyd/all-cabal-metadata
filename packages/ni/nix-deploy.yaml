homepage: https://github.com/awakesecurity/nix-deploy#readme
changelog-type: markdown
hash: 9841867042ec586048bd04f2c625aba21b1b5356a0d11764941ecdefd56e3985
test-bench-deps: {}
maintainer: opensource@awakenetworks.com
synopsis: Deploy Nix-built software to a NixOS machine
changelog: ! "# 1.0.2\n\n## Changed\n\n- Relaxed the upper bound of the `turtle` library
  dependency to `1.5`\n\n# 1.0.1\n\n## Added\n- `readField` implementations for the
  custom `ParseField` instances to\n  accommodate a minor API change in `optparse-generic`
  version `1.2.3`\n\n# 1.0.0\n\n- Initial release\n"
basic-deps:
  optparse-generic: ! '>=1.2.0 && <1.3'
  base: ! '>=4.9.0.0 && <5'
  text: ! '>=0.7 && <1.3'
  turtle: ! '>=1.3.6 && <1.5'
  optparse-applicative: ! '>=0.13.0.0 && <0.15'
  neat-interpolation: <0.4
all-versions:
- '1.0.0'
- '1.0.1'
- '1.0.2'
author: Awake Networks
latest: '1.0.2'
description-type: markdown
description: ! "# `nix-deploy`\nDeploy a NixOS system configuration with `nix-deploy
  system ...` to a remote\nmachine and switch the machine to that system configuration.
  You can also deploy\na nix store path with `nix-deploy path ...` to a remote machine
  or from a remote\nmachine.\n\nThis tool is often used in conjunction with [`nix-delegate`](https://github.com/awakesecurity/nix-delegate).\n\n```shell\n$
  nix-deploy --help\nDeploy software or an entire NixOS system configuration to another
  NixOS system\n\nUsage: nix-deploy (path | system)\n\nAvailable options:\n  -h,--help
  \               Show this help text\n\nAvailable commands:\n  path\n  system\n```\n\n```shell\n$
  nix-deploy path --help\nUsage: nix-deploy path (--to USER@HOST | --from USER@HOST)
  [--sudo] [--noSign]\n                       [--path FILEPATH] [--profilePath FILEPATH]\n
  \                      [--profileName LINE]\n\nAvailable options:\n  -h,--help                Show
  this help text\n  --to USER@HOST           Deploy software to this address (ex:\n
  \                          user@192.168.0.1)\n  --from USER@HOST         Deploy
  software from this address (ex:\n                           user@192.168.0.1)\n
  \ --sudo                   Prepend with sudo\n  --noSign                 Don't sign
  payload (not recommended)\n  --path FILEPATH          Path to deploy\n  --profilePath
  FILEPATH   Path to parent profile directory (default:\n                           /nix/var/nix/profiles)\n
  \ --profileName LINE       Name of profile to set (example: upgrade-tools)\n```\n\n```shell\n$
  nix-deploy system --help\nUsage: nix-deploy system (--to USER@HOST | --from USER@HOST)
  [--noSign]\n                         [--path FILEPATH] [--systemName LINE] ([--switch]
  |\n                         [--boot] | [--test] | [--dry-activate] | [--reboot])\n\nAvailable
  options:\n  -h,--help                Show this help text\n  --to USER@HOST           Deploy
  software to this address (ex:\n                           user@192.168.0.1)\n  --from
  USER@HOST         Deploy software from this address (ex:\n                           user@192.168.0.1)\n
  \ --noSign                 Don't sign payload (not recommended)\n  --path FILEPATH
  \         Path to deploy\n  --systemName LINE        Alternative system profile
  name (default: system)\n```\n\n## Usage example\n```shell\n$ nix-deploy --to parnell@remote-server
  --path $(nix-build --no-out-link --attr foo ~/Development/bar/release.nix)\n[+]
  Downloading: /etc/nix/signing-key.sec\n[+] Installing: /etc/nix/signing-key.sec\n[+]
  Downloading: /etc/nix/signing-key.pub\n[+] Installing: /etc/nix/signing-key.pub\ncopying
  178 missing paths (474.70 MiB) to ‘parnell@remote-server’...\n...\n[+] Copying /nix/store/q4c3avwb0szbsg8pkv7x32gcqz4g0wwa-foo-0.1.0.0\n\ncopying
  4 missing paths (31.83 MiB) to ‘parnell@remote-server’...\n\n```\n"
license-name: Apache-2.0
