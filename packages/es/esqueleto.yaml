homepage: https://github.com/bitemyapp/esqueleto
changelog-type: ''
hash: b23177a13cc4011c0a9f6d6ae98b223f59c5a5717f49f4f4354d2d7245c7b8e6
test-bench-deps:
  base: -any
  persistent: -any
  hspec: ! '>=1.8'
  text: -any
  persistent-template: ! '>=2.1'
  monad-control: -any
  conduit: ! '>=1.1'
  HUnit: -any
  containers: -any
  esqueleto: -any
  monad-logger: ! '>=0.3'
  transformers: -any
  QuickCheck: -any
  resourcet: -any
  persistent-sqlite: ! '>=2.1.3'
maintainer: cma@bitemyapp.com
synopsis: Type-safe EDSL for SQL queries on persistent backends.
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4.8 && <4.11'
  persistent: ! '>=2.5 && <2.8'
  unordered-containers: ! '>=0.2'
  text: ! '>=0.11 && <1.3'
  conduit: ! '>=1.1'
  tagged: ! '>=0.2'
  blaze-html: -any
  monad-logger: -any
  transformers: ! '>=0.2'
  resourcet: ! '>=1.1'
all-versions:
- '0.1'
- '0.2'
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
- 0.2.6
- 0.2.7
- 0.2.8
- 0.2.9
- '1.0'
- 1.0.1
- 1.0.2
- 1.0.3
- 1.0.5
- 1.0.6
- 1.0.7
- 1.0.8
- '1.2'
- 1.2.1
- 1.2.2
- 1.2.2.1
- 1.2.3
- 1.2.4
- '1.3'
- 1.3.1
- 1.3.2
- 1.3.3
- 1.3.4
- 1.3.4.2
- 1.3.4.3
- 1.3.4.4
- 1.3.4.5
- 1.3.4.6
- 1.3.5
- 1.3.6
- 1.3.7
- 1.3.8
- 1.3.9
- 1.3.10
- 1.3.11
- 1.3.12
- '1.4'
- 1.4.1
- 1.4.1.2
- 1.4.1.3
- 1.4.2
- 1.4.3
- 1.4.4
- 2.0.0
- 2.0.1
- 2.0.2
- 2.0.3
- 2.1.0
- 2.1.1
- 2.1.2
- 2.1.2.1
- 2.1.2.2
- 2.1.2.3
- 2.1.3
- '2.2'
- 2.2.1
- 2.2.2
- 2.2.3
- 2.2.4
- 2.2.5
- 2.2.6
- 2.2.7
- 2.2.8
- 2.2.9
- 2.2.10
- 2.2.11
- 2.2.12
- 2.3.0
- 2.4.0
- 2.4.1
- 2.4.2
- 2.4.3
- 2.5.0
- 2.5.1
- 2.5.2
- 2.5.3
author: Felipe Lessa
latest: 2.5.3
description-type: haddock
description: ! '@esqueleto@ is a bare bones, type-safe EDSL for SQL queries

  that works with unmodified @persistent@ SQL backends.  Its

  language closely resembles SQL, so you don''t have to learn

  new concepts, just new syntax, and it''s fairly easy to

  predict the generated SQL and optimize it for your backend.

  Most kinds of errors committed when writing SQL are caught as

  compile-time errors---although it is possible to write

  type-checked @esqueleto@ queries that fail at runtime.


  @persistent@ is a library for type-safe data serialization.  It

  has many kinds of backends, such as SQL backends

  (@persistent-mysql@, @persistent-postgresql@,

  @persistent-sqlite@) and NoSQL backends (@persistent-mongoDB@).

  While @persistent@ is a nice library for storing and retrieving

  records, including with filters, it does not try to support

  some of the features that are specific to SQL backends.  In

  particular, @esqueleto@ is the recommended library for

  type-safe @JOIN@s on @persistent@ SQL backends.  (The

  alternative is using raw SQL, but that''s error prone and does

  not offer any composability.)


  Currently, @SELECT@s, @UPDATE@s, @INSERT@s and @DELETE@s are supported.

  Not all SQL features are available, but most of them can be easily added

  (especially functions), so please open an issue or send a pull request if

  you need anything that is not covered by @esqueleto@ on

  <https://github.com/bitemyapp/esqueleto>.


  The name of this library means \"skeleton\" in Portuguese and

  contains all three SQL letters in the correct order =).  It was

  inspired by Scala''s Squeryl but created from scratch.'
license-name: BSD-3-Clause
