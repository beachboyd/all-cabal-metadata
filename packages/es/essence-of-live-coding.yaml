homepage: https://www.manuelbaerenz.de/#computerscience
changelog-type: markdown
hash: a3c810c11cd906738d3ab1a47153511ba1b0697f9baad9324c426962044dc70c
test-bench-deps:
  test-framework: '>=0.8'
  base: '>=4.11 && <5'
  syb: '>=0.7'
  test-framework-quickcheck2: '>=0.3'
  containers: '>=0.6'
  essence-of-live-coding: -any
  mtl: '>=2.2'
  transformers: '>=0.5'
  QuickCheck: '>=2.12'
maintainer: programming@manuelbaerenz.de
synopsis: General purpose live coding framework
changelog: |
  # Revision history for essence-of-live-coding

  ## 0.2.1

  * Adapted pulse backend to handles and refactored

  ## 0.2.0.1

  * Bug fixes
  * Version bounds

  ## 0.2.0.0

  * Adapted gloss backend to handles and refactored
  * Added a mechanism to make cells nonblocking
  * Added handles for nonserialisable values like threads, concurrent variables & device handles

  ## 0.1.0.3

  * First version.
    As described in https://www.manuelbaerenz.de/essence-of-live-coding/EssenceOfLiveCoding.pdf.
basic-deps:
  foreign-store: '>=0.2'
  base: '>=4.11 && <5'
  vector-sized: '>=1.2'
  syb: '>=0.7'
  containers: '>=0.6'
  essence-of-live-coding: -any
  transformers: '>=0.5'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.2.0.0
- 0.2.0.1
- 0.2.1
author: Manuel BÃ¤renz
latest: 0.2.1
description-type: haddock
description: |-
  essence-of-live-coding is a general purpose and type safe live coding framework.

  You can run programs in it, and edit, recompile and reload them while they're running.
  Internally, the state of the live program is automatically migrated when performing hot code swap.

  The library also offers an easy to use FRP interface.
  It is parametrized by its side effects,
  separates data flow cleanly from control flow,
  and allows to develop live programs from reusable, modular components.
  There are also useful utilities for debugging and quickchecking.
license-name: BSD-3-Clause
