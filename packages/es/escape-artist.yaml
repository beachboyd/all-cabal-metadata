homepage: https://github.com/EarthCitizen/escape-artist#readme
changelog-type: ''
hash: c8d6544acd82d05b567f7fbe9528689f922bec6cb3cf43cbbc16dfd92778961d
test-bench-deps:
  bytestring: ! '>=0.10.4.0 && <0.11'
  base: ! '>=4.7.0.2 && <5'
  escape-artist: -any
  hspec: ! '>=2.2.4 && <2.3'
  text: ! '>=1.2.0.4 && <1.3'
  silently: ! '>=1.2.5 && <1.3'
  QuickCheck: ! '>=2.9.2 && <2.10'
maintainer: rd.github@gmail.com
synopsis: ANSI Escape Sequence Text Decoration Made Easy
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.4.0 && <0.11'
  base: ! '>=4.7.0.2 && <5'
  text: ! '>=1.2.0.4 && <1.3'
all-versions:
- 1.0.0
- 1.1.0
author: Ryan Daniels
latest: 1.1.0
description-type: haddock
description: ! 'A library for text decoration with ANSI escape sequences made easy.
  Decorate your terminal text expressively.

  Any complex data type, existing or custom, can be simply colorized by implementing
  the class ''ToEscapable'', then

  output to terminal or converted to ''String'' using the provided functions.


  Simple Example


  @

  import Data.Monoid ((\<\>))

  import Text.EscapeArtist


  underlines = Underline $ FgCyan \"I am underlined\" \<\> UnderlineOff \" but I am
  not \" \<\> FgMagenta \"and I am over here\"


  putEscLn underlines

  @


  <<https://raw.githubusercontent.com/EarthCitizen/escape-artist/master/images/underline_off.png>>


  Implementing ''ToEscapable''


  @

  import Data.Monoid ((\<\>))

  import Text.EscapeArtist


  data ABC = A | B deriving (Show, Eq)


  instance ToEscapable ABC where

  &#x20;   toEscapable (A) = FgRed $ show A

  &#x20;   toEscapable (B) = FgGreen $ show B


  instance (ToEscapable a) => ToEscapable (Maybe a) where

  &#x20;    toEscapable (Just a) = FgGreen \"Just\" \<\> Inherit \" \" \<\> FgYellow
  a

  &#x20;    toEscapable a = FgRed $ show a

  @


  NOTE: For GHC < 7.10 you will also need to explicitly derive ''Typeable'' for custom
  data types

  implementing ''ToEscapable''. See the section Explicitly Derived Typeable in the
  documentation.


  Comprehensive Documentation


  See comprehensive documentation with many examples here:


  <https://github.com/EarthCitizen/escape-artist#readme>'
license-name: BSD-3-Clause
