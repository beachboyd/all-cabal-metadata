homepage: https://github.com/michaelochurch/ess
changelog-type: ''
hash: b150e52b1df8ffadd31873ae5fbfa1b5833f5d0e4e936de7957fcb1f964313f4
test-bench-deps: {}
maintainer: michael.o.church@gmail.com
synopsis: The type-level S combinator in Haskell.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <4.8'
all-versions:
- 0.1.0.0
author: Michael Church
latest: 0.1.0.0
description-type: markdown
description: ! "# ess\nA type-level S Combinator for Haskell. \n\nI will be deeply
  impressed if anyone finds a use for this.\n\nWhy does it exist? We have a type-level
  I combinator in the Identity monad.\n\n```newtype Identity a = Identity {runIdentity
  :: a}```\n\nWe also have a type-level K combinator in the Const functor.\n\n```newtype
  Const a b = Const {getConst :: a}```\n\nBut where is our S combinator? More importantly,
  is it useful at all? This\nrepository exists, because I want to know. "
license-name: MIT
