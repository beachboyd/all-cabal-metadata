homepage: https://github.com/sebastian-philipp/r-tree
changelog-type: markdown
hash: f70edf931d4d94992676e5bf4d8f5ef5852ccfeede665c3ddb101c84a0c39526
test-bench-deps:
  data-r-tree: -any
  test-framework-hunit: ! '>=0.2'
  test-framework: ! '>=0.6'
  base: ==4.*
  test-framework-quickcheck2: ! '>=0.2'
  HUnit: ! '>=1.2'
  containers: -any
  binary: -any
  QuickCheck: ! '>=2.4'
maintainer: sebastian@spawnhost.de
synopsis: R-Tree is a spatial data structure similar to Quadtrees or B-Trees.
changelog: ! '## 0.0.4.0


  * Added Data.RTree.Strict


  * Added Data.Binary interface for GHC 7.6


  ## 0.0.5.0


  * changed the Functor instance of Data.RTree.Strict to be strict


  * Data.RTree.Strict.RTree is now a newtype of Data.RTree.RTree'
basic-deps:
  base: ==4.*
  binary: ==0.*
  deepseq: ==1.*
all-versions:
- 0.0.1.0
- 0.0.2.0
- 0.0.3.0
- 0.0.4.0
- 0.0.5.0
author: Sebastian Philipp, Birte Wagner
latest: 0.0.5.0
description-type: markdown
description: ! "R-Trees (and in the future also R*-Trees)\n====================\n\nR-Tree
  is a spatial data structure similar to Quadtrees or B-Trees.\n\nAn R-Tree is a balanced
  tree and optimized for lookups. This implemetation useses an R-Tree to privide\na
  map to arbitrary values.\n\nSome function names clash with \"Prelude\" names, therefore
  this module is usually\nimported ```qualified```, e.g.:\n\n    > import           Data.RTree
  (RTree)\n    > import qualified Data.RTree as RT\n\nthis implemetation is incomplete
  at the moment. Feel free to send comments, patches or merge requests.\n"
license-name: MIT
