homepage: http://www.github.com/jfeltz/dash-haskell
changelog-type: ''
hash: 9b8176c34ea91a8c6d2cdc525e8181b29421517af3ec67b77a185dcf45945deb
test-bench-deps: {}
maintainer: jfeltz@gmail.com
synopsis: Convert package Haddock to Dash docsets (IDE docs)
changelog: ''
basic-deps:
  ghc: ! '>=7.10.1'
  either: ! '>=4.3'
  Cabal: ! '>=1.18.0'
  base: ! '>=4.7 && <=4.9'
  sqlite-simple: ! '>=0.4.5.0'
  text: ! '>=0.7.1'
  filepath: ! '>=1.4.0.0'
  direct-sqlite: ! '>=2.3.13'
  parsec: ! '>=3.1.5'
  containers: ! '>=0.5.5.1'
  pipes: ! '>=4.1.0'
  transformers: ! '>=0.2 && <0.5'
  optparse-applicative: ! '>=0.11.0.1'
  haddock-api: ! '>=2.15.0'
  tagsoup: ! '>=0.12.7'
  directory: ! '>=1.2.1.0'
all-versions:
- 1.0.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.0.3
- 1.0.0.4
- 1.0.0.5
- 1.1.0.0
- 1.1.0.1
- 1.1.0.2
author: John P. Feltz
latest: 1.1.0.2
description-type: markdown
description: ! "dash-haskell\n============\n*Never Google for Hackage Results Again*
  - [ian, barnacles.blackfriday](https://barnacles.blackfriday/)\n\n  **direct to
  browser lookup:**\n  ![look-up](/img/lookup.png?raw=true)\n\n\n  **keyword, module,
  and package searching:**\n  ![listing](/img/listing.png?raw=true)\n\ndash-haskell
  facilitates Haskell documentation in IDE(s) with the following qualities:\n\n  *
  **Local**\n\n    Documentation is stored in [dash](http://kapeli.com/dash) docsets
  on the filesystem,\n    avoiding the need to query **often inaccurate, version lagged**
  information from a remote resource such as *hackage*,\n    *hoogle*, or *hayoo*.\n\n
  \ * **Resolved from Project Dependencies**\n\n    With dash-haskell, one can build
  dash docsets from:\n     * packages listed as dependencies of a *.cabal file\n     *
  packages in a cabal sandbox\n     * an arbitrary package db\n\n  * **Scope Narrowed**\n\n
  \   IDE plugins such as [helm-dash](https://github.com/areina/helm-dash)\n    allow
  for only specific docsets to be active. This means that\n    when searching for
  an identifier, e.g. *fromJust*, only the\n    packages you've built in your configuration
  are searched. Searches\n    can then be further narrowed by module etc.\n\n  * **Prolifically
  Standardized**\n\n    [dash docsets](http://kapeli.com/dash) are an open, easily
  assimilated standard, and\n    are used across many IDE(s).\n\nUsage Examples\n==============\n```dash-haskell
  -c foo.cabal -s```\n\nbuilds all packages listed as dependencies in ```foo.cabal```,
  using atleast the cabal sandbox db\n\n```dash-haskell parsec-3.1.5 ```\n\nbuilds
  ```docsets/parsec-3.1.5.docset``` using the default db ordering (global, user).\n\nNote:
  haddock documentation for the package must first be built prior to calling dash-haskell
  on it, e.g.\n```\n$ cabal install --only-dependencies --enable-documentation\n```\n\n**dash-haskell**
  tries to be as self-documenting as possible. Please see:\n\n```dash-haskell --help```
  and ```dash-haskell help [option|topic]```\n\nSummary\n=======\n```\ndash-haskell
  v1.1.0.2, a dash docset construction tool for Haskell packages\n\nUsage: dash-haskell
  [-o|--output <dir>] [-q|--quiet] [-c|--cabal <file.cabal>]\n                    [-x|--cabal-excludes
  ghc,lens..] [-s|--sandbox]\n                    [-n|--no-user] [--db <path-to-package-db>]\n
  \                   [-d|--ordering user,sandbox..] [packages]\n  additional help
  is available with \"dash-haskell help <topic|option>\"\n\nAvailable options:\n  -h,--help
  \               Show this help text\n  -o,--output <dir>        the directory to
  write created docsets to\n  -q,--quiet               set to quiet output\n  -c,--cabal
  <file.cabal>  the cabal file to retrieve package dependencies from\n  -x,--cabal-excludes
  ghc,lens..\n                           limit package results from a cabal file source\n
  \ -s,--sandbox             use cabal sandbox\n  -n,--no-user             don't source
  packages from user db\n  --db <path-to-package-db>\n                           package
  db directory\n  -d,--ordering user,sandbox..\n                           ordering
  of user, dir, and sandbox db's\n  packages                 a list of packages to
  specifically build, e.g.\n                           either-1.0.1 text\n\nhttp://www.github.com/jfeltz/dash-haskell
  (C) John P. Feltz 2014, 2015\n\n```\n\nInstallation\n============\n```\n$ cabal
  install dash-haskell\n```\nor\n\n```\n $ git clone http://www.github.com/jfeltz/dash-haskell\n
  $ cd dash-haskell\n $ cabal install\n```\n\nPackage Resolution\n==================\nFor
  best results, try to **be version specific** when providing\npackage arguments,
  unless you're judicious about which packages are\nstored, for example, in your *cabal
  sandbox db* or *ghc package db*.\n\nIDE Configuration\n=================\nTo use
  the generated docsets, you will need a plugin for your particular IDE which can
  access\nthem.\n\n* **Emacs**\n\n  **dash-haskell** is tested with the following
  for emacs:\n\n  * [helm](https://github.com/emacs-helm/helm) , a fuzzy finder plugin
  for emacs\n  * [helm-dash](https://github.com/areina/helm-dash) , the essential
  extension to helm in order to lookup dash docsets\n\n  For limiting helm-dash to
  project specific docsets, the following also helps.\n\n  ```lisp\n(defun activate-package-docsets
  (root)\n  (progn\n     (setq helm-dash-docsets-path root)\n     (setq helm-dash-common-docsets
  (helm-dash-installed-docsets))\n\n     (message\n      (format \"activated %d docsets
  from: %s\"\n        (length helm-dash-common-docsets) root))\n  ))\n  ```\n\n  ```lisp\n
  \ (activate-package-docsets \"/path/to/project/docsets/\")\n```\n\n* For **Vim**,
  see the following known docset plugins:\n\n    * The zealdocs [vim plugin](http://www.zealdocs.org)\n
  \   * The Dash.app [vim plugin](https://github.com/rizzatti/dash.vim)\n\nFeatures
  slated for V2\n======================\n* handle **docset pre-builts and project
  synchronization**\n\n  set pre-built criteria, pre-built skipping, project package
  sync.\n  and provide a ```--rebuild``` to force rebuild of a docset\n\n* **version
  biasing**\n\n  provide option to bias package version to highest when it is otherwise
  ambiguous\n\n* **summaries**\n\n  provide summary information to help users better
  understand which\n  packages failed and succeeded\n\n* ```conf``` argument support\n\n
  \   build docset directly from a package db .conf\n\n* ```doc``` argument\n\n    build
  docsets directly from a package doc directory\n    (containing the requisite ```*.haddock```
  interface and html files)\n\nContributors\n============\nHirotomo Moriwaki : <philopon.dependence@gmail.com>\n\nThe
  major instigator of this project was Hirotomo Moriwaki's [haddocset](https://github.com/philopon/haddocset),
  with much of the early implementation of *dash-haskell* influenced by that code-base.\n\nRudi
  Grinberg : [github](http://github.com/rgrinberg)\n\nFor patches, testing, and helping
  maintain compatibility of ```dash-haskell-1.0.x.x``` with ghc changes\n\nAuthor
  & Maintainer\n===================\nJohn P. Feltz <jfeltz@gmail.com>\n"
license-name: LGPL-3.0-only
