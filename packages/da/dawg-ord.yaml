homepage: https://github.com/kawu/dawg-ord
changelog-type: ''
hash: 3ed88bf1647d2f9eac1059e475671cab6181f165163d1ad1f6fb309427d4ecd1
test-bench-deps:
  tasty-smallcheck: '>=0.8'
  base: '>=4 && <5'
  HUnit: '>=1.2'
  smallcheck: '>=1.1'
  dawg-ord: -any
  containers: '>=0.5 && <0.7'
  tasty-quickcheck: '>=0.8'
  mtl: '>=2.1 && <2.3'
  tasty-hunit: '>=0.9'
  tasty: '>=0.10'
maintainer: waszczuk.kuba@gmail.com
synopsis: Directed acyclic word graphs
changelog: ''
basic-deps:
  base: '>=4 && <5'
  containers: '>=0.5 && <0.7'
  mtl: '>=2.1 && <2.3'
  transformers: '>=0.3 && <0.6'
  vector: '>=0.10 && <0.13'
all-versions:
- '0.2'
- '0.3'
- 0.3.1
- '0.4'
- 0.4.0.1
- 0.4.0.2
- 0.5.0.0
- 0.5.0.1
- 0.5.0.2
- 0.5.1.0
- 0.5.1.1
- 0.5.1.2
author: Jakub Waszczuk
latest: 0.5.1.2
description-type: haddock
description: |-
  The library implements /directed acyclic word graphs/ (DAWGs) internally
  represented as /minimal acyclic deterministic finite-state automata/.
  The implemented version of DAWG can be seen as a map from
  sequences of alphabet symbols (keys) to values.

  The library allows to build DAWGs over any symbols and values
  provided that they both have `Ord` instances (see the
  "Data.DAWG.Ord" module).
  It also provides a fast insert operation which can be used to
  construct DAWGs on-the-fly.
license-name: BSD-3-Clause
