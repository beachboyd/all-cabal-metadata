homepage: https://github.com/haskell/c2hs
changelog-type: text
hash: 77247c3dc6331043389d9f6302d4b45d99d1cbc759f142041cd20a4e9f33ad23
test-bench-deps:
  test-framework-hunit: -any
  shelly: ! '>=1.0'
  test-framework: -any
  base: -any
  text: -any
  filepath: -any
  HUnit: -any
  transformers: -any
maintainer: chak@cse.unsw.edu.au, duncan@community.haskell.org, ian@skybluetrades.net,
  aditya.siram@gmail.com
synopsis: C->Haskell FFI tool that gives some cross-language type safety
changelog: ! "0.28.3\n - Switch to language-c 0.7.1 [#192]\n0.28.2\n - Switch to language-c
  0.6 [#176]\n0.28.1\n - Switch to language-c 0.5 [#157]\n - Fix class hook problem
  with imports [#155]\n\n0.27.1\n - Alternate specification for sizes in \"+\" parameters
  [#140]\n - Fix regression to do with incomplete structure types [#152]\n - Fix pattern
  match error [PR #153] (deech)\n\n0.26.2\n - Missing import bug [#151]\n - Parameter
  count checking for {#fun ...#} [#149]\n - Error message for \"incomplete types\"
  [#141]\n\n0.26.1\n - Better error messages [PR #139] (Noam Lewis)\n - Fix for OS
  X block syntax [#138] (Anthony Cowley)\n - Minimal support for va_list [PR #137]
  (Andy Adams-Moran)\n - Reorganise treatment of standard library imports used by
  C2HS\n   [#136] (https://github.com/haskell/c2hs/blob/master/import-handling.md)\n
  - C structure tag/typedef confusion bug (caused problems for flock on\n   OS X)
  [#134]\n - C typedefs to void pointers [#133]\n - Bool wrappers for unnamed parameters
  in C function definitions\n   [#131]\n - Incorrect wrapping of some pure C functions
  [#130]\n\n0.25.2\n - Test fixes to work with GHC 7.10.1\n\n0.25.1\n - Marshalling
  for C bool values [#128]\n\n0.24.1\n - Revert bad fix for bool handling [#127]\n
  - Wrapper generation for bare structure arguments [#117] plus custom\n   setup script
  to support Cabal builds on versions of Cabal without\n   explicit support for extra
  C sources generated by preprocessors\n   (@RyanGIScott)\n - Arrays in structuress
  bug [#123]\n - Test fixes for Windows\n\n0.23.1\n - Typedef and default marshalling
  hooks [#20, #25, #48]\n - Test fixes for 32-bit platforms (JÃ¼rgen Keck: @j-keck)\n
  - Multi-character constants for OS X [#15]\n - Better support for binding to variadic
  functions [#102]\n\n0.22.1\n - First (not very good) implementation of support for
  variadic\n   functions [#102]\n - Default marshallers for Char types [#98]\n - Improve
  sizeof computations [#9, #10]\n\n0.21.1\n - Parametrized pointer types in pointer
  hooks [#36]\n - Special \"+\" parameters for efficient foreign pointer marshalling
  [#46]\n - Add default marshallers for C types [#83]\n - Fix treatment of arrays
  within structs [#115]\n - Add ability to omit given enum values [#116]\n - Regression
  suite tidy-ups\n\n\n0.20.1\n - Get CUDA Travis tests working again (hopefully...)\n
  - Modify approach for defining C2HS_MIN_VERSION macro to work with\n   NVIDIA's
  nvcc CUDA compiler [#111]\n - Fix problem with parser for {#enum ...#} renamings
  [#113]\n\n\n0.19.1\n - Add {#const ...#} hook for accessing #defined constants [#65]\n
  - Persist enumeration definitions across modules [#103]\n - Add nocode keyword for
  enumeration definitions [#70]\n - Bump version for language-c to fix OS X problems
  [#82, #85] (thanks to\n   Anthony Cowley and Benedikt Huber for help with this)\n
  - Add finalizer support to foreign pointer definitions [#73]\n - Comment parsing
  cleanups (Sivert Berg: @sivertb)\n\n\n0.18.2\n - Add C2HS_MIN_VERSION(major,minor,revision)
  preprocessor macro\n - Suppress regression suite build (and associated dependency\n
  \  installation) for non-Travis cases\n - Fix Cabal file to include previously missing
  tests\n\n\n0.18.1\n - Numerous improvements to Enum handling [#78] (Philipp Balzarek:\n
  \  @Philonous)\n - Handle Haddock comments within C2HS hook definitions [#62] (@tangboyun)\n
  - Better error messages for missing files (Zejun Wu: @watashi)\n - Write CHS dump
  files to output directory (Zejun Wu: @watashi)\n - Handle C calling conventions
  within function pointer declarations [#88]\n   (Michael Steele: @mikesteele81)\n
  - Fix FreeBSD libssh2 problem [#87] (Cindy Wang: @CindyLinz)\n - Better error messages
  for hook syntax errors (Ryan Scott: @RyanGIScott)\n - Fixes for GHC 7.9 [#100] (@int-index)\n
  - Fix test suite to use C2HS from dist directory [#81]\n - Allow free intermixing
  of command line options and input files [#86]\n - Treat CLang \"block\" syntax and
  other \"non-GNU\" issues differently:\n   always undefine __BLOCKS__ CPP symbol
  to avoid problems with blocks;\n   add nonGNU directive to trigger undefine of GNU-specific
  pre-processor\n   symbols [#77]\n - Handle indented CPP directives correctly [#80]\n
  - Handle #sizeof and #alignof on non-typedef's structures [#95]\n - Fix #get and
  #set hooks to access newtyped pointers [#96]\n - Fix round-trip problem for interface
  files caused by changes in\n   language-c [#87]\n - Treat \"with\" specially so
  that it can appear both as a marshaller\n   identifier in an input parameter definition
  and as a keyword in enum\n   definitions [#93]\n - Temporarily disable CUDA regression
  suite examples (CUDA install\n   problems on Travis)\n\n\n0.17.2\n - Fix more regressions
  from 0.16.6 (affected packages included\n   gnome-keyring, hsndfile and cuda)\n
  - Add regression suite tests to reduce chances of future regressions\n\n\n0.17.1\n\n
  - Fix regressions from 0.16.6 (caused by fix for issue #45)\n - Version number bump
  (should have been done in the last release)\n\n\n0.16.6\n\n - Trivial integer casts
  in enum defines supporting typedefs [Anton Dessiatov]\n - Allow forward definition
  of enums (issue #23)\n - Binding of C enums with aliases (issue #38)\n - Default
  marshallers for enum and pointer hooks (issue #31)\n - Remove dependencies on C2HS
  module from marshalling code (issue #37)\n - Problem with MacOS blocks notation
  (issue #29)\n - Include directive on first line produces invalid Haskell (issue
  #16)\n - Add command-line switch to suppress GNU preprocessor symbols (issue #60)\n
  - Fix size and alignment computation of bitfields [Facundo Dominguez]\n - Allow
  prefixes to be replaced, not just removed (issue #19)\n - Allow reference to structure
  tags from accessors (issue #54)\n   For access paths for {#get#}, {#set#}, etc.,
  one can now specify\n   that structure tags are to be searched preferentially by
  saying,\n   for example, {#get struct _point->y#} instead of {#get _point->y#}.\n
  \  The latter case will search for typedef names first and only then\n   structure
  tags.\n - Support for anonymous enums (issue #43)\n - with... unwrapper type declarations
  for pointer hooks (issue #44)\n - {#fun...#} indentation for use in where clauses
  (issue #45)\n - incorrect method names from terminal class in superclass\n   instances
  (issue #21)\n - \"offsetof\" directive (issue #22)\n - --include flag cannot handle
  windows paths (issue #30)\n   Now uses System.FilePath splitSearchPath function,
  which should be\n   platform-agnostic.\n - Void functions produce \"defined but
  not used\" warning (issue #47)\n   Handle fun hooks with a void result using \">>\"
  instead of \">>=\".\n - Add CPP undefine flags for Gnu compiler defines (issue #51)\n
  - Cabal test suite\n\n\n0.16.5\n\n - Migration to GitHub; documentation changes.\n\n\nCHANGES
  ABOVE THIS POINT ARE FOR VERSIONS AFTER THE MOVE OF THE REPOSITORY\nTO GITHUB.  FOR
  EARLIER CHANGES SEE ChangeLog.old.\n"
basic-deps:
  bytestring: -any
  base: ! '>=3 && <5'
  filepath: -any
  process: -any
  dlist: -any
  array: -any
  containers: -any
  language-c: ! '>=0.7.1 && <0.8'
  pretty: -any
  directory: -any
all-versions:
- '0.15.0'
- '0.15.1'
- '0.16.0'
- '0.16.2'
- '0.16.3'
- '0.16.4'
- '0.16.5'
- '0.16.6'
- '0.17.1'
- '0.17.2'
- '0.18.1'
- '0.18.2'
- '0.19.1'
- '0.20.1'
- '0.21.1'
- '0.22.1'
- '0.23.1'
- '0.24.1'
- '0.25.1'
- '0.25.2'
- '0.26.1'
- '0.26.2'
- '0.27.1'
- '0.28.1'
- '0.28.2'
- '0.28.3'
author: Manuel M T Chakravarty
latest: '0.28.3'
description-type: text
description: ! "\t\t       Compiler Toolkit - Light\t\t\t     -*-text-*-\n\t\t       ========================\n\nContents:\n\n
  \ README.CTKlight -- This file\n  LICENSE.LIB\t  -- GNU Library General Public License
  (LGPL)\n  BaseVersion.hs  -- Version, copyright, and disclaimer\n  Config.hs\t  --
  Configuration module\n  Common.hs\t  -- Basic definitions, such as representation
  of positions\n  DLists.hs\t  -- Difference lists - provide O(1) append\n  Errors.hs\t
  \ -- Types and functions for error handling\n  FNameOps.hs\t  -- Common operations
  on file names\n  FiniteMaps.hs\t  -- Finite maps based on 2-3 trees\n  GetOpt.hs\t
  \ -- Sven Panne's Haskell version of the GNU getopt library\n  Lexers.hs\t  -- Self-optimising
  lexer combinators\n  Parsers.hs\t  -- Self-optimising parser combinators\n  Pretty.hs\t
  \ -- Pretty printing combinators (the interface is essentially\n\t\t     a superset
  of SimonPJ's pretty printing library)\n  Sets.hs\t  -- Sets as an instance of the
  above mentioned finite maps\n  Utils.hs\t  -- Utility routines\n\nThe Compiler Toolkit
  Light (CTKlight) is a subset of the Compiler Toolkit\n(CTK) - an infrastructure
  for writing compilers in Haskell.  CTKlight\nessentially provides support for implementing
  syntactical analysis without the\nmore heavy-weight state management (like compiler
  switches, global error pool,\nand exceptions), identifier and attribute management,
  and various other\nutilities included in the full CTK.  Both packages can be obtained
  from\n\n  http://www.cse.unsw.edu.au/~chak/ctk/\n\n\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
  BUILDING -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\nIn contrast to full CTK, CTKlight
  is simply a set of Haskell modules without\nany complicated makefile structure.
  \ The code is Haskell 98 compliant with the \nexception that `Parser.hs' makes use
  of existentially quantified type\nvariables - unfortunately, I do not believe that
  the same method of\nself-optimisation would work without existential types.\n\nThe
  modules are tested with\n\n* GHC 4.02 and upwards (use `-fglasgow-exts' to compile
  `Parsers.hs') and\n* Hugs98 (use `-98' when using `Parsers.hs').\n\nIf you want
  autoconf, a ready-made makefile structure, and much more\nadditional library functionality,
  then use full CTK.\n\n\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- COPYLEFT -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\nThis
  library is free software; you can redistribute it and/or modify it under\nthe terms
  of the GNU Library General Public License as published by the Free\nSoftware Foundation;
  either version 2 of the License, or (at your option) any\nlater version.\n\nThis
  library is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS\nFOR A PARTICULAR
  PURPOSE.  See the GNU Library General Public License for more\ndetails.\n\nYou should
  have received a copy of the GNU Library General Public License\nalong with this
  system; if not, write to the Free Software Foundation, Inc.,\n675 Mass Ave, Cambridge,
  MA 02139, USA.\n\nNote: In essence this means that you can use this library in any
  program\n      whether it is free or proprietary.  However, if you modify or extend
  the\n      library itself, you are bound to distribute these modifications or\n
  \     extensions according to the terms and conditions of the LGPL.  For\n      details
  consult the license itself, which is located in the file\n      `LICENSE.LIB'.\n\n\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
  CREDITS -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\nAuthor & Maintainer: Manuel M.
  T. Chakravarty <chak@cse.unsw.edu.au>\n\nThanks to Simon L. Peyton Jones <simonpj@microsoft.com>
  and Roman Lechtchinsky\n<wolfro@cs.tu-berlin.de> for their helpful suggestions that
  improved the\ndesign and implementation of the `Lexers' module.\n"
license-name: GPL-2
