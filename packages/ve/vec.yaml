homepage: https://github.com/phadej/vec
changelog-type: markdown
hash: b380fa287213f98d32b3ff0936621d29a889550ca77e2fa62c83becfbc00dec7
test-bench-deps:
  base: -any
  criterion: ! '>=1.2.3.0 && <1.3'
  tagged: -any
  inspection-testing: ! '>=0.1.1.2 && <0.2'
  vec: -any
  fin: -any
  vector: -any
maintainer: Oleg.Grenrus <oleg.grenrus@iki.fi>
synopsis: Nat, Fin and Vec types.
changelog: ! '# Revision history for boring

  ## 0


  - First version. Released on an unsuspecting world.

'
basic-deps:
  semigroupoids: ! '>=5.2.1 && <5.3'
  base: ! '>=4.7 && <4.11'
  adjunctions: ! '>=4.3 && <4.4'
  distributive: ! '>=0.5.3 && <0.6'
  semigroups: ! '>=0.18.3 && <0.18.4'
  lens: ! '>=4.15.4 && <4.16'
  base-compat: ! '>=0.9.3 && <0.10'
  boring: ! '>=0 && <0.1'
  hashable: ! '>=1.2.6.1 && <1.3'
  deepseq: ! '>=1.3.0.2 && <1.5'
  fin: ! '>=0 && <0.1'
all-versions:
- '0'
author: Oleg Grenrus <oleg.grenrus@iki.fi>
latest: '0'
description-type: haddock
description: ! 'This package provides length indexed lists, i.e. ''Vec''.


  @

  data Vec n a where

  VNil  :: Vec ''Nat.Z a

  (:::) :: a -> Vec n a -> Vec (''Nat.S n) a

  @


  The functions are implemented in three flavours:


  * __naive__: with explicit recursion. It''s simple, constraint-less, yet slow.


  * __pull__: using @Fin n -> a@ representation, which fuses well,

  but makes some programs hard to write. And


  * __inline__: which exploits how GHC dictionary inlining works, unrolling

  recursion if the size of ''Vec'' is known statically.


  As best approach depends on the application, @vec@ doesn''t do any magic

  transformation. Benchmark your code.


  Differences to other packages:


  * [linear](http://hackage.haskell.org/package/linear) has ''V'' type,

  which uses ''Vector'' from @vector@ package as backing store.

  `Vec` is a real GADT, but tries to provide as many useful instances (upto @lens@).


  * [sized-vector](http://hackage.haskell.org/package/sized-vector) depends

  on @singletons@ package. `vec` isn''t light on dependencies either,

  but try to provide wide GHC support.


  * [sized](https://hackage.haskell.org/package/sized) also depends

  on a @singletons@ package. The @Sized f n a@ type is generalisation of

  @linear@''s @V@ for any @ListLike@.


  * [clash-prelude](https://hackage.haskell.org/package/clash-prelude)

  is a kitchen sink package, which has @CLaSH.Sized.Vector@ module.

  Also depends on @singletons@.'
license-name: BSD3
