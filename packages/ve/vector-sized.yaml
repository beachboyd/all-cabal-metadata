homepage: http://github.com/expipiplus1/vector-sized#readme
changelog-type: markdown
hash: d5cdea82b87ff7a5158d784e6869866e6a2c258f0a035279e0168b55350a723f
test-bench-deps: {}
maintainer: whats.our.vector.victor@monoid.al
synopsis: Size tagged vectors
changelog: ! "# Change Log\n\n## [1.0.4.0] - 2018-07-14\n\n- Add Monad instance for
  boxed vectors.\n\n## [1.0.3.1] - 2018-07-10\n\n- Loosen upper bound on `distributive`\n\n##
  [1.0.3.0] - 2018-06-24\n\n- Remove redundant KnownNat constraints\n\n## [1.0.2.0]
  - 2018-05-15\n\n- `not-home` haddock annotations for Internal modules, for more
  helpful linking\n- Fix build with indexed-list-literals-0.2.1.0\n\n## [1.0.1.0]
  - 2018-04-12\n\n- Add Representable and Distributive instances for sized boxed vectors\n-
  Use newer version of indexed-list-literals to allow a fully featured compile on
  ghc 8.4\n\n## [1.0.0.0] - 2018-03-20\n\n- More functions using `Finite` instead
  of `Int`\n- Add `Read` and `Semigroup` instances\n- Performance improvements for
  `Applicative`\n- Add a `knownLength` function\n- Add `fromTuple` (ghc < 8.3 for
  now)\n- Add sized variants of mutable vectors \n- Expose sized vector constructors
  from Internal modules\n\nHuge thanks to all the contributors!\n\n## [0.6.1.0] -
  2017-08-04\n- Add lenses ix, _head and _last\n\n## [0.6.0.0] - 2017-06-07\n- Make
  ordering of additions in types be more consistent\n- Make slice more general\n-
  `Num`, `Fractional`, and `Floating` instances for vectors\n\n## [0.5.1.0] - 2017-02-01\n-
  Loosen upper bound on `vector`\n\n## [0.5.0.0] - 2017-01-04\n- Use `Finite` from
  `finite-typelits` for indexing.\n\n## [0.4.1.0] - 2016-11-24\n- Add `withSized`
  and `withSizedList`\n\n## [0.4.0.1] - 2016-11-12\n- Raise lower bound on base to
  4.9\n\n## [0.4.0.0] - 2016-11-01\n- Correct type signature on `index'`\n\n## [0.3.3.0]
  - 2016-08-10\n- Add instances for Data, Typeable and Generic\n\n## [0.3.2.0] - 2016-03-29\n-
  Add overlapping Monoid instance for zero length vectors\n\n## [0.3.1.0] - 2016-03-29\n-
  Add Monoid instance\n\n## [0.3.0.0] - 2016-03-22\n- Export all of the available
  functionality from Data.Vector.Generic.\n- Add Storable\n- Add Unboxed\n\n## [0.2.0.0]
  - 2016-02-29\n- Tighter bounds on base to avoid compiling with GHC < 7.10.\n\n##
  [0.1.0.0] - 2016-02-28\n- Initial release.\n"
basic-deps:
  base: ! '>=4.9 && <5'
  adjunctions: ! '>=4.3 && <4.5'
  distributive: ! '>=0.5 && <0.7'
  indexed-list-literals: ! '>=0.2.0.0'
  deepseq: ! '>=1.1 && <1.5'
  finite-typelits: ! '>=0.1'
  primitive: ! '>=0.5 && <0.7'
  vector: ! '>=0.11 && <0.13'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.2.0'
- '0.3.3.0'
- '0.4.0.0'
- '0.4.0.1'
- '0.4.1.0'
- '0.5.0.0'
- '0.5.1.0'
- '0.6.1.0'
- '1.0.0.0'
- '1.0.1.0'
- '1.0.2.0'
- '1.0.3.0'
- '1.0.3.1'
- '1.0.4.0'
author: Joe Hermaszewski
latest: '1.0.4.0'
description-type: markdown
description: ! '# Vector Sized


  This package exports a newtype tagging the vectors from the

  [vector](https://hackage.haskell.org/package/vector) package with a type level

  natural representing their size.

  It also exports a few functions from vector appropriately retyped.


  This package is fairly similar to

  the [fixed-vector](https://hackage.haskell.org/package/fixed-vector) package.

  While both provide vectors of statically know length they use completely

  different implementation with different tradeoffs. `vector-sized` is a newtype

  wrapper over `vector` thus it''s able to handle vectors of arbitrary length but

  have to carry runtime representation of length which is significant memory

  overhead for small vectors. `fixed-vector` defines all functions as

  manipulations of Church-encoded product types (`∀r. (a→a→r) → r` for 2D vectors)

  so it can work for both arbitrary product types like `data V2 a = V2 a a` and

  opaque length-parametrized vectors provided by library. As consequence of

  implementation it can''t handle vectors larger than tens of elements.



  The initial code for this package was written by @bgamari in a [PR for vulkan](https://github.com/expipiplus1/vulkan/pull/1)

'
license-name: BSD3
