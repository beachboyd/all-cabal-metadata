homepage: https://git.zenhack.net/zenhack/haskell-vector-endian
changelog-type: markdown
hash: 6fec402bbd31dcc38525210b1889bf4d7f1ac0f75674fc6fe5a0f0a5dc7fd982
test-bench-deps: {}
maintainer: ian@zenhack.net
synopsis: Storable vectors with cpu-independent representation.
changelog: |2

  # 0.1.0.0

  First release
basic-deps:
  vector-endian-little: -any
  zenhack-prelude: ^>=0.1
  base: ^>=4.12
  vector-endian-big: -any
  deepseq: ^>=1.4.4
  cpu: ^>=0.1.2
  endian-common: -any
  vector: ^>=0.12.0
all-versions:
- 0.1.0.0
author: Ian Denhardt
latest: 0.1.0.0
description-type: markdown
description: |
  This is a Haskell package for working with flat arrays of fixed-size
  numeric values in a format that is independent of host CPU endianness
  (or word size).  This means that you can manipulate the array in memory,
  and then just write it out to disk or the network when finished -- no
  marshalling step.

  The types exposed by this package can be used with the `vector` package;
  they implement the type classes provided by that package.
license-name: MIT
