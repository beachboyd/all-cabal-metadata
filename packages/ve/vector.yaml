homepage: https://github.com/haskell/vector
changelog-type: text
hash: 6a898f00b9850fb84836f187324fac1e64c998fb4eac290d4aa91b50a4c586f5
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  base: ! '>=4.5 && <5'
  test-framework-quickcheck2: -any
  HUnit: -any
  base-orphans: ! '>=0.6'
  transformers: ! '>=0.2.0.0'
  random: -any
  QuickCheck: ==2.9.*
  template-haskell: -any
  primitive: -any
  vector: -any
maintainer: Haskell Libraries Team <libraries@haskell.org>
synopsis: Efficient Arrays
changelog: ! "Changes in version 0.12.0.2\n  * Fixes issue #220, compact heap operations
  crashing on boxed vectors constructed\n    using traverse.\n  * remove usage of
  Data.Primitive.Address and clarify the memset Prim Storable\n    smuggling trick
  in Vector.Storable.Mutable\n  * backport injective type family support\n\nChanges
  in version 0.12.0.1\n\n * Make sure `length` can be inlined\n * Include modules
  that test-suites depend on in other-modules\n\nChanges in version 0.12.0.0\n\n *
  Documentation fixes/additions\n * New functions: createT, iscanl/r, iterateNM, unfoldrM,
  uniq\n * New instances for various vector types: Semigroup, MonadZip\n * Made `Storable`
  vectors respect memory alignment\n * Changed some macros to ConstraintKinds\n   -
  Dropped compatibility with old GHCs to support this\n * Add `Eq1`, `Ord1`, `Show1`,
  and `Read1` `Vector` instances, and related\n   helper functions.\n * Relax context
  for `Unbox (Complex a)`.\n\nChanges in version 0.11.0.0\n\n * Define `Applicative`
  instances for `Data.Vector.Fusion.Util.{Box,Id}`\n * Define non-bottom `fail` for
  `instance Monad Vector`\n * New generalized stream fusion framework\n * Various
  safety fixes\n   - Various overflows due to vector size have been eliminated\n   -
  Memory is initialized on creation of unboxed vectors\n * Changes to SPEC usage to
  allow building under more conditions\n\nChanges in version 0.10.12.3\n\n * Allow
  building with `primitive-0.6`\n\nChanges in version 0.10.12.2\n\n * Add support
  for `deepseq-1.4.0.0`\n\nChanges in version 0.10.12.1\n\n * Fixed compilation on
  non-head GHCs\n\nChanges in version 0.10.12.0\n\n * Export MVector constructor from
  Data.Vector.Primitive to match Vector's\n   (which was already exported).\n\n *
  Fix building on GHC 7.9 by adding Applicative instances for Id and Box\n\nChanges
  in version 0.10.11.0\n\n * Support OverloadedLists for boxed Vector in GHC >= 7.8\n\nChanges
  in version 0.10.10.0\n\n * Minor version bump to rectify PVP violation occured in
  0.10.9.3 release\n\nChanges in version 0.10.9.3 (deprecated)\n\n * Add support for
  OverloadedLists in GHC >= 7.8\n\nChanges in version 0.10.9.2\n\n * Fix compilation
  with GHC 7.9\n\nChanges in version 0.10.9.1\n\n * Implement poly-kinded Typeable\n\nChanges
  in version 0.10.0.1\n\n * Require `primitive` to include workaround for a GHC array
  copying bug\n\nChanges in version 0.10\n\n * `NFData` instances\n * More efficient
  block fills\n * Safe Haskell support removed\n"
basic-deps:
  base: ! '>=4.5 && <4.13'
  ghc-prim: ! '>=0.2 && <0.6'
  deepseq: ! '>=1.1 && <1.5'
  primitive: ! '>=0.5.0.1 && <0.8'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- 0.3.1
- '0.4'
- 0.4.1
- 0.4.2
- '0.5'
- '0.6'
- 0.6.0.1
- 0.6.0.2
- '0.7'
- 0.7.0.1
- 0.7.1
- '0.8'
- '0.9'
- 0.9.1
- '0.10'
- 0.10.0.1
- 0.10.9.0
- 0.10.9.1
- 0.10.9.2
- 0.10.10.0
- 0.10.11.0
- 0.10.12.1
- 0.10.12.2
- 0.10.12.3
- 0.11.0.0
- 0.12.0.0
- 0.12.0.1
- 0.12.0.2
author: Roman Leshchinskiy <rl@cse.unsw.edu.au>
latest: 0.12.0.2
description-type: markdown
description: ! 'The `vector` package [![Build Status](https://travis-ci.org/haskell/vector.png?branch=master)](https://travis-ci.org/haskell/vector)

  ====================


  An efficient implementation of Int-indexed arrays (both mutable and immutable),
  with a powerful loop optimisation framework.


  See [`vector` on Hackage](http://hackage.haskell.org/package/vector) for more information.

'
license-name: BSD-3-Clause
