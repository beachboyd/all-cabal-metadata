homepage: https://github.com/nh2/lz4-frame-conduit#readme
changelog-type: ''
hash: 0248cfb62faf2f03a4e1f91d78105c5d434b6b2bd9f57198d31a2d6179b73336
test-bench-deps:
  bytestring: -any
  base: -any
  hspec: -any
  conduit: -any
  conduit-extra: -any
  unliftio-core: -any
  QuickCheck: -any
  resourcet: -any
  lz4-frame-conduit: -any
maintainer: mail@nh2.me
synopsis: Conduit implementing the official LZ4 frame streaming format
changelog: ''
basic-deps:
  bytestring: -any
  inline-c: -any
  unliftio: -any
  base: '>=4.7 && <5'
  text: -any
  conduit: -any
  conduit-extra: -any
  containers: -any
  unliftio-core: -any
  raw-strings-qq: -any
  optparse-applicative: -any
  resourcet: -any
  template-haskell: -any
  lz4-frame-conduit: -any
all-versions:
- 0.1.0.0
author: Niklas HambÃ¼chen
latest: 0.1.0.0
description-type: markdown
description: |
  # lz4-frame-conduit

  Haskell Conduit implementing the official LZ4 frame streaming format.

  ## Rationale and comparison to non-`lz4`-compatible libraries

  There exist two `lz4` formats:

  1. the **block format**, limited to compressing data < 2 GB
  2. the **frame format**, suitable for streaming arbitrarily sized data
    ** This is what the `lz4` command line utility uses

  **This library implements the frame format.**

  Some existing Haskell libraries implement only the block format, and are thus not suitable to compress data > 2 GB in a way.
  (Of course they could chunk the output in some arbitrary way, but that wouldn't be compatible with the `lz4` command line utility.)
  The libraries that belong to this category at time of writing are:

  * [`lz4`](https://hackage.haskell.org/package/lz4)
  * [`lz4-conduit`](https://hackage.haskell.org/package/lz4-conduit)
license-name: MIT
