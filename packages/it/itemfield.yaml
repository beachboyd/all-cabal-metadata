homepage: ''
changelog-type: markdown
hash: 1e3109ff72ceac9e8780cdc37293d80c5d7eca3ccb0165387874dcb603c98460
test-bench-deps:
  test-framework-hunit: -any
  microlens-th: -any
  test-framework: -any
  base: ! '>=4.8 && <5.0'
  text: -any
  vty: -any
  test-framework-quickcheck2: -any
  data-default: -any
  HUnit: -any
  QuickCheck: -any
  microlens: -any
  brick: ! '>=0.17 && <1.0'
maintainer: quick@sparq.org
synopsis: A brick Widget for selectable summary of many elements on a terminal
changelog: ! "Series 1\n---------\n\n * 1.2.5.0  -- enable widget caching and invalidation
  with Ctrl-R invalidate all\n * 1.2.4.1  -- documentation updates; separate changelog
  file.\n * 1.2.4.0  -- added brick 0.17 compatibility\n * 1.2.3.0  -- added brick
  0.16 compatibility\n * 1.2.2.1  -- added stack.yaml for using itemfield with stack\n
  * 1.2.2.0  -- added compatibility for GHC7.10\n * 1.2.1.0  -- added compatibility
  for older distributions\n * 1.2.0.0  -- intermediary state is \"Pending\"\n * 1.1.0.0
  \ -- add support for 's' and 'f' keys and mouse events\n * 1.0.0.0  -- update from
  vty-ui to brick\n\n\nSeries 0\n---------\n\n * 0.3.1.0  -- add + key selector to
  select all successful targets\n * 0.3.0.0  -- rename from StateFieldSelector to
  ItemField\n * 0.2.0.1  -- more key events: G=toggle group, A=toggle all, !=mrk bad;
  add helpMsg\n * 0.2.0.0  -- more key events: Shift+Arrow to mark/unmark with move\n
  * 0.1.0.0  -- initial version\n"
basic-deps:
  microlens-th: -any
  itemfield: -any
  base: ! '>=4.9 && <5.0'
  text: <1.3
  vty: -any
  data-default: -any
  random: -any
  microlens: <0.5
  brick: ! '>=0.17'
all-versions:
- 1.1.0.1
- 1.1.0.2
- 1.2.0.0
- 1.2.1.0
- 1.2.2.0
- 1.2.2.1
- 1.2.3.0
- 1.2.4.0
- 1.2.4.1
- 1.2.4.2
- 1.2.5.0
author: Kevin Quick <quick@sparq.org>
latest: 1.2.5.0
description-type: haddock
description: ! 'This module provides a brick Widget that can be used with the brick

  package to handle situations where there are lots of items to

  represent to the user along with a corresponding state for each

  item.  One example of where the itemfield would be used is if there

  are too many elements to reasonably show in a List widget, if those

  elements are divided into groups, and if some status needs to be

  shown for each element.


  In addition, the user can use the cursor keys and space bar to mark

  one or more items (presumably so other code can get the list of

  marked elements and perform a state-changing operation).


  There are two example programs built when the examples flag is True

  (the default): bookcase and workreport.  Running these applications

  should give a better idea of what the itemfield widget is and how it

  can be used.'
license-name: BSD-3-Clause
