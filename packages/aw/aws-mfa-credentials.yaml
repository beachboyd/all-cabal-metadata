homepage: https://github.com/TaktInc/aws-mfa-credentials
changelog-type: markdown
hash: 4c912ffb05e5fa55e342231713678199be15931f59407083d0560945277663ba
test-bench-deps: {}
maintainer: shea.levy@takt.com
synopsis: Keep your AWS credentials file up to date with MFA-carrying credentials
changelog: ! '# Revision history for aws-mfa-credentials


  ## 0.1.0.0  -- 2017-05-19


  * Initial release.

'
basic-deps:
  amazonka: ! '>=1.4.5 && <1.5'
  exceptions: ! '>=0.8.3 && <0.9'
  freer-effects: ! '>=0.3.0 && <0.4'
  amazonka-sts: ! '>=1.4.5 && <1.5'
  base: ! '>=4.9 && <4.10'
  time: ! '>=1.6.0 && <1.7'
  unordered-containers: ! '>=0.2.8 && <0.3'
  text: ! '>=1.2.2 && <1.3'
  filepath: ! '>=1.4.1 && <1.5'
  process: ! '>=1.4.3 && <1.5'
  ini: ! '>=0.3.5 && <0.4'
  lens: ! '>=4.15.1 && <4.16'
  amazonka-core: ! '>=1.4.5 && <1.5'
  filelock: ! '>=0.1.0 && <0.2'
  optparse-applicative: ! '>=0.13.1 && <0.14'
  optparse-text: ! '>=0.1.1 && <0.2'
all-versions:
- 0.1.0.0
author: Shea Levy
latest: 0.1.0.0
description-type: markdown
description: ! "aws-mfa-credentials\n====================\n\nKeep your AWS credentials
  file up to date with MFA-carrying temporary credentials\n\nUsage\n------\n\n`aws-mfa-credentials
  --mfa-serial-number SERIAL_NUMBER`\n\n**See [Locking protcol](#locking-protocol)
  for important information about avoiding data loss!**\n\nFrom the [API reference
  for GetSessionToken][GetSessionToken]:\n\n> SerialNumber: The identification number
  of the MFA device that is associated with the IAM user who is making the GetSessionToken
  call. Specify this value if the IAM user has a policy that requires MFA authentication.
  The value is either the serial number for a hardware device (such as GAHT12345678)
  or an Amazon Resource Name (ARN) for a virtual device (such as arn:aws:iam::123456789012:mfa/user).
  You can find the device for an IAM user by going to the AWS Management Console and
  viewing the user's security credentials.\n\nOptional flags:\n  * `--duration DURATION_SECONDS`
  The lifetime of the credentials. Defaults to AWS default (43200 at the time of this
  writing).\n  * `--profile PROFILE` The name of the profile whose credentials we're
  managing. Defaults to 'default'.\n  * `--refresh-lead-time LEAD_SECONDS` The amount
  of time before credential expiry to refresh the credentials. Defaults to 300.\n\nEnvironment
  variables:\n  * `PATH`: A program named `ssh-askpass`, accepting a prompt as an
  argument and outputting a password to stdout, must be available on the path.\n  *
  `HOME`: The home directory containing the `.aws/credentials` file\n\nOperation\n-----------\n\n`aws-mfa-credentials`
  will request an MFA code from the user using `ssh-askpass`, request temporary credentials
  from Amazon, and update the credentials file with the temporary credentials.\n\nThe
  new credentials are placed into a profile named `PROFILE-mfa`, e.g. when the `--profile`
  flag is not given they are placed in `default-mfa`. Use the `AWS_PROFILE` environment
  variable or other profile-specifying mechanisms to use the credentials.\n\n`aws-mfa-credentials`
  exits on any error, you may want to run it in a retry loop (with backoff).\n\nLocking
  protocol\n------------------\n\nTo allow safe usage of multiple instances of `aws-mfa-credentials`
  in parallel, a locking protocol is used for the credentials file: An exclusive fcntl
  lock is held on the file `$HOME/.aws/.credentials.lock` when writing (and thus data
  read before the lock is obtained must be rechecked within the lock).\n\nUnfortunately,
  the AWS cli and other tools do not respect this protocol. Therefore, if you are
  modifying the credentials file in any way besides `aws-mfa-credentials`, you should
  either\nstop any existing instances of `aws-mfa-credentials` or obtain the lock
  yourself. **Credential loss may occur if this is not followed!**\n\n[GetSessionToken]:
  http://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html\n"
license-name: Apache-2.0
