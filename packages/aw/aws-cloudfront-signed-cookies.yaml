homepage: https://github.com/typeclasses/aws-cloudfront-signed-cookies
changelog-type: ''
hash: 338e15d91ab8dc72c100e0f13b9d3e5eb037f511a26ff22dcba20100976fc225
test-bench-deps: {}
maintainer: Chris Martin, Julie Moronuki
synopsis: Generate signed cookies for AWS CloudFront
changelog: ''
basic-deps:
  cookie: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  time: -any
  base64-bytestring: -any
  unordered-containers: -any
  text: -any
  pem: -any
  asn1-types: -any
  cryptonite: -any
  aws-cloudfront-signed-cookies: -any
  optparse-applicative: -any
  asn1-encoding: -any
  aeson: -any
  vector: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
author: Chris Martin
latest: '0.1.0.1'
description-type: markdown
description: ! "# aws-cloudfront-signed-cookies\n\nGenerate signed cookies for AWS
  CloudFront\n\nOne way to [serve private content through AWS CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html)
  is to use [signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-signed-cookies.html).
  This package helps you generate signed cookies [using a custom IAM policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-setting-signed-cookie-custom-policy.html)
  which may include a range of time for which the cookie is valid and an IP address
  restriction.\n\n## The library\n\nExample usage:\n\n```haskell\n{-# LANGUAGE OverloadedStrings,
  ScopedTypeVariables #-}\n\nimport Network.AWS.CloudFront.SignedCookies\n\nimport
  qualified Data.Text.IO\n\nmain :: IO ()\nmain = do\n\n  -- Construct an IAM policy
  that expires three days from now\n  policy :: Policy <- simplePolicy\n    (Resource
  \"https://example.com/secrets/*\")\n    (Lifespan (3 * nominalDay))\n\n  -- Parse
  the .pem file to get the private key\n  key :: PrivateKey <- readPrivateKeyPemFile\n
  \   (PemFilePath \"./pk-APKAIATXN3RCIOVT5WRQ.pem\")\n\n  -- Construct signed cookies\n
  \ cookies :: CookiesText <- createSignedCookies\n    (KeyPairId \"APKAIATXN3RCIOVT5WRQ\")
  key policy\n\n  Data.Text.IO.putStrLn (renderCookiesText cookies)\n```\n\nThe output
  should look something like this:\n\n```haskell\nCookie: CloudFront-Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc29...\nCookie:
  CloudFront-Signature=wMN6V3Okxk7sdSPZeebMh-wo...\nCookie: CloudFront-Key-Pair-Id=APKAIATXN3RCIOVT5WRQ\n```\n\nYou
  can see a very similar example in action in the `Network.AWS.CloudFront.SignedCookies.CLI`
  module which defines the command-line interface.\n\n## The executable\n\nYou can
  also generate cookies using the command-line interface.\n\n```\n$ aws-cloudfront-signed-cookies
  --help\nGenerator of signed cookies for AWS CloudFront\n\nUsage: aws-cloudfront-signed-cookies
  --pem-file ARG --key-pair-id ARG\n                                     --resource
  ARG --days ARG\n\nAvailable options:\n  -h,--help                Show this help
  text\n  --pem-file ARG           Location in the filesystem where a .pem file\n
  \                          containing an RSA secret key can be found\n  --key-pair-id
  ARG        CloudFront key pair ID for the key pair that you are\n                           using
  to generate signature\n  --resource ARG           URL that the policy will grant
  access to, optionally\n                           containing asterisks for wildcards\n
  \ --days ARG               Integer number of days until the policy expires\n```\n\nExample
  usage:\n\n```\n$ aws-cloudfront-signed-cookies                \\\n    --pem-file
  pk-APKAIATXN3RCIOVT5WRQ.pem     \\\n    --key-pair-id APKAIATXN3RCIOVT5WRQ         \\\n
  \   --resource \"https://example.com/secrets/*\" \\\n    --days 2\n```\n"
license-name: MIT
