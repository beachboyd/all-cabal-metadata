homepage: http://github.com/jtobin/mwc-probability
changelog-type: text
hash: d59d5e83401aa0b1643a5177a979a168b082c303499af1086360d0add3fa1423
test-bench-deps: {}
maintainer: jared@jtobin.ca, zocca.marco gmail
synopsis: Sampling function-based probability distributions.
changelog: |+
  # Changelog

  - 2.3.1 (2020-07-31)
    * Relaxes the upper bound on mwc-random.

  - 2.3.0 (2020-05-02)
    * Adds the discrete distribution (like categorical, but with supplied
      support).

  - 2.2.0 (2020-01-29)
    * Adds the Chinese Restaurant Process (crp).

  - 2.1.0 (2019-07-23)
    * Generalises 'categorical' and 'multinomial' to take things proportional to
      probabilities, rather than probabilities proper.

  - 2.0.4 (2018-06-30)
    * Clean up docs and add some additional usage information.
    * Split the existing Student t distribution into 'student' and its
      generalised variant, 'gstudent'.

  - 2.0.3 (2018-05-09)
    * Add inverse Gaussian (Wald) distribution

  - 2.0.2 (2018-01-30)
    * Add negative binomial distribution

  - 2.0.1 (2018-01-30)
    * Add Normal-Gamma and Pareto distributions

  - 2.0.0 (2018-01-29)
    * Add Laplace and Zipf-Mandelbrot distribution
    * Rename `isoGauss` to `isoNormal` and `standard` to `standardNormal` to
      uniform naming scheme.
    * Divide Haddock in sections

  - 1.3.0 (2016-12-04)
    * Generalize a couple of samplers to use Traversable rather than lists.

basic-deps:
  mwc-random: '>0.13 && <0.16'
  base: '>=4.8 && <6'
  containers: '>=0.6'
  transformers: '>=0.5 && <1.0'
  primitive: '>=0.6 && <1.0'
all-versions:
- 1.0.0
- 1.0.1
- 1.0.2
- 1.0.3
- 1.1.3
- 1.2.0
- 1.2.1
- 1.2.2
- 1.3.0
- 2.0.0
- 2.0.1
- 2.0.2
- 2.0.3
- 2.0.4
- 2.1.0
- 2.2.0
- 2.3.0
- 2.3.1
author: Jared Tobin, Marco Zocca
latest: 2.3.1
description-type: markdown
description: |+
  # mwc-probability

  [![Build Status](https://secure.travis-ci.org/jtobin/mwc-probability.png)](http://travis-ci.org/jtobin/mwc-probability)
  [![Hackage Version](https://img.shields.io/hackage/v/mwc-probability.svg)](http://hackage.haskell.org/package/mwc-probability)
  [![MIT License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/jtobin/mwc-probability/blob/master/LICENSE)

  Sampling function-based probability distributions.

  A simple probability distribution type, where distributions are characterized
  by sampling functions.

  This implementation is a thin layer over `mwc-random`, which handles RNG
  state-passing automatically by using a `PrimMonad` like `IO` or `ST s` under
  the hood.

  Examples
  --------

  * Transform a distribution's support while leaving its density structure
  invariant:

        -- uniform over [0, 1] transformed to uniform over [1, 2]
        succ <$> uniform

  * Sequence distributions together using bind:

        -- a beta-binomial composite distribution
        beta 1 10 >>= binomial 10

  * Use do-notation to build complex joint distributions from composable,
    local conditionals:

        hierarchicalModel = do
          [c, d, e, f] <- replicateM 4 (uniformR (1, 10))
          a <- gamma c d
          b <- gamma e f
          p <- beta a b
          n <- uniformR (5, 10)
          binomial n p

  Check out the haddock-generated docs on
  [Hackage](https://hackage.haskell.org/package/mwc-probability) for other
  examples.

  ## Etc.

  PRs and issues welcome.

license-name: MIT
