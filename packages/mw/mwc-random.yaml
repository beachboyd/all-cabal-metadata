homepage: https://github.com/bos/mwc-random
changelog-type: markdown
hash: 6ae33e246e91f66f621caabb2323b431c8dab57427a417a98f5cac3d82eb7b21
test-bench-deps: {}
maintainer: Bryan O'Sullivan <bos@serpentine.com>
synopsis: Fast, high quality pseudo random number generation
changelog: ! "## Changes in 0.14.0.0\n\n  * Low level functions for acquiring random
  data for initialization\n    of PRGN state is moved to `System.Random.MWC.SeedSource`
  module\n\n  * Ensure that carry is always correct when restoring PRNG state from\n
  \   seed. Only affects users who create 258 element seed manually.\n    (#63, #65)\n\n\n##
  Changes in 0.13.6.0\n\n  * `tablePoisson` now can handle Î»>1923, see #59 for details.\n
  \   That required intoduction of dependency on math-functions.\n\n\n## Changes in
  0.13.5.0\n\n  * `logCategorical` added\n\n## Changes in 0.13.4.0\n\n  * `withSystemRandom`
  uses RtlGenRandom for seeding generator on windows\n\n\n## Changes in 0.13.3.1\n\n
  \ * primitive-0.6 compatibility\n\n\n## Changes in 0.13.3.0\n\n  * Monadic variant
  of vector shuffle added: `uniformShuffleM`\n\n  * Context on `uniformShuffle` loosened\n\n\n##
  Changes in 0.13.2.2\n\n  * Fixed crash during gen. initialization on Windows when
  stderr\n    is not available (#36).\n\n## Changes in 0.13.2.0\n\n  * Generators
  for beta, Bernoully, Dirichlet and categorical distributions\n    added.\n\n  *
  Functions for generating random shuffles added.\n\n\n## Changes in 0.13.1.2\n\n
  \ * GHC 7.9 support\n\n\n## Changes in 0.13.1.1\n\n  * Long standing performance
  problem in normal distribution fixed (#16)\n\n\n## Changes in 0.13.1.0\n\n  * `createSystemRandom`
  added\n\n\n## Changes in 0.13.0.0\n\n  * Workaround for GHC bug 8072 (bug 25). GHC
  7.6 on 32-bit platrofms is\n    affected.\n\n  * Generators for truncated exponential
  and geometric distributions\n    added.\n\n\n## Changes in 0.12.0.0\n\n  * Fucntion
  `asGenIO` and `asGenST` added.\n\n  * Generation of discrete random variates using
  condensed tables\n    methed. Tables for Poisson and binomial distributions are\n
  \   provided.\n"
basic-deps:
  base: ! '>=4.5 && <5'
  time: -any
  math-functions: ! '>=0.2.1.0'
  primitive: ! '>=0.6'
  vector: ! '>=0.7'
all-versions:
- 0.4.1
- 0.4.1.1
- 0.5.0.0
- 0.5.1.1
- 0.5.1.2
- 0.5.1.3
- 0.5.1.4
- 0.6.0.0
- 0.7.0.0
- 0.7.0.1
- 0.8.0.0
- 0.8.0.1
- 0.8.0.2
- 0.8.0.3
- 0.8.0.5
- 0.9.0.0
- 0.10.0.0
- 0.10.0.1
- 0.11.0.0
- 0.12.0.0
- 0.12.0.1
- 0.13.0.0
- 0.13.1.0
- 0.13.1.1
- 0.13.1.2
- 0.13.2.0
- 0.13.2.2
- 0.13.3.0
- 0.13.3.1
- 0.13.3.2
- 0.13.4.0
- 0.13.5.0
- 0.13.6.0
- 0.14.0.0
author: Bryan O'Sullivan <bos@serpentine.com>
latest: 0.14.0.0
description-type: markdown
description: ! '# Efficient, general purpose pseudo-random number generation

  [![Build Status](https://travis-ci.org/Shimuuar/mwc-random.png?branch=master)](https://travis-ci.org/Shimuuar/mwc-random)

  [![Build status](https://ci.appveyor.com/api/projects/status/4228vkxje4as3nhw/branch/master)](https://ci.appveyor.com/project/Shimuuar/mwc-random)


  This package provides the System.Random.MWC module, a Haskell library

  for generating high-quality pseudo-random numbers in a space- and

  time-efficient way.



  # Get involved!


  Please report bugs via the

  [github issue tracker](http://github.com/bos/mwc-random).


  Master git [git repository](http://github.com/bos/mwc-random):


  * `git clone git://github.com/bos/mwc-random.git`


  There''s also a [Mercurial mirror](http://bitbucket.org/bos/mwc-random):


  * `hg clone http://bitbucket.org/bos/mwc-random`


  (You can create and contribute changes using either Mercurial or git.)



  # Authors


  This library is written and maintained by Bryan O''Sullivan,

  <bos@serpentine.com>.

'
license-name: BSD-3-Clause
