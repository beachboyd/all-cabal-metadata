homepage: http://github.com/wellposed/hblas/
changelog-type: markdown
hash: 93bd6a3b8bdec192066c47ca20c50b3116ed74bb6a58b3bc04c50277d5971072
test-bench-deps:
  hblas: -any
  base: ! '>=4.6 && <5'
  HUnit: ! '>=1.2.5 && <1.3'
  tasty-hunit: ! '>=0.8 && <0.9'
  tasty: ! '>=0.8 && <0.9'
  vector: ! '>=0.5 && <0.12'
maintainer: carter at wellposed dot com
synopsis: Human friendly BLAS and Lapack bindings for Haskell.
changelog: ! '#0.3.1.1

  release, bug fixes in show and improved tests, thanks to tomas musil for catching
  them


  # 0.3.1.0

  Improved type exports and getting started docs thanks to Stephen Diehl



  #0.3.0.0


  the first useful release


  # PRE-RELEASE version 0.2.0.0

  * Support for all BLAS operations defined on General Dense matrices,

  both row and column major.

  *  general dense linear and least squares solvers from LAPACK. Simple Drivers.


  # version 0.1.0.0

  * support basic manipulations of BLAS style dense matrices

'
basic-deps:
  base: ! '>=4.6 && <4.12'
  storable-complex: ! '>=0.2.0 && <0.3.0'
  primitive: ! '>=0.5 && <0.6'
  vector: -any
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.1.0'
- '0.3.1.1'
- '0.3.2.1'
- '0.3.2.2'
author: Carter Tazio Schonwald
latest: '0.3.2.2'
description-type: markdown
description: ! "[![Wellposed](http://www.wellposed.com/mini.png)](http://www.wellposed.com)™\n\n#
  About hblas\n\nhblas is an open source component of the [Wellposed](http://www.wellposed.com)®
  mathematical software suite.\n\nMembers of the numerical haskell open source community
  can be found on irc at  `#numerical-haskell` on freenode,\nand via the [numericalhaskell
  mailing list](https://groups.google.com/forum/#!forum/numericalhaskell).\n\n[![Build
  Status](https://secure.travis-ci.org/wellposed/hblas.png?branch=master)](http://travis-ci.org/wellposed/hblas)\n\nhblas
  is a self contained full (well, not quite yet) BLAS and LAPACK binding that provides
  the\nfull BLAS and LAPACKE APIs in a simple, unopinionated, Haskell wrapper.\n\nThis
  library is *NOT* meant to be used by end users, it is designed to be\nan unopinionated,
  simple, portable, easy to install BLAS/LAPACK substrate for higher level numerical\ncomputing
  libraries to build upon. Morever, this library is strictly a wrapper,\nand simply
  makes using the functionality of BLAS and LAPACK more accessible.\n\nThis library
  is *NOT* meant to be used a standalone array library (except in desperation),\nbut
  rather should be used by a higher level numerical array library to provide\nhigh
  performance linear algebra routines.\n\n## Install\n\nBy default, hblas will assume
  you have BLAS and LAPACK built and installed.\n\n### OSX\n\nOn OS X systems, things
  will just work.\n\n```bash\n$ cabal install\n```\n\n### Linux\n\nOn linux and bsd
  systems, you will need to manually install the BLAS and LAPACK libraries beforehand.\n\n```bash\n$
  sudo apt-get install libblas liblapack\n$ cabal install\n```\n\n## Testing\n\nTo
  run the test suite execute:\n\n```bash\n$ cabal test\n```\n\n## Linking\nIf you
  get an error like `undefined reference to 'cblas_sdsdot'` when building or running
  an HBLAS program,\nyou might be on a system that builds BLAS and CBLAS separately,
  such as Arch Linux.\n\nIn which case, be sure to install CBLAS and invoke `cabal
  install hblas -fCBLAS`\nto make sure `hblas` links to CBLAS properly.\n\n## Usage\n\nAPI
  is subject to change.\n\n```haskell\nimport Foreign.Storable\nimport Numerical.HBLAS.BLAS\nimport
  Numerical.HBLAS.MatrixTypes\n\n-- Generate the constant mutable square matrix of
  the given type and dimensions.\nconstMatrix :: Storable a => Int -> a -> IO (IODenseMatrix
  Row a)\nconstMatrix n k = generateMutableDenseMatrix SRow (n,n) (const k)\n\nexample_dgemm
  :: IO ()\nexample_dgemm = do\n    left  <- constMatrix 2 (2 :: Double)\n    right
  <- constMatrix 2 (3 :: Double)\n    out   <- constMatrix 2 (0 :: Double)\n\n    dgemm
  NoTranspose NoTranspose 1.0 1.0 left right res\n\n    resulting <- mutableVectorToList
  $ _bufferDenMutMat out\n    print resulting\n```\n\n## Getting Involved\n\nPatches,
  bug reports, tests, and other contributions welcome.\n\nIf you want to add a new
  routine, check out the ones listed in the [lapack section](http://software.intel.com/sites/products/documentation/hpc/mkl/mklman/index.htm)
  of the Intel MKL manual to get some human\nreadable documentation.\n\n## Commercial
  Support\n\n*I have > 32bit size arrays, help!*\n\nCongrats, you have ``big compute
  on big data'', contact [Carter](http://www.wellposed.com)\nand we'll try to help
  you out.\n"
license-name: BSD3
