homepage: http://github.com/hsyl20/dynamic-linker-template
changelog-type: ''
hash: 5aa875e1f3a88774b2d683e37a02b5ed864f7f634f4ca906b3c08082fa2d57c5
test-bench-deps: {}
maintainer: hsyl20@gmail.com
synopsis: Automatically derive dynamic linking methods from a data type.
changelog: ''
basic-deps:
  unix: ! '>=2.6'
  base: ! '>=4.6 && <5'
  containers: ! '>=0.5'
  template-haskell: ! '>=2.8'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.1.0
author: Sylvain HENRY
latest: 0.1.1.0
description-type: haddock
description: ! 'This package uses Template Haskell to generate dynamic linking FFI
  methods from a

  record by using its field names. A load function is generated to create an instance

  of the data from a library path.


  Optional symbols are supported (use Maybe types in the data structure).


  A String->String method can be provided to deal with symbols whose names are not

  exactly the same as field names.


  See <https://github.com/hsyl20/dynamic-linker-template/blob/master/Tests/Test.hs>
  for an example.'
license-name: BSD-3-Clause
