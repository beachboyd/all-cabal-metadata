homepage: https://github.com/mgrabmueller/rdtsc
changelog-type: markdown
hash: 0a6e8dc715ba82ad72c7e2b1c2f468999559bec059d50540719a80b00dcc4e66
test-bench-deps: {}
maintainer: martin@grabmueller.de
synopsis: Binding for the rdtsc machine instruction
changelog: ! '## 1.3.0.1


  * Modernized package by switching README to markdown, adding ChangeLog.md

  * Updated links in rdtsc.cabal to point to Github

'
basic-deps:
  base: ! '>=4 && <5'
all-versions:
- 1.1.1
- 1.1.3
- 1.1.3.1
- 1.2.0.0
- 1.3.0.0
- 1.3.0.1
author: Martin Grabmueller <martin@grabmueller.de>
latest: 1.3.0.1
description-type: markdown
description: ! "# rdtsc - Binding for the rdtsc machine instruction\n\nThis small
  Cabal package provides a Haskell binding to the \"rdtsc\"\nmachine instruction on
  modern IA-32 processors.  This instruction can\nbe used to read the number of cycles
  since processor startup and gives\nvery accurate timing information.\n\n----\n\nNote:
  this package contains the file cycle.h by Matteo Frigo, which\nprovides access to
  cycle counters on several architectures.  The\nlicense for this file is included
  in the file LICENSE in this package.\n\n----\n\n## Usage\n\nUse\n\n    cabal install
  rdtsc\n\nfor building and installing system-wide, or\n\n    tar xzvf rdtsc-X.Y.Z.W.tar.gz\n
  \   cd rdtsc-X.Y.Z.W\n    cabal sandbox init\n    cabal install\n\nfor building
  and installing in a sandbox.\n\nJust import module \"System.CPUTime.Rdtsc\" into
  your Haskell file and use\n\n    ghc --make FILENAME\n\nto compile your program.\n\nThe
  \"tests\" directory contains a small test program for the module and\ndemonstrates
  its usage.  There is also a C version for this test\nprogram, to test the overheads
  of Haskell's FFI.\n\nHappy Haskell hacking,\n  Martin\n"
license-name: BSD-3-Clause
