homepage: https://github.com/ndmitchell/extra#readme
changelog-type: text
hash: 46578d7dd16ac1deaf2acb39c64e3a0318d7d25ce46d32fe04c647cd6160b761
test-bench-deps:
  extra: -any
  unix: -any
  base: ==4.*
  filepath: -any
  QuickCheck: ! '>=2.10'
  directory: -any
maintainer: Neil Mitchell <ndmitchell@gmail.com>
synopsis: Extra functions I use.
changelog: ! "Changelog for Extra\n\n1.6.12, released 2018-09-24\n    #39, add curry3/uncurry3\n1.6.11,
  released 2018-09-18\n    #38, make escapeHTML replace ' with &#39;\n1.6.10, released
  2018-09-04\n    #37, make a duration/sleep test more robust (wider bounds)\n1.6.9,
  released 2018-07-12\n    Add loop, the non-monadic version of loopM\n    #36, add
  whenMaybe and whenMaybeM\n1.6.8, released 2018-05-24\n    Add notNull\n    Add listDirectories\n1.6.7,
  released 2018-05-23\n    #35, add fold1M and fold1M_\n    #34, lots of documentation
  typos\n1.6.6, released 2018-04-16\n    Add escapeJSON and unescapeJSON\n    Add
  escapeHTML and unescapeHTML\n1.6.5, released 2018-03-24\n    #33, improve error
  messages on test suite failures\n1.6.4, released 2018-02-23\n    Add dropPrefix
  and dropSuffix\n1.6.3, released 2018-01-26\n    Add maximumOn and minimumOn\n    #31,
  add nubSort, nubSortBy and nubSortOn\n1.6.2, released 2017-12-07\n    Mark the partial
  functions with Partial\n    Add Partial constraint\n1.6.1, released 2017-11-30\n
  \   Add newTempFileWithin and newTempDirWithin\n    Mark the Extra module as deprecated,
  used for documentation only\n1.6, released 2017-06-16\n    #23, delete subtractTime\n
  \   Require QuickCheck-2.10\n1.5.3, released 2017-06-12\n    Add readMaybe, readEither\n1.5.2,
  released 2017-04-04\n    Add errorWithoutStackTrace to Control.Exception.Extra\n1.5.1,
  released 2016-10-25\n    #25, add zipFrom and zipWithFrom\n    #24, add eitherToMaybe
  and maybeToEither\n    Add fromLeft' and fromRight'\n1.5, released 2016-07-21\n
  \   Change fromLeft/fromRight signatures to follow the base libraries\n1.4.12, released
  2016-07-18\n    Add writeVar\n1.4.11, released 2016-07-15\n    Require QuickCheck
  2.9\n    #23, deprecate offsetTimeIncrease and subtract\n    #22, improve offsetTime
  to give reliable measurements\n    Depend on the clock library\n1.4.10, released
  2016-06-15\n    Add Data.Typeable.Extra containing typeRep, Proxy, (:~:)\n1.4.9,
  released 2016-06-01\n    Add line1\n1.4.8, released 2016-05-26\n    Add displayException\n1.4.7,
  released 2016-05-22\n    #21, add concatForM\n1.4.6, released 2016-05-11\n    #11,
  add maybeM and eitherM\n1.4.5, released 2016-04-29\n    #17, change fileEq on files
  that do not exist to be an error\n1.4.4, released 2016-04-29\n    #14, add mconcatMap
  and mconcatMapM\n    #16, add fileEq\n    #15, add isMac\n1.4.3, released 2016-01-07\n
  \   Add Data.Version.Extra\n1.4.2, released 2015-09-14\n    Make concatMapM/mapMaybeM
  faster\n1.4.1, released 2015-08-04\n    Make temp file functions workaround GHC
  bug #10731\n    Add retryBool\n1.4, released 2015-07-23\n    Add stripInfix and
  stripInfixEnd\n1.3.1, released 2015-07-17\n    #9, support directory-1.2.3\n1.3,
  released 2015-06-20\n    Add whenJustM\n    Add errorIO\n1.2, released 2015-05-18\n
  \   Add onceFork\n    Make once async exception safe\n    Fix a deadlock in once
  when two people request in parallel\n    Fix a missing hClose in captureOutput\n1.1,
  released 2015-02-17\n    #7, add nubOrd, nubOrdOn, nubOrdBy\n    #6, add groupSortOn
  and groupSortBy\n    #5, add splitAtEnd\n1.0.1, released 2015-01-09\n    Make listFilesAvoid
  drop trailing path separators before testing\n    #3, add a constraint base >= 4.4\n1.0,
  released 2014-11-27\n    No changes\n0.8, released 2014-11-12\n    Fix a bug in
  writeFileEncoding/writeFileUTF8\n0.7, released 2014-11-03\n    Fix for missing case
  in withNumCapabilities\n0.6, released 2014-10-31\n    Ensure barrier is thread-safe\n
  \   Make subsequent signalBarrier calls throw an exception\n    Add timeout function\n
  \   Make sure sleep never wraps round an Int\n0.5.1, released 2014-10-28\n    Use
  uncons from GHC 7.9 and above\n0.5, released 2014-10-28\n    Use the sortOn from
  GHC 7.9 and above\n    Remove getProcessorCount\n    Remove getDirectoryContentsRecursive
  in favour of listFilesRecursive\n    Change the signature for newTempFile/newTempDir\n
  \   Add a once function\n0.4, released 2014-10-23\n    Remove all but the extractors
  on triples\n    Remove groupSortOn\n    Remove dropAround\n0.3.2, released 2014-10-21\n
  \   Remove use of ===, allows older QuickCheck versions\n0.3.1, released 2014-10-20\n
  \   Fix a bug in breakEnd/spanEnd\n0.3, released 2014-10-18\n    Rename showTime
  to showDuration\n    Add stringException\n    Eliminate rep/reps, use replace instead\n
  \   Switch distinct for allSame/anySame\n    Optimise the numeric conversions\n
  \   Rename chop to repeatedly\n    Add whenM/unlessM\n    Redo the Tuple module,
  additions and deletions\n    Add newTempFile, newTempDir\n    Add createDirectoryPrivate\n
  \   Rename strip* to trim*\n    Generalise showException\n0.2, released 2014-10-07\n
  \   Redo the cons/uncons functions\n    Add withTempDir\n    Rename withTemporaryFile
  to withTempFile\n    Change trim to strip (follow text naming convention)\n    Ensure
  operators get exported\n0.1, released 2014-10-06\n    Initial version, still unstable\n"
basic-deps:
  unix: -any
  base: ! '>=4.4 && <5'
  time: -any
  clock: ! '>=0.7'
  filepath: -any
  process: -any
  directory: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.4'
- '0.5'
- '0.5.1'
- '0.6'
- '0.7'
- '0.8'
- '1.0'
- '1.0.1'
- '1.1'
- '1.2'
- '1.3'
- '1.3.1'
- '1.4'
- '1.4.1'
- '1.4.2'
- '1.4.3'
- '1.4.4'
- '1.4.5'
- '1.4.6'
- '1.4.7'
- '1.4.8'
- '1.4.9'
- '1.4.10'
- '1.4.11'
- '1.4.12'
- '1.5'
- '1.5.1'
- '1.5.2'
- '1.5.3'
- '1.6'
- '1.6.1'
- '1.6.2'
- '1.6.3'
- '1.6.4'
- '1.6.5'
- '1.6.6'
- '1.6.7'
- '1.6.8'
- '1.6.9'
- '1.6.11'
- '1.6.12'
author: Neil Mitchell <ndmitchell@gmail.com>
latest: '1.6.12'
description-type: markdown
description: ! '# Extra [![Hackage version](https://img.shields.io/hackage/v/extra.svg?label=Hackage)](https://hackage.haskell.org/package/extra)
  [![Stackage version](https://www.stackage.org/package/extra/badge/nightly?label=Stackage)](https://www.stackage.org/package/extra)
  [![Linux Build Status](https://img.shields.io/travis/ndmitchell/extra/master.svg?label=Linux%20build)](https://travis-ci.org/ndmitchell/extra)
  [![Windows Build Status](https://img.shields.io/appveyor/ci/ndmitchell/extra/master.svg?label=Windows%20build)](https://ci.appveyor.com/project/ndmitchell/extra)


  A library of extra functions for the standard Haskell libraries. Most functions
  are simple additions, filling out missing functionality. A few functions are available
  in later versions of GHC, but this package makes them available back to GHC 7.2.
  A few examples:


  * `Control.Monad.Extra.concatMapM` provides a monadic version of `concatMap`, in
  the same way that `mapM` is a monadic version of `map`.

  * `Data.Tuple.Extra.fst3` provides a function to get the first element of a triple.

  * `Control.Exception.Extra.retry` provides a function that retries an `IO` action
  a number of times.

  * `System.Environment.Extra.lookupEnv` is a function available in GHC 7.6 and above.
  On GHC 7.6 and above this package reexports the version from `System.Environment`
  while on GHC 7.4 and below it defines an equivalent version.


  The module `Extra` documents all functions provided by this library. Modules such
  as `Data.List.Extra` provide extra functions over `Data.List` and also reexport
  `Data.List`. Users are recommended to replace `Data.List` imports with `Data.List.Extra`
  if they need the extra functionality.


  ## Which functions?


  When producing a library of extra functions I have been guided by a few principles.
  I encourage others with small useful utility functions contribute them here, perhaps
  as a temporary stop before proposing they join the standard libraries.


  * I have been using most of these functions in my packages - they have proved useful
  enough to be worth copying/pasting into each project.

  * The functions follow the spirit of the original Prelude/base libraries. I am happy
  to provide partial functions (e.g. `fromRight`), and functions which are specialisations
  of more generic functions (`whenJust`).

  * Most of the functions have trivial implementations. If a beginner couldn''t write
  the function, it probably doesn''t belong here.

  * I have defined only a few new data types or type aliases. It''s a package for
  defining new utilities on existing types, not new types or concepts.


  ## Base versions


  A mapping between `base` versions and GHC compiler versions can be found [here](https://wiki.haskell.org/Base_package#Versions).

'
license-name: BSD3
