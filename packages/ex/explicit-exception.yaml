homepage: http://www.haskell.org/haskellwiki/Exception
changelog-type: ''
hash: 74efc30b9d18c029b7c80caa2fad717cd5f3ad972ba866c0bb8cf9cc6c1795e0
test-bench-deps: {}
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: Exceptions which are explicit in the type signature.
changelog: ''
basic-deps:
  base: ! '>=2 && <5'
  semigroups: ! '>=0.1 && <1.0'
  transformers: ! '>=0.2 && <0.6'
  deepseq: ! '>=1.1 && <1.5'
all-versions:
- '0.0.1'
- '0.0.2'
- '0.1'
- '0.1.0.1'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.1.5'
- '0.1.6'
- '0.1.7'
- '0.1.7.1'
- '0.1.7.2'
- '0.1.7.3'
- '0.1.8'
- '0.1.9'
- '0.1.9.1'
author: Henning Thielemann <haskell@henning-thielemann.de>
latest: '0.1.9.1'
description-type: haddock
description: ! 'Synchronous and Asynchronous exceptions which are explicit in the
  type signature.

  The first ones are very similar to ''Either'' and ''Control.Monad.Error.ErrorT''.

  The second ones are used for ''System.IO.readFile'' and ''System.IO.hGetContents''.

  This package is a proposal for improved exception handling in Haskell.

  It strictly separates between handling of

  exceptional situations (file not found, invalid user input,

  see <http://www.haskell.org/haskellwiki/Exception>) and

  (programming) errors (division by zero, index out of range,

  see <http://www.haskell.org/haskellwiki/Error>).

  Handling of the first one is called \"exception handling\",

  whereas handling of errors is better known as \"debugging\".


  For applications see the packages @midi@, @spreadsheet@, @http-monad@.


  Although I''m not happy with the identifier style of the Monad Transformer Library

  (partially intended for unqualified use)

  I have tried to adopt it for this library,

  in order to let Haskell programmers get accustomed easily to it.


  See also: @unexceptionalio@'
license-name: BSD3
