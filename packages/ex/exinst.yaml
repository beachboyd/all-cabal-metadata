homepage: https://github.com/k0001/exinst
changelog-type: markdown
hash: 0481aa46b4073a6a373be6e4e4e2bad91dab976c67ced23543c24d4ba991eddf
test-bench-deps:
  bytestring: -any
  base: -any
  constraints: -any
  singletons: -any
  binary: -any
  tasty-quickcheck: -any
  exinst: -any
  hashable: -any
  tasty-hunit: -any
  tasty: -any
  deepseq: -any
  QuickCheck: -any
  profunctors: -any
maintainer: renzoÎ»carbonara.com.ar
synopsis: Dependent pairs and their instances.
changelog: ! "# Version 0.7\n\n* BACKWARDS COMPATIBLE COMPILER ASSISTED CHANGE: All
  of the cabal flags\n  for turning on and off instances were removed.  The `hashable`
  are now\n  always exported from the `exinst`, and the `aeson`, `bytes`,\n  `cereal`
  and `serialise` instances  are now exported from new\n  packages `exinst-aeson`,
  `exinst-bytes`, `exinst-cereal` and\n  `exinst-serialise`. The instances exported
  from those packages are\n  the same as the ones exported with `exinst-0.6`.\n\n\n#
  Version 0.6\n\n* The `binary` and `deepseq` Cabal flags were removed since these
  two packages\n  are always included with the GHC distribution, so it doesn't make
  sense to\n  make them optional.\n\n* The optional dependencies hidden behind Cabal
  flags now apply to the test\n  suite as well.\n\n* Builds with GHC 8.4.\n\n\n# Version
  0.5\n\n* BREAKING: Depend on `singletons == 2.3.*`.\n\n* Add `same{1,2,3,4}`.\n\n*
  Add dependencies on `cborg` and `serialise`\n\n* Add instances for `serialise` (binary
  CBOR encoding/decoding)\n\n\n# Version 0.4\n\n* BREAKING: Decouple `binary` and
  `cereal` instances from `bytes`. This\n  introduces a slight backwards incompatible
  change if you were using some\n  `Serial` instances that depended on host endianness
  (such as `Int`).\n\n* Add `P1`, `P2`, `P3`, `P4`.\n\n* Add `S1`, `S2`, `S3`, `S4`.\n\n*
  Add `Read` instances for `Some{1,2,3,4}`.\n\n* Moved documentation from `README.md`
  into the top-level `Exinst` module.\n\n\n# Version 0.3.0.1\n\n* Removed dependency
  on `generic-random`.\n\n* Correctly deal with cabal flags for `deepseq` and `hashable`.\n\n*
  Add `binary`'s `Data.Binary.Binary` and `cereal`'s `Data.Serialize.Serialize`\n
  \ instances for `Some{1,2,3,4}`. These instances are compatible with each other\n
  \ and rely on the `Data.Bytes.Serial` instances.\n\n\n# Version 0.3\n\n* BREAKING:
  Renamed module `Exinst.Singletons` to  `Exinst`.\n\n* BREAKING: The `Exinst.Instances.Base`
  module is gone. The `base` instances are\n  now exported from `Exinst`.\n\n* Add
  `Dict0`.\n\n* Re-export `Constraint` from `base`.\n\n* Add `Dict{0,2,3,4}` instances
  for `Bool`.\n\n* Add `GHC.Generics.Generic` support for `Some{1,2,3,4}`. This only
  works for\n  indexes with `PEnum` and `PBounded` instances.\n\n* Added tests.\n\n*
  Added `Test.QuickCheck.Arbitrary` instances for `Some{1,2,3,4}` in\n  `Exinst.Instances.QuickCheck`.
  These instances and their dependency on\n  `QuickCheck` can be toggled with the
  `quickcheck` Cabal flag.\n\n* Added `Data.Aeson.{FromJSON,ToJSON}` instances for
  `Some{1,2,3,4}` in\n  `Exinst.Instances.Aeson`. These instances and their dependency
  on\n  `aeson` can be toggled with the `aeson` Cabal flag. These instances used to\n
  \ exist in now-deprecated the `exinst-aeson` package, and are compatible with\n
  \ them.\n\n* Added `Bytes.Serial.Serial` instances for `Some{1,2,3,4}` in\n  `Exinst.Instances.Bytes`.
  These instances and their dependency on `bytes` can\n  be toggled with the `bytes`
  Cabal flag. These instances used to exist in\n  now-deprecated the `exinst-bytes`
  package, and are compatible with them.\n\n* Added `Control.DeepSeq.NFData` instances
  for `Some{1,2,3,4}` in\n  `Exinst.Instances.DeepSeq`. These instances and their
  dependency on `deepseq`\n  can be toggled with the `deepseq` Cabal flag. These instances
  used to exist in\n  now-deprecated the `exinst-deepseq` package, and are compatible
  with them.\n\n* Added `Data.Hashable.Hashable` instances for `Some{1,2,3,4}` in\n
  \ `Exinst.Instances.DeepSeq`. These instances and their dependency on `hashable`\n
  \ can be toggled with the `hashable` Cabal flag. These instances used to exist\n
  \ in now-deprecated the `exinst-hashable` package, and are compatible with them.\n\n\n#
  Version 0.2\n\n* Depend on `singletons-2.2`, which means `KProxy` is gone.\n\n*
  Add `_Some{1,2,3,4}` prisms.\n\n* Add `Dict1` instance for `Bool`.\n\n* Add `some{1,2,3,4}SingRep`.\n\n*
  Thanks to Sandy Maguire for having contributed to this release.\n\n\n# Version 0.1.2\n\n*
  Export the `Some{1,2,3,4}` constructors.\n\n* Make all the fields in `Some{1,2,3,4}`
  strict.\n\n* Relax upper bound on `base`, `singletons`, `constraints`.\n\n* Re-export
  `Dict(Dict)` from `constraints`.\n\n\n# Version 0.1.1\n\n* Relax upper bound on
  `singletons` dependency.\n\n* `withSome{1,2,3,4}Sing` brings `SingI` instances to
  scope.\n\n* Generalized the `(* -> Constraint)` parameter in `Dict{1,2,3,4}`\n  to
  `(k -> Constraint)`.\n\n\n# Version 0.1\n\n* Initial release.\n"
basic-deps:
  base: ! '>=4.9 && <5.0'
  constraints: ! '>=0.4'
  singletons: ! '>=2.3.1'
  binary: -any
  hashable: -any
  deepseq: -any
  QuickCheck: -any
  profunctors: ! '>=5.0'
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- '0.2'
- '0.3'
- 0.3.0.1
- '0.4'
- '0.5'
- '0.6'
- '0.7'
author: Renzo Carbonara
latest: '0.7'
description-type: markdown
description: ! '# exinst


  See the [BSD3 LICENSE](https://github.com/k0001/exinst/blob/master/exinst/exinst/LICENSE.txt)

  file to learn about the legal terms and conditions for this library.


  Find documentation for this library in the top-level

  [`Exinst`](https://github.com/k0001/exinst/blob/master/exinst/lib/Exinst.hs)

  module.


'
license-name: BSD-3-Clause
