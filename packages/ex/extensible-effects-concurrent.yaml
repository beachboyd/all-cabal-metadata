homepage: https://github.com/sheyll/extensible-effects-concurrent#readme
changelog-type: markdown
hash: 56408cec97e6f653387f61e3b1469e74ec09b3e6c3c993bd35b126b0dd898e8f
test-bench-deps:
  extensible-effects-concurrent: -any
  extensible-effects: -any
  stm: -any
  base: ! '>=4.9 && <5'
  tasty-discover: -any
  HUnit: -any
  containers: -any
  lens: -any
  tasty-hunit: -any
  tasty: -any
  QuickCheck: <2.11
maintainer: sven.heyll@gmail.com
synopsis: Message passing concurrency as extensible-effect
changelog: ! "# Changelog for extensible-effects-concurrent\n\n## 0.3.0.0\n\n- Add
  support for running and interacting with a scheduler\n  and it's processes from
  IO, for example from ghci\n- Rename `yieldProcess` to `executeAndResume`\n- Add
  an actual `yieldProcess`, that behaves like `yield`\n- Change the return type of
  function to `()` where applicable\n  to avoid all these `_ <- sendMessage...` or
  `void $ sendMessage`\n  dances.\n- Add a simple logging observer: `spawnLoggingObserver`\n-
  Removed `Control.Eff.Interactive`\n- Removed most functions in `Control.Eff.ExceptionExtra`\n-
  Make `sendMessage` and the reply in `call` strict with respect to the message\n
  \ payload\n\n## 0.2.0.3\n\n- Improve 'Api' documentation\n- Improve `LogChannel`
  API\n- Reorganize unit tests\n- Hopefully tune travis ci test parameter enough to
  get a stable build result\n\n## 0.2.0.2\n\n- Fix minor `stack upload` complaints
  about the cabal file\n\n## 0.2.0.1\n\n- Simplify IO Exception handling in `ForkIoScheduler`,\n-
  Add many unit tests for exception, exit and shutdown\n\n## 0.2.0.0\n\n- Add `Spawn`
  to `Process`\n- Merge `MessagePassing` and `Process`\n- Add initial test suite\n-
  Fix shutdown error in `ForkIoScheduler`\n- Rename `Dispatcher` to `Scheduler`\n-
  Add `receiveLoop` function to `Process`\n- Change `Api.Server` `serve` to loop instead
  of handling just one request\n- Allow combining multiple `ApiHandler` such that
  one process can handle\n  multiple APIs\n\n### TODO\n\n- Add `Kill` action to `Process`\n\n##
  0.1.3.0\n\n- Rename and split `GenServer` to `Api`, `Api.Client`, `Api.Server`\n-
  Add `registerServer`, `callRegistered` and `castRegistered`\n- Remove the variant
  of `cast` that returns a boolean\n\n## 0.1.2.2\n\n- Try to fix version bounds for
  hackage\n\n## 0.1.2.1\n\n- Add more documentation\n- Simplify Scheduler API\n- Make
  more exception safe\n\n## 0.1.2.0\n\n- Add Observer module\n- Implement Exception
  handling\n- Improve Scheduler shutdown\n- Add logging support via the logging-effect
  library\n\n## 0.1.1.0\n\n- Substantial API reoganization\n- Rename/Move modules\n\n##
  0.1.0.1\n\n- Stack/Cabal/Github Cosmetics\n- Travis build job\n\n## 0.1.0.0\n\n-
  Initial Version\n"
basic-deps:
  extensible-effects: ! '>=2.4 && <2.5'
  stm: ! '>=2.4.5'
  base: ! '>=4.9 && <5'
  time: -any
  monad-control: -any
  filepath: -any
  process: -any
  logging-effect: -any
  tagged: -any
  containers: -any
  lens: -any
  mtl: -any
  transformers: -any
  random: -any
  parallel: -any
  QuickCheck: <2.11
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.2.1'
- '0.1.2.2'
- '0.1.3.0'
- '0.2.0.2'
- '0.2.0.3'
- '0.3.0.0'
author: Sven Heyll
latest: '0.3.0.0'
description-type: markdown
description: ! "# extensible-effects-concurrent\n\nMessage passing concurrency with
  'forkIO' and 'extensible-effects' inspired by Erlang.\n\n[![Build Status](https://travis-ci.org/sheyll/extensible-effects-concurrent.svg?branch=master)](https://travis-ci.org/sheyll/extensible-effects-concurrent)\n\n[![Hackage](https://img.shields.io/badge/hackage-extensible-effects-concurrent-green.svg?style=flat)](http://hackage.haskell.org/package/extensible-effects-concurrent)
  \n\n[![extensible-effects-concurrent LTS](http://stackage.org/package/extensible-effects-concurrent/badge/lts)](http://stackage.org/lts/package/extensible-effects-concurrent)\n\n##
  Example\n\nTODO\n"
license-name: BSD3
