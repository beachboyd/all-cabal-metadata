homepage: http://github.com/ocharles/exhaustive
changelog-type: markdown
hash: b21ee5cade6352faaa761cbabcfcc05c12c997e4493e6762e2e28194a076e257
test-bench-deps: {}
maintainer: ollie@ocharles.org.uk
synopsis: Compile time checks that a computation considers producing data through
  all possible constructors
changelog: |
  ## 1.1.9 -- 2020-06-17

  ### Other Changes

  * Support GHC 8.10

  ## 1.1.8 -- 2019-09-19

  ### Other Changes

  * Support GHC 8.8

  ## 1.1.7 -- 2018-10-23

  ### Other Changes

  * Changed bounds of `template-haskell` to only support 2.14.0.0. This release is
    thus only compatible with GHC 8.6. If this is a problem, please open an issue
    and I can add CPP to support older GHCs.

  * Increased upper-bound of `base` to < 4.13.

  ## 1.1.6

  ### Other Changes

  * Increased upper-bound of `base` to < 4.12.

  ## 1.1.5

  ### Other Changes

  * Increased upper-bound of `base`.

  ## 1.1.4

  ### Other Changes

  * Increased upper-bound of `generics-sop` to < 0.4.

  ## 1.1.3

  * Compile with base-4.9.

  ## 1.1.2

  * Compile with generics-sop 0.2. Thanks to @kosmikus for this change.

  ## 1.1.1

  * Increased the upper-bound of base to allow < 4.9 and transforms < 0.5. Now builds on
    GHC 7.10.1.

  ## 1.1.0

  * New API new using Template Haskell to provide named constructors. Users should
    check the latest documentation for 'Control.Exhaustive' to see how the new API
    is used.

  ## 1.0.0

  * Initial release
basic-deps:
  base: '>=4.7 && <4.15'
  transformers: '>=0.3 && <0.6'
  generics-sop: '>=0.1 && <0.6'
  template-haskell: '>=2.14.0.0 && <2.17.0.0'
all-versions:
- 1.0.0
- 1.1.0
- 1.1.1
- 1.1.2
- 1.1.3
- 1.1.4
- 1.1.5
- 1.1.6
- 1.1.7
- 1.1.8
- 1.1.9
author: Oliver Charles
latest: 1.1.9
description-type: haddock
description: For a brief tutorial to @exhaustive@, check out the documentation for
  "Control.Exhaustive", which contains a small example.
license-name: BSD-3-Clause
