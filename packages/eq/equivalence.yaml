homepage: https://github.com/pa-ba/equivalence
changelog-type: text
hash: 5f45627279b4ab74b17667e94ef80746a0b6f3654f06333de0f21b0e17047303
test-bench-deps:
  test-framework: -any
  fail: -any
  base: ! '>=4'
  test-framework-quickcheck2: -any
  containers: -any
  STMonadTrans: ! '>=0.4.3'
  mtl: ! '>=2.0.1'
  transformers: ! '>=0.2'
  QuickCheck: ! '>=2'
  template-haskell: -any
  transformers-compat: ! '>=0.3'
maintainer: paba@itu.dk
synopsis: Maintaining an equivalence relation implemented as union-find using STT.
changelog: |
  0.3.2
  -----
  * add Applicative constraints for backwards compatibility with GHC 7.8

  0.3.1
  -----
  * use transformers-compat for backwards compatibility with older versions of transformers

  0.3.0.1
  -------
  * add CHANGES.txt to .cabal file

  0.3
  ---
  * add suport for Control.Monad.Except (thus the new dependency constraint 'mtl >= 2.2.1')
basic-deps:
  fail: -any
  base: ! '>=4 && <5'
  containers: -any
  STMonadTrans: ! '>=0.4.3'
  mtl: ! '>=2.0.1'
  transformers: ! '>=0.2'
  transformers-compat: ! '>=0.3'
all-versions:
- '0.1'
- 0.1.1
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
- '0.3'
- 0.3.0.1
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.4
author: Patrick Bahr
latest: 0.3.4
description-type: haddock
description: |-
  This is an implementation of Tarjan's Union-Find algorithm (Robert
  E. Tarjan. "Efficiency of a Good But Not Linear Set Union
  Algorithm", JACM 22(2), 1975) in order to maintain an equivalence
  relation.
  This implementation is a port of the /union-find/ package using the
  ST monad transformer (instead of the IO monad).
license-name: BSD-3-Clause
