homepage: http://github.com/ekmett/eq/
changelog-type: markdown
hash: b6a5dfa242b33820cd65232552a6d4d157897976f6e7682368e4e78b67f2a051
test-bench-deps: {}
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Leibnizian equality
changelog: |
  4.2.1 [2020.10.01]
  ------------------
  * Allow building with GHC 9.0.

  4.2 [2018.04.24]
  ----------------
  * Make `lower`, `lower2`, and `lower3` in `Data.Eq.Type` poly-kinded.
  * Introduce the `Data.Eq.Type.Hetero` module, which exposes `(:==)`, a
    heterogeneously kinded version of `(:=)`. This module is only available
    on GHC 8.2 and later.

  4.1
  ---
  * Add `TestEquality` and `TestCoercion` instances for `(:=)`.
  * Add `fromLeibniz` and `toLeibniz` functions for converting between `(:~:)`
    (from `Data.Type.Equality`) and `(:=)`.
  * Add a `reprLeibniz` function to convert `(:=)` to a `Coercion`
    (i.e., representational equality).
  * Make `(:=)` a newtype.
  * We can remove the `Trustworthy` claim and infer as `Safe` on modern GHCs.

  4.0.2
  -----
  * Made := kind polymorphic.

  4.0.1
  -----
  * Provided an explicit nominal `RoleAnnotation`.

  4.0
  ---
  * Updated to work with `semigroupoids` 4.0

  3.1.1
  -----
  * Claim to be `Trustworthy`

  3.1
  ---
  * Disabled observing injectivity through `TypeFamilies` for GHC >= 7.6

  3.0.1
  -----
  * Updated build system
  * Removed my personal intra-package dependency upper bounds
  * Added `README` and `CHANGELOG`
basic-deps:
  semigroupoids: '>=4 && <6'
  base: ==4.*
all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.2.0
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.3.1
- 0.3.4
- 0.3.4.1
- 0.3.4.2
- 0.3.4.3
- 0.3.5
- 0.3.6
- 0.3.7
- 0.3.7.1
- '3.0'
- '3.1'
- 3.1.1
- '4.0'
- 4.0.1
- 4.0.2
- 4.0.3
- 4.0.4
- '4.1'
- '4.2'
- 4.2.1
author: Edward A. Kmett
latest: 4.2.1
description-type: markdown
description: "eq\n==\n\n[![Hackage](https://img.shields.io/hackage/v/eq.svg)](https://hackage.haskell.org/package/eq)
  [![Build Status](https://secure.travis-ci.org/ekmett/eq.png?branch=master)](http://travis-ci.org/ekmett/eq)\n\nThis
  package provides a data type that witnesses equality between two types using Leibnizian
  equality.\n\nIt includes a [refinement to the notion of Leibnizian equality by Oleg
  Kiselyov](http://www.haskell.org/pipermail/haskell-cafe/2010-May/077177.html) \nthat
  permits it to refine equality using the injectively of type constructors via type
  families.\n\nContact Information\n-------------------\n\nContributions and bug reports
  are welcome!\n\nPlease feel free to contact me through github or on the #haskell
  IRC channel on irc.freenode.net.\n\n-Edward Kmett\n"
license-name: BSD-3-Clause
