homepage: http://xmonad.org
changelog-type: ''
hash: 8928fafcd169614e550b360dc18cce2e001b43e1ed0f3c439b6cd9411eb02643
test-bench-deps: {}
maintainer: jan.vornberger@informatik.uni-oldenburg.de
synopsis: A tiling window manager
changelog: ''
basic-deps:
  extensible-exceptions: -any
  unix: -any
  base: <5 && >=3
  X11: ! '>=1.5.0.0 && <1.6'
  filepath: -any
  process: -any
  containers: -any
  mtl: -any
  directory: -any
all-versions:
- 0.8.1
- 0.8.1.3
- 0.9.1.4
author: Spencer Janssen
latest: 0.9.1.4
description-type: text
description: ! "                    xmonad : a tiling window manager\n\n                           http://xmonad.org\n\n
  \   xmonad is a tiling window manager for X. Windows are arranged\n    automatically
  to tile the screen without gaps or overlap, maximising\n    screen use. Window manager
  features are accessible from the\n    keyboard: a mouse is optional. xmonad is written,
  configured and\n    extensible in Haskell. Custom layout algorithms, key bindings
  and\n    other extensions may be written by the user in config files. Layouts\n
  \   are applied dynamically, and different layouts may be used on each\n    workspace.
  Xinerama is fully supported, allowing windows to be tiled\n    on several physical
  screens.\n\nQuick start:\n\nObtain the dependent libraries, then build with:\n\n
  \       runhaskell Setup.lhs configure --user --prefix=$HOME\n        runhaskell
  Setup.lhs build\n        runhaskell Setup.lhs install --user\n\nFor the full story,
  read on.\n\nBuilding:\n\n Building is quite straightforward, and requires a basic
  Haskell toolchain.\n On many systems xmonad is available as a binary package in
  your\n package system (e.g. on Debian or Gentoo). If at all possible, use this\n
  in preference to a source build, as the dependency resolution will be\n simpler.\n\n
  We'll now walk through the complete list of toolchain dependencies.\n\n * GHC: the
  Glasgow Haskell Compiler\n\n    You first need a Haskell compiler. Your distribution's
  package\n    system will have binaries of GHC (the Glasgow Haskell Compiler), the\n
  \   compiler we use, so install that first. If your operating system's\n    package
  system doesn't provide a binary version of GHC, you can find\n    them here:\n\n
  \       http://haskell.org/ghc\n\n    For example, in Debian you would install GHC
  with:\n\n        apt-get install ghc6\n\n    It shouldn't be necessary to compile
  GHC from source -- every common\n    system has a pre-build binary version.\n\n
  * X11 libraries:\n\n    Since you're building an X application, you'll need the
  C X11\n    library headers. On many platforms, these come pre-installed. For\n    others,
  such as Debian, you can get them from your package manager:\n\n        apt-get install
  libx11-dev\n\n    Typically you need: libXinerama libXext libX11\n\n * Cabal\n\n
  \   xmonad requires a recent version of Cabal, >= 1.2.0. If you're using\n    GHC
  6.8, then it comes bundled with the right version. If you're\n    using GHC 6.6.x,
  you'll need to build and install Cabal from hackage\n    first:\n\n          http://hackage.haskell.org/cgi-bin/hackage-scripts/package/Cabal\n\n
  \   You can check which version you have with the command:\n\n        $ ghc-pkg
  list Cabal\n        Cabal-1.2.2.0\n\n * Haskell libraries: mtl, unix, X11\n\n    Finally,
  you need the Haskell libraries xmonad depends on. Since\n    you've a working GHC
  installation now, most of these will be\n    provided. To check whether you've got
  a package run 'ghc-pkg list\n    some_package_name'. You will need the following
  packages:\n\n    mtl   http://hackage.haskell.org/cgi-bin/hackage-scripts/package/mtl\n
  \   unix  http://hackage.haskell.org/cgi-bin/hackage-scripts/package/unix\n    X11
  \  http://hackage.haskell.org/cgi-bin/hackage-scripts/package/X11\n\n * Build xmonad:\n\n
  \   Once you've got all the dependencies in place (which should be\n    straightforward),
  build xmonad:\n\n        runhaskell Setup.lhs configure --user --prefix=$HOME\n
  \       runhaskell Setup.lhs build\n        runhaskell Setup.lhs install --user\n\n
  \   And you're done!\n\n------------------------------------------------------------------------\n\nRunning
  xmonad:\n\n    Add:\n\n         $HOME/bin/xmonad\n\n    to the last line of your
  .xsession or .xinitrc file.\n\n------------------------------------------------------------------------\n\nConfiguring:\n\n
  \   See the CONFIG document\n\n------------------------------------------------------------------------\n\nXMonadContrib\n\n
  \   There are many extensions to xmonad available in the XMonadContrib\n    (xmc)
  library. Examples include an ion3-like tabbed layout, a\n    prompt/program launcher,
  and various other useful modules.\n    XMonadContrib is available at:\n\n        latest
  release: http://hackage.haskell.org/cgi-bin/hackage-scripts/package/xmonad-contrib\n\n
  \       darcs version:  darcs get http://code.haskell.org/XMonadContrib\n\n------------------------------------------------------------------------\n\nOther
  useful programs:\n\n A nicer xterm replacement, that supports resizing better:\n\n
  \   urxvt       http://software.schmorp.de/pkg/rxvt-unicode.html\n\n For custom
  status bars:\n\n    dzen        http://gotmor.googlepages.com/dzen\n    xmobar http://hackage.haskell.org/cgi-bin/hackage-scripts/package/xmobar\n\n
  For a program dispatch menu:\n\n    dmenu       http://www.suckless.org/download/\n
  \   gmrun       (in your package system)\n\nAuthors:\n\n    Spencer Janssen\n    Don
  Stewart\n    Jason Creighton\n"
license-name: BSD-3-Clause
