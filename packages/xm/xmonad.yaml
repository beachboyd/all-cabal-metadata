homepage: http://xmonad.org
changelog-type: markdown
hash: 614ae7e412ef164cbc46e9d2eb3348b2b33b79964a81cd9b4d2643506a1c2b02
test-bench-deps:
  extensible-exceptions: -any
  base: -any
  X11: -any
  xmonad: -any
  containers: -any
  QuickCheck: ! '>=2'
maintainer: xmonad@haskell.org
synopsis: A tiling window manager
changelog: ! "# Change Log / Release Notes\n\n## unknown (unknown)\n\n## 0.14.1 (August
  20, 2018)\n\n### Breaking Changes\n\n  * The cabal build no longer installs xmonad.hs,
  xmonad.1, and xmonad.1.html\n    as data files. The location cabal picks for chose
  files isn't useful as\n    standard tools like man(1) won't find them there. Instead,
  we rely on\n    distributors to pick up the files from the source tarball during
  the build\n    and to install them into proper locations where their users expect
  them.\n    [https://github.com/xmonad/xmonad/pull/127]\n\n### Bug Fixes\n\n  * Add
  support for GHC 8.6.x by providing an instance for 'MonadFail X'. A\n    side effect
  of that change is that our code no longer compiles with GHC\n    versions prior
  to 8.0.x. We could work around that, no doubt, but the\n    resulting code would
  require CPP and Cabal flags and whatnot. It feels more\n    reasonable to just require
  a moderately recent compiler instead of going\n    through all that trouble.\n\n
  \ * xmonad no longer always recompile on startup. Now it only does so if the\n    executable
  does not have the name that would be used for the compilation\n    output. The purpose
  of recompiling and executing the results in this case is\n    so that the `xmonad`
  executable in the package can be used with custom\n    configurations.\n\n### Enhancements\n\n
  \ * Whenever xmonad recompiles, it now explains how it is attempting to\n    recompile,
  by outputting logs to stderr. If you are using xmonad as a custom\n    X session,
  then this will end up in a `.xsession-errors` file.\n\n## 0.14 (July 30, 2018)\n\n###
  Bug Fixes\n\n  * The state file that xmonad uses while restarting itself is now\n
  \   removed after it is processed.  This fixes a bug that manifested\n    in several
  different ways:\n\n    - Names of old workspaces would be resurrected after a restart\n
  \   - Screen sizes would be wrong after changing monitor configuration (#90)\n    -
  `spawnOnce` stopped working (xmonad/xmonad-contrib#155)\n    - Focus did not follow
  when moving between workspaces (#87)\n    - etc.\n\n  * Recover old behavior (in
  0.12) when `focusFollowsMouse == True`:\n    the focus follows when the mouse enters
  another workspace\n    but not moving into any window.\n\n  * Compiles with GHC
  8.4.1\n\n  * Restored compatability with GHC version prior to 8.0.1 by removing
  the\n    dependency on directory version 1.2.3.\n\n\n## 0.13 (February 10, 2017)\n\n###
  Breaking Changes\n\n  * When restarting xmonad, resume state is no longer passed
  to the\n    next process via the command line.  Instead, a temporary state\n    file
  is created and xmonad's state is serialized to that file.\n\n    When upgrading
  to 0.13 from a previous version, the `--resume`\n    command line option will automatically
  migrate to a state file.\n\n    This fixes issue #12.\n\n### Enhancements\n\n  *
  You can now control which directory xmonad uses for finding your\n    configuration
  file and which one is used for storing the compiled\n    version of your configuration.
  \ In order of preference:\n\n      1. New environment variables.  If you want to
  use these ensure\n         you set the correct environment variable and also create
  the\n         directory it references:\n\n         - `XMONAD_CONFIG_DIR`\n         -
  `XMONAD_CACHE_DIR`\n         - `XMONAD_DATA_DIR`\n\n      2. The `~/.xmonad` directory.\n\n
  \     3. XDG Base Directory Specification directories, if they exist:\n\n         -
  `XDG_CONFIG_HOME/xmonad`\n         - `XDG_CACHE_HOME/xmonad`\n         - `XDG_DATA_HOME/xmonad`\n\n
  \   If none of these directories exist then one will be created using\n    the following
  logic: If the relevant environment variable\n    mentioned in step (1) above is
  set, the referent directory will be\n    created and used.  Otherwise `~/.xmonad`
  will be created and used.\n\n    This fixes a few issues, notably #7 and #56.\n\n
  \ * A custom build script can be used when xmonad is given the\n    `--recompile`
  command line option.  If an executable named `build`\n    exists in the xmonad configuration
  directory it will be called\n    instead of `ghc`.  It takes one argument, the name
  of the\n    executable binary it must produce.\n\n    This fixes #8.  (One of two
  possible custom build solutions.  See\n    the next entry for another solution.)\n\n
  \ * For users who build their xmonad configuration using tools such as\n    cabal
  or stack, there is another option for executing xmonad.\n\n    Instead of running
  the `xmonad` executable directly, arrange to\n    have your login manager run your
  configuration binary instead.\n    Then, in your binary, use the new `launch` command
  instead of\n    `xmonad`.\n\n    This will keep xmonad from using its configuration
  file\n    checking/compiling code and directly start the window manager\n    without
  `exec`ing any other binary.\n\n    See the documentation for the `launch` function
  in `XMonad.Main`\n    for more details.\n\n    Fixes #8.  (Second way to have a
  custom build environment for\n    XMonad.  See previous entry for another solution.)\n\n##
  0.12 (December 14, 2015)\n\n  * Compiles with GHC 7.10.2, 7.8.4, and 7.6.3\n\n  *
  Use of [data-default][] allows using `def` where previously you\n    had to write
  `defaultConfig`, `defaultXPConfig`, etc.\n\n  * The [setlocale][] package is now
  used instead of a binding shipped\n    with xmonad proper allowing the use of `Main.hs`
  instead of\n    `Main.hsc`\n\n  * No longer encodes paths for `spawnPID`\n\n  *
  The default `manageHook` no longer floats Gimp windows\n\n  * Doesn't crash when
  there are fewer workspaces than screens\n\n  * `Query` is now an instance of `Applicative`\n\n
  \ * Various improvements to the example configuration file\n\n[data-default]: http://hackage.haskell.org/package/data-default\n[setlocale]:
  https://hackage.haskell.org/package/setlocale\n"
basic-deps:
  extensible-exceptions: -any
  unix: -any
  setlocale: -any
  base: ! '>=4.9 && <5'
  X11: ! '>=1.8 && <1.10'
  filepath: -any
  process: -any
  data-default: -any
  xmonad: -any
  containers: -any
  utf8-string: ! '>=0.3 && <1.1'
  mtl: -any
  directory: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '0.5'
- '0.6'
- '0.7'
- '0.8'
- '0.8.1'
- '0.9'
- '0.9.1'
- '0.9.2'
- '0.10'
- '0.11'
- '0.11.1'
- '0.12'
- '0.13'
- '0.14'
- '0.14.1'
author: ! 'Spencer Janssen, Don Stewart, Adam Vogt, David Roundy, Jason Creighton

  , Brent Yorgey, Peter Jones, Peter Simons, Andrea Rossato, Devin Mullins

  , Lukas Mai, Alec Berryman, Stefan O''Rear, Daniel Wagner, Peter J. Jones

  , Daniel Schoepe, Karsten Schoelzel, Neil Mitchell, Joachim Breitner

  , Peter De Wachter, Eric Mertens, Geoff Reedy, Michiel Derhaeg

  , Philipp Balzarek, Valery V. Vorotyntsev, Alex Tarkovsky, Fabian Beuke

  , Felix Hirn, Michael Sloan, Tomas Janousek, Vanessa McHale, Nicolas Pouillard

  , Aaron Denney, Austin Seipp, Benno Fünfstück, Brandon S Allbery, Chris Mears

  , Christian Thiemann, Clint Adams, Daniel Neri, David Lazar, Ferenc Wagner

  , Francesco Ariis, Gábor Lipták, Ivan N. Veselov, Ivan Tarasov, Javran Cheng

  , Jens Petersen, Joey Hess, Jonne Ransijn, Josh Holland, Khudyakov Alexey

  , Klaus Weidner, Michael G. Sloan, Mikkel Christiansen, Nicolas Dudebout

  , Ondřej Súkup, Paul Hebble, Shachaf Ben-Kiki, Siim Põder, Tim McIver

  , Trevor Elliott, Wouter Swierstra, Conrad Irwin, Tim Thelion'
latest: '0.14.1'
description-type: markdown
description: ! "# xmonad: A Tiling Window Manager\n\n[![Build Status](https://travis-ci.org/xmonad/xmonad.svg?branch=master)](https://travis-ci.org/xmonad/xmonad)\n\n[xmonad][]
  is a tiling window manager for X. Windows are arranged\nautomatically to tile the
  screen without gaps or overlap, maximising\nscreen use. Window manager features
  are accessible from the keyboard:\na mouse is optional. xmonad is written, configured
  and extensible in\nHaskell. Custom layout algorithms, key bindings and other extensions\nmay
  be written by the user in config files. Layouts are applied\ndynamically, and different
  layouts may be used on each\nworkspace. Xinerama is fully supported, allowing windows
  to be tiled\non several physical screens.\n\n## Quick Start\n\n  * From hackage:\n\n
  \       cabal update\n        cabal install xmonad xmonad-contrib\n\n  * Alternatively,
  build from source using the following repositories:\n\n    - <https://github.com/xmonad/xmonad>\n\n
  \   - <https://github.com/xmonad/xmonad-contrib>\n\nFor the full story, read on.\n\n##
  Building\n\nBuilding is quite straightforward, and requires a basic Haskell toolchain.\nOn
  many systems xmonad is available as a binary package in your\npackage system (e.g.
  on Debian or Gentoo). If at all possible, use this\nin preference to a source build,
  as the dependency resolution will be\nsimpler.\n\nWe'll now walk through the complete
  list of toolchain dependencies.\n\n  * GHC: the Glasgow Haskell Compiler\n\n    You
  first need a Haskell compiler. Your distribution's package\n    system will have
  binaries of GHC (the Glasgow Haskell Compiler),\n    the compiler we use, so install
  that first. If your operating\n    system's package system doesn't provide a binary
  version of GHC\n    and the `cabal-install` tool, you can install both using the\n
  \   [Haskell Platform][platform].\n\n    It shouldn't be necessary to compile GHC
  from source -- every common\n    system has a pre-build binary version.  However,
  if you want to\n    build from source, the following links will be helpful:\n\n
  \     - GHC: <http://haskell.org/ghc/>\n\n      - Cabal: <http://haskell.org/cabal/download.html>\n\n
  \ * X11 libraries:\n\n    Since you're building an X application, you'll need the
  C X11\n    library headers. On many platforms, these come pre-installed. For\n    others,
  such as Debian, you can get them from your package manager:\n\n        # for xmonad\n
  \       $ apt-get install libx11-dev libxinerama-dev libxext-dev libxrandr-dev libxss-dev\n\n
  \       # for xmonad-contrib\n        $ apt-get install libxft-dev\n\nThen build
  and install with:\n\n    $ cabal install\n\n## Running xmonad\n\nIf you built XMonad
  using `cabal` then add:\n\n    exec $HOME/.cabal/bin/xmonad\n\nto the last line
  of your `.xsession` or `.xinitrc` file.\n\n## Configuring\n\nSee the [CONFIG][]
  document and the [example configuration file][example-config].\n\n## XMonadContrib\n\nThere
  are many extensions to xmonad available in the XMonadContrib\n(xmc) library. Examples
  include an ion3-like tabbed layout, a\nprompt/program launcher, and various other
  useful modules.\nXMonadContrib is available at:\n\n  * Latest release: <http://hackage.haskell.org/package/xmonad-contrib>\n\n
  \ * Git version: <https://github.com/xmonad/xmonad-contrib>\n\n## Other Useful Programs\n\nA
  nicer xterm replacement, that supports resizing better:\n\n  * urxvt: <http://software.schmorp.de/pkg/rxvt-unicode.html>\n\nFor
  custom status bars:\n\n  * xmobar: <http://hackage.haskell.org/package/xmobar>\n\n
  \ * taffybar: <https://github.com/travitch/taffybar>\n\n  * dzen: <http://gotmor.googlepages.com/dzen>\n\nFor
  a program dispatch menu:\n\n  * [XMonad.Prompt.Shell][xmc-prompt-shell]: (from [XMonadContrib][])\n\n
  \ * dmenu: <http://www.suckless.org/download/>\n\n  * gmrun: (in your package system)\n\n##
  Authors\n\n  * Spencer Janssen\n  * Don Stewart\n  * Jason Creighton\n\n[xmonad]:
  http://xmonad.org\n[xmonadcontrib]: https://hackage.haskell.org/package/xmonad-contrib\n[xmc-prompt-shell]:
  https://hackage.haskell.org/package/xmonad-contrib/docs/XMonad-Prompt-Shell.html\n[platform]:
  http://haskell.org/platform/\n[example-config]: https://github.com/xmonad/xmonad-testing/blob/master/example-config.hs\n[config]:
  https://github.com/xmonad/xmonad/blob/master/CONFIG\n"
license-name: BSD3
