homepage: https://github.com/jasonsychau/graphql-w-persistent
changelog-type: markdown
hash: 85625ffaf24fee14aa661bb0ececdb14d9e3e3be25e97635565dc9d3c02fa967
test-bench-deps: {}
maintainer: jasonsychau@live.ca
synopsis: GraphQL interface middleware for SQL databases.
changelog: |-
  # Revision history for graphql-w-persistent

  ## 0.9.1.0 -- 2020-09-17

  * Fixed bug in getting all data from aggregate queries, now merging nested objects

  ## 0.9.0.0 -- 2020-06-01

  * Null values are now supported; table are now supported to appear more than once in joins; data types are simplified for .json file support; alternative json aggregate SQL query functions are now supported for faster queries; error is fixed from version 0.8.0.0 for more than two nested objects; inline fragments were not working in version 0.8.0.0, but it is now working; and removed a requirement for "Unexpected nulls" for null values which is making easy compliance with other databases packages and types.

  ## 0.8.0.0 -- 2019-12-28

  * reduce space footprint by querying objects individually and only once per reference

  ## 0.7.0.1 -- 2019-12-28

  * fix exceptions

  ## 0.7.0.0 -- 2019-11-16

  * fix comma and tab problems in query, allow personalized unique ids, and allow per-object nested-object field names

  ## 0.6.0.0 -- 2019-08-31

  * reduce computations, fix bug on variables to parent object arguments, fix bug when querying parental objects, add scalar argument feature

  ## 0.5.0.0 -- 2019-08-08

  * update join to maximize data retrieval, add meta-fields, fix a problem with subsequent nested object fields

  ## 0.4.0.0 -- 2019-06-17

  * add inline fragments and comment lines

  ## 0.3.2.1 -- 2019-05-18

  * fix variables bug (now supporting multiple variables), database query bug (translating correctly nested objects), fragments bug (within variables are now supported), and added include and skip directives support

  ## 0.3.1.2 -- 2019-04-21

  * bug fix: nested objects are now supporting filters on attribute

  ## 0.3.1.1 -- 2018-11-07

  * bug fix: processing sql data was incorrect from object to nested object with generalized database entities, though this is now fixed.

  ## 0.3.1.0 -- 2018-11-07

  * Give thrown exceptions

  ## 0.3.0.0 -- 2018-11-06

  * Bug-fix to reenable relationship queries and casting returned values with Int, Rationals/Decimals, and Doubles...api change is arguments change to processing data function

  ## 0.2.0.1 -- 2018-11-05

  * Fix to accept empty variable arguments and default values

  ## 0.2.0.0 -- 2018-11-05

  * Variables are available...api change is schema changes

  ## 0.1.0.7 -- 2018-10-26 [stable release]

  * Json file schema

  ## 0.1.0.6 -- 2018-10-24

  * Revise documentation

  ## 0.1.0.5 -- 2018-10-22

  * Add duplicated queries feature

  ## 0.1.0.4 -- 2018-10-19

  * Fix type heirarchies and arguments

  ## 0.1.0.3 -- 2018-10-18

  * Revise documentation and Bug fix

  ## 0.1.0.2 -- 2018-10-18

  * Bug fixes

  ## 0.1.0.1 -- 2018-10-18

  * Added documentation

  ## 0.1.0.0 -- 2018-10-18

  * First version. Released on an unsuspecting world.
basic-deps:
  base: '>=4.10.1.0 && <4.14'
  text: '>=1.2 && <1.3'
  json: '>=0.9.1 && <0.11'
  containers: '>=0.5 && <0.7'
all-versions:
- 0.7.0.1
- 0.9.1.0
author: JASON CHAU
latest: 0.9.1.0
description-type: haddock
description: This is an application of GraphQL to querying SQL databases. The package
  functions are to interpret GraphQL string queries, to make SQL queries, and to process
  list-style database-returned values into a GraphQL string output (which you may
  use with another program). The data processing functions are designed for the Persistent
  library return values, but any (Eq a) => [[a]] returned type is valid input to this
  library if translations (and a check for null value) are provided for data types
  (Text, Int64, Double, and Boolean). Prospect packages are the odbc package (with
  the query function) and HDBC package (with the quickQuery function). You may find
  another to suit your stack. Examples and applications are available at the homepage
  (GitHub). I would like a star while you are there.
license-name: ISC
