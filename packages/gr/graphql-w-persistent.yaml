homepage: https://github.com/jasonsychau/graphql-w-persistent
changelog-type: markdown
hash: 6b4786b64f2db2110cf2c51b20c84b1aab2cc6ae3b0e1c8a1ef1b3c49bebfc4b
test-bench-deps: {}
maintainer: jasonsychau@live.ca
synopsis: Haskell GraphQL query parser-interpreter-data processor.
changelog: ! "# Revision history for graphql-w-persistent\r\n\r\n## 0.1.0.0 -- 2018-10-18\r\n\r\n*
  First version. Released on an unsuspecting world.\r\n\r\n## 0.1.0.1 -- 2018-10-18\r\n\r\n*
  Added documentation\r\n\r\n## 0.1.0.2 -- 2018-10-18\r\n\r\n* Bug fixes\r\n\r\n##
  0.1.0.3 -- 2018-10-18\r\n\r\n* Revise documentation and Bug fix\r\n\r\n## 0.1.0.4
  -- 2018-10-19\r\n\r\n* Fix type heirarchies and arguments\r\n\r\n## 0.1.0.5 -- 2018-10-22\r\n\r\n*
  Add duplicated queries feature\r\n\r\n## 0.1.0.6 -- 2018-10-24\r\n\r\n* Revise documentation\r\n\r\n##
  0.1.0.7 -- 2018-10-26 [stable release]\r\n\r\n* Json file schema\r\n\r\n## 0.2.0.0
  -- 2018-11-05\r\n\r\n* Variables are available...api change is schema changes\r\n\r\n##
  0.2.0.1 -- 2018-11-05\r\n\r\n* Fix to accept empty variable arguments and default
  values\r\n\r\n## 0.3.0.0 -- 2018-11-06\r\n\r\n* Bug-fix to reenable relationship
  queries and casting returned values with Int, Rationals/Decimals, and Doubles...api
  change is arguments change to processing data function\r\n\r\n## 0.3.1.0 -- 2018-11-07\r\n\r\n*
  Give thrown exceptions\r\n\r\n## 0.3.1.1 -- 2018-11-07\r\n\r\n* bug fix: processing
  sql data was incorrect from object to nested object with generalized database entities,
  though this is now fixed."
basic-deps:
  base: ! '>=4.11 && <4.12'
  text: ! '>=1.2.3.0 && <1.3'
  json: ! '>=0.9.2 && <0.10'
  containers: ! '>=0.5.11 && <0.6'
all-versions:
- '0.3.1.1'
author: JASON CHAU
latest: '0.3.1.1'
description-type: haddock
description: This is a general purpose Haskell GraphQL query parser and interpreter.
  It is including data processing to return GraphQL object formats. The query parser
  and interpreter are universal (on available database query types which is only SQL
  for now). It is accepting any string query, and it is returning a list of string
  database-queries. The data processing unit is designed around the return values
  from the Yesod and Persistent interface (cast as Text data values from PersistValue).
  With another server that is same data representation on the returned values from
  the database, this entire package is applicable. To read more detailed information,
  you should go to the below module page.
license-name: ISC
