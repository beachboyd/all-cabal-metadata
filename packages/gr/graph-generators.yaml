homepage: https://github.com/ulikoehler/graph-random
changelog-type: text
hash: aeb7f26a29fe111d111168e89ffaa533c63aaf1809ecc8794123e3260636b463
test-bench-deps:
  mwc-random: -any
  Cabal: ! '>=1.9.2'
  base: -any
  hspec: -any
  containers: ! '>=0.3'
  fgl: -any
  multiset: ! '>=0.2'
  QuickCheck: -any
  hspec-expectations: -any
maintainer: ukoehler@techoverflow.net
synopsis: Functions for generating structured or random FGL graphs
changelog: ! '** 0.1.x


  0.1.3.0 --> 0.1.4.0

  ==============


  Removed self loops from WattsStrogatz graph model

  Credits to @shrutihiray


  0.1.2.0 --> 0.1.2.1

  ===============


  * Fix wrong haddock syntax leading to unused function docs


  0.1.1.0 --> 0.1.2.0

  ===============


  * More unit tests for completeGraph variants

  * More unit tests for regular graphs

  * New regular graphs: starGraph, wheelGraph, nullGraph

  * Rename lineGraph to pathGraph (incorrect naming)

  * Add notes about preconditions

  * Add correct copyright declarations

  * Fix several doc formatting issues



  0.1.0.0 --> 0.1.1.0

  ===============


  * Rename Data.Graph.Generators.Simple to Data.Graph.Generators.Regular

  * Add lineGraph

'
basic-deps:
  mwc-random: ! '>=0.10'
  base: ! '>=4.2.0.1 && <5.0'
  containers: ! '>=0.3'
  fgl: ! '>=5.0'
  multiset: ! '>=0.2'
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.3.0'
- '0.1.4.0'
author: Uli KÃ¶hler
latest: '0.1.4.0'
description-type: markdown
description: ! 'graph-generators

  ============


  A Haskell library for creating regular and random graphs in a graph-library agnostic
  way.


  Generate sample DOT files by using:


  ```bash

  cabal sandbox init

  cabal install --only-dependencies

  cabal exec runghc TestGen.hs # See output for location of graphs

  ```'
license-name: Apache-2.0
