homepage: ''
changelog-type: markdown
hash: ab264e12810e445527172042ab8410b876c840029b01f1f62b91aa4f787a9229
test-bench-deps:
  groundhog-th: -any
  bimap: -any
  bytestring: -any
  base: -any
  groundhog-sqlite: -any
  containers: -any
  tasty-quickcheck: -any
  groundhog: -any
  tasty-hunit: -any
  tasty: -any
  groundhog-converters: -any
  aeson: -any
maintainer: Scott Murphy <scottmurphy09@gmail.com>
synopsis: Extended Converter Library for groundhog embedded types
changelog: ! '# Revision history for groundhog-converters


  ## 0.0.0  -- YYYY-mm-dd


  * First version. Released on an unsuspecting world.

'
basic-deps:
  bimap: -any
  bytestring: -any
  base: ! '>=4 && <5'
  containers: -any
  aeson: -any
all-versions:
- 0.1.0
author: Scott Murphy <scottmurphy09@gmail.com>
latest: 0.1.0
description-type: markdown
description: ! "# groundhog-converters\nGroundhog allows a programmer to represent
  a haskell datatype by an equivalent type that is more suited for Database work.\ngroundhog-converters
  provides a selection of common converters that have proved useful.\n\n\n## Usage\n```
  haskell\n-- | Sample DataType 'Group' proviides a Map between an Integer and  a
  'Person'\n-- However, the person is embedded in the Datatype relative to the SQL
  database\n\ndata Group = Group {\n     _people :: Map Integer Person\n         }\n
  deriving (Eq)\n\n\n-- | A wrapped representation of a Person\ndata Person = Person
  { _unPerson :: String}\n  deriving (Eq)\n\ninstance Arbitrary Person where\n  arbitrary
  = Person <$> arbitrary\n\n-- | An Isomorphism between the representation that is
  pleasent to use in haskell\n-- and the one that makes sense to store i.e. 'PersistEntity'
  \npersonMapConverter :: Converter (Map Integer Person) [(Int64,String)]\npersonMapConverter
  = mapConverter `composeConverter` fmapConverter (bicomposeConverter integerConverter
  personConverter)\n\n-- | This converter is embedded in 'personMapConverter'\npersonConverter
  :: Converter Person String\npersonConverter = (_unPerson,Person)\n\n\n-- | A declaration
  for group.\nmkPersist defaultCodegenConfig [groundhog|\n- entity: Group\n  constructors:\n
  \ - name: Group\n    fields:\n      - name: _people\n        dbName: people\n        exprName:
  MappedIdToPerson\n        converter: personMapConverter\n- primitive: Person\n  converter:
  personConverter\n\n\n|]\n```\n\n\n## How to run tests\n\n```\ncabal configure --enable-tests
  && cabal build && cabal test\n```\n\n"
license-name: BSD-3-Clause
