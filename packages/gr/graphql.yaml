homepage: https://github.com/caraus-ecms/graphql#readme
changelog-type: markdown
hash: e2419f289d5dfa0a856e548e5ad682f09eb72835ba47a7469606a18141e0ef38
test-bench-deps:
  base: ! '>=4.7 && <5'
  hspec: ! '>=2.7.1 && <2.8'
  text: ! '>=1.2.3.1 && <1.3'
  megaparsec: ! '>=7.0.5 && <7.1'
  raw-strings-qq: ==1.1.*
  transformers: ! '>=0.5.6.2 && <0.6'
  aeson: ! '>=1.4.4.0 && <1.5'
  graphql: -any
  hspec-expectations: ! '>=0.8.2 && <0.9'
maintainer: belka@caraus.de
synopsis: Haskell GraphQL implementation
changelog: |
  # Change Log
  All notable changes to this project will be documented in this file.

  ## [0.5.0.0] - 2019-08-14
  ### Added
  - `executeWithName` executes an operation with the given name.
  - Export `Language.GraphQL.Encoder.definition`,
    `Language.GraphQL.Encoder.type'` and `Language.GraphQL.Encoder.directive`.
  - Export `Language.GraphQL.Encoder.value`. Escapes \ and " in strings now.

  ### Changed
  - `Operation` includes now possible operation name which allows to support
    documents with multiple operations.
  - `Language.GraphQL.Encoder.document` and other encoding functions take a
    `Formatter` as argument to distinguish between minified and pretty printing.
  - All encoder functions return `Data.Text.Lazy`.

  ### Removed
  - Unused `Language.GraphQL.Encoder.spaced`.

  ## [0.4.0.0] - 2019-07-23
  ### Added
  - Support for mutations.
  - Error handling (with monad transformers).
  - Nullable types.
  - Arbitrary nested lists support.
  - Potential BOM header parsing.

  ### Changed
  - attoparsec is replaced with megaparsec.
  - The library is now under `Language.GraphQL` (instead of `Data.GraphQL`).
  - HUnit and tasty are replaced with Hspec.
  - `Alternative`/`MonadPlus` resolver constraints are replaced with `MonadIO`.

  ### Removed
  - Duplicates from `Language.GraphQL.AST` already available in
    `Language.GraphQL.AST.Core`.
  - All module exports are now explicit, so private and help functions aren't
    exported anymore.

  ## [0.3] - 2015-09-22
  ### Changed
  - Exact match numeric types to spec.
  - Names follow now the spec.
  - AST slightly different for better readability or easier parsing.
  - Replace golden test for test to validate parsing/encoding.

  ### Added
  - Parsing errors in all cases where `Alternative` is used.
  - GraphQL encoder.

  ### Fixed
  - Expect braces `inputValueDefinitions` instead of parens when parsing.

  ## [0.2.1] - 2015-09-16
  ### Fixed
  - Include data files for golden tests in Cabal package.
  - Support for ghc-7.8.

  ## [0.2] - 2015-09-14
  ### Added
  - Rudimentary parser for `GraphQL` which successfully parses the sample file
    `kitchen-sink.graphql` from `graphql-js` tests.
  - Golden test for `kitchen-sink.grahql` parsing.
  ### Changed
  - Many optional data types in `GraphQl` didn't need to be wrapped in a `Maybe`.
  - Some `newtype`s became type synonyms for easier parsing.

  ## 0.1 - 2015-09-12
  ### Added
  - Data types for the GraphQL language.

  [0.5.0.0]: https://github.com/caraus-ecms/graphql/compare/v0.4.0.0...v0.5.0.0
  [0.4.0.0]: https://github.com/caraus-ecms/graphql/compare/v0.3...v0.4.0.0
  [0.3]: https://github.com/caraus-ecms/graphql/compare/v0.2.1...v0.3
  [0.2.1]: https://github.com/caraus-ecms/graphql/compare/v0.2...v0.2.1
  [0.2]: https://github.com/caraus-ecms/graphql/compare/v0.1...v0.2
basic-deps:
  base: ! '>=4.7 && <5'
  unordered-containers: ! '>=0.2.10.0 && <0.3'
  text: ! '>=1.2.3.1 && <1.3'
  megaparsec: ! '>=7.0.5 && <7.1'
  transformers: ! '>=0.5.6.2 && <0.6'
  aeson: ! '>=1.4.4.0 && <1.5'
all-versions:
- '0.1'
- '0.2'
- 0.2.1
- '0.3'
- 0.4.0.0
- 0.5.0.0
author: |-
  Danny Navarro <j@dannynavarro.net>,
  Matthías Páll Gissurarson <mpg@mpg.is>,
  Sólrún Halla Einarsdóttir <she@mpg.is>
latest: 0.5.0.0
description-type: markdown
description: |
  # Haskell GraphQL

  [![Hackage Version](https://img.shields.io/hackage/v/graphql.svg)](https://hackage.haskell.org/package/graphql)
  [![Build Status](https://semaphoreci.com/api/v1/belka-ew/graphql/branches/master/badge.svg)](https://semaphoreci.com/belka-ew/graphql)
  [![License](https://img.shields.io/badge/license-BSD--3--Clause-blue.svg)](https://raw.githubusercontent.com/caraus-ecms/graphql/master/LICENSE)

  GraphQL implementation in Haskell.

  This implementation is relatively low-level by design, it doesn't provide any
  mappings between the GraphQL types and Haskell's type system and avoids
  compile-time magic. It focuses on flexibility instead instead, so other
  solutions can be built on top of it.

  ## State of the work

  For now this only provides a parser and a printer for the GraphQL query
  language and allows to execute queries and mutations without the schema
  validation step. But the idea is to be a Haskell port of
  [`graphql-js`](https://github.com/graphql/graphql-js).

  For the list of currently missing features see issues marked as
  "[not implemented](https://github.com/caraus-ecms/graphql/labels/not%20implemented)".

  ## Documentation

  API documentation is available through
  [hackage](https://hackage.haskell.org/package/graphql).

  You'll also find a small tutorial with some examples under
  [docs/tutorial](https://github.com/caraus-ecms/graphql/tree/master/docs/tutorial).

  ## Contact

  Suggestions, contributions and bug reports are welcome.

  Should you have questions on usage, please open an issue and ask – this helps
  to write useful documentation.

  Feel free to contact on Slack in [#haskell on
  GraphQL](https://graphql.slack.com/messages/haskell/). You can obtain an
  invitation [here](https://graphql-slack.herokuapp.com/).
license-name: BSD-3-Clause
