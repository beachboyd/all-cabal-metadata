homepage: https://github.com/sboosali/s-expression#readme
changelog-type: ''
hash: 20cd2b0b5bb7da023be8151229ac7d2fdd4503b257533f4a12ae4bd1be4dd09e
test-bench-deps: {}
maintainer: samboosalis@gmail.com
synopsis: simple general-purpose s-expressions
changelog: ''
basic-deps:
  base: ! '>=4.8 && <5.0'
  semigroups: -any
  s-expression: -any
  lens: -any
  derive-monoid: ! '>=0.0.1'
all-versions:
- 0.0.0
author: Spiros Boosalis
latest: 0.0.0
description-type: haddock
description: ! 'this package provides general-purpose functionality for manipulating
  s-expressions. like:


  * a @Functor@ instance that transforms the atoms


  * a @Monad@ instance that "expands" atoms into s-expressions


  * a @Foldable@ instance that enumerates the atoms (leaves)


  * @IsList@ and @IsString@ instances for literal syntax


  *


  *


  *


  the core type is:


  @

  data <https://hackage.haskell.org/package/s-expression/docs//Data-Sexp.html Sexp>
  f a

  = Atom a

  | List   [Sexp f a]

  | Sexp f [Sexp f a]

  @


  which lets you provide your own custom function name that interprets its arguments.


  e.g. TODO


  for efficient parsing/printing, use:


  * https://hackage.haskell.org/package/sexp


  * https://hackage.haskell.org/package/atto-lisp

'
license-name: MIT
