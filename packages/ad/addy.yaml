homepage: https://github.com/pjones/addy
changelog-type: markdown
hash: 97de67dde1f21d7f4289e1a87317add086cfc2b14d29d07b64fdd0c2f75386b9
test-bench-deps:
  bytestring: '>=0.10 && <0.11'
  base: '>=4.9 && <5.0'
  tasty-hedgehog: '>=1.0 && <1.1'
  text: '>=1.2 && <1.3'
  addy: -any
  hedgehog: '>=1.0 && <1.1'
  ip: '>=1.5.1 && <1.8'
  lens: '>=4.17 && <5.0'
  validation-selective: '>=0.1 && <0.2'
  relude: '>=0.6 && <0.7'
  text-icu: '>=0.7 && <0.8'
  tasty-hunit: '>=0.10 && <0.11'
  attoparsec: '>=0.13 && <0.14'
  tasty: '>=1.1 && <1.3'
  http-types: '>=0.12'
  aeson: '>=1.4'
maintainer: Peter Jones <pjones@devalot.com>
synopsis: A full-featured library for parsing, validating, and rendering email addresses
changelog: |
  Release History
  ===============

  [0.1.0] - 2020-05-08
  --------------------

    * Initial release
basic-deps:
  bytestring: '>=0.10 && <0.11'
  base: '>=4.9 && <5.0'
  text: '>=1.2 && <1.3'
  ip: '>=1.5.1 && <1.8'
  lens: '>=4.17 && <5.0'
  validation-selective: '>=0.1 && <0.2'
  relude: '>=0.6 && <0.7'
  text-icu: '>=0.7 && <0.8'
  attoparsec: '>=0.13 && <0.14'
all-versions:
- 0.1.0.0
author: Peter Jones <pjones@devalot.com>
latest: 0.1.0.0
description-type: markdown
description: |
  Addy: a modern library for working with email addresses
  =======================================================

  [![addy](https://circleci.com/gh/pjones/addy.svg?style=shield)](https://app.circleci.com/github/pjones/addy/pipelines)
  [![Hackage](https://img.shields.io/hackage/v/addy?logo=haskell)](https://hackage.haskell.org/package/addy)
  [![GitHub](https://img.shields.io/github/license/pjones/addy)](https://github.com/pjones/addy/blob/master/LICENSE)

  A full-featured library for parsing, validating, and rendering email
  addresses.

  Decoding
  --------

  ```haskell
  Addy.decode "example@example.com"
  -- Right (EmailAddr "example@example.com")

  Addy.decode "我買@屋企.香港"
  -- Right (EmailAddr "\25105\36023@\23627\20225.\39321\28207")

  Addy.decode "Mary Smith <mary@example.net> (hi there!)"
  -- Right (EmailAddr "Mary Smith <mary@example.net> (hi there!)")

  Addy.decode "example@[127.0.0.1]"
  -- Right (EmailAddr "example@[127.0.0.1]")
  ```

  Encoding
  --------

  ```haskell
  Addy.encode address
  -- "example@example.com"

  Addy.decode "Mary Smith <mary@example.net> (hi there!)"
    & second Addy.encodeFull
  -- Right "Mary Smith <mary@example.net> (hi there!)"
  ```
license-name: BSD-2-Clause
