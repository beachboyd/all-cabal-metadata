homepage: https://github.com/pjones/addy
changelog-type: markdown
hash: abaa5180778d619d5b9cfb083c2720ae8166a340aca4c897677a317cf91e7e4f
test-bench-deps:
  bytestring: '>=0.10 && <0.12'
  base: '>=4.9 && <5.0'
  tasty-hedgehog: ^>=1.0
  text: ^>=1.2
  addy: -any
  hedgehog: ^>=1.0
  ip: '>=1.5.1 && <1.8'
  lens: '>=4.17 && <5.0'
  validation-selective: ^>=0.1
  relude: '>=0.6 && <0.8'
  text-icu: ^>=0.7
  tasty-hunit: ^>=0.10
  attoparsec: ^>=0.13
  tasty: '>=1.1 && <1.5'
  http-types: '>=0.12'
  aeson: '>=1.4'
maintainer: Peter Jones <pjones@devalot.com>
synopsis: A full-featured library for parsing, validating, and rendering email addresses
changelog: |
  # Release History

  ## 0.1 (May 8, 2020)

    * Initial release

    * Minor updates:

      - 0.1.0.1 (October 29, 2020): Update dependencies
basic-deps:
  bytestring: '>=0.10 && <0.12'
  base: '>=4.9 && <5.0'
  text: ^>=1.2
  ip: '>=1.5.1 && <1.8'
  lens: '>=4.17 && <5.0'
  validation-selective: ^>=0.1
  relude: '>=0.6 && <0.8'
  text-icu: ^>=0.7
  attoparsec: ^>=0.13
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Peter Jones <pjones@devalot.com>
latest: 0.1.0.1
description-type: markdown
description: |
  Addy: a modern library for working with email addresses
  =======================================================
  [![CI](https://github.com/pjones/addy/workflows/CI/badge.svg)](https://github.com/pjones/addy/actions)
  [![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/pjones/addy?label=release)](https://github.com/pjones/addy/releases)
  [![Hackage](https://img.shields.io/hackage/v/addy?logo=haskell)](https://hackage.haskell.org/package/addy)
  [![GitHub](https://img.shields.io/github/license/pjones/addy)](https://github.com/pjones/addy/blob/master/LICENSE)

  A full-featured library for parsing, validating, and rendering email
  addresses.

  Decoding
  --------

  ```haskell
  Addy.decode "example@example.com"
  -- Right (EmailAddr "example@example.com")

  Addy.decode "我買@屋企.香港"
  -- Right (EmailAddr "\25105\36023@\23627\20225.\39321\28207")

  Addy.decode "Mary Smith <mary@example.net> (hi there!)"
  -- Right (EmailAddr "Mary Smith <mary@example.net> (hi there!)")

  Addy.decode "example@[127.0.0.1]"
  -- Right (EmailAddr "example@[127.0.0.1]")
  ```

  Encoding
  --------

  ```haskell
  Addy.encode address
  -- "example@example.com"

  Addy.decode "Mary Smith <mary@example.net> (hi there!)"
    & second Addy.encodeFull
  -- Right "Mary Smith <mary@example.net> (hi there!)"
  ```
license-name: BSD-2-Clause
