homepage: http://istitutocolli.org/repos/citeproc-hs/
changelog-type: ''
hash: 770a1c3c4be2a1916b7eb994ab038d594d9ddcb83c08a432f655c92a29e611a4
test-bench-deps: {}
maintainer: andrea.rossato@unitn.it
synopsis: A Citation Style Language implementation in Haskell
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4'
  time: -any
  json: -any
  hs-bibutils: ! '>=0.3'
  syb: -any
  filepath: -any
  network: ! '>=2.6'
  parsec: -any
  pandoc-types: ! '>=1.8 && <1.13'
  containers: -any
  utf8-string: -any
  old-locale: -any
  network-uri: ! '>=2.6'
  mtl: -any
  HTTP: ! '>=4000.0.9'
  hexpat: ! '>=0.20.2'
  directory: -any
all-versions:
- '0.1'
- '0.2'
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.4
- 0.3.5
- 0.3.6
- 0.3.7
- 0.3.8
- 0.3.9
- 0.3.10
author: Andrea Rossato
latest: 0.3.10
description-type: text
description: ! "% citeproc-hs - A Haskell Implementation of the Citation Style Language\n%
  Andrea Rossato\n\nAbout\n-----\n\n[citeproc-hs] is a [Haskell] implementation of
  the Citation Style\nLanguage ([CSL]).\n\n[citeproc-hs] adds to [pandoc], the famous
  [Haskell] text processing\ntool, a Bibtex like citation and bibliographic formatting
  and\ngeneration facility.\n\n[CSL] is an XML language for specifying citation and
  bibliographic\nformatting, similar in principle to BibTeX `.bst` files or the binary\nstyle
  files in commercial products like Endnote or Reference Manager.\n\n[CSL] is used
  by [Zotero] for bibliographic style formatting, and the\nhuge number of [CSL] styles
  developed by the [Zotero] community can\ncan be downloaded from here:\n\n<http://www.zotero.org/styles>\n\nThere
  are plans to use CSL for adding bibliographic support to future\nreleases of [OpenOffice](http://bibliographic.openoffice.org/).\n\n[citeproc-hs]
  can process and format citations according to a [CSL]\nstyle, given a collection
  of references.\n\nNatively [citeproc-hs] can read [JSON][^1] and [MODS][^2] XML\nformatted
  bibliographic databases.\n\n[bibutils] can be used to convert Bibtex and other bibliographic\ndatabases
  to [MODS] collections, which can be thus read by\n[citeproc-hs].\n\n[bibutils] also
  exports a library and this library can be used by\n[citeproc-hs] for reading the
  most widely used bibliographic\ndatabases. This requires the installation of [hs-bibutils],
  the\nHaskell bindings to [bibutils].\n\n[citeproc-hs] is a library that exports
  functions to parse [CSL]\nstyles and [MODS] collections, to process lists of citation
  groups and\nto format the processed output. The output is a Haskell data type that\ncan
  be further processed for conversion to any kind of formats (at the\npresent time
  plain ASCII and the [pandoc] native format)\n\nDownload\n--------\n\n[citeproc-hs]
  can be downloaded from [Hackage]:\n\n<http://hackage.haskell.org/package/citeproc-hs>\n\nTo
  get the darcs source run:\n\n        darcs get http://gorgias.mine.nu/repos/citeproc-hs/\n\nInstallation\n------------\n\n[citeproc-hs]
  depends on a few Haskell packages. Most of them come\nwith the [Haskell Platform]
  and are usually included in every Haskell\ntool-chain.\n\nIn order to install [citeproc-hs]
  you need to install its\ndependencies. You can choose to manually download and install\neverything
  from [Hackage]:\n\n<http://hackage.haskell.org/cgi-bin/hackage-scripts/package/hxt>\n\nEvery
  package downloaded form [Hackage] can be installed with these\nsimple commands:\n\n
  \       runhaskell Setup.lhs configure\n        runhaskell Setup.lhs build\n        runhaskell
  Setup.lhs install\n\nThis last step requires `root` privileges.\n\nIf you don't
  have `root` privileges you can install citeproc-hs and\n*all* its dependencies locally
  with these commands:\n\n        runhaskell Setup.lhs configure --user --prefix=$HOME\n
  \       runhaskell Setup.lhs build\n        runhaskell Setup.lhs install --user\n\nAlternatively
  you can use [cabal-install] to install [citeproc-hs] and\nall the needed dependencies:\n\n
  \       cabal update\n        cabal install citeproc-hs\n\n\n### Installing without
  bibutils or network support\n\n[bibutils] and network support may be suppressed
  with cabal flags:\n\n\n        runhaskell Setup.lhs configure -f'-bibutils'\n\nor\n\n
  \       runhaskell Setup.lhs configure -f'-bibutils -network'\n\nand then build
  and install with:\n\n        runhaskell Setup.lhs build\n        runhaskell Setup.lhs
  install\n\nIt is possible to pass the flags also too [cabal-install].\n\n### Installing
  with ICU support\n\nSorting Unicode strings containing non ASCII characters is not\nsupported
  by the standard Haskell libraries and requires the\ninstallation of the ICU libraries,
  available here:\n\n\n        http://site.icu-project.org/\n\n\nIt is then necessary
  to install the Haskell bindings to these\nlibraries. These bindings are available
  here:\n\n\n        http://hackage.haskell.org/package/text-icu\n\n\nYou then need
  to configure the citeproc-hs package with the\nappropriate cabal flag:\n\n\n        runhaskell
  Setup.lhs configure -funicode_collation\n\n\nand then build as usual.\n\nIt is possible
  to pass the flags also too [cabal-install]. In this\ncase the installation of the
  ICU libraries is the only prerequisite.\n\n\nUsing citeproc-hs with Pandoc\n-----------------------------\n\nFuture
  releases of [pandoc] will depend on [citeproc-hs] and no\nspecific step will be
  required to activate citeproc support.\n\nPlease refer to [pandoc]'s documentation
  for more information on\ninserting citations in [pandoc]'s documents.\n\n\nDocumentation\n-------------\n\n[Haddock]
  documentation for the exported API is available on\n[Hackage]:\n\n<http://hackage.haskell.org/package/citeproc-hs>\n\n###
  Name parsing\n\nThe [MODS] parser has been optimized for bibtex input, especially
  for\nparsing names with affixes , dropping and non-dropping particles.\n\nSuffixes
  should come after the family name:\n\n        Brown, Jr., John W.\n\nIf a comma
  is needed before the suffix, an exclamation mark may be\nused:\n\n        Brown,!
  Jr., John W.\n\nNon-dropping particles are placed before the family name:\n\n        von
  Hicks,! Jr., Michael\n\nDropping particles are placed after the given name:\n\n
  \       la Martine,! III, Martin B. de\n\nSee also the [CSL] specification:\n\n<http://citationstyles.org/downloads/specification.html#name-particles>\n\n###
  Date parsing\n\nThe [MODS] parser, which is used to read all bibliograhic databases\nsupported
  by [bibutils], tries to parse dates, including seasons\n(expressed in English).
  An example of supported formats:\n\n    2010-01-31   (January 31, 2010)\n\n    2004-05
  \     (May, 2004)\n\n    2001         (the year only)\n\n    Summer, 2001 (the season)\n\n###
  The DOI variable\n\nIf the DOI variable is prefixed by a `doi:` like:\n\n        doi
  = {doi:10.1038/171737a0}\n\nthe processor will generate a link and produce this
  pandoc native\nrepresentation:\n\n       Link [Str \"10.1038/171737a0\"] (\"http://dx.doi.org/10.1038/171737a0\",
  \"10.1038/171737a0\")\n\nthat produces a link like:\n\n       <a href=\"http://dx.doi.org/10.1038/171737a0\">10.1038/171737a0</a>\n\n###
  Running the test-suite\n\nTo run the test suite, you first need to grab it with
  [mercurial] by\nrunning, from the root directory of the [citeproc-hs] source tree:\n\n
  \       hg clone https://bitbucket.org/bdarcus/citeproc-test\n\nYou then need to
  grind human-readable test code into machine-readable\nform by running, in the citeproc-test
  directory, the following\ncommands:\n\n        cd citeproc-test\n        ./processor.py
  -g\n        cd ..\n\nThen, from the root directory of citeproc-hs source tree, run:\n\n
  \       runhaskell test/test.hs\n\nYou may also specify a test group:\n\n        runhaskell
  test/test.hs date\n\nor a single test in a group:\n\n        runhaskell test/test.hs
  date IgnoreNonexistentSort\n\n\nTo increase the debug messages edit *test/test.hs*
  and increase the\n*Int* parameter of *runTS*:\n\n        runTS args 1 testDir\n\nKnown
  Issues\n------------\n\nThe [CSL] implementation is mostly but not entirely complete.
  Some of\nthe missing features are meaningless in [pandoc], the main target of\n[citeproc-hs]
  at the present time. Specifically the [display]\nattribute has not been implemented
  yet.\n\nThe [citeproc-hs]-0.3.9 release passes 586 out of 757 tests of the\n[citeproc-test]
  suite. The test-suite has been developed along with\n[citeproc-js], and the failure
  of some of those tests is not\nmeaningful for [citeproc-hs].\n\nThe [MODS] parser
  may need some refinement.\n\nBug Reports\n-----------\n\nTo submit bug reports you
  can use the Google code bug tracking system\navailable at the following address:\n\n<http://code.google.com/p/citeproc-hs/issues>\n\nCredits\n-------\n\n[Bruce
  D'Arcus], the man behind [CSL], Rintze Zelle, one of the main\n[CSL] developer,
  and [Frank Bennett], the [citeproc-js] author, have\nbeen very kind and provided
  ideas, comments and suggestions that made\nit easier coding citeproc-hs.\n\n[John
  MacFarlane], the author of [pandoc], has been very supportive of\nthe project and
  provided a lot of useful feed back, comments and\nsuggestions.\n\nAuthor\n------\n\nAndrea
  Rossato\n\n`andrea.rossato at unitn.it`\n\nLinks to Related Projects\n----------------\n\nCSL\n:
  \   <http://xbiblio.sourceforge.net/csl/>\n\nciteproc-js\n:    <https://bitbucket.org/fbennett/citeproc-js/wiki/Home>\n\nciteproc-test\n:
  \   <http://bitbucket.org/bdarcus/citeproc-test>\n\nZotero\n:    <http://www.zotero.org>\n\nPandoc\n:
  \   <http://johnmacfarlane.net/pandoc/>\n\nBibutils\n:    <http://www.scripps.edu/~cdputnam/software/bibutils/>\n\nMODS\n:
  \   <http://www.loc.gov/mods/>\n\nLegal\n-----\n\nThis software is released under
  a BSD-style license. See LICENSE for\nmore details.\n\nThis is an early, \"alpha\"
  release. It carries no warranties of any kind.\n\nCopyright &copy; 2008--2012 Andrea
  Rossato\n\n[^1]: The [JSON] format is basically documented by citeproc\n      implementations
  and is derived by the [CSL] scheme. More\n      information can be read in the [citeproc-js]
  documentation:\n\n      <http://gsl-nagoya-u.net/http/pub/citeproc-doc.html#data-input>\n\n[^2]:
  The Metadata Object Description Schema ([MODS]) is an XML format\n      which is
  used by [bibutils] to interconvert many different\n      bibliographic database
  formats, like Bibtex, Endnote, and\n      others.\n\n[citeproc-hs]: http://code.haskell.org/citeproc-hs\n[citeproc-js]:
  https://bitbucket.org/fbennett/citeproc-js/wiki/Home\n[CSL]: http://citationstyles.org/\n[pandoc]:
  http://johnmacfarlane.net/pandoc/\n[Zotero]: http://www.zotero.org\n[JSON]: http://www.json.org/\n[MODS]:
  http://www.loc.gov/mods/\n[bibutils]: http://www.scripps.edu/~cdputnam/software/bibutils/\n[hs-bibutils]:
  http://code.haskell.org/hs-bibutils/\n[Haskell Platform]: http://hackage.haskell.org/platform/\n[Hackage]:
  http://hackage.haskell.org/cgi-bin/hackage-scripts/package/citeproc-hs\n[cabal-install]:
  http://hackage.haskell.org/trac/hackage/wiki/CabalInstall\n[Bruce D'Arcus]: http://community.muohio.edu/blogs/darcusb/\n[John
  MacFarlane]: http://johnmacfarlane.net/\n[Haddock]:  http://www.haskell.org/haddock/\n[display]:
  http://citationstyles.org/downloads/specification.html#display\n[citeproc-test]:
  http://bitbucket.org/bdarcus/citeproc-test/\n[Frank Bennett]: http://gsl-nagoya-u.net/faculty/cache/gsliF_Bennett.html\n[mercurial]:
  http://mercurial.selenic.com/\n[Haskell]: http://www.haskell.org\n"
license-name: BSD-3-Clause
