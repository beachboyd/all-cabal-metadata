homepage: ''
changelog-type: ''
hash: dab81a9f435b852745161086900a5b6febb403c3fc17220dc2714479809e4b27
test-bench-deps: {}
maintainer: peteg42@gmail.com
synopsis: Testing By Convention
changelog: ''
basic-deps:
  unix: -any
  Cabal: ! '>=1.10 && <2'
  base: ==4.*
  filepath: -any
  process: -any
  deepseq: -any
  directory: -any
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
author: Peter Gammie, Mark Wotton
latest: 0.0.3
description-type: text
description: ! "= TBC: Test by Convention =\n\nTBC provides two features:\n\n- It
  attempts to compile and run all tests, even if some do not\n  compile or run.\n-
  Aspiring to the write-it-once principle, tests following\n  conventions require
  a lot less boilerplate.\n\nInspired by test-based development, our aim is not to
  displace\nexisting tools such as QuickCheck and HUnit but to make a project's\ntests
  more useful when things are in an inconsistent state. TBC is\nalso useful for supporting
  'what-if' experiments, aiding program\ncomprehension.\n\nTBC is presently alpha.
  It has proven useful to the authors but is\nembryonic in many ways.\n\nThe directory
  'Sample/' contains a sample project following TBC\nconventions. We suggest running
  'tbc' in that directory as a quick way\nof understanding what it can do.\n\n== Conventions
  ==\n\nTests live in $PROJECT/Tests. Test-specific hierarchical modules can\nalso
  exist there.\n\nWithin a test file, lines beginning with _ should _ when evaluated:\n\n\"exception_\"
  / throw an exception.\n\"hunit_\" / be HUnit tests: TBC applies \"runTestTT . test\"
  to them.\n\"ok_\" / not throw an exception.\n\"prop_\" / be QuickCheck tests: TBC
  applies \"Test.QuickCheck.quickCheck\" to them.\n\"test_\" / be boolean tests (of
  type Bool or IO Bool or IO () with a\nprint statement or ...): TBC runs them and
  expects the final line of\noutput to be \"True\".\n\nThe tests themselves must ensure
  the test framework (QuickCheck, etc.)\nis in scope, i.e. be executable as they are
  in GHCi.\n\nThe 'tbc' executable will search upwards for a '.cabal' file and\nassumes
  the 'dist/' directory is in the same place.\n\n== Invocation ==\n\nThere are two
  ways to use TBC:\n\n- as a Cabal 'test' hook. This is not recommended as packages
  that do\n  this cannot be uploaded to hackage. Perhaps changes in Cabal will\n  make
  this more useful.\n\n- invoking the 'tbc' executable.\n\nThe 'tbc' executable will
  search upwards in the directory hierarchy\nfor a .cabal file, and then go looking
  for tests in the current\ndirectory and its children.\n\nPresently it is best to
  run 'tbc' in the directory containing the\ntests (or a subdirectory of it).\n\nThe
  Sample/ directory contains a sample project. After installing TBC:\n\n$ cd Sample\n$
  runghc Setup configure\n$ tbc\n$ cd Tests\n$ tbc\n\n== Gotchas ==\n\nSay:\n\ntbc
  -v\n\nfor a verbose session.\n\nIt seems that the parts of Cabal that TBC depends
  on change\nfrequently. TBC has only been tested with Cabal-1.10.1.0 in the\nHaskell
  Platform 2011.2.0.1.\n\nIt is probably not difficult to make it work with other
  Cabals. Mostly\nthis involves copying out the guts of some of the Cabal modules.\n\nConventions
  must retain the full name of the test, otherwise we run\ninto some nasty lexical
  issues, e.g. to avoid:\n\nhunit_prop_blah =tName equals= prop_blah\n\nWe only support
  GHCi on *NIX (including OS X) presently.\n\nThis:\n\n$ tbc\n>> GHCi died. Output
  <<\nGHCi, version 7.0.3: http://www.haskell.org/ghc/  :? for help\nTBC: fd:4: hFlush:
  resource vanished (Broken pipe)\n\nprobably means that you need to reconfigure your
  project as one of\nlibraries it depends on has a different hash but not a new version\nnumber.
  (For example, Cabal calls QuickCheck-2.4.0.1 the\noverly-specific QuickCheck-2.4.0.1-5898cfb0116fc1d6ecef04b3f053c323.)\n\n==
  Changes ==\n\n0.0.1\n  Initial release\n0.0.2\n  The tbc binary exits with status
  1 if anything goes wrong, 0 otherwise\n  Fixed GHCi scoping issue (say \":l *filename\"
  instead of \":l filename\" - perhaps new with GHC 7.\n  Andy Morris: support for
  Bird tracks\n  Works with the Haskell Platform 2011.2.0.1\n   - GHC 7.0.3\n   -
  QuickCheck 2\n"
license-name: BSD-3-Clause
