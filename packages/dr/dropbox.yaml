homepage: https://github.com/riskbook/dropbox-client#readme
changelog-type: markdown
hash: fae40319370ab9620083b45b79a0c8bdd0f3bd9101dfcb2196d6b7c0e0a30b6f
test-bench-deps:
  base: '>=4.7 && <4.15.0'
  servant-client: <0.19
  hspec: -any
  text: -any
  servant-auth-client: -any
  http-api-data: -any
  hspec-core: -any
  servant-client-core: -any
  servant: -any
  dropbox: -any
  servant-auth: -any
  http-client-tls: -any
  aeson-qq: -any
  aeson: -any
maintainer: support@riskbook.com
synopsis: Dropbox API client
changelog: "# Change log for dropbox \n\n## Version 0.0.3\n\n+ Expose token body and
  token response.\n  Api is unusable without these\n+ Add upper restrictions on ghc
  and servant\n\n\n## Version 0.0.2\n\nFix github links on hackage\n\n## Version 0.0.1
  \n\nFix haddock issue\n\n## Version 0.0.0 \n\n+ Add suppport for\n  + list folder
  (see what is in a users folder)\n  + get temporary link (download file support)\n
  \ + dropbox token (allow us to get access to a users dropbox)\n+ Add basic encoding/decoding
  tests for datatypes from dropbox api docs\n+ import [template](https://github.com/jappeace/haskell-template-project).\n\n"
basic-deps:
  base: '>=4.7 && <4.15.0'
  servant-client: <0.19
  text: -any
  servant-auth-client: -any
  http-api-data: -any
  servant-client-core: -any
  servant: -any
  dropbox: -any
  servant-auth: -any
  http-client-tls: -any
  aeson: -any
all-versions:
- 0.0.0
- 0.0.1
- 0.0.2
- 0.0.3
author: Riskbook
latest: 0.0.3
description-type: markdown
description: |
  [![Githbu actions build status](https://img.shields.io/github/workflow/status/jappeace/haskell-template-project/Test)](https://github.com/riskbook/dropbox-client/actions)

  > It doesn't actually replace a USB drive.
  >
  > \- BrandomM on hacker news, commenting on the dropbox idea, 2007

  This is an incomplete dropbox API client derived from a servant
  generic type definition.
  Additional endpoints are welcome, feel free to make a PR!

  ## Usage

  There is an example in `app/exe.hs`.

  ### Tools
  Enter the nix shell.
  ```
  nix-shell
  ```
  You can checkout the makefile to see what's available:
  ```
  cat makefile
  ```

  ### Running
  ```
  make run
  ```

  ### Fast filewatch which runs tests
  ```
  make ghcid
  ```

  ## History
  This is the result from the great riskbook hackathon
  of oktober 2020
  (also known as festoberhack).
license-name: MIT
