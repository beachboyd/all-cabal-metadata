homepage: https://github.com/fpco/optparse-simple#readme
changelog-type: markdown
hash: e6d007b840fc563a28c976b516f29043a2c49484ad78534213d56930a6119d2c
test-bench-deps:
  bytestring: -any
  base: -any
  optparse-simple: -any
  directory: -any
maintainer: chrisdone@fpcomplete.com
synopsis: Simple interface to optparse-applicative
changelog: |
  ## 0.1.1.1

  * Add explicit signature to work around [#12](https://github.com/fpco/optparse-simple/issues/12)

  ## 0.1.1

  * Switch dependency `gitrev` to `githash`

  ## 0.1.0

  * Migrate from `EitherT` to `ExceptT`
    [#8](https://github.com/fpco/optparse-simple/issues/8)

  ## 0.0.4

  * Support `--help` on subcommands
basic-deps:
  base: ! '>=4.9.1 && <5'
  optparse-simple: -any
  githash: ! '>=0.1.3.0'
  transformers: ! '>=0.4'
  optparse-applicative: -any
  template-haskell: -any
all-versions:
- 0.0.0
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.1.0
- 0.1.1
- 0.1.1.1
author: FP Complete
latest: 0.1.1.1
description-type: markdown
description: |
  optparse-simple
  =====

  Simple interface to optparse-applicative

  ## Usage

  Typical usage with no commands:

  ``` haskell
  do (opts,()) <-
       simpleOptions "ver"
                     "header"
                     "desc"
                     (flag () () (long "some-flag"))
                     empty
     doThings opts
  ```

  Typical usage with commands:

  ``` haskell
  do (opts,runCmd) <-
       simpleOptions "ver"
                     "header"
                     "desc"
                     (pure ()) $
       do addCommand "delete"
                     "Delete the thing"
                     (const deleteTheThing)
                     (pure ())
          addCommand "create"
                     "Create a thing"
                     createAThing
                     (strOption (long "hello"))
     runCmd
  ```
license-name: BSD-3-Clause
