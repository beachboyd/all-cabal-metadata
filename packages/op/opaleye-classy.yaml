homepage: https://github.com/benkolera/opaleye-classy/tree/master
changelog-type: ''
hash: 79b08c58924ba2f19fa919f97895adb4dbb6b8e0b1644c91aaf5307e414fbc27
test-bench-deps: {}
maintainer: ben.kolera@gmail.com
synopsis: Opaleye wrapped up in classy MTL attire.
changelog: ''
basic-deps:
  bytestring: ! '>=0.10'
  base: ==4.*
  lens: ! '>=4.0'
  product-profunctors: ! '>=0.6.2 && <0.7'
  postgresql-simple: ! '>=0.4.8.0 && <0.5'
  mtl: ! '>=2.2'
  transformers: ! '>=0.4'
  opaleye: ! '>=0.4'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
- 0.2.1.0
- 0.3.0.0
- 0.3.1.0
- 0.3.1.1
author: Ben Kolera
latest: 0.3.1.1
description-type: markdown
description: ! "# opaleye-classy\n\nClassy MTL extension of the lovely Opaleye library,
  which simply just wraps things up in a MonadReader , MonadError context where the
  config/error are constrained by Classy Lenses/Prisms rather than by concrete non-extensible
  types.\n\nMore info on this pattern can be found in George Wilson's BFPG talk:\n\nhttp://talks.bfpg.org/talks/2015-06-09.next_level_mtl.html\n\n##
  Warnings\n\n  - This will only work if you only talk to one DB in your transformer
  stack. \n  - This API is missing a few IO operations from [[http://hackage.haskell.org/package/opaleye-0.4.0.0/docs/Opaleye-Manipulation.html]].If
  you need other functions exported then let me know or drop in a PR.\n\n"
license-name: MIT
