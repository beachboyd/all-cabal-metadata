homepage: https://bitbucket.org/functionally/opengl-spacenavigator
changelog-type: ''
hash: 4c1dd1637fb32623e051088efa62319a3393e599e8925c477b401080b88a18e1
test-bench-deps: {}
maintainer: Brian W Bush <consult@brianwbush.info>
synopsis: Library and example for using a SpaceNavigator-compatible 3-D mouse with
  OpenGL
changelog: ''
basic-deps:
  OpenGL: ! '>=2.12.0.1'
  GLUT: ! '>=2.7.0.1'
  base: ! '>=4.8 && <5'
  data-default: ! '>=0.5.3'
  binary: ! '>=0.7.5'
all-versions:
- 0.1.2.0
- 0.1.4.2
- 0.1.5.2
- 0.1.5.4
- 0.1.5.5
author: Brian W Bush <consult@brianwbush.info>
latest: 0.1.5.5
description-type: markdown
description: ! "Functions for using SpaceNavigator-compatible 3D Mice with OpenGL\n=================================================================\n\nThis
  Haskell package contains functions for managing input from a SpaceNavigator <<http://www.3dconnexion.com/products/spacemouse/spacenavigator.html>>,
  or a 3D mouse compatible with its protocols.  OpenGL callbacks are provided, along
  with utilities for quantizing the input from the mouse or tracking its six degrees
  of freedom.\n\nPlease report issues at <<https://bwbush.atlassian.net/projects/HOGLSPNV/issues/>>.\n\n\nSkeletal
  example illustrating the use of a SpaceNavigator with OpenGL\n---------------------------------------------------------------------\n\n```haskell\nmain
  :: IO ()\nmain = do\n  _ <- getArgsAndInitialize\n  initialDisplayMode $= [WithDepthBuffer,
  DoubleBuffered]\n  _ <- createWindow \"SpaceNavigator OpenGL Example\"\n  depthFunc
  $= Just Less \n  -- Create the tracker.\n  tracking <- newIORef $ def {spaceNavigatorPosition
  = Vector3 0 0 0}\n  -- Register a callback which quantizes and tracks the 3D mouse
  input.\n  spaceNavigatorCallback $=! Just ( quantizeSpaceNavigator defaultQuantization
  $ trackSpaceNavigator defaultTracking tracking)\n  -- The display callback needs
  the tracker.\n  displayCallback $= display tracking\n  idleCallback $= Just (postRedisplay
  Nothing)\n  mainLoop\n\ndisplay :: IORef SpaceNavigatorTrack -> DisplayCallback\ndisplay
  tracking =\n  do\n    clear [ColorBuffer, DepthBuffer]\n    loadIdentity\n    --
  Get the tracking state.\n    tracking' <- get tracking\n    -- Update the matrix
  based on the tracking\n    doTracking tracking'\n    -- All of the rendering actions
  go here.\n    renderPrimitive . . . \n    swapBuffers\n```\n\n\nNotes on hardware
  and software\n------------------------------\n\nThis code has been validated with
  the following configuration of hardware and software:\n\n*   SpaceNavigator <<http://www.3dconnexion.com/products/spacemouse/spacenavigator.html>>\n*
  \  spacenavd <<http://spacenav.sourceforge.net/>>, 0.5\n*   Ubuntu 15.04, 64-bit\n*
  \  GHC 7.6.3\n*   OpenGL == 2.8.0.0\n*   GLUT == 2.4.0.0\n"
license-name: MIT
