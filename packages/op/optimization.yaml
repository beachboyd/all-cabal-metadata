homepage: http://github.com/bgamari/optimization
changelog-type: markdown
hash: 2f1b6f029411456056860005e76884e82b037129397090c1b4eef208bc95e559
test-bench-deps: {}
maintainer: Ben Gamari <bgamari@gmail.com>
synopsis: Numerical optimization
changelog: ! '0.1

  ---

  * Repository initialized

'
basic-deps:
  semigroupoids: ! '>=3.0 && <6.0'
  base: ! '>=4.4 && <5'
  ad: ! '>=3.4 && <4.4'
  distributive: ! '>=0.3 && <0.6'
  linear: ! '>=1.16 && <2.0'
  vector: ! '>=0.10 && <1.0'
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.9
author: Ben Gamari
latest: 0.1.9
description-type: markdown
description: ! 'optimization

  ===


  These are a set of implementations of various numerical optimization

  methods in Haskell. Note that these implementations were originally

  written as part of a class project; while at one point they worked

  no attention has been given to numerical stability or the many other

  potential difficulties of implementing robust numerical

  methods. That being said, they should serve to succinctly illustrate

  a number of optimization techniques from the modern optimization

  literature.


  Those seeking a high-level overview of some of these methods are

  referred to Stephen Wright''s excellent

  [tutorial](http://videolectures.net/nips2010_wright_oaml/) from NIPS

  2010. A deeper introduction can be found in Boyd and Vandenberghe''s

  *Complex Optimization* which available freely online.



  Contact Information

  -------------------


  Contributions and bug reports are welcome!


  Please feel free to contact me through github or on the #haskell IRC channel on
  irc.freenode.net.


  - Ben Gamari

'
license-name: BSD-3-Clause
