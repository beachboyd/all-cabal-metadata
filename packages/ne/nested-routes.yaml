homepage: https://github.com/athanclark/nested-routes#readme
changelog-type: ''
hash: 8b78112bbe2a3550b7719e11359b13484f7325f4c33075c85c5e1a10c67354f9
test-bench-deps:
  pred-trie: -any
  exceptions: -any
  bytestring: -any
  wai-transformers: -any
  base: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  extractable-singleton: -any
  tasty-hspec: -any
  semigroups: -any
  tries: -any
  pred-set: -any
  regex-compat: -any
  wai-middleware-content-type: -any
  bifunctors: -any
  hspec-wai: -any
  hashtables: -any
  composition-extra: -any
  HSet: -any
  monad-control-aligned: -any
  mtl: -any
  hashable: -any
  poly-arity: -any
  attoparsec: -any
  transformers: -any
  tasty: -any
  errors: -any
  wai-middleware-verbs: -any
  http-types: -any
maintainer: Athan Clark <athan.clark@gmail.com>
synopsis: Declarative, compositional Wai responses
changelog: ''
basic-deps:
  pred-trie: ! '>=0.5.1'
  exceptions: -any
  bytestring: -any
  wai-transformers: ! '>=0.0.7'
  base: ! '>=4.9 && <5'
  unordered-containers: -any
  text: -any
  extractable-singleton: -any
  semigroups: -any
  tries: -any
  pred-set: ! '>=0.0.1'
  regex-compat: -any
  wai-middleware-content-type: ! '>=0.5.0.1'
  bifunctors: -any
  hashtables: -any
  monad-control-aligned: -any
  mtl: -any
  hashable: -any
  poly-arity: ! '>=0.0.7'
  attoparsec: -any
  transformers: -any
  errors: -any
  wai-middleware-verbs: ! '>=0.3.1'
all-versions:
- '6.1.0'
- '7.0.0'
- '7.1.0.1'
- '7.1.1'
- '7.2.0'
- '7.2.1'
- '7.2.2'
- '8.0.0'
- '8.0.1'
- '8.0.2'
author: ''
latest: '8.0.2'
description-type: haddock
description: This library attempts to make it easier to write nice Wai response handlers
  by giving us a Sinatra/ <https://hackage.haskell.org/package/scotty Scotty>-like
  syntax for declaring HTTP-verb oriented routes, in addition to file-extension handling
  and rose-tree like composition. Not only do we have literal route specification,
  like <https://hackage.haskell.org/package/scotty Scotty> & <https://hackage.haskell.org/package/spock
  Spock>, but we can also embed <https://hackage.haskell.org/package/attoparsec Attoparsec>
  parsers and <https://hackage.haskell.org/package/regex-compat Regular Expressions>
  /directly/ in our routes, with our handlers reflecting their results.
license-name: BSD3
