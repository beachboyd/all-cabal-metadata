homepage: https://github.com/stbuehler/haskell-nettle
changelog-type: ''
hash: ecf47b3b612135fbaf4c43ce711ef471d2d91cf3e6b29e4ec89259f049914bf6
test-bench-deps:
  test-framework-hunit: -any
  bytestring: -any
  test-framework: ! '>=0.3.3'
  base: ==4.*
  crypto-cipher-types: -any
  test-framework-quickcheck2: ! '>=0.2.9'
  crypto-cipher-tests: -any
  HUnit: -any
  array: -any
  tagged: -any
  nettle: -any
  QuickCheck: ! '>=2'
maintainer: Stefan Bühler <stbuehler@web.de>
synopsis: safe nettle binding
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4 && <5'
  crypto-cipher-types: ! '>=0.0.3 && <0.1'
  tagged: -any
  securemem: ! '>=0.1.2'
  byteable: -any
all-versions:
- '0.1.0'
- '0.1.1'
- '0.2.0'
- '0.2.1'
author: Stefan Bühler <stbuehler@web.de>
latest: '0.2.1'
description-type: markdown
description: ! '# haskell-nettle


  This is the source repository for the "nettle" cabal package, which is a safe binding
  to the [nettle](http://www.lysator.liu.se/~nisse/nettle/nettle.html) library (tested
  with 3.1.1, might work with 3.0, does NOT WORK with 2.x).


  The binding supports all hash functions, cipher functions, cipher modes and keyed
  hash functions (apart from Poly1305-AES) included in nettle (additionally the AEAD-CCM
  cipher mode is implemented in pure haskell).


  Not included are the PBKDF2 key derivation functions, the public-key algorithms
  (RSA, DSA, elliptic curves, ECDSA), the pseudo-random generators (lagged Fibonacci
  and Yarrow), and the base64/base16 encoding/decoding functions.


  Also not included are the undocumented ASN1, PGP, PKCS1 and "s-expression" functions.


  The haddock generated documentation is available at http://stbuehler.github.io/haskell-nettle/


  The test vectors were extracted from the nettle library and ported to haskell; they
  come from different sources.

'
license-name: MIT
