homepage: ''
changelog-type: markdown
hash: 590f0e6238ebb42f5c2ee72b561226d8cb3c3826a8f5e2f9aa9fd86810dd6a33
test-bench-deps: {}
maintainer: programming@manuelbaerenz.de
synopsis: Gloss backend for Rhine
changelog: |
  # Revision history for rhine-gloss

  ## 0.4.0.0 -- 2017.12.04

  * Version bump

  ## 0.3.0.0  -- 2017-11-30

  * Added simple example.

  ## 0.2.0.0  -- 2017-11-29

  * First version. Version numbers follow rhine.
basic-deps:
  gloss: ! '>=1.12 && <1.14'
  dunai: ==0.5.*
  base: ! '>=4.9 && <4.13'
  rhine-gloss: -any
  rhine: ==0.5.*
all-versions:
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.4
- 0.5.0.0
- 0.5.0.1
- 0.5.1.0
author: Manuel BÃ¤renz
latest: 0.5.1.0
description-type: markdown
description: |
  # README

  This package provides a simple wrapper for the `gloss` library,
  or rather the function `Graphics.Gloss.play`,
  enabling you to write `gloss` applications as signal functions.
  An example "gears" program, which you can run as `cabal run rhine-gloss-gears`
  or `stack build && stack exec rhine-gloss-gears`,
  now becomes as simple as:

  ```haskell
  import FRP.Rhine.Gloss


  -- | Calculate a gear wheel rotated by a certain angle.
  gears :: Float -> Picture
  gears angle = color green $ pictures
    $ circleSolid 60
    : map (rotate angle) [ rotate (45 * n) $ rectangleSolid 20 150 | n <- [0..3] ]

  -- | Rotate the gear with a constant angular velocity.
  mainClSF :: GlossClSF a
  mainClSF = timeInfoOf sinceInit >>> arr (* 50) >>> arr gears

  main :: IO ()
  main = flowGloss (InWindow "rhine-gloss-gears" (400, 400) (10, 10)) (greyN 0.3) 30
       $ buildGlossRhine Just mainClSF
  ```

  ## Installation

  Since `gloss` is based on `OpenGL`,
  you will need to install the same dependencies as for that.
  Typically, this are the `GL`, `GLU` and `GLUT` libraries.

  When building with `stack`, it is assumed that you have `nix-shell` installed,
  which will automatically get these dependencies for you.
license-name: BSD-3-Clause
