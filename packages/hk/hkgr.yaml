homepage: https://github.com/juhp/hkgr
changelog-type: markdown
hash: fad54a8a03955883e12978908bc073e85b0ac4d243fd898b2463d09bebf2a7e0
test-bench-deps: {}
maintainer: juhpetersen@gmail.com
synopsis: Simple Hackage release workflow for package maintainers
changelog: |
  # Changelog

  ## 0.0
  * Initially created.
basic-deps:
  base: <5
  simple-cmd-args: -any
  filepath: -any
  simple-cmd: ! '>=0.2.0'
  directory: ! '>=1.2.3'
all-versions:
- '0.0'
author: Jens Petersen
latest: '0.0'
description-type: markdown
description: |
  # Hkgr

  [![Hackage](https://img.shields.io/hackage/v/hkgr.svg)](https://hackage.haskell.org/package/hkgr)
  [![GPL-3 license](https://img.shields.io/badge/license-GPL--3-blue.svg)](LICENSE)
  [![Build status](https://secure.travis-ci.org/juhp/hkgr.svg)](https://travis-ci.org/juhp/hkgr)

  `hkgr` (pronounced "Hackager") is a tool for package maintainers
  to release their Haskell packages on Hackage.

  ## Usage

  ```
  $ hkgr
  HacKaGe Release workflow

  Usage: hkgr [--version] COMMAND
    A tool to help Hackage maintainers with releasing packages

  Available options:
    -h,--help                Show this help text
    --version                Show version

  Available commands:
    tag                      'git tag' version
    dist                     Make tarball from latest tag ('cabal sdist')
    version                  Show the package version from .cabal file
    upload                   'cabal upload' tarball to Hackage
    push-tags                'git push --tags' to origin
    publish                  Publish to Hackage ('cabal upload --publish')
    upload-haddock           Upload documentation to Hackage
    publish-haddock          Upload documentation to Hackage
  ```

  ## Example
  ```
  $ git commit -m "new release"
  $ hkgr tag
  $ hkgr dist
  $ hkgr upload
  $ git push
  $ hkgr push-tags
  $ hkgr publish
  $ hkgr upload-haddock
  $ hkgr publish-haddock
  ```
license-name: GPL-3.0-only
