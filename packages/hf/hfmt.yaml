homepage: http://github.com/danstiner/hfmt
changelog-type: ''
hash: 0ff2a45c615ba2a8bc000697c5bedfde716e55102efcd331ae27f7a05ee1f246
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  base: ==4.*
  HUnit: -any
  hfmt: -any
maintainer: Daniel Stiner <daniel.stiner@gmail.com>
synopsis: Haskell source code formatter
changelog: ''
basic-deps:
  conduit-combinators: -any
  hindent: ==5.*
  exceptions: -any
  hlint: ==2.*
  bytestring: -any
  ansi-wl-pprint: -any
  Cabal: -any
  path: -any
  base: ! '>=4.8 && <5'
  Diff: -any
  text: -any
  filepath: -any
  HUnit: -any
  haskell-src-exts: <1.20
  hfmt: -any
  transformers: -any
  optparse-applicative: -any
  pretty: -any
  path-io: -any
  stylish-haskell: ==0.8.*
  yaml: -any
  directory: -any
all-versions:
- '0.0.1.0'
- '0.0.2.0'
- '0.0.2.1'
- '0.0.2.2'
- '0.0.2.3'
- '0.1.0'
- '0.1.1'
- '0.2.0'
author: Daniel Stiner
latest: '0.2.0'
description-type: markdown
description: ! "hfmt\n====\n\n[![Hackage](https://img.shields.io/hackage/v/hfmt.svg)](https://hackage.haskell.org/package/hfmt)\n[![license](https://img.shields.io/github/license/danstiner/hfmt.svg)](https://github.com/danstiner/hfmt/blob/master/LICENSE)\n[![Build
  Status](https://travis-ci.org/danstiner/hfmt.svg?branch=master)](https://travis-ci.org/danstiner/hfmt)\n\nhfmt
  is a tool for formatting Haskell programs. Currently it is simply a gofmt style
  wrapper of the excellent tools [hlint](https://github.com/ndmitchell/hlint/blob/master/README.md),
  [hindent](https://github.com/chrisdone/hindent#readme), and [stylish-haskell](https://github.com/jaspervdj/stylish-haskell#readme).\n\n\n##
  Installation\n\nwith [stack](https://www.haskellstack.org/)\n\n    $ stack install
  hfmt\n\nwith [cabal](https://www.haskell.org/haskellwiki/Cabal/How_to_install_a_Cabal_package)\n\n
  \   $ cabal install hfmt\n\n## Usage\n\nCheck all Haskell source under the current
  directory:\n\n    hfmt\n\nOverwrite files with formatting suggestions:\n\n    hfmt
  -w\n\n## Help text\n\n    Î» hfmt --help\n    hfmt - format Haskell programs\n\n
  \   Usage: hfmt.exe [-d|--print-diffs] [-s|--print-sources] [-l|--print-paths]\n
  \                   [-w|--write-sources] [PATH]\n      Operates on Haskell source
  files, reformatting them by applying suggestions\n      from HLint, hindent, and
  stylish-haskell. Inspired by the gofmt utility.\n\n    Available options:\n      -h,--help
  \               Show this help text\n      -d,--print-diffs         If a file's
  formatting is different, print a diff.\n      -s,--print-sources       If a file's
  formatting is different, print its\n                               source.\n      -l,--print-paths
  \        If a file's formatting is different, print its path.\n      -w,--write-sources
  \      If a file's formatting is different, overwrite it.\n      PATH                     Explicit
  paths to process.\n                                - A single '-' will process standard
  input.\n                                - Files will be processed directly.\n                                -
  Directories will be recursively searched for\n                                  source
  files to process.\n                                - .cabal files will be parsed
  and all specified\n                                  source directories and files
  processed.\n                                - If no paths are given, the current
  directory will\n                                  be searched for .cabal files to
  process, if none\n                                  are found the current directory
  will be\n                                  recursively searched for source files
  to process.\n"
license-name: MIT
