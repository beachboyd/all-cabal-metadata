homepage: https://github.com/tmcdonell/cuda
changelog-type: markdown
hash: 4aa868072fd3645388b53d562d9c4dc086f316bc73fb9cf2567d917aa63f8b13
test-bench-deps: {}
maintainer: Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>
synopsis: FFI binding to the CUDA interface for programming NVIDIA GPUs
changelog: ! "# Change Log\n\nNotable changes to the project will be documented in
  this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n##
  [0.9.0.3] - 2018-03-12\n### Fixed\n  * Build fix for Cabal-2.2 (ghc-8.4)\n\n## [0.9.0.2]
  - 2018-03-07\n### Fixed\n  * Build fix for Nix ([#53])\n\n## [0.9.0.1] - 2018-02-16\n###
  Fixed\n  * Build fix for macOS High Sierra (10.13)\n\n## [0.9.0.0] - 2017-11-15\n###
  Fixed\n  * Build fixes for CUDA-9\n\n### Added\n  * `Peer.getAttribute`\n  * `Exec.launchKernelCooperative`\n\n###
  Changed\n  * Changed type of `Stream.wait` and `Stream.write` to support 64-bit
  values\n\n## [0.8.0.1] - 2017-10-24\n### Fixed\n  * Escape backslashes used in -D
  flags on Windows ([#50])\n\n## [0.8.0.0] - 2017-08-24\n### Changed\n  * Tested with
  CUDA toolkit 8.0\n\n### Added\n  * Add operations for unified addressing in the
  device API\n  * Add `write` and `wait` operations for streams in the device API\n
  \ * (internals) The paths this module was configured against are exposed by the\n
  \   module `Foreign.CUDA.Paths`.\n\n## [0.7.5.3] - 2017-03-23\n### Fixed\n  * Bug
  fix in occupancy calculator\n\n## [0.7.5.2] - 2017-01-06\n### Fixed\n  * Build fails
  with library profiling ([#43])\n  * On Windows, the Cabal installer is looking in
  the wrong place ([#45])\n  * Windows install fix ([#47])\n\n## [0.7.5.1] - 2016-10-21\n###
  Fixed\n  * Re-enable support for Cabal-1.22\n  * Unknown CUDA device compute capability
  6.1 ([#40])\n  * Compilation fails for CUDA-8 [was: ghc 7.10.3 fail to install]
  ([#44])\n\n## [0.7.5.0] - 2016-10-07\n### Changed\n  * Tested with CUDA toolkit
  7.5\n\n### Added\n  * Add functions from CUDA-7.5\n  * Add profiler control functions\n
  \ * Add function `mallocHostForeignPtr`\n\n## [0.7.0.0] - 2015-11-30\n### Changed\n
  \ * Add support for operations from CUDA-7.0\n  * Add support for online linking\n
  \ * Add support for inter-process communication\n  * Bug fixes, extra documentation,
  improve library coverage.\n  * Mac OS X no longer requires the DYLD_LIBRARY_PATH
  environment variable in\n    order to compile or run programs that use this package.\n\n##
  [0.6.7.0] - 2015-09-12\n### Added\n  * Add support for building on Windows (thanks
  to @mwu-tow)\n\n## [0.6.6.2] - 2015-04-04\n### Fixed\n  * Build fix\n\n## [0.6.6.1]
  - 2015-04-04 [YANKED]\n### Fixed\n  * Build fixes for ghc-7.6 and ghc-7.10\n\n##
  [0.6.6.0] - 2015-03-10\n### Added\n  * Add compute-capability data for 3.7, 5.2
  devices.\n\n### Changed\n  * Combine the definition of the 'Event' and 'Stream'
  data types. As of\n    CUDA-3.1 these data structures are equivalent, and can be
  safely shared\n    between runtime and driver API calls and libraries.\n\n  * Mark
  FFI imports of potentially long-running API functions as safe. This\n    allows
  them to be safely called from Haskell threads without blocking the\n    entire HEC.\n\n###
  Removed\n  * Drop support for CUDA 3.0 and older.\n\n## [0.6.5.1] - 2014-12-02\n###
  Fixed\n  * Build fix for Mac OS X 10.10 (Yosemite)\n\n## [0.6.5.0] - 2014-09-03\n###
  Changed\n  * Tested with CUDA toolkit 6.5\n\n### Added\n  * Add functions from CUDA-6.5\n\n\n[0.9.0.3]:
  \   https://github.com/tmcdonell/cuda/compare/0.9.0.2...0.9.0.3\n[0.9.0.2]:    https://github.com/tmcdonell/cuda/compare/0.9.0.1...0.9.0.2\n[0.9.0.1]:
  \   https://github.com/tmcdonell/cuda/compare/0.9.0.0...0.9.0.1\n[0.9.0.0]:    https://github.com/tmcdonell/cuda/compare/0.8.0.1...0.9.0.0\n[0.8.0.1]:
  \   https://github.com/tmcdonell/cuda/compare/0.8.0.0...0.8.0.1\n[0.8.0.0]:    https://github.com/tmcdonell/cuda/compare/0.7.5.3...0.8.0.0\n[0.7.5.3]:
  \   https://github.com/tmcdonell/cuda/compare/0.7.5.2...0.7.5.3\n[0.7.5.2]:    https://github.com/tmcdonell/cuda/compare/0.7.5.1...0.7.5.2\n[0.7.5.1]:
  \   https://github.com/tmcdonell/cuda/compare/0.7.5.0...0.7.5.1\n[0.7.5.0]:    https://github.com/tmcdonell/cuda/compare/0.7.0.0...0.7.5.0\n[0.7.0.0]:
  \   https://github.com/tmcdonell/cuda/compare/0.6.7.0...0.7.0.0\n[0.6.7.0]:    https://github.com/tmcdonell/cuda/compare/0.6.6.2...0.6.7.0\n[0.6.6.2]:
  \   https://github.com/tmcdonell/cuda/compare/0.6.6.1...0.6.6.2\n[0.6.6.1]:    https://github.com/tmcdonell/cuda/compare/0.6.6.0...0.6.6.1\n[0.6.6.0]:
  \   https://github.com/tmcdonell/cuda/compare/0.6.5.1...0.6.6.0\n[0.6.5.1]:    https://github.com/tmcdonell/cuda/compare/0.6.5.0...0.6.5.1\n[0.6.5.0]:
  \   https://github.com/tmcdonell/cuda/compare/0.6.0.1...0.6.5.0\n\n[#40]:        https://github.com/tmcdonell/cuda/issues/40\n[#43]:
  \       https://github.com/tmcdonell/cuda/issues/43\n[#44]:        https://github.com/tmcdonell/cuda/issues/44\n[#45]:
  \       https://github.com/tmcdonell/cuda/issues/45\n[#47]:        https://github.com/tmcdonell/cuda/pull/47\n[#50]:
  \       https://github.com/tmcdonell/cuda/pull/50\n[#53]:        https://github.com/tmcdonell/cuda/pull/53\n\n"
basic-deps:
  bytestring: -any
  base: ==4.*
  cuda: -any
  filepath: ! '>=1.0'
  pretty: -any
  template-haskell: -any
all-versions:
- '0.1'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.3.2'
- '0.3.2.1'
- '0.3.2.2'
- '0.4.0.0'
- '0.4.0.1'
- '0.4.0.2'
- '0.4.1.0'
- '0.4.1.1'
- '0.5.0.0'
- '0.5.0.1'
- '0.5.0.2'
- '0.5.1.0'
- '0.5.1.1'
- '0.6.0.0'
- '0.6.0.1'
- '0.6.5.0'
- '0.6.5.1'
- '0.6.6.0'
- '0.6.6.2'
- '0.6.7.0'
- '0.7.0.0'
- '0.7.5.0'
- '0.7.5.1'
- '0.7.5.2'
- '0.7.5.3'
- '0.8.0.0'
- '0.8.0.1'
- '0.9.0.0'
- '0.9.0.1'
- '0.9.0.2'
- '0.9.0.3'
author: Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>
latest: '0.9.0.3'
description-type: markdown
description: ! "Haskell FFI Bindings to CUDA\n============================\n\n[![Travis
  build status](https://img.shields.io/travis/tmcdonell/cuda/master.svg?label=linux)](https://travis-ci.org/tmcdonell/cuda)\n[![AppVeyor
  build status](https://img.shields.io/appveyor/ci/tmcdonell/cuda/master.svg?label=windows)](https://ci.appveyor.com/project/tmcdonell/cuda)\n[![Stackage
  LTS](https://stackage.org/package/cuda/badge/lts)](https://stackage.org/lts/package/cuda)\n[![Stackage
  Nightly](https://stackage.org/package/cuda/badge/nightly)](https://stackage.org/nightly/package/cuda)\n[![Hackage](https://img.shields.io/hackage/v/cuda.svg)](https://hackage.haskell.org/package/cuda)\n\nThe
  CUDA library provides a direct, general purpose C-like SPMD programming\nmodel for
  NVIDIA graphics cards (G8x series onwards). This is a collection of\nbindings to
  allow you to call and control, although not write, such functions\nfrom Haskell-land.
  You will need to install the CUDA driver and developer\ntoolkit.\n\n  <http://developer.nvidia.com/object/cuda.html>\n\nThe
  configure step will look for your CUDA installation in the standard places,\nand
  if the `nvcc` compiler is found in your `PATH`, relative to that.\n\nFor important
  information on installing on Windows, see:\n\n  <https://github.com/tmcdonell/cuda/blob/master/WINDOWS.markdown>\n\n"
license-name: BSD3
