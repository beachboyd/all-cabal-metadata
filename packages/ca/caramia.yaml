homepage: https://github.com/Noeda/caramia/
changelog-type: markdown
hash: 3ad5540f150ac5873305538082f25393d0ffd8f861bb7c9743d52f2778417818
test-bench-deps:
  caramia: -any
  test-framework-hunit: ! '>=0.3.0.1 && <1.0'
  test-framework: ! '>=0.8.1 && <1.0'
  base: -any
  test-framework-quickcheck2: ! '>=0.3.0.3 && <1.0'
  HUnit: ! '>=1.2.5.2 && <2.0'
  sdl2: ! '>=1.3 && <2.0'
  containers: ! '>=0.5.5 && <1.0'
  linear: ! '>=1.18 && <2.0'
  transformers: ! '>=0.3 && <1.0'
maintainer: mikjuo@gmail.com
synopsis: High-level OpenGL bindings
changelog: ! "0.7.2.1 -> 0.7.2.2\n-------------------\n\n - 'linear' dependency bumped
  to >=1.18.\n\n - 'sdl2' dependency in tests downgraded to 1.3 from 2.0.\n\n"
basic-deps:
  exceptions: ! '>=0.6 && <1.0'
  bytestring: ! '>=0.10 && <1.0'
  base: ! '>=4.7 && <5.0.0.0'
  text: ! '>=0.9 && <2.0'
  semigroups: ! '>=0.15 && <1.0'
  containers: ! '>=0.5 && <1.0'
  lens: ! '>=4.6 && <5.0'
  linear: ! '>=1.18 && <2.0'
  mtl: ! '>=2.1 && <3.0'
  transformers: ! '>=0.3 && <1.0'
  gl: ! '>=0.7.3 && <1.0'
  vector: ! '>=0.10 && <1.0'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
- 0.3.0.0
- 0.3.0.1
- 0.4.0.0
- 0.5.0.0
- 0.6.0.0
- 0.7.0.0
- 0.7.0.1
- 0.7.1.0
- 0.7.1.1
- 0.7.2.0
- 0.7.2.1
- 0.7.2.2
author: Mikko Juola
latest: 0.7.2.2
description-type: markdown
description: ! "[![Hackage](https://img.shields.io/hackage/v/caramia.svg)](https://hackage.haskell.org/package/caramia)\n[![Build
  Status](https://travis-ci.org/Noeda/caramia.svg?branch=master)](https://travis-ci.org/Noeda/caramia)\n\nThis
  is a highish-level OpenGL bindings library for real-time graphics for\nHaskell,
  with minimum OpenGL version being 2.1.\n\nRequirements:\n\n  * GHC 7.8+\n  * OpenGL
  2.1 (with some extensions)\n\nIf the target system has OpenGL 3.3, then all features
  in this library should\nbe available unless stated otherwise. OpenGL contexts with
  3.x or later\nversions can be a core profile; this library does not care.\n\nYou
  need to use `-threaded` flag in executables that use this library.\n\nHere are the
  most important features of this library:\n\n  * Safe and automatic finalization
  of OpenGL resources, with optional prompt\n    finalization.\n\n  * No implicit
  state (that is, no glBind* mess or equivalent). There is a\n    monad for mass-rendering
  that has implicit state but the state is localized\n    to running of that monad.
  (see Caramia.Render).\n\nHere are some curious features that you might find useful.\n\n
  \ * This library plays nice with other OpenGL libraries. It does not mess up\n    the
  implicit OpenGL state (except for aforementioned rendering monad).\n\n  * This library
  does not create an OpenGL context. You can use whatever\n    library you want to
  create an OpenGL context as long as it can get an\n    OpenGL 2.1 (or any later
  version) context. You may be interested at looking\n    at the tests in this package
  to see how to use this with the `sdl2`\n    package.\n\n  * Operations are generalized
  over `MonadIO`. Works on top of pure `IO` and\n    also in your custom monad stacks,
  if they have `MonadIO` at bottom.\n\n(At least) the following OpenGL concepts are
  present in this library:\n\n  * Buffer objects (you can do low-level mapping and
  use raw pointers)\n\n  * Geometry, vertex and fragment shaders\n\n  * Indexed and
  non-indexed rendering\n\n  * Framebuffers\n\n  * Textures (with many topologies,
  1D, 2D, 3D, texture arrays, cube textures;\n    we also have buffer textures and
  multisampling textures)\n\n  * Vertex array objects\n\n  * Blending, stencil, depth
  and cull tests\n\n  * Instanced rendering\n\n  * Synchronization objects\n\n  *
  Query objects\n\nThis library tries to avoid including obsolete or redundant features
  of OpenGL.\n\nNote that the library is in flux and API-breaking changes tend to
  happen\noften.\n\n"
license-name: MIT
