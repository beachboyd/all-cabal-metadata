homepage: ''
changelog-type: markdown
hash: 7767dd53b7bd56298407b735439715c31a3b926521869df1e7ee32333036d05a
test-bench-deps: {}
maintainer: hvr@gnu.org
synopsis: Library and utility for processing cabal's plan.json file
changelog: |
  # Revision history for `cabal-plan`

  ## 0.5.0.0

  ### `lib:cabal-plan` Library

  * New `dispCompNameTarget` function for pretty-printing `CompName`s in cabal's target-selector syntax.
  * Add support for cabal 2.4's `pkg-src` package provenience metadata.
  * Add support for cabal 2.4.1's `pkg-cabal-sha256` package description checksum field.

  ### `exe:cabal-plan` Executable

  * Add support for including package description checksums in `fingerprint` output
  * Add support for printing flag selection in `topo` output
  * Fail gracefully in `license-report` when metadata cannot be found in index

  ## 0.4.0.0

  ### `lib:cabal-plan` Library

  * New `SearchPlanJson` type to specify strategy for locating `plan.json`
  * Add `SearchPlanJson` parameter to `findAndDecodePlanJson` function and change return type
  * Expose separate `findProjectRoot` operation

  ### `exe:cabal-plan` Executable

  * New command `license-report` (requires Cabal flag `license-report` to be active)

  ## 0.3.0.0

  ### `lib:cabal-plan` Library

  * Add support for foreign-lib components.
  * Add support for `dist-dir` `plan.json` field.
  * Make `Sha256` type abstract and add new `sha256{To,From}ByteString`
    conversion functions, as well as the new `parseSha256` function.
  * Introduce `FlagName` newtype.
  * Add `FromJSONKey`/`ToJSONKey` instances for `UnitId`, `PackageName`, and `PkgId`.

  ### `exe:cabal-plan` Executable

  * smart completer for list-bin/list-bins pattern
  * new command `topo` (printing out topographic sorting of install-plan)
  * `dot` prints component dependency graph. New options:
      - `--tred` transitive reduction
      - `--tred-weights` Adjust edge thickness during transitive reduction
      - `--path-from pkgA --path-from pkgB` Highlight dependency paths from *pkgA* to *pkgB*
      - `--revdep pkg` highlight reverse dependencies of pkg in the install plan

  ## 0.2.0.0

  * Add an optional `--builddir` argument to all commands and to `findAndDecodePlanJson` function.
  * Add experimental support for underlining.
  * Reimplement CLI with `optparse-applicative`.
  * Add new sub-command `list-bins` and change semantics of existing `list-bin` sub-cmd.

  ### 0.1.1.0

  * Add `cabal-plan fingerprint` command for printing
    sha256 sums of source tarballs.

  ## 0.1.0.0

  * First version. Released on an unsuspecting world.
basic-deps:
  bytestring: ! '>=0.10.0 && <0.11'
  base: ! '>=4.6 && <4.13'
  text: ! '>=1.2.2 && <1.3'
  filepath: ^>=1.3.0 || ^>=1.4.0
  parsec: ^>=3.1.11
  containers: ! '>=0.5.0 && <0.6 || >=0.6.0.1 && <0.7'
  ansi-terminal: ^>=0.6.2 || ^>=0.8.0.2 || ^>=0.9
  base-compat: ^>=0.9.3 || ^>=0.10.1
  mtl: ^>=2.2.1
  topograph: -any
  base16-bytestring: ^>=0.1.1
  cabal-plan: -any
  optparse-applicative: ^>=0.13.0 || ^>=0.14.0
  aeson: ^>=1.2.0 || ^>=1.3.0 || ^>=1.4.0.0
  vector: ^>=0.12.0.1
  directory: ! '>=1.2.0 && <1.3 || >=1.3.0 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.5.0.0
author: Herbert Valerio Riedel
latest: 0.5.0.0
description-type: haddock
description: |-
  This package provides a library (see "Cabal.Plan") for decoding @plan.json@ files as
  well as the simple tool @cabal-plan@ for extracting and pretty printing
  the information contained in the @plan.json@ file.

  @plan.json@ files are generated by [cabal](https://hackage.haskell.org/package/cabal-install)'s [Nix-style local builds](http://cabal.readthedocs.io/en/latest/nix-local-build.html) and contain detailed information about the build/install plan computed by the cabal solver.

  == @cabal-plan@ utility

  The @cabal-plan@ executable (enabled via the @exe@ cabal flag) provides various operations:

  [info] Show basic report of dependency tree
  [show] Dump 'PlanJson' data-structure via 'Show' instance
  [list-bins] List all binaries
  [list-bin] List single binary (useful for scripting, e.g. @cabal list-bin exe:cabal-plan@)
  [fingerprint] Print SHA256 sums of dependencies' source tarballs and cabal files
  [dot] Generate graph of dependencies in @.dot@ format
  [topo] Print plan topologically sorted
  [license-report] Generate license report for a component (only available when built with @license-report@ flag enabled); see <src/example/cabal-plan.md report example for cabal-plan> (<src/example/cabal-plan.html Pandoc rendered HTML>)

  See also ["New things in Haskell package QA" Blogpost](http://oleg.fi/gists/posts/2018-01-08-haskell-package-qa.html) for a description of the @topo@ and @dot@ operations as well as how to enable tab-completion.
license-name: GPL-2.0-or-later AND BSD-3-Clause
