homepage: https://github.com/nixos/cabal2nix#readme
changelog-type: ''
hash: e1c132b99dbb9d503a738d2978e74275a85779339fa1c69cd9889f9ec233b39c
test-bench-deps:
  bytestring: -any
  ansi-wl-pprint: -any
  split: -any
  Cabal: ! '>2'
  base: <5
  time: -any
  text: -any
  language-nix: -any
  filepath: -any
  process: -any
  doctest: -any
  hackage-db: ! '>2'
  containers: -any
  lens: -any
  distribution-nixpkgs: ! '>=1.1'
  hopenssl: ! '>=2'
  transformers: -any
  optparse-applicative: -any
  deepseq: ! '>=1.4'
  pretty: ! '>=1.1.2'
  aeson: -any
  yaml: -any
  hpack: -any
  directory: -any
maintainer: Peter Simons <simons@cryp.to>
synopsis: Convert Cabal files into Nix build instructions.
changelog: ''
basic-deps:
  bytestring: -any
  monad-par: -any
  ansi-wl-pprint: -any
  split: -any
  Cabal: ! '>2'
  base: <5
  time: -any
  text: -any
  language-nix: -any
  monad-par-extras: -any
  filepath: -any
  process: -any
  hackage-db: ! '>2'
  containers: -any
  lens: -any
  distribution-nixpkgs: ! '>=1.1'
  utf8-string: -any
  mtl: -any
  hopenssl: ! '>=2'
  cabal2nix: -any
  transformers: -any
  optparse-applicative: -any
  deepseq: ! '>=1.4'
  pretty: ! '>=1.1.2'
  aeson: -any
  yaml: -any
  hpack: -any
  directory: -any
all-versions:
- '1.0'
- '1.1'
- '1.2'
- '1.3'
- '1.4'
- '1.5'
- '1.6'
- '1.7'
- '1.8'
- '1.9'
- '1.10'
- '1.11'
- '1.12'
- '1.13'
- '1.14'
- '1.15'
- '1.16'
- '1.17'
- '1.18'
- '1.19'
- '1.20'
- '1.21'
- '1.23'
- '1.24'
- '1.25'
- '1.26'
- '1.27'
- '1.28'
- '1.29'
- '1.30'
- '1.31'
- '1.32'
- '1.33'
- '1.34'
- '1.35'
- '1.37'
- '1.38'
- '1.39'
- '1.40'
- '1.41'
- '1.42'
- '1.43'
- '1.44'
- '1.45'
- '1.46'
- '1.47'
- '1.48'
- '1.49'
- '1.50'
- '1.51'
- '1.52'
- '1.53'
- '1.54'
- '1.55'
- '1.56'
- '1.57'
- '1.58'
- '1.59'
- '1.60'
- '1.61'
- '1.63'
- '1.64'
- '1.65'
- '1.66'
- '1.67'
- '1.68'
- '1.69'
- '1.70'
- '1.71'
- '1.72'
- '1.73'
- '2.0'
- '2.0.1'
- '2.0.2'
- '2.0.3'
- '2.0.4'
- '2.1'
- '2.1.1'
- '2.2'
- '2.2.1'
- '2.3'
- '2.3.1'
- '2.4.1'
- '2.5'
- '2.6'
- '2.7'
- '2.7.2'
author: ! 'Peter Simons,

  Andres Loeh,

  Benno Fünfstück,

  Mateusz Kowalczyk,

  Michael Alan Dorman,

  Tom Smalley,

  Mathijs Kwik,

  Shea Levy,

  Dmitry Malikov,

  Eric Seidel,

  Jacob Mitchell,

  Graham Christensen,

  Hamish Mackenzie,

  Nikolay Amiantov,

  Aycan iRiCAN,

  Bryan Gardiner,

  Joe Hermaszewski,

  John Wiegley,

  Philipp Hausmann,

  Spencer Janssen,

  Tom Hunger,

  William Casarin,

  koral,

  ksaric,

  Adam Vogt,

  Alexey Shmalko,

  Corey O''Connor,

  Cray Elliott,

  David Johnson,

  Dmitry Bushev,

  Domen Kožar,

  Felix Kunzmann,

  Gabriel Ebner,

  Gergely Risko,

  Joachim Fasting,

  John Albietz,

  John Chee,

  Jussi Maki,

  Lisanna Dettwyler,

  Mark Laws,

  Mark Wotton,

  Matthew Pickering,

  Matthew Stewart,

  Matvey Aksenov,

  Nicholas Clarke,

  Nicolas Rolland,

  Oliver Charles,

  Pascal Wittmann,

  Patrick John Wheeler,

  Phil de Joux,

  Piotr Bogdan,

  Profpatsch,

  Raymond Gauthier,

  Renzo Carbonara,

  Rodney Lorrimar,

  Sibi,

  Sukant Hajra,

  Tanner Doshier,

  Vaibhav Sagar,

  Viktar Basharymau,

  danbst,

  karsten gebbert,

  laMudri,

  Александр Цамутали'
latest: '2.7.2'
description-type: markdown
description: ! "Cabal2nix\n=========\n\n`cabal2nix` converts a single Cabal file into
  a single Nix build expression.\nFor example:\n\n    $ cabal2nix cabal://mtl\n    {
  mkDerivation, base, stdenv, transformers }:\n    mkDerivation {\n      pname = \"mtl\";\n
  \     version = \"2.2.1\";\n      sha256 = \"1icdbj2rshzn0m1zz5wa7v3xvkf6qw811p4s7jgqwvx1ydwrvrfa\";\n
  \     libraryHaskellDepends = [ base transformers ];\n      homepage = \"http://github.com/ekmett/mtl\";\n
  \     description = \"Monad classes, using functional dependencies\";\n      license
  = stdenv.lib.licenses.bsd3;\n    }\n\nCabal files can be referred to using the magic
  URL `cabal://NAME-VERSION`,\nwhich will automatically download the file from Hackage.
  Alternatively, a\ndirect `http://host/path/pkg.cabal` URL can be provided, as well
  as a\n`file:///local/path/pkg.cabal` URI that doesn't depend on network access.\nHowever,
  if the source hash is not already in `cabal2nix`'s cache or provided\nusing the
  `--sha256` option, `cabal2nix` still needs to download the source\ncode to compute
  the hash, which obviously still causes network traffic. Run the\nutility with `--help`
  to see the complete list of supported command line flags.\n\nDetailed instructions
  how to use those generated files with Nix can be found at\nhttp://nixos.org/nixpkgs/manual/#users-guide-to-the-haskell-infrastructure.\n\n`cabal2nix`
  can also build derivations for projects from other sources than\nhackage. You only
  need to provide an URI that points to a cabal project. The\nmost common usecase
  for this is probably to generate a derivation for a project\non the local file system:\n\n
  \   $ cabal get mtl-2.2.1 && cd mtl-2.2.1\n    $ cabal2nix .\n    { mkDerivation,
  base, stdenv, transformers }:\n    mkDerivation {\n      pname = \"mtl\";\n      version
  = \"2.2.1\";\n      src = ./.;\n      libraryHaskellDepends = [ base transformers
  ];\n      homepage = \"http://github.com/ekmett/mtl\";\n      description = \"Monad
  classes, using functional dependencies\";\n      license = stdenv.lib.licenses.bsd3;\n
  \   }\n\nThis derivation will not fetch from hackage, but instead use the directory
  which\ncontains the derivation as the source repository.\n\n`cabal2nix` currently
  supports the following repository types:\n\n* directory\n* source archive (zip,
  tar.gz, ...) from http or https URL or local file.\n* git, mercurial, svn or bazaar
  repository\n"
license-name: BSD3
