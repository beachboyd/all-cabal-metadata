homepage: https://github.com/magicloud/cairo-core#readme
changelog-type: text
hash: bb414821eb17472dd0f924858fda6268c56885cc0eb4593bf89506392d502c11
test-bench-deps: {}
maintainer: magiclouds@gmail.com
synopsis: Cairo Haskell binding (core functions)
changelog: "commit db325b51d98a127e48b6323df4e91b9f34e4e0d0\nAuthor: Magicloud <1886157+Magicloud@users.noreply.github.com>\nDate:
  \  Sat Feb 2 14:59:48 2019 +0800\n\n    Refine hackage information.\n\ncommit a10112f890a39805f5f49bfa6d479694e8f642bc\nAuthor:
  Magicloud <1886157+Magicloud@users.noreply.github.com>\nDate:   Sat Feb 2 14:55:17
  2019 +0800\n\n    Pretty Document\n    \n    DONE: Document formating. Current document
  just removes all formation,\n    which looks ugly.\n\ncommit 570c98b464dcb0b2a9a20607a7e6fa592fcd2fb6\nAuthor:
  Magicloud <1886157+Magicloud@users.noreply.github.com>\nDate:   Sun Jan 27 17:41:27
  2019 +0800\n\n    Document generation, from URLs pointing to Cairo website.\n    \n
  \   Even this is just a binding library. Proper docuemnt saves end user from\n    opening
  another website and checking for naming and parameters\n    difference.\n    \n
  \   TODO: Document formating. Current document just removes all formation,\n    which
  looks ugly.\n\ncommit d670308e221f532735c76c6e482d6729f1ce7af2\nAuthor: Magicloud
  <1886157+Magicloud@users.noreply.github.com>\nDate:   Fri Jan 18 23:47:54 2019 +0800\n\n
  \   Fix Render generation logic. Now this package is rebuildable and works\n    with
  haddock.\n    \n    Building system skips source files that are not changed after
  last\n    building. Thus those files won't be scanned by `genRender`. Therefore\n
  \   target Render.hs did not contain methods from those since it was always\n    from
  Render.hs in source.\n    \n    Now target Render.hs is checked first to see if
  this is just updating\n    some Decls, or generating new from source.\n\ncommit
  897c705222ce09217b44627c53697633ea52c0d1\nAuthor: 王世达 <1886157+Magicloud@users.noreply.github.com>\nDate:
  \  Wed Jan 16 00:01:31 2019 +0800\n\n    Update README.md\n\ncommit f1a9a8b8ff817e6c01c14cf3b7907ea80a08c7dd\nAuthor:
  Magicloud <1886157+Magicloud@users.noreply.github.com>\nDate:   Tue Jan 15 22:59:14
  2019 +0800\n\n    Update readme. Add `MonadIO Render` and `with`.\n    \n    `IO`
  action in `Render` cannot be done without `MonadIO Render`.\n    \n    `with` is
  `use` in `Render`.\n\ncommit 3d24f3557b94774b3016ea7c2520d8621c02b96d\nAuthor: Magicloud
  <1886157+Magicloud@users.noreply.github.com>\nDate:   Wed Jan 9 15:39:07 2019 +0800\n\n
  \   Cairo Haskell binding. Non-optional part.\n    \n    Cairo binding available
  with GHC 8.6. Trying to make this memory safe\n    and typed.\n    \n    Haddock
  does not work yet.\n"
basic-deps:
  base: ! '>=4.7 && <5'
  monad-extras: -any
  transformers: -any
all-versions:
- 1.16.3
- 1.16.4
- 1.16.5
author: Magicloud
latest: 1.16.5
description-type: markdown
description: |
  # Cairo Haskell binding - Core

  This is a library for Haskell to use Cairo function straightforwardly. This package only contains non-optional functions (which is not controlled by building flags). Optional functions like surface supporting and font supporting are in "cairo-opts".

  The source is inspired by [garetxe](https://github.com/garetxe) and [cohomology](https://github.com/cohomology).

  ## Memory safe

  All the pointers should be reference/destroy -ed as manual required, if possible. Hopefully I did not miss any part or misunderstand the document.

  ## Type

  When making the library, I tried to use more meaningful type name. So one looking at the type signature would know what to do.

  ## Render

  A sugar monad wrapping all functions use `Context` as first parameter, like cairo from gtk2hs does.

  ## Status check

  Checking the status of most Cairo objects is necessary, after creation, or a sequence of actions on it. A sugar method `with` is given for `Render`. And a method `use` is given for regular IO monad.
license-name: BSD-3-Clause
