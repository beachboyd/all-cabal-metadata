homepage: https://camfort.github.io
changelog-type: markdown
hash: 129dc02400a3589ac0b07c2f2379797b1c5ded6f14b01d688f5276495102bc18
test-bench-deps:
  sbv: ! '>=7.0 && <8'
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.6 && <5'
  time: -any
  hspec: ! '>=2.2 && <3'
  text: ! '>=0.11.2.3 && <1.3'
  filepath: ! '>=1.4 && <1.5'
  uniplate: ! '>=1.6.10 && <1.7'
  verifiable-expressions: ! '>=0.4'
  array: ! '>=0.4 && <0.6'
  lattices: ! '>=1.7.1 && <1.8'
  containers: ! '>=0.5.0.0 && <0.7'
  silently: ==1.2.*
  lens: ! '>=4.15.1 && <5'
  binary: ! '>=0.8.3.0 && <0.9'
  fortran-src: ! '>=0.3 && <0.4'
  fgl: ! '>=5.6 && <5.8'
  mtl: ! '>=2.1 && <2.3'
  camfort: -any
  temporary: ! '>=1.2.0.4 && <1.4'
  QuickCheck: ! '>=2.8 && <3'
  hmatrix: ! '>=0.15 && <0.20'
  directory: ! '>=1.2 && <2'
maintainer: Matthew Danish
synopsis: CamFort - Cambridge Fortran infrastructure
changelog: |
  ## 0.906 (June 13, 2019)

  * Update to new fortran-src version 0.3.0.
  * Add array-check, alloc-check, use-check, fp-check and implicit-none features.
    * A collection of sanity checks on Fortran code looking for common issues, possible problems or potential inefficiencies.
  * Introduce a divide-and-conquer methodology for solving units-inference problems, reducing the size of the matrices and taking advantage of SMP where available.
  * Treat constant-expressions and parameter variables as literals, for units-inference purposes, making it easier to retrofit units annotations onto existing programs.
  * Add 'units-infer --show-ast' feature, which decorates the displayed AST (internal data structure) with units information on each expression.
  * Made assorted efficiency improvements to the units solver and other features, especially for large projects with many files.
  * Add 'units-check --dump-mod-file' feature that lets you view an 'fsmod' file's contents with regard to units info.
  * Allow override of Fortran version used by parser using -F option.

  ## 0.905 (May 18, 2018)

  * Greatly improved units-of-measure support
  * Separate verification of modules
  * Prototype invariants checking feature
  * Implicit-none check on program units
  * Fortran 95 support
basic-deps:
  writer-cps-morph: ! '>=0.1.0.2'
  sbv: ! '>=7.0 && <8'
  bytestring: ! '>=0.10 && <0.11'
  writer-cps-transformers: ! '>=0.1.1.2'
  base: ! '>=4.6 && <5'
  text: ! '>=0.11.2.3 && <1.3'
  syb: ! '>=0.4 && <0.8'
  strict: ! '>=0.3.2 && <1'
  filepath: ! '>=1.4 && <1.5'
  matrix: ! '>=0.2.2 && <0.4'
  uniplate: ! '>=1.6.10 && <1.7'
  verifiable-expressions: ! '>=0.4'
  array: ! '>=0.4 && <0.6'
  lattices: ! '>=1.7.1 && <1.8'
  containers: ! '>=0.5.0.0 && <0.7'
  singletons: ! '>=2.2 && <3'
  vinyl: ! '>=0.6 && <1.0'
  lens: ! '>=4.15.1 && <5'
  binary: ! '>=0.8.3.0 && <0.9'
  GenericPretty: ! '>=1.2.2 && <1.3'
  ghc-prim: ! '>=0.3.1.0 && <0.6'
  writer-cps-mtl: ! '>=0.1.1.5'
  fortran-src: ==0.3.*
  fgl: ! '>=5.6 && <5.8'
  mtl: ! '>=2.1 && <2.3'
  mmorph: ! '>=1.0.9 && <2'
  syz: ! '>=0.2 && <0.3'
  camfort: -any
  transformers: ! '>=0.5.5.0 && <0.6'
  optparse-applicative: ! '>=0.14 && <0.15'
  parallel: -any
  hmatrix: ! '>=0.15 && <0.20'
  pretty: ! '>=1.1 && <2'
  template-haskell: ! '>=2.11 && <3'
  vector: ! '>=0.1 && <0.13'
  directory: ! '>=1.2 && <1.4'
all-versions:
- '0.62'
- '0.615'
- '0.700'
- '0.800'
- '0.802'
- '0.804'
- '0.900'
- '0.901'
- '0.902'
- '0.904'
- '0.905'
- '0.906'
author: Matthew Danish, Mistral Contrastin, Andrew Rice, Dominic Orchard
latest: '0.906'
description-type: haddock
description: CamFort is a tool for the analysis, transformation, verification of Fortran
  code.
license-name: Apache-2.0
