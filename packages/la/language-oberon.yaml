homepage: https://github.com/blamario/language-oberon
changelog-type: markdown
hash: 15f5e97c56528612974e1f07a885ed89041fc8a9467637fe588ff224a07e2efb
test-bench-deps:
  language-oberon: -any
  either: ==5.*
  base: ! '>=4.7 && <5'
  filepath: <1.5
  tasty-hunit: -any
  tasty: ! '>=0.7'
  directory: <2
maintainer: blamario@protonmail.com
synopsis: Parser and pretty-printer for the Oberon programming language
changelog: ! '# Revision history for language-oberon


  ## 0.1  -- 2018-04-08


  * First version, but complete enough to be released on an unsuspecting world.

'
basic-deps:
  rank2classes: <1.1
  language-oberon: -any
  either: ==5.*
  grammatical-parsers: ==0.3.*
  base: ! '>=4.7 && <5'
  text: <1.3
  repr-tree-syb: <0.2
  filepath: <1.5
  containers: ! '>=0.5 && <1.0'
  parsers: ! '>=0.12.7 && <0.13'
  prettyprinter: ! '>=1 && <1.3'
  optparse-applicative: -any
  directory: <1.4
all-versions:
- '0.1'
author: Mario Blažević
latest: '0.1'
description-type: haddock
description: ! 'The library and the executable support both the original Oberon and
  the Oberon-2 programming language, as described

  in the respective <http://www.ethoberon.ethz.ch/compiler/index.html#report language
  reports>.


  The grammars in "Language.Oberon.Grammar" attempt to follow the language grammars
  from the reports, while

  generating a semantically meaningful abstract syntax tree; the latter is defined
  in "Language.Oberon.AST". As the

  grammars are ambiguous, it is necessary to resolve the ambiguities after parsing
  all Oberon modules in use.

  "Language.Oberon.Resolver" provides this functionality. Only after the ambiguity
  resolution can the abstract syntax

  tree be pretty-printed using the instances from "Language.Oberon.Pretty".


  The original purpose for the library was to be a test of the underlying

  <http://hackage.haskell.org/package/grammatical-parsers grammatical-parsers> library.
  The experiment succeeded, so    the package can be used in practice.'
license-name: GPL-3
