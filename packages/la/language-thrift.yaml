homepage: https://github.com/abhinav/language-thrift#readme
changelog-type: markdown
hash: 5fe79fcf7eb30e5b774170ac0b52326e77f868e9d4e6a61091605bd231638532
test-bench-deps:
  ansi-wl-pprint: ! '>=0.6 && <0.7'
  language-thrift: -any
  base: ! '>=4.7 && <5'
  hspec: ! '>=2.0'
  text: ! '>=1.2'
  megaparsec: ! '>=5.0 && <6.0'
  semigroups: ! '>=0.18 && <0.19'
  containers: ! '>=0.5 && <0.6'
  transformers: -any
  scientific: ! '>=0.3 && <0.4'
  QuickCheck: ! '>=2.5'
  hspec-discover: ! '>=2.1'
maintainer: Abhinav Gupta <mail@abhinavg.net>
synopsis: Parser and pretty printer for the Thrift IDL format.
changelog: ! "0.10.0.0 (2016-09-25)\n=====================\n\n-   Breaking: Consolidate
  struct, union, and exception AST types into a single\n    data type: `Struct`. Whether
  the object is a struct, union, or exception is\n    now determined by the `StructKind`
  attribute.\n-   Breaking: Deprecated module `Language.Thrift.Types` has now been
  removed.\n\n0.9.0.2 (2016-08-31)\n====================\n\n-   Disallow reserved
  keywords from being used as identifier names.\n\n0.9.0.1 (2016-05-26)\n====================\n\n-
  \  Build with GHC 8.\n\n0.9.0.0 (2016-05-15)\n====================\n\n- Deprecate
  the `Language.Thrift.Types` in favor of `Language.Thrift.AST`.\n- Upgrade to `megaparsec`
  5.0.\n\n0.8.0.2 (2016-08-31)\n====================\n\n-   Disallow reserved keywords
  from being used as identifier names.\n\n0.8.0.1 (2016-05-24)\n====================\n\n-
  \  Build with GHC 8.\n\n0.8.0.0 (2016-02-09)\n====================\n\nThis release
  contains breaking changes. The number of transitive dependencies\nhas been reduced
  significantly.\n\n-   Switched parser to `megaparsec`. `trifecta` and `parsers`
  bring too many\n    dependencies with them.\n-   Drop support for `wl-pprint`. Only
  `ansi-wl-pprint` is supported now.\n-   Drop dependency on `lens`. Lenses for fields
  of the AST elements are still\n    provided but prisms are not. Use `Control.Lens.makePrisms`
  to derive your\n    own if needed.\n\n0.7.0.1 (2016-01-27)\n====================\n\n-
  \  Drop use of `TemplateHaskell`.\n\n0.7.0.0 (2016-01-15)\n====================\n\n-
  \  Added source annotations to all `TypeReference` and\n    `ConstValue` constructors.\n-
  \  Added `name` and `srcAnnot` lenses for `Type` and `Definition`.\n\n0.6.2.0 (2016-01-05)\n====================\n\n-
  \  Use more concrete types for lenses which don't need overloading.\n\n0.6.1.0 (2016-01-03)\n====================\n\n-
  \  Output generated by the `ansi-wl-pprint` pretty printer will be colored\n    using
  ANSI escape codes.\n\n0.6.0.1 (2016-01-02)\n====================\n\n-   Export `Pretty`
  instances from `Language.Thrift.Types` instead of requiring\n    a separate import
  of the corresponding `Pretty` module.\n\n0.6.0.0 (2016-01-02)\n====================\n\n-
  \  Added a pretty printer based on `ansi-wl-pprint`.\n-   Both pretty printing modules
  now export instances of `Pretty` for relevant\n    elements of the AST. These instances
  use `defaultConfig` for printing.\n\n0.5.0.0 (2015-12-27)\n====================\n\nThe
  AST representation has been overhauled to be more consistent and\naccessible. As
  a result, this release contains a number of breaking changes:\n\n-   Moved `Header`
  records into `Include` and `Namespace` types.\n-   Moved `ConstDefinition` record
  into separate type, `Const`.\n-   Moved `ServiceDefinition` record into separate
  type, `Service`.\n-   Moved `Type` records into separate types: `Typedef`, `Enum`,
  `Struct`,\n    `Union`, `Exception`, `Senum`.\n-   Renamed `FieldType` to `TypeReference`.\n-
  \  Renamed parser and pretty printer for `TypeReference` to `typeReference`.\n-
  \  Renamed the following record fields: `constType` to `constValueType`,\n    `typedefType`
  to `typedefTargetType`, `fieldType` to `fieldValueType`, and\n    `fieldDefault`
  to `fieldDefaultValue`.\n-   Hide `function` parser and pretty printer.\n-   Moved
  type annotations for defined types into the records for the\n    types themselves.\n\nOther
  changes:\n\n-   Added lenses and prisms for AST types where appropriate.\n-   Parsing
  will fail if the end of the document is not reached when the\n    parser stops.
  This fixes the bug where the parser would stop half way\n    through a file when
  it saw a recoverable error.\n-   Added source annotations to headers, type references
  (`DefinedType`) and\n    constant value references (`ConstIdentifer`).\n-   Added
  `i8` as an alias for `byte`.\n-   Type annotations are now allowed to have no associated
  value.\n-   Expose parsers and pretty printers for different headers and definitions.\n-
  \  Fixed a bug which would cause parsing to fail if a definition ended with a\n
  \   semicolon or a comma.\n-   Drop dependency on mtl.\n\n0.4.0.0 (2015-08-02)\n====================\n\n-
  \  Add pretty printing module.\n-   Parsers of different constructors are no longer
  exported by the parsing\n    module; instead only the parsers for their corresponding
  types\n    are exported.\n-   Rename record for field requiredness from `fieldRequiredNess`
  to\n    `fieldRequiredness`.\n\n0.3.0.0 (2015-07-31)\n====================\n\n-
  \  Allow changing the underlying parser to any parser that implements the\n    `TokenParsing`
  class from `parsers`.\n-   Add `thriftIDLParser` for standard use cases.\n-   Add
  `Language.Thrift.Parser.Trifecta` with a standard\n    Trifecta-based parser.\n\n0.2.0.0
  (2015-06-12)\n====================\n\n-   Track starting positions in source annotations.\n-
  \  Move docs to a separate field.\n\n0.1.0.1 (2015-06-02)\n====================\n\n-
  \  Allow `base` 4.9.\n\n0.1.0.0 (2015-04-05)\n====================\n\n-   Initial
  release.\n"
basic-deps:
  ansi-wl-pprint: ! '>=0.6 && <0.7'
  base: ! '>=4.7 && <5'
  text: ! '>=1.2'
  megaparsec: ! '>=5.0 && <6.0'
  semigroups: ! '>=0.18 && <0.19'
  containers: ! '>=0.5 && <0.6'
  transformers: -any
  scientific: ! '>=0.3 && <0.4'
all-versions:
- 0.9.0.0
- 0.9.0.1
- 0.9.0.2
- 0.10.0.0
author: Abhinav Gupta
latest: 0.10.0.0
description-type: markdown
description: ! "[![build-status]](https://travis-ci.org/abhinav/language-thrift)\n\n`language-thrift`
  provides a parser and pretty printer for the [Thrift IDL\nformat]. In addition to
  parsing the IDL, it keeps track of Javadoc-style\ncomments (`/** ... */`) and attaches
  them to the type, service, function, or\nfield, above which they were added. These
  are retained when the document is\nsent through the pretty printer.\n\nThe parser
  uses [`megaparsec`] and the pretty printer [`ansi-wl-pprint`]. The\npretty printer
  can produce syntax highlighted output.\n\nHaddock-generated docs are available on
  [Hackage] and [here].\n\n  [build-status]: https://travis-ci.org/abhinav/language-thrift.svg?branch=master\n
  \ [Thrift IDL format]: http://thrift.apache.org/docs/idl\n  [`megaparsec`]: http://hackage.haskell.org/package/megaparsec\n
  \ [`ansi-wl-pprint`]: http://hackage.haskell.org/package/ansi-wl-pprint\n  [Hackage]:
  http://hackage.haskell.org/package/language-thrift\n  [here]: http://abhinavg.net/language-thrift/\n"
license-name: BSD-3-Clause
