homepage: http://hub.darcs.net/thielema/lapack/
changelog-type: ''
hash: be458fcd30f992c31203cc4a9728e122edc8f793740bc47a7b13d2511e5776b2
test-bench-deps:
  data-ref: ! '>=0.0.1 && <0.1'
  lapack: -any
  netlib-ffi: -any
  base: -any
  semigroups: ! '>=0.18.3 && <0.19'
  utility-ht: -any
  unique-logic-tf: ! '>=0.5.1 && <0.6'
  non-empty: ! '>=0.3.1'
  comfort-array: -any
  tfp: -any
  quickcheck-transformer: ! '>=0.3 && <0.4'
  ChasingBottoms: ! '>=1.2.2 && <1.4'
  monoid-transformer: ! '>=0.0.3 && <0.1'
  transformers: -any
  random: ! '>=1.1 && <1.2'
  QuickCheck: ! '>=2.5 && <3'
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: Numerical Linear Algebra using LAPACK
changelog: ''
basic-deps:
  netlib-ffi: ! '>=0.1.1 && <0.2'
  fixed-length: ! '>=0.2 && <0.3'
  base: ! '>=4.5 && <5'
  lapack-ffi: ! '>=0.0.1 && <0.1'
  lazyio: ! '>=0.1 && <0.2'
  guarded-allocation: ! '>=0.0 && <0.1'
  utility-ht: ! '>=0.0.10 && <0.1'
  non-empty: ! '>=0.3 && <0.4'
  comfort-array: ! '>=0.3 && <0.4'
  tfp: ! '>=1.0.1 && <1.1'
  blas-ffi: ! '>=0.0 && <0.2'
  transformers: ! '>=0.3 && <0.6'
  deepseq: ! '>=1.3 && <1.5'
  boxes: ! '>=0.1.5 && <0.2'
all-versions:
- '0.0'
- '0.1'
- '0.2'
- 0.2.1
- 0.2.2
author: Henning Thielemann <haskell@henning-thielemann.de>
latest: 0.2.2
description-type: haddock
description: |-
  This is a high-level interface to LAPACK.
  It provides solvers for simultaneous linear equations,
  linear least-squares problems, eigenvalue and singular value problems
  for matrices with certain kinds of structures.

  Features:

  * Based on @comfort-array@:
  Allows to precisely express one-column or one-row matrices,
  as well as dense, square, triangular, banded, symmetric and block matrices.

  * Support all data types that are supported by LAPACK,
  i.e. Float, Double, Complex Float, Complex Double

  * No need for c2hs, hsc, Template Haskell or C helper functions

  * Dependency only on BLAS and LAPACK, no GSL

  * Works with matrices and vectors with zero dimensions.

  * Separate formatting operator @(##)@:
  Works better for tuples of matrices and vectors than 'show'.
  'Show' is used for code one-liners
  that can be copied back into Haskell modules.

  See also: @hmatrix@.
license-name: BSD-3-Clause
