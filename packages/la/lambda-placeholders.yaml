homepage: https://github.com/mmirman/lambda-placeholders
changelog-type: ''
hash: 393f451a3d32ab418b2df237ec4344741588808982d8b14f39fa5eff2d440ddd
test-bench-deps: {}
maintainer: matt@mirman.com
synopsis: A library to emulate laceholders similar to Scala.
changelog: ''
basic-deps:
  base: ! '>=0 && <=7'
all-versions:
- 0.0.0.0
author: Matthew Mirman
latest: 0.0.0.0
description-type: markdown
description: ! "lambda-placeholders\n===================\n\nlambda-placeholders is
  a Haskell library to emulate the placeholders feature of Scala. \n\nBackground\n----------\n\n*
  Placeholders in Scala act similar to those used in category theory.\n* Rather than
  create a lambda or name a function, an underscore is used in place of a parameter
  and the function is abstracted over that location.\n* This placeholders library
  doesn't use underscores, rather it leverages similar capabilities found in TupleSections.\n*
  A description of Scala placeholders [can be found here](http://www.artima.com/pins1ed/functions-and-closures.html#8.5).
  \ \n\nExample\n-------\n\n```haskell\n{-# LANGUAGE\n TupleSections \n #-}\nmodule
  Main where \nimport Language.Placeholders\n\nfoo (a,b,c) = a + b + c\n\ncurried_foo
  = foo.$.(2, , )\n\nmain = do\n    putStrLn $ show $ curried_foo 4 5\n```\n"
license-name: BSD-3-Clause
