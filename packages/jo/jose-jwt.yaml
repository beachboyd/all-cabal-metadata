homepage: http://github.com/tekul/jose-jwt
changelog-type: markdown
hash: 75f5c699e6e0655705eff61a171361fd2b573cee0580ff912b8f683b4e78a023
test-bench-deps:
  either: ! '>=4.0'
  bytestring: -any
  base: -any
  unordered-containers: -any
  hspec: ! '>=1.6'
  text: -any
  criterion: -any
  doctest: ! '>=0.9.11'
  HUnit: ! '>=1.2'
  memory: -any
  jose-jwt: -any
  cryptonite: -any
  mtl: -any
  QuickCheck: ! '>=2.4'
  aeson: -any
  vector: -any
maintainer: Luke Taylor <tekul.hs@gmail.com>
synopsis: JSON Object Signing and Encryption Library
changelog: ! '0.7.8

  -----


  * Switch from EitherT to ExceptT to allow compiling with latest version of ''either''
  package.


  0.7.7

  -----


  * User ByteArray and ScrubbedBytes from memory package in preference to ByteString
  in internal crypto code.


  0.7.6

  -----


  * Fixed exception when JWT contained invalid Base64 (issue #15).

  * Add generateSymmetricKey utility function to Jwk module.


  0.7.5

  -----


  * A JWT parser is now used to separate parsing and decoding into separate stages
  (internal change).


  0.7.4

  -----


  * Stricter checking of AES key lengths when looking for a valid JWK to encode/decode
  an AES-KW JWT.


  0.7.3

  -----


  * Add JSON test data to extra-source-files.


  0.7.2

  -----


  * Remove test dependency on aeson-qq


  0.7.1

  -----


  * Update cryptonite version to 0.19 to avoid security issues

  * Fix broken benchmark code

  * Better error message for invalid key length when using AES keywrap


  0.7

  ---


  * Add support for AES key wrap in JWEs.

  * Support A192GCM and A192CBC-HS384 algorithms.

  * Switch to cryptonite library.


  0.6.2

  -----


  * Remove dependency on `errors` package.


  0.6.1

  -----


  * Minor internal changes to fix build on GHC 7.10.


  0.6

  ---


  * Change KeyId type to allow use of a UTCTime string for the identifier.

  * Internal crypto fixes to prevent exceptions from external libraries.


  0.5

  ---


  * Add JwtEncoding type. Changes API of `Jwt.encode` and `Jwt.decode`.


  0.4.2

  -----


  * Fix in the code for finding suitable JWKs for encoding/decoding.


  0.4.1.1

  -------


  * Added `doctest` flag to cabal file to allow doctests to be disabled.


  0.4.1

  -----


  * Add cprng-aes dependency to doctests to stop test failure on travis and nixos
  hydra builds.


  0.4

  ---


  * Changed use of `Jwt` type to represent an encoded JWT.

  * Introduced `Payload` type to allow setting the `cty` header value correctly for
  nested JWTs.

  * Added an explicit `Unsecured` type for a decoded JWT, to make it obvious when
  the content is not signed or encrypted.

  * Fixed some bugs in JSON encoding and decoding of EC JWKs.


  0.3.1

  -----


  Changed the signature of `Jwt.encode` to take a list of `Jwk` rather than a single
  key. The key will be selected from

  the list based on the specified algorithms.


  0.3

  ---


  * New support for JWS validation using elliptic curve algorithms.

  * Added `Jwt.encode` function which takes a JWK argument, allowing key data (currently
  the key ID) to be encoded in the token header.

'
basic-deps:
  cereal: ! '>=0.4'
  either: -any
  bytestring: ! '>=0.9'
  base: ! '>=4.6 && <5'
  time: ! '>=1.4'
  unordered-containers: ! '>=0.2'
  text: ! '>=0.11'
  memory: ! '>=0.10'
  containers: ! '>=0.4'
  cryptonite: ! '>=0.19'
  mtl: ! '>=2.1.3.1'
  attoparsec: ! '>=0.12.0.0'
  transformers: ! '>=0.3'
  aeson: ! '>=0.8.0.2'
  transformers-compat: ! '>=0.4'
  vector: ! '>=0.10'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.4'
- '0.4.1'
- '0.4.1.1'
- '0.4.2'
- '0.5'
- '0.6'
- '0.6.1'
- '0.6.2'
- '0.7'
- '0.7.1'
- '0.7.2'
- '0.7.3'
- '0.7.4'
- '0.7.5'
- '0.7.6'
- '0.7.7'
- '0.7.8'
author: Luke Taylor <tekul.hs@gmail.com>
latest: '0.7.8'
description-type: haddock
description: ! '

  An implementation of the JOSE suite of IETF standards

  and the closely related JWT (JSON web token) spec

  (<https://tools.ietf.org/html/rfc7519/>).


  Both signed and encrypted JWTs are supported, as well as simple

  JWK keys.'
license-name: BSD3
