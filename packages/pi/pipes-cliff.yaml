homepage: http://www.github.com/massysett/pipes-cliff
changelog-type: ''
hash: 8a122d26888c8e9503de52c5d25dedec82774c3073dbc7c3f13506731c56a5f0
test-bench-deps: {}
maintainer: omari@smileystation.com
synopsis: Streaming to and from subprocesses using Pipes
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.4'
  unix: ! '>=2.7.2'
  stm: ! '>=2.4.4'
  base: ! '>=4.9 && <5'
  process: ! '>=1.2.0.0'
  async: ! '>=2.0'
  pipes: ! '>=4.1'
  pipes-safe: ! '>=2.2'
all-versions:
- 0.2.0.0
- 0.4.0.0
- 0.6.0.0
- 0.8.0.0
- 0.8.0.2
- 0.10.0.0
- 0.10.0.2
- 0.10.0.4
- 0.12.0.0
author: Omari Norman
latest: 0.12.0.0
description-type: markdown
description: ! '# pipes-cliff


  pipes-cliff helps you spawn subprocesses and send data to and

  from them with the Pipes library.  Subprocesses are opened using the

  process library, and the processes and handles are properly cleaned

  up even if there are exceptions.


  Though this library uses the Pipes library, I have not coordinated

  with the author of the Pipes library in any way.  Any bugs or design

  flaws are mine and should be reported to


  http://www.github.com/massysett/pipes-cliff/issues


  Though I hope pipes-cliff works on Windows systems, I have only

  tested it on Unix-like systems.  Any reports on how this library works

  on Windows are appreciated.


  ## Building pipes-cliff


  If you get the files from Hackage, just build them in the usual way

  using cabal-install.


  To build the files from Github, you will need to generate the Cabal

  file.  The Cabal file is generated using the Cartel package, so first

  run


  cabal install cartel


  and then, from the main directory (the one with the generate script),

  run


  sh generate


  (at least, this is how you would do it on a Unix-like system.)


  If you are having trouble getting pipes-cliff to build, examine the

  build history here:


  [![Build Status](https://travis-ci.org/massysett/pipes-cliff.svg?branch=master)](https://travis-ci.org/massysett/pipes-cliff)


  Previous builds will show you the dependencies that were used in the

  past to build the library.


  ## Why the name?


  It''s named after Cliff Clavin, the mailman on the TV show

  *Cheers*.  pipes-cliff uses mailboxes to send information to and

  from subprocesses.


  The obvious name, pipes-process, has already been taken.  At the

  time of this writing, I saw at least two libraries with this name,

  though neither was posted to Hackage.


  ## Similar libraries


  Take a look at these other libraries; they might meet your needs.


  ### Dealing specifically with subprocesses and streaming


  * process-streaming


  http://hackage.haskell.org/package/process-streaming


  * pipes-shell


  https://hackage.haskell.org/package/pipes-shell


  * Data.Conduit.Process


  https://www.fpcomplete.com/user/snoyberg/library-documentation/data-conduit-process


  ### Larger scripting frameworks


  * HSH


  https://hackage.haskell.org/package/HSH


  * Turtle


  https://hackage.haskell.org/package/turtle


  * Shelly


  https://hackage.haskell.org/package/shelly


  Also, look at this discussion on the Pipes mailing list:


  https://groups.google.com/d/msg/haskell-pipes/JFfyquj5HAg/Lxz7p50JOh4J


  ## License


  This package is released under the BSD3 license. Please see the LICENSE file.


  ## Building this project


  The Cabal file for this project is generated using the Cartel package.

  To generate the Cabal file, simply run `sh buildprep`.

  You must run this command from the project''s main directory.

  You will need to have the `stack` program installed.


  Stack is available at:

  http://www.haskellstack.org

'
license-name: BSD-3-Clause
