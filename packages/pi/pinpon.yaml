homepage: https://github.com/quixoftic/pinpon#readme
changelog-type: markdown
hash: 4adb086e08b796060a429dbd80ffcd2afb2a5ceaa452ac94f2c6824af194b496
test-bench-deps:
  exceptions: -any
  bytestring: -any
  base: -any
  hspec: ==2.4.*
  doctest: ! '>=0.10.1 && <1'
  protolude: -any
  servant-swagger: -any
  pinpon: -any
  quickcheck-instances: ==0.3.*
  QuickCheck: ! '>=2.9 && <2.11'
  aeson: -any
maintainer: Drew Hess <dhess-src@quixoftic.com>
synopsis: A gateway for various cloud notification services
changelog: ! "# pinpon changelog\n\n## 0.2.0.1\n\nChanges:\n\n  - This package now
  uses Protolude.\n\n  - Switch to hpack.\n\n  - We only support GHC 8.0.2 and 8.2.2
  now.\n\n  - The `test-hlint` cabal flag is now disabled by default.\n\n  - Updated
  copyright year.\n\n  - Requires `hlint` 2.0.*.\n\n  - Much improved Nix support,
  including a default fixed nixpkgs\n    revision, Hydra jobsets, and Nix/Hydra builds
  against LTS package\n    sets.\n\n  - Test on `armv7l`.\n\nFixes:\n\n  - All dependencies
  should now have PVP bounds.\n\n  - `swagger.json` must be a `data-file` for Stack
  tests.\n\n  - Remove an unused `mellon-core` dependency from stack.yaml.\n\n## 0.2.0.0\n\n-
  Requires Servant 0.11+.\n\n- Other minor fixes.\n\n## 0.1.0.0\n\nInitial release.\n"
basic-deps:
  warp: ==3.2.*
  http-client: ! '>=0.5.7 && <0.6'
  amazonka: ! '>=1.4.5 && <1.6'
  exceptions: ! '>=0.8.3 && <0.9'
  amazonka-sns: ! '>=1.4.5 && <1.6'
  lucid: ! '>=2.9.9 && <3'
  servant-docs: ==0.11.*
  bytestring: ! '>=0.10.8 && <0.11'
  servant-swagger-ui: ! '>=0.2.4 && <0.3'
  wai: ==3.2.*
  base: ==4.*
  time: ! '>=1.6 && <1.9'
  aeson-pretty: ==0.8.*
  servant-client: ==0.11.*
  text: ! '>=1.2.2 && <1.3'
  network: ! '>=2.6.3 && <2.7'
  protolude: ==0.2.*
  servant-swagger: ! '>=1.1.4 && <1.2'
  pinpon: -any
  servant-server: ==0.11.*
  servant: ==0.11.*
  containers: ! '>=0.5.7 && <0.6'
  lens: ==4.15.*
  amazonka-core: ! '>=1.4.5 && <1.6'
  http-client-tls: ! '>=0.3.5 && <0.4'
  mtl: ==2.2.1
  transformers-base: ! '>=0.4.4 && <0.5'
  swagger2: ! '>=2.1.6 && <2.3'
  transformers: ! '>=0.5.2 && <0.6'
  optparse-applicative: ! '>=0.13.2 && <0.15'
  servant-lucid: ! '>=0.7.1 && <0.8'
  optparse-text: ==0.1.*
  resourcet: ! '>=1.1.9 && <1.2'
  http-types: ! '>=0.9.1 && <0.10'
  aeson: ! '>=1.1 && <1.3'
  hpio: -any
all-versions:
- '0.2.0.1'
author: Drew Hess <dhess-src@quixoftic.com>
latest: '0.2.0.1'
description-type: markdown
description: ! '# pinpon


  `pinpon` is a silly little service that implements an

  Internet-enabled doorbell in Haskell, using

  [Amazon Simple Notification Service](https://aws.amazon.com/sns/) to notify

  subscribers that the button has been pushed. Effectively, it''s a

  simple REST service which, when `POST`ed to, will send a notification

  to an SNS topic. You can then build a client application which

  subscribes to that topic and notifies the user when the doorbell has

  been pressed. No such client application is included in the `pinpon`

  package, but an iOS app may be made available at some point in the

  future.


  The package provides a `pinpon-gpio` executable, intended for use on

  Linux systems with GPIO functionality. When the specified GPIO pin is

  triggered (e.g., via a momentary switch such as

  [this one](https://www.e-switch.com/product-catalog/anti-vandal/product-lines/pv3-series-illuminated-sealed-long-life-anti-vandal-switches#.WHW8_7GZNE4)),

  `pinpon-gpio` will `POST` a notification to the specified `pinpon`

  server.


  Why not simply build the Amazon SNS functionality into the

  `pinpon-gpio` executable and eliminate the `pinpon` REST service?

  Chiefly because the host system running the `pinpon-gpio` executable

  may be particularly vulnerable to physical attacks (after all, it is

  presumably hooked up to a doorbell button that is exposed in a public

  space). I did not feel comfortable storing my Amazon AWS credentials

  on such a device, nor even allowing such a device to communicate

  directly with the public Internet. By proxying the AWS access via a

  more physically secure host running the `pinpon` server on my internal

  network, I can better protect my AWS credentials and limit network

  access on the GPIO device to just the `pinpon` service.

'
license-name: BSD3
