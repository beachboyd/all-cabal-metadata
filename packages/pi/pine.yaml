homepage: https://github.com/grinshpon/pine#readme
changelog-type: markdown
hash: 0618d2d03bce6332d5531bc59dd079a17486e04adff048de3a15a12a47a78faf
test-bench-deps:
  stm: '>=2.4 && <2.6'
  base: '>=4.7 && <5'
  text: '>=1.2.3 && <1.3'
  sdl2: '>=2.5'
  containers: '>=0.6 && <0.7'
  pine: -any
  linear: -any
  mtl: '>=2.2'
  sdl2-image: '>=0.1 && <2.1'
maintainer: GrinshponDaniel@protonmail.com
synopsis: Functional 2D Game Framework
changelog: |
  # Changelog for pine

  ## Unreleased changes
basic-deps:
  stm: '>=2.4 && <2.6'
  base: '>=4.7 && <5'
  text: '>=1.2.3 && <1.3'
  sdl2: '>=2.5'
  containers: ==0.6.*
  pine: -any
  linear: -any
  mtl: '>=2.2'
  sdl2-image: '>=0.1 && <2.1'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
author: Daniel Grinshpon
latest: 0.1.0.3
description-type: markdown
description: |
  # pine

  ![logo](https://github.com/Grinshpon/pine/blob/master/src/Media/logo.png)
  Functional 2D Game Framework in Haskell

  Inspired by [CodeWorld](https://github.com/google/codeworld) and [Elm](https://elm-lang.org/)

  <br>

  <br>

  Currently a Work In Progress, but technically barely functional. The example in the app folder works, it displays an 800x800 window with the Pine logo.

  Documentation is currently minimal and that is something I'm working on, as well as everything else.

  ### TODO:

  - [x] Textures
  - [ ] Events
  - [ ] Sounds
  - [ ] Text
  - [ ] Improved/cleaner backend
  - [ ] Optional higher level api with premade game state and entities
license-name: Zlib
