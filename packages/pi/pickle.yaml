homepage: ''
changelog-type: markdown
hash: 74bdc916a10fb928c6bdd1ed9ed263e35bf75490ccdcfb48415f7f288abeb8f7
test-bench-deps: {}
maintainer: bob.blackmon@ymail.com
synopsis: Instant StatsD in Haskell
changelog: |
  # Revision history for pickle

  ## 0.1.0.0 -- YYYY-mm-dd

  * First version. Released on an unsuspecting world.
basic-deps:
  stm: ! '>=2.4 && <2.6'
  base: ^>=4.12.0.0
  text: ! '>=1.2.3.1 && <1.3'
  network: ! '>=2.8.0.0 && <3.2'
  containers: ! '>=0.6.0.1 && <0.6.3'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 1.0.0.0
author: Bob Blackmon
latest: 1.0.0.0
description-type: markdown
description: |
  # pickle
  Instant StatsD in Haskell. Easy to implement in a program you've already written without any refactoring to pass any sockets/configuration around.

  ## Usage
  Call `setupPickle defaultConfig` with your main function, e.g.
  ```haskell
  {-# LANGUAGE OverloadedStrings #-}
  import qualified Data.Map.Strict as M

  main :: IO()
  main = setupPickle defaultConfig $ do
  {...}
  ```
  Then to send metrics you can just call one of these functions:
  ```haskell
  let name  = "gauge.name"
      value = 42
      tags  = M.fromList [("key","value), ("tag2","value")]
  gauge   name value (Just tags)
  timer   name value (Just tags) Nothing
  counter name value (Just tags) Nothing
  ```

  Pickle will take care of the rest. He's a good boy.

  ![my dogger, pickle](https://i.imgur.com/9WxMnIj.jpg)
license-name: MIT
