homepage: ''
changelog-type: markdown
hash: eac82406927d05b6cc7c5d2daf1aacc9336df04271cbb9ffc4084f1c77c3667d
test-bench-deps:
  test-framework: ! '>=0.4 && <1'
  base: ! '>=4.4 && <5'
  test-framework-quickcheck2: ! '>=0.2.0 && <0.4'
  criterion: ! '>=1.1.1.0 && <1.2'
  pipes: -any
  mtl: ! '>=2.1 && <2.3'
  transformers: ! '>=0.2.0.0 && <0.6'
  optparse-applicative: ! '>=0.12 && <0.14'
  QuickCheck: ! '>=2.4 && <3'
maintainer: Gabriel439@gmail.com
synopsis: Compositional pipelines
changelog: ! "4.3.8\n\n* Increase upper bound on `exceptions`\n\n4.3.7\n\n* Documentation
  fix\n\n4.3.6\n\n* Fix implementation of `pass` in `MonadWriter` instance for `Proxy`\n\n4.3.5\n\n*
  Support `Semigroup` being a super-class of `Monoid`\n\n4.3.4\n\n* Increase upper
  bound on `mmorph`\n\n4.3.3\n\n* Make `X` a synonym for `Data.Void.Void`\n\n4.3.2\n\n*
  BUG FIX: Fix `MMonad` instance for `ListT`\n    * The old instance was an infinite
  loop\n\n4.3.1\n\n* Support building against `ghc-7.4`\n\n4.3.0\n\n* BREAKING CHANGE:
  Remove `Alternative`/`MonadPlus` instances for `Proxy`\n    * See commit 08e7302f43dbf2a40bd367c5ee73ee3367e17768
  which explains why\n* Add `Traversable` instance for `ListT`\n* New `MonadThrow`/`MonadCatch`/`MMonad`/`Semigroup`/`MonadZip`
  instances for\n  `ListT`\n* New `MonadThrow`/`MonadCatch` instances for `Proxy`\n*
  Fix lower bound on `mtl`\n* Increase upper bound on `optparse-applicative`\n\n4.2.0\n\n*
  BREAKING CHANGE: Switch from `ErrorT` to `ExceptT`\n* Add `Foldable` instance for
  `ListT`\n* Fix all warnings\n* Enable foldr/build fusion for `toList`\n\n4.1.9\n\n*
  Increase lower bound on `criterion`\n* Increase upper bound on `transformers` for
  tests/benchmarks\n* Optimize code by delaying `INLINABLE` annotations\n\n4.1.8\n\n*
  Increase upper bound on `transformers`\n* Prepare for MRP (Monad of no Return Proposal)\n\n4.1.7\n\n*
  Increase lower bound on `deepseq`\n* Add `unfoldr`\n* Add `loop`\n* Add `toListM'`\n*
  Improve efficiency of `drop`\n* License tutorial under Creative Commons license\n\n4.1.6\n\n*
  Increase lower bound on `base`\n* Add diagrams to `Pipes.Core` documentation\n*
  Add `mapM_`\n* Add `takeWhile'`\n* Add `seq`\n* Improve efficiency of `toListM`\n\n4.1.5\n\n*
  Increase upper bound on `criterion`\n\n4.1.4\n\n* Increase upper bound on `criterion`\n*
  Add `Monoid` instance for `Proxy`\n\n4.1.3\n\n* Increase lower bound on `mtl`\n*
  Re-export `void`\n* Add `fold'`\n* Add `foldM'`\n\n4.1.2\n\n* Increase upper bounds
  on `transformers` and `mtl`\n\n4.1.1\n\n* Add `runListT`\n* Add `MMonad` instance
  for `Proxy`\n* Add `repeatM`\n* Add laws to documentation of `Pipes.Prelude` utilities\n\n4.1.0\n\n*
  Remove Haskell98 support\n* Use internal `X` type instead of `Data.Void`\n* Document
  `Pipes.Lift` module:w\n* Add `drain`\n* Add `sequence`\n\n4.0.2\n\n* Improve performance
  of `each`\n* Add tutorial appendix explaining how to work around quadratic time
  complexity\n\n4.0.1\n\n* Remove `WriterT` and `RWST` benchmarks\n* Add `Enumerable`
  instance for `ErrorT`\n* Add cabal flag for Haskell98 compilation\n* Add several
  rewrite rules\n* Add `mtl` instances for `ListT`\n* Fix implementation of `pass`,
  which did not satisfy `Writer` laws\n* Implement `fail` for `ListT`\n* Add type
  synonym table to tutorial appendix\n* Add QuickCheck tests for `pipes` laws\n* Add
  `mapFoldable`\n* Add `Monoid` instance for `ListT`\n* Add manual proofs of `pipes`
  laws in `laws.md`\n\n4.0.0\n\nMajor upgrade of `pipes` to no longer use `Proxy`
  type class\n"
basic-deps:
  exceptions: ! '>=0.4 && <0.10'
  void: ! '>=0.4 && <0.8'
  base: ! '>=4.4 && <5'
  semigroups: ! '>=0.17 && <0.19'
  mtl: ! '>=2.2.1 && <2.3'
  mmorph: ! '>=1.0.0 && <1.2'
  transformers: ! '>=0.2.0.0 && <0.6'
all-versions:
- '1.0'
- '1.0.1'
- '1.0.2'
- '2.0.0'
- '2.1.0'
- '2.2.0'
- '2.3.0'
- '2.4.0'
- '2.5.0'
- '3.0.0'
- '3.1.0'
- '3.2.0'
- '3.3.0'
- '4.0.0'
- '4.0.1'
- '4.0.2'
- '4.1.0'
- '4.1.1'
- '4.1.2'
- '4.1.3'
- '4.1.4'
- '4.1.5'
- '4.1.6'
- '4.1.7'
- '4.1.8'
- '4.1.9'
- '4.2.0'
- '4.3.0'
- '4.3.1'
- '4.3.2'
- '4.3.3'
- '4.3.4'
- '4.3.5'
- '4.3.6'
- '4.3.7'
- '4.3.8'
author: Gabriel Gonzalez
latest: '4.3.8'
description-type: haddock
description: ! '`pipes` is a clean and powerful stream processing library that lets
  you build

  and connect reusable streaming components


  Advantages over traditional streaming libraries:


  * /Concise API/: Use simple commands like ''for'', (''>->''), ''await'', and ''yield''


  * /Blazing fast/: Implementation tuned for speed, including shortcut fusion


  * /Lightweight Dependency/: @pipes@ is small and compiles very rapidly,

  including dependencies


  * /Elegant semantics/: Use practical category theory


  * /ListT/: Correct implementation of ''ListT'' that interconverts with pipes


  * /Bidirectionality/: Implement duplex channels


  * /Extensive Documentation/: Second to none!


  Import "Pipes" to use the library.


  Read "Pipes.Tutorial" for an extensive tutorial.'
license-name: BSD3
