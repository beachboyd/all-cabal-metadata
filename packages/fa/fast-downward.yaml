homepage: https://github.com/circuithub/fast-downward
changelog-type: markdown
hash: fbdd35599cb8140970d9dd5512b6856fb725d44ec63b1d3831554ce2ecc14e76
test-bench-deps: {}
maintainer: Ollie Charles <ollie@ocharles.org.uk>
synopsis: Solve classical planning problems (STRIPS/SAS+) using Haskell & Fast Downward.
changelog: |
  # 0.1.1.0 -- 2019-01-09

  * Support `containers-0.6`.
  * Added `instance MonadFail Effect`
  * Bumped `base` upper bound to `< 4.13`
  * Bumped `list-t` lower bound to `>= 1.0.2` (this is necessary for internal
    reasons related to generalised newtype deriving)

  # 0.1.0.1 -- 2019-01-02

  * Removed a stray `putStrLn`.

  # 0.1.0.0

  * Initial release!
basic-deps:
  base: ^>=4.11.1.0 || ^>=4.12.0.0
  text: ^>=1.2.3.0
  list-t: ^>=1.0.2
  process: ^>=1.6.3.0
  containers: ^>=0.5.11.0 || ^>=0.6
  mtl: ^>=2.2.2
  transformers: ^>=0.5.5.0
  temporary: ^>=1.3
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
author: ''
latest: 0.1.1.0
description-type: haddock
description: |-
  @fast-downward@ is a library for modelling classical planning problems and
  solving them using the Fast Downward engine. For general usage, see
  "FastDownward", and for an example see "FastDownward.Examples.Gripper".

  Note that usage of this library requires the @downward@ executable - see
  <http://www.fast-downward.org/ObtainingAndRunningFastDownward Obtaining and Running Fast Downward>
  for more instructions.
license-name: BSD-3-Clause
