homepage: https://github.com/adinapoli/fastpbkdf2-hs#readme
changelog-type: ''
hash: f70d50961718ffb1739371886c15ddad9263ecd134bdd4ce0f5831f956e48896
test-bench-deps:
  bytestring: ! '>=0.10.4.0'
  base: ! '>=4.6 && <5'
  pbkdf: -any
  criterion: -any
  cryptonite: -any
  tasty-hunit: -any
  base16-bytestring: -any
  tasty: -any
  fastpbkdf2: -any
maintainer: alfredo.dinapoli@gmail.com
synopsis: Haskell bindings to the fastpbkdf2 C library
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.4.0'
  base: ! '>=4.6 && <5'
all-versions:
- 0.1.0.0
author: Alfredo Di Napoli
latest: 0.1.0.0
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/adinapoli/fastpbkdf2-hs.svg?branch=master)](https://travis-ci.org/adinapoli/fastpbkdf2-hs)\n[![Build
  status](https://ci.appveyor.com/api/projects/status/3bkcrxd1m4xngerc?svg=true)](https://ci.appveyor.com/project/adinapoli/fastpbkdf2-hs)\n[![Coverage
  Status](https://coveralls.io/repos/github/adinapoli/fastpbkdf2-hs/badge.svg?branch=master)](https://coveralls.io/github/adinapoli/fastpbkdf2-hs?branch=master)\n\n##
  fastpbkdf2-hs\n\nHaskell bindings to the [fastpbkdf2](https://github.com/ctz/fastpbkdf2)
  library. This is currently (Dec 2016) the\n*fastest* Haskell library for computing
  the `pbkdf2`, outperforming competitors by several order of magnitude (unsuprisingly,\nas
  it hooks into some C code!):\n\n```\nbenchmarking sha1/fastpbkdf2\ntime                 4.948
  ms   (4.850 ms .. 5.040 ms)\n                     0.998 R²   (0.997 R² .. 0.999
  R²)\nmean                 4.767 ms   (4.707 ms .. 4.825 ms)\nstd dev              186.5
  μs   (152.3 μs .. 244.2 μs)\nvariance introduced by outliers: 20% (moderately inflated)\n\nbenchmarking
  sha1/cryptonite\ntime                 29.61 ms   (29.04 ms .. 30.03 ms)\n                     0.999
  R²   (0.997 R² .. 1.000 R²)\nmean                 29.82 ms   (29.47 ms .. 30.40
  ms)\nstd dev              916.0 μs   (527.1 μs .. 1.579 ms)\n\nbenchmarking sha1/pbkdf2\ntime
  \                8.032 s    (7.899 s .. 8.248 s)\n                     1.000 R²
  \  (1.000 R² .. 1.000 R²)\nmean                 7.941 s    (7.911 s .. 7.995 s)\nstd
  dev              47.08 ms   (0.0 s .. 48.71 ms)\nvariance introduced by outliers:
  19% (moderately inflated)\n```\n\n### Installation\n\nThis library depends from
  `OpenSSL`. I have tried to make this self-contained, but the\ncrypto layer of OpenSSL
  (or BoringSSL) requires some fine-tuned ASM code generated during\nthe build process.
  Porting everything over in a customised `Build.hs` would have been too\nmuch pain,
  but PR are super welcome!\n"
license-name: BSD-3-Clause
