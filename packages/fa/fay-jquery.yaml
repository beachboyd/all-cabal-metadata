homepage: https://github.com/faylang/fay-jquery
changelog-type: markdown
hash: 25ee1ed2276608c69523d6ba1601d063029323d110c43eb0bfdc3d93c31ef870
test-bench-deps: {}
maintainer: adam@bergmark.nl
synopsis: jQuery bindings for Fay.
changelog: ! '## Changelog


  ### 0.6.1.0


  * Add `currentTarget` thanks to Jelle Hermsen


  #### 0.6.0.3 (2015-01-05)


  * Bug fix: Serialize ajax post bodies using JSON.stringify.


  #### 0.6.0.2 (2014-01-06)


  * Bug fix: Force thunks on polymorphic arguments such as `a` in `append :: Selectable
  a => a -> JQuery -> Fay JQuery`. Previously only constant values would be passed
  to jQuery correctly for these arguments.


  #### 0.6.0.1 (2013-12-28)


  * Fix typo in constraint, fixes build


  ### 0.6 (2013-12-26)


  * Constrain more free type variables to `Selectable`

  * Change `getAttr :: Text -> JQuery -> Fay Text` to `Text -> JQuery -> Fay (Defined
  Text)`


  ### 0.5 (2013-11-07)


  * Add `Selectable` typeclass (with instances for `Text`, `JQuery` and `Element`.
  `String` is not a valid instance.)

  * `select` and `is` now accept `Selectable a => a` as the first argument.

  * `selectElement`, `selectObject`, `isJQuery`, and `isElement` has been removed
  in favor of `select` and `is`.

  * `createJQuery :: Text -> a -> Fay JQuery` has been replaced by `selectInContext
  :: (Selectable a, Selectable b) => a -> b -> Fay JQuery`

  * `isWith :: (Double -> Bool) -> JQuery -> Fay JQuery` has changed to `isWith ::
  (Int -> Bool) -> JQuery -> Fay JQuery`

  * Updated usage instructions in README


  Bug fixes:

  * `is` now returns `Bool`


  ### 0.4.0.1 (2013-09-24)


  * Fixed bug in definition of `clone`

  * Don''t define `fromIntegral`.


  ### 0.4 (2013-08-27)


  * Updated to use fay-text, which fixes bugs in ajax FFI calls.

'
basic-deps:
  fay-text: ! '>=0.2'
  fay-base: ! '>=0.18'
all-versions:
- 0.2.0.0
- 0.2.1.0
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- '0.5'
- '0.6'
- 0.6.0.1
- 0.6.0.2
- 0.6.0.3
- 0.6.1.0
author: Adam Bergmark, Brian Victor, Chris Done
latest: 0.6.1.0
description-type: markdown
description: ! "Fay jQuery\n==========\n\n[Changelog](CHANGELOG.md)\n\njQuery bindings
  for Fay. This project is experimental, but seems to work pretty well!\n\nThe short-term
  goals of this project are to help discover the real world\nrequirements of Fay and
  to invite bikeshedding over the fay-jquery API. That\nmeans that names and types
  may change in rapid and annoying ways until\nconventions settle down.\n\nThe one
  consistent convention in the library is that the jQuery object on which\nmethods
  operate is the *last* parameter to every function. This allows simple\nmonadic composition:\n\n```haskell\n{-#
  LANGUAGE RebindableSyntax, OverloadedStrings #-}\n\nimport Fay.Text (fromString)\nimport
  JQuery\nimport Prelude\n\n(>=>) :: (a -> Fay b) -> (b -> Fay c) -> a -> Fay c\nf
  >=> g = \\x -> f x >>= g\n\nmakeSquare :: JQuery -> Fay JQuery\nmakeSquare = addClass
  \"square\" >=>\n             setWidth 400 >=>\n             setHeight 400\n\n--
  `ready` is the same as jQuery(document).ready(%1);\n-- You generally need to wait
  for this event to fire before modifying the DOM.\nmain :: Fay ()\nmain = ready $
  do\n    select \"#elementToMakeSquare\" >>= makeSquare\n    return ()\n```\n\nUsage\n-----\n\n\nInstall:\n```bash\ncabal
  install fay-text fay-jquery\n```\n\nCompile your file:\n\n```bash\nfay --package
  fay-jquery,fay-text MyFile.hs\n```\n\n\nSupported API calls\n-------------------\n\nThis
  binding is a work in progress. We're adding calls by section of the jQuery\ndocs.
  There is some overlap in the sections, but the following sections are\n(mostly)
  complete.\n\n- Ajax\n- Attributes\n- Core\n- CSS\n- Effects (Basic, Fading)\n- Manipulation\n-
  Traversing\n- Events\n\nStill to do\n-----------\n\n- Data\n- Deferred Object\n-
  Effects (Custom, Sliding)\n- Forms\n- Internals\n- Miscellaneous\n- Offset\n- Plugins\n-
  Properties\n- Utilities\n\nNot Applicable\n--------------\n\n- Selectors\n"
license-name: BSD-3-Clause
