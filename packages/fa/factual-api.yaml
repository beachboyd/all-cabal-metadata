homepage: https://github.com/rudyl313/factual-haskell-driver
changelog-type: ''
hash: cc45b70c0788c5dde0b5d4c3c6ee9f747d08d7255ea9f6d620f429bc8ab2f76b
test-bench-deps: {}
maintainer: Rudiger Lippert <rudy@factual.com>
synopsis: A driver for the Factual API
changelog: ''
basic-deps:
  MissingH: ! '>=1.0.0'
  bytestring: -any
  hoauth: ! '>=0.3.5'
  base: ==4.*
  unordered-containers: ! '>=0.1.4.6'
  text: ! '>=0.11.1.5'
  curl: ! '>=1.3.7'
  containers: -any
  utf8-string: ! '>=0.3.7'
  dataenc: ! '>=0.14.0.3'
  HTTP: -any
  attoparsec: ! '>=0.10.1.0'
  aeson: ! '>=0.6.0.0'
  vector: ! '>=0.9.1'
all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.2.0
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.4.0
- 0.5.0
- 0.5.1
- 0.5.2
- 0.6.0
- 0.6.1
author: Rudiger Lippert <rudy@factual.com>
latest: 0.6.1
description-type: markdown
description: ! "# Introduction\n\nThis is a Haskell driver for [Factual's public API](http://developer.factual.com/display/docs/Factual+Developer+APIs+Version+3).\n\n#
  Features\n\n* Read Queries\n  * Places US\n  * Restaurants US\n  * Hotels US\n  *
  Global Places\n  * Crosswalk\n  * Healthcare Providers\n  * World Geographies\n
  \ * Products CPG\n  * Products Crosswalk\n  * Monetize\n  * Custom Tables\n* Facets
  Queries\n* Geocode Queries\n* Geopulse Queries\n* Resolve Queries\n* Match Queries\n*
  Schema Queries\n* Diffs Queries\n* Multi Queries\n* Raw Read Queries\n* Parametric
  Search\n* Geo Filters\n* Query Debugging\n\n# Installation\n\n## Prerequisites\n\nThis
  driver targets [ghc 7.4.2](http://www.haskell.org/ghc/)\nand [The Haskell Platform
  2012.4.0.0](http://hackage.haskell.org/platform/).\nPlease follow the installation
  instructions for your specific\nplatform to install ghc and The Haskell Platform.\n\nYou'll
  need a Factual account to use this driver. If you don't have one yet, [it's free
  and easy to get one](https://www.factual.com/api-keys/request).\n\n## Installation
  from cabal\n\n    $ cabal install factual-api\n\n## Installation from git\n\n    $
  git clone git@github.com:rudyl313/factual-haskell-driver.git\n    $ cabal install
  hoauth\n    $ cabal install aeson\n    $ cabal install MissingH\n\n# Tests\n\nTo
  run the integration tests you'll need an to create a yaml file\nat ~/.factual/factual-auth.yaml
  to store your Factual credentials:\n\n    ---\n    key: MYKEY\n    secret: MYSECRET\n\nLoad
  the tests file into ghci to run the tests:\n\n    $ ghci test/Tests.hs\n\nNext you
  use the following functions to run the unit and integration\ntests respectively:\n\n
  \   *Main> runUnitTests\n    Cases: 55  Tried: 55  Errors: 0  Failures: 0\n    Counts
  {cases = 55, tried = 55, errors = 0, failures = 0}\n    *Main> runIntegrationTests\n
  \   Cases: 15  Tried: 15  Errors: 0  Failures: 0\n    Counts {cases = 15, tried
  = 15, errors = 0, failures = 0}\n\n# Documentation\n\nYou can read library documentation
  by visiting the [Hackage page](http://hackage.haskell.org/package/factual-api).\n\nThe
  [github wiki](https://github.com/rudyl313/factual-haskell-driver/wiki) also\nprovides
  thorough documentation and examples for each feature.\n\n# Examples\n\nSee the examples
  directory for examples of each query type. To\nrun an example go to the project
  root and execute these commands:\n\n    $ ghc -o example examples/ReadExample.hs
  --make\n    $ ./example mykey mysecret\n\nIn this example replace mykey with your
  key and mysecret with your\nsecret. Note that compiling the source code generates
  .o and .hi\nfiles in the source directories.\n\n# Locale issues\n\nIf you're using
  Linux and experience character encoding issues add the\nfollowing line to your bashrc
  before using the code:\n\n  export LC_ALL=\"en_US.UTF-8\"\n"
license-name: BSD-3-Clause
