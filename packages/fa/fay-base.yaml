homepage: https://github.com/faylang/fay/
changelog-type: markdown
hash: a3d81b625e745efa2f278c887d0aafa0ca84d4692ecd44f345f972d2ac6a8cfa
test-bench-deps: {}
maintainer: adam@bergmark.nl
synopsis: The base package for Fay.
changelog: ! "## Changelog\n\n## 0.21.1.0 (2018-03-09)\n\n* fay 0.24.0.0 support\n\n##
  0.21.0.0 (2017-08-02)\n\n* Changed the definition of `splitOn` from `Char -> Text
  -> [Text]` to `Text -> Text -> [Text]` to make it more general and to match `text:Data.Text.splitOn`.
  Thanks to A. Bram Neijt!\n\n## 0.20.0.1 (2015-06-24)\n\n* Fix polymorphic arguments
  in `Data.Var` (thanks Jakub RyÅ¡ka)\n\n## 0.20.0.0 (2015-02-10)\n\n* Changes the
  type signature of `when` and `unless` from `:: Bool -> Fay a -> Fay ()` to `:: Bool
  -> Fay () -> Fay ()`. This allows tail call optimization for these functions and
  matches base - by Zachary Mason\n\n#### 0.19.4.2 (2015-01-05)\n\n* Allow `fay 0.22.*`.\n\n####
  0.19.4.1 (2014-10-25)\n\n* Merged fay-base into the main fay repository.\n\n###
  0.19.4 (2014-10-21)\n\n* Fix type signature of `Data.Text.pack`.\n* Add IsString
  instance for `Text` for using the ffi with `RebindableSyntax` enabled.\n\n### 0.19.3
  (2014-10-21)\n\n* Lots of additions adding the following modules:\n  * Data.Var
  - Mutable variables, Reactive variables, and reactive signals\n  * Unsafe.Coerce\n
  \ * Data.Text (fay-text will be updated to reuse this module)\n  * Data.Time\n  *
  Data.Ord, Data.Function, Data.Maybe, Data.List, Data.Either\n  * Data.Defined and
  Data.Nullable\n  * Data.Mutex - Simple mutexes\n  * Control.Exception\n  * Data.LocalStorage\n
  \ * Data.MutMap - Mutable maps\n\n#### 0.19.2.1 (2014-10-11)\n\n* Allow `fay 0.21`\n\n###
  0.19.2 (2014-07-29)\n\n* Remove the `Base.Ord` constraint from `Ord` so new Ord
  instances can be added. Note that you cannot use a custom implementation of the
  methods, JavaScript's native operators are used for comparisons.\n\n#### 0.19.1.2
  (2014-04-29)\n\n* Allow `fay 0.20`\n\n#### 0.19.1.1 (2014-04-07)\n\n* Fix compilation
  on GHC 7.8\n\n### 0.19.1 (2014-03-13)\n\n* Add Data.Char\n\n## 0.19 (2014-01-14)\n\n*
  Ord instance for Integer\n* Export base versions of Maybe, Ordering, and Either
  instead of redefining when compiling with GHC. This helps when writing libraries
  targeting both Fay and GHC\n* `Prelude`: Add `void`, `>=>` and `<=<`, `unless`,
  `forM`, `mapM`\n* Add `Debug.Trace` module exporting `trace` and `traceShow`\n\nMinor:\n*
  Upper bound to the latest major Fay version\n\n## 0.18.0.0 (2013-09-24)\n\n* Fixed
  implementation of `>>` and `>>=` (this bug didn't affect normal usage)\n* Add `fail`\n*
  Generalize type signatures for `fromIntegral` and `fromInteger`\n\n\n## 0.17.0.0
  (2013-08-27)\n\n* The type signature of `FFI.ffi` has been generalized to `IsString
  s => s -> a` to support `RebindableSyntax`.\n* Prelude now exports `ifThenElse`
  as a default for `RebindableSyntax`\n\n\n## 0.16.0.0 (2013-08-05)\n\n* Added more
  Ratio functions and move them all into Data.Ratio\n"
basic-deps:
  base: ==4.*
  fay: ! '>=0.21.1 && <0.25'
all-versions:
- '0.1.0.0'
- '0.14.0.0'
- '0.14.1.0'
- '0.14.2.0'
- '0.14.3.0'
- '0.14.3.1'
- '0.14.3.2'
- '0.16.0.0'
- '0.17.0.0'
- '0.18.0.0'
- '0.19'
- '0.19.1'
- '0.19.1.1'
- '0.19.1.2'
- '0.19.2'
- '0.19.2.1'
- '0.19.3'
- '0.19.4'
- '0.19.4.1'
- '0.19.4.2'
- '0.20.0.0'
- '0.20.0.1'
- '0.21.0.0'
- '0.21.1.0'
author: Chris Done
latest: '0.21.1.0'
description-type: markdown
description: ! '# fay-base


  [Changelog](CHANGELOG.md)


  This package exports Prelude, FFI and other modules which you probably want to use
  with [Fay](http://www.fay-lang.org).


  Anything essential for using the compiler, or modules exported by GHC''s base can
  go in this package.

'
license-name: BSD3
