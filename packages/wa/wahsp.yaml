homepage: https://github.com/nshaheed/WebAudioHs/
changelog-type: ''
hash: 145ecbcceca09e635f744466b1d439a6144cd83e3d0c74a2478e4470bbffbacd
test-bench-deps: {}
maintainer: nshaheed@ku.edu
synopsis: A haskell binding of the Web Audio API ala blank-canvas
changelog: ''
basic-deps:
  stm: ! '>=2.4 && <2.5'
  base: ! '>=4.8 && <=4.9'
  data-default-class: ! '>=0.1 && <0.2'
  text: ! '>=1.2 && <1.3'
  remote-monad: ! '>=0.3 && <0.4'
  kansas-comet: ! '>=0.4 && <0.5'
  semigroups: ! '>=0.18 && <0.19'
  natural-transformation: ! '>=0.3 && <0.4'
  wai-middleware-static: ! '>=0.8 && <0.9'
  scotty: ! '>=0.11 && <0.12'
  aeson: ! '>=1.0 && <1.1'
all-versions:
- '0.2'
author: Nicholas Shaheed
latest: '0.2'
description-type: markdown
description: ! "# wahsp\n\n### Overview\n*wahsp* (Web Audio HaSkell Protocol) is a
  binding for Haskell to the\n[Web Audio API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API)
  ala *blank-canvas*\nAudio sources, effects, etc. can be combined, manipulated, and
  otherwise controlled using haskell\nand are then rendered in the the browser (see
  the above link for browser compatibility).\n\n### Installation\n\nAs of the writing
  of this README, remote-monad 0.3 is only available on github and must be built\nfrom
  the repo.\n\n#### Full installation instructions:\n\n```\ngit clone https://github.com/nshaheed/WebAudioHs.git\ncd
  WebAudioHs\ncabal install natural-transformation\ngit clone https://github.com/ku-fpg/remote-monad.git\ncd
  remote-monad/\ncabal install\ncd ../\ncabal install\n```\n\n### Example\n\nHere
  is a basic program that creates a 200Hz sine wave and plays it\n\n```haskell\nmodule
  Main where\nimport Web.Audio\n \nmain :: IO ()\nmain = do\n  webAudio 3000 $ doc
  -> do\n    send doc $ do\n      osc1  <- createOscillator 200 0 Sine -- create an
  OscillatorNode\n      gain1 <- createGain 0.5              -- create a GainNode\n\n
  \     connect $ osc1 .|. gain1 .||. eCtx   -- connect these nodes together, and
  then connect them to the audio context\n\n      start osc1 -- make sounds!\n```\n\n###
  Other Examples\n\nCode for examples are located in the `example/` folder.\n\nTo
  install:\n\n```\ncd examples/\ncabal install\n```\n\nThe resulting executables are
  located in `~/.cabal/bin/`\n\n### Documentation\n\n1. hackage\n2. [Web Audio API
  documentation](https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API)\n"
license-name: BSD-3-Clause
