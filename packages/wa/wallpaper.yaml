homepage: https://github.com/jeffreyrosenbluth/wallpaper#readme
changelog-type: ''
hash: 4f6154027948682b19af3bf57c633319aa94b7b8e6ad54f90fa651156c3b4601
test-bench-deps:
  base: -any
  wallpaper: -any
maintainer: jeffrey.rosenbluth@gmail.com
synopsis: ! 'A library and executable for creating

  wallpaper, frieze, and rosette patterns.'
changelog: ''
basic-deps:
  JuicyPixels: ==3.2.*
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.7 && <5'
  text: ! '>=1.2 && <1.3'
  filepath: ! '>=1.4 && <1.5'
  wallpaper: -any
  yaml: ==0.8.*
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Jeffrey Rosenbluth
latest: 0.1.0.1
description-type: markdown
description: ! "# wallpaper\n## Symmetry Patterns\nCreate wallpaper patterns using
  the domain coloring algorithm as described in\n[Creating Symmetry], by Frank A.
  Farris, (c) 2015 Princeton University Press.\n\nThe api is likely to change as this
  is still an alpha release.\n\n[Creating Symmetry]: https://www.amazon.com/Creating-Symmetry-Mathematics-Wallpaper-Patterns/dp/0691161739/ref=sr_1_1?ie=UTF8&qid=1495813829&sr=8-1&keywords=creating+symmetry\n\n##
  Installation\nInstall [stack](https://docs.haskellstack.org/en/stable/README/)\n\n```\ngit
  clone https://github.com/jeffreyrosenbluth/wallpaper.git\ncd wallpaper\nstack build\nstack
  exec wallpaper myWallpaper.yaml\n-- or\nstack exec rosette myRosette.yaml\n```\n\n###
  Wallpaper and Frieze\n![Example](https://raw.githubusercontent.com/jeffreyrosenbluth/wallpaper/master/myWallpaper.jpg)\n\nTo
  make a wallpaper or frieze image, run the wallpaper function with a yaml\nfile like
  the following. There are many [examples].\n\n[examples]: https://github.com/jeffreyrosenbluth/wallpaper/tree/master/examples\n\n```yaml\n#
  The wallpaper or frieze symmetry group in short IUC notation.\n# If the group lattice
  takes parameters then they follow tagged\n# by there names, for example:\n#   Group:\n#
  \    Name: p1\n#     xi: 1.5\n#     eta: 2.1\n# If the group lattice takes no parameters
  you can use either\n#   Group:\n#     Name: p4\n# or, just directly:\n#   Group:
  p4\nGroup: p3m1\n\n# A list of doubly indexed complex coefficients for the wave
  function.\n# Additional wave packets will be added in order to create the symmetries
  in\n# the specified symmetry group.\nCoefficients:\n- A(n,m): [0.75, 0.25] # 0.75
  + 0.25i\n  n: 1                 # first index of coefficient\n  m: 0                 #
  second index of coefficient\n- A(n,m): [0.2, -0.2]\n  n: -2\n  m: 2\n- A(n,m): [0.6,
  0.1]\n  n: 1\n  m: -1\n\n# Optional field for setting the style, choices are: plain,
  morph (which takes\n# one parameter: cutoff), and blend (which takes as an argument
  a group object).\n# morph will interpolate between the color wheel and its 180 degree
  rotation,\n# leaving the proportion specified by cutoff at the beginning and end.\n#
  Blend interpolates horizontally between two different wallpaper groups.\n# If left
  unspecified type will default to style: plain.\nType:\n  style: blend\n  group:\n
  \   name: p31m\n\nOptions:\n  width: 945        # width in pixels of the output
  image\n  height: 405       # height in pixels of the output image\n  repeat-length:
  90 # used to convert pixel coordinates to real numbers\n  scale-factor: 0.5 # to
  scale the color wheel so that it contains the domain values\n\n# Optional, defaults
  to the standard artists color wheel of infinite size.\nColorwheel-path: examples/rose_small.png\n\n#
  Optional, Preprocess the image, choices are: none, fliphorizontal,\n# flipvertical,
  flipboth, invert, antisymmvertical, and antisymmhorizontal.\n# The default is none.\nPre-process:
  AntiSymmHorizontal\n\n# File to write the result. The file type will match the extension.\n#
  Choices for extenstion are: png, jpg, tif, and bmp.\nOutput-path: myWallpaper.jpg\n```\n\n###
  Rosette\n\n![example](https://raw.githubusercontent.com/jeffreyrosenbluth/wallpaper/master/myRosette.jpg)\n\nTo
  make a rosette, use a yaml file like the following. There are also some\n[examples],
  look at rosetteP.yaml and rosettePM.yaml.\n\n```yaml\nP-fold: 5    # the number
  of rotational symmetries\nMirror: true # symmetric about the horizontal axis\n\n#
  (n - m) mod P-fold must be 0, otherwise the wave packet will not be included.\nCoefficients:\n-
  A(n,m): [0.5, 0]\n  n: 5  # (5 - 0) mod 5 = 0\n  m: 0\n- A(n,m): [0.3, 0]\n  n:
  4  # (4 - (-6)) mod 5 = 0\n  m: -6\nOptions:\n  width: 540\n  height: 540\n  repeat-length:
  135\n  scale-factor: 0.5\nColorwheel-path: examples/rose_small.png\nPre-process:
  invert\nOutput-path: myRosette.jpg\n```\n"
license-name: BSD-3-Clause
