homepage: https://github.com/futurice/waitra
changelog-type: ''
hash: 7b2f9d4fe0358eb303c3993233b05c1505f4021ebee41fccfad0b6badbf8bd8f
test-bench-deps:
  wai: -any
  base: ! '>=4.6 && <4.10'
  tasty-hunit: -any
  waitra: -any
  wai-extra: ! '>=3.0.4.5'
  tasty: -any
  http-types: -any
  aeson: -any
maintainer: Oleg Grenrus <oleg.grenrus@iki.fi>
synopsis: A very simple Wai router
changelog: ''
basic-deps:
  warp: -any
  bytestring: ! '>=0.10.4.0'
  wai: ! '>=3.0.2.3'
  base: ! '>=4.6 && <4.10'
  text: ! '>=1.1.0.0'
  filepath: ! '>=1.3.0.2'
  waitra: -any
  regex-applicative: ! '>=0.3.1'
  http-types: ! '>=0.8.6'
  wai-app-static: ! '>=3.0'
  aeson: ! '>=0.8.0.2'
  template-haskell: -any
  directory: ! '>=1.2.1.0'
all-versions:
- 0.0.1.0
- 0.0.2.0
- 0.0.3.0
- 0.0.4.0
author: Oleg Grenrus <oleg.grenrus@iki.fi>
latest: 0.0.4.0
description-type: markdown
description: ! "# Waitra\n\nWaitra is a very simple router.\nIt's useful for writing
  simple API web-services,\nwhen you don't want to use the whole Yesod stack.\n\n[![Build
  Status](https://travis-ci.org/futurice/waitra.svg?branch=master)](https://travis-ci.org/futurice/waitra)\n\n##
  Synopsis\n\n```hs\nechoRoute :: Route\nechoRoute = routeGet (echoApp <$ string \"/api/echo/\"
  <*> many anySym)\n  where echoApp msg _req respond = respond $ responseLBS status200
  [] (fromString msg)\n\napp :: Application\napp = waitraMiddleware [echoRoute] $
  staticApp $ embeddedSettings $(mkRecursiveEmbedded \"static\")\n```\n\n## Documentation\n\nDocumentation
  is available at [hackage](http://hackage.haskell.org/package/waitra).\n"
license-name: MIT
