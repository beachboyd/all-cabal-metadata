homepage: ''
changelog-type: markdown
hash: 6baa1baf026e0acc870c84d20ad18f7751828a1193eb4243ac932bde51026b9f
test-bench-deps: {}
maintainer: alexey@fpcomplete.com
synopsis: Authentication middleware that secures WAI application
changelog: ! "0.1.2.1\n=======\n\n* Compatibility with hoauth2-1.3.0 - fixed: [#4](https://github.com/fpco/wai-middleware-auth/issues/4)\n\n0.1.2.0\n=======\n\n*
  Implemented compatibility with hoauth2 >= 1.0.0 - fixed: [#3](https://github.com/fpco/wai-middleware-auth/issues/3)\n\n0.1.1.2\n=======\n\n*
  Fixed [wai-middleware-auth-0.1.1.1 does not compile in 32 bit Linux](https://github.com/fpco/wai-middleware-auth/issues/2)\n\n0.1.1.1\n=======\n\n*
  Disallow empty `userIdentity` to produce a successfull login.\n* Produces a 404
  on `/favicon.ico` page if not logged in: work around for issue\n  with Chrome requesting
  it first and messing up the redirect url.\n* Added JQuery to the template, since
  it's bootstrap's requirement.\n\n0.1.1.0\n=======\n\n* Fixed whitelist email regex
  matching for Github and Google auth.\n\n0.1.0.0\n=======\n\n* Initial implementation.\n"
basic-deps:
  shakespeare: -any
  warp: -any
  http-client: -any
  cookie: -any
  http-reverse-proxy: -any
  exceptions: -any
  cereal: -any
  bytestring: -any
  clientsession: -any
  wai: ! '>=3.0 && <4'
  case-insensitive: -any
  base: ! '>=4.7 && <5'
  hoauth2: ! '>=0.5.0'
  base64-bytestring: -any
  unordered-containers: -any
  text: -any
  safe-exceptions: -any
  unix-compat: -any
  uri-bytestring: -any
  blaze-builder: -any
  binary: -any
  vault: -any
  http-client-tls: -any
  regex-posix: -any
  optparse-simple: -any
  blaze-html: -any
  wai-extra: ! '>=3.0.7'
  wai-middleware-auth: -any
  http-conduit: -any
  http-types: -any
  wai-app-static: -any
  aeson: -any
  yaml: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
- 0.1.2.0
- 0.1.2.1
author: Alexey Kuleshevich
latest: 0.1.2.1
description-type: markdown
description: ! "# wai-middleware-auth\n\nMiddleware that secures WAI application\n\n##
  Installation\n\n```shell\n$ stack install wai-middleware-auth\n```\nOR\n```shell\n$
  cabal install wai-middleware-auth\n```\n\n## wai-auth\n\nAlong with middleware this
  package ships with an executbale `wai-auth`, which\ncan function as a protected
  file server or a reverse proxy. Right from the box\nit supports OAuth2 authentication
  as well as it's custom implementations for\nGoogle and Github.\n\nConfiguration
  is done using a yaml config file. Here is a sample file that will\nconfigure `wai-auth`
  to run a file server with google and github authentication\non `http://localhost:3000`:\n\n```yaml\napp_root:
  \"_env:APPROOT:http://localhost:3000\"\napp_port: 3000\ncookie_age: 3600\nsecret_key:
  \"...+vwscbKR4DyPT\"\nfile_server:\n  root_folder: \"/path/to/html/files\"\n  redirect_to_index:
  true\n  add_trailing_slash: true\nproviders:\n  github:\n    client_id: \"...94cc\"\n
  \   client_secret: \"...166f\"\n    app_name: \"Dev App for wai-middleware-auth\"\n
  \   email_white_list:\n      - \"^[a-zA-Z0-9._%+-]+@example.com$\"\n  google:\n
  \   client_id: \"...qlj.apps.googleusercontent.com\"\n    client_secret: \"...oxW\"\n
  \   email_white_list:\n      - \"^[a-zA-Z0-9._%+-]+@example.com$\"\n```\n\nAbove
  configuration will also block access to users that don't have an email\nwith `example.com`
  domain. There is also a `secret_key` field which will be used\nto encrypt the session
  cookie. In order to generate a new random key run this command:\n\n```shell\n$ echo
  $(wai-auth key --base64)\nazuCFq0zEBkLSXhQrhliZzZD8Kblo...\n```\n\nMake sure you
  have proper callback/redirect urls registered with google/github\napps, eg: `http://localhost:3000/_auth_middleware/google/complete`.\n\nAfter
  configuration file is ready, running application is very easy:\n\n```shell\n$ wai-auth
  --config-file=/path/to/config.yaml\nListening on port 3000\n```\n\n"
license-name: MIT
