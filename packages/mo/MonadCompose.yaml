homepage: http://alkalisoftware.net
changelog-type: ''
hash: aca4e382317a42bac583726fb685fed9a6326eaf4d5e3fffbb806f9806f9dc93
test-bench-deps: {}
maintainer: info@alkalisoftware.net
synopsis: Methods for composing monads.
changelog: ''
basic-deps:
  base: ! '>=4 && <=5'
  kan-extensions: -any
  data-default: -any
  monad-products: -any
  ghc-prim: -any
  mtl: ! '>=2.2'
  mmorph: ==1.0.*
  transformers: -any
  random: -any
  parallel: ! '>=3.2'
  transformers-compat: ==0.4.*
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.5.0.0
- 0.6.0.0
- 0.7.0.0
- 0.8.0.0
- 0.8.1.0
- 0.8.2.0
- 0.8.3.0
- 0.8.3.1
- 0.8.4.0
- 0.8.4.1
- 0.8.4.2
author: James Candy
latest: 0.8.4.2
description-type: haddock
description: ! 'Methods for composing monads.


  The IO monad transformer solves the problem of combining two IO-performing monads,
  so that both may be transformed separately.


  A monad transformer can transform another monad, but if you have two monads both
  lacking a transformer, one can define an /extended distributive law/ which allows
  a monad to arise - see Control.Monad.PlusMonad.'
license-name: BSD-3-Clause
