homepage: https://github.com/mrkkrp/modern-uri
changelog-type: markdown
hash: a76d3507b4538c6880cf6e03bef90e680e5495b19668c18c95cf02a4b1860da3
test-bench-deps:
  modern-uri: -any
  bytestring: ! '>=0.2 && <0.11'
  base: ! '>=4.7 && <5.0'
  hspec: ! '>=2.0 && <3.0'
  text: ! '>=0.2 && <1.3'
  megaparsec: ! '>=6.0 && <7.0'
  criterion: ! '>=0.6.2.1 && <1.3'
  weigh: ! '>=0.0.4'
  hspec-megaparsec: ! '>=1.0 && <2.0'
  deepseq: ! '>=1.3 && <1.5'
  QuickCheck: ! '>=2.4 && <3.0'
maintainer: Mark Karpov <markkarpov92@gmail.com>
synopsis: Modern library for working with URIs
changelog: ! "## Modern URI 0.1.0.0\n\n* Changed the type of `uriAuthority` from `Maybe
  Authority` to `Either Bool\n  Authority`. This allows to know if URI path is absolute
  or not without\n  duplication of information, i.e. when the `Authority` component
  is present\n  the path is necessarily absolute, otherwise the `Bool` value tells
  if it's\n  absolute (`True`) or relative (`False`).\n\n* Added `isPathAbsolute`
  in `Text.URI` and the corresponding getter in\n  `Text.URI.Lens`.\n\n## Modern URI
  0.0.2.0\n\n* Added the `renderStr` and `renderStr'` functions for efficient rendering\n
  \ to `String` and `ShowS`.\n\n* Added the `parserBs` that can consume strict `ByteString`
  streams.\n\n## Modern URI 0.0.1.0\n\n* Initial release.\n"
basic-deps:
  exceptions: ! '>=0.6 && <0.9'
  bytestring: ! '>=0.2 && <0.11'
  base: ! '>=4.7 && <5.0'
  text: ! '>=0.2 && <1.3'
  megaparsec: ! '>=6.0 && <7.0'
  containers: ! '>=0.5 && <0.6'
  contravariant: ! '>=1.3 && <2.0'
  deepseq: ! '>=1.3 && <1.5'
  QuickCheck: ! '>=2.4 && <3.0'
  template-haskell: ! '>=2.10 && <2.13'
  profunctors: ! '>=5.2.1 && <6.0'
all-versions:
- '0.0.1.0'
- '0.0.2.0'
- '0.1.0.0'
author: Mark Karpov <markkarpov92@gmail.com>
latest: '0.1.0.0'
description-type: markdown
description: ! "# Modern URI\n\n[![License BSD3](https://img.shields.io/badge/license-BSD3-brightgreen.svg)](http://opensource.org/licenses/BSD-3-Clause)\n[![Hackage](https://img.shields.io/hackage/v/modern-uri.svg?style=flat)](https://hackage.haskell.org/package/modern-uri)\n[![Stackage
  Nightly](http://stackage.org/package/modern-uri/badge/nightly)](http://stackage.org/nightly/package/modern-uri)\n[![Stackage
  LTS](http://stackage.org/package/modern-uri/badge/lts)](http://stackage.org/lts/package/modern-uri)\n[![Build
  Status](https://travis-ci.org/mrkkrp/modern-uri.svg?branch=master)](https://travis-ci.org/mrkkrp/modern-uri)\n[![Coverage
  Status](https://coveralls.io/repos/mrkkrp/modern-uri/badge.svg?branch=master&service=github)](https://coveralls.io/github/mrkkrp/modern-uri?branch=master)\n\nThis
  is a modern library for working with URIs in Haskell as per RFC 3986:\n\nhttps://tools.ietf.org/html/rfc3986\n\n##
  Features\n\nThe `modern-uri` package features:\n\n* Correct by construction `URI`
  data type. Correctness is ensured by\n  guaranteeing that every sub-component of
  the `URI` record is by itself\n  cannot be invalid. This boils down to careful use
  of types and a set of\n  smart constructors for things like scheme, host, etc.\n*
  Textual components in the `URI` data type represented as `Text` rather\n  than `ByteString`,
  because they are percent-decoded and so they can\n  contain characters outside of
  ASCII range (i.e. Unicode). This allows for\n  easier manipulation of `URI`s, while
  encoding and decoding headaches are\n  handled by the parsers and renders for you.\n*
  Absolute and relative URIs differ only by the scheme component: if it's\n  `Nothing`,
  then URI is relative, otherwise it's absolute.\n* Megaparsec parser that can be
  used as a standalone smart constructor for\n  the `URI` data type (see `mkURI`)
  as well as be seamlessly integrated into\n  a bigger Megaparsec parser that consumes
  strict `Text` (see `parser`) or\n  strict `ByteString` (see `parserBs`).\n* The
  parser performs some normalization, for example it collapses\n  consecutive slashes.
  Some smart constructors such as `mkScheme` and\n  `mkHost` also perform normalization.
  So in a sense URIs are also\n  “normalized by construction” to some extent.\n* Fast
  rendering to strict `Text` and `ByteString` as well as to their\n  respective `Builder`
  types and to `String`/`ShowS`.\n* Extensive set of lensy helpers for easier manipulation
  of the nested data\n  types (see `Text.URI.Lens`).\n* Quasi-quoters for compile-time
  construction of the `URI` data type and\n  refined text types (see `Text.URI.QQ`).\n\n##
  Contribution\n\nIssues, bugs, and questions may be reported in [the GitHub issue
  tracker for\nthis project](https://github.com/mrkkrp/modern-uri/issues).\n\nPull
  requests are also welcome and will be reviewed quickly.\n\n## License\n\nCopyright
  © 2017 Mark Karpov\n\nDistributed under BSD 3 clause license.\n"
license-name: BSD3
