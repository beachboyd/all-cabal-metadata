homepage: ''
changelog-type: markdown
hash: a8962fbfd1832c9c340c6422909107652e2602249d6d36e73a34952a34402c79
test-bench-deps:
  base: -any
  CTRex: -any
  motor: -any
  indexed: -any
  indexed-extras: -any
maintainer: oskar.wickstrom@gmail.com
synopsis: Type-safe effectful state machines in Haskell
changelog: ! "* 0.1.1.0\n  - Add `call` operation to `MonadFSM` class\n* 0.1.0.0\n
  \ - Initial version of Motor\n"
basic-deps:
  reflection: -any
  base: ! '>=4.9 && <5'
  CTRex: -any
  indexed: -any
  indexed-extras: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
author: Oskar WickstrÃ¶m
latest: '0.1.1.0'
description-type: markdown
description: ! '# Motor: Type-safe effectful state machines in Haskell


  *Motor* is an experimental Haskell library for building finite-state

  machines with type-safe transitions and effects. It draws inspiration

  from the Idris

  [ST](http://docs.idris-lang.org/en/latest/st/state.html) library.


  ## Usage


  See the [Motor module documentation on

  Hackage](http://hackage.haskell.org/package/motor) for detailed usage.


  ## Examples


  * [Door](examples/Door.hs)


  ## License


  [Mozilla Public License Version 2.0](LICENSE)

'
license-name: MPL-2.0
