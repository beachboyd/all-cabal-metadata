homepage: https://github.com/effectfully/monad-var#readme
changelog-type: ''
hash: 6525187d16e69511692cd3b3064851f6e5cdfd979c9fef2225cab551afdc2212
test-bench-deps: {}
maintainer: effectfully@gmail.com
synopsis: Generic operations over variables
changelog: ''
basic-deps:
  stm: ! '>=2.2 && <2.5'
  base: ! '>=4.7 && <5'
  base-compat: ! '>=0.9.0 && <1'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1.0'
- '0.1.1.1'
- '0.1.2.0'
- '0.2.0.0'
- '0.2.1.0'
author: effectfully
latest: '0.2.1.0'
description-type: markdown
description: ! '# monad-var


  The aim of this library is to provide a unified set of operations (`new`, `read`,
  `write`, `swap`, various strict `mutate*` functions and their derivatives (like
  mutate-and-return-the-old-value) and a certain interface for `MVar`-like things)
  over all common variable types: `IORef`, `STRef s`, `MVar`, `TVar`, `TMVar`.

  When possible type classes are generalized to be over abstract containers rather
  than variables: e.g. it''d make sense to implement `MonadRead TChan` and `MonadMutate_
  Vector` instances, but no such instances are provided right now.

  There are also some lenses to be described in an upcoming blog post.


'
license-name: BSD3
