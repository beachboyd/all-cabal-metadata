homepage: https://github.com/mbg/moss#readme
changelog-type: markdown
hash: b63687194872f50702ccd57f4e09fd67441be283d2597c4ab1a9543c028be2ef
test-bench-deps: {}
maintainer: m.gale@warwick.ac.uk
synopsis: Haskell client for Moss
changelog: ! '# Changelog for moss


  ## Unreleased changes

'
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  network-simple: -any
  unix-compat: -any
  network: -any
  conduit-extra: -any
  mtl: -any
all-versions:
- '0.1.0.0'
author: Michael B. Gale
latest: '0.1.0.0'
description-type: markdown
description: ! "# moss\n\nHaskell client library for [Moss](https://theory.stanford.edu/~aiken/moss/).\n\n##
  Example\n\nIn order to use Moss, you need to register on the Moss website. Once
  you have your access token, using the library is fairly easy:\n\n```haskell\nimport
  Stanford.Moss\n\ncfg :: MossCfg\ncfg = defaultMossCfg {\n    mossLanguage = Haskell,\n
  \   mossUser = \"[YOUR ACCESS TOKEN HERE]\"\n}\n\nmain :: IO ()\nmain = do\n    url
  <- withMoss cfg $ do\n        addBaseFile \"Skeleton\" \"Skeleton.hs\"\n        addFile
  \"StudentA\" \"StudentA.hs\"\n        addFile \"StudentB\" \"StudentB.hs\"\n        query
  \"Test\"\n    print url\n```\n\nThis example establishes a connection with Moss
  using Haskell as the selected programming language. We assume that some skeleton
  code (`Skeleton.hs`) has been made available to students and relevant parts from
  that file should be ignored for plagiarism checking. The example then uploads two
  students' submissions (`StudentA.hs` and `StudentB.hs`) before telling Moss to run
  the plagiarism check with `query` which eventually returns a URL to the results.\n"
license-name: MIT
