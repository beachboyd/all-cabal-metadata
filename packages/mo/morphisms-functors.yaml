homepage: https://github.com/iokasimov/morphisms-functors
changelog-type: markdown
hash: 58170d017f2a18ca650777da0c3bf279171bca700194e1ee460da7e700e7618c
test-bench-deps: {}
maintainer: Murat Kasimov <iokasimov.m@gmail.com>
synopsis: Functors, theirs compositions and transformations
changelog: ! '# 0.1.1

  * Define `Invariant` type class

  * Functors composition is just a type synonymous

  * Control.Functor.Composition -> Control.Functor


  # 0.1.2

  * Define `Adjoint` type class

  * Control.Functor -> Control.Functor.Composition

  * Move all composition-based classes into Composition module

  * Define laws for all classes, except `Pointable`, `Exclusive` and `Extractable`


  # 0.1.3

  * Define `I`, `II` and `III` to able make instances

  * Add `Identity` and `Constant` cases of functors

  * Weaken `Adjoint` type class requirements

  * Move all newtype wrappers to `Basic` module

'
basic-deps:
  morphisms: ==0.1.0
all-versions:
- 0.1.2
- 0.1.3
author: Murat Kasimov
latest: 0.1.3
description-type: haddock
description: Attempt to define categorical abstractions in more robust and useful
  way.
license-name: MIT
