homepage: https://github.com/k0001/safe-money
changelog-type: markdown
hash: 106367033c042bf13bd6dffc994ab0bb97aa2a70ac9e0a8e132e2e06f7718310
test-bench-deps:
  safe-money: -any
  cereal: -any
  serialise: -any
  bytestring: -any
  base: -any
  text: -any
  constraints: -any
  binary: -any
  store: -any
  xmlbf: -any
  tasty-quickcheck: -any
  hashable: -any
  tasty-hunit: -any
  tasty: -any
  deepseq: -any
  aeson: -any
maintainer: renÎ»ren!zone
synopsis: ! 'Type-safe and lossless encoding and manipulation of money, fiat currencies,

  crypto currencies and precious metals.'
changelog: ! "# Version 0.4\n\n* BREAKING CHANGE. COMPILER WON'T COMPLAIN. HUMAN INTERVENTION
  POTENTIALLY\n  REQUIRED. The JSON serializations for all of `Dense`, `SomeDense`,
  `Discrete`,\n  `SomeDiscrete`, `ExchangeRate` and `SomeExchangeRate` changed. The
  `FromJSON`\n  instances are backwards compatible with the old serializations, but
  the\n  `ToJSON` instances will only generate the new format, which is the same as
  the\n  old format except the leading strings `\"Dense\"`, `\"Discrete\"` and\n  `\"ExchangeRate\"`,
  respectively, are not present in the rendered JSON array\n  anymore. So, if you
  were manually relying on the `ToJSON` instance, please\n  update your code.\n\n*
  BREAKING CHANGE. COMPILER WILL COMPLAIN: Changed the `Rep` suffix for a `Some`\n
  \ prefix Everywhere.  For example, `DenseRep` was renamed to `SomeDense`.\n\n* BREAKING
  CHANGE. COMPILER WILL COMPLAIN: Replaced the\n  `someDenseAmountNumerator` and `someDenseAmountDenominator`
  `Integers` with a\n  single `someDenseAmount` `Rational` number. Similarly for `someDiscreteScale`\n
  \ and `someExchangeRateRate`. The `mkSomeDense`, `someDiscreteScale` and\n  `mkSomeDense`
  also take a `Rational` now.\n\n* BREAKING CHANGE. COMPILER WILL COMPLAIN: The `truncate`,
  `floor`, `celing` and\n  `round` functions now return just `0` as a reminder if
  there's no significant\n  reminder, instead of `Nothing`.\n\n* Added instances for
  `serialise`.\n\n* Added instances for `xmlbf`.\n\n* Fixed `Show` instances so that
  surrounding parentheses are included when\n  necessary.\n\n* New currencies: Ripple,
  Litecoin, Ada, Monero.\n\n\n# Version 0.3\n\n* BREAKING CHANGE: The `Data.Money`
  module was renamed to `Money`.\n\n* BREAKING CHANGE: The `Data.Money.Internal` module
  is not exposed anymore. All\n  of its contents are now exported from the `Money`
  module.\n\n* BREAKING CHANGE: Renamed `discreteRep` to `toDiscreteRep`.\n\n* BREAKING
  CHANGE: Renamed `denseRep` to `toDenseRep`.\n\n* BREAKING CHANGE: Renamed `exchangeRateRep`
  to `toExchangeRateRep`.\n\n* BREAKING CHANGE: Renamed Iceleandic currency `\"eyir\"`
  to `\"eyrir\"`\n\n* Remove upper bound constraints from all dependencies except
  `base`.\n\n* Made dependency on `store` optional for the test suite, so that it
  can run on\n  GHCJS.\n\n\n# Version 0.2\n\n* Cabal flags are now manual (`aeson`,
  `binary`, `bytes`, `cereal`, `deepseq`,\n  `hashable`).\n\n* Backwards compatibility
  with GHC 7.10.\n\n* Fix `Store` instances and test them.\n\n\n# Version 0.1\n\n*
  Initial release.\n"
basic-deps:
  cereal: (>=0.5)
  serialise: (>=0.2)
  base: (>=4.8 && <5.0)
  text: -any
  constraints: -any
  binary: (>=0.7)
  store: (>=0.2)
  xmlbf: (>=0.2)
  hashable: (>=1.2)
  deepseq: (>=1.4)
  aeson: (>=0.9)
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
author: Renzo Carbonara
latest: '0.4'
description-type: markdown
description: ! 'The Haskell `safe-money` library offers type-safe and lossless encoding
  and

  operations for monetary values in all world currencies, including fiat

  currencies, precious metals and crypto-currencies.


  You can enter a development shell with `nix-shell`, or build with `nix-build

  ./release.nix -A ghc822.safe-money` (or similar, check `release.nix`).

'
license-name: BSD3
