homepage: https://github.com/leptonyu/salak#readme
changelog-type: ''
hash: 63c9015104f96fba8c8907104a1c7a32e6d7bf57c7b2b959d606c64e112db5d2
test-bench-deps:
  stm: <2.6
  base: ! '>=4.7 && <5'
  unordered-containers: <0.3
  hspec: ==2.*
  text: <1.3
  filepath: <1.5
  menshen: <0.1
  data-default: <0.8
  pqueue: <1.5
  containers: <0.7
  mtl: <2.3
  attoparsec: <0.14
  transformers: <0.6
  scientific: <0.4
  QuickCheck: <2.13
  aeson: <1.5
  yaml: <0.12
  vector: <0.13
  directory: <1.4
maintainer: Daniel YU <leptonyu@gmail.com>
synopsis: Configuration Loader
changelog: ''
basic-deps:
  stm: <2.6
  base: ! '>=4.7 && <5'
  unordered-containers: <0.3
  text: <1.3
  filepath: <1.5
  menshen: <0.1
  data-default: <0.8
  pqueue: <1.5
  containers: <0.7
  mtl: <2.3
  attoparsec: <0.14
  transformers: <0.6
  scientific: <0.4
  aeson: <1.5
  yaml: <0.12
  vector: <0.13
  directory: <1.4
all-versions:
- 0.1.4
- 0.1.6
- 0.1.7
- 0.1.8
- 0.1.9
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
author: Daniel YU
latest: 0.2.4
description-type: markdown
description: |-
  # salak

  [![Hackage](https://img.shields.io/hackage/v/salak.svg)](https://hackage.haskell.org/package/salak)
  [![stackage LTS package](http://stackage.org/package/salak/badge/lts)](http://stackage.org/lts/package/salak)
  [![stackage Nightly package](http://stackage.org/package/salak/badge/nightly)](http://stackage.org/nightly/package/salak)
  [![Build Status](https://travis-ci.org/leptonyu/salak.svg?branch=master)](https://travis-ci.org/leptonyu/salak)


  Configuration Loader for Production in Haskell.

  This library default a standard configuration load process. It can load properties from `CommandLine`, `Environment`,
  `JSON value` and `Yaml` files. They all load to the same format `SourcePack`. Earler property source has higher order
  to load property. For example:

  ```
  CommandLine:  --package.a.enabled=true
  Environment: PACKAGE_A_ENABLED: false

  lookup "package.a.enabled" properties => Just True
  ```

  `CommandLine` has higher order then `Environment`, for the former load properties earler then later.

  Usage:

  ```Haskell
  data Config = Config
    { name :: Text
    , dir  :: Maybe Text
    , ext  :: Int
    } deriving (Eq, Show)

  instance FromProp Config where
    fromProp = Config
      <$> "user"
      <*> "pwd"
      <*> "ext" .?= 1

  main = do
    c :: Config <- defaultLoadSalak def $ require ""
    print c
  ```

  ```
  Î»> c
  Config {name = "daniel", dir = Nothing, ext = 1}
  ```
license-name: BSD-3-Clause
