homepage: https://github.com/leptonyu/salak#readme
changelog-type: ''
hash: 7d008cc5a788588b081f931ef3e2fdb4b92a0e36f6d9bf3c0a6e3acdced2d681
test-bench-deps:
  base: ! '>=4.10 && <5'
  time: ! '>=1.8.0.2 && <1.9'
  hspec: ==2.*
  text: ! '>=1.2.3.1 && <1.3'
  filepath: ! '>=1.4.2.1 && <1.5'
  menshen: ! '>=0.0.2 && <0.1'
  data-default: ! '>=0.7.1.1 && <0.8'
  pqueue: ! '>=1.4.1.2 && <1.5'
  containers: ! '>=0.6.0.1 && <0.7'
  mtl: ! '>=2.2.2 && <2.3'
  attoparsec: ! '>=0.13.2.2 && <0.14'
  scientific: ! '>=0.3.6.2 && <0.4'
  QuickCheck: ! '>=2.12.6.1 && <2.14'
  directory: ! '>=1.3.3.0 && <1.4'
maintainer: Daniel YU <leptonyu@gmail.com>
synopsis: Configuration Loader
changelog: ''
basic-deps:
  base: ! '>=4.10 && <5'
  time: ! '>=1.8.0.2 && <1.9'
  text: ! '>=1.2.3.1 && <1.3'
  filepath: ! '>=1.4.2.1 && <1.5'
  menshen: ! '>=0.0.2 && <0.1'
  data-default: ! '>=0.7.1.1 && <0.8'
  pqueue: ! '>=1.4.1.2 && <1.5'
  containers: ! '>=0.6.0.1 && <0.7'
  mtl: ! '>=2.2.2 && <2.3'
  attoparsec: ! '>=0.13.2.2 && <0.14'
  scientific: ! '>=0.3.6.2 && <0.4'
  directory: ! '>=1.3.3.0 && <1.4'
all-versions:
- 0.1.0
- 0.1.4
- 0.1.6
- 0.1.7
- 0.1.8
- 0.1.11
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.5
- 0.2.6
- 0.2.8
author: Daniel YU
latest: 0.2.8
description-type: markdown
description: "# salak\n\n[![Hackage](https://img.shields.io/hackage/v/salak.svg)](https://hackage.haskell.org/package/salak)\n[![stackage
  LTS package](http://stackage.org/package/salak/badge/lts)](http://stackage.org/lts/package/salak)\n[![stackage
  Nightly package](http://stackage.org/package/salak/badge/nightly)](http://stackage.org/nightly/package/salak)\n[![Build
  Status](https://travis-ci.org/leptonyu/salak.svg?branch=master)](https://travis-ci.org/leptonyu/salak)\n\nConfiguration
  (re)loader in Haskell.\n\n## salak-yaml\n[![salak-yaml](https://img.shields.io/hackage/v/salak-yaml.svg)](https://hackage.haskell.org/package/salak-yaml)\n##
  salak-toml\n[![salak-toml](https://img.shields.io/hackage/v/salak-toml.svg)](https://hackage.haskell.org/package/salak-toml)\n\nThis
  library define a universal procedure to load configurations and parse properties,
  also supports reload configuration files.\n\nWe can load configurations from command
  line, environment, configuration files such as yaml or toml etc, and we may want
  to have our own strategies to load configurations from multi sources and overwrite
  properties by orders of these sources.\n\n`PropConfig` defines a common loading
  strategy:\n> 1. loadCommandLine\n> 2. loadEnvironment\n> 3. loadConfFiles\n> 4.
  load file from folder `salak.conf.dir` if defined\n> 5. load file from current folder
  if enabled\n> 6. load file from home folder if enabled\n> 7. file extension matching,
  support yaml or toml or any other loader.\n\nLoad earlier has higher orders, orders
  cannot be changed.\n\n`ReaderT SourcePack m` defines how to read properties:\n```Haskell\nrequire
  \"abc.prop\"\n```\n\n`ReloadableSourcePackT m` defines how to read reloadable properties:\n```Haskell\nrequireD
  \"abc.dynamic.prop\"\n```\n\nFor commandline and environment, \n```\nCommandLine:
  \ --package.a.enabled=true\nEnvironment: PACKAGE_A_ENABLED: false\n```\n\nUsage:\n\n\nEnvironment:\n```\nexport
  TEST_CONFIG_NAME=daniel\n```\nCurrent Directory:  salak.yaml\n```YAML\ntest.config:\n
  \ name: noop\n  dir: ls\n```\nCurrent Directory:  salak.toml\n```TOML\n[test.config]\next=2\n```\n\n```Haskell\ndata
  Config = Config\n  { name :: Text\n  , dir  :: Maybe Text\n  , ext  :: Int\n  }
  deriving (Eq, Show)\n\ninstance FromProp Config where\n  fromProp = Config\n    <$>
  \"user\" ? pattern \"[a-z]{5,16}\"\n    <*> \"pwd\"\n    <*> \"ext\" .?= 1\n\nmain
  = runSalak def { configName = Just \"salak\", loadExt = loadByExt $ YAML :|: TOML
  } $ do\n  c :: Config <- require \"test.config\"\n  lift $ print c\n```\n\nGHCi
  play\n```Haskell\nλ> import Salak\nλ> import Salak.Load.YAML\nλ> import Salak.Load.TOML\nλ>
  import Data.Menshen\nλ> :set -XTypeApplications\nλ> instance FromProp Config where
  fromProp = Config <$> \"user\" <*> \"dir\" <*> \"ext\" .?= 1\nλ> f = runSalak def
  { configName = Just \"salak\", loadExt = loadByExt $ YAML :|: TOML }\nλ> f (require
  \"\") >>= print @Config\nConfig {name = \"daniel\", dir = Just \"ls\", ext = 2}\n```\n\n\nTODO:\n-
  Add git pull support.\n"
license-name: BSD-3-Clause
