homepage: ''
changelog-type: text
hash: 7102bb10739231eef68eb67bbd2c1b209ee451ab11f25c5e7bee2deea08ce00f
test-bench-deps: {}
maintainer: Bertram Felgenhauer <int-e@gmx.de>
synopsis: Safe reimplementation of QuickCheck's core
changelog: ! "QuickCheck-safe 0.1.0.4\n\t* compatibility with QuickCheck 2.11\n\nQuickCheck-safe
  0.1.0.3\n\t* compatibility with QuickCheck 2.10\n\nQuickCheck-safe 0.1.0.2\n\t*
  compatibility with QuickCheck 2.9\n\nQuickCheck-safe 0.1.0.1\n\t* compatibility
  with QuickCheck 2.7\n\nQuickCheck-safe 0.1\n\t* initial release\n"
basic-deps:
  base: ! '>=4.6 && <5'
  QuickCheck: ! '>=2.7.3 && <2.12'
all-versions:
- '0.1'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
author: Bertram Felgenhauer
latest: '0.1.0.4'
description-type: haddock
description: ! 'QuickCheck-safe reimplements the quickCheck functionality with a pure

  interface and a very small trusted base (see Test.QuickCheck.Safe.Trusted).


  * uses the existing Arbitrary instances

  * implemented features: testing, result minimization (i.e., shrinking)

  * missing features: expected failures, label frequencies, coverage


  The package is targeted at users who want to leverage SafeHaskell for

  sandboxing.


  >>> putStr $ quickCheck (inventQCGen ()) (\x -> length (x :: [()]) < 10)

  *** Failed! Falsifiable (after 18 tests and 3 shrinks):

  [(),(),(),(),(),(),(),(),(),(),(),(),(),(),()]'
license-name: MIT
