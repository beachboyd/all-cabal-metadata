homepage: ''
changelog-type: markdown
hash: 234d8136a4461d8098ecaf9dbbe8a41b0280f8d831f65f3df41e82f856b19fb8
test-bench-deps: {}
maintainer: Athan Clark <athan.clark@gmail.com>
synopsis: ! 'Simple type-level combinators for augmenting

  QuickCheck instances.'
changelog: ! "# Revision history for dnf\n\n## 0.0.0 -- 2016-04-08\n\n* First version.
  Released on an unsuspecting world.\n\n## 0.0.1  -- 2016-06-18\n\n* Added changelog
  (which you are now reading).\n* Added instances of ``AtLeast``, ``AtMost``, and
  ``Between`` for\n  ``OrderedList``.\n* Removed some redundant constraints.\n"
basic-deps:
  base: ! '>=4.8 && <5'
  unfoldable-restricted: ! '>=0.0.1'
  QuickCheck: -any
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
author: Athan Clark <athan.clark@gmail.com>
latest: '0.0.4'
description-type: haddock
description: ! 'Simply wrap the type you want to generate (assuming it satisfies

  all the necessary constraints) to refine the terms generated:


  @

  &#123;-&#35; LANGUAGE DataKinds &#35;-&#125;

  &#13;

  import Data.Set (Set)

  import Test.QuickCheck

  import Test.QuickCheck.Instances

  import GHC.TypeLits

  &#13;

  instance Arbitrary LinearEquation where

  &#32;&#32;arbitrary = do

  &#32;&#32;&#32;&#32;vars <- arbitrary :: Gen (AtLeast 3 Set String)

  &#32;&#32;&#32;&#32;&#45;&#45; ...

  @

'
license-name: BSD3
