homepage: https://github.com/zadarnowski/quiver
changelog-type: ''
hash: 4f4283a209f2bf2bb56931251b882a485be84d8a7eaadf3de01c222f954d8052
test-bench-deps: {}
maintainer: Patryk Zadarnowski <pat@jantar.org>
synopsis: Quiver finite stream processing library
changelog: ''
basic-deps:
  base: ! '>=4.8 && <5'
  mmorph: ! '>=1.0.4'
  transformers: ! '>=0.4.2.0'
all-versions:
- 0.0.0.1
- 0.0.0.2
- 0.0.0.3
- 0.0.0.4
- 0.0.0.5
- 0.0.0.6
- 0.0.0.7
- 0.0.0.8
- 0.0.0.9
- 0.0.0.10
- 0.0.0.11
- 0.0.0.12
- 1.0.0
- 1.0.1
- 1.0.2
- 1.1.0
- 1.1.1
- 1.1.2
- 1.1.3
author: Patryk Zadarnowski
latest: 1.1.3
description-type: markdown
description: ! "Quiver\n======\n\n    Copyright © 2015 Patryk Zadarnowski «pat@jantar.org».\n
  \   All rights reserved.\n\n_Quiver_ is a powerful stream processing library for\ncombinatorial
  and monadic representation of computations\nover both inductive and coinductive
  data streams.\n\nIt is similar to Gabriel Gonzalez's _pipes_ and\nMichael Snoyman's
  _conduit_, but generalises both\nwith support for functor-based computations and\na
  clean support for finite (i.e., inductive) data\nstreams, both upstream and downstream
  of the computation\nbeing defined.\n\nThe underlying data structure, `P`, is almost
  identical\nto the `Proxy` data structure of the `Pipes` library,\nexcept that the
  `Consume` and `Produce` constructors\n(corresponding, respectively, to `Request`
  and `Response`\nin the Pipes' `Proxy` data type) include an additional\nargument
  which explicitly captures the processor's\nbehaviour in the event of input stream
  depletion\n(for `Consume`) or output decoupling (for `Produce`).\nThis simple mechanism
  subsumes Conduit's need for\nelaborate unconsumed-input tracking mechanisms,\nand
  allows us to provide a mathematically-clean\nframework for processing of finite
  data streams.\n\nThis library is currently very young, and users should\nexpect
  significant changes to the Quiver core combinators\nas the underlying theory is
  developed and the interface\nstabilises asymptotically to the future version 1.0.\n"
license-name: BSD-3-Clause
