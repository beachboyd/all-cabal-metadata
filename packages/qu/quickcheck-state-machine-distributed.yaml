homepage: https://github.com/advancedtelematic/quickcheck-state-machine-distributed#readme
changelog-type: markdown
hash: 11a2a324ae967c6b5ede925888f465841e6444264417d09d03df76f93bf261b1
test-bench-deps:
  stm: -any
  base: ! '>=4.7 && <5'
  distributed-process: ! '>=0.7.3'
  strict: -any
  containers: -any
  quickcheck-state-machine-distributed: -any
  binary: -any
  network-transport-tcp: ! '>=0.6.0'
  tasty-quickcheck: -any
  mtl: -any
  network-transport: ! '>=0.5.2'
  temporary: -any
  random: -any
  tasty: -any
  QuickCheck: ! '>=2.10'
  directory: -any
maintainer: stevan.andjelkovic@here.com
synopsis: Test monadic programs using state machine based models
changelog: ! '## Changelog for quickcheck-state-machine-distributed


  #### 0.0.1 (2018-5-3)


  * Lower the lower bound of the QuickCheck dependency.


  #### 0.0.0 (2018-5-3)


  * Initial release.

'
basic-deps:
  stm: -any
  base: ! '>=4.7 && <5'
  distributed-process: ! '>=0.7.3'
  containers: -any
  binary: -any
  network-transport-tcp: ! '>=0.6.0'
  mtl: -any
  network-transport: ! '>=0.5.2'
  random: -any
  QuickCheck: ! '>=2.10'
all-versions:
- '0.0.0'
- '0.0.1'
author: Stevan Andjelkovic
latest: '0.0.1'
description-type: markdown
description: ! "## quickcheck-state-machine-distributed\n\n[![Hackage](https://img.shields.io/hackage/v/quickcheck-state-machine-distributed.svg)](https://hackage.haskell.org/package/quickcheck-state-machine-distributed)\n[![Stackage
  Nightly](http://stackage.org/package/quickcheck-state-machine-distributed/badge/nightly)](http://stackage.org/nightly/package/quickcheck-state-machine-distributed)\n[![Stackage
  LTS](http://stackage.org/package/quickcheck-state-machine-distributed/badge/lts)](http://stackage.org/lts/package/quickcheck-state-machine-distributed)\n[![Build
  Status](https://api.travis-ci.org/advancedtelematic/quickcheck-state-machine-distributed.svg?branch=master)](https://travis-ci.org/advancedtelematic/quickcheck-state-machine-distributed)\n\n`quickcheck-state-machine-distributed`
  is Haskell library for testing stateful,\npossibly distributed, programs. It's based
  on QuickCheck, but differs from the\n[`Test.QuickCheck.Monadic`](https://hackage.haskell.org/package/QuickCheck/docs/Test-QuickCheck-Monadic.html)\napproach
  in that it lets the user specify the correctness by means of a state\nmachine based
  model using pre- and post-conditions. The advantage of the state\nmachine approach
  is twofold: 1) specifying the correctness of your programs\nbecomes less adhoc,
  and 2) you get testing for race conditions for free.\n\nThe combination of state
  machine based model specification and property based\ntesting first appeared in
  Erlang's proprietary QuickCheck. The\n`quickcheck-state-machine-distributed` library
  can be seen as an attempt to\nprovide similar functionality to Haskell's QuickCheck
  library.\n\nThe `quickcheck-state-machine-distributed` library builds upon ideas
  from the\n[`quickcheck-state-machine`](https://github.com/advancedtelematic/quickcheck-state-machine)\nsister
  library. The most significant difference is that the former is based on\nthe `distributed-process`
  library, hence the name. A more detailed comparison\nfollows below.\n\n## Example\n\nSee\n[`test/TicketDispenser.hs`](https://github.com/advancedtelematic/quickcheck-state-machine-distributed/blob/master/test/TicketDispenser.hs)\nfor
  a full example of how to implement and test a ticket dispenser -- think of\none
  of those machines in the pharmacy which gives you a piece of paper with your\nnumber
  in line on it.\n\nThis example also appears in the *Testing a Database for Race
  Conditions with\nQuickCheck* and *Testing the Hard Stuff and Staying Sane*\n[[PDF](http://publications.lib.chalmers.se/records/fulltext/232550/local_232550.pdf),\n[video](https://www.youtube.com/watch?v=zi0rHwfiX1Q)]
  papers.\n\n## `quickcheck-state-machine-distributed` vs `quickcheck-state-machine`\n\nApart
  from the already mentioned difference that `-distributed` is based on\n`distributed-process`es,
  it's also different in that it:\n\n* Decouples requests from responses (opening
  up the possibility for testing\n  asynchronous interfaces);\n\n* Takes a more lightweight
  approach; no GADTs, no references (which hopefully\n  makes the library easier to
  understand and use).\n\n## Contributing\n\nThe `quickcheck-state-machine-distributed`
  library is still very experimental.\n\nWe would like to encourage users to try it
  out, and join the discussion of how\nwe can improve it on the issue tracker!\n\n##
  See also\n\nThe README of the sister library\n[`quickcheck-state-machine`](https://github.com/advancedtelematic/quickcheck-state-machine#readme)\nlibrary
  contains many links and examples that could be useful for a better\nunderstanding
  of this library and the underlying principles.\n\n## License\n\nBSD-style (see the
  file LICENSE).\n"
license-name: BSD2
