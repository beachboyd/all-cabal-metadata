homepage: http://github.com/luqui/quantum-arrow
changelog-type: ''
hash: 3676ae64ff6d9886d7caa59e02f3433601fda0c6dda28265550e1f625acb77ff
test-bench-deps: {}
maintainer: lrpalmer@gmail.com
synopsis: An embedding of quantum computation as a Haskell arrow
changelog: ''
basic-deps:
  MonadRandom: -any
  base: -any
  mtl: -any
  random: -any
  QuickCheck: <2.0
all-versions:
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
author: Luke Palmer
latest: 0.0.5
description-type: haddock
description: ! 'This module is a loose port of the Quantum::Entanglement

  Perl module, which endows its host language with quantum-computationesque

  effects.  In this Haskell version this is done using an

  arrow to take advantage of the arrow syntax for imperative-looking

  code.  The module has all the fun bells and whistles of quantum

  computation, including entanglement and interference, even through

  conditionals (which the Perl analog does not support).  The arrow

  is defined over any instance of MonadRandom, so if you want to

  get especially crazy, you can experiment with what quantum computation

  is like when observables include invoking continuations.

  See the included example.hs for some simple examples of what

  using this module looks like.'
license-name: LicenseRef-LGPL
