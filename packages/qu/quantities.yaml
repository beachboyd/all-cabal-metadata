homepage: http://github.com/jdreaver/quantities
changelog-type: markdown
hash: d9682eec40942e405243455a34be7d50a529509d6e38173b6cd6da295cfb1190
test-bench-deps:
  hlint: -any
  base: ==4.*
  hspec: -any
  process: -any
  parsec: -any
  doctest: -any
  containers: -any
  regex-compat: -any
  mtl: -any
  quantities: -any
  Glob: -any
maintainer: John David Reaver <johndreaver@gmail.com>
synopsis: Unit conversion and manipulation library.
changelog: ! "quantities changelog\n====================\n\n0.4 (unreleased)\n----------------\n\n-
  Changed type of `Quantity` to `Quantity a`, where `a` is the type of the\n  magnitude.
  Note that `a` should be an instance of `Floating` to get the most\n  out of the
  available operations on quantities.\n- Added an executable that is an interface
  to `fromString`\n- Can use \" per \" as a synonym for \"=>\" in `fromString`\n\n\n0.3
  (4-15-2014)\n----------------\n\n- Added unit conversion to fromString using \"x
  => y\"\n- Made dimensionality printing nicer.\n- Added doctests and doc coverage
  tests.\n\n\n0.2 (4-6-2014)\n--------------\n\n- Can handle arithmetical expressions
  in fromString\n- Added support for user-defined definitions\n- Added check that
  definitions are the same for conversions\n\n\n0.1 (3-31-2014)\n---------------\n\n-
  Full implementation of multiplicative dimensional quantities (no offsets yet\n  for
  temperatures).\n- Support for conversions and monadic quantity computations.\n-
  Builtin expression parser.\n- Simple definitions file format, fully stocked with
  units.\n- Travis CI, HSpec units tests, and HLint check.\n"
basic-deps:
  base: ==4.*
  parsec: -any
  containers: -any
  mtl: -any
  quantities: -any
all-versions:
- 0.1.0
- 0.2.0
- 0.3.0
- 0.4.0
author: John David Reaver <johndreaver@gmail.com>
latest: 0.4.0
description-type: haddock
description: ! 'A library for creating and manipulating physical

  quantities, which are a numerical value

  associated with a unit of measurement. Included

  is an expression parser and a huge list of

  predefined quantities with which to parse

  strings into a Quantity datatype. Once created,

  a quantity can be converted to different units

  or queried for its dimensionality. A user can

  also operate on quantities arithmetically, and

  doing so uses automatic unit conversion and

  simplification.'
license-name: BSD-3-Clause
