homepage: https://github.com/sergv/bencoding
changelog-type: text
hash: c8337a8e2f283cf2173ea6f3f34a1c87891a6b82b66cd8b4ec292eda40989ec6
test-bench-deps:
  bytestring: ! '>=0.10'
  base: ==4.*
  hspec: -any
  criterion: -any
  bencoding: -any
  containers: ! '>=0.4'
  bencode: ! '>=0.5'
  ghc-prim: -any
  AttoBencode: ! '>=0.2'
  attoparsec: ! '>=0.10'
  deepseq: -any
  QuickCheck: -any
maintainer: Sergey Vinokurov <serg.foo@gmail.com>
synopsis: A library for encoding and decoding of BEncode data.
changelog: ! "2018-09-18  Sergey Vinokurov  <serg.foo@gmail.com>\n\n\t* 0.4.4.0: Fix
  build for GHC 8.0-8.4. Derive Generic instances. Add Semigroup instance.\n\n2013-12-19
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.4.3.0: Add lookAhead and match functions.\n\n2013-12-16
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.4.2.1: Override default Monad(fail)
  method so it is possible\n\tto catch Get monad failures from pure code.\n\n2013-12-14
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.4.2.0: Override default fixity for
  operators: previously it\n\thas been impossible to mix bencode Get operators ((<$>!),
  (<$>?),\n\t(<*>!), (<*>?)) with applicative operators ((<$>), (<*>)).\n\n2013-12-08
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.4.1.0: Expose parser and builder so
  it is possible to use\n\tparser incrementally.\n\n2013-10-01  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.4.0.2: Minor fixes.\n\n2013-10-01  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.4.0.1:
  Nothing changed.\n\n2013-10-01  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.4.0.0:
  Faster dictionary conversion.\n\n2013-09-28  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.3.0.0: Rename BEncode to BValue and BEncodable to BEncode.\n\n2013-09-28  Sam
  Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.2.2.0: Arbitrary length integers. (by specification)\n\n2013-08-26
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.2.0.0: Added default decoders/encoders
  using GHC Generics.\n\n2013-06-09  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.1.0.0:
  Initial version.\n"
basic-deps:
  bytestring: ! '>=0.10'
  base: ! '>=4.4 && <5'
  text: ! '>=0.11'
  integer-gmp: -any
  ghc-prim: -any
  mtl: -any
  attoparsec: ! '>=0.10'
  deepseq: ! '>=1.3'
  pretty: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.2.0
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.2
- 0.4.1.0
- 0.4.2.0
- 0.4.2.1
- 0.4.3.0
- 0.4.4.0
author: Sam Truzjan
latest: 0.4.4.0
description-type: markdown
description: ! "### Synopsis\n\n[BEncode][bencode] is [JSON][json-ref]-like format
  used in bittorrent\nprotocol but might be used anywhere else.\n\n### Description\n\nThis
  package implements fast seamless encoding/decoding to/from\nbencode format for many
  native datatypes. To achieve\n[more performance][cmp] we use\n[bytestring builders][bytestring-builder]
  and hand optimized\n[attoparsec][attoparsec] parser so this library is considered
  as\nreplacement for BEncode and AttoBencode packages.\n\n#### Format\n\nBencode
  is pretty similar to JSON: it has dictionaries(JSON objects),\nlists(JSON arrays),
  strings and integers. However bencode has a few\nadvantages:\n\n* Compactness: no
  spaces in between any values â€” nor lists nor dicts\n  nor anywhere else.\n* Dictionaries
  always sorted lexicographically by the keys. This allow\n  us to test data on equality
  without decoding from raw bytestring.\n  Moreover this allow to hash encoded data
  (this property is heavily\n  used by core bittorrent protocol).\n* All strings prefixed
  with its length. This simplifies and speed up\n  string parsing.\n\nHovewer there
  are some disadvantages comparing with JSON:\n\n* Bencode is certainly less human
  readable.\n* Bencode is rarely used, except bittorrent protocol of course.\n\n###
  Documentation\n\nFor documentation see package [hackage][hackage] page.\n\n### Build
  Status\n\n[![Build Status][travis-img]][travis-log]\n\n### Maintainer <serg.foo@gmail.com>\n\nFeel
  free to report bugs and suggestions via [issue tracker][issues]\nor the mail.\n\n\n[cmp]:
  http://htmlpreview.github.com/?https://raw.github.com/wiki/cobit/bencoding/comparison.html\n\n[bencode]:
  https://wiki.theory.org/BitTorrentSpecification#Bencoding\n[json-ref]: http://www.json.org/\n[attoparsec]:
  http://hackage.haskell.org/package/attoparsec-0.10.4.0\n[bytestring-builder]: http://hackage.haskell.org/packages/archive/bytestring/0.10.2.0/doc/html/Data-ByteString-Builder.html\n\n[travis-img]:
  https://travis-ci.org/sergv/bencoding.svg?branch=master\n[travis-log]: https://travis-ci.org/sergv/bencoding\n\n[hackage]:
  http://hackage.haskell.org/package/bencoding\n[issues]: https://github.com/sergv/bencoding/issues\n"
license-name: BSD-3-Clause
