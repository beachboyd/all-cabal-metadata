homepage: https://github.com/trskop/between
changelog-type: markdown
hash: 05c82afced3a60a6e7d624d6c1d410f6b1d3de264a663cc53237bef4b63e0322
test-bench-deps: {}
maintainer: peter.trsko@gmail.com
synopsis: Function combinator "between" and derived combinators
changelog: ! "# ChangeLog / ReleaseNotes\n\n\n## Version 0.11.0.0\n\n* New function
  application combinators (**new**):\n    * `inbetween :: a -> b -> (a -> b -> r)
  -> r`\n    * `(~$~) :: a -> b -> (a -> b -> r) -> r`\n    * `(~$$~) :: b -> a ->
  (a -> b -> r) -> r`\n    * `withIn :: ((a -> b -> r) -> r) -> (a -> b -> r) -> r`\n
  \   * `withReIn :: ((b -> a -> r) -> r) -> (a -> b -> r) -> r`\n* Precursors to
  `Iso`, `Lens` and `Prism` (**new**):\n    * `type PreIso r s t a b = ((b -> t) ->
  (s -> a) -> r) -> r`\n    * `type PreIso' r s a = PreIso r s s a a`\n    * `type
  PreLens r s t a b = ((b -> s -> t) -> (s -> a) -> r) -> r`\n    * `type PreLens'
  r s a = PreLens r s s a a`\n    * `type PrePrism r s t a b = ((b -> t) -> (s ->
  Either t a) -> r) -> r`\n    * `type PrePrism' r s a = PrePrism r s s a a`\n* Uploaded
  to Hackage: http://hackage.haskell.org/package/between-0.11.0.0\n\n\n## Version
  0.10.0.0\n\n* Original implementation moved to module `Data.Function.Between.Lazy`
  and is\n  now reexported by `Data.Function.Between`. (**new**)\n* Implementation
  of strict variants of all functions defined in\n  `Data.Function.Between.Lazy` module.
  These new functions use\n  `(f . g) x = f '$!' g '$!' x` as definition for function
  composition where\n  `$!` is strict application. (**new**)\n* Uploaded to Hackage:
  http://hackage.haskell.org/package/between-0.10.0.0\n\n\n## Version 0.9.0.2\n\n*
  Minor documentation changes.\n* Resolving some Haddock issues in documentation.\n*
  Uploaded to [Hackage][]:\n  <http://hackage.haskell.org/package/between-0.9.0.2>\n\n\n##
  Version 0.9.0.1\n\n* Removing all INLINE and RULES. Tested it using [ghc-core][]
  with GHC 7.8.3\n  (bundled with [Haskell Platform][] 2014.2.0.0) and it works well.\n*
  Uploaded to [Hackage][]:\n  <http://hackage.haskell.org/package/between-0.9.0.1>\n\n\n##
  Version 0.9.0.0\n\n* First public release.\n* Uploaded to [Hackage][]:\n  <http://hackage.haskell.org/package/between-0.9.0.0>\n\n\n\n[Hackage]:\n
  \ http://hackage.haskell.org/\n  \"HackageDB (or just Hackage) is a collection of
  releases of Haskell packages.\"\n[Haskell Platform]:\n  http://www.haskell.org/platform/\n
  \ \"The Haskell Platform\"\n[ghc-core]:\n  http://hackage.haskell.org/package/ghc-core\n
  \ \"Display GHC's core and assembly output in a pager\"\n"
basic-deps:
  base: ! '>3 && <5'
all-versions:
- 0.9.0.0
- 0.9.0.1
- 0.9.0.2
- 0.10.0.0
- 0.11.0.0
author: Peter TrÅ¡ko
latest: 0.11.0.0
description-type: markdown
description: ! "Between\n=======\n\n[![Hackage](http://img.shields.io/hackage/v/between.svg)][Hackage:
  between]\n[![Hackage Dependencies](https://img.shields.io/hackage-deps/v/between.svg)](http://packdeps.haskellers.com/reverse/between)\n[![Haskell
  Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]\n[![BSD3
  License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal:
  BSD3]\n\n[![Build](https://travis-ci.org/trskop/between.svg)](https://travis-ci.org/trskop/between)\n\n\nDescription\n-----------\n\nIt
  turns out that this combinator\n\n````Haskell\nf ~@~ g = (f .) . (. g)\n````\n\nis
  a powerful thing. It was abstracted from following (commonly used)\npattern `f .
  h . g` where `f` and `g` are fixed.\n\nThis library not only define `~@~` combinator,
  but also some derived\ncombinators that can help us to easily define a lot of things
  including\nlenses. See [lens package][Hackage: lens] for detais on what lenses are.\n\nFunction
  `Data.Function.on` can be implemented using `~@~` as:\n\n````Haskell\non :: (b ->
  b -> c) -> (a -> b) -> a -> a -> c\non f g = (id ~@~ g ~@~ g) f\n````\n\nIf function
  @on3@ existed in /base/ then it could be defined as:\n\n````Haskell\non3 :: (b ->
  b -> b -> d) -> (a -> b) -> a -> a -> a -> d\non3 f g = (id ~@~ g ~@~ g ~@~ g) f\n````\n\nFor
  more examples see documentation.\n\n\nDocumentation\n-------------\n\nStable releases
  with API documentation are available on\n[Hackage][Hackage: between].\n\n\nBuilding
  Options\n----------------\n\n* `-fpedantic` (disabled by default)\n\n  Pass additional
  warning flags to GHC.\n\n\nLicense\n-------\n\nThe BSD 3-Clause License, see [LICENSE][]
  file for details.\n\n\nContributions\n-------------\n\nContributions, pull requests
  and bug reports are welcome! Please don't be\nafraid to contact author using GitHub
  or by e-mail (see `.cabal` file for\nthat).\n\n\n\n[Hackage: between]:\n    https://hackage.haskell.org/package/between\n[Hackage:
  lens]:\n    http://hackage.haskell.org/package/lens\n[Haskell.org]:\n  http://www.haskell.org\n
  \ \"The Haskell Programming Language\"\n[tl;dr Legal: BSD3]:\n  https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29\n
  \ \"BSD 3-Clause License (Revised)\"\n[LICENSE]:\n  https://github.com/trskop/between/blob/master/LICENSE\n
  \ \"License of between package.\"\n"
license-name: BSD-3-Clause
