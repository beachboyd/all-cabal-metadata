homepage: https://hackage.haskell.org/package/bed-and-breakfast
changelog-type: markdown
hash: 02b7f3f18b23f97cf70782f09bed746ecad751f331121a3a43fe97880c25fbce
test-bench-deps:
  base: ! '>=4.5 && <5'
  bed-and-breakfast: -any
  QuickCheck: ! '>=2.4.2'
maintainer: Julian Fleischer <julian.fleischer@fu-berlin.de>
synopsis: Efficient Matrix and Vector operations in 100% Haskell.
changelog: ! "<dl>\n  <dt>v0.1</dt>\n  <dd>\n    Initial version, features <code>det</code>,\n
  \   basic arithmetic operations, and instances for\n    <code>Float</code>, <code>Double</code>,
  <code>Complex</code>, and\n    <code>Rational</code>.\n  </dd>\n\n  <dt>v0.1.1</dt>\n
  \ <dd>\n    Fixed wrong algorithm for computing the inverse of a <code>Matrix</code>.\n
  \ </dd>\n\n  <dt>v0.1.2</dt>\n  <dd>\n    Added instances for <code>Num Matrix</code>,\n
  \   <code>Fractional Matrix</code>, and <code>Eq Matrix</code>.\n  </dd>\n\n  <dt>v0.1.3</dt>\n
  \ <dd>\n    <code>inv</code> is now a total function and will no longer call\n    <code>error</code>
  if a matrix is not invertible. Also <code>Matrix</code>\n    derives <code>Data.Typeable</code>.\n
  \   now.\n  </dd>\n\n  <dt>v0.1.4</dt>\n  <dd>\n    Added <code>scale</code>, and
  methods for joining matrices vertically and\n    horizontally. Corrected a bug in
  <code>isUnit</code> reported by Charles Durham.\n    <code>isUnit</code> returned
  True for any matrix for which\n    <code>all (== 1) . trace</code> would have, which
  is wrong).\n  </dd>\n\n  <dt>v0.2</dt>\n  <dd>\n    A little bit more documentation.
  Also moved some\n    functions (<code>isXXX</code>) away from the type class <code>MatrixElement</code>.\n
  \   Properly flagged the package as experimental (was improperly marked as\n    <code>stable</code>,
  copied form a template).\n  </dd>\n\n  <dt>v0.2.1</dt>\n  <dd>\n    Added <code>cofactors</code>,
  <code>adjugate</code>, <code>minor</code>, and\n    <code>minorMatrix</code>.\n
  \ </dd>\n\n  <dt>v0.2.2</dt>\n  <dd>\n    <code>rank</code> works now for any Matrix
  component type.\n  </dd>\n\n  <dt>v0.2.3</dt>\n  <dd>\n    Added <code>Read</code>
  instance for <code>Matrix</code>.\n    Improved on documentation.\n  </dd>\n\n  <dt>v0.3</dt>\n
  \ <dd>\n    Added a QuickCheck test suite, fixed a bug in <code>det</code>\n    (det
  would crash for singular matrices, where it should\n    return 0).\n  </dd>\n\n
  \ <dt>v0.3.1</dt>\n  <dd>\n    Added TemplateHaskell syntactic sugar (see <code>Numeric.Matrix.Sugar</code>).\n
  \   Rewrote multiplication. <code>matrix</code> function build an array faster now.\n
  \ </dd>\n\n  <dt>v0.3.2</dt>\n  <dd>\n    <code>Numeric.Matrix.Sugar</code> was
  not mentioned in the\n    cabal file. Improved test suite. Improved documentation.\n
  \ </dd>\n\n  <dt>v0.4</dt>\n  <dd>\n    Fixed a bug regarding <code>empty</code>
  and <code>fromList</code>.\n    Use unsafe operations where it is safe for speed.\n
  \   Added RULES. Added an instance for binary.\n  </dd>\n\n  <dt>v0.4.1</dt>\n  <dd>\n
  \   The unsafe operations used in v0.4 turned out\n    to fatally fail on certain
  platforms. Revoked this change.\n  </dd>\n\n  <dt>v0.4.2</dt>\n  <dd>\n    Fixed
  a tiny bug regarding the <code>row</code> function\n    for extracting the number
  of rows in a Matrix.\n    Thanks to Tim Makarios for finding and fixing the bug.\n
  \ </dd>\n\n  <dt>v0.4.3</dt>\n  <dd>\n    Fixed a bug in <code>transpose</code>
  that prevented it from\n    working correctly with non-square matrices.\n    Thanks
  to @owst@ from @hub.darcs.net@.\n  </dd>\n\n  <dt>v0.5</dt>\n  <dd>\n    <code>inv</code>
  works now for complex matrices too.\n    Added conversion functions <code>toDoubleMatrix</code>,\n
  \   <code>toComplexMatrix</code>, <code>toRationalMatrix</code>.\n    Changed signature
  of <code>minor</code> and <code>minorMatrix</code>\n    to a more natural format.\n
  \ </dd>\n</dl>\n\n"
basic-deps:
  base: ! '>=4.5 && <5'
  array: ! '>=0.4'
  binary: ! '>=0.5'
  cpphs: ! '>=1.18'
  deepseq: ! '>=1.3'
  template-haskell: ! '>=2.7'
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- '0.2'
- 0.2.1
- 0.2.2
- 0.2.3
- '0.3'
- 0.3.1
- 0.3.2
- '0.4'
- 0.4.1
- 0.4.2
- 0.4.3
- '0.5'
author: Julian Fleischer <julian.fleischer@fu-berlin.de>
latest: '0.5'
description-type: markdown
description: ! "bed-and-breakfast [![Build Status](https://travis-ci.org/scravy/bed-and-breakfast.svg?branch=master)](https://travis-ci.org/scravy/bed-and-breakfast)\n=================\n\nMatrix
  operations in 100% pure awesome Haskell.\n\nBed and Breakfast is a linear algebra
  library written in Haskell.\nIt provides fast matrix operations like finding the
  determinant\nor the inverse of a matrix.\n\n- [API documentation](https://hackage.haskell.org/package/bed-and-breakfast-0.4.1/docs/Numeric-Matrix.html)\n-
  bed-and-breakfast on [Hackage](https://hackage.haskell.org/package/bed-and-breakfast)\n\nExample
  (GHCi Session)\n-----------------------\n\n    *Numeric.Matrix> let m = fromList
  [[0,3,2],[5,6,10],[4,3,2.0]] :: Matrix Double\n    *Numeric.Matrix> inv m\n    Just
  \ -0.2499999999999999  0.0  0.25\n    0.4166666666666667  -0.11111111111111112  0.1388888888888889\n
  \   -0.12500000000000006  0.16666666666666669  -0.20833333333333334\n\n    *Numeric.Matrix>
  let m = fromList [[0,3,2],[5,6,10],[4,3,2.0]] :: Matrix Rational\n    *Numeric.Matrix>
  inv m\n    Just  (-1) % 4  0 % 1  1 % 4\n    5 % 12  (-1) % 9  5 % 36\n    (-1)
  % 8  1 % 6  (-5) % 24\n    \nExample (with Template Haskell Syntactic Sugar)\n------------------------------------------------\n\n
  \   {-# LANGUAGE Haskell2010, TemplateHaskell, QuasiQuotes #-}\n    \n    import
  Numeric.Matrix\n    import Numeric.Matrix.Sugar\n    \n    m :: Matrix Double\n
  \   m = [dMatrix| 20   30 40\n                  40.5 71 23\n                  20
  \  20 27 |]\n\n    mInv = maybe (error \"not invertible\") id $ inv m\n\n"
license-name: MIT
