homepage: https://github.com/dschrempf/elynx#readme
changelog-type: markdown
hash: 24f8efef03c7f0d529ab9123902260895a14d6ba13e1dd9df8682237871f8018
test-bench-deps:
  elynx-seq: -any
  bytestring: ! '>=0.10.8.2 && <0.11'
  mwc-random: ! '>=0.14.0.0 && <0.15'
  base: ! '>=4.12.0.0 && <4.13'
  hspec: ! '>=2.7.1 && <2.8'
  elynx-tools: ! '>=0.0.1 && <0.1'
  megaparsec: ! '>=7.0.5 && <7.1'
  async: ! '>=2.2.2 && <2.3'
  word8: ! '>=0.1.3 && <0.2'
  matrices: ! '>=0.5.0 && <0.6'
  integration: ! '>=0.2.1 && <0.3'
  containers: ! '>=0.6.0.1 && <0.7'
  lens: ! '>=4.17.1 && <4.18'
  math-functions: ! '>=0.3.1.0 && <0.4'
  elynx-tree: ! '>=0.0.1 && <0.1'
  statistics: ! '>=0.15.0.0 && <0.16'
  data-memocombinators: ! '>=0.5.1 && <0.6'
  hspec-megaparsec: ! '>=2.0.1 && <2.1'
  transformers: ! '>=0.5.6.2 && <0.6'
  optparse-applicative: ! '>=0.14.3.0 && <0.15'
  parallel: ! '>=3.2.2.0 && <3.3'
  vector-th-unbox: ! '>=0.2.1.6 && <0.3'
  hmatrix: ! '>=0.20.0.0 && <0.21'
  primitive: ! '>=0.6.4.0 && <0.7'
  vector: ! '>=0.12.0.3 && <0.13'
maintainer: dominik.schrempf@gmail.com
synopsis: Handle molecular sequences
changelog: |2+

  # Table of Contents

  1.  [Changelog for ELynx](#org9916021)


  <a id="org9916021"></a>

  # Changelog for ELynx

basic-deps:
  bytestring: ! '>=0.10.8.2 && <0.11'
  mwc-random: ! '>=0.14.0.0 && <0.15'
  base: ! '>=4.12.0.0 && <4.13'
  elynx-tools: ! '>=0.0.1 && <0.1'
  megaparsec: ! '>=7.0.5 && <7.1'
  async: ! '>=2.2.2 && <2.3'
  word8: ! '>=0.1.3 && <0.2'
  matrices: ! '>=0.5.0 && <0.6'
  integration: ! '>=0.2.1 && <0.3'
  containers: ! '>=0.6.0.1 && <0.7'
  lens: ! '>=4.17.1 && <4.18'
  math-functions: ! '>=0.3.1.0 && <0.4'
  elynx-tree: ! '>=0.0.1 && <0.1'
  statistics: ! '>=0.15.0.0 && <0.16'
  data-memocombinators: ! '>=0.5.1 && <0.6'
  transformers: ! '>=0.5.6.2 && <0.6'
  optparse-applicative: ! '>=0.14.3.0 && <0.15'
  parallel: ! '>=3.2.2.0 && <3.3'
  vector-th-unbox: ! '>=0.2.1.6 && <0.3'
  hmatrix: ! '>=0.20.0.0 && <0.21'
  primitive: ! '>=0.6.4.0 && <0.7'
  vector: ! '>=0.12.0.3 && <0.13'
all-versions:
- 0.0.1
author: Dominik Schrempf
latest: 0.0.1
description-type: markdown
description: "\n\n# The ELynx Suite\n\nVersion: 0.0.1.\nReproducible evolution made
  easy.\n\nThe ELynx Suite is a Haskell library and a tool set for computational biology.\nThe
  goal of the ELynx Suite is reproducible research. Evolutionary sequences and\nphylogenetic
  trees can be read, viewed, modified and simulated. Exact\nspecification of all options
  is necessary, and nothing is assumed about the data\n(e.g., the type of code). The
  command line with all arguments is consistently,\nand automatically logged. The
  work overhead in the beginning usually pays off in\nthe end.\n\nThe Elynx Suite
  consists of three library packages and two executables providing\na range of sub
  commands.\n\nThe library packages are:\n\n-   **elynx-seq:** Handle evolutionary
  sequences and multi sequence alignments;\n-   **elynx-tree:** Handle phylogenetic
  trees;\n-   **elynx-tools:** Tools for the provided executables;\n\nThe executables
  are:\n\n-   **SLynx:** Analyze, modify, and simulate evolutionary sequences (FASTA
  format);\n-   **TLynx:** Analyze, modify, and simulate phylogenetic trees (Newick
  format).\n\n**ELynx is still under development. We happily receive comments, ideas,
  feature\nrequests, or pull requests!**\n\n\n# Installation\n\nELynx is written in
  [Haskell](https://www.haskell.org/) and can be installed with [Stack](https://docs.haskellstack.org/en/stable/README/).\n\n1.
  \ Install Stack with your package manager, or directly from the web\n    page.\n
  \   \n        curl -sSL https://get.haskellstack.org/ | sh\n\n2.  Clone the ELynx
  repository.\n    \n        git clone clone https://github.com/dschrempf/elynx\n\n3.
  \ Navigate to the newly created `elynx` folder and build the binaries.\n    This
  will take a while.\n    \n        stack build\n\n4.  Run a binary from within the
  project directory. For example,\n    \n        stack exec tlynx -- --help\n\n5.
  \ If needed, install the binaries.\n    \n        stack install\n    \n    The binaries
  are installed into `~/.local/bin/` which has to be added [PATH](https://en.wikipedia.org/wiki/PATH_(variable)).\n
  \   Then, they can be used directly.\n\n\n# SLynx\n\nHandle evolutionary sequences.\n\n
  \   slynx --help\n\n    ELynx Suite version 0.5.1. Developed by Dominik Schrempf.
  Compiled on September\n    9, 2019, at 10:48 am, UTC.\n    \n    Usage: slynx [-v|--verbosity
  VALUE] [-o|--output-file-basename NAME] COMMAND\n      Analyze, and simulate multi
  sequence alignments.\n    \n    Available options:\n      -h,--help                Show
  this help text\n      -V,--version             Show version\n      -v,--verbosity
  VALUE     Be verbose; one of: Quiet Warning Info\n                               Debug
  (default: Info)\n      -o,--output-file-basename NAME\n                               Specify
  base name of output file\n    \n    Available commands:\n      concatenate              \n
  \     examine                  If data is a multi sequence alignment, additionally\n
  \                              analyze columns.\n      filter-rows              \n
  \     filter-columns           \n      simulate                 \n      sub-sample
  \              Create a given number of multi sequence alignments,\n                               each
  of which containing a given number of random\n                               sites
  drawn from the original multi sequence\n                               alignment.\n
  \     translate                \n    \n    File formats:\n      - FASTA\n    \n
  \   Alphabet types:\n      - DNA (nucleotides)\n      - DNAX (nucleotides; including
  gaps)\n      - DNAI (nucleotides; including gaps, and IUPAC codes)\n      - Protein
  (amino acids)\n      - ProteinX (amino acids; including gaps)\n      - ProteinS
  (amino acids; including gaps, and translation stops)\n      - ProteinI (amino acids;
  including gaps, translation stops, and IUPAC codes)\n    \n    The ELynx Suite.\n
  \   A Haskell library and a tool set for computational biology. The goal of the\n
  \   ELynx Suite is reproducible research. Evolutionary sequences and phylogenetic\n
  \   trees can be read, viewed, modified and simulated. Exact specification of all\n
  \   options is necessary, and nothing is assumed about the data (e.g., the type
  of\n    code). The command line with all arguments is consistently, and automatically\n
  \   logged. The work overhead in the beginning usually pays off in the end.\n    slynx
  \    Analyze, modify, and simulate evolutionary sequences.\n    tlynx     Analyze,
  modify, and simulate phylogenetic trees.\n\n\n## Concatenate\n\nConcatenate multi
  sequence alignments.\n\n    slynx concatenate --help\n\n    Concatenate sequences
  found in input files.\n    \n    Usage: slynx concatenate (-a|--alphabet NAME) INPUT-FILE\n
  \   \n    Available options:\n      -a,--alphabet NAME       Specify alphabet type
  NAME\n      INPUT-FILE               Read sequences from INPUT-FILE\n      -h,--help
  \               Show this help text\n\n\n## Examine\n\nExamine sequence with `slynx
  examine`.\n\n    slynx examine --help\n\n    Examine sequences.\n    \n    Usage:
  slynx examine (-a|--alphabet NAME) [INPUT-FILE] [--per-site]\n      If data is a
  multi sequence alignment, additionally analyze columns.\n    \n    Available options:\n
  \     -a,--alphabet NAME       Specify alphabet type NAME\n      INPUT-FILE               Read
  sequences from INPUT-FILE\n      --per-site               Report per site summary
  statistics\n      -h,--help                Show this help text\n\n\n## Filter\n\nFilter
  sequences with `filer-rows`.\n\n    slynx filter-rows --help\n\n    Filter rows
  (or sequences) found in input files.\n    \n    Usage: slynx filter-rows (-a|--alphabet
  NAME) [INPUT-FILE]\n                             [--longer-than LENGTH] [--shorter-than
  LENGTH]\n    \n    Available options:\n      -a,--alphabet NAME       Specify alphabet
  type NAME\n      INPUT-FILE               Read sequences from INPUT-FILE\n      --longer-than
  LENGTH     Only keep sequences longer than LENGTH\n      --shorter-than LENGTH    Only
  keep sequences shorter than LENGTH\n      -h,--help                Show this help
  text\n\nFilter columns of multi sequence alignments with `filter-columns`.\n\n    slynx
  filter-columns --help\n\n    Filter columns of multi-sequence alignments.\n    \n
  \   Usage: slynx filter-columns (-a|--alphabet NAME) [INPUT-FILE]\n                                [--standard-chars
  DOUBLE]\n    \n    Available options:\n      -a,--alphabet NAME       Specify alphabet
  type NAME\n      INPUT-FILE               Read sequences from INPUT-FILE\n      --standard-chars
  DOUBLE  Keep columns with a proportion standard (non-IUPAC)\n                               characters
  larger than DOUBLE in [0,1]\n      -h,--help                Show this help text\n\n\n##
  Simulate\n\nSimulate sequences with `slynx simulate`.\n\n    slynx simulate --help\n\n
  \   Simulate multi sequence alignments.\n    \n    Usage: slynx simulate (-t|--tree-file
  Name) [-s|--substitution-model MODEL]\n                          [-m|--mixture-model
  MODEL] [-e|--edm-file NAME]\n                          [-w|--mixture-model-weights
  \"[DOUBLE,DOUBLE,...]\"]\n                          [-g|--gamma-rate-heterogeneity
  \"(NCAT,SHAPE)\"]\n                          (-l|--length NUMBER) [-S|--seed [INT]]\n
  \   \n    Available options:\n      -t,--tree-file Name      Read trees from file
  NAME\n      -s,--substitution-model MODEL\n                               Set the
  phylogenetic substitution model; available\n                               models
  are shown below (mutually exclusive with -m\n                               option)\n
  \     -m,--mixture-model MODEL Set the phylogenetic mixture model; available models\n
  \                              are shown below (mutually exclusive with -s option)\n
  \     -e,--edm-file NAME       Empirical distribution model file NAME in Phylobayes\n
  \                              format\n      -w,--mixture-model-weights \"[DOUBLE,DOUBLE,...]\"\n
  \                              Weights of mixture model components\n      -g,--gamma-rate-heterogeneity
  \"(NCAT,SHAPE)\"\n                               Number of gamma rate categories
  and shape parameter\n      -l,--length NUMBER       Set alignment length to NUMBER\n
  \     -S,--seed [INT]          Seed for random number generator; list of 32 bit\n
  \                              integers with up to 256 elements (default: random)\n
  \     -h,--help                Show this help text\n    \n    Substitution models:\n
  \   -s \"MODEL[PARAMETER,PARAMETER,...]{STATIONARY_DISTRIBUTION}\"\n       Supported
  DNA models: JC, HKY.\n         For example,\n           -s HKY[KAPPA]{DOUBLE,DOUBLE,DOUBLE,DOUBLE}\n
  \      Supported Protein models: Poisson, Poisson-Custom, LG, LG-Custom, WAG, WAG-Custom.\n
  \        MODEL-Custom means that only the exchangeabilities of MODEL are used,\n
  \        and a custom stationary distribution is provided.\n         For example,\n
  \          -s LG-Custom{...}\n    \n    Mixture models:\n    -m \"MIXTURE(SUBSTITUTION_MODEL_1,SUBSTITUTION_MODEL_2)\"\n
  \      For example,\n         -m \"MIXTURE(JC,HKY[6.0]{0.3,0.2,0.2,0.3})\"\n    Mixture
  weights have to be provided with the -w option.\n    \n    Special mixture models:\n
  \   -m CXX\n       where XX is 10, 20, 30, 40, 50, or 60; CXX models, Quang et al.,
  2008.\n    -m \"EDM(EXCHANGEABILITIES)\"\n       Arbitrary empirical distribution
  mixture (EDM) models.\n       Stationary distributions have to be provided with
  the -e option.\n       For example,\n         LG exchangeabilities with stationary
  distributions given in FILE.\n         -m \"EDM(LG-Custom)\" -e FILE\n    For special
  mixture models, mixture weights are optional.\n\n\n## Sub-sample\n\nSub-sample columns
  from multi sequence alignments.\n\n    slynx sub-sample --help\n\n    Usage: slynx
  sub-sample (-a|--alphabet NAME) [INPUT-FILE]\n                            (-n|--number-of-sites
  INT)\n                            (-m|--number-of-alignments INT) [-S|--seed [INT]]\n
  \     Create a given number of multi sequence alignments, each of which containing
  a\n      given number of random sites drawn from the original multi sequence alignment.\n
  \   \n    Available options:\n      -a,--alphabet NAME       Specify alphabet type
  NAME\n      INPUT-FILE               Read sequences from INPUT-FILE\n      -n,--number-of-sites
  INT Number of sites randomly drawn with replacement\n      -m,--number-of-alignments
  INT\n                               Number of multi sequence alignments to be created\n
  \     -S,--seed [INT]          Seed for random number generator; list of 32 bit\n
  \                              integers with up to 256 elements (default: random)\n
  \     -h,--help                Show this help text\n\n\n## Translate\n\nTranslate
  sequences.\n\n    slynx translate --help\n\n    Translate from DNA to Protein or
  DNAX to ProteinX.\n    \n    Usage: slynx translate (-a|--alphabet NAME) [INPUT-FILE]\n
  \                          (-r|--reading-frame INT) (-u|--universal-code CODE)\n
  \   \n    Available options:\n      -a,--alphabet NAME       Specify alphabet type
  NAME\n      INPUT-FILE               Read sequences from INPUT-FILE\n      -r,--reading-frame
  INT   Reading frame [0|1|2].\n      -u,--universal-code CODE universal code; one
  of: Standard,\n                               VertebrateMitochondrial.\n      -h,--help
  \               Show this help text\n\n\n# TLynx\n\nHandle phylogenetic trees in
  Newick format.\n\n    tlynx --help\n\n    ELynx Suite version 0.5.1. Developed by
  Dominik Schrempf. Compiled on September\n    9, 2019, at 10:48 am, UTC.\n    \n
  \   Usage: tlynx [-v|--verbosity VALUE] [-o|--output-file-basename NAME] COMMAND\n
  \     Compare, examine, and simulate phylogenetic trees.\n    \n    Available options:\n
  \     -h,--help                Show this help text\n      -V,--version             Show
  version\n      -v,--verbosity VALUE     Be verbose; one of: Quiet Warning Info\n
  \                              Debug (default: Info)\n      -o,--output-file-basename
  NAME\n                               Specify base name of output file\n    \n    Available
  commands:\n      compare                  \n      examine                  \n      simulate
  \                Simulate reconstructed trees using the point process.\n                               See
  Gernhard, T. (2008). The conditioned\n                               reconstructed
  process. Journal of Theoretical\n                               Biology, 253(4),
  769–778.\n                               http://doi.org/10.1016/j.jtbi.2008.04.005\n
  \   \n    File formats:\n      - Newick\n    \n    The ELynx Suite.\n    A Haskell
  library and a tool set for computational biology. The goal of the\n    ELynx Suite
  is reproducible research. Evolutionary sequences and phylogenetic\n    trees can
  be read, viewed, modified and simulated. Exact specification of all\n    options
  is necessary, and nothing is assumed about the data (e.g., the type of\n    code).
  The command line with all arguments is consistently, and automatically\n    logged.
  The work overhead in the beginning usually pays off in the end.\n    slynx     Analyze,
  modify, and simulate evolutionary sequences.\n    tlynx     Analyze, modify, and
  simulate phylogenetic trees.\n\n\n## Compare\n\nCompute distances between phylogenetic
  trees.\n\n    tlynx compare --help\n\n    Compute distances between phylogenetic
  trees.\n    \n    Usage: tlynx compare (-d|--distance MEASURE) [-s|--summary-statistics]\n
  \                        [INPUT-FILES]\n    \n    Available options:\n      -d,--distance
  MEASURE    Type of distance to calculate (available distance\n                               measures
  are listed below)\n      -s,--summary-statistics  Report summary statistics only\n
  \     INPUT-FILES              Read tree(s) from INPUT-FILES; if more files are\n
  \                              given, one tree is expected per file\n      -h,--help
  \               Show this help text\n    \n    Available distance measures:\n      Symmetric
  distance: -d symmetric\n      Incompatible split distance: -d incompatible-split[VAL]\n
  \       Collapse branches with support less than VAL before distance calculation;\n
  \       in this way, only well supported difference contribute to the distance measure.\n\n\n##
  Examine\n\nCompute summary statistics of phylogenetic trees.\n\n    tlynx examine
  --help\n\n    Compute summary statistics of phylogenetic trees.\n    \n    Usage:
  tlynx examine [INPUT-FILE]\n    \n    Available options:\n      INPUT-FILE               Read
  trees from INPUT-FILE\n      -h,--help                Show this help text\n\n\n##
  Simulate\n\nSimulate phylogenetic trees using birth and death processes.\n\n    tlynx
  simulate --help\n\n    Simulate phylogenetic trees using birth and death processes.\n
  \   \n    Usage: tlynx simulate [-t|--nTrees INT] [-n|--nLeaves INT] [-H|--height
  DOUBLE]\n                          [-M|--condition-on-mrca] [-l|--lambda DOUBLE]\n
  \                         [-m|--mu DOUBLE] [-r|--rho DOUBLE] [-u|--sub-sample]\n
  \                         [-s|--summary-statistics] [-S|--seed [INT]]\n      Simulate
  reconstructed trees using the point process. See Gernhard, T. (2008).\n      The
  conditioned reconstructed process. Journal of Theoretical Biology, 253(4),\n      769–778.
  http://doi.org/10.1016/j.jtbi.2008.04.005\n    \n    Available options:\n      -t,--nTrees
  INT          Number of trees (default: 10)\n      -n,--nLeaves INT         Number
  of leaves per tree (default: 5)\n      -H,--height DOUBLE       Fix tree height
  (no default)\n      -M,--condition-on-mrca   Do not condition on height of origin
  but on height of\n                               MRCA\n      -l,--lambda DOUBLE
  \      Birth rate lambda (default: 1.0)\n      -m,--mu DOUBLE           Death rate
  mu (default: 0.9)\n      -r,--rho DOUBLE          Sampling probability rho (default:
  1.0)\n      -u,--sub-sample          Perform sub-sampling; see below.\n      -s,--summary-statistics
  \ Only output number of children for each branch\n      -S,--seed [INT]          Seed
  for random number generator; list of 32 bit\n                               integers
  with up to 256 elements (default: random)\n      -h,--help                Show this
  help text\n    \n    Height of Trees: if no tree height is given, the heights will
  be randomly drawn from the expected distribution given the number of leaves, the
  birth and the death rate.\n    Summary statistics only: only print (NumberOfExtantChildren
  BranchLength) pairs for each branch of each tree. The trees are separated by a newline
  character.\n    Sub-sampling: simulate one big tree with n'=round(n/rho), n'>=n,
  leaves, and randomly sample sub-trees with n leaves. Hence, with rho=1.0, the same
  tree is reported over and over again.\n\n\n# ELynx\n\nDocumentation of the library
  can be found on Hackage.\n\n"
license-name: GPL-3.0-only
