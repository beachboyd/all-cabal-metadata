homepage: http://vis.renci.org/jeff/buster
changelog-type: ''
hash: 3136d3a2dafd8777d7e108be46ad6a6043d98e9b9563d1a59c1d36a6e41006c9
test-bench-deps: {}
maintainer: Jeff Heard <jeff@renci.org>
synopsis: Almost but not quite entirely unlike FRP
changelog: ''
basic-deps:
  bytestring: -any
  buster: ! '>=2.0'
  base: -any
  time: -any
  network: -any
  containers: -any
  binary: -any
  old-locale: -any
  mtl: -any
  dataenc: -any
  HTTP: ! '>=4000.0.0'
  haxr: ! '>=3000.2.1'
  pretty: -any
all-versions:
- '1.0'
- '1.1'
- '1.2'
author: Jeff Heard
latest: '1.2'
description-type: haddock
description: ! 'Buster is best described by the following blog post: http:\/\/vis.renci.org\/jeff\/2009\/03\/31\/almost-but-not-quite-entirely-like-frp\/


  It is an engine for orchestrating large, complex, and multifaceted applications
  by couching them in terms of time, events, a bus,

  behaviours, and widgets.  Time is continuous and infininte.  Events are discrete
  and exist for a particular time.  The bus is a

  discrete sample of time made available to behaviours. Behaviours are continuous
  and exist for all time, but sample time via

  the bus.  They filter Events to determine what is on the bus at future times.  Widgets
  are input-only objects that sample the

  outside world and assign events to discrete portions of time.


  Buster is designed to be flexible, with a flexible event model and the ability to
  add custom data to events, and designed to be

  high performance.  It is simple to integrate with Gtk while at the same time able
  to handle other kinds of resources, like files

  and sockets.'
license-name: BSD-3-Clause
