homepage: ''
changelog-type: ''
hash: 09657c97cf5ad79da78f230540398a9a99a8bb6cd99bba89a24d741372444b84
test-bench-deps:
  buffer-builder: -any
  bytestring: -any
  tasty-th: -any
  base: ==4.*
  unordered-containers: -any
  text: -any
  criterion: -any
  HUnit: -any
  buffer-builder-aeson: -any
  tasty-quickcheck: -any
  hashable: -any
  tasty-hunit: -any
  attoparsec: -any
  tasty: -any
  deepseq: -any
  scientific: -any
  QuickCheck: -any
  aeson: -any
  vector: -any
maintainer: andy.friesen@gmail.com
synopsis: Serialize Aeson values with Data.BufferBuilder
changelog: ''
basic-deps:
  buffer-builder: ! '>=0.2.0.0'
  bytestring: -any
  base: ==4.*
  unordered-containers: -any
  integer-gmp: -any
  scientific: -any
  aeson: -any
  vector: -any
all-versions:
- 0.1.0.1
- 0.2.0.0
- 0.2.0.3
- 0.2.0.4
author: Andy Friesen
latest: 0.2.0.4
description-type: haddock
description: ! 'A very fast BufferBuilder-based JSON encoder for Aeson.


  The whole library is a a single orphan instance for Aeson.Value.


  > import Data.Aeson (object, (.=), Value (..))

  > import Data.BufferBuilder.Json (encodeJson)

  > import Data.BufferBuilder.Aeson ()

  > import qualified Data.ByteString as BS

  >

  > stuff :: Value

  > stuff = Array

  >     [ object

  >         [ "name" .= ("eggs" :: String)

  >         , "price" .= (3.141592 :: Double)

  >         ]

  >     , object

  >         [ "name" .= ("cheese" :: String)

  >         , "price" .= (0.57721 :: Double)

  >         ]

  >     ]

  >

  > main :: IO ()

  > main = do

  >     BS.putStrLn $ encodeJson stuff'
license-name: MIT
