homepage: https://github.com/hansonkd/Wheb-Framework
changelog-type: ''
hash: ef2fd9f7061abd5d6bc94c3a2dc2905e1b620e90585d707d3da4f5ee20ce1240
test-bench-deps: {}
maintainer: me@khanson.io
synopsis: Redis connection for Wheb
changelog: ''
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.7 && <4.8'
  text: ! '>=1.1 && <1.2'
  mtl: ! '>=2.2 && <2.3'
  Wheb: ! '>=0.3 && <0.4'
  hedis: ! '>=0.6 && <0.7'
all-versions:
- 0.0.1.0
author: Kyle
latest: 0.0.1.0
description-type: haddock
description: ! 'Implements basic functionality for:


  * <http://hackage.haskell.org/package/hedis Hedis>


  * <http://hackage.haskell.org/package/Wheb Wheb>


  Gives instances of Auth, Session and Cache backends for Wheb.


  /In action:/


  Use with language extensions /OverloadedStrings/


  >  import Web.Wheb

  >  import Web.Wheb.Plugins.Redis

  >

  >  data MyCtx = MyCtx RedisContainer

  >

  >  instance RedisApp MyCtx where

  >    getRedisContainer (MyCtx rc) = rc

  >

  >  main :: IO ()

  >  main = do

  >    opts <- generateOptions $ do

  >        r <- initRedis defaultConnectInfo

  >        addGET "home" rootPat ((runRedis $ get "hello") >>= (text . spack))

  >        return (MyCtx r, ())

  >

  >    runRawHandler opts $ do

  >        runRedis $ set "hello" "world"

  >

  >    runWhebServer opts'
license-name: BSD-3-Clause
