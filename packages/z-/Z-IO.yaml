homepage: https://github.com/haskell-Z/Z-IO
changelog-type: markdown
hash: b1aa4158ebc8ceb2cd970824264c332dee99a2b2b21f25edaaf132c2ed130dd5
test-bench-deps:
  bytestring: -any
  Z-Data: -any
  base: -any
  hspec: '>=2.5.4'
  word8: -any
  HUnit: -any
  quickcheck-instances: -any
  zlib: -any
  hashable: -any
  scientific: -any
  QuickCheck: '>=2.10'
  primitive: -any
  Z-IO: -any
maintainer: winterland1989@gmail.com
synopsis: Simple and high performance IO toolkit for Haskell
changelog: |
  # Revision history for Z-IO

  ## 0.1.1.2  -- 2020-09-25

  * Fix macOS build problem caused by missing zconf.h.
  * Add more tests(TCP, IPC).

  ## 0.1.1.0  -- 2020-09-19

  * Add stream utilities to `Z.IO.Buffered`.
  * Add `Z.Compression.Zlib`.
basic-deps:
  exceptions: ==0.10.*
  Z-Data: '>=0.1.3.1 && <0.1.4'
  stm: ==2.5.*
  base: '>=4.12 && <5.0'
  time: '>=1.8 && <2.0'
  ghc-prim: '>=0.6.1 && <0.6.2'
  primitive: '>=0.7.1 && <0.7.2'
all-versions:
- 0.1.0.0
- 0.1.1.1
- 0.1.1.2
author: Dong Han, Tao He
latest: 0.1.1.2
description-type: markdown
description: "<p align=center>\n  <img src=\"https://github.com/haskell-Z/Z/raw/master/projectZ.svg\">\n</p>\n\n##
  Z-IO\n\n[![Linux Build Status](https://github.com/haskell-Z/z-io/workflows/ubuntu-ci/badge.svg)](https://github.com/haskell-Z/z-io/actions)\n\n[![MacOS
  Build Status](https://github.com/haskell-Z/z-io/workflows/oxs-ci/badge.svg)](https://github.com/haskell-Z/z-io/actions)\n\nThis
  package provides basic IO operations:\n\n* IO resource management, resource pool\n*
  File system\n* Network: DNS, TCP, UDP and IPC\n* Buffered input and output\n* High
  performance logger\n* High performance timer\n\n## Dependencies\n\nOn *nix system,
  libuv >= 1.32 are required to build this library, e.g.\n\n```base\n# on ubuntu\nsudo
  apt-get install libuv1 libuv1-dev\n# on mac\nbrew install libuv\n```\n\n\n## Example
  usage\n\n```haskell\n> :set -XOverloadedStrings  \n> import Z.IO.Network\n> import
  Z.IO.Resource\n> import Z.IO.Buffered\n> \n> -- call getAddrInfo to perform DNS\n>
  head <$> getAddrInfo Nothing \"www.bing.com\" \"http\"\nAddrInfo {addrFlags = [AI_ADDRCONFIG,AI_V4MAPPED],
  addrFamily = SocketFamily 2, addrSocketType = SocketType 1, addrProtocol = ProtocolNumber
  6, addrAddress = 204.79.197.200:80, addrCanonName = }\n>\n> import qualified Z.Data.Text
  as T\n> -- send a simple HTTP request\n> :{\n| let addr = SocketAddrInet 80 (tupleToInetAddr
  (13,107,21,200))\n| -- addr = ipv4 \"13.107.21.200\" 80\n| in withResource (initTCPClient
  defaultTCPClientConfig{ tcpRemoteAddr = addr}) $ \\ tcp -> do\n|     i <- newBufferedInput
  defaultChunkSize tcp \n|     o <- newBufferedOutput defaultChunkSize tcp\n|     writeBuffer
  o \"GET http://www.bing.com HTTP/1.1\\r\\nHost: www.bing.com\\r\\n\\r\\n\"\n|     flushBuffer
  o\n|     readBuffer i >>= pure . T.validate\n| :}\n\"HTTP/1.1 200 OK\\r\\nDate:
  Sat, 19 Sep 2020 06:11:08 GMT\\r\\nContent-Length: 0\\r\\n\\r\\n\"\n>\n> -- Start
  a TCP echo server, use @nc -v localhost 8080@ to test\n> :{\n| startTCPServer defaultTCPServerConfig{\n|
  tcpListenAddr = SocketAddrInet 8080 inetLoopback,\n| tcpServerWorker = \\ tcp ->
  do\n|     i <- newBufferedInput defaultChunkSize tcp \n|     o <- newBufferedOutput
  defaultChunkSize tcp\n|     forever $ readBuffer i >>= writeBuffer o >> flushBuffer
  o\n| }\n| :}\n```\n\n## Dev guide\n\n+ GHC(>=8.10.2) \n+ cabal-install(>=3.4)\n\n```bash\n#
  get code\ngit clone --recursive git@github.com:haskell-Z/z-io.git \ncd z-io\n# build\ncabal
  build\n# test\ncabal run Z-IO-Test\n# install \ncabal install\n# generate document\ncabal
  haddock\n```\n"
license-name: BSD-3-Clause
