homepage: https://github.com/haskell-Z/Z-IO
changelog-type: markdown
hash: b773b4aeeb741a4fc55cdd93591b588d2e35db4535cb8df797b951dc3f796673
test-bench-deps:
  bytestring: -any
  Z-Data: -any
  base: -any
  hspec: '>=2.5.4'
  word8: -any
  HUnit: -any
  quickcheck-instances: -any
  zlib: -any
  hashable: -any
  scientific: -any
  QuickCheck: '>=2.10'
  primitive: -any
  Z-IO: -any
maintainer: winterland1989@gmail.com
synopsis: Simple and high performance IO toolkit for Haskell
changelog: |
  # Revision history for Z-IO

  ## 0.1.3.0  -- 2020-09-28
  * Rename `newBufferedInput/Output` to `newBufferedInput'/Output'`, add default chunk `newBufferedInput/Output`.
  * Remove `ghc-pirm` depends.
  * Make library works with GHC 8.6 and 8.8 again.

  ## 0.1.2.0  -- 2020-09-28

  * Add file offset interface back, see `FilePtr` and `FilePtrT`.
  * Remove `checkFileTClosed` from `Z.IO.FileSystem.Threaded`.
  * Take c source file list from libuv Makefile, remove lib requirements on linux and osx.
  * Fix `uv_check_t` initiate order in accept loop, which cause a segfault.

  ## 0.1.1.2  -- 2020-09-25

  * Fix macOS build problem caused by missing zconf.h.
  * Add more tests(TCP, IPC).

  ## 0.1.1.0  -- 2020-09-19

  * Add stream utilities to `Z.IO.Buffered`.
  * Add `Z.Compression.Zlib`.
basic-deps:
  exceptions: ==0.10.*
  Z-Data: '>=0.1.4'
  stm: ==2.5.*
  base: '>=4.12 && <5.0'
  time: '>=1.8 && <2.0'
  primitive: '>=0.7.1 && <0.7.2'
all-versions:
- 0.1.0.0
- 0.1.1.1
- 0.1.1.2
- 0.1.2.0
- 0.1.3.0
author: Dong Han, Tao He
latest: 0.1.3.0
description-type: markdown
description: "<p align=center>\n  <img src=\"https://github.com/haskell-Z/Z/raw/master/projectZ.svg\">\n</p>\n\n##
  Z-IO\n\n[![Linux Build Status](https://github.com/haskell-Z/z-io/workflows/ubuntu-ci/badge.svg)](https://github.com/haskell-Z/z-io/actions)
  [![MacOS Build Status](https://github.com/haskell-Z/z-io/workflows/oxs-ci/badge.svg)](https://github.com/haskell-Z/z-io/actions)
  [![Windows Build Status](https://github.com/haskell-Z/z-io/workflows/win-ci/badge.svg)](https://github.com/haskell-Z/z-io/actions)\n\nThis
  package provides basic IO operations:\n\n* IO resource management, resource pool\n*
  File system\n* Network: DNS, TCP, UDP and IPC\n* Buffered input and output\n* High
  performance logger\n* High performance timer\n\n## Requirements\n\n* A working haskell
  compiler system, GHC(>=8.6), cabal-install(>=2.4), hsc2hs.\n\n* Tests need  [hspec-discover](https://hackage.haskell.org/package/hspec-discover).\n\n##
  Example usage\n\n```haskell\n> :set -XOverloadedStrings  \n> import Z.IO.Network\n>
  import Z.IO.Resource\n> import Z.IO.Buffered\n> \n> -- call getAddrInfo to perform
  DNS\n> head <$> getAddrInfo Nothing \"www.bing.com\" \"http\"\nAddrInfo {addrFlags
  = [AI_ADDRCONFIG,AI_V4MAPPED], addrFamily = SocketFamily 2, addrSocketType = SocketType
  1, addrProtocol = ProtocolNumber 6, addrAddress = 204.79.197.200:80, addrCanonName
  = }\n>\n> import qualified Z.Data.Text as T\n> -- send a simple HTTP request\n>
  :{\n| let addr = SocketAddrInet 80 (tupleToInetAddr (13,107,21,200))\n| -- addr
  = ipv4 \"13.107.21.200\" 80\n| in withResource (initTCPClient defaultTCPClientConfig{
  tcpRemoteAddr = addr}) $ \\ tcp -> do\n|     i <- newBufferedInput tcp \n|     o
  <- newBufferedOutput tcp\n|     writeBuffer o \"GET http://www.bing.com HTTP/1.1\\r\\nHost:
  www.bing.com\\r\\n\\r\\n\"\n|     flushBuffer o\n|     readBuffer i >>= pure . T.validate\n|
  :}\n\"HTTP/1.1 200 OK\\r\\nDate: Sat, 19 Sep 2020 06:11:08 GMT\\r\\nContent-Length:
  0\\r\\n\\r\\n\"\n>\n> -- Start a TCP echo server, use @nc -v localhost 8080@ to
  test\n> :{\n| startTCPServer defaultTCPServerConfig{\n| tcpListenAddr = SocketAddrInet
  8080 inetLoopback,\n| tcpServerWorker = \\ tcp -> do\n|     i <- newBufferedInput
  tcp \n|     o <- newBufferedOutput tcp\n|     forever $ readBuffer i >>= writeBuffer
  o >> flushBuffer o\n| }\n| :}\n```\n\n## Dev guide\n\n\n```bash\n# get code\ngit
  clone --recursive git@github.com:haskell-Z/z-io.git \ncd z-io\n# build\ncabal build\n#
  test\ncabal run Z-IO-Test\n# install \ncabal install\n# generate document\ncabal
  haddock\n```\n"
license-name: BSD-3-Clause
