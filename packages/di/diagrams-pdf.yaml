homepage: http://www.alpheccar.org
changelog-type: markdown
hash: 9883733572261590a57fc93e7ca4f953893e1a7baa70a6c43ec7b57faf22c77c
test-bench-deps: {}
maintainer: misc@alpheccar.org
synopsis: PDF backend for diagrams drawing EDSL
changelog: ! '

'
basic-deps:
  diagrams-lib: ! '>=0.7 && <0.8'
  monoid-extras: ! '>=0.3 && <0.4'
  HPDF: ! '>=1.4.5 && <1.5'
  split: ! '>=0.2.2 && <0.3'
  base: ! '>=4.6 && <4.8'
  vector-space: ! '>=0.8.6 && <0.9'
  filepath: ! '>=1.3 && <1.4'
  semigroups: ! '>=0.9.2 && <0.10'
  lens: ! '>=3.9 && <3.10'
  mtl: ! '>=2.1 && <2.2'
  cmdargs: ! '>=0.10 && <0.11'
  diagrams-core: ! '>=0.7 && <0.8'
  colour: ! '>=2.3.3 && <2.4'
all-versions:
- 0.1.0.0
- 0.2.0
- '0.3'
- 0.3.1
author: alpheccar
latest: 0.3.1
description-type: markdown
description: ! "\n_diagrams-pdf_ is a an [HPDF] backend for [diagrams]. Diagrams is
  a powerful,\nflexible, declarative domain-specific language for creating vector
  graphics,\nusing the [Haskell programming language][haskell].\n\n[diagrams]: http://projects.haskell.org/diagrams/\n[haskell]:
  http://www.haskell.org/haskellwiki/Haskell\n[HPDF]: http://hackage.haskell.org/packages/archive/HPDF/1.4.5/doc/html/Graphics-PDF-Documentation.html\n\n_diagrams-pdf_
  is a work in progress, and some features are not implemented yet. However, it \nis
  functional enough. \n\n# Installation\n\n```\ncabal update && cabal install diagrams-pdf\n```\n\n#
  Usage\n\nA simple example that uses _diagrams-pdf_ to draw a square.\n\n``` haskell\nimport
  Diagrams.Prelude\nimport Diagrams.Backend.Pdf.CmdLine\n\nb1 = square 20 # lw 0.002\n\nmain
  = defaultMain (pad 1.1 b1)\n```\n\nSave this to file named `Square.hs` and compile
  this program:\n\n```\nghc --make Square.hs\n```\n\nThis will generate an executable
  which, when run produces a Pdf file. Run the\nexecutable with the `--help` option
  to find out more about how to call it.\n\n```\n$ ./Square --help\nCommand-line diagram
  generation.\n\nSquare [OPTIONS]\n\nCommon flags:\n  -w --width=INT    Desired width
  of the output image (default 400)\n  -h --height=INT   Desired height of the output
  image (default 400)\n  -o --output=FILE  Output file\n  -c --compressed   Compressed
  PDF file\n  -? --help         Display help message\n  -V --version      Print version
  information\n```\n\nYou _must_ pass an output file name with a `.pdf` extension
  to generate the PDF\nfile.\n\n```\n$ ./Square -o square.pdf\n```\n\n# Limitations\n\nTwo
  goals of the HPDF library were : powerful typesetting and no dependence on the OS
  libraries (for better portability).\nBut, HPDF was also my first big library mainly
  done to learn. So I had to limit myself.\n\nAs a consequence, HPDF is only using
  the standard fonts defined in the PDF specification. It is not (yet) possible\nto
  include and use any other fonts.\n\nSo, for diagrams it is causing a problem : the
  face setting has nearly no meaning.\nFace is currently selected from the Italic
  and Oblique settings. Times is the default but when\noblique is chosen, Helvetica
  is used.\n\nI hope to improve this in future releases.\n\nHere is a list of the
  fonts in HPDF:\n\n* Helvetica\t \n* Helvetica_Bold\t \n* Helvetica_Oblique\t \n*
  Helvetica_BoldOblique\t \n* Times_Roman\t \n* Times_Bold\t \n* Times_Italic\t \n*
  Times_BoldItalic\t \n* Courier\t \n* Courier_Bold\t \n* Courier_Oblique\t \n* Courier_BoldOblique\t
  \n* Symbol\t \n* ZapfDingbats\n"
license-name: BSD-3-Clause
