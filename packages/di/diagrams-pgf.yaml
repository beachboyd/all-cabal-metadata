homepage: http://github.com/cchalmers/diagrams-pgf
changelog-type: ''
hash: db402baea8b80aa0c36dd74a2de2e9dc709deea805d1b7ca51900d5dd935a420
test-bench-deps: {}
maintainer: c.chalmers@me.com
synopsis: PGF backend for diagrams drawing EDSL.
changelog: ''
basic-deps:
  diagrams-lib: ! '>=1.4 && <1.5'
  JuicyPixels: -any
  bytestring: ! '>=0.9 && <1.1'
  split: ! '>=0.1.2 && <0.3'
  base: ! '>=4.4 && <4.13'
  time: ! '>=1.2 && <1.10'
  filepath: ! '>=1.2 && <1.5'
  process: ! '>=1.0 && <1.7'
  containers: ! '>=0.3 && <0.7'
  zlib: -any
  mtl: ! '>=2.1 && <3.0'
  hashable: ! '>=1.1 && <1.3'
  diagrams-core: ! '>=1.4 && <1.5'
  colour: -any
  optparse-applicative: ! '>=0.13 && <0.15'
  bytestring-builder: <1.1
  vector: -any
  texrunner: <=0.0.2
  directory: ! '>=1.0 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- '1.4'
- 1.4.1
author: Christopher Chalmers
latest: 1.4.1
description-type: markdown
description: ! "## PGF diagrams backend\n\n`diagrams-pgf` is a [PGF] backend for [diagrams].
  Diagrams is a powerful, flexible, declarative domain-specific language for creating
  vector graphics, using the [Haskell programming language][haskell].\n\n[PGF]: http://sourceforge.net/projects/pgf/\n[diagrams]:
  http://projects.haskell.org/diagrams/\n[haskell]: http://www.haskell.org/haskellwiki/Haskell\n\nPGF
  is a TeX macro package for generating graphics. It is platform- and format-independent
  and works together with the most important TeX backend drivers, including pdftex
  and dvips.\n\n`diagrams-pgf` is a work in progress, it supports the basic features
  of diagrams with the following features:\n\n- LaTeX, ConTeXt and plain TeX support\n-
  direct PDF generation using a TeX distribution (e.g. [texlive](https://www.tug.org/texlive/))
  via [texrunner].\n\n### Usage\n\nA simple example that uses diagrams-pgf to draw
  a square.\n\n```haskell\nimport Diagrams.Prelude\nimport Diagrams.Backend.PGF.CmdLine\n\nb1
  = square 20 # lwG 0.05\n\nmain = defaultMain (pad 1.1 b1)\n```\n\nSave this to file
  named `square.hs` and compile this program:\n\n```\nghc --make square.hs\n```\n\nThis
  will generate an executable which, when run produces a TeX (or PDF) file. Run the\nexecutable
  with the `--help` option to find out more about how to call it.\n\n```\n$ ./square
  --help\nsquare\n\nUsage: square [-?|--help] [-w|--width WIDTH] [-h|--height HEIGHT]\n
  \             [-o|--output OUTPUT] [-f|--format FORMAT] [-a|--standalone]\n              [-r|--readable]
  [-l|--loop] [-s|--src ARG]\n              [-i|--interval INTERVAL]\n  Command-line
  diagram generation.\n\nAvailable options:\n  -?,--help                Show this
  help text\n  -w,--width WIDTH         Desired WIDTH of the output image\n  -h,--height
  HEIGHT       Desired HEIGHT of the output image\n  -o,--output OUTPUT       OUTPUT
  file\n  -f,--format FORMAT       l for LaTeX, c for ConTeXt, p for plain\n                           TeX
  (default: LaTeX)\n  -a,--standalone          Produce standalone .tex output\n  -r,--readable
  \           Indent lines\n  -l,--loop                Run in a self-recompiling loop\n
  \ -s,--src ARG             Source file to watch\n  -i,--interval INTERVAL   When
  running in a loop, check for changes every\n                           INTERVAL
  seconds.\n```\n\nIf no output file is given, output is send to `stdout`. Supported
  outputs are `.tex` and `.pdf`. PDF generation is done using [texrunner].\n\n[texrunner]:
  http://www.github.com/cchalmers/texrunner\n\n```\n$ ./Square -o square.tex\n$ cat
  ./square.tex\n\\begin{pgfpicture}\n  \\pgfpathrectangle{\\pgfpointorigin}{\\pgfqpoint{22.0000px}{22.0000px}}\n
  \ \\pgfusepath{use as bounding box}\n  \\begin{pgfscope}\n    \\begin{pgfscope}\n
  \     \\pgfpathmoveto{\\pgfqpoint{21.0000px}{1.0000px}}\n      \\pgfpathlineto{\\pgfqpoint{21.0000px}{21.0000px}}\n
  \     \\pgfpathlineto{\\pgfqpoint{1.0000px}{21.0000px}}\n      \\pgfpathlineto{\\pgfqpoint{1.0000px}{1.0000px}}\n
  \     \\pgfpathlineto{\\pgfqpoint{21.0000px}{1.0000px}}\n      \\pgfpathclose\n
  \     \\definecolor{sc}{rgb}{0.0000,0.0000,0.0000}\n      \\pgfsetstrokecolor{sc}\n
  \     \\pgfsetlinewidth{0.0132mm}\n      \\pgfusepath{stroke}\n    \\end{pgfscope}\n
  \ \\end{pgfscope}\n\\end{pgfpicture}\n```\n\n### Typesetting\n\n`pgf-diagrams` allows
  typesetting TeX commands and can calculate the corresponding envelope. See the [hbox
  example] to see how get envelopes of text:\n\n[hbox example]: examples/hbox.hs\n\n![hbox](https://rawgit.com/cchalmers/texrunner/master/diagrams/hbox.svg)\n\n\n###
  Missing features\n\nThe following features are not currently supported:\n\n- selecting
  fonts (italic and bold work)\n- gradients\n\n"
license-name: BSD-3-Clause
