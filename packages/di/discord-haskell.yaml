homepage: https://github.com/aquarial/discord-haskell
changelog-type: markdown
hash: 91b4a0839c1c994eec1c77ffd0ecab387a3e46db3caf4bc949c7853bbd7fc0b7
test-bench-deps: {}
maintainer: ksfish5@gmail.com
synopsis: Write bots for Discord in Haskell
changelog: |
  # Changelog

  View on github for newest version: https://github.com/aquarial/discord-haskell/blob/master/changelog.md

  ## master

  Going through some major updates to the library. Expect types to change and things to break.

  Compare the [old ping-pong](https://github.com/aquarial/discord-haskell/blob/20f7f8556823a754c76d01484118a5abf336530b/examples/ping-pong.hs)
  to the [new ping-pong](https://github.com/aquarial/discord-haskell/blob/7eaa6ca068f945603de7f43f6f270c2dbecd3c85/examples/ping-pong.hs)

  Added a few rest ADT types

  ## 0.8.4

  [marcotoniut](https://github.com/aquarial/discord-haskell/pull/18) Improved changed Embed ADT to have optional fields, and improved two field names

  Add `ModifyGuildMember`, `AddGuildMember`, `AddGuildMemberRole`, `AddGuildMemberRole`, `RemoveGuildmembeRole`, `GetGuildBan`, `GetGuildVanityURL` rest data types

  ## 0.8.3

  Simplify Message Author from `Either WebhookId User` to `User`

  Add `loginRestGatewayWithLog`

  ### 0.8.2

  Hardcode CreateReaction delay so bots can add reactions 4 times faster

  [MP2E](https://github.com/aquarial/discord-haskell/pull/14) Fixed parse error on GuildBanAdd + GuildBanRevoke: user\_object instead the whole object

  ### 0.8.1

  [MP2E](https://github.com/aquarial/discord-haskell/pull/11) Fixed parse error on GuildRoleDelete: role_id instead of role

  ### 0.8.0

  `MessageUpdate` does not contain a full Message object, just `ChannelId` `MessageId`

  Message Author changed from `User` to `Either WebhookId User`

  Add Webhook ADT

  Add requests: GetInvite, DeleteInvite

  UpdateStatusVoiceOpts takes Bool for Mute

  `Unavailable` becomes `GuildUnavailable`

  ### 0.7.1

  [t1m0thyj](https://github.com/aquarial/discord-haskell/pull/6/files) Typo in RequestGuildMemberOpts fields fixed.

  [t1m0thyj](https://github.com/aquarial/discord-haskell/pull/6/files) Added Activity, ActivityType ADT

  UpdateStatusTypes became UpdateStatusType (singular ADT)

  [t1m0thyj](https://github.com/aquarial/discord-haskell/pull/7) Retry connection on 1001 websocket close

  ### 0.7.0

  Snowflake -> named id

  Add requests: ModifyChanPositions, CreateGuildChannel

  Changed constructors of Channel to have prefix "Channel", isGuildChannel --> channelIsInGuild

  Change Emoji Id ADTs

  ### 0.6.0

  Add requests: CreateGuildEmoji, GroupDMRemoveRecipient, ModifyCurrentUser, EditChannelPermissions, CreateChannelInvite, GroupDMAddRecipient, ModifyGuild

  restCall, readCache pass errors as an ADT, including underling http exceptions

  Only add "Bot " prefix to secret token if it's not there

  ### 0.5.1

  sendCommand with GatewaySendable types

  ### 0.5.0

  restCall with Request types

  nextEvent with Event types
basic-deps:
  http-client: ! '>=0.5.13.1 && <0.6'
  emoji: ==0.1.0.2
  JuicyPixels: ! '>=3.2.9.5 && <3.4'
  bytestring: ! '>=0.10.8.2 && <0.11'
  MonadRandom: ! '>=0.5.1.1 && <0.6'
  base: ==4.*
  time: ! '>=1.8.0.2 && <1.9'
  base64-bytestring: ! '>=1.0.0.1 && <1.1'
  unordered-containers: ! '>=0.2.9.0 && <0.3'
  text: ! '>=1.2.3.0 && <1.3'
  safe-exceptions: ! '>=0.1.7.0 && <0.2'
  async: ! '>=2.2.1 && <2.3'
  websockets: ! '>=0.12.5.1 && <0.13'
  req: ! '>=1.1.0 && <1.3'
  data-default: ! '>=0.7.1.1 && <0.8'
  containers: ! '>=0.5.11.0 && <0.7'
  iso8601-time: ! '>=0.1.5 && <0.2'
  wuss: ! '>=1.1.10 && <1.2'
  discord-haskell: -any
  aeson: ! '>=1.3.1.1 && <1.5'
  vector: ! '>=0.12.0.1 && <0.13'
all-versions:
- 0.5.0
- 0.5.1
- 0.6.0
- 0.7.0
- 0.7.1
- 0.8.0
- 0.8.1
- 0.8.2
- 0.8.3
- 0.8.4
- 1.0.0
author: Karl
latest: 1.0.0
description-type: markdown
description: |
  # discord-haskell [![Build Status](https://travis-ci.org/aquarial/discord-haskell.png?branch=master)](https://travis-ci.org/aquarial/discord-haskell)

  ## Go to the [Wiki](https://github.com/aquarial/discord-haskell/wiki) for more information

  ```haskell
  {-# LANGUAGE OverloadedStrings #-}  -- allows "string literals" to be Text

  import Control.Monad (when)
  import Data.Text (isPrefixOf, toLower, Text)
  import Control.Concurrent (threadDelay)
  import qualified Data.Text.IO as TIO

  import Discord
  import Discord.Types
  import qualified Discord.Requests as R

  -- | Replies "pong" to every message that starts with "ping"
  pingpongExample :: IO ()
  pingpongExample = do userFacingError <- runDiscord $ def
                                              { discordToken = "Bot ZZZZZZZZZZZZZZZZZZZ"
                                              , discordOnEvent = eventHandler }
                       TIO.putStrLn userFacingError

  eventHandler :: DiscordHandle -> Event -> IO ()
  eventHandler dis event = case event of
         MessageCreate m -> when (not (fromBot m) && isPing (messageText m)) $ do
                 _ <- restCall dis (R.CreateReaction (messageChannel m, messageId m) "eyes")
                 threadDelay (4 * 10^6)
                 _ <- restCall dis (R.CreateMessage (messageChannel m) "Pong!")
                 pure ()
         _ -> pure ()

  fromBot :: Message -> Bool
  fromBot m = userIsBot (messageAuthor m)

  isPing :: Text -> Bool
  isPing = ("ping" `isPrefixOf`) . toLower
  ```
license-name: MIT
