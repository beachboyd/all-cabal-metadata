homepage: https://github.com/qfpl/digit
changelog-type: markdown
hash: d7e8252022d89cc962da29fdb54bdda54d997c2073b6977e6490b8bcd877650c
test-bench-deps:
  digit: -any
  ansi-wl-pprint: ! '>=0.6 && <0.7'
  base: ! '>=4.8 && <4.13'
  tasty-hedgehog: ! '>=0.1 && <0.3'
  text: ! '>=1.2 && <1.3'
  tasty-hspec: ! '>=1.1 && <1.2'
  hedgehog: ! '>=0.5 && <0.7'
  parsec: ! '>=3.1 && <3.2'
  semigroups: ! '>=0.12 && <1.0'
  parsers: ! '>=0.12.3 && <0.13'
  lens: ! '>=4.0 && <5'
  tasty-hunit: ! '>=0.9 && <0.11'
  tasty: ! '>=0.11 && <1.2'
  pretty: ! '>=1.1 && <1.2'
maintainer: Queensland Functional Programming Lab <oᴉ˙ldɟb@llǝʞsɐɥ>
synopsis: A data-type representing digits 0-9 and other combinations
changelog: ! "0.6\n\n* Removed the `Digit` datatype\n* Added new datatypes with appropriate
  `D*` instances\n  * `BinDigit`\n  * `OctDigit`\n  * `DecDigit`\n  * `HexDigit`\n
  \ * `HeXDigit`\n  * `HEXDigit`\n* Culled most of the doctests, and leaving one or
  two per function to illustrate\n  usage\n* Juggled re-exports to make the library
  easier to use and to improve documentation\n* Added `Data.Digit.Enum`, which contains
  ascending-order enumerations of the new datatypes\n* Added integral conversion functions
  for the new datatypes\n\n0.5.3\n\n* Bump version of [tasty-hedgehog, hedgehog, papa]\n*
  Updated default.nix\n\n0.5.2\n\n* Add `Data.Digit.Natural (_NaturalDigits, naturalToDigits,
  digitsToNatural)`\n\n0.5.1\n\n* Replace doctest with hunit and hedgehog via tasty\n\n0.5.0\n\n*
  Data types for other bases (binary, octal, hexadecimal).\n* Remove the `Digit…`
  data types.\n* Introduce the `Digit` data type.\n\n0.4.0\n\n* Refactor to classy
  prisms for each digit.\n\n0.3.0\n\n* Refactor decimal type.\n* `Digits` and `Digits1`
  data types for list of digits.\n\n0.2.9\n\n* Remove redundant type-class constraints.\n*
  Add tests.\n* Add `HasDigit` lens.\n* Add `papa` dependency.\n\n0.2.8\n\n* Add `(/+/)`
  function.\n\n0.2.7\n\n* Add `mantissa` function for digits.\n\n0.2.6\n\n* Use `Integral`
  not `Int`.\n* `Digits` data type (zero or many digits) and associated functions.\n\n0.2.5\n\n*
  Change parser to handle non-empty list.\n\n0.2.4\n\n* More Digit parsers.\n\n0.2.3\n\n*
  Digit parsers.\n\n0.2.2\n\n* Modulus operations.\n* `digits` function.\n* Fix tests.\n\n0.2.1\n\n*
  Include digit parsers.\n\n0.2.0\n\n* Update to use digit prisms.\n"
basic-deps:
  semigroupoids: ! '>=5 && <6'
  base: ! '>=4.8 && <5'
  semigroups: ! '>=0.12 && <1.0'
  parsers: ! '>=0.12.3 && <0.13'
  lens: ! '>=4.0 && <5'
  scientific: ! '>=0.3 && <0.4'
  template-haskell: ! '>=2.8 && <3'
all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
- 0.2.6
- 0.2.7
- 0.2.8
- 0.2.9
- 0.3.0
- 0.4.0
- 0.5.0
- 0.5.1
- 0.5.2
- '0.6'
- '0.7'
author: Queensland Functional Programming Lab <oᴉ˙ldɟb@llǝʞsɐɥ>
latest: '0.7'
description-type: haddock
description: ! '<<http://i.imgur.com/uZnp9ke.png>>


  @Digit@ is a data-type that represents the digits 0-9 and other combinations.'
license-name: BSD-3-Clause
