homepage: https://github.com/avieth/diplomacy-server
changelog-type: ''
hash: 52baf3908069c0640fbfa1d0fe7ebfe9cc0530760adbe288fd5c33e1dbca3466
test-bench-deps: {}
maintainer: aovieth@gmail.com
synopsis: Play Diplomacy over HTTP
changelog: ''
basic-deps:
  warp: ! '>=3.0 && <3.1'
  Stream: ! '>=0.4 && <0.5'
  json-schema: ! '>=0.7 && <0.8'
  bytestring: ! '>=0.10 && <0.11'
  wai: ! '>=3.0 && <3.1'
  hourglass: ! '>=0.2 && <0.3'
  rest-wai: ! '>=0.1 && <0.2'
  stm: ! '>=2.4 && <2.5'
  base: ! '>=4.7 && <4.8'
  text: ! '>=1.2 && <1.3'
  diplomacy: ! '>=0.1 && <0.2'
  filepath: ! '>=1.3 && <1.4'
  TypeNat: ! '>=0.4 && <0.5'
  async: ! '>=2.0 && <2.1'
  parsec: ! '>=3.1 && <3.2'
  containers: ! '>=0.5 && <0.6'
  warp-tls: ! '>=3.0 && <3.1'
  mtl: ! '>=2.1 && <2.2'
  transformers: ! '>=0.3 && <0.4'
  optparse-applicative: ! '>=0.11 && <0.12'
  random: ! '>=1.1 && <1.2'
  deepseq: ! '>=1.3 && <1.4'
  rest-core: ! '>=0.36 && <0.37'
  aeson: ! '>=0.9 && <0.10'
  transformers-compat: ! '>=0.4 && <0.5'
all-versions:
- 0.1.0.0
author: Alexander Vieth
latest: 0.1.0.0
description-type: markdown
description: ! "# diplomacy-server\n\nPlay the board game\n[Diplomacy](https://en.wikipedia.org/wiki/Diplomacy_%28game%29)
  over HTTP.\nPlayers may participate via their own private devices, so long as they
  have\nnetwork capabilities and a good web browser.\n\n## Quick start\n\nStart by
  installing the program.\n\n```bash`\ngit clone git@github.com:avieth/diplomacy-server.git\ncd
  diplomacy-server\ncabal install\n```\n\nIn order to get up and running you need
  a public/private key pair and\ncertificate, because the web\nserver uses secure
  HTTP. Here's how to create a key pair and self-sign a\ncertificate using OpenSSL.\nNote
  that your browser will warn of an untrusted certificate when you connect\nto the
  server.\n\n```bash\nopenssl req -x509 -newkey rsa:2048 -keyout server.key -out server.pem
  -days 365 -nodes\n```\n\nWhen running the server, the key and certificate file locations
  can be\nspecified using `-k` and `-c` respectively; the defaults are `./server.key`
  and\n`./server.pem`. When running the server you must also give a username and\npassword
  for the administrator. These credentials allows you to create, start,\nadvance,
  pause, and destroy games.\n\n```bash\n./Main -u <username> -p <password>\n```\n\nThe
  default port is `4347`, but this can be changed using `--port`. With\nthe server
  running, navigate to `https://<host>:4347/v1.0.0/diplomacy` to\nbegin playing via
  the simple but effective web client. The workflow is as\nfollows:\n\n1. Administartor
  creates a game, choosing a password for it.\n2. Players join the game using the
  administartor's chosen password.\n3. Adminstrator starts the game.\n4. Players use
  their own devices (smartphones, laptops) to view game state and\n   issue orders.\n\nThe
  game will advance automatically unless the adminstrator pauses the game.\nIn this
  case, the game will advance only when the adminstrator explicitly\nadvances it,
  at which point the automatic advance feature kicks in again.\nThis is useful for
  putting a game on indefinite hiatus.\n\n## The simple client\n\nThe file `client.html`
  is a barebones, not-so-user-friendly interface for\nplayers and administrators (game-masters,
  if you will). It *should* provide\nall necessary functionality to play a complete
  match, and *should* work\nproperly on all smartphones and personal computers with
  up-to-date web browsers.\n\nTo input typical and retreat phase orders using this
  client, one must type the\norder object as it would be written in a pen-and-paper
  game; the map is not\ninteractive, but this would be a nice improvement.\n\nA better
  HTML/JavaScript client, or even native iOS and Android clients,\nwould be *very*
  nice to have. Ideally, we could use the definitions of the\n[diplomacy](https://github.com/avieth/diplomacy)
  Haskell library to produce\nthese clients. This way, we don't need to reproduce
  the basic definitions like\nthose related to provinces and their adjacency, and
  we could also use order\nvalidation definitions to give helpful feedback when the
  user attempts to input\na new order (highlighting valid move targets or support
  subjects, for instance).\n\n## A note on REST\n\nThis program uses the rest package,
  but it doesn't give a RESTful API; the\nserver *is* stateful. This package was chosen
  because it was relatively\nquick and easy. It ought to be swapped out for something
  which\n\n1. Does not claim to be RESTful.\n2. Allows us to easily reuse handlers
  for HTTP and Email input.\n"
license-name: BSD-3-Clause
