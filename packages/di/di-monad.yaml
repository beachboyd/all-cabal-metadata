homepage: https://github.com/k0001/di
changelog-type: markdown
hash: 4fa7bcd924d0f2cee7f57e3dcab60a556e09e6ef20708ba4bab67e37d936febe
test-bench-deps: {}
maintainer: renÎ»ren.zone
synopsis: mtl flavoured typeful hierarchical structured logging for di-core.
changelog: ! "# Version 1.3\n\n* The `MonadThrow` instance for `DiT` doesn't log exceptions
  automatically any\n  more. This is because otherwise catching and re-throwing exceptions
  in\n  downstream code, by default, ends up logging the same exception more than\n
  \ once.\n\n* A `throw` function behaving as the previous `MonadThrow` instance for
  `DiT`\n  was introduced.\n\n* Documentation improvements.\n\n\n# Version 1.2\n\n*
  The `MonadMask` constraint added in Version 1.1 is gone, effecively\n  undoing the
  breaking change introduced in Version 1.1.\n\n\n# Version 1.1\n\n* **BREAKING CHANGE:**
  The `MonadThrow` instance for `DiT level path msg\n  m` instance now relies on `Di.Core.throw`,
  potentially logging\n  exceptions _at the throw site_.  This introduces a new `MonadMask
  m`\n  instance constraint which can't be satisfied by `STM`. There is a\n  `DiT
  level path msg STM` instance that skips logging exceptions (which\n  is the only
  sensible behavior, anyway). However, if your `m` is not\n  exactly `STM` but some
  wrapper around it, you will need to provide a\n  `MonadThrow` instance manually
  or use `Di.Core.throw'` directly. On\n  the other hand, satisfying this `MonadMask`
  constraint should be easy\n  for monads that can run `IO`.\n\n* Added `onException`.\n\n#
  Version 1.0.2\n\n* Backwards compatibility with `mtl < 2.2.2`.\n\n# Version 1.0.1\n\n*
  Backwards compatibility with `transformers < 0.5.3`.\n\n# Version 1.0\n\n* This
  is a new library part of the `di-core` ecosystem.\n  Consider this first release
  of the new ecosystem a preview release: The API is\n  likely to stay stable, but
  extensive testing, formalization and tooling is\n  due.\n\n"
basic-deps:
  exceptions: -any
  stm: -any
  base: ! '>=4.9 && <5.0'
  di-core: -any
  containers: -any
  pipes: -any
  mtl: -any
  transformers: -any
all-versions:
- '1.0'
- 1.0.1
- 1.0.2
- '1.1'
- '1.2'
- '1.3'
author: Renzo Carbonara
latest: '1.3'
description-type: markdown
description: ! '# di-monad


  Monadic API to [di-core](https://hackage.haskell.org/package/di-core)

  providing an [mtl](https://hackage.haskell.org/package/mtl) experience.


  [![Build Status](https://travis-ci.org/k0001/di.svg?branch=master)](https://travis-ci.org/k0001/di)


  See the [BSD3 LICENSE](https://github.com/k0001/di/blob/master/di-monad/LICENSE.txt)

  file to learn about the legal terms and conditions for this library.


'
license-name: BSD-3-Clause
