homepage: https://github.com/pwrobinson/dice-entropy-conduit#readme
changelog-type: markdown
hash: 3ac99273af4407602621243f19c516ba66a41a8dad208610b0b6dcf8cf56032a
test-bench-deps:
  bytestring: '>=0.9'
  test-framework: '>=0.4.1'
  base: '>=4 && <5'
  entropy: '>=0.3.2'
  test-framework-quickcheck2: -any
  conduit: '>=1.1.7'
  transformers: '>=0.4.0.0'
  QuickCheck: '>=2.4'
maintainer: pwr@lowerbound.io
synopsis: Cryptographically secure n-sided dice via rejection sampling
changelog: |
  # Changelog for dice-entropy-conduit

  ## Unreleased changes

  * None

  ## 1.0.0.3

  * Make it build with `stack`.
  * Updated dependencies.
basic-deps:
  bytestring: '>=0.9'
  base: '>=4.6 && <5'
  entropy: '>=0.3.2'
  conduit: '>=1.1.7'
  transformers: '>=0.4.0.0'
all-versions:
- 1.0.0.0
- 1.0.0.1
- 1.0.0.3
author: Peter Robinson
latest: 1.0.0.3
description-type: markdown
description: |
  This library uses rejection sampling to provide cryptographically secure `n`-sided dice rolls and random sampling (within a given range).

  ## Usage:

  If we want to use the system-specific entropy source (`systemEntropy`) to
  produce 10 dice rolls of a 6-sided dice (i.e. range [0,5]), you can write:

  > systemEntropy $$ diceRolls 6 =$= CL.take 10
  > [5,1,3,3,0,5,3,2,2,1]
license-name: LGPL-2.1-only
