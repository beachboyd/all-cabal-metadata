homepage: https://github.com/louispan/disposable#readme
changelog-type: ''
hash: f945c1e154fb78d1e751493ed86a905477a80a31110f4ff0703ea8f780cba76a
test-bench-deps: {}
maintainer: louis@pan.me
synopsis: Allows storing different resource-releasing actions together.
changelog: ''
basic-deps:
  stm: ! '>=2.4.4.1'
  base: ! '>=4.7 && <5'
  ghcjs-base-stub: ! '>=0.1.0.2'
all-versions:
- '0.2.0.2'
- '0.2.0.3'
- '0.2.0.4'
- '1.0.0.0'
author: Louis Pan
latest: '1.0.0.0'
description-type: markdown
description: ! "[![Hackage](https://img.shields.io/hackage/v/disposable.svg)](https://hackage.haskell.org/package/disposable)\n[![Build
  Status](https://secure.travis-ci.org/louispan/disposable.png?branch=master)](http://travis-ci.org/louispan/disposable)\n\nDisposable
  allows storing different resource releasing actions togther in a container.\nThis
  library is useful for queueing up GHCJS.Foreign.Callback together to be released
  after a new rendering frame.\n\n# Changelog\n\n* 1.0.0.0\n  - Breaking changes:\n
  \   - Simplified by removing SomeDisposable GADT; Disposable is now a newtype, and
  the typeclass is called Dispose.\n    - The intention is no longer to create Disposable
  instances for everything.\n    - Disposable is only used to provide a safe wrapper
  around IO to ensure that it performs no other side effects."
license-name: BSD3
