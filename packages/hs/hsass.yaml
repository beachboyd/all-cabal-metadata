homepage: https://github.com/jakubfijalkowski/hsass
changelog-type: markdown
hash: 05a1c612051dc030cbc7bb702a239d3ceb62d601903f8ff41e3b76e2fe10da18
test-bench-deps:
  bytestring: ! '>=0.10.0'
  hsass: -any
  base: ! '>=4.7 && <5'
  data-default-class: -any
  hspec: ! '>=2.1.5'
  text: ! '>=1.2'
  temporary: ! '>=1.1'
  hspec-discover: ! '>=2.1.5'
maintainer: fiolek94@gmail.com
synopsis: Integrating Sass into Haskell applications.
changelog: ! "# Change Log\nAll notable changes to this project will be documented
  in this file.\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n##
  [0.7.0] - 2018-04-02\n### Changed\n- This library uses UTF-8 to encode/decode all
  `CString`s (paths included!)\n\n## [0.6.0] - 2018-03-24\n### Changed\n- Switched
  to `hLibsass` 0.1.7.0 and `libsass` 3.5.2\n\n### Added\n- `compileByteString` for
  `ByteString`-only compilation\n- option to strip BOM/@charset with `sassStripEncodingInfo`
  option (thanks @h-3-0 !)\n\n### Removed\n- `clearNativeFunction` and `clearNativeFunctionList`
  are not needed anymore\n\n## [0.5.0] - 2017-11-01\n### Changed\n- Split `SassImporter`
  into `SassImporter` and `SassHeader` (thanks @h-3-0 !)\n\n### Added\n- `SassIporter`
  now takes path to the file that is being imported into (thanks\n  @h-3-0)\n\n##
  [0.4.2] - 2017-08-28\n### Added\n- Introduce `defaultSassOptions` as default options
  (thanks @chris-martin !)\n\n## [0.4.1] - 2017-03-19\n### Fixed\n- Bump `hlibsass`
  version to 0.1.5.2 (fixes build problem on Cabal 1.24 & Stack\n  1.4)\n\n## [0.4.0]
  - 2015-12-19\n### Added\n- Support for combining `SassValues` (new in hlibsass 0.1.5)\n\n###
  Changed\n- Requires hlibsass version 0.1.5\n- `SassValue` derives `Show`\n\n## [0.3.0]
  - 2015-07-10\n### Added\n- Support for a `ByteString` result (thanks to [Andy\n
  \ Morris](https://github.com/jakubfijalkowski/hsass/pull/3) ).\n\n### Changed\n-
  `SassExtendedResult` is now parametrised by a base result type (e.g.\n  `String`).\n-
  The package depends on `transformers` instead of `mtl`.\n\n### Fixed\n- Fix GHC
  7.10.1 warnings related to AMP proposal.\n- Support for stack's lts-2.17 resolver.\n\n##
  [0.2.0] - 2015-06-01\n### Changed\n- Return type of `compileString` and `compileFile`
  is now polymorphic - may\n  return both `String` and `SassExtendedResult` on success.\n-
  Fixes in documentation (articles, mostly).\n\n### Added\n- `SassExtendedResult`
  with a compiled string, a list of files included during\n  compilation and a source
  map.\n\n## 0.1.0 - 2015-04-11\n### Added\n- Support for functions, importers, headers
  and sass values.\n- Compilation of files and strings.\n\n[0.2.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.1.0...v0.2.0\n[0.3.0]:
  https://github.com/jakubfijalkowski/hsass/compare/v0.2.0...v0.3.0\n[0.4.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.3.0...v0.4.0\n[0.4.1]:
  https://github.com/jakubfijalkowski/hsass/compare/v0.4.0...v0.4.1\n[0.4.2]: https://github.com/jakubfijalkowski/hsass/compare/v0.4.1...v0.4.2\n[0.5.0]:
  https://github.com/jakubfijalkowski/hsass/compare/v0.4.2...v0.5.0\n[0.6.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.5.0...v0.6.0\n[0.7.0]:
  https://github.com/jakubfijalkowski/hsass/compare/v0.6.0...v0.7.0\n"
basic-deps:
  bytestring: ! '>=0.10.0'
  base: ! '>=4.7 && <5'
  data-default-class: -any
  monad-loops: ! '>=0.3'
  filepath: ! '>=1.0'
  hlibsass: ! '>=0.1.7.0'
  transformers: ! '>=0.3'
all-versions:
- '0.1.0'
- '0.2.0'
- '0.3.0'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.5.0'
- '0.6.0'
- '0.7.0'
author: Jakub Fija≈Çkowski <fiolek94@gmail.com>
latest: '0.7.0'
description-type: haddock
description: ! 'This package provides quite simple (but not too simple) API for

  compilation of <http://sass-lang.com/ Sass> code. It uses

  <http://libsass.org libsass> (hlibsass) underneath, so the code it

  parses/generates should be compatible with original Sass implementation (or at

  least <http://libsass.org/#sassc sassc>).

  This package tries to minimize C API usage, so the only place where it is used

  is in the ''compileFile'' / ''compileString'' methods. This allows us to stay pure

  as long as we can and not waste performance for going back and forth.

  If you feel that compilation options constrain you too much, you may use rest

  of modules without it. With them, you can use Haskell types and mechanisms to

  manage libsass''s data(eg. importers, options, values) and modify compilation

  process as you like.'
license-name: MIT
