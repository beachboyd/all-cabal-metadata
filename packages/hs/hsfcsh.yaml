homepage: https://github.com/Yuras/hsfcsh
changelog-type: ''
hash: eada96a2371ead9637630213d4dd0b493414fe83c1efbeb76b95159e68ba7923
test-bench-deps: {}
maintainer: shumovichy@gmail.com
synopsis: Incremental builder for flash
changelog: ''
basic-deps:
  base: ==4.*
  process: ==1.*
  network: ==2.*
  hslogger: ==1.1.*
  hdaemonize: ==0.4.*
all-versions:
- 0.0.1
author: Yuras Shumovich
latest: 0.0.1
description-type: text
description: ! "\nIt is just a wrapper around fcsh. It allows to build flash/flex
  projects incrementally.\nIt can be used from Makefile.\n\nThe package contains two
  executables, hsfcsh and hsfcsh_do. The first one is daemon,\nhsfcsh_do allows to
  send commands to the daemon.\n\n\nInstall\n\n- Install flex sdk and add <flex_sdk>/bin
  to your PATH\n- Install haskell platform, add ~/.cabal/bin to your PATH\n- `cabal
  install hsfcsh`\n\n\nUsing\n\nUse `hsfcsh_do spawn` or `hsfcsh_do exit` to start
  or stop the daemon.\nUse `hsfcsh_do compile args` to compile something. It will
  spawn the daemon if it is not started yet.\n\nThe next example will compile Start.mxml
  from the current directory:\n  hsfcsh_do compile -- \"$(PWD)/Start.mxml\"\n\nThe
  first time it may take few minutes to compile for large projects, but then it will
  compile\nthe project incrementally.\n\nYou can use hsfcsh_do from Makefile. See
  example in the corresponding directory.\nIt will redirect compiler output to the
  stdout, so you could examine the results (errors, warnings, etc)\nor let your editor
  (vim, emacs) to parse them.\n\n"
license-name: BSD-3-Clause
