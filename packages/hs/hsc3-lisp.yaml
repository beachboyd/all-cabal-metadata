homepage: http://rd.slavepianos.org/t/hsc3-lisp
changelog-type: ''
hash: e4eaaf1a974d58cf906bf0f58124f409bddef9cfd4b37533aeabdb77341d449e
test-bench-deps: {}
maintainer: rd@slavepianos.org
synopsis: LISP SUPERCOLLIDER
changelog: ''
basic-deps:
  unix: -any
  husk-scheme: -any
  base: ==4.*
  filepath: -any
  hsc3-dot: ==0.15.*
  containers: -any
  hosc: ==0.15.*
  mtl: -any
  hashable: -any
  hsc3: ==0.15.*
  safe: -any
  directory: -any
all-versions:
- '0.15'
author: Rohan Drape
latest: '0.15'
description-type: text
description: ! "LISP SUPERCOLLIDER\n------------------\n\nAMERICAN PRIMITIVE, VOL.
  2\n\n`HSC3-LISP` is a simple [LISP][lisp] interpreter.\n\nThe only data type is
  the [SUPERCOLLIDER][sc3] `UNIT GENERATOR`.\n\nA LISP answer to the eternal question,\n[WHY
  SUPERCOLLIDER?](sw/hsc3-graphs/html/why-supercollider.scd.html)\n\n~~~~\n(HEAR\n
  \ (LET ((R (RESONZ (MUL (DUST AR 0.2) 50) (RAND 200 3200) 0.003))\n        (S (MIX
  (CLONE 10 R)))\n        (Z (DELAY-N S 0.048 0.048))\n        (C (COMB-L Z 0.1 (MUL-ADD
  (LF-NOISE1 KR (RAND 0 0.1)) 0.04 0.05) 15))\n        (Y (MIX (CLONE 7 C)))\n        (F
  (LAMBDA (I) (ALLPASS-N I 0.05 (CLONE 2 (RAND 0 0.05)) 1)))\n        (X ((FOLDL1
  COMPOSE (REPLICATE 4 F)) Y)))\n    (ADD S (MUL X 0.2))))\n~~~~\n\nThere is an OSX
  (10.9.3) binary ([hsc3-lisp](sw/hsc3-lisp/osx/hsc3-lisp.xz).[xz](http://tukaani.org/xz/)),\nor
  to build type:\n\n~~~~\ncd hs ; prefix=~/opt make install\n~~~~\n\nAn environment
  variable locates the HSC3-LISP library files:\n\n~~~~\nexport HSC3_LISP_DIR=$HOME/sw/hsc3-lisp/lisp\n~~~~\n\nTo
  hear the above type `C-cC-e` in EMACS, or in a shell type:\n\n~~~~\nhsc3-lisp ~/sw/rsc3/help/graph/why-supercollider.scm\n~~~~\n\nThere
  is a [TUTORIAL](?t=hsc3-lisp&e=help/tutorial.lisp),\nand [TRANSLATIONS](?t=hsc3-lisp&e=help/jmcc.lisp)
  of graphs by [JAMES\nMCCARTNEY](http://audiosynth.com/autobio/emu.jpg) from the
  `SC2`\nmanual.\n\nHSC3-LISP is `CASE-INSENSITIVE`, in EMACS you can type `C-x C-l`
  to\ntime travel.\n\nHSC3-LISP follows the [HASKELL][hs] supercollider ([HSC3][hsc3])
  rules.\n\nHSC3-LISP thinks `scsynth` is listening at the standard port (57110).\n\nHSC3-LISP
  is POST-[ML](http://standardml.org), `(EQUAL? (MAP (+ 1) (LIST 1 2 3)) (LIST 2 3
  4))`.\n\nHSC3-LISP is not [SCHEME][scheme].  Still, the following [RSC3][rsc3] graphs
  are working:\n\n- [aleatoric-quartet.lisp](sw/rsc3/help/graph/aleatoric-quartet.lisp)\n-
  [alien-froggies.lisp](sw/rsc3/help/graph/alien-froggies.lisp)\n- [alien-meadow.lisp](sw/rsc3/help/graph/alien-meadow.lisp)\n-
  [analog-bubbles.lisp](sw/rsc3/help/graph/analog-bubbles.lisp)\n- [analog-bubbles-mouse.lisp](sw/rsc3/help/graph/analog-bubbles-mouse.lisp)\n-
  [analogue-daze.lisp](sw/rsc3/help/graph/analogue-daze.lisp)\n- [babbling-brook.lisp](sw/rsc3/help/graph/babbling-brook.lisp)\n-
  [berlin-1977.lisp](sw/rsc3/help/graph/berlin-1977.lisp)\n- [bit-reduction.lisp](sw/rsc3/help/graph/bit-reduction.lisp)\n-
  [blips-001.lisp](sw/rsc3/help/graph/blips-001.lisp)\n- [bottle.lisp](sw/rsc3/help/graph/bottle.lisp)\n-
  [bouncing-objects.lisp](sw/rsc3/help/graph/bouncing-objects.lisp)\n- [bowed-string.lisp](sw/rsc3/help/graph/bowed-string.lisp)\n-
  [ccomb.lisp](sw/rsc3/help/graph/ccomb.lisp)\n- [chain-saw.lisp](sw/rsc3/help/graph/chain-saw.lisp)\n-
  [choip.lisp](sw/rsc3/help/graph/choip.lisp)\n- [chrd.lisp](sw/rsc3/help/graph/chrd.lisp)\n-
  [clustered-sines.lisp](sw/rsc3/help/graph/clustered-sines.lisp)\n- [coolant.lisp](sw/rsc3/help/graph/coolant.lisp)\n-
  [cricket.lisp](sw/rsc3/help/graph/cricket.lisp)\n- [crotale.lisp](sw/rsc3/help/graph/crotale.lisp)\n-
  [cut-outs.lisp](sw/rsc3/help/graph/cut-outs.lisp)\n- [cymbalism-accelerando.lisp](sw/rsc3/help/graph/cymbalism-accelerando.lisp)\n-
  [cymbalism.lisp](sw/rsc3/help/graph/cymbalism.lisp)\n- [data-space.lisp](sw/rsc3/help/graph/data-space.lisp)\n-
  [deep-sea.lisp](sw/rsc3/help/graph/deep-sea.lisp)\n- [demanding-studies.lisp](sw/rsc3/help/graph/demanding-studies.lisp)\n-
  [dial-history.lisp](sw/rsc3/help/graph/dial-history.lisp)\n- [diffraction.lisp](sw/rsc3/help/graph/diffraction.lisp)\n-
  [discretion.lisp](sw/rsc3/help/graph/discretion.lisp)\n- [doppler.lisp](sw/rsc3/help/graph/doppler.lisp)\n-
  [drummer.lisp](sw/rsc3/help/graph/drummer.lisp)\n- [eggcrate.lisp](sw/rsc3/help/graph/eggcrate.lisp)\n-
  [f-lets.lisp](sw/rsc3/help/graph/f-lets.lisp)\n- [fm-iter.lisp](sw/rsc3/help/graph/fm-iter.lisp)\n-
  [forest-sounds.lisp](sw/rsc3/help/graph/forest-sounds.lisp)\n- [fwalk.lisp](sw/rsc3/help/graph/fwalk.lisp)\n-
  [half-life.lisp](sw/rsc3/help/graph/half-life.lisp)\n- [hard-sync-sawtooth-with-lfo.lisp](sw/rsc3/help/graph/hard-sync-sawtooth-with-lfo.lisp)\n-
  [harmonic-swimming.lisp](sw/rsc3/help/graph/harmonic-swimming.lisp)\n- [harmonic-tumbling.lisp](sw/rsc3/help/graph/harmonic-tumbling.lisp)\n-
  [h-chatter.lisp](sw/rsc3/help/graph/h-chatter.lisp)\n- [hell-is-busy.lisp](sw/rsc3/help/graph/hell-is-busy.lisp)\n-
  [hh-808.lisp](sw/rsc3/help/graph/hh-808.lisp)\n- [implosion.lisp](sw/rsc3/help/graph/implosion.lisp)\n-
  [impulse-sequencer.lisp](sw/rsc3/help/graph/impulse-sequencer.lisp)\n- [karplus-strong.lisp](sw/rsc3/help/graph/karplus-strong.lisp)\n-
  [klink.lisp](sw/rsc3/help/graph/klink.lisp)\n- [k-ppr.lisp](sw/rsc3/help/graph/k-ppr.lisp)\n-
  [lfo-modulation.lisp](sw/rsc3/help/graph/lfo-modulation.lisp)\n- [lf-pulses.lisp](sw/rsc3/help/graph/lf-pulses.lisp)\n-
  [lg-timed.lisp](sw/rsc3/help/graph/lg-timed.lisp)\n- [lots-o-sines.lisp](sw/rsc3/help/graph/lots-o-sines.lisp)\n-
  [lz-bf.lisp](sw/rsc3/help/graph/lz-bf.lisp)\n- [modal-space-buf.lisp](sw/rsc3/help/graph/modal-space-buf.lisp)\n-
  [modal-space.lisp](sw/rsc3/help/graph/modal-space.lisp)\n- [moto-rev.lisp](sw/rsc3/help/graph/moto-rev.lisp)\n-
  [mouse-clatter.lisp](sw/rsc3/help/graph/mouse-clatter.lisp)\n- [narrow-band-filtered-crackle-noise.lisp](sw/rsc3/help/graph/narrow-band-filtered-crackle-noise.lisp)\n-
  [nharm.lisp](sw/rsc3/help/graph/nharm.lisp)\n- [noise-burst-sweep.lisp](sw/rsc3/help/graph/noise-burst-sweep.lisp)\n-
  [one-line.lisp](sw/rsc3/help/graph/one-line.lisp)\n- [oscillator-cluster.lisp](sw/rsc3/help/graph/oscillator-cluster.lisp)\n-
  [pattern-buffer.lisp](sw/rsc3/help/graph/pattern-buffer.lisp)\n- [plucked-strings.lisp](sw/rsc3/help/graph/plucked-strings.lisp)\n-
  [police-state.lisp](sw/rsc3/help/graph/police-state.lisp)\n- [pond-life.lisp](sw/rsc3/help/graph/pond-life.lisp)\n-
  [pulsing-bottles.lisp](sw/rsc3/help/graph/pulsing-bottles.lisp)\n- [rails.lisp](sw/rsc3/help/graph/rails.lisp)\n-
  [random-pulsations.lisp](sw/rsc3/help/graph/random-pulsations.lisp)\n- [random-sine-waves.lisp](sw/rsc3/help/graph/random-sine-waves.lisp)\n-
  [record-scratcher.lisp](sw/rsc3/help/graph/record-scratcher.lisp)\n- [red-frik.lisp](sw/rsc3/help/graph/red-frik.lisp)\n-
  [reset.lisp](sw/rsc3/help/graph/reset.lisp)\n- [resonant-dust.lisp](sw/rsc3/help/graph/resonant-dust.lisp)\n-
  [resonators-harmonic-series.lisp](sw/rsc3/help/graph/resonators-harmonic-series.lisp)\n-
  [reso-pulse.lisp](sw/rsc3/help/graph/reso-pulse.lisp)\n- [reverberated-noise-bursts.lisp](sw/rsc3/help/graph/reverberated-noise-bursts.lisp)\n-
  [reverberated-sine-percussion.lisp](sw/rsc3/help/graph/reverberated-sine-percussion.lisp)\n-
  [ring-modulated-klank.lisp](sw/rsc3/help/graph/ring-modulated-klank.lisp)\n- [rzblp.lisp](sw/rsc3/help/graph/rzblp.lisp)\n-
  [sample-and-hold-liquidities.lisp](sw/rsc3/help/graph/sample-and-hold-liquidities.lisp)\n-
  [s-chirp.lisp](sw/rsc3/help/graph/s-chirp.lisp)\n- [scratchy.lisp](sw/rsc3/help/graph/scratchy.lisp)\n-
  [scritto.lisp](sw/rsc3/help/graph/scritto.lisp)\n- [seqr.lisp](sw/rsc3/help/graph/seqr.lisp)\n-
  [shepard-tones.lisp](sw/rsc3/help/graph/shepard-tones.lisp)\n- [shifting-pulses.lisp](sw/rsc3/help/graph/shifting-pulses.lisp)\n-
  [slly-wlk.lisp](sw/rsc3/help/graph/slly-wlk.lisp)\n- [snare-909.lisp](sw/rsc3/help/graph/snare-909.lisp)\n-
  [sosc-lp.lisp](sw/rsc3/help/graph/sosc-lp.lisp)\n- [spe.lisp](sw/rsc3/help/graph/spe.lisp)\n-
  [sprinkler.lisp](sw/rsc3/help/graph/sprinkler.lisp)\n- [sprinkler-mouse.lisp](sw/rsc3/help/graph/sprinkler-mouse.lisp)\n-
  [status.lisp](sw/rsc3/help/graph/status.lisp)\n- [strtchd-scrmbld.lisp](sw/rsc3/help/graph/strtchd-scrmbld.lisp)\n-
  [strummable-guitar.lisp](sw/rsc3/help/graph/strummable-guitar.lisp)\n- [sweepy-noise.lisp](sw/rsc3/help/graph/sweepy-noise.lisp)\n-
  [swept-resonant-noise.lisp](sw/rsc3/help/graph/swept-resonant-noise.lisp)\n- [synthetic-piano.lisp](sw/rsc3/help/graph/synthetic-piano.lisp)\n-
  [tank.lisp](sw/rsc3/help/graph/tank.lisp)\n- [tgb.lisp](sw/rsc3/help/graph/tgb.lisp)\n-
  [tgr-rpr.lisp](sw/rsc3/help/graph/tgr-rpr.lisp)\n- [theremin.lisp](sw/rsc3/help/graph/theremin.lisp)\n-
  [three-cpsw.lisp](sw/rsc3/help/graph/three-cpsw.lisp)\n- [tipnso.lisp](sw/rsc3/help/graph/tipnso.lisp)\n-
  [tremulate.lisp](sw/rsc3/help/graph/tremulate.lisp)\n- [trkl.lisp](sw/rsc3/help/graph/trkl.lisp)\n-
  [trmlo.lisp](sw/rsc3/help/graph/trmlo.lisp)\n- [tr-out.lisp](sw/rsc3/help/graph/tr-out.lisp)\n-
  [tsort.lisp](sw/rsc3/help/graph/tsort.lisp)\n- [uplink.lisp](sw/rsc3/help/graph/uplink.lisp)\n-
  [voscil.lisp](sw/rsc3/help/graph/voscil.lisp)\n- [what-was-i-thinking.lisp](sw/rsc3/help/graph/what-was-i-thinking.lisp)\n-
  [why-supercollider.lisp](sw/rsc3/help/graph/why-supercollider.lisp)\n- [wial.lisp](sw/rsc3/help/graph/wial.lisp)\n-
  [wind-metals.lisp](sw/rsc3/help/graph/wind-metals.lisp)\n- [xy-interference.lisp](sw/rsc3/help/graph/xy-interference.lisp)\n-
  [zizle.lisp](sw/rsc3/help/graph/zizle.lisp)\n\n## LISP\n\n- [hsc3.lisp](?t=hsc3-lisp&e=lisp/hsc3.lisp)\n-
  [rhs.lisp](?t=hsc3-lisp&e=lisp/rhs.lisp)\n- [rhs.syntaxlisp](?t=hsc3-lisp&e=lisp/rhs.syntax.lisp)\n-
  [rsc3.lisp](?t=hsc3-lisp&e=lisp/rsc3.lisp)\n- [scheme.lisp](?t=hsc3-lisp&e=lisp/scheme.lisp)\n-
  [stdlib.lisp](?t=hsc3-lisp&e=lisp/stdlib.lisp)\n- [ugen.lisp](?t=hsc3-lisp&e=lisp/ugen.lisp)\n\n##
  HELP\n\n- [jmcc.lisp](?t=hsc3-lisp&e=help/jmcc.lisp)\n- [tutorial.lisp](?t=hsc3-lisp&e=help/tutorial.lisp)\n-
  [r5rs.lisp](?t=hsc3-lisp&e=help/r5rs.lisp)\n\n© [rohan drape][rd], 2014, [gpl][gpl].\n\n[rd]:
  http://rd.slavepianos.org/\n[hsc3]: http://rd.slavepianos.org/?t=hsc3\n[hs]: http://haskell.org/\n[sc3]:
  http://audiosynth.com/\n[gpl]: http://gnu.org/copyleft/\n[emacs]: http://www.gnu.org/software/emacs/\n[lisp]:
  http://www-formal.stanford.edu/jmc/history/lisp/lisp.html\n[rsc3]: http://rd.slavepianos.org/?t=rsc3\n[scheme]:
  http://library.readscheme.org/standards.html\n\n[r4rs]: http://people.csail.mit.edu/jaffer/r4rs_toc.html\n[r5rs]:
  http://www.schemers.org/Documents/Standards/R5RS/HTML/\n"
license-name: LicenseRef-GPL
