homepage: https://github.com/hvr/HsYAML
changelog-type: markdown
hash: 74dea1524cb7594aa7a50ebcc3c69235f079ba74d6c26ffce806d094d0ddae4f
test-bench-deps: {}
maintainer: hvr@gnu.org
synopsis: Pure Haskell YAML 1.2 parser
changelog: ! "### 0.1.1.2\n\n* Tolerate BOM at *each* `l-document-prefix` (rather
  than only at the first one encountered in a YAML stream)\n* Workaround broken `mtl-2.2.2`
  bundled in GHC 8.4.1 ([#1](https://github.com/hvr/HsYAML/issues/1))\n* Relax to
  GPL-2.0-or-later\n\n### 0.1.1.1\n\n* Reject (illegal) non-scalar code-points in
  UTF-32 streams\n* Tolerate BOM at start of stream\n* Disambiguate choice in `l-any-document`
  production regarding token separation of `c-directives-end`\n* Fix `c-indentation-indicator(n)`
  grammar production when\n  auto-detecting indentation in the presence of empty leading
  lines;\n  also reject (illegal) auto-indent-level scalars with leading\n  more-indented
  all-space lines\n* Complete character escape rules for double-quoted scalars\n*
  Minor optimizations\n\n### 0.1.1.0\n\n* `Data.YAML` module promoted from `TrustWorthy`
  to `Safe`\n* Add `FromYAML Natural` instance\n* Add `MonadFail`, `Alternative`,
  and `MonadPlus` instances for `Data.YAML.Parser`\n* Add `Data.YAML.decodeStrict`
  function\n* Export `Data.YAML.typeMismatch` helper function\n\n## 0.1.0.0\n\n* First
  version. Released on an unsuspecting world.\n"
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4.5 && <4.13'
  text: ! '>=1.2.3 && <1.3'
  parsec: ! '>=3.1.13.0 && <3.2'
  dlist: ! '>=0.8.0.4 && <0.9'
  containers: ! '>=0.4.2 && <0.7'
  mtl: ! '>=2.2.1 && <2.3'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
author: Herbert Valerio Riedel
latest: 0.1.1.2
description-type: haddock
description: ! '@HsYAML@ is a [YAML 1.2](http://yaml.org/spec/1.2/spec.html) parser
  implementation for Haskell.


  Features of @HsYAML@ include:


  * Pure Haskell implementation with small dependency footprint and emphasis on strict
  compliance with the [YAML 1.2 specification](http://yaml.org/spec/1.2/spec.html).

  * Direct decoding to native Haskell types via (@aeson@-inspired) typeclass-based
  API (see "Data.YAML").

  * Support for constructing custom YAML node graph representation (including support
  for cyclic YAML data structures).

  * Support for the standard (untyped) /Failsafe/, (strict) /JSON/, and (flexible)
  /Core/ \"schemas\" providing implicit typing rules as defined in the YAML 1.2 specification
  (including support for user-defined custom schemas).

  * Event-based API resembling LibYAML''s Event-based API (see "Data.YAML.Event").

  * Low-level API access to lexical token-based scanner (see "Data.YAML.Token").

'
license-name: GPL-2.0-only
