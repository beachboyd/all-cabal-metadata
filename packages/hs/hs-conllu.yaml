homepage: https://github.com/odanoburu/hs-conllu
changelog-type: text
hash: 61dab7a1d33ca364e5ff58f7e5161d5162a24c93b90ccf4694b3c1b51b3f6d73
test-bench-deps: {}
maintainer: bruno cuconato <bcclaro+haskell+hsconllu@gmail.com>
synopsis: Conllu validating parser and utils.
changelog: ! "# -*- mode: org -*-\n#+TITLE: Revision history for hs-conllu\n\n* 0.0.1
  \ -- 2018-01-12\n\n- First version. Released on an unsuspecting world.\n* 0.1.0
  -- 2018-04-03\n- change Type module a lot -- basically breaks all existing code\n-
  remove Data.* modules, they should be in a separate package (and\n  will have to
  be rewritten) \n- new type for words allows us to type-check simple words, multi-word\n
  \ tokens, and empty nodes\n- remove Data.* modules, they should be in a separate
  package (and\n  will have to be rewritten) (closes #6 )\n- add tagsets to separate
  modules, to be imported qualified (closes\n  #7)\n- add requested parsing and printing
  functions (closes #9)\n- add recovery function to parser (closes #18)\n"
basic-deps:
  void: <1
  base: ! '>=4.9 && <5'
  megaparsec: ==6.*
  filepath: ==1.4.*
  containers: ! '>0.5.8 && <0.6'
  directory: ==1.3.*
all-versions:
- 0.1.2
author: bruno cuconato
latest: 0.1.2
description-type: text
description: ! "# -*- mode: org -*-\n#+TITLE: hs-conllu\n\n[[https://travis-ci.org/odanoburu/hs-conllu][file:https://travis-ci.org/odanoburu/hs-conllu.svg?branch=master]]\n\nthis
  package provides a validating[fn:1] parser of the [[http://universaldependencies.org/format.html][CoNLL-U
  format]], along\nwith a data model for its constituents. reading, pretty-printing,
  and\ndiffing functions are also provided.\n\nfurther processing utilities are being
  developed and will be placed in\na separate package.\n\n* installation\n  #+BEGIN_SRC
  sh\n  cd /path/of/choice/\n  git clone $REPO_URL\n  #+END_SRC\n  - using =cabal=:\n
  \   #+BEGIN_SRC sh\n    cabal install\n    #+END_SRC\n  - using =stack=:\n    #+BEGIN_SRC
  sh\n    stack setup\n    stack build\n    stack install --system-ghc\n    #+END_SRC\n\n
  \ the library is tested with GHC versions 8.0.2, 8.2.2, and 8.4.1 on\n  Linux and
  on OSX (thanks Travis!).\n\n  if you have problems with the dependency versions,
  you may try to\n  alter them in the cabal file for the version you have. the version\n
  \ bounds were generated automatically by cabal, and are probably\n  conservative
  -- the library probably will probably still work if you\n  have the same major version.
  (if it does, make a PR!)\n\n  if you don't want to have this kind of problem anymore,
  try [[https://docs.haskellstack.org/en/stable/README/][stack]]\n  (see why [[https://www.fpcomplete.com/blog/2015/06/why-is-stack-not-cabal][here]]).\n\n*
  usage\n  if you would like to request features, please open an issue.\n\n** hs-conllu,
  the executable\n   this executable can be called using stack by\n   : stack exec
  hs-conllu [subcommand] [args]\n   it currently has two subcommands:\n   - validate
  :: read and pretty-print the file given as argument.\n   - diff :: diff the two
  CoNLL-U files provided as arguments, and\n             print them. this assumes
  changes have only been made to\n             word fields, not to sentence ordering,
  etc. if you'd like\n             finer grained diffing, you will have to use the
  library.\n\n** Reading CoNLL-U files\n   the reading functions are in the =IO= module.\n
  \  #+BEGIN_SRC sh\n   $ ghci\n   > import Conllu.IO\n   > d <- readConllu \"path/to/conllu\"\n
  \  #+END_SRC\n   will read the file at the specified path, or all the =*.conllu=\n
  \  files in that path.\n\n   if your CoNLL-U files don't stricly follow the specification
  or I\n   got the parser wrong, please open an issue! aditionally, you may\n   solve
  your problem if you take a look at the =Parser= module.\n\n** Customizable parsers\n
  \  if you just want to tweak how a few fields of the CoNLL-U format\n   are parsed,
  you may write a parser for that field and then\n   customize the standard parser
  with it. see the Haddock\n   documentation for the =Parse= module.\n\n   I didn't
  make the parser as customizable as it could be, so if that\n   bothers you, please
  create an issue or file a PR!\n\n** Pretty-Printing\n   the printing functions are
  in the =Print= module. see the Haddock\n   documentation!\n\n** Diffing\n   see
  the =Diff= module Haddock documentation.\n \n* contributing\n  I'm a new haskeller,
  so any help will probably be useful -- even if\n  its just a few pointers and comments
  on how I can improve the\n  library or my code.\n\n  if you want to contribute code,
  let me know, and go right on. you\n  may want to look at the =TODO.org= file.\n\n*
  Footnotes\n\n[fn:1] it currently only validates the CoNLL-U syntax, not its\nsemantics
  (i.e., it will report an error if it finds a letter on the\nID field, but won't
  complain if you specified an inexisting word as\nHEAD of another word).\n"
license-name: LGPL-3.0-only
