homepage: http://www.aivikasoft.com
changelog-type: markdown
hash: 8451e48098181618d23cf72a4557d189307cec7527aa8d76ae51ceea09b3f29d
test-bench-deps: {}
maintainer: David Sorokin <david.sorokin@gmail.com>
synopsis: Transformers for the Aivika simulation library
changelog: ! "\nVersion 5.8\n-----\n\n* Satisfying a new requirement of the MonadMask
  class type.\n\nVersion 5.7\n-----\n\n* Implemented MonadMask and MonadCatch for
  basic simulation computations.\n\nVersion 5.6\n-----\n\n* Lars Kuhtz added the support
  of GHC 8.4.\n\nVersion 5.5\n-----\n\n* Added the 4th order Runge-Kutta 3/8-method.\n\n*
  Added experimental functions delayByDT and delayIByDT.\n\nVersion 5.4\n-----\n\n*
  A more correct treating of the stop time. Earlier, the final\n  integration time
  point was used instead of the stop time in\n  some functions.\n\nVersion 5.3.1\n-----\n\n*
  Increased the speed of simulation.\n\nVersion 5.3\n-----\n\n* Introduced the result
  source titles, which can be useful when plotting the charts.\n\n* Added functions
  newSignalInTimeGrid and timeGrid.\n\nVersion 5.2\n-----\n\n* Using the mwc-random
  package for generating random numbers by default.\n\nVersion 5.1\n-----\n\n* Includes
  changes destined for Aivika Exension Pack.\n\n* Minor changes in the resource preemption
  statistics.\n\n* Added the statistics reset.\n\nVersion 5.0\n-----\n\n* Added the
  Composite monad transformer.\n\n* Added the Channel computation.\n\n* Breaking change:
  modified signatures of functions signalStream and streamSignal.\n\n* Breaking change:
  the signalProcessor function is replaced with channelProcessor.\n\n* Breaking change:
  the processorSignaling function is replaced with processorChannel.\n\n* Added module
  Signal.Random.\n\n* Added functions arrivalTimerSignal and arrivalTimerChannel.\n\n*
  Added functions queuedSignalStream, queuedProcessorChannel and queuedChannelProcessor.\n\nVersion
  4.6\n-----\n\n* Removed the MonadTemplate type class as it often caused overlapping
  family data\n  instances.\n\n* Updated module DoubleLinkedList.\n\n* Breaking change:
  arrows Net and Processor are trying to perform computations\n  in parallel as possible,
  when using the proc notation. Earlier they executed\n  sequentially.\n"
basic-deps:
  exceptions: ! '>=0.9.0'
  mwc-random: ! '>=0.13.0.0'
  base: ! '>=4.6.0.0 && <6'
  aivika: ! '>=5.8'
  semigroups: ! '>=0.10'
  array: ! '>=0.3.0.0'
  containers: ! '>=0.4.0.0'
  mtl: ! '>=2.1.1'
  random: ! '>=1.0.0.3'
  vector: ! '>=0.10.0.1'
all-versions:
- '2.0'
- '2.1'
- '3.0'
- 4.3.1
- 4.3.2
- 4.3.3
- 4.3.4
- 4.3.5
- '4.5'
- 4.5.1
- '4.6'
- 4.6.1
- 5.0.1
- '5.1'
- '5.2'
- '5.3'
- 5.3.1
- '5.4'
- '5.5'
- '5.6'
- '5.7'
- '5.8'
author: David Sorokin
latest: '5.8'
description-type: haddock
description: ! 'This package is a generalization of the aivika [1] simulation library

  with extensive use of monad transformers and type families.

  It can be applied for nested simulation [2] and parallel distributed simulation
  [3].


  Unlike sequential simulation, the distributed simulation is more difficult for implementing

  the simulation experiments by the Monte-Carlo method. Therefore, there are additional
  packages

  that allow saving the results of distributed simulation in SQL databases

  and only then the simulation reports are generated. These reports are HTML pages

  with charts, histograms, links to CSV tables, statistics summary and so on.


  This method can be used not only for the parallel distributed simulation, but also
  for other

  simulation models created with help of the generalized version of the Aivika simulation
  library.

  Please consult the AivikaSoft [4] website for more details.


  \[1] <http://hackage.haskell.org/package/aivika>


  \[2] <http://hackage.haskell.org/package/aivika-branches>


  \[3] <http://hackage.haskell.org/package/aivika-distributed>


  \[4] <http://www.aivikasoft.com>

'
license-name: BSD-3-Clause
