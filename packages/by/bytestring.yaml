homepage: https://github.com/haskell/bytestring
changelog-type: markdown
hash: 0a58355cb91bc9930f951a6d14f5fb4a6022647c3aab2b7223e888843bb6a832
test-bench-deps:
  byteorder: ==1.0.*
  test-framework-hunit: -any
  test-framework: -any
  base: -any
  test-framework-quickcheck2: -any
  dlist: ! '>=0.5 && <0.9'
  HUnit: -any
  ghc-prim: -any
  mtl: ! '>=2.0 && <2.3'
  random: -any
  deepseq: -any
  QuickCheck: ! '>=2.4'
  directory: -any
maintainer: Duncan Coutts <duncan@community.haskell.org>
synopsis: Fast, compact, strict and lazy byte strings with a list interface
changelog: ! "0.10.8.2 Duncan Coutts <duncan@community.haskell.org> Feb 2017\n\n *
  Make readFile work for files with no size like /dev/null\n * Extend the cases in
  which concat and toStrict can avoid copying data\n * Fix building with ghc-7.0\n
  * Minor documentation improvements\n * Internal code cleanups\n\n0.10.8.1 Duncan
  Coutts <duncan@community.haskell.org> May 2016\n\n * Fix Builder output on big-endian
  architectures\n * Fix building with ghc-7.6 and older\n\n0.10.8.0 Duncan Coutts
  <duncan@community.haskell.org> May 2016\n\n * Use Rabin-Karp substring search for
  `breakSubstring` and `findSubstring`\n * Improve the performance of `partition`
  for lazy and strict bytestrings\n * Added `stripPrefix` and `stripSuffix` for lazy
  and strict bytestrings\n * Fix building with ghc 8.0 & base 4.9 (Semigroup etc)\n\n0.10.6.0
  Duncan Coutts <duncan@community.haskell.org> Mar 2015\n\n * Rename inlinePerformIO
  so people don't misuse it\n * Fix a corner case in unfoldrN\n * Export isSuffixOf
  from D.B.Lazy.Char8\n * Add D.B.Lazy.elemIndexEnd\n * Fix readFile for files with
  incorrectly reported file size\n * Fix for builder performance with ghc 7.10\n *
  Fix building with ghc 6.12\n\n0.10.4.1 Duncan Coutts <duncan@community.haskell.org>
  Nov 2014\n\n * Fix integer overflow in concatenation functions\n * Fix strictness
  of lazy bytestring foldl'\n * Numerous minor documentation fixes\n * Various testsuite
  improvements\n\n"
basic-deps:
  base: ! '>=4.2 && <5'
  integer-gmp: ! '>=0.2'
  ghc-prim: -any
  deepseq: -any
all-versions:
- '0.9'
- 0.9.0.1
- 0.9.0.2
- 0.9.0.3
- 0.9.0.4
- 0.9.1.0
- 0.9.1.1
- 0.9.1.2
- 0.9.1.3
- 0.9.1.4
- 0.9.1.5
- 0.9.1.6
- 0.9.1.7
- 0.9.1.8
- 0.9.1.9
- 0.9.1.10
- 0.9.2.0
- 0.9.2.1
- 0.10.0.0
- 0.10.0.1
- 0.10.0.2
- 0.10.2.0
- 0.10.4.0
- 0.10.4.1
- 0.10.6.0
- 0.10.8.0
- 0.10.8.1
- 0.10.8.2
author: ! 'Don Stewart,

  Duncan Coutts'
latest: 0.10.8.2
description-type: markdown
description: ! "## ByteString: Fast, Packed Strings of Bytes\n\n[![Build Status](https://secure.travis-ci.org/haskell/bytestring.png?branch=master)](http://travis-ci.org/haskell/bytestring)\n\nThis
  library provides the `Data.ByteString` module -- strict and lazy\nbyte arrays manipulable
  as strings -- providing very time/space-efficient \nstring and IO operations.\n\nFor
  very large data requirements, or constraints on heap size,\n`Data.ByteString.Lazy`
  is provided, a lazy list of bytestring chunks.\nEfficient processing of multi-gigabyte
  data can be achieved this way.\n\nThe library also provides `Data.ByteString.Builder`
  for efficient construction\nof `ByteString` values from smaller pieces during binary
  serialization.\n\nRequirements:\n\n  * Cabal 1.10 or greater\n  * cabal-install\n
  \ * GHC 6.12 or greater\n\nBuilding:\n```\ncabal install\n```\n\nYou can run the
  testsuite as follows:\n```    \ncabal test\n```\n\n### Authors\n`ByteString` was
  derived from the GHC `PackedString` library,\noriginally written by Bryan O'Sullivan,
  and then by Simon Marlow.\nIt was adapted and greatly extended for darcs by David
  Roundy and\nothers. Don Stewart and Duncan Coutts cleaned up and further extended\nthe
  implementation and added the `.Lazy` code. Simon Meier contributed\nthe `Builder`
  feature.\n"
license-name: BSD-3-Clause
