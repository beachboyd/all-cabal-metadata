homepage: https://github.com/d12frosted/CanonicalPath
changelog-type: markdown
hash: 88d94aa024057c10c6e782dfab971cdbf1f6e5b828eab4edc3df60b583a601de
test-bench-deps:
  base: ! '>=4.7 && <4.9'
  basic-prelude: -any
  chell: ! '>=0.4 && <0.5'
  system-canonicalpath: -any
  system-filepath: -any
maintainer: Boris Buliga <d12frosted@icloud.com>
synopsis: Abstract data type for canonical paths with some utilities
changelog: ! '0.3.2.0:

  * fix environment variables test suite


  0.3.1.0:

  * fix and update test suites


  0.3.0.0:

  * remove `UnsafePath` data type. It was synonym to `FilePath` and was confusing
  me sometimes, so I decided to cut it off

  * rename `cpathToText` to `toText''`

  * remove `pathToText` and `textToPath`

  * export `toText` and `fromText` from `Filesystem.Path.CurrentOS`

  * export `fromPrelude` and `toPrelude` functions

  * improve performance (path canonicalization now is performed 1.6x faster than before)

  * improve `canonicalPath` error messages. Most important - now it respects errors
  from `System.Directory.canonicalizePath`

  * add tests

  * add travis support

  * update documentation


  0.2.3.0:

  * add `cpathToText` that converts `CanonicalPath` to `Text`

  * update base version constraints


  0.2.2.0:

  * add functions that return unit instead of `CanonicalPath` to `Directory` module


  0.2.1.0:

  * add `CanonicalPath` constructors that works with `Text` instead of `UnsafePath`


  0.2.0.0:

  * most of functions are in `MonadIO m` now instead of `IO`


  0.1.2.0:

  * add writeFile''

  * add some type conversion functions

  * update documentation


  0.1.1.0:

  * Filesystem.CanonicalPath.Directory implementation

  * Add documentation


  0.1.0.0:

  * Initial implementation of library

'
basic-deps:
  base: ! '>=4.7 && <4.9'
  text: -any
  basic-prelude: -any
  system-filepath: ! '>=0.4'
  directory: ! '>=1.2'
all-versions:
- 0.1.1.0
- 0.1.2.0
- 0.2.0.0
- 0.2.3.0
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
author: Boris Buliga <d12frosted@icloud.com>
latest: 0.3.2.0
description-type: haddock
description: This library provides abstract data type named 'Filesystem.CanonicalPath.CanonicalPath'
  and some useful functions for working with it.
license-name: MIT
