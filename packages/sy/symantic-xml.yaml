homepage: ''
changelog-type: ''
hash: ce6ccf86eb27a1541bcc52aa01b754d9ed4a24038ba9473ac37a17cee2a000de
test-bench-deps:
  bytestring: ! '>=0.10'
  symantic-xml: -any
  base: ! '>=4.10 && <5'
  data-default-class: ! '>=0.1'
  tasty-golden: ! '>=2.3'
  text: ! '>=1.2'
  megaparsec: ! '>=7.0.4'
  filepath: ! '>=1.4'
  treeseq: ! '>=1.0'
  containers: ! '>=0.5'
  hashable: ! '>=1.2.6'
  transformers: ! '>=0.4'
  tasty: ! '>=0.11'
  deepseq: ! '>=1.4'
maintainer: Julien Moutinho <julm+symantic-xml@autogeree.net>
synopsis: Library for reading, validating and writing a subset of the XML format.
changelog: ''
basic-deps:
  bytestring: ! '>=0.10'
  base: ! '>=4.10 && <5'
  data-default-class: ! '>=0.1'
  unordered-containers: ! '>=0.2.8'
  text: ! '>=1.2'
  megaparsec: ! '>=7.0.4'
  filepath: ! '>=1.4'
  treeseq: ! '>=1.0'
  containers: ! '>=0.5'
  hashable: ! '>=1.2.6'
  hxt-charproperties: ! '>=9.2'
  transformers: ! '>=0.5'
  safe: ! '>=0.3'
all-versions:
- 1.0.0.20190223
author: Julien Moutinho <julm+symantic-xml@autogeree.net>
latest: 1.0.0.20190223
description-type: haddock
description: |-
  Symantics for an approximative implementation
  of XML (eXtensible Markup Language) and RNC (RelaxNG Compact).

  Motivation: Other Haskell libraries do not fit my needs or are too heavy/complex.
  I like the principle to parse XML using some symantics,
  which can both generate a Megaparsec parser to validate the XML tree,
  and a RNC rendition of the schema it validates.

  DISCLAMER: My life being's too short, I'm NOT burning my brain
  on seriously conforming to the too complex XML and RNC formats.
  Still I try to respect a vague subset of those,
  unless it makes the code more complex than I am comfortable with.

  WARNING: It's currently using an old symantic approach,
  not the one developped in <https://hackage.haskell.org/package/symantic-http symantic-http>.
  This may change when I'll get to it.
license-name: GPL-3.0-only
