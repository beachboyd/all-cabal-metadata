homepage: https://github.com/fuzz/symbolic-link
changelog-type: markdown
hash: 55be245421f94325cdc0b72b04321830bd9d3240e857b84139edc8b3e5dfb33e
test-bench-deps: {}
maintainer: fuzz@kt-22.com
synopsis: Symlink tools
changelog: |
  # Revision history for symbolic-link

  ## 0.1.0.0 -- 2019-07-31

  * Release first version.

  ## 0.1.0.1 -- 2019-07-31

  * Fix bugs.
basic-deps:
  unix: ! '>=2.7.2.2 && <2.8'
  base: ! '>=4.12.0.0 && <4.13'
  yaml: ^>=0.11.1.0
  directory: ! '>=1.3.3.0 && <1.4'
all-versions:
- 0.1.0.2
author: Fuzz Leonard
latest: 0.1.0.2
description-type: markdown
description: |
  # SymbolicLink

  SymbolicLink provides tools for working with symbolic links on POSIX
  systems.

  The executable `symlink` changes to the user's home directory,
  reads in a sequence of source/target mappings from a YAML file
  in `.symlinks` and attempts to create them. If the target exists
  and is a symbolic link it will be removed and replaced, otherwise
  `symlink` will refuse to clobber it.

  The function `filePathExist` works like `System.Posix.Files.fileExist`
  but does not follow the symlink, thus making it suitable for working with
  unreferenced symlinks. Unreferenced symlinks are not necessarily
  "broken"; one should not have to handle exceptions to work with them.
license-name: BSD-3-Clause
