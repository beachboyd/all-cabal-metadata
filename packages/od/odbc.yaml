homepage: ''
changelog-type: ''
hash: 00807f885e726dc264a6db2320d4ffbfbb65d716d39a2c4fd0569d7715cfd9a7
test-bench-deps:
  bytestring: -any
  base: -any
  time: -any
  hspec: -any
  text: -any
  async: -any
  weigh: -any
  odbc: -any
  QuickCheck: -any
maintainer: chrisdone@fpcomplete.com
synopsis: Haskell binding to the ODBC API, aimed at SQL Server driver
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  time: -any
  text: -any
  async: -any
  containers: -any
  unliftio-core: -any
  formatting: ! '>=6.3.1'
  odbc: -any
  optparse-applicative: -any
  deepseq: -any
all-versions:
- '0.0.0'
- '0.0.1'
author: ''
latest: '0.0.1'
description-type: markdown
description: ! "# odbc [![Build Status](https://travis-ci.org/fpco/odbc.svg)](https://travis-ci.org/fpco/odbc)
  [![Build status](https://ci.appveyor.com/api/projects/status/vpn6a1pme25upbux?svg=true)](https://ci.appveyor.com/project/chrisdone/odbc-0os0b)\n\nHaskell
  binding to the ODBC API, with a strong emphasis on stability,\ntesting and simplicity.\n\n##
  Platform and database support\n\nThe following database drivers are tested against
  in CI:\n\n* Microsoft SQL Server 2017\n\nThe following operating systems are tested
  against in CI:\n\n* Windows [![Build status](https://ci.appveyor.com/api/projects/status/vpn6a1pme25upbux?svg=true)](https://ci.appveyor.com/project/chrisdone/odbc-0os0b)\n*
  Linux [![Build Status](https://travis-ci.org/fpco/odbc.svg)](https://travis-ci.org/fpco/odbc)\n\nI
  develop and test this library on OS X, but currently do not have a\nreliable way
  to run Microsoft SQL Server on Travis CI.\n\n## How ODBC works\n\nODBC is a C API
  that is split into a *manager* and a *driver*.\n\nOn Windows, there is an ODBC manager
  that comes with the OS. On Linux\nand OS X, the unixODBC package provides the same
  functionality.\n\nSeparately, for each database type, you have driver packages.
  When you\nprovide a connection string, like this:\n\n```\nODBC_TEST_CONNECTION_STRING='DRIVER={ODBC
  Driver 13 for SQL Server};SERVER=127.0.0.1;Uid=SA;Pwd=Passw0rd;Encrypt=no'\n```\n\nThe
  `DRIVER` tells the ODBC API which library to use. In this case,\nit's the recent
  SQL Server driver provided by Microsoft. Then, ODBC\nfunctions like `SQLDriverConnectW`
  will call that library.\n\n## How to connect to Microsoft SQL Server\n\nIn recent
  years, Microsoft has released binary drivers for SQL Server\nfor Windows, Linux
  and OS X, with a guide for each operating\nsystem. That guide for the latest and
  greatest official Microsoft\ndriver is\n[here](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server).\n\nI
  have tested the OS X instructions on my own machine.\n[This project's Dockerfile](https://github.com/fpco/odbc/blob/master/Dockerfile)\nfollows
  setup instructions for Linux, and\n[the AppVeyor file](https://github.com/fpco/odbc/blob/master/appveyor.yml)\nfollows
  the setup instructions for Windows.\n\nThere is a test program that comes with the
  package called `odbc`\nwhich accepts a connection string as its argument. You can
  use this to\ntest your connection easily.\n\n(Use `17` instead of `13` if that's
  the driver you installed.)\n\n    $ stack exec odbc 'DRIVER={ODBC Driver 13 for
  SQL Server};SERVER=192.168.99.101;Uid=SA;Pwd=Passw0rd;Encrypt=no'\n    > create
  table foo (i int)\n    Rows: 0\n    > insert into foo values (123123123)\n    Rows:
  0\n    > select * from foo\n    123123123\n    Rows: 1\n\n## Common issues\n\nIf
  you see an error like this:\n\n    [unixODBC][Driver Manager]Can't open lib 'ODBC
  Driver 13 for SQL Server' : file not found\n\nThen you might be trying to use the
  wrong driver. You might have\ninstalled version `17`, so change the string to `ODBC
  Driver 17 for\nSQL Server`.\n\nIf you see an error like this:\n\n    [unixODBC][Driver
  Manager]Data source name not found and no default driver specified\n\nThis is a
  terrible error message. If passing your DSN via a shell\nenvironment variable or
  argument, check that your input string isn't\nquoted e.g. `\"Driver=..\"` instead
  of `Driver=..` due to silly shell\nscripting quoting issues.\n"
license-name: BSD3
