homepage: https://github.com/jfischoff/tmp-postgres#readme
changelog-type: ''
hash: c6fc0319b2f76d40bdbfd233836f0401bd2a1f43fa01b20b3fc5a43b4338c05d
test-bench-deps:
  either: -any
  bytestring: -any
  tmp-postgres: -any
  unix: -any
  base: -any
  postgresql-libpq: -any
  hspec: -any
  process: -any
  postgres-options: -any
  postgresql-simple: -any
  mtl: -any
  transformers: -any
  temporary: -any
  hspec-discover: -any
  directory: -any
maintainer: jonathangfischoff@gmail.com
synopsis: Start and stop a temporary postgres
changelog: ''
basic-deps:
  either: -any
  bytestring: -any
  unix: -any
  base: ! '>=4.6 && <5'
  port-utils: -any
  process: ! '>=1.2.0.0'
  postgres-options: ! '>=0.2.0.0'
  network: -any
  async: -any
  generic-monoid: -any
  postgresql-simple: -any
  transformers: -any
  temporary: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
- 0.1.0.8
- 0.1.1.0
- 0.1.1.1
- 0.1.2.0
- 0.1.2.1
- 0.1.2.2
- 0.2.0.0
- 0.3.0.0
- 0.3.0.1
- 1.0.0.0
- 1.0.0.1
- 1.0.0.2
author: Jonathan Fischoff
latest: 1.0.0.2
description-type: markdown
description: |
  [![Travis CI Status](https://travis-ci.org/jfischoff/tmp-postgres.svg?branch=master)](http://travis-ci.org/jfischoff/tmp-postgres)
  # tmp-postgres

  `tmp-postgres` provides functions creating a temporary @postgres@ instance.
  By default it will create a temporary directory for the data,
  a random port for listening and a temporary directory for a UNIX
  domain socket.

  Here is an example using the expection safe 'with' function:

  ```haskell
   with $ \db -> bracket (connectPostgreSQL (toConnectionString db)) close $ \conn ->
    execute_ conn "CREATE TABLE foo (id int)"
  ```

  To extend or override the defaults use `withPlan` (or `startWith`).

  `tmp-postgres` ultimately calls `initdb`, `postgres` and `createdb`.
  All of the command line, environment variables and configuration files
  that are generated by default for the respective executables can be
  extended or overrided.

  All `tmp-postgres` by default is most useful for creating tests by
  configuring "tmp-postgres" differently it can be used for other purposes.

  * By disabling `initdb` and `createdb` one could run a temporary
  postgres on a base backup to test a migration.
  * By using the `stopPostgres` and `withRestart` functions one can test
  backup strategies.

  The level of custom configuration is extensive but with great power comes
  ability to screw everything up. `tmp-postgres` doesn't validate any custom
  configuration and one can easily create a `Config` that would not allow
  postgres to start.

  # Installation

  ## macOS
  ```
  $ brew install postgres
  $ stack install tmp-postgres
  ```

  ## Ubuntu

  Ubuntu's PostgreSQL installation does not put `initdb` on the PATH. We need to add it manually.

  ```
  $ sudo apt-get install postgresql-VERSION
  $ echo "export PATH=$PATH:/usr/lib/postgresql/VERSION/bin/" >> /home/ubuntu/.bashrc
  $ stack install tmp-postgres
  ```
license-name: BSD-3-Clause
