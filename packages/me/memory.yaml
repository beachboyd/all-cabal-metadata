homepage: https://github.com/vincenthz/hs-memory
changelog-type: markdown
hash: f55301417e1c5a43b055d1f0d3e88abe895d15a3e9d49889af634fb4b7028d40
test-bench-deps:
  bytestring: -any
  basement: ! '>=0.0.7'
  base: -any
  foundation: -any
  memory: -any
maintainer: vincent@snarc.org, Nicolas Di Prima <nicolas@primetype.co.uk>
synopsis: memory and related abstraction stuff
changelog: ! "## 0.14.18\n\n* Branch/Release Snafu\n\n## 0.14.17\n\n* Require basement
  >= 0.0.7, Fix compilation with GHC 8,6\n* Cleanup CPP, dropping support for much
  older version\n\n## 0.14.16\n\n* Fix compilation with a newer basement (>= 0.0.7)
  and an older GHC (< 8.0)\n\n## 0.14.15\n\n* Convert tests to foundation checks\n*
  Convert CI to haskell-ci\n* Fix compilation without foundation\n* Introduce ByteArrayL
  and associated method, as a type level sized version of ByteArray\n* Add NormalForm
  for Bytes and ScrubbedBytes\n\n## 0.14.14\n\n* Fix bounds issues with empty strings
  in base64 and base32\n* Improve tests compatibility w.r.t old basement version\n\n##
  0.14.13\n\n* Handle compat SPECIALIZE for older GHC\n\n## 0.14.12\n\n* Optimise
  copy operations and convert\n* Add instance of ByteArrayAccess and ByteArray for
  Block\n* Add Block and UArray in memory's tests\n\n## 0.14.11\n\n* Fix issue in
  unBase64 with an empty bytestring that would cause a segfault\n\n## 0.14.10\n\n*
  Reintroduce foundation compatibility with old version\n\n## 0.14.9\n\n* Reduce dependency
  to basement\n\n## 0.14.8\n\n* Fix incompatibility with foundation 0.0.14\n\n## 0.14.7\n\n*
  Fix typo in state passing\n\n## 0.14.6\n\n* Fix allocRet using unit of bytes but
  using as unit of ty directly without adaptation\n\n## 0.14.5\n\n* Fix bug in memXorWith
  not working as advertised if source different from destination\n\n## 0.14.4\n\n*
  Add support for foundation uarray creation\n* optimise memXorWith\n\n## 0.14.3\n\n*
  Add support for foundation uarray peeking\n\n## 0.14.2\n\n* Fix use of ghc 8.2 touch\n*
  Prevent span from reading past buffer\n* cleanup .prof spam\n\n## 0.14.1\n\n* Fix
  `Show` instance of Bytes (Oliver ChÃ©ron)\n\n## 0.14\n\n* Improve fromW64BE\n* Add
  IsString instance for ScrubbedBytes\n\n## 0.13\n\n* Add combinator to check for
  end of parsing.\n\n## 0.12\n\n* Fix compilation with mkWeak and latest GHC (Lars
  Kuhtz)\n\n## 0.11\n\n* add support for GHC 8.0.1\n\n## 0.10\n\n* make memConstEqual
  more constant not using boolean comparaison\n\n## 0.9\n\n* memConstEqual was comparing
  length times the first byte instead of comparing all the bytes one to one\n\n##
  0.8\n\n* Add Base64 variants (Luke Taylor)\n* Fix compilation on Haiku (Jessica
  Hamilton)\n\n## 0.7\n\n* Fix fixed sized scrubber written too hastily, that would
  zero out memory, as the index\n  was written through byte size, whereas the primitive
  would consider it as WordX type index.\n  it would helps if Ghc.Prim had better
  documentation.\n\n## 0.6\n\n* Fix compilation on architecture where endianness is
  not a compile time define related\n  to their cabal arch().\n\n## 0.5\n\n* Add Base32
  support (Nicolas Di Prima)\n* Fix build on 32 bit by simplifying scrubber, and adding
  Word64 type + operations compatibility\n\n## 0.4\n\n* Add Ord instances for SipHash
  and FnvHash (Nicolas Di Prima)\n* Fix GHC-7.2 build by defining unsafeShiftL (Adam
  Bergmark)\n* Fix show instance of Bytes to properly display each bytes instead of
  just the end one\n* Add View type that emulate a view on a ByteArray type (Nicolas
  Di Prima)\n\n## 0.3\n\n* fix missing modules from tests on sdist\n\n## 0.2\n\n*
  make concat more generic as to what the output is going to be, and at the same\n
  \ time reduce the constraint on the input to just Access\n* make all byte array
  operation safer related to negative size. now replicate, zero, and alloc will returns\n
  \ an empty byte array when asking for negative size\n* replace 'pack' in Data.ByteArray.Pack
  by 'fill', as to not conflict with 'Data.ByteArray.pack'.\n  Also swap the length
  and monadic action to be more naturally used\n* add a deprecated 'pack' that alias
  to 'fill' for now\n* loosen constraint of Data.ByteArray.Pack.putBytes from ByteArray
  to ByteArrayAccess\n\n## 0.1\n\n* Initial release\n"
basic-deps:
  bytestring: -any
  basement: -any
  base: ! '>=4.9.0.0 && <5'
  ghc-prim: -any
  deepseq: ! '>=1.1'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- '0.7'
- '0.8'
- '0.9'
- '0.10'
- '0.11'
- '0.12'
- '0.13'
- '0.14'
- '0.14.1'
- '0.14.2'
- '0.14.3'
- '0.14.4'
- '0.14.5'
- '0.14.6'
- '0.14.7'
- '0.14.8'
- '0.14.9'
- '0.14.10'
- '0.14.11'
- '0.14.12'
- '0.14.13'
- '0.14.14'
- '0.14.15'
- '0.14.16'
- '0.14.17'
- '0.14.18'
author: Vincent Hanquez <vincent@snarc.org>
latest: '0.14.18'
description-type: markdown
description: ! 'memory

  ======


  [![Build Status](https://travis-ci.org/vincenthz/hs-memory.png?branch=master)](https://travis-ci.org/vincenthz/hs-memory)

  [![BSD](http://b.repl.ca/v1/license-BSD-blue.png)](http://en.wikipedia.org/wiki/BSD_licenses)

  [![Haskell](http://b.repl.ca/v1/language-haskell-lightgrey.png)](http://haskell.org)


  Documentation: [memory on hackage](http://hackage.haskell.org/package/memory)


  A generic memory and related abstraction for haskell:


  * A polymorphic byte array abstraction and function similar to strict ByteString.

  * Different type of byte array abstraction.

  * Raw memory IO operations (memory set, memory copy, ..)

  * Aliasing with endianness support.


  Also provides some useful helpers:


  * Fast Hashing : [SipHash](https://131002.net/siphash/), [FNV1](http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function).

  * Built-in base encoding : Base16, Base32, [Base64](http://en.wikipedia.org/wiki/Base64).


  Versioning

  ----------


  Development versions are an incremental number prefixed by 0.

  No specific meaning is associated with the versions, specially

  no API stability.


  Production versions : TBD


  Coding Style

  ------------


  The coding style of this project mostly follows:

  [haskell-style](https://github.com/tibbe/haskell-style-guide/blob/master/haskell-style.md)


  Support

  -------


  See [Haskell packages guidelines](https://github.com/vincenthz/haskell-pkg-guidelines/blob/master/README.md#support)

'
license-name: BSD3
