homepage: https://github.com/simonmar/monad-par
changelog-type: ''
hash: 18c1777cc7e54ea303dd413b680c3dee6b238c349148941efed1aff76dc3d09e
test-bench-deps: {}
maintainer: Adam Foltzer <acfoltzer@gmail.com>
synopsis: Provides the monad-par interface, but based on modular scheduler "mix-ins".
changelog: ''
basic-deps:
  bytestring: ! '>=0.9'
  mwc-random: ! '>=0.11'
  base: ! '>=4 && <5'
  abstract-deque: ! '>=0.1.4'
  containers: -any
  mtl: ! '>=2.0.1.0'
  transformers: ! '>=0.2.2.0'
  deepseq: ! '>=1.2'
  abstract-par: -any
  vector: -any
all-versions:
- '0.3'
author: Adam Foltzer, Ryan Newton
latest: '0.3'
description-type: haddock
description: ! 'This library provides a composable abstraction for /Resources/ which

  can be mixed and matched to build /Schedulers/.

  A `Resource` typically corresponds to a specific kind of hardware or

  to a style of scheduling.  This package contains implementations of

  basic `Resource`s that implement parallel scheduling on the CPU.

  To use a complete meta-par Scheduler, import Control.Monad.Par.SMP for

  example, which will provide a `runPar` as well as instances for the

  relevant classes that enable `Par` programming (e.g. `ParFuture`).'
license-name: BSD-3-Clause
