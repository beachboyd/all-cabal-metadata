homepage: https://github.com/rodrigosetti/messagepack
changelog-type: text
hash: 49d43a3540bffe0a0e8dc4a335f97046b01de7613cdca8b4c7dc40a330043da5
test-bench-deps:
  cereal: ==0.5.*
  bytestring: ==0.10.*
  test-framework: ==0.8.*
  base: ==4.*
  test-framework-quickcheck2: ==0.3.*
  test-framework-th: ==0.2.*
  containers: ! '>=0.5 && <0.7'
  messagepack: -any
  QuickCheck: ==2.*
maintainer: rodrigosetti@gmail.com
synopsis: Serialize instance for Message Pack Object
changelog: |
  2016-11-29 Sebastian Witte <woozletoff@gmail.com>

      * Add NFData instance

  2015-11-03 Rodrigo Setti <rodrigosetti@gmail.com>

      * Updates cereal to 0.5.0.0

  2015-08-07 Will Sewell <will@pusher.com>

      * Add ObjectUInt constructor for messagepack unsigned ints

  2015-05-07 Mike Pye <mike@pusher.com>

      * Remove coercion of msgpack String type to haskell Text

  2014-12-03 Sebastian Witte <woozletoff@gmail.com>

      * Add support for extension types

  2014-11-13 Rodrigo Setti <rodrigosetti@gmail.com>

      * Changes `ObjectInt` data from `Int` to `Int64`, so it can be possible
        to pack a 64bit int on a 32bit system.

  2014-07-25 Rodrigo Setti <rodrigosetti@gmail.com>

      * Fix a fatal bug: Data.MessagePack.Spec was not exposed, thus failing the
      package installation.

  2014-07-25 Rodrigo Setti <rodrigosetti@gmail.com>

      * Initial version: Serialize instances tested for consistency.
      * Missing: Extension types
basic-deps:
  cereal: ==0.5.*
  bytestring: ==0.10.*
  base: ! '>=4.6 && <5'
  containers: ! '>=0.5 && <0.7'
  deepseq: ! '>=1.1 && <1.5'
all-versions:
- 0.1.0.0
- 0.1.1
- 0.2.0
- 0.2.1
- 0.3.0
- 0.4.0
- 0.5.0
- 0.5.1
- 0.5.2
- 0.5.3
- 0.5.4
author: Rodrigo Setti
latest: 0.5.4
description-type: markdown
description: |
  # messagepack

  [![Build Status](https://travis-ci.org/rodrigosetti/messagepack.svg?branch=master)](https://travis-ci.org/rodrigosetti/messagepack)

  [Serialize](http://hackage.haskell.org/package/cereal) instance for
  [Message Pack](http://msgpack.org) Object.

  For a for Message Pack RPC (remote procedure call) support library, check [messagepack-rpc](http://hackage.haskell.org/package/messagepack-rpc).
license-name: MIT
