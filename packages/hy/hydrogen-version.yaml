homepage: https://scravy.de/hydrogen-version/
changelog-type: markdown
hash: 49b1e823a602534170a627fad81dec6cee7045e5a20b67f3bb2bd7bc722ef0cd
test-bench-deps: {}
maintainer: julian@scravy.de
synopsis: Hydrogen Version Type
changelog: ! '## v1.0

  + Initial release


  ## v1.0.1

  + Fixed `Read` instance


  ## v1.1

  + Added instance for `Generic`


  ## v1.2

  + Added instance for `Typeable`


  ## v1.3

  + Added `fromDataVersion`

  + Added `toDataVersion`

'
basic-deps:
  base: ==4.*
all-versions:
- '1.3'
- '1.4'
author: Julian Fleischer
latest: '1.4'
description-type: markdown
description: ! "hydrogen-version\n================\n\n[![Build Status](https://travis-ci.org/scravy/hydrogen-version.svg?branch=master)](https://travis-ci.org/scravy/hydrogen-version)\n
  \nA sane replacement for\n[`Data.Version`](http://hackage.haskell.org/package/base-4.7.0.2/docs/Data-Version.html)\nfrom
  the [`base`](http://hackage.haskell.org/package/base) package.\n \n*Note:* `Version`
  is also exported by\n[`Hydrogen.Prelude`](https://github.com/scravy/hydrogen-prelude),\nwhere
  it comes with some more instances (like\n[`Serialize`](https://hackage.haskell.org/package/cereal)).\n
  \n \nData.Version vs Hydrogen.Version\n--------------------------------\n \n###
  Sane `Ord` instance\n\n`Data.Version` relies on `Ord` for lists, which will consider
  `1.0` to be less\nthan `1.0.0`. `Hydrogen.Version` considers these to be equal.\n\n###
  Sane `Read` and `Show` instances\n\nWith `Hydrogen.Version` you can just do `read
  \"1.0.0\" :: Version`, whereas\nthe `Read` and `Show` instances for `Data.Version`
  do not give a concise representation\n(`show dataVersion == \"Version {versionBranch
  = [1,0], versionTags = []}\"`).\n\n### Stricter API\n\nIn `Hydrogen.Version` you
  can create a `Version` only via `mkVersion`,\nwhereas in `Data.Version` the constructor
  is exported, thus you could do\nsuch nonsense as `Data.Version.Version [] []` (which
  is not a proper version\nat all).\n \n### No Tags\n\n`Hydrogen.Version` does not
  support tags. This is intentional, since there is no\nagreed upon definition for
  `Ord` in the presence of tags (consider `alpha` vs\n`beta` vs `snapshot` vs `ga`
  vs ...).\n"
license-name: MIT
