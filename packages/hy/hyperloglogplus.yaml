homepage: https://github.com/ezhulenev/hyperloglogplus#readme
changelog-type: ''
hash: 765453b916e2fa44ca6e392fd27ff3f4f75ce03c0b46529abc5c17001a3b1147
test-bench-deps:
  base: ! '>=4.7 && <5'
  semigroups: ! '>=0.18 && <1'
  HUnit: ! '>=1.3 && <1.4'
  hyperloglogplus: -any
  tasty-hunit: ! '>=0.9 && <0.10'
  tasty: ! '>=0.11 && <0.12'
maintainer: eugene.zhulenev@gmail.com
synopsis: Approximate cardinality estimation using constant space
changelog: ''
basic-deps:
  bits: ! '>=0.2 && <1'
  murmur-hash: ! '>=0.1 && <0.2'
  base: ! '>=4.7 && <5'
  semigroups: ! '>=0.18 && <1'
  containers: ! '>=0.5 && <0.6'
  vector: ! '>=0.11 && <0.12'
all-versions:
- 0.1.0.0
author: Eugene Zhulenev
latest: 0.1.0.0
description-type: markdown
description: ! "# HyperLogLogPlus\n\n[![Build Status](https://secure.travis-ci.org/ezhulenev/hyperloglogplus.png?branch=master)](http://travis-ci.org/ezhulenev/hyperloglogplus)\n\nHaskell
  implementation of HyperLogLog++ with MinHash for efficient cardinality and intersection
  estimation\nusing constant space.\n\nSee original AdRoll paper for details: [HyperLogLog
  and MinHash](http://tech.adroll.com/media/hllminhash.pdf)\n\n```Haskell\n-- Example:\n:set
  -XDataKinds\n:load Data.HyperLogLogPlus\n\ntype HLL = HyperLogLogPlus 12 8192\n\nmempty
  :: HLL\n\nsize (foldr insert mempty [1 .. 75000] :: HLL)\n\nsize $ (foldr insert
  mempty [1 .. 5000] ::  HLL) <> (foldr insert mempty [3000 .. 10000] :: HLL)\n\nintersection
  $ [ (foldr insert mempty [1 .. 15000] ::  HLL)\n               , (foldr insert mempty
  [12000 .. 20000] :: HLL) ]\n```\n\n## Testing\n\n```\nstack test\n```\n"
license-name: BSD-3-Clause
