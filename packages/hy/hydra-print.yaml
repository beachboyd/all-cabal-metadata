homepage: https://github.com/rrnewton/hydra-print
changelog-type: ''
hash: a15b6cb74216a3ac7589ca96097c5b67f3995235cceb6494778eeb5ecfe5b3f8
test-bench-deps:
  test-framework-hunit: ==0.3.*
  bytestring: -any
  test-framework: ==0.8.*
  unix: -any
  base: ! '>=4.5 && <=4.7'
  time: -any
  text: -any
  test-framework-quickcheck2: ==0.3.*
  process: -any
  async: -any
  semigroups: -any
  HUnit: ==1.2.*
  test-framework-th: ==0.2.*
  containers: -any
  io-streams: -any
  ncurses: ! '>=0.2.3'
  mtl: -any
  transformers: -any
  random: -any
  QuickCheck: ==2.5.*
  directory: -any
maintainer: Ryan Newton <rrnewton@gmail.com>
synopsis: NCurses interface to view multiple ByteString streams in parallel.
changelog: ''
basic-deps:
  bytestring: -any
  unix: -any
  base: ! '>=4.5 && <=4.7'
  time: -any
  text: -any
  filepath: -any
  process: -any
  async: -any
  semigroups: -any
  containers: -any
  io-streams: -any
  ncurses: ! '>=0.2.3'
  mtl: -any
  transformers: -any
  random: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.0.2
- 0.1.0.3
author: Ryan Newton
latest: 0.1.0.3
description-type: haddock
description: ! 'Output from parallel subprocesses is an ugly, many-headed beast.

  Piping though hydra-print provides an NCurses interface to a dynamic

  set output streams, displayed without interleaving.  This is a

  common problem, for example, with parallel compiles, or

  data-processing scripts.


  Specifically, this small library will split the screen when

  parallelism occurs, and unsplit it when the parallelism is

  finished (i.e. dynamically growing and losing \"heads\").

  The @io-streams@ library is used for all stream inputs.'
license-name: BSD-3-Clause
