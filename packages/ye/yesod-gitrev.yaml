homepage: https://github.com/DanBurton/yesod-gitrev
changelog-type: markdown
hash: b9ce42931fa4fd0e95a34f930f08b251adac54361be78cc6eb0b8375764530ea
test-bench-deps:
  yesod-core: -any
  base: -any
  yesod-gitrev: -any
maintainer: danburton.email@gmail.com
synopsis: A subsite for displaying git information.
changelog: |
  ## 0.2.1

  - Move over to `githash`

  ## 0.2.0.0

  - Upgrade to yesod-core 1.6
basic-deps:
  yesod-core: ! '>=1.6'
  base: ! '>=4 && <5'
  githash: -any
  aeson: -any
  template-haskell: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1
author: Dan Burton
latest: 0.2.1
description-type: markdown
description: |
  A subsite for displaying git information.

  [![Hackage](https://img.shields.io/hackage/v/yesod-gitrev.svg)](https://hackage.haskell.org/package/yesod-gitrev) [![Build Status](https://travis-ci.org/DanBurton/yesod-gitrev.svg)](https://travis-ci.org/DanBurton/yesod-gitrev)

  You can use the `gitRev` splice (or `tGitRev` typed splice)
  to generate a value of type `GitRev`.
  Put this in your app's foundation,
  add a route to the subsite,
  and you're good to go.

  See [Haskell and Yesod > Creating a Subsite]
  (http://www.yesodweb.com/book/creating-a-subsite)
  for details on how Yesod subsites work.

  ```
  -- examples/Main.hs

  {-# LANGUAGE OverloadedStrings #-}
  {-# LANGUAGE QuasiQuotes       #-}
  {-# LANGUAGE TemplateHaskell   #-}
  {-# LANGUAGE TypeFamilies      #-}

  import Yesod
  import Yesod.GitRev

  data Master = Master
    { getGitRev :: GitRev
    }

  mkYesod "Master" [parseRoutes|
  /build-version GitRevR GitRev getGitRev
  |]

  instance Yesod Master

  main = warp 3000 $ Master $$(tGitRev)
  ```
license-name: BSD-3-Clause
