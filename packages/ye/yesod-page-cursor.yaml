homepage: https://github.com/freckle/yesod-page-cursor#readme
changelog-type: markdown
hash: 050eb39e6463cd4e6bdccd89e89561b41aba6408af19a19f098871bdee4b113b
test-bench-deps:
  bytestring: '>=0.10.10.0 && <0.11'
  lens-aeson: ==1.1.*
  yesod-test: '>=1.6.10 && <1.7'
  unliftio: '>=0.2.13 && <0.3'
  yesod-core: '>=1.6.18 && <1.7'
  base: '>=4.7 && <5'
  time: '>=1.9.3 && <1.10'
  persistent: '>=2.10.5.2 && <2.11'
  hspec: '>=2.7.2 && <2.8'
  text: '>=1.2.3.2 && <1.3'
  persistent-template: '>=2.8.2.3 && <2.9'
  yesod: '>=1.6.1.0 && <1.7'
  lens: '>=4.18.1 && <4.20'
  unliftio-core: '>=0.1.2.0 && <0.3'
  http-link-header: '>=1.0.3.1 && <1.1'
  hspec-expectations-lifted: '>=0.10.0 && <0.11'
  mtl: '>=2.2.2 && <2.3'
  yesod-page-cursor: -any
  monad-logger: '>=0.3.35 && <0.4'
  wai-extra: '>=3.0.29.2 && <3.2'
  scientific: '>=0.3.6.2 && <0.4'
  http-types: '>=0.12.3 && <0.13'
  persistent-sqlite: '>=2.10.6.2 && <2.11'
  aeson: '>=1.4.7.1 && <1.6'
maintainer: engineering@freckle.com
synopsis: ''
changelog: |
  # Changelog for yesod-cursor

  ## Unreleased changes

  None.

  ## [v2.0.0.1](https://github.com/freckle/yesod-page-cursor/compare/v2.0.0.0...v2.0.0.1)

  - Fix test suite for new persistent

  ## [v2.0.0.0](https://github.com/freckle/yesod-page-cursor/compare/v1.0.0.1...v2.0.0.0)

  - Add `defaultLimit :: Int` argument to `withPage` and `withPageLink`

  ## [v1.0.0.1](https://github.com/freckle/yesod-page-cursor/compare/v1.0.0.0...v1.0.0.1)

  - Fix missing `previous` link in all but last page

  ## [v1.0.0.0](https://github.com/freckle/yesod-page-cursor/tree/v1.0.0.0)

  Initial release.
basic-deps:
  bytestring: '>=0.10.10.0 && <0.11'
  unliftio: '>=0.2.13 && <0.3'
  yesod-core: '>=1.6.18 && <1.7'
  base: '>=4.7 && <5'
  text: '>=1.2.3.2 && <1.3'
  containers: '>=0.6.2.1 && <0.7'
  http-link-header: '>=1.0.3.1 && <1.1'
  network-uri: '>=2.6.3.0 && <2.7'
  aeson: '>=1.4.7.1 && <1.6'
all-versions:
- 1.0.0.0
- 1.0.0.1
- 2.0.0.0
- 2.0.0.1
author: Freckle Engineering
latest: 2.0.0.1
description-type: markdown
description: |
  # yesod-page-cursor

  Cursor based pagination for `yesod` using index friendly keyset cursors.

  Primer: [No Offset](https://use-the-index-luke.com/no-offset)

  ```hs
  getSomeR :: Handler Value
  getSomeR = do
    let
      parseParams =
        (,) <$> Param.required "teacherId" <*> Param.optional "courseId"
    page <- withPage 100 entityPage parseParams $ \Cursor {..} -> do
      let (teacherId, mCourseId) = cursorParams
      fmap (sort cursorPosition) . runDB $ selectList
        (catMaybes
          [ Just $ SomeAssignmentTeacherId ==. teacherId
          , (SomeAssignmentCourseId ==.) <$> mCourseId
          , whereClause cursorPosition
          ]
        )
        [LimitTo $ fromMaybe 100 cursorLimit, orderBy cursorPosition]
    returnJson $ keyValueEntityToJSON <$> page
   where
    whereClause = \case
      First -> Nothing
      Previous p -> Just $ persistIdField <. p
      Next p -> Just $ persistIdField >. p
      Last -> Nothing
    orderBy = \case
      First -> Asc persistIdField
      Previous _ -> Desc persistIdField
      Next _ -> Asc persistIdField
      Last -> Desc persistIdField
    sort = \case
      First -> id
      Previous _ -> reverse
      Next _ -> id
      Last -> reverse
  ```

  `cursorLastPosition` is configurable. A page sorted by `created_at` may look
  like:

  ```hs
  createdAtPage = PageConfig
    { makePosition = \x ->
        (entityKey x, someAsssignmentCreatedAt $ entityVal x)
    , baseDomain = Nothing
    }

  getSortedSomeR :: Handler Value
  getSortedSomeR = do
    let parseParams = pure ()
    page <- withPage 100 createdAtPage parseParams $ \Cursor {..} -> do
      fmap (sort cursorPosition) . runDB $ selectList
        (whereClause cursorPosition)
        [ LimitTo $ fromMaybe 100 cursorLimit
        , orderBy cursorPosition
        ]
    returnJson $ keyValueEntityToJSON <$> page
   where
    whereClause = \case
      First -> []
      Previous (pId, createdAt) ->
        [ SomeAssingmentCreatedAt <=. createdAt
        , persistIdField <. pId
        ]
      Next (pId, createdAt) ->
        [ SomeAssingmentCreatedAt >=. createdAt
        , persistIdField >. pId
        ]
      Last -> []
    orderBy = \case
      First -> Asc SomeAssignmentCreatedAt
      Previous _ -> Desc SomeAssignmentCreatedAt
      Next _ -> Asc SomeAssignmentCreatedAt
      Last -> Desc SomeAssignmentCreatedAt
    sort = \case
      First -> id
      Previous _ -> reverse
      Next _ -> id
      Last -> reverse
  ```

  ## Usage

  Paginated requests return a single page and a link with a cursor token to
  retrieve the next page.

  ```sh
  $ curl 'some-rest.com/endpoint?limit=3'
  {
    "first": : "some-rest.com/endpoint?next=eyJsYXN0UG9zaXRpb24iOjMsInBhcmFtcyI6WzEsbnVsbF0sImxpbWl0IjozfQ==",
    "previous": null,
    "next": "some-rest.com/endpoint?next=eyJsYXN0UG9zaXRpb24iOjMsInBhcmFtcyI6WzEsbnVsbF0sImxpbWl0IjozfQ==",
    "data": [...]
  }
  ```

  The link can be used to retrieve the next page.

  ```sh
  $ curl 'some-rest.com/endpoint?next=eyJsYXN0UG9zaXRpb24iOjMsInBhcmFtcyI6WzEsbnVsbF0sImxpbWl0IjozfQ=='
  {
    "first": : "some-rest.com/endpoint?next=eyJsYXN0UG9zaXRpb24iOjMsInBhcmFtcyI6WzEsbnVsbF0sImxpbWl0IjozfQ==",
    "previous": "some-rest.com/endpoint?next=eyJsYXN0UG9zaXRpb24iOjMsInBhcmFtcyI6WzEsbnVsbF0sImxpbWl0IjozfQ==",
    "next": "some-rest.com/endpoint?next=eyJsYXN0UG9zaXRpb24iOjMsInBhcmFtcyI6WzEsbnVsbF0sImxpbWl0IjozfQ==",
    "data": [...]
  }
  ```

  If no pages remain then no link is returned

  ```sh
  $ curl 'some-rest.com/endpoint?next=eyJsYXN0UG9zaXRpb24iOjMsInBhcmFtcyI6WzEsbnVsbF0sImxpbWl0IjozfQ=='
  {
    "first": : "some-rest.com/endpoint?next=eyJsYXN0UG9zaXRpb24iOjMsInBhcmFtcyI6WzEsbnVsbF0sImxpbWl0IjozfQ==",
    "previous": "some-rest.com/endpoint?next=eyJsYXN0UG9zaXRpb24iOjMsInBhcmFtcyI6WzEsbnVsbF0sImxpbWl0IjozfQ==",
    "next": null,
    "data": [...]
  }
  ```
license-name: MIT
