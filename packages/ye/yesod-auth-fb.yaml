homepage: https://github.com/psibi/yesod-auth-fb
changelog-type: markdown
hash: 09258041da955c5fd5df91ef9ee84383530fb187183bff8a1648445d11d81e48
test-bench-deps: {}
maintainer: Sibi <sibi@psibi.in>
synopsis: Authentication backend for Yesod using Facebook.
changelog: ! '# Version 1.9.1


  * Only pass `code` query param to getUserAccessTokenStep2


  # Version 1.9.0


  * Supports conduit >= 1.3.0

  * Documentation updated to include demo code.

  * Supports latest yesod >= 1.6.0.

  * Remove dependency on lifted-base and related ecosystem.

'
basic-deps:
  shakespeare: ! '>=2.0'
  bytestring: ! '>=0.9 && <0.11'
  wai: -any
  unliftio: -any
  yesod-core: ! '>=1.6.1'
  base: ! '>=4.9.0 && <5'
  time: ! '>=1.0 && <1.9'
  yesod-fb: ! '>=0.5.0'
  text: ! '>=0.7 && <1.3'
  conduit: ! '>=1.3.0'
  fb: ! '>=1.2.0'
  transformers: ! '>=0.1.3 && <0.6'
  http-conduit: ! '>=1.9'
  resourcet: ! '>=1.2.0'
  aeson: ! '>=0.6'
  yesod-auth: ! '>=1.6.1'
all-versions:
- '0.0'
- '0.10'
- '0.10.1'
- '0.10.2'
- '1.0.0'
- '1.0.1'
- '1.0.2'
- '1.0.3'
- '1.0.4'
- '1.0.5'
- '1.0.6'
- '1.1'
- '1.2'
- '1.2.1'
- '1.2.2'
- '1.2.3'
- '1.3'
- '1.3.1'
- '1.3.2'
- '1.4'
- '1.5'
- '1.5.1'
- '1.6'
- '1.6.1'
- '1.6.2'
- '1.6.2.1'
- '1.6.3'
- '1.6.4'
- '1.6.5'
- '1.6.6'
- '1.7'
- '1.8.0'
- '1.8.1'
- '1.9.0'
- '1.9.1'
author: Felipe Lessa, Michael Snoyman
latest: '1.9.1'
description-type: markdown
description: ! "yesod-auth-fb\n---------------\n\n[![Build Status](https://travis-ci.org/psibi/yesod-auth-fb.svg?branch=master)](https://travis-ci.org/psibi/yesod-auth-fb)\n\nAuthentication
  backend for Yesod using Facebook\n\n# Demo\n\nSample code showing Facebook authentication
  in action:\n\n```\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE QuasiQuotes
  #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE
  OverloadedStrings #-}\n\nimport Data.Text (Text)\nimport Yesod\nimport Yesod.Auth\nimport
  Yesod.Facebook\nimport Yesod.Auth.Facebook.ServerSide\nimport Facebook (Credentials(..))\n\nfbclientId
  :: Text\nfbclientId = \"sample_fb_client_id\"\n\nfbclientSecret :: Text\nfbclientSecret
  = \"sample_fb_secret\"\n\ndata App =\n  App\n\nmkYesod\n  \"App\"\n  [parseRoutes|\n/
  HomeR GET\n/auth AuthR Auth getAuth\n|]\n\ninstance Yesod App where\n  approot =
  ApprootStatic \"http://localhost:3000\"\n\ninstance YesodFacebook App where\n  fbCredentials
  _ = Credentials \"yesod\" fbclientId fbclientSecret\n\ninstance YesodAuth App where\n
  \ type AuthId App = Text\n  getAuthId = return . Just . credsIdent\n  loginDest
  _ = HomeR\n  logoutDest _ = HomeR\n  authPlugins _ = [authFacebook [\"user_about_me\",
  \"email\"]]\n  -- The default maybeAuthId assumes a Persistent database. We're going
  for a\n  -- simpler AuthId, so we'll just do a direct lookup in the session.\n  maybeAuthId
  = lookupSession \"_ID\"\n\ninstance RenderMessage App FormMessage where\n  renderMessage
  _ _ = defaultFormMessage\n\ngetHomeR :: Handler Html\ngetHomeR = do\n  maid <- maybeAuthId\n
  \ defaultLayout\n    [whamlet|\n            <p>Your current auth ID: #{show maid}\n
  \           $maybe _ <- maid\n                <p>\n                    <a href=@{AuthR
  LogoutR}>Logout\n                    <a href=@{AuthR facebookLogout}>Facebook logout\n
  \           $nothing\n                <p>\n                    <a href=@{AuthR LoginR}>Go
  to the login page\n        |]\n\nmain :: IO ()\nmain = warp 3000 App\n```\n"
license-name: BSD3
