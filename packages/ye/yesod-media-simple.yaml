homepage: https://github.com/mgsloan/yesod-media-simple
changelog-type: ''
hash: 8c1aed2a77b4131e7804b4b65bad3957a544ec761fb6898114040dad3ace85d7
test-bench-deps: {}
maintainer: mgsloan@gmail.com
synopsis: Simple display of media types, served by yesod
changelog: ''
basic-deps:
  diagrams-lib: ! '>=1.3 && <1.5'
  JuicyPixels: -any
  bytestring: -any
  base: ! '>=4 && <5'
  diagrams-cairo: -any
  yesod: ! '>1.2'
  diagrams-core: -any
  vector: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.2.0.1'
author: Michael Sloan
latest: '0.2.0.1'
description-type: markdown
description: ! "# yesod-media-simple\n\nThis package provides simple utilities for
  starting a web server which serves\nsome media. This makes serving media as easy
  as `serve image`. For example,\nhere's how you serve a simple diagram:\n\n```haskell\nimport
  Diagrams.Prelude\nimport Yesod.Media.Simple\n\nmain = serveDiagram (circle 10 |||
  square 20)\n```\n\n## Media Types\n\nCurrently `yesod-media-simple` supports serving
  the following media types:\n\n* [Diagrams](http://projects.haskell.org/diagrams/),
  by using cairo to render to\n  png. Just call `serveDiagram :: Diagram Cairo ->
  IO ()`, or the more generic\n  `serve :: RenderContent a => a -> IO ()`.\n\n* [JuicyPixels](https://hackage.haskell.org/package/JuicyPixels)
  images. Also\n  includes utilities for putting JuicyPixels images in Diagrams and
  vice-versa.\n"
license-name: MIT
