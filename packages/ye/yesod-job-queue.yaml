homepage: https://github.com/nakaji-dayo/yesod-job-queue#readme
changelog-type: ''
hash: 5e04bba472e9d5a2ef6f216875c55d90ff070dc614e8fa7de39a8ffffae9d0f4
test-bench-deps:
  yesod-job-queue: -any
  base: -any
maintainer: nakaji.dayo@gmail.com
synopsis: Background jobs library for Yesod.
changelog: ''
basic-deps:
  bytestring: -any
  yesod-job-queue: -any
  stm: -any
  yesod-core: -any
  base: ! '>=4.7 && <5'
  time: -any
  text: -any
  uuid: -any
  cron: ! '>=0.5.0 && <0.6'
  monad-control: -any
  yesod-persistent: ! '>=1.4 && <1.5'
  yesod: ==1.4.*
  classy-prelude-yesod: -any
  lens: -any
  monad-logger: -any
  file-embed: -any
  transformers: -any
  api-field-json-th: ! '>=0.1'
  hedis: -any
  resourcet: -any
  persistent-sqlite: -any
  aeson: ! '>=1.1'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.2.0.0
- 0.2.0.1
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
- 0.3.0.3
- 0.3.0.4
author: Daishi Nakajima
latest: 0.3.0.4
description-type: markdown
description: ! "# yesod-job-queue [![Hackage](https://img.shields.io/hackage/v/yesod-job-queue.svg?maxAge=25920)](https://hackage.haskell.org/package/yesod-job-queue)
  [![Stackage LTS](http://stackage.org/package/yesod-job-queue/badge/lts)](http://stackage.org/lts/package/yesod-job-queue)
  [![Stackage Nightly](http://stackage.org/package/yesod-job-queue/badge/nightly)](http://stackage.org/nightly/package/yesod-job-queue)
  [![Build Status](https://secure.travis-ci.org/nakaji-dayo/yesod-job-queue.svg)](http://travis-ci.org/nakaji-dayo/yesod-job-queue)\nBackground
  jobs library for Yesod.\n\n- There are API and Web UI for managing the job.\n- Queue
  backend is Redis.\n- Multithreaded.\n\n\n## Web interface\n\n![web interface screenshot](https://raw.githubusercontent.com/nakaji-dayo/yesod-job-queue/master/doc/yesod-job-queue-ss.png)\n\n##
  Usage\n\nPrepare the JobState to manage the running jobs\n``` haskell\nimport Yesod.JobQueue\n\ndata
  App = App {\n    appConnPool :: ConnectionPool\n    , appDBConf :: SqliteConf\n
  \   , appJobState :: JobState\n    }\n\n-- e.g. In makeFoundation\nmain = do\n    jobState
  <- newJobState -- create JobState\n    let app = App pool dbConf jobState\n```\n\nMake
  the routes for API & Manager UI\n``` haskell\nmkYesod \"App\" [parseRoutes|\n/ HomeR
  GET\n/job JobQueueR JobQueue getJobQueue -- ^ JobQueue API and Manager\n|]\n```\n\nDefine
  the job. And, to the setting of JobQueue\n``` haskell\n-- Your job type\ndata MyJobType
  = AggregationUser\n               | PushNotification\n               | HelloJob
  String\n               deriving (Show, Read, Generic)\n\n-- JobQueue settings\ninstance
  YesodJobQueue App where\n    type JobType App = MyJobType\n    getJobState = appJobState\n
  \   threadNumber _ = 2\n    runDBJob action = do -- Required if you use the DB in
  the job\n        app <- ask\n        runSqlPool action $ appConnPool app\n    --
  Your Job code\n    runJob _ AggregationUser = do\n        us <- runDBJob $ selectList
  ([] :: [Filter Person]) []\n        liftIO $ threadDelay $ 10 * 1000 * 1000\n        print
  us\n        putStrLn \"complate job!\"\n    runJob _ PushNotification = do\n        putStrLn
  \"sent norification!\"\n    runJob _ (HelloJob name) = do\n        putStrLn . pack
  $ \"Hello \" ++ name\n```\n\nPlease see `example`\n\n### Configration queue backend
  (Redis)\nThe default is to connect to `redis localhost:6379`.\n\nAnd, you can change
  connect info by [queueConnectInfo](https://hackage.haskell.org/package/yesod-job-queue-0.2.0.1/docs/Yesod-JobQueue.html#v:queueConnectInfo)\n\n##
  Build package\n```\nstack build\n```\n### build javascripts (required when app/*
  was editted)\n```\ncd app\nnpm install\nnpm run build-js\n# need again `stack build`\n```\n####
  developping app/*\nYou can edit app/app.js without re-build package\n```\nnpm run
  watch-js ## watch app/*.js for changes, automatically build.\n```\n```\nnpm run
  bs ## serving app.bundle.js at `http://localhost:3001/dist/app.bundle.js` for test\n```\nin
  `example/Main.hs`. to use test version of app.bundle.js.\n```\njobManagerJSUrl _
  = \"http://localhost:3001/dist/app.bundle.js\"\n```\n\n## Run example\n```\nstack
  build --flag yesod-job-queue:example && stack exec yesod-job-queue-example\n```\nYou
  can access Web UI: `http://localhost:3000/job/manager`\n\n"
license-name: BSD-3-Clause
