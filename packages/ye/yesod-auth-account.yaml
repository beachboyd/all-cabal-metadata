homepage: https://bitbucket.org/wuzzeb/yesod-auth-account
changelog-type: markdown
hash: 32d0f11ee68bdf5ba6ff833f7d98bef25a97f41f59581580ed277ea90861692c
test-bench-deps:
  bytestring: -any
  yesod-test: ! '>=1.2.1.5'
  xml-conduit: -any
  base: -any
  yesod-auth-account: -any
  hspec: -any
  text: -any
  yesod: ! '>=1.2'
  mtl: -any
  monad-logger: ! '>=0.3'
  resourcet: -any
  persistent-sqlite: -any
  yesod-auth: ! '>=1.2'
maintainer: John Lenz <lenz@math.uic.edu>
synopsis: An account authentication plugin for Yesod
changelog: ! "# 1.4.2\n\n* Allow persistent 2.5\n\n# 1.4.1\n\n* Allow newest version
  of persistent\n* Fix some warnings in the test suite\n\n# 1.4.0\n\n* Add proper
  support for i18n:\n    * Moved messages into Yesod.Auth.Account.Message module\n
  \   * Added renderAccountMessage function to YesodAuthAccount class, which defaults
  to\n      the english messages.\n    * resendVerifyEmailWidget, resetPasswordWidget,
  newAccountForm, resetPasswordForm, and\n      runAccountPersistDB had their context's
  updated with a constraint for\n      `YesodAuthAccount db master`, which shouldn't
  be a problem.\n\n* Use the nonce package for generating the keys sent in the verification
  and reset\n  password emails.  The `nonce` package provides efficient and cryptographically
  secure\n  nonces.\n\n* Support yesod 1.4 and persistent 2.1 (also bump our version
  to 1.4 to match yesod)\n"
basic-deps:
  bytestring: ! '>=0.10'
  yesod-core: ! '>=1.2'
  base: ! '>=4 && <5'
  persistent: ! '>=1.3'
  text: ! '>=0.11'
  yesod-persistent: ! '>=1.2'
  yesod-form: ! '>=1.3'
  mtl: ! '>=2.1'
  pwstore-fast: ! '>=2.0'
  blaze-html: ! '>=0.6'
  nonce: ! '>=1.0'
  yesod-auth: ! '>=1.2'
all-versions:
- 1.1.0
- 1.1.0.1
- 1.2.0
- 1.2.1
- 1.2.2
- 1.2.3
- 1.2.4
- 1.2.5
- 1.2.6
- 1.4.0
- 1.4.1
- 1.4.2
- 1.4.3
author: John Lenz <lenz@math.uic.edu>
latest: 1.4.3
description-type: markdown
description: ! 'This package provides a [Yesod](http://www.yesodweb.com/) authentication
  plugin for accounts. Each

  account consists of an username, email, and password.  When initially creating an
  account, the email

  is verified by sending a link in an email.  The plugin also supports password reset
  via email.


  The plugin provides default pages implementing all of this functionality, but it
  has been designed

  to allow all the pages (new account page, password reset, etc.) to be customized
  or for the forms to

  be embedded into your own pages allowing you to just ignore the routes inside the
  plugin.  The

  details are contained in the [haddock

  documentation](http://hackage.haskell.org/package/yesod-auth-account).


  The plugin supports any form data storage by requiring you to implement a couple
  of interfaces for

  data access.  The plugin has instances of these interfaces using persistent, but
  you can create your

  own implementation if you are not using persistent or want more control over user
  data access and

  storage.


  A complete working example using persistent is

  [example.hs](/wuzzeb/yesod-auth-account/src/tip/example.hs).  Also, see the

  [haddock documentation](http://hackage.haskell.org/package/yesod-auth-account).

'
license-name: MIT
