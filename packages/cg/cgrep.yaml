homepage: http://awgn.github.io/cgrep/
changelog-type: ''
hash: 4beb8aaca607a61bff832b9e848e51aea180b02d2d050f7bdd9a713cb9259253
test-bench-deps: {}
maintainer: Nicola Bonelli <nicola@pfq.io>
synopsis: Command line tool
changelog: ''
basic-deps:
  regex-pcre: -any
  exceptions: -any
  either: -any
  bytestring: -any
  split: -any
  stm: -any
  base: <5.0
  unordered-containers: -any
  stringsearch: -any
  unix-compat: -any
  filepath: -any
  process: -any
  async: -any
  dlist: -any
  array: -any
  unicode-show: -any
  containers: -any
  ansi-terminal: -any
  utf8-string: -any
  ghc-prim: -any
  regex-base: -any
  regex-posix: -any
  mtl: -any
  cmdargs: -any
  transformers: -any
  aeson: -any
  safe: -any
  yaml: -any
  directory: -any
all-versions:
- '6.4'
- '6.4.1'
- '6.4.2'
- '6.4.3'
- '6.4.3.1'
- '6.4.4'
- '6.4.5'
- '6.4.6'
- '6.4.7'
- '6.4.8'
- '6.4.9'
- '6.4.10'
- '6.4.11'
- '6.4.12'
- '6.4.13'
- '6.4.14'
- '6.4.15'
- '6.4.16'
- '6.4.17'
- '6.4.18'
- '6.4.19'
- '6.4.20'
- '6.4.21'
- '6.4.22'
- '6.5.0'
- '6.5.1'
- '6.5.2'
- '6.5.3'
- '6.5.4'
- '6.5.5'
- '6.5.6'
- '6.5.7'
- '6.5.8'
- '6.5.9'
- '6.5.10'
- '6.5.11'
- '6.5.12'
- '6.5.13'
- '6.5.15'
- '6.6'
- '6.6.1'
- '6.6.2'
- '6.6.3'
- '6.6.4'
- '6.6.7'
- '6.6.8'
- '6.6.9'
- '6.6.10'
- '6.6.11'
- '6.6.12'
- '6.6.13'
- '6.6.14'
- '6.6.15'
- '6.6.16'
- '6.6.17'
- '6.6.20'
- '6.6.22'
- '6.6.23'
- '6.6.24'
- '6.6.25'
author: Nicola Bonelli
latest: '6.6.25'
description-type: markdown
description: ! "CGrep: a context-aware grep for source codes \n============================================\n\n[![Hackage](https://img.shields.io/hackage/v/cgrep.svg?style=flat)](https://hackage.haskell.org/package/cgrep)
  \n[![Join the chat at https://gitter.im/awgn/cgrep](https://badges.gitter.im/awgn/cgrep.svg)](https://gitter.im/awgn/cgrep?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nUsage\n-----\n\nCgrep
  6.6.25. Usage: cgrep [OPTION] [PATTERN] files...\n\ncgrep [OPTIONS] [ITEM]\n\n\nPattern:\n\n
  \   -f --file=FILE             Read PATTERNs from file (one per line)\n    -w --word
  \                 Force word matching\n    -p --prefix                Force prefix
  matching\n    -s --suffix                Force suffix matching\n    -e --edit                  Use
  edit distance\n    -G --regex                 Use regex matching (posix)\n    -P
  --regex-pcre            Use regex matching (pcre)\n    -i --ignore-case           Ignore
  case distinctions\n\n\nContext filters (generic):\n    \n    -c --code                  Enable
  search in source code\n    -m --comment               Enable search in comments\n
  \   -l --literal               Enable search in string literals\n\n\nSemantic (generic):\n\n
  \   -S --semantic              \"code\" pattern: _, _1, _2... (identifiers), $,\n
  \                              $1, $2... (optionals), ANY, KEY, STR, CHR, LIT,\n
  \                              NUM, HEX, OCT, OR. -> e.g. \"_1(_1 && \\$)\" search\n
  \                              for move constructors, \"struct OR class _ { OR :\n
  \                              OR <\" search for a class declaration\n\n\nC/C++
  language:\n\n      --identifier            Identifiers\n      --keyword               Keywords\n
  \     --directive             Preprocessing directives\n      --header                Headers
  names\n      --number                Literal numbers\n      --string                Literal
  strings\n      --char                  Literal chars\n      --oper                  Operators\n\n\nOutput
  control:\n\n       --max-count=INT         Stop search in files after INT matches\n
  \      --language-filter=ITEM  Specify languages. ie: Cpp, +Haskell, -Makefile\n
  \      --language-force=ITEM   Force the language\n       --language-map          Lists
  the language mappings\n       --magic-filter=ITEM     Use unix magic as file-filter\n
  \   -v --invert-match          Select non-matching lines\n       --multiline=INT
  \        Enable multi-line matching\n    -r --recursive             Enable recursive
  search (don't follow symlinks)\n       --prune-dir=ITEM        Do not descend into
  dir\n    -R --deference-recursive   Recursive, follow symlinks\n\n\nOutput format:\n\n
  \      --show-match            Show list of matching tokens\n       --color                 Use
  colors to highlight the matching strings\n       --no-color              Do not
  use colors (override config file)\n    -h --no-filename           Suppress the file
  name prefix on output\n       --no-numbers            Suppress both line and column
  numbers on output\n       --no-column             Suppress the column number on
  output\n       --count                 Print only a count of matching lines per
  file\n       --filename-only         Print only the name of files containing matches\n
  \      --format=STRING         Format output. Var: #f #n #l #t ## #, #; #0\n                               #1...
  e.g. \"#f:#n #0 #1\"\n       --json                  Format output as json object\n
  \      --xml                   Format output as xml document\n       --editor                Run
  the editor specified by EDITOR var., passing\n                               the
  files that match\n       --vim                   Run vim the editor passing the
  files that match\n\n\nConcurrency:\n\n    -j --jobs=INT              Number of jobs\n
  \      --cores=INT             Number of physical processors utilized\n       --chunk=INT
  \            Specify the length of chunks\n    -a --asynch                Process
  chunks asynchronously\n\n\nMiscellaneous:\n\n    -d --debug=INT             Debug
  level: 1, 2 or 3\n       --no-shallow            Disable shallow-search \n    -?
  --help                  Display help message\n    -V --version               Print
  version information\n       --numeric-version       Print just the version number\n"
license-name: GPL-2
