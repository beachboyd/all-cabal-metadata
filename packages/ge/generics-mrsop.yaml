homepage: ''
changelog-type: markdown
hash: 77abb8f7f8a50e6f0eae7ba51d3e8362c03b9059e5f8500b354334afbcea3629
test-bench-deps: {}
maintainer: v.cacciarimiraldo@gmail.com
synopsis: Generic Programming with Mutually Recursive Sums of Products.
changelog: "# Revision history for generics-mrsop\n\n## 2.0.0 -- Mar 2019\n\n- `Eq1`
  and `Show1` are now called `EqHO` and `ShowHO`. This avoids clashing with the\nalready
  existing `Eq1` in `Prelude`. \n- A number of functions received a `IsNat` constraint.\n-
  `Generics.MRSOP.Util` is now re-exported by `Generics.MRSOP.Base`.\n- Support for
  inheritted attributes no longer exists in `Generics.MRSOP.AG`\n- `Fix` is no longer
  implemented by `AnnFix`. The later now lives in `Generics.MRSOP.AG`\n\n## 1.2.2
  -- Sep 2018\n\n- added monadic catamorphism for NP\n- added pattern signature generation
  for TH\n- require `TestEqualiy` for opaque types singleton\n- Zippers over deep
  representations\n- Refined `Metadata` handling\n- `Fix` is implemented as `AnnFix`\n\n##
  1.0.0.0  -- May 2018\n\n* First version. Released on an unsuspecting world.\n"
basic-deps:
  base: ! '>=4.9 && <=5'
  containers: -any
  mtl: -any
  template-haskell: -any
all-versions:
- 1.0.0.1
- 1.2.2
- 2.0.0
author: Victor Miraldo and Alejandro Serrano
latest: 2.0.0
description-type: markdown
description: |+
  # generics-mrsop

  Generic Programming, with combinators, for Mutually Recursive Families in the
  Sums of Products style.

  Check the `Generics.MRSOP.Examples.RoseTreeTH` for a simple quick start,
  or read our [paper](https://icfp18.sigplan.org/event/tyde-2018-sums-of-products-for-mutually-recursive-datatypes), "Sums of Products for Mutually Recursive Datatypes", for a more detailed description.

license-name: MIT
