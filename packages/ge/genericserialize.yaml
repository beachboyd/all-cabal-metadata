homepage: ''
changelog-type: ''
hash: 163f51f442d6efa5725af1f8ec8bb65db83cbdd97d09494602a66f446ecd473e
test-bench-deps: {}
maintainer: Stefan O'Rear <stefanor@cox.net>
synopsis: Serialization library using Data.Generics
changelog: ''
basic-deps:
  base: -any
all-versions:
- '0.1'
author: Stefan O'Rear
latest: '0.1'
description-type: text
description: ! 'This is genericserialize, a library of functions using the "Scrap
  your

  boilerplate" framework to serialize arbitrary data.


  Basic usage:


  *Data.Generics.Serialization.SExp> buildList (sexpSerialize (True,False))

  "(~l,~r #t #f)"

  *Data.Generics.Serialization.SExp> buildList (sexpSerialize [True,False])

  "(#t #f)"

  *Data.Generics.Serialization.SExp> buildList (sexpSerialize (Just "help"))

  "(Just \"help\")"

  *Data.Generics.Serialization.SExp> withList (sexpDeserialize) "(#t #f)" :: Maybe
  [Bool]

  Just [True,False]

  *Data.Generics.Serialization.SExp> withList (sexpDeserialize) "(Just \"f\\oo\")"
  :: Maybe (Maybe Bool)

  Nothing

  *Data.Generics.Serialization.SExp> withList (sexpDeserialize) "(Just \"f\\oo\")"
  :: Maybe (Maybe String)

  Just (Just "foo")

  *Data.Generics.Serialization.SExp> '
license-name: BSD-3-Clause
