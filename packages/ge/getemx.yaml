homepage: http://bitbucket.org/kenko/getemx
changelog-type: ''
hash: 9a063ca58b1cf580c3229447cdff1470b30249374fec9c3bd0b9cb92184ade87
test-bench-deps: {}
maintainer: wolfson@gmail.com
synopsis: Fetch from emusic using .emx files
changelog: ''
basic-deps:
  base: ! '>=3 && <5'
  time: ! '>=1'
  haskell98: -any
  curl: ! '>=1.3'
  filepath: ! '>=1'
  process: ! '>=1'
  hxt: ! '>=9'
  old-locale: ! '>=1'
  mtl: ! '>=1'
  directory: ! '>=1'
all-versions:
- '0.1'
author: Ben Wolfson
latest: '0.1'
description-type: text
description: ! "======\nGETEMX\n======\n\ngetemx reads the .emx files used by `Emusic\n<http://www.emusic.com>`_
  and downloads the files they describe. Its\nbehavior is controlled by the file ~/.emxdownloader,
  which contains\ninstructions for file naming, art downloading, etc (see below in\n`Invocation`_).
  It downloads files using either wget, curl, or\nHaskell's interface to libcurl (though
  I would be surprised if anyone\nwho had libcurl installed didn't also have the curl
  binary).\n\nBuilding & Installation\n=======================\n\nIt should be possible
  to build and install getemx using `cabal\n<http://www.haskell.org/cabal>`_.\n\nInvocation\n==========\n\ngetemx
  accepts no options on the command line. Its arguments should\nconsist simply of
  .emx files; the simplest way to invoke it is::\n\n   $ getemx *.emx\n\nwhere the
  .emx files are in the current directory.\n\ngetemx will read a file in your home
  directory called \".emxdownloader\"\nwhich can define options to control its behavior.
  Options may either\nbe *boolean* or *string*; the values of boolean options must
  be one of\n\"f\", \"t\", \"false\", or \"true\" while string options may be any\nstring.
  The syntax of the .emxdownloader file is very simple::\n\n   option = value\n\nAny
  amount of whitespace may occur before or after the \"=\". The\nfollowing are boolean
  options:\n\n- **replace_underscores**: if true, underscores in the filename will
  be replaced by spaces. True by default.\n- **replace_apostrophe_identity**: if true,
  the string \"``&#039;``\" in filenames will be replaced by \"``'``\". True by default.\n-
  **get_art**: if true, cover art will be downloaded for each album. True by default.\n\nCurrently
  the only string options control the filenames of the\ndownloaded files. There are
  two classes here: **dldir** specifies a\ndirectory *relative to which* further processing
  will take place,\nwhile **dlfmt** and **dlfmt_multidisc** specify how to process\n*individual
  files*. The latter two accept a number of replacement\noptions:\n\n==================
  ================\n**Format string:** **Replaced by:**\n================== ================\n``%(a)``
  \          Artist name\n``%(A)``           Album name\n``%(n)``           Track
  number\n``%(t)``           Track name\n``%(D)``           Total number of discs
  in set\n``%(d)``           Number of present disc in set (e.g. 2 out of 4)\n``%(l)``
  \          Label\n``%(e)``           File extension\n``%(g)``           Genre\n``%%``
  \            ``%``\n================== ================\n\nThe defaults for the
  string options are:\n\n- **dldir**: ``.``\n- **dlfmt**: ``%(a)/%(A)/%(a) - %(A)
  - %(n) - %(t)``\n- **dlfmt_multidisc**: ``%(a)/%(A): %(d)/%(a) - %(A): %(d) - %(n)
  - %(t)``\n\n**dlfmt_multidisc** is used if a track is being downloaded that\nbelongs
  to a set with more than one disc; otherwise, **dlfmt** is\nused. Note that at present
  the default for dlfmt_multidisc will\nprobably do the wrong thing on OS X. Note
  also that neither of the\ndefault values ends with ``%(e)``: the file extension
  is supplied\nautomatically if it is not explicitly specified.\n\nA ~/.emxdownloader
  file that set every option to its default value\ncould look like this::\n\n    get_art
  = t\n    replace_underscores = t\n    replace_apostrophe_identity = t\n    dldir
  = .\n    dlfmt = %(a)/%(A)/%(a) - %(A) - %(n) - %(t)\n    dlfmt_multidisc = %(a)/%(A):
  %(d)/%(a) - %(A): %(d) - %(n) - %(t)\n\n\"Could\" because one could also write \"true\"
  out in full for \"t\".\n"
license-name: BSD-3-Clause
