homepage: http://projects.haskell.org/GenI
changelog-type: text
hash: 082bdb48ae1e289206a7c0b801bf6861da4c686dd3fad89d437bf7cf66d05845
test-bench-deps:
  test-framework-hunit: -any
  test-framework: ! '>0.3'
  base: ! '>=4 && <5'
  GenI: -any
  text: -any
  json: -any
  filepath: -any
  test-framework-quickcheck2: -any
  parsec: -any
  HUnit: -any
  smallcheck: -any
  containers: -any
  mtl: -any
  transformers: -any
  errors: -any
  QuickCheck: -any
  test-framework-smallcheck: -any
maintainer: geni-users@loria.fr
synopsis: A natural language generator (specifically, an FB-LTAG surface realiser)
changelog: ! "GenI 0.24.3 15 Nov 2013\n-----------------------\nBUGFIXES:\n\n* Lexical
  selection: trees that fail enrichment due to unification failure are\n  now discarded\n\n
  \ Previously, there was some confusion over whether the expected behaviour was\n
  \ for this to be an error or warning. The behaviour after this fix is that\n  missing
  nodes trigger a warning, an unification failures trigger an error\n  (discarded
  tree)\n\n* Realisation: When anonymising singleton variables, GenI preserves their\n
  \ constraints. This should fix some subtle overgeneration problems that may\n  arise
  in automatically generated grammars\n\nGenI 0.24, 18 Sep 2013\n----------------------\nNote
  that the changes between this release and 0.20 are considered to be under\nthe BSD3
  license.  GenI overall remains dual-licensed under the GPL and any\ncommercial-use
  terms you may wish to negotiate with INRIA. Having secured the\nrights to use GenI
  0.20, you may freely use GenI 0.24 in a similar fashion.\n\nCHANGES TO WATCH OUT
  FOR\n\n* Server/GUI changes: Semantic input must be full input.\n  - Before: `foo(x)
  bar(y z)`\n  - After:  `semantics:[foo(x) bar(y z)]`\n* Customisable semantics :
  now you can accept any arbitrary\n  input for which you can define a mapping to
  a GenI-style test case\n* API change: the custom semantics argument is mandatory\n*
  More extensive documentation\n\nGUI\n\n* Visual distinction between explicit null
  adjunction constraints\n  (marked NA) and constraints inserted by GenI (marked INA)\n*
  Bugfixes (now retains show-feature state across debugger steps)\n* More informative
  top/bot unification failure diagnostics in the\n  trash\n\nGENERAL\n\n* New \"guided
  realisation\" optimisation (focus on one polarity\n  path at a time)\n* Fixed errors
  where top/bottom unification wasn't being done\n* Builds with haskell-platform 2013.2.0.0\n\nGenI
  0.22, 14 Apr 2012\n----------------------\nNote that the changes between this release
  and 0.20 are considered to be under\nthe BSD3 license.  GenI overall remains dual-licensed
  under the GPL and any\ncommercial-use terms you may wish to negotiate with INRIA.
  Having secured the\nrights to use GenI 0.20, you may freely use GenI 0.22 in a similar
  fashion.\n\nCHANGES TO WATCH OUT FOR\n\n* Separation of geni and geni-gui into two
  packages;\n  simpler installation\n* Now using the top feature for lemanchors instead
  of bot\n* Empty disjunctions forbidden in unification variables\n* JSON input/output
  to morph processors have changed\n* Lexical selection unifies semantics of tree
  schema + lemma with\n  input semantics.\n\nGUI\n\n* New results tab with reminder
  of inputs\n* Add gui element to display unanchored lexical selection.\n* Jump to
  new tab in debugger panel when created.\n* Update gui to use Pretty instead of Show\n*
  Rename $algo-session tab to \"tree assembly\"\n* Make warnings resizable.\n* Fix
  display of path equations with 'interface' in them.\n* Fix #50 - load button has
  no effect.\n* Fix #49 - correct order that leaf nodes are returned.\n* Show GenI
  version in About box.\n* Add detect polarities and root feature editor to main gui.\n\nDOCUMENTATION\n\n*
  Literate GenI and genimanual replaced with\n  http://projects.haskell.org/GenI/manual\n\nGENERAL\n\n*
  Builds with GHC 7\n* Core behaviour\n     * Early null-adjunction and semfilter
  obligatory\n     * Handling of zero-literal semantic items restored\n     * Unconstrained
  polarities in automaton construction.\n       This makes it possible to do polarity
  detection with only a\n       weakly specified root feature like [cat:_], and without
  needing\n       the relevant feature to be implemented everywhere.\n\n* Flags:\n
  \    * --trees (used to be --macros; latter is deprecated)\n     * --batchdir now
  optional (defaults to a new temp dir)\n     * --maxsteps (stop after N steps)\n
  \    * --extrapol REMOVED (use root feature instead)\n* Logging facility (not used
  much in GenI yet)\n  Can be configured in ~/.geni/config.yaml, for example\n  logging:\n
  \  -\n     name     : NLP.GenI.Console\n     level    : WARN\n     format   : simple
  \"$msg\"\n   -\n     name     : NLP.Geni.LexicalSelection\n     level    : DEBUG\n
  \    format   : simple \"$utcTime $loggername $msg\"\n     handler  : stderr\n*
  Less repetition in warnings (hopefully easier to read)\n* More hiding of constructors
  for safety\n* New enrichment option for setting co-anchors (foo.lex=hello)\n* Lexical
  selection performance enhancements\n* Variables that only occur once are converted
  to anonymous,\n  should make unification a bit more efficient\n* Fix #39: reject
  malformed root feature input.\n* New feature:\n  * Variables with constraints on
  their possible values (?X/foo|bar)\n  * Fancy disjunctions: tree schemata now allow
  disjunctions of\n    unification variables (but not recursive). These must flatten
  down\n    to plain old atomic disjunction once converted to elementary trees\n\n*
  Time metric in statistics (Laura Perez)\n* Do top/bottom unification on na-constrained
  nodes during initialisation.\n* Polarity detection relaxed to work with constrained
  variables too.\n  (?X/foo|bar gives the result as foo|bar)\n* Bugfix in interpretation
  of root feature (it should be sorted).\n* Flags:\n  * --rootfeat always assumed,
  but defaults to '[cat:_]'\n  * '-r' a short command line option for '--rootfeat'.\n\nLIBRARY\n\n*
  Somewhat safer and easier to understand API\n  (still no stability yet)\n* Replace
  String with Text in GeniVal\n* Replace Show abuse with custom Pretty class\n* Slightly
  less stateful (no target semantics in state)\n* Much rearranging and renaming (sorry!)\n*
  New: ability to provide custom lexical selection action\n* New: ability to provide
  custom morph postprocessing action\n* de-haskell98 (Gwern Branwen)\n* No more null
  builder.\n\nTOOLS (darcs get --lazy http://code.haskell.org/GenI)\n\n* new tool,
  genireport: summarise batch generation results\n* geniserver now talks over HTTP
  using a JSON format\n* Use Sylvain Salvati's xmg2geni.xsl instead of geniconvert.\n
  \   * xmg2geni: fix treatment of missing lexemes.\n    * xmg2geni: treat type=coanchor
  as other nodes in GenI.\n* geniwrapper: illustrates C wrapper of GenI API\n\nGenI
  0.20, 29 Sep 2009\n----------------------\n- NON BACKWARD-COMPATIBLE CHANGES\n\n
  \ * GHC 6.8 or higher now required (GHC 6.10 + Haskell Platform preferred)\n  *
  Input files now *assumed* to be UTF-8 encoded\n    (output still ISO8859-1; hopefully
  locale-based in GHC 6.12)\n  * Interface between GenI and morphological realiser
  now uses a JSON format.\n  * Rootfeat optimisation now mandatory (flag no longer
  recognised)\n\n- NEW FUNCTIONALITY\n\n  * new flag --version now works and reports
  version from Cabal file\n  * new flag --dump dumps derivation output to stdout in
  JSON format\n  * new flag --ranking foo ranks outputs according to OT-style constraints
  expressed in foo\n  * --batchdir now works with --testcase\n  * --batchdir now dumps
  derivations and statistics in JSON format\n  * --batchdir now works with instructions
  files\n  * --metrics always expands 'default' to the default metrics\n    (in addition
  to any other statistics you request)\n  * new optimisation: early null-adjunction
  detection\n\n- QUALITY ASSURANCE\n\n  * Reference manual in docs/genimanual.pdf
  (make docs)\n  * cabal install -fgui and cabal install produce the same underlying
  library\n    only the executable is different\n  * Easier GUI installation for MacOS
  X (application bundles now built\n    automatically; no manual intervention required)\n
  \ * Adopted odd/even convention to distinguish devel builds from stable ones\n    (eg.
  GenI 0.21.x is devel whereas GenI 0.20.x is stable)\n\nGenI 0.17.4, 6 Apr 2009\n-----------------------\n*
  GHC 6.6 support\n\n* GUI disabled by default\n\nGenI 0.17.3, 3 Apr 2009\n-----------------------\n*
  Simplified build method\n  * one single cabal package instead of two\n  * cabal
  configure -f-gui to disable GUI\n  * makefile stripped out\n\n* Lexical selection
  on empty semantics now allowed\n  * This is so that the zero-literal semantics mechanism
  can work again\n\n* Better help text\n\n* Baked-in unit testing (geni --unit-test)\n\nGenI
  0.10, 11 Dec 2006\n----------------------\n* Performance much improved after Haskell
  profiling\n* Pre-compiled grammars option, geniserver (buggy)\n\nGenI 0.9, 8 Dec
  2006\n--------------------\n* Switched to new syntax: variables now must be prefixed
  with '?'\n* Switched from Alex/Happy to Parsec\n* Added API documentation via haddock\n\nGenI
  0.8, 16 Sep 2005\n---------------------\n* Support for latin-1 characters using
  Unicode wxhaskell\n* Added a configure script and an install target in Makefile\n*
  Changed from use of configuration files to use of command line switches\n* Full
  configuration GUI\n* Implementation of atomic disjunction\n* --ignore-semantics
  mode (Jackie Lai)\n\nGenI 0.7, 8 June 2005\n---------------------\n* Upgraded to
  ghc 6.4, wxwidgets 2.6, wxhaskell 0.9.4\n\nGenI 0.6, 3 May 2005\n---------------------\n*
  User interface fixes (Window size bugs)\n* Interface with Yannick Parmientier's
  selection module\n"
basic-deps:
  bytestring: ==0.10.*
  yaml-light: ==0.1.*
  base: ! '>=4.9 && <4.11'
  time: ! '>=1.6 && <1.9'
  GenI: -any
  text: ==1.2.*
  json: ==0.9.*
  syb: ! '>=0.6 && <0.8'
  filepath: ==1.4.*
  process: ! '>=1.4 && <1.7'
  parsec: ==3.1.*
  containers: ==0.5.*
  binary: ==0.8.*
  ordered: ==0.1.*
  hslogger: ==1.2.*
  mtl: ==2.2.*
  transformers: ==0.5.*
  deepseq: ==1.4.*
  directory: ! '>=1.2 && <1.4'
all-versions:
- '0.16'
- 0.16.1
- 0.17.3
- 0.17.4
- '0.20'
- 0.20.1
- 0.20.2
- '0.22'
- 0.22.0.1
- '0.24'
- 0.24.1
- 0.24.2
- 0.24.3
- 0.25.0
- 0.25.0.1
author: Carlos Areces and Eric Kow
latest: 0.25.0.1
description-type: markdown
description: ! "[![Build Status](https://secure.travis-ci.org/kowey/GenI.png)](http://travis-ci.org/kowey/GenI)\n\n#
  Documentation\n\n1. [homepage][homepage] and [wiki][wiki]\n2. [manual][manual]\n3.
  [API][API]\n\n# Installing GenI\n\n## Command line interface and server\n\n(tested
  on Linux, Windows, and MacOS X)\n\n1. Install the [Haskell Platform][haskell-platform].
  GenI 0.24 is known\n   to build with either haskell-platform-2013.2.0.0 and\n   haskell-platform-2012.2.0.0.
  \ Other versions may work too.\n\n       If you want the graphical interface, and
  you are on a 64-bit Mac,\n   take the 64-bit version of the Haskell Platform.\n\n2.
  Install the basic version first. If you just want the\n   last stable release of
  GenI,\n\n           cabal install GenI geniserver geni-util\n\n       However, if
  you want to install the unstable version\n   from source, change to the directory
  this README is in\n   and\n\n           cabal install . ./geniserver ./geni-util\n\n##
  Graphical interface\n\n1. Install wxWidgets.  If you have a 64-bit Mac, install
  the Cocoa\n   interface. If you use HomeBrew on Mac, `brew install wxmac` should
  do\n   the trick.\n\n       GenI 0.24 has been known to work with wxWidgets 2.9.4
  on MacOS X, and\n   is expected to work on wxWidgets 2.8.x or wxWidgets 2.9.x on
  Linux.\n\n2. Install wxHaskell (potentially painful)\n\n           cabal install
  wx\n\n       If you run into trouble here, you may need to use a development\n   version
  of [wxHaskell][wxHaskell].\n\n3. Install the graphical interface (should be easy
  if 2 went well)\n\n           cabal install ./geni-gui\n\n4. Try GenI (needs GenI
  examples files from this repository)\n\n           cd examples/ej\n           geni-gui
  -t trees -l lexicon -s suite\n\n# Development\n\n* [Darcs (MAIN)][geni-darcs] or
  [Git (mirror)][geni-github]\n* [Issue tracker][issues]\n\nI accept Darcs patches
  and GitHub pull requests.\nThe Darcs repository might be a bit ahead of the Git
  one,\nbut I'll try to keep the mirror up to date.\n\n## Style\n\nPlease follow [published
  style guide][style].\nThere is quite a bit of old code that does not follow this.\nSorry.
  I'm slowly working on transitioning it.\n\n## Versions\n\n* Stable version has even
  minor number  (eg. 0.22.x)\n* Development version has odd minor number (eg 0.23.yyyymmdd)\n
  \ Sometimes with a datestamp for major API changes in between\n* NEWS file will
  probably mention the next release (eg. 0.24)\n\n# Contact us!\n\nPlease let us know
  if you are using GenI; we'd like to hear about your\nexperiences, both positive
  and negative.\n\n[API]:          http://kowey.github.com/GenI/api-doc\n[geni-darcs]:
  \  http://hub.darcs.net/kowey/GenI\n[geni-github]:  https://github.com/kowey/GenI\n[haskell-platform]:
  http://www.haskell.org/platform/\n[homepage]:     http://kowey.github.com/GenI\n[issues]:
  \      https://github.com/kowey/GenI/issues\n[manual]:       http://kowey.github.com/GenI/manual\n[style]:
  \       https://github.com/tibbe/haskell-style-guide\n[wiki]:         https://kowey.github.com/GenI/wiki\n[wxhaskell]:
  \   https://github.com/wxhaskell/wxhaskell\n"
license-name: LicenseRef-GPL
