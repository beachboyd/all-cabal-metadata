homepage: https://github.com/rudymatela/leancheck-instances#readme
changelog-type: markdown
hash: 69cc99cecf14e8fdf6f5701196ec55aea65c53b83f9e049d9b3ccfbf671eee01
test-bench-deps:
  leancheck-instances: -any
  bytestring: -any
  base: ==4.*
  text: -any
  leancheck: -any
  containers: -any
  nats: -any
maintainer: Rudy Matela <rudy@matela.com.br>
synopsis: Common LeanCheck instances
changelog: |
  Changelog for leancheck-instances
  =================================

  v0.0.2
  ------

  * Listable Set instance;
  * Listable Map instance;
  * Listable IntSet instance;
  * Listable IntMap instance;
  * Some Data.Time instances;
  * Listable Array instance.


  v0.0.1
  ------

  * ByteString instances;
  * Natural instance;
  * Text instance;
  * initial release on Hackage.
basic-deps:
  bytestring: -any
  base: ! '>=4 && <5'
  time: -any
  text: -any
  leancheck: ! '>=0.7.7'
  array: -any
  containers: -any
  nats: -any
all-versions:
- 0.0.1
- 0.0.2
author: Rudy Matela <rudy@matela.com.br>
latest: 0.0.2
description-type: markdown
description: "LeanCheck\n=========\n\n[![leancheck-instances's Build Status][build-status]][build-log]\n[![leancheck-instances
  on Hackage][hackage-version]][leancheck-instances-on-hackage]\n[![leancheck-instances
  on Stackage LTS][stackage-lts-badge]][leancheck-instances-on-stackage-lts]\n[![leancheck-instances
  on Stackage Nightly][stackage-nightly-badge]][leancheck-instances-on-stackage-nightly]\n\nThis
  package extends [LeanCheck] by providing [`Listable`] instances for common types
  provided by the\nHaskell Platform.\n\nThis package is to [LeanCheck] what [quickcheck-instances]
  is to [QuickCheck].\nThe current objective is to include all types supported by
  [quickcheck-instances].\n\n\nInstalling\n----------\n\nTo install the latest leancheck-instances
  version from Hackage, just run:\n\n\t$ cabal update\n\t$ cabal install leancheck-instances\n\n\nExamples\n--------\n\nImporting
  the library:\n\n\t> import Test.LeanCheck\n\t> import Test.LeanCheck.Instances\n\nChecking
  properties of `Text`:\n\n\t> import qualified Data.Text as T\n\t> check $ \\t ->
  T.reverse (T.reverse t) == t\n\t+++ OK, passed 200 tests.\n\t> check $ \\t -> T.reverse
  t == t\n\t*** Failed! Falsifiable (after 6 tests):\n\t\"a \"\n\nEnumerating maps:\n\n\t>
  import Data.Map\n\t> list :: [Map Bool Bool]\n\t[ fromList []\n\t, fromList [(False,False)]\n\t,
  fromList [(False,True)]\n\t, fromList [(True,False)]\n\t, fromList [(True,True)]\n\t,
  fromList [(False,False),(True,False)]\n\t, fromList [(False,False),(True,True)]\n\t,
  fromList [(False,True),(True,False)]\n\t, fromList [(False,True),(True,True)]\n\t]\n\t>
  take 7 $ list :: [Map Int Int]\n\t[ fromList []\n\t, fromList [(0,0)]\n\t, fromList
  [(0,1)]\n\t, fromList [(1,0)]\n\t, fromList [(0,-1)]\n\t, fromList [(1,1)]\n\t,
  fromList [(0,0),(1,0)]\n\t]\n\n\nFurther reading / see also\n--------------------------\n\n*
  [leancheck-instances' Haddock Documentation];\n* [LeanCheck];\n* [LeanCheck provider
  for Tasty]\n  -- `$ cabal install tasty-leancheck` ;\n* [LeanCheck provider for
  test-framework]\n  -- `$ cabal install test-framework-leancheck` ;\n* [LeanCheck
  provider for Hspec]\n  -- `$ cabal install hspec-leancheck` .\n\n\n[leancheck-instances'
  Haddock documentation]: https://hackage.haskell.org/package/leancheck-instances/docs/Test-LeanCheck-Instances.html\n[LeanCheck's
  Haddock documentation]: https://hackage.haskell.org/package/leancheck/docs/Test-LeanCheck.html\n\n[`Listable`]:
  \      https://hackage.haskell.org/package/leancheck/docs/Test-LeanCheck.html#t:Listable\n[`holds`]:
  \         https://hackage.haskell.org/package/leancheck/docs/Test-LeanCheck.html#v:holds\n[`counterExample`]:
  https://hackage.haskell.org/package/leancheck/docs/Test-LeanCheck.html#v:counterExample\n[`check`]:
  \         https://hackage.haskell.org/package/leancheck/docs/Test-LeanCheck.html#v:check\n[`tiers`]:
  \         https://hackage.haskell.org/package/leancheck/docs/Test-LeanCheck.html#v:tiers\n[`list`]:
  \          https://hackage.haskell.org/package/leancheck/docs/Test-LeanCheck.html#v:list\n\n[LeanCheck
  provider for Tasty]:          https://hackage.haskell.org/package/tasty-leancheck\n[LeanCheck
  provider for test-framework]: https://hackage.haskell.org/package/test-framework-leancheck\n[LeanCheck
  provider for Hspec]:          https://hackage.haskell.org/package/hspec-leancheck\n[LeanCheck]:
  \                            https://github.com/rudymatela/leancheck\n[QuickCheck]:
  \                           https://hackage.haskell.org/package/QuickCheck\n[quickcheck-instances]:
  \                 https://hackage.haskell.org/package/quickcheck-instances\n\n[build-status]:
  https://travis-ci.org/rudymatela/leancheck-instances.svg?branch=master\n[build-log]:
  \   https://travis-ci.org/rudymatela/leancheck-instances\n[hackage-version]: https://img.shields.io/hackage/v/leancheck-instances.svg\n[leancheck-instances-on-hackage]:
  \         https://hackage.haskell.org/package/leancheck-instances\n[stackage-lts-badge]:
  \                     https://stackage.org/package/leancheck-instances/badge/lts\n[stackage-nightly-badge]:
  \                 https://stackage.org/package/leancheck-instances/badge/nightly\n[leancheck-instances-on-stackage]:
  \        https://stackage.org/package/leancheck-instances\n[leancheck-instances-on-stackage-lts]:
  \    https://stackage.org/lts/package/leancheck-instances\n[leancheck-instances-on-stackage-nightly]:
  https://stackage.org/nightly/package/leancheck-instances\n"
license-name: BSD-3-Clause
