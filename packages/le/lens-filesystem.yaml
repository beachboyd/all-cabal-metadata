homepage: https://github.com/ChrisPenner/lens-filesystem
changelog-type: markdown
hash: 0d9bde26c347b4921abe8985633929b86b29b4ba36e9a1a0fbad10f74ada135c
test-bench-deps:
  lens-action: ^>=0.2.4
  base: '>=4.7 && <5'
  hspec: -any
  filepath: ^>=1.4.2
  lens: ^>=4.18.1
  lens-filesystem: -any
  directory: ^>=1.3.6
maintainer: christopher.penner@gmail.com
synopsis: Lens interface for your filesystem; still a bit experimental
changelog: |
  # Changelog for lens-fs

  ## Unreleased changes
basic-deps:
  lens-action: ^>=0.2.4
  base: '>=4.7 && <5'
  filepath: ^>=1.4.2
  lens: ^>=4.18.1
  directory: ^>=1.3.6
all-versions:
- 0.0.0.0
- 0.1.0.0
author: Chris Penner
latest: 0.1.0.0
description-type: markdown
description: "# lens-filesystem\n\n[HACKAGE](https://hackage.haskell.org/package/lens-filesystem)\n\nA
  lensy style interface to your filesystem.\n\nThis is pretty experimental; I wouldn't
  recommend using it in production code at the moment;\nUsing the read-only operations
  should be fine, but I'd strongly recommend doing lots of testing\nwith `print` before
  you run destructive filesystem operations.\n\nThis library is meant to be used in
  conjunction with the `lens-action` library.\n\nThe interface to this package could
  change at any time.\n\nExamples:\n\n```haskell\nMany of the combinators you see
  here come from `lens-action`.\n\n-- Find all files in ~ or ~/config with a .vim
  or .conf extension\n>>> \"/Users/chris\" ^!! including (path \"config\") . ls .
  traversed . exts [\"vim\", \"conf\"]\n[\"/Users/chris/.vim\",\"/Users/chris/tmux.conf\",\"/Users/chris/config/plugins.vim\"]\n\n--
  Check whether a filename is a dotfile\n>>> let isDotfile = has (filename . _head
  . only '.')\n-- Crawl a filetree according to a given fold, \n-- e.g. crawl all
  dirs that aren't dotfiles (a.k.a. .git, .stack-work)\n>>> \".\" ^!! crawling (ls'ed
  . dirs . filtered (not . isDotfile))\n[ \".\" , \"./app\" , \"./test\" , \"./src\"
  , \"./src/Control\"\n, \"./src/Control/Lens\", \"./src/Control/Lens/FileSystem\"]\n\n--
  Crawl ALL files in \"src\" collecting \"*.hs\" files, then make file paths absolute\n>>>
  \"src\" ^!! crawled . exts [\"hs\"] . absolute\n[ \"/Users/chris/dev/lens-fs/src/Control/Lens/FileSystem/Combinators.hs\"\n,
  \"/Users/chris/dev/lens-fs/src/Control/Lens/FileSystem.hs\" ]\n\n-- Find all executables
  in the 'scripts' directory and copy them to bin\n>>> \"scripts\" ^! crawled . withPerms
  [executable] . act (`copyFile` \"/Users/chris/bin\")\n\n-- Read all markdown files
  and get their contents with filename\n>>> \"./test\" ^!! crawled . exts [\"md\"]
  . contents . withIndex\n[(\"./test/data/flat/file.md\",\"markdown\\n\")]\n```\n\nSee
  more examples in the [tests](./test/Spec.hs)\n"
license-name: BSD-3-Clause
