homepage: https://github.com/adamConnerSax/polysemy-Extra#readme
changelog-type: markdown
hash: ff176f4d5e19b8aaeeda9999be951fa098a8f09d6fb27f5f7ffae5dd9f4364be
test-bench-deps:
  polysemy-plugin: -any
  base: ! '>=4.7 && <5'
  hspec: -any
  text: -any
  polysemy-zoo: -any
  polysemy-RandomFu: -any
  random-fu: -any
  polysemy: ! '>=0.3'
  random-source: -any
maintainer: adam_conner_sax@yahoo.com
synopsis: Experimental, RandomFu effect and interpreters for polysemy
changelog: |+
  # Changelog for polysemy-RandomFu

  ## 0.1.0.0 (2019-06-14)
  - Initial Release with RandomFu effect/intepreters

  ## Unreleased changes

basic-deps:
  polysemy-plugin: -any
  base: ! '>=4.7 && <5'
  polysemy-zoo: ! '>=0.2'
  random-fu: -any
  polysemy: ! '>=0.3'
  random-source: -any
all-versions:
- 0.1.0.0
author: Adam Conner-Sax
latest: 0.1.0.0
description-type: markdown
description: "# polysemy-RandomFu\n\n## Summary\n- Polysemy effect and intepreters
  to use the random-fu library in a polysemy effect union (like an mtl stack).\n-
  Includes an MTL \"absorber\" (see https://github.com/isovector/polysemy-zoo/blob/master/src/Polysemy/MTL.hs)
  for\nto random-fu ```MonadRandom``` typeclass.\n\n## Example (from the tests)\n```haskell\nimport
  \          Polysemy\nimport           Polysemy.RandomFu\n\nimport qualified Data.Random
  \                  as R\nimport qualified Data.Random.Source.PureMT     as R\n\ngetRandomInts
  :: Member RandomFu r => Int -> Sem r [Int]\ngetRandomInts nDraws =\n  sampleRVar
  $ M.replicateM nDraws (R.uniform 0 (100 :: Int))\n  \nmain :: IO ()\nmain = do\n
  \ seed <- R.newPureMT\n  putStrLn . show $ runM . runRandomIOPureMT (R.pureMT seed)
  $ getRandomInts 5\n```\nshould print a list of 5 pseudo-random integers. \nThey
  will be different each time you run because the ```newPureMT``` function \nreturns
  a different seed each time it's called.  If you replace that seed in \nthe ```R.pureMT```
  argument to ```runRandomIOPureMT``` with a fixed number\nthen you will get the *same*
  pseudo-random sequences each time.  This can be\nuseful for testing.\n\n## Notes\n-
  See the tests (in https://github.com/adamConnerSax/Polysemy-Extra/blob/master/polysemy-RandomFu/test/RandomFuSpec.hs)
  \nfor more details about how to use this effect\n"
license-name: BSD-3-Clause
