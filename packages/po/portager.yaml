homepage: https://github.com/j1r1k/portager
changelog-type: markdown
hash: 9f6085ee173ddf2a5899002ca68ec7e24831425e6c0cfcbcb1e0c6e2872a53d5
test-bench-deps:
  base: ! '>=4.9.0.0 && <4.10'
  hspec: ! '>=2.2.4 && <2.3'
  text: ! '>=1.2.2.1 && <1.3'
  containers: ! '>=0.5.7.1 && <0.6'
  mtl: ! '>=2.2.1 && <2.3'
  portager: ! '>=0.1.1.0 && <0.2'
  QuickCheck: ! '>=2.8.2 && <2.9'
maintainer: Jiri Marsicek <jiri.marsicek@gmail.com>
synopsis: DSL for configuring Gentoo portage
changelog: ! '# Version 0.1.1.0 (22 May 2017)

  - fix cabal pvp versioning


  # Version 0.1.0.0 (21 May 2017)

  - initial release

'
basic-deps:
  base: ! '>=4.9 && <5'
  text: ! '>=1.2.2.1 && <1.3'
  filepath: ! '>=1.4.1.0 && <1.5'
  containers: ! '>=0.5.7.1 && <0.6'
  lens: ==4.14.*
  mtl: ! '>=2.2.1 && <2.3'
  transformers: ! '>=0.5.2.0 && <0.6'
  optparse-applicative: ! '>=0.12.1.0 && <0.13'
  directory: ! '>=1.2.6.2 && <1.3'
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Jiri Marsicek
latest: 0.1.1.0
description-type: markdown
description: ! "# Portager - DSL for configuring Gentoo's Portage\n\nPortager is here
  to help you maintain your Gentoo's Portage configuration sane. \n\n## Usage\n\nImport
  `Portager` and run `portager` in your `main` function. It accepts two parameters:\n-
  a configuration (currently contains only selected architecture - e.g. `amd64`)\n-
  a list of `PortageR PackageSet`s. The type is as complex as it is in order to push
  down the sequencing down to the library function.\n\n### Example Project\n\nSee
  [example/README.md](https://github.com/j1r1k/portager/blob/master/example/README.md)
  for an example of a full project.\n\n## Motivation and Examples\n\n### Everyting
  in One File\n\nIf I want to install a package with changes to use flags and keywords,
  I have to add it to a set, amend package.use and amend package.accept_keywords.
  Three files to be changed just to install something non-standard (which is fairly
  standard on Gentoo).\n\n### Changes of Useflags, Keywords for Dependencies\n\nTaking
  Inkcape as an example of an atom, that requires some adjustments to use flags of
  packages it depends on.\n\nPortager allows you to track those changes right where
  you define that you request Inkscape to be installed. If you ever decide to get
  rid of it, you might as well want to get rid of changes to its dependencies.\n\nHaving
  following complete Portager configuration:\n\n```haskell\n{-# LANGUAGE OverloadedStrings
  #-}\nmodule Main where\n\nimport Portager\n\ninkscape :: PortageR Package\ninkscape
  = \"media-gfx/inkscape\" `with` do\n               use [ \"exif\", \"imagemagick\"
  ]\n               dep [ \"app-text/poppler\" `with` do\n                       use
  [ \"cairo\" ]\n                       dep [ \"media-libs/libpng\" `with` unstable
  ]\n                   , \"dev-python/pillow\" `with` use [ \"jpeg2k\", \"truetype\"
  ]\n                   ]\n\nmain :: IO ()\nmain = portager (PortagerConfiguration
  { _arch = amd64 })\n    [ \"graphics\" `with` pkgs [ inkscape, \"media-gfx/gimp\"
  ] ]\n```\n\nAnd corresponding `world_sets` file:\n```\n@graphics\n```\n\nResults
  in creation of following files:\n\n```\n==> package.accept_keywords/graphics <==\nmedia-libs/libpng
  ~amd64\n\n==> package.use/01graphics <==\napp-text/poppler cairo\ndev-python/pillow
  jpeg2k truetype\nmedia-gfx/inkscape exif imagemagick\n\n==> sets/graphics <==\nmedia-gfx/inkscape\nmedia-gfx/gimp\n```\n\nOnce
  we get rid of `inkscape`:\n\n```haskell\n{-# LANGUAGE OverloadedStrings #-}\nmodule
  Main where\n\nimport Portager\n\nmain :: IO ()\nmain = portager (PortagerConfiguration
  { _arch = amd64 })\n    [ \"graphics\" `with` pkgs [ \"media-gfx/gimp\" ] ]\n```\n\nIt
  will result in creation of just a set file:\n\n```\n==> sets/graphics <==\nmedia-gfx/gimp\n```\n\n###
  Clear Separation of Configuration of Different Sets\n\nPortager operates on level
  of sets. Set is a collection of atoms that can be requested to be installed by `emerge`.
  This can be made permanent by adding the set to a world sets file `/var/lib/portage/world_sets`.\n\nThis
  has a benefit that when you later on decide you don't need a set of packages anymore,
  you just get rid of it, with all useflag, keyword and license settings.\n\nSimilarly
  to global useflags defined by adding them to `USE` variable, you can define set
  global useflags in Portager (this results in appending the useflag to all atoms
  listed in a set, even those for which it is not valid).\n\nHaving following complete
  Portager configuration:\n\n```haskell\n{-# LANGUAGE OverloadedStrings #-}\nmodule
  Main where\n\nimport Portager\n\ndesktopMedia :: PortageR PackageSet\ndesktopMedia
  = \"desktop-media\" `with` do\n    uses [ \"X\" ]\n    pkgs [ \"media-gfx/gpicview\"\n
  \        , \"media-video/vlc\"\n         ]\n\nmain :: IO ()\nmain = portager (PortagerConfiguration
  { _arch = amd64 }) [ desktopMedia ]\n```\n\nAnd corresponding `world_sets` file:\n\n```\ndesktop-media\n```\n\nResults
  in creation of following files:\n\n```\n==> package.use/01desktop-media <==\nmedia-gfx/gpicview
  X\nmedia-video/vlc X\n\n==> sets/desktop-media <==\nmedia-gfx/gpicview\nmedia-video/vlc\n```\n\nAtom
  `media-gfx/gpicview` has `X` useflag enabled even though it is not defined for the
  it.\n\n## Additional Functionality\n\n### Order of Sets Matters\n\nThe order of
  sets is important if you define overriding useflag settings.\n\nHaving following
  complete Portager configuration:\n\n```haskell\n{-# LANGUAGE OverloadedStrings #-}\nmodule
  Main where\n\nimport Portager\n\nmain :: IO ()\nmain = portager (PortagerConfiguration
  { _arch = amd64 })\n    [ \"console-tools\" `with` pkgs [\"app-editors/vim\" `with`
  use [\"-X\"]]\n    , \"desktop-tools\" `with` pkgs [\"app-editors/vim\" `with` use
  [\"X\"]]\n    ]\n```\n\nAnd corresponding `world_sets` file (here order does not
  matter for Portager):\n\n```\n@console-tools\n@desktop-tools\n```\n\nResults in
  creation of following files:\n\n```\n==> package.use/01console-tools <==\napp-editors/vim
  -X\n\n==> package.use/02desktop-tools <==\napp-editors/vim X\n\n==> sets/console-tools
  <==\napp-editors/vim\n\n==> sets/desktop-tools <==\napp-editors/vim\n```\n\nIf you
  ask emerge to install `app-editors/vim` it will be installed with `X` useflag enabled.\n"
license-name: BSD-3-Clause
