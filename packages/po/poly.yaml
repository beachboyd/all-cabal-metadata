homepage: https://github.com/Bodigrim/poly#readme
changelog-type: markdown
hash: 0af4cd702f7df12d482f24563ddef41db37620b16ed95724e03c2d0888f398a6
test-bench-deps:
  poly: -any
  base: ! '>=4.9 && <5'
  quickcheck-classes: ! '>=0.6.1'
  tasty-quickcheck: -any
  tasty: -any
  semirings: -any
  QuickCheck: ! '>=2.10'
  vector: -any
maintainer: andrew.lelechenko@gmail.com
synopsis: Polynomials
changelog: |
  # 0.2.0.0

  * Fix a bug in `Num.(-)`.
  * Add functions `constant`, `eval`, `deriv`, `integral`.
  * Add a handy pattern synonym `X`.

  # 0.1.0.0

  * Initial release.
basic-deps:
  base: ! '>=4.9 && <5'
  semirings: -any
  primitive: -any
  vector: -any
all-versions:
- 0.2.0.0
author: Andrew Lelechenko
latest: 0.2.0.0
description-type: markdown
description: |
  # poly [![Build Status](https://travis-ci.org/Bodigrim/poly.svg)](https://travis-ci.org/Bodigrim/poly) [![Hackage](http://img.shields.io/hackage/v/poly.svg)](https://hackage.haskell.org/package/poly)

  Polynomials with `Num` and `Semiring` instances, backed by `Vector`.

  ```haskell
  > (X + 1) + (X - 1) :: VPoly Integer
  2 * X + 0

  > (X + 1) * (X - 1) :: UPoly Int
  1 * X^2 + 0 * X + (-1)

  > eval (X^2 + 1 :: UPoly Int) 3
  10

  > eval (X^2 + 1 :: VPoly (UPoly Int)) (X + 1)
  1 * X^2 + 2 * X + 2

  > deriv (X^3 + 3 * X) :: UPoly Int
  3 * X^2 + 0 * X + 3
  ```
license-name: BSD-3-Clause
