homepage: https://bitbucket.org/s9gf4ult/postgresql-config
changelog-type: markdown
hash: 5ce9d48cd0f422910a3786d17f5c75331da222bbf8ccba03ba116eded6185db1
test-bench-deps: {}
maintainer: s9gf4ult@gmail.com
synopsis: Types for easy adding postgresql configuration to your program
changelog: ! "# CHANGELOG\n\n## 0.1.0\n### Added\n* `createPGPoolWithCallback` accepting
  callback which must be executed\n  on each connection just after it opened by pool.\n\n##
  0.0.2\n\n* `base` constraints relaxed\n* changelog added\n* cabal file beautified\n\n##
  0.0.1\n\nFirst version\n"
basic-deps:
  bytestring: -any
  base: ! '>=4.6 && <=5.0'
  time: -any
  monad-control: -any
  resource-pool: -any
  postgresql-simple: -any
  mtl: -any
  aeson: -any
all-versions:
- 0.0.1
- 0.0.2
- 0.1.0
author: Aleksey Uimanov
latest: 0.1.0
description-type: markdown
description: ! "# What?\n\nSimple types and set of functions to quickly add configuration
  of\npostgresql to your Yesod site or whatever.\n\n# How?\n\nAdd separate file or
  section inside your existing config like that\n\n```yml\ndatabase:    \"dbname\"\nhost:
  \       \"127.0.0.1\"       # optional\nport:         5432             # optional\nuser:
  \       \"dbuser\"\npassword:    \"pass\"\npoolsize:    10               # optional
  maximum connections in pool\npooltimeout: 60               # optional minimum connection
  lifetime\npoolstripes: 1                # optional count of stripes in pool\n```\n\nand
  then in your program something like that\n\n```haskell\nconf <- decodeFile \"pgconfig.yml\"\n
  \        >>= maybe (fail \"Could not parse pgconfig.yml\") return\npool <- createPGPool
  conf\npingPGPool pool\n```\n\nSo now you have a pool and can perform queries any
  way you like.\n"
license-name: BSD-3-Clause
