homepage: https://github.com/mikehat/random-strings
changelog-type: text
hash: 935a7a23dab45411960df77636a29b44ce42b89eeb15f2b1e809d771491fa677
test-bench-deps:
  base: ==4.*
  random-strings: -any
  containers: -any
  mtl: -any
  QuickCheck: -any
maintainer: github@michael-hatfield.com
synopsis: Generate random strings with specific qualities
changelog: ! '


'
basic-deps:
  base: ==4.*
  random-strings: -any
  random: ==1.*
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Michael Hatfield
latest: 0.1.1.0
description-type: markdown
description: ! "\n\n## `random-strings-0.1.0.0`\n\nA simple way to generate random
  strings for testing and benchmarking.\n\nA purely random character string is not
  always the best test case for testing\nand benchmarking. These modules help generate
  random strings with preferences\nfor character sets and character properties.\n\nExample:\n\n
  \   module Main ( main ) where\n\n    import Test.RandomStrings\n\n    iso_alpha
  = onlyAlpha randomChar8\n    ascii_alphanum = onlyAlphaNum randomASCII\n\n    --
  print a list of 30 random alphanumeric strings between 5 and 25\n    -- chars long.\n\n
  \   main = do\n        words <- randomStringsLen (randomString ascii_alphanum) (5,25)
  30\n        mapM_ putStrLn words\n\n\nBuild the example with `cabal build readme-example`.\n\nFunctions
  allow tuning strings for character class and toying with the\ndistribution of alphabetic
  and upper/lower-case characters.\n\n"
license-name: BSD-3-Clause
