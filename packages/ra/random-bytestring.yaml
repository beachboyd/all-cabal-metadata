homepage: https://www.github.com/larskuhtz/random-bytestring
changelog-type: markdown
hash: 71bda753b0f3deb43dac0d03a0f3e70b6e915f1a33a4776a4c27f3948da8638a
test-bench-deps:
  bytestring: ! '>=0.10'
  mwc-random: ! '>=0.13'
  base: ! '>=4.7 && <4.12'
  entropy: ! '>=0.3'
  criterion: ! '>=1.1'
  async: ! '>=2.1'
  random-bytestring: -any
  ghc-prim: ! '>=0.3'
  pcg-random: ! '>=0.1'
  cryptonite: ! '>=0.24'
  random: ! '>=1.1'
  primitive: ! '>=0.6'
maintainer: Lars Kuhtz <lakuhtz@gmail.com>
synopsis: Efficient generation of random bytestrings
changelog: ! "0.1.3.1 (2018-03-18)\n====================\n\n*   Put dependency on
  pcg-random behind a cabal flag, which is on by default.\n    This enables builds
  stackage nightly.\n\n0.1.3 (2018-03-17)\n==================\n\n*   Support for GHC-8.4.1\n\n0.1.2\n=====\n\n*
  \  Add support for PCG as PRNG in addition to MWC.\n\n    The module `Data.ByteString.Random.PCG`
  uses PCG. The module\n    `Data.ByteString.Random.MWC` uses MWC. The module `Data.ByteString.Random`\n
  \   uses MWC for backward compatibility.\n\n*   Support usage of custom PRNGs through
  the type class `RandomWords` and the\n    function `generate` in the module `Data.ByteString.Random.Internal`.\n\n*
  \  Add some benchmark results to package description\n\n0.1.1\n=====\n\n*   Support
  for GHC-8.2.1 and Cabal-2.0\n\n0.1.0\n=====\n\n*   In the implementation of `random`,
  use `withSystemGen` that seeds the PRNG\n    from the system randomness source.\n\n0.0.1\n=====\n\n*
  \  First public release\n"
basic-deps:
  bytestring: ! '>=0.10'
  mwc-random: ! '>=0.13'
  base: ! '>=4.7 && <4.12'
  pcg-random: ! '>=0.1'
all-versions:
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.3.1'
author: Lars Kuhtz <lakuhtz@gmail.com>
latest: '0.1.3.1'
description-type: markdown
description: ! '[![Build Status](https://travis-ci.org/larskuhtz/random-bytestring.svg)](https://travis-ci.org/larskuhtz/random-bytestring)


  # Efficient Random Haskell ByteStrings


  ## Installation


  ```sh

  cabal install random-bytestring

  ```


'
license-name: MIT
