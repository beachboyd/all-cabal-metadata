homepage: http://www.haskell.org/haskellwiki/Random_Processes
changelog-type: ''
hash: b673f31d16cede83ac45a9d6e684984c81c61b7c250e17ac15b8d410b290bb49
test-bench-deps: {}
maintainer: dbanas@banasfamily.net
synopsis: Data structures and support functions for working with random processes
changelog: ''
basic-deps:
  base: ! '>=3 && <5'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
author: David Banas
latest: '0.4'
description-type: text
description: ! "This is the `RandProc` library, written by David Banas.\n\nFor more
  info, please, see the comments in `Data/RandProc.hs`.\nAlternatively, view the Haddock
  generated HTML documentation:\n  $ cabal haddock\n\nFor information on the community
  support infrastructure for this library,\nview the home page for this library:\n
  \ http://www.haskell.org/haskellwiki/Random_Processes\nThere you will find links
  to:\n- mailing list\n- blog\n- bug tracker\n- etc.\n\nFor usage examples, please,
  see:\n- test/Test.hs\n    Darcs check-in tests\n- Data/RandProc/Examples/Problems/*.hs\n
  \   example problems, taken from the text upon which this library is based\n\nThe
  intent of this library is to provide the data structures and support\nfunctions
  necessary for working with abstract probability spaces, in a\nmathematically rigorous
  way. It is not intended to provide functionality for\ngenerating distributions,
  moments, expectations, etc., as there are already\nlibraries available for this.
  (`Probabilistic Functional Programming` is one\nthat I've seen, but haven't had
  a chance to investigate, yet.)\n\n"
license-name: BSD-3-Clause
