homepage: https://github.com/feuerbach/ansi-terminal
changelog-type: markdown
hash: 16b87a3d85922e938071b7b7f502f90df6406f04f349cf08764699add2e58773
test-bench-deps: {}
maintainer: Mike Pilgrem <public@pilgrem.com>, Roman Cheplyaka <roma@ro-che.info>
synopsis: Simple ANSI terminal support, with Windows compatibility
changelog: ! "Changes\r\n=======\r\n\r\nVersion 0.8.0.1\r\n---------------\r\n\r\n*
  On Windows, if the standard output channel is valid but not a ConHost\r\n  terminal,
  assume it is ANSI-enabled rather than failing\r\n* On Windows, output the improved
  error message to the standard error channel\r\n  rather than the standard output
  channel\r\n\r\nVersion 0.8\r\n-----------\r\n\r\n* Make the fields of `SGR` strict\r\n*
  Make compatible with GHC 8.2.2\r\n* Improve the error message on Windows when not
  ANSI-capable or ConHost\r\n* Recognise Appveyor build environment as ANSI-enabled\r\n\r\nVersion
  0.7.1.1\r\n---------------\r\n\r\n`getReportedCursorPosition`: don't let the cursor
  reporting code be echo'd\r\n\r\nVersion 0.7.1\r\n-------------\r\n\r\n* Allow saving,
  restoring, and querying the current cursor position\r\n* Fix a couple of issues
  with the Reset emulation on Windows\r\n\r\nVersion 0.7\r\n-----------\r\n\r\nAdd
  24-bit RGB color support\r\n\r\nVersion 0.6.3.1\r\n---------------\r\n\r\nFix Windows
  + ghc 7.8 compatibility\r\n\r\nVersion 0.6.3\r\n-------------\r\n\r\n* Add ANSI
  support for Windows\r\n* Add compatibility with Win32-2.5.0.0 and above\r\n\r\nVersion
  0.6.2.3\r\n---------------\r\n\r\nAdd an example to the haddocks\r\n\r\nVersion
  0.6.2.2\r\n---------------\r\n\r\nFix a GHC 7.10 warning\r\n\r\nVersion 0.6.2.1\r\n---------------\r\n\r\nRestore
  compatibility with GHC 7.4 and older\r\n\r\nVersion 0.6.2\r\n-------------\r\n\r\n*
  Add `hSupportsANSI`\r\n* Drop support for `base < 4`\r\n\r\nVersion 0.6.1.1\r\n---------------\r\n\r\nFix
  to build with GHC 7.8 on Windows\r\n\r\nVersion 0.6.1\r\n-------------\r\n\r\n*
  `BoldIntensity` no longer changes background color on Windows\r\n* `setSGR []` was
  not equivalent to `setSGR [Reset]` on Windows, even though it\r\n  should be according
  to the documentation. This is now fixed.\r\n"
basic-deps:
  base: ==4.*
  colour: -any
all-versions:
- '0.1'
- '0.2'
- '0.2.1'
- '0.3.0'
- '0.3.1'
- '0.4.0'
- '0.5.0'
- '0.5.1'
- '0.5.2'
- '0.5.3'
- '0.5.4'
- '0.5.5'
- '0.5.5.1'
- '0.6'
- '0.6.1'
- '0.6.1.1'
- '0.6.2'
- '0.6.2.1'
- '0.6.2.2'
- '0.6.2.3'
- '0.6.3'
- '0.6.3.1'
- '0.7'
- '0.7.1'
- '0.7.1.1'
- '0.8'
- '0.8.0.1'
author: Max Bolingbroke
latest: '0.8.0.1'
description-type: markdown
description: ! "ansi-terminal\r\n=============\r\n\r\nHaskell ANSI Terminal Package
  For Windows, OS X and Linux\r\n\r\nDescription\r\n-----------\r\n\r\n[ANSI](http://en.wikipedia.org/wiki/ANSI_escape_sequences)
  terminal\r\nsupport for Haskell, which allows:\r\n\r\n-   Cursor movement\r\n-   Screen
  and line clearing\r\n-   Color output\r\n-   Showing or hiding the cursor\r\n-   Changing
  the console title (though this is not strictly part of\r\n    ANSI, it is widely
  supported in Unix)\r\n\r\nIt is compatible with Windows (via an emulation layer)
  and those Unixes\r\nwith ANSI terminals.\r\n\r\nIf you like this, you may be interested
  in\r\n[ansi-wl-pprint](http://github.com/batterseapower/ansi-wl-pprint), which\r\nprovides
  a pretty-printer that can construct strings containing ANSI\r\ncolorisation.\r\n\r\nNot
  all of the ANSI escape codes are provided by this module, but most\r\n(if not all)
  of the popular and well supported ones are. For a full\r\nlist, have a look at the
  [current version of the\r\nAPI](http://github.com/feuerbach/ansi-terminal/tree/master/includes/Common-Include.hs).\r\nEach
  supported escape code or family of codes has a corresponding\r\nfunction that comes
  in three variants:\r\n\r\n-   A straight `IO` variant that doesn't take a `Handle`
  and just\r\n    applies the ANSI escape code to the terminal attached to stdout\r\n-
  \  An `IO` variant similar to above, but which takes a `Handle` to\r\n    which
  the ANSI escape should be applied\r\n-   A `String` variant that returns a literal
  string that should be\r\n    included to get the effect of the code. This is the
  only one of the\r\n    three API variants that only works on Unix-like operating
  systems:\r\n    on Windows these strings will always be blank!\r\n\r\nExample\r\n-------\r\n\r\nA
  full example is\r\n[available](http://github.com/feuerbach/ansi-terminal/tree/master/System/Console/ANSI/Example.hs),\r\nbut
  for a taste of how the library works try the following code:\r\n\r\n``` haskell\r\nimport
  System.Console.ANSI\r\n\r\nmain = do\r\n    setCursorPosition 5 0\r\n    setTitle
  \"ANSI Terminal Short Example\"\r\n\r\n    setSGR [ SetConsoleIntensity BoldIntensity\r\n
  \          , SetColor Foreground Vivid Red\r\n           ]\r\n    putStr \"Hello\"\r\n\r\n
  \   setSGR [ SetConsoleIntensity NormalIntensity\r\n           , SetColor Foreground
  Vivid White\r\n           , SetColor Background Dull Blue\r\n           ]\r\n    putStrLn
  \"World!\"\r\n```\r\n\r\n![](https://raw.githubusercontent.com/feuerbach/ansi-terminal/master/example.png)\r\n\r\nDocumentation\r\n-------------\r\n\r\nHaddock
  documentation is [available at\r\nHackage](http://hackage.haskell.org/packages/archive/ansi-terminal/latest/doc/html/System-Console-ANSI.html).\r\n\r\nCredits\r\n-------\r\n\r\nThe
  library is originally written by [Max Bolingbroke](https://github.com/batterseapower)\r\n\r\nMaintainers\r\n-----------\r\n\r\n[Mike
  Pilgrem](https://github.com/mpilgrem) and [Roman Cheplyaka](https://github.com/feuerbach)
  are the primary maintainers.\r\n\r\n[Oliver Charles](https://github.com/ocharles)
  is the backup maintainer. Please\r\nget in touch with him if the primary maintainers
  cannot be reached.\r\n"
license-name: BSD3
