homepage: http://projects.haskell.org/fsmActions/
changelog-type: ''
hash: 5d2eb292c5e3b0e6c1730fe97ae3187136c1e3b0214e05fdbe7769262ab2db03
test-bench-deps: {}
maintainer: Andy Gimblett <haskell@gimbo.org.uk>
synopsis: Finite state machines and FSM actions
changelog: ''
basic-deps:
  MissingH: -any
  base: ! '>=3 && <5'
  filepath: -any
  parsec: ! '>=3'
  graphviz: ! '>=2999.14.0.0'
  containers: -any
  fgl: ! '>=5.4.2.0'
  mtl: -any
  pretty: -any
all-versions:
- '0.1'
- 0.2.0
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
author: Andy Gimblett <haskell@gimbo.org.uk>
latest: 0.4.4
description-type: text
description: ! 'fsmActions

  ==========


  This is a library for representing and manipulating finite state

  machines (FSMs) in Haskell, with an emphasis on computing the effects

  of sequences of transitions across entire machines (which we call

  actions), and in particular investigating action equivalences between

  such sequences.


  The motivation for writing this library is investigating models of

  user interfaces; in this context, states are implicit, transitions

  correspond to UI events (e.g. button presses), and sequences of

  transitions correspond to sequences of user actions.  We''re interested

  in comparing actions, which are the effects of sequences of

  transitions across the whole device (for example, noticing when some

  action is in fact an undo); for that we need a representation geared

  towards such comparisons -- hence this library, and its idiosyncratic

  view of FSMs.


  See doc/fsmActions.pdf for more information.

'
license-name: BSD-3-Clause
