homepage: https://github.com/ixmatus/fswait
changelog-type: ''
hash: 475f144f870fa228f21d14099bea8d7e5b62adc525aa995e1f2635fea3224788
test-bench-deps: {}
maintainer: parnell@digitalmentat.com
synopsis: Wait and observe events on the filesystem for a path, with a timeout
changelog: ''
basic-deps:
  optparse-generic: ! '>=1.2 && <1.3'
  stm: ! '>=2.4.4.1 && <2.5'
  base: ! '>=4.8 && <5'
  time-units: ! '>=1.0.0 && <2.0'
  text: ! '>=0.11 && <1.3'
  semigroups: ! '>=0.18 && <0.19'
  turtle: ! '>=1.3.0 && <1.4'
  hinotify: ! '>=0.3 && <0.4'
  optparse-applicative: ! '>=0.12 && <0.15'
  system-filepath: ! '>=0.3.1 && <0.5'
all-versions:
- 1.0.0
- 1.1.0
author: Parnell Springmeyer
latest: 1.1.0
description-type: markdown
description: ! "# Welcome!\n\n[![Build Status](https://travis-ci.org/ixmatus/fswait.png)](https://travis-ci.org/ixmatus/fswait)\n\n`fswait`
  is a utility for blocking on the observation of a filesystem event for\na path with
  a timeout.\n\nThis is useful when you need to block the execution of a separate
  program on the\ncreation (or some other filesystem event) of a filepath but you
  want that block\nconstrained by a timeout.\n\nA common use-case is in systemd services,
  some daemons may need a socket or some\nother file to exist before starting and
  it is common to write shell code to\nimplement that check-and-wait-with-timeout.\n\nThis
  tool makes that pattern more easily expressed as a command line utility\ncall that
  also supports observing _many different_ filesystem events for the\nspecified path.\n\n```bash\n$
  fswait --path /etc/someconfig.ini --modify --create && echo 'Do something!'\nobserving
  Create Modify for /home/parnell/Desktop/test.sh\nthe window for an observation is
  120s\nCreated {isDirectory = False, filePath = \"someconfig.ini\"}\nDo something!\n```\n\nWhen
  an observation occurs, the utility will return immediately with an exit\ncode of
  0 and print the observed event.\n\nIf the timeout window is reached without an observation
  occurring, an exit code\nof 1 is returned.\n\n```bash\n$ fswait --help\nWait and
  observe events on the filesystem for a path, with a timeout\n\nUsage: fswait [--timeout
  Seconds] --path FILEPATH [--exists] (--access |\n              --modify | --attrib
  | --close | --closeWrite | --closeNoWrite |\n              --open | --move | --moveIn
  | --moveOut | --moveSelf | --create |\n              --delete | --onlyDir | --noSymlink
  | --maskAdd | --oneShot |\n              --all) ([--access]... | [--modify]... |
  [--attrib]... |\n              [--close]... | [--closeWrite]... | [--closeNoWrite]...
  |\n              [--open]... | [--move]... | [--moveIn]... | [--moveOut]... |\n
  \             [--moveSelf]... | [--create]... | [--delete]... | [--onlyDir]... |\n
  \             [--noSymlink]... | [--maskAdd]... | [--oneShot]... | [--all]...)\n\nAvailable
  options:\n  -h,--help                Show this help text\n  --timeout Seconds        Window
  to observe a filesystem event (default: 120s,\n                           negative
  values wait indefinitely)\n  --path FILEPATH          Observe filesystem events
  for path\n  --exists                 Return immediately if the filepath already
  exists\n```\n\n# Installing\n\nIf you have Nix you can install it using:\n\n```shell\n$
  nix-env --install --attr fswait release.nix\n```\n\n\n"
license-name: BSD-3-Clause
