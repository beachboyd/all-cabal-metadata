homepage: http://code.google.com/p/copperbox/
changelog-type: text
hash: 309c49da6f6eb268ebcbe9ed3faac18c3e25c884b0b16b7c8e29dfd8a0705fcb
test-bench-deps: {}
maintainer: Stephen Tetley <stephen.tetley@gmail.com>
synopsis: Pure Haskell PostScript and SVG generation.
changelog: ! "\n0.52.0 to 0.52.1:\n  \n  * Removed internal @(<>)@ format combinator
  that caused \n    problems for GHC 7.4.\n  \n0.51.0 to 0.52.0:\n  \n  * Added limited
  support for adding SVG ids to text and \n    Primitives.\n  \n  * Fixed types of
  @d2r@ and @r2d@ to Double for degrees, rather \n    than a parametric (Real a, Floating
  a) type. Although this is\n    less general, it removes the burden of type annotating
  the \n    common case.\n  \n  * Added the vector functions @orthoVec@, @vsum@ and
  @vdiff@ to \n    @Core.Geometry@.\n  \n  * Re-named @clip@ to @clipPrimitive@\n
  \ \n0.50.0 to 0.51.0:\n  \n  * Added special cases to handle continuity to the function
  \n    @lineDirection@ in @Core.Geometry@.\n  \n  * Added @zeroVec@ to @Core.Geometry@.\n
  \  \n  * Extended some Haddock documentation.\n  \n0.43.0 to 0.50.0:\n  \n  * Major
  change hence the version number jump - the notion of \n    parametric unit has been
  removed from the @Picture@ objects \n    (it for remains the @Geometric@ objects
  @Point2@, @Vec2@ etc.). \n    Certain useful units, e.g. @em@ and @en@, are contextual
  on \n    the \\\"current point size\\\", and having a parametric unit here \n    was
  actually a hinderance to supporting units properly in \n    higher-level layers.
  Now all Picture objects (those defined \n    or exported from @Core.Picture@) are
  fixed to use Double \n    - representing PostScript points. Higher level layers
  that \n    intend to support alternative units must translate drawing \n    objects
  to PostScript point measurements /before/ calling the \n    Picture API. Geometric
  objects - objects defined in \n    @Core.Geometry@, e.g. @Point2@, @Vec2@ - are
  still polymorphic \n    on unit. \n    \n  * Picture API change - Various function
  names changed.\n    @lineTo@ becomes @absLineTo@ and @curveTo@ becomes \n    @absCurveTo@.
  The path builders are qualified with /Prim/, \n    @vertexPath@ becomes @vertexPrimPath@,
  @vectorPath@ becomes \n    @vectorPrimPath@, @emptyPath@ becomes @emptyPrimPath@
  and \n    @curvedPath@ becomes @curvedPrimPath@. @xlink@ becomes \n    @xlinkPrim@.\n
  \  \n  * API change - @PtSize@ data type replaced by @AfmUnit@ for font \n    measurements.\n
  \ \n  * API and representation change - clipping paths are represented\n    as @Primitive@
  constructor rather than a @Picture@ constructor.\n    This should make them more
  useful. The type of the function \n    @clip@ in @Core.Picture@ has likewise changed.\n
  \ \n  * Picture API change - changed @primPath@ to @absPrimPath@, added\n    the
  functions @relPrimPath@, @relLineTo@, @relCurveTo@.\n   \n  * Added the class @Tolerance@
  to @Core.Geometry@ and made the Eq \n    instances of @Point2@, @Vec2@ and @BoundingBox@
  tolerant. \n    Tolerance accounts for a fairly lax equality on floating point \n
  \   numbers - it is suitable for Wumpus (printing) where high \n    accuracy is
  needed.\n  \n0.42.1 to 0.43.0:\n  \n  * API change - the function @bezierCircle@
  in @Core.Geometry@\n    has changed. It now implements a better method of drawing
  \n    circles with Bezier curves and no longer needs the \n    subvision factor.
  The old circle drawing function has been \n    retained as @subdivisionCircle@ as
  it is useful for \n    corroborating @bezierCircle@, but the general use of \n    @subdivisionCircle@
  should be avoided.\n   \n  * Added a function @bezierEllipse@ to @Core.Geometry@.\n\n0.42.0
  to 0.42.1:\n\n  * Fixed bug in the @curvedPath@ function in @Core.Picture@\n    where
  the wrong relative point was being calculated for the \n    second control point.\n\n
  \ * Changed internals of the @EscapedText@ type so it supports \n    efficient concatenation,
  and now has a Monoid instance.\n \n0.41.0 to 0.42.0:\n\n  * Removed the function
  @oboundingBox@ from @Core.BoundingBox@.\n    It was unused in Wumpus-Core and had
  unwise error handling \n    baked-in.\n\n  * Renamed @direction@ in @Wumpus.Core.Geometry@,
  it is now \n    @vdirection@.\n\n  * Fixed internal Foldable instances for JoinList.
  The left and\n    right folds worked in the wrong direction.\n\n  * Some improvements
  to the Haddock documentation. \n\n0.40.0 to 0.41.0:\n\n  * Changed PostScript output
  to use pre-defined procedures for \n    circles and ellipses. This should be a significant
  \n    optimization for drawings that have many circles or ellipses.\n    For drawings
  that do not use circles or ellipses, it adds \n    circa. 75 lines to the generated
  PostScript which is \n    tolerable.\n\n  * API change - @Core.Text.Base@ no longer
  exports the \n    constructor and field label for @EscapedText@, it is now an \n
  \   opaque type. For a building @EscapedText@ either the existing \n    /safe/constructor
  @escapeString@ or the new function \n    @wrapEscChar@ should be used. For destructing
  @EscapedText@ \n    there is a new function @destrEscapedText@.\n\n  * API change
  - the argument order of the functions @rtextlabel@ \n    and @rescapedlabel@ in
  @Core.Picture@ has changed. The order \n    of angle of rotation and the baseline-left
  has been swapped so \n    that angle of rotation is first. This matches the other
  \n    rotated graphics in @Core.Picture@.\n\n  * Upper bounds of Cabal build depends
  relaxed a bit.\n \n  * Added the @UNil@ type to @Core.Geometry@ and added affine
  \n    instances for the UNil type, plus Maybe and Pair. @UNil@ is\n    useful for
  higher-level drawing (it is used extensively in\n    Wumpus-Basic).\n\n  * Added
  the function @emptyPath@ to @Core.Picture@. This creates \n    a /null path/ with
  an empty list of path segments. Null paths \n    still need a start point - this
  is minimum needed for bounding \n    box calculation. Improved the PostScript and
  SVG output so \n    there is no code generated for empty paths and textlabels.\n\n
  \ * Added @vectorPath@ to @Core.Picture@.\n\n  * Added @boundaryCenter@ to @Core.BoundingBox@.\n\n
  \ * Improved generated SVG code generation for ellipses / circles.\n\n0.37.0 to
  0.40.0: \n\n  * Text handling substantially revised. SVG text output is now \n    better
  aligned to Unicode. The encoding tables for PostScript\n    have been re-thought,
  the previous implementation had some \n    serious design flaws that should now
  be rectified.\n\n  * The rules for escaping special characters has been clarified.\n
  \   Previously the documentation suggested \n    @ampersand-name-semicolon@ could
  be used to escape glyph names\n    however only @ampersand-hash-name-semicolon@
  worked.\n    @ampersand-name-semicolon@ is now the correct way. The \n    ampersand-hash
  prefix is for numeric literals - \n    @ampersand-hash-num_literal-semicolon@.\n\n
  \ * Versions of the textlabel functions have been added to \n    @Core.Picture@
  for escape-parsed text. It is useful for \n    higher-level software to escape the
  text, do some calculations \n    then render it - going back to un-escaped text
  for the \n    rendering would be inefficient.\n\n  * The internal representation
  of paths has changed. They are now \n    represented as start-point plus list of
  /relative/ path \n    segments rather than start-point plus list of absolute path
  \n    segments. Using relative path segments makes it cheaper to\n    move paths
  with @translate@, although calculating the bounding\n    box and rendering to PostScript
  is more expensive. The \n    rationale for the change is that to make complex pictures,
  \n    paths are potentially moved many times but the other \n    operations are
  only performed once.\n\n  * Internal change to Primitives and the PrimCTM - ellipses
  and\n    labels no longer have a point (center or baseline left)\n    as an element
  in the datatype, the point is now represented \n    within the PrimCTM.\n\n  * Name
  change to @Core.Picture@ API - the path construction \n    function @path@ has been
  renamed to @primPath@.\n\n  * Name change in @Core.FontSize@, the function @textBoundsEnc@\n
  \   has been renamed to @textBoundsEsc@. Wumpus-Core now calls \n    strings that
  have been parsed for escape characters \n    /Escaped Text/ rather than /Encoded
  Text/.\n\n  * Fixed bug where ellipse rotation and scaling calculated the \n    wrong
  bounding box.\n \n  * Fixed bug in @illustrateControlPoints@ where the control points\n
  \   were drawn but the original primitive was lost. \n\n  * Added initial support
  for arbitrary SVG attributes (e.g. \n    onmouseover handlers) via @annotateGroup@
  in @Core.Picture@. \n    Arbitrary SVG \\\"defs\\\" can be written into the defs
  prologue \n    by using @writeSVG_defs@ instead of @writeSVG@. This \n    functionality
  is mostly untested!\n\n0.36.0 to 0.37.0:\n\n  * The bounding box constructors have
  been renamed - @bbox@ is \n    now @boundingBox@ and @obbox@ becomes @oboundingBox@.
  The \n    rationale for this change is that the names very cryptic in \n    the
  first place and the constructors are used infrequently \n    when @bbox@ in particular
  makes a descriptive variable name.\n\n  * Changes to the Picture and Primitive types
  to enable better\n    concatenation which is used heavily by Wumpus-Basic. The \n
  \   Picture API exposes a new function @primCat@.\n\n  * SVG /font delta context/
  change - font deltas are now \n    annotated on Primitives not Pictures. The type
  of the \n    function @fontDeltaContext@ in @Core.Picture@ has changed \n    accordingly.\n\n
  \ * SVG hyperlink change - hyperlinks no longer group primitives\n    (although
  a group of primitives can be hyperlinked). The \n    function @xlinkGroup@ has been
  removed from @Core.Picture@, \n    it is replaced by @xlink@.\n\n  * @Core.Picture@
  - the argument order for the function \n    @rtextlabel@ has been changed, the positions
  of the angle and \n    bottom-left corner have been swapped.\n\n0.35.0 to 0.36.0:\n\n
  \ * API / behaviour change - rotation on primitives changed. New \n    functions
  have been added to create rotated text labels and \n    ellipses (@rtextlabel@,
  @rstrokeEllipse@, etc.), and \n    Primitives have been made instances of the Affine
  classes\n    except for the general matrix Transform class. The old\n    functions
  for transforming Primitives (@rotatePrim@, \n    @scalePrim@, etc.) have been removed.
  The demos (Rotated.hs,\n    Scaled.hs, Translated.hs) have been removed as they
  pertain \n    to the old behaviour, there are new demos highlighting the\n    new
  behaviour (TransformEllipse.hs, etc.).\n\n  * Major change - removed the PrimElement
  type. The (opaque) \n    Primitive type has been changed to incorporate a grouping
  \n    constructor equivalent to PrimElement\\'s @XLinkGroup@ \n    contructor. The
  change has made the implementation of SVG \n    hyperlinks more efficient, but has
  forced various type \n    signatures to change in @Core.Picture@. Client code will
  \n    also have to change type signatures - @PrimElement@ becomes\n    @Primitive@.\n\n
  \ * @Core.PtSize@ - the class @FromPtSize@ has been given a @Num@\n    superclass
  constraint. This can shorten type signatures of \n    functions that use @fromPtSize@.\n\n
  \ * Corrected a bug where textlabels would generate an invalid\n    bounding box
  and cause a runtime error when supplied with an\n    empty string. Now there is
  no runtime error - and /no-ops/ \n    are generated in the output.\n\n  * Internal
  changes - moved @PrimCTM@ from @Core.PictureInternal@\n    into separate module.
  Moved /utility/ modules into their own \n    directory @Utils@. Move /text/ modules
  into their own \n    directory @Text@. \n\n  * Removed dependency on @algebra@ for
  @Semigroup@. The \n    equivalent @append@ operation on @BoundingBox@ is \n    @boundaryUnion@.\n\n
  \ * Renamed the @Core.GraphicsState@ to @Core.GraphicProps@. \n    Moved the property
  datatypes from @Core.PictureInternal@ into \n    @Core.GraphicProps@ (StrokeProps,
  LabelProps, etc.).\n\n  * Moved @wumpus_default_font@ from @Core.Picture@ into \n
  \   @Core.Graphic.Props@.\n\n  * Haddock docs improved.\n\n0.34.0 to 0.35.0:\n\n
  \ * Bug fix - PostScript output - when more than one stroke \n    property changed
  the changes were concatenated without \n    a separator. This generated invalid
  PostScript. Now fixed.\n\n  * Documentation updates to the guide and the Haddock
  docs.\n\n0.33.0 to 0.34.0:\n\n  * Clipping paths fixed. Previously they did not
  work for SVG or\n    PostScript.\n\n  * @picOver@ fixed. Drawing order was changed
  in version 0.33.0, \n    but @picOver@ was not updated accordingly (so it actually
  \n    started drawing pictures /under/). It now works correctly.\n\n  * The lexer
  for escape characters embedded in label strings has \n    been rewritten. It now
  supports octal and hexadecimal codes.\n  \n\n0.32.0 to 0.33.0:\n\n  * Major change
  - reworked support for text encoding. Encoding \n    maps are now linked with fonts
  - it was spotted that the \n    Symbol font does not use the Latin1 names. The @TextEncoder@
  \n    data type has been changed and there is a new @FontEncoder@ \n    data type.
  There are also new modules for the Symbol Font \n    encoder table and for the /Default
  Encoder/ which \n    accommodates both Latin1 and the Symbol font. This has also
  \n    mandated changes to the @FontFace@ data type.\n \n  * Major change - the printing
  order has been changed. The first \n    element in a @frame@ of Prims is draw first.
  This means it \n    appears first in the output file (this makes sense) - it also
  \n    means it is at the back in the Z-Order. This latter point \n    might not
  be so intuitive, but changing the printing order at \n    least makes Wumpus-Core
  match SVG and PostScript.\n\n  * Changed the visiblity of the new colours (yellow,
  cyan, \n    magenta) to be hidden at the top level. They can be exposed\n    by
  importing @Wumpus.Core.Colour@. \n\n  * @Wumpus.Core.FontSize@ - added @spacerWidth@
  function.\n\n0.31.0 to 0.32.0:\n\n  * Major API changes to @Core.Picture@ for XML
  hyperlinks.\n    Hyperlinks now group one-or-more Primitives (path or label), \n
  \   instead of being attached to a single Primitive. This better\n    corresponds
  with XML but it has made the Picture type more \n    complicated, and has mandated
  significant changes to the \n    Picture API. All the hyperlink variants of the
  Primitive \n    constructors have been removed (xcstroke, xfill, xtextlabel, \n
  \   ...), and hyperlinks are now created with @xlinkGroup@. \n\n  * The type signatures
  for the /primitive/ constructors (fill, \n    cstroke, textlabel, ...) in the Picture
  API have changed and \n    are now more complicated as there is an extra layer of
  \n    indirection in the type hierarchy.\n\n  * The primitive constructors for filled
  and stroked paths and \n    ellipses have been renamed: @bordered@ is now @fillStroke@,\n
  \   @borderedEllipse@ is now @fillStrokeEllipse@.\n\n  * @Core.FontSize@ - the arguments
  to the function @textBounds@\n    have been changed to take the String in question,
  rather than \n    its precomputed length. The size of the string is then \n    calculated
  with the new function @charCount@ which takes into \n    account escaped characters.\n\n
  \ * Added @yellow@, @cyan@ and @magenta@ to the predefined \n    colours in @Core.Colour@.\n\n0.30.0
  to 0.31.0:\n\n  * Extended the label type to optionally handle horizontal\n    or
  vertical \\\"kerning\\\". This can be efficiently implemented \n    in SVG.\n\n
  \ * Major API change - the Primitive constructors defined in \n    @Core.PictureLanguage@
  are no longer overloaded (@cstroke@, \n    @ostroke@, @fill@, @textlabel@, @ellipse@).
  The respective \n    classes (@Stroke@, @TextLabel@, @Ellipse@) have been removed\n
  \   and the constructors now have monomorphic types. This is \n    because Wumpus-Core
  now only has one colour type and stroke\n    attributes are now a single type, so
  polymorphism became\n    less useful (and the simplicity of monomorphic types became\n
  \   more favourable). @ellipse@ is no longer a constructor \n    instead there variants
  @fillEllipse@ and @strokeEllipse@.\n\n  * Added support for /bordered/ closed paths
  - i.e. paths that\n    are both stroked and filled. These can be efficiently drawn
  \n    in SVG with a single @path@ element.\n\n  * Changed StrokeAttr representation
  to be a regular data type\n    rather than a list of /deltas/ - i.e. differences
  to the \n    graphics state.\n\n  * Added SVG font attribute /delta optimizations/
  to help reduce \n    SVG code size - via the @fontDeltaContext@ function in \n    @Core.Picture@.
  This functionality was partially inplemented \n    in the last release using the
  @GSUpdate@ datatype - this \n    datatype it is now called @FontCtx@.\n\n  * Some
  internal work documenting text encoding.\n\n0.23.0 to 0.30.0:\n\n  * Substantial
  changes - the output machinery has been heavily \n    modified, the intention was
  to reduce the use of matrix \n    transformations in SVG output. Though this goal
  has not been \n    achieved, some code-size improvements in the SVG output have
  \n    been made. \n\n  * The code generation monads have been changed - Wumpus no
  \n    longer uses a writer monad for code generation, but it will\n    keep the
  Wumpus name.\n\n  * Added support for hyperlinks in the SVG output.\n\n  * Improved
  internal pretty printing and added the function \n    @printPicture@ for debugging.\n\n
  \ * The @Core.Colour@ module has been simplified to support just \n    one (new)
  type - RGBi, and the conversion type class \n    @PSColour@ has been eliminated.\n\n
  \ * @Core.Picture@ - the type of the @frame@ function has been \n    changed to
  take a list of Primitives rather than a single \n    Primitive. The function @frameMulti@
  which previously \n    provided this functionality has been removed. SVG hyperlinks\n
  \   are now supported for Primitives. \n \n  * The default font size has been changed
  to 14 pt. \n\n  * The Path datatype has been renamed PrimPath, likewise Ellipse
  \n    is now PrimEllispe and Label becomes PrimLabel.\n\n  * @Core.Geometry@ now
  longer defines an affine frame datatype.\n\n  * @Core.BoundingBox@ module changed
  significantly. The corner \n    functions (@boundaryBottomLeft@, etc.) have been
  removed, \n    along with the plane functions (@leftPlane@, etc.). Some \n    functions
  have been given more verbose names - @corners@ is \n    now @boundaryCorners@, @within@
  is now @withinBoundary@ and \n    @union@ is now @boundaryUnion@. \n\n0.22.0 TO
  0.23.0:\n \n  * @Basic.GraphicsState@ - extracted the font face fields from \n    @FontAttr@
  datatype into a separate datatype @FontFace@.\n \n  * Added @PtSize@ a numeric type
  wrapping Double. This is \n    specifically for text size calculations, vis the
  \n    @Core.FontSize@ module.\n\n  * Changed all functions in @Core.FontSize@ to
  return @PtSize@\n    instead of a polymorphic type @u@ (where @u@ is an instance
  \n    of Fractional). To get to another unit type rather than \n    FontSize use
  an explicit conversion that scales the value \n    accordingly.\n\n  * Added FromPtSize
  class constraints to various functions in\n    @Core.Picture@.\n\n  * Added @charWidth@
  to @Core.FontSize@.\n\n  * Added @vlength@ to @Core.Geometry@\n\n0.21.0 to 0.22.0:\n\n
  \ * Moved the deprecated module @Wumpus.Extra.PictureLanguage@\n    into the package
  Wumpus-Basic along with the example \n    @Picture.hs@.\n\n  * Added vec as a synonym
  for the constructor V2.\n\n  * Changed some of the Core.FontSize to use better terminology.
  \n    Thus some of the constants have changed. Added a new example\n    @FontMetrics.hs@
  to illustrate how FontSize works. \n    Particularly, the function @capHeight@ has
  been replaced with\n    the function @numeralHeight@ which has better semantics.\n\n
  \ * The CTM data type and ToCTM class are now hidden in the\n    top-level import
  module @Wumpus.Core@. They can be accessed\n    by importing @Wumpus.Core.GraphicsState@
  directly.\n\n  * Exposed the PSUnit type class. \n\n0.20.0 to 0.21.0:\n\n  * Removed
  the Primitive instances of the Affine transformation \n    classes. They have been
  replaced with special transformation \n    functions: @rotatePrimitive@, @scalePrimitive@,
  \n    @translatePrimitive@. As Primitives are not in an affine \n    frame until
  they are lifted to Pictures the affine instances \n    had ill-conceived semantics.\n\n
  \ * Due to changes to accommodate the new non-affine  \n    transformations, many
  of the class obligations have changed \n    on the @unit@ of Pictures, Primitives,
  Bounding Boxes etc. \n    Generally many class contexts that previously required
  \n    Fractional and Ord on the unit have changed to Real and \n    Floating.\n\n
  \ * Removed demo/AffineTest04.hs - there is no longer a \n    @rotateAbout@ operation
  on Primitives as they do not exist \n    in an affine frame until they they are
  lifted to Pictures.\n    Added - Scaled.hs, Rotated.hs, Translated,hs.\n \n  * Removed
  the UndecidableInstances pragma from \n    Core.PictureInternal. It looks like Core.Geometry
  will always \n    needs UndecidableInstances though.\n\n  * Removed the Ord superclass
  constriant from the @Stroke@ and\n    @Fill@ classes and derived operations (e.g.
  @zostroke@).\n\n0.19.0 to 0.20.0:\n  \n  * Removed the modules:\n    (1) Wumpus.Extra.SafeFonts\n
  \   (2) Wumpus.Extra.SVGColours@\n    (3) Wumpus.Extra.X11Colours \n    - they are
  now in the package @wumpus-basic@.\n  \n  * Removed the example FontPic.hs to @wumpus-basic@.\n
  \ \n  * Renamed some functions in Core.BoundingBox: \n    (1) @trace@ changed to
  @traceBoundary@, (2) @retrace@ \n    changed to @retraceBoundary@.\n   \n  * Fixed
  bug with @picOver@, previously the zorder was wrong \n    and the function was actually
  working as /picUnder/. \n  \n  * Added @capHeight@ to FontSize - get the size of
  an upper \n    case letter without ascenders of descenders.\n  \n  * Guide updated
  regarding the new package @wumpus-basic@.\n  \n0.18.0 to 0.19.0:\n  \n  * Added
  @Transform@ type class to apply a matrix transformation\n    directly.\n  \n  *
  Changed the ordering of picture drawing in PostScript and SVG\n    output so the
  list gets drawn from tail to head with right \n    folds. This makes the list order
  of pictures match their \n    zorder.\n  \n  * Renamed the function @withinBB@ (Core.BoundingBox)
  to \n    @within@.\n  \n  * On many type signatures with e.g. Points, I\\'ve changed
  the \n    parameter name on the type constructor from @a@ to @u@.\n    This is to
  indicate that @u@ is some unit - almost always a\n    Double. e.g @Point2 a@ becomes
  @Point2 u@ and all the class\n    obligations change lexically as well @Floating
  a =>@ to \n    @Floating u =>@. Superficially this means a lot of type \n    signatures
  have diffs but haven\\'t really changed. \n  \n  * Added function @bezierCircle@
  to generate the Bezier curve \n    points for arcs describing a circle.\n  \n  *
  Added new demo - MultiPic. The PostScript it generates\n    is efficient - no extraneous
  use of @concat@. \n  \n  * Added wumpus_default_font constant.\n\n\n0.17.0 to 0.18.0:\n
  \ \n  * Added instances of the affine operation classes (Scale, \n    Rotate ...)
  for Primitives (path, text label, ellipse).\n\n  * Added some picture composition
  functions to Core.Picture.\n    These are useful for testing where the type class
  \n    complications of Extra.PictureLanguage are an overhead.  \n\n  * Added iRGB
  to Core.Colour - create RGB colours with \n    integer components [0..255] - and
  iHSB, iGrey.\n\n  * Added some test modules for the affine transformations.\n    These
  illustrate a quirk in Wumpus where, under affine \n    transformation, Pictures
  may generate a larger bounding box \n    than composite primitives.\n\n  * Minor
  change - ztextlabal changed to use 24pt type rather \n    than 12pt. \n\n  * Corrected
  the cabal file to include the correct files for \n    the manual. The Haskell source
  file @WorldFrame.hs@ was \n    missing with the generated file @WorldFrame.eps@
  incorrectly \n    included instead.\n\n0.16.0 to 0.17.0:\n  \n  * Added Core.WumpusTypes
  to export opaque versions of\n    datatypes from Core.PictureInternal. This should
  make\n    the Haddock documentation more cohesive.\n   \n  * Moved the Core.PictureLanguage
  module into the Extra\n    namespace (Extra.PictureLanguage). This module may change\n
  \   in detail, if not in spirit in the future as I'm not \n    very happy with it.
  Also this module is somewhat \n    \\\"higher-level\\\" than the modules in wumpus-core,
  so \n    a different home seems fitting. \n   \n  * Removed CardinalPoint and boundaryPoint
  from BoundingBox.\n  \n  * Argument order of 'textlabel' and 'ztextlabel' changed
  so\n    that Point2 is the last argument.\n  \n  * PathSegment constructor names
  changed - this is an internal\n    change as the constructors are not exported.\n
  \ \n  * Primitive type changed - moved Ellipse properties into \n    PrimEllipse
  type - internal change.\n  \n  * Removed dependency on \\'old-time\\'.\n\n0.15.0
  to 0.16.0:\n\n  * Additions to Core.Geometry (direction, pvec, vangle, \n    circularModulo).\n\n
  \ * Fixed error with langle due to not accounting for circle \n    quadrants in
  Core.Geometry.\n\n  * Point2 now derives Ord - so it can be used as a key for\n
  \   Data.Map.\n\n  * Added escape-character handling to text output in PostScript.\n
  \   This was causing a nasty bug where a drawing would completely\n    fail when
  special chars shown (GhostView gives little hint of \n    what is wrong when such
  errors are present).\n \n  * Changed BoundingBox operation 'corners' to return a
  4-tuple\n    rather than a list.\n  \n  * Added centeredAt to PictureLanguage\n\n\n0.14.0
  to 0.15.0:\n\n  * Added Named colours and \"safe fonts\" from wumpus-extra.\n  \n
  \ * Added wumpus_core_version to track version number.\n\n0.13.1 to 0.14.0:\n\n
  \ * Added draft user guide. \n  \n  * Argument order changed for @ellipse@ and @zellispe@
  in\n    Wumpus.Core.Picture. \n  \n  * Removed dependency on Data.Aviary.\n  \n
  \ * Removed DList dependency.\n\n0.13.0 to 0.13.1:\n\n  * Wumpus.Core.SVG changed
  path_s to path_c - \\'S\\' was the \n    wrongSVG command to match PostScript\\'s
  @curveto@.\n\n0.12.0 to 0.13.0:\n\n  * More Haddock documenting. \n\n  * @lowerLeftUpperRight@
  removed from \"Wumpus.Core.BoundingBox\".\n\n  * Added range checking and Ord obligation
  t to the @bbox@ \n    \\'smart\\' constructor.\n\n  * Numeric instances for \"Wumpus.Core.Colour\"
  improved.\n\n  * MatrixMult type class simplified\n\n  * Dash Pattern made a list
  of on-off pairs rather than just a \n    list \n\n  * The modules - Wumpus.Core.PictureInternal,
  Wumpus.Core.PostScript,\n    Wumpus.Core.SVG & Wumpus.Core.Utils - are no longer
  exposed.\n\n  * Various operators in \"Wumpus.Core.PictureLanguage\" changed.\n\n
  \ * Wumpus.Core.TextEncoding split into an internal and a public \n    module (internal
  - Wumpus.Core.TextEncodingInternal, public - \n    Wumpus.Core.TextEncoder).\n"
basic-deps:
  base: <4.8
  time: ! '>=1.1.3 && <1.6'
  vector-space: ! '>=0.6 && <1.0'
  containers: ! '>=0.3 && <=0.6'
all-versions:
- 0.12.0
- 0.13.0
- 0.13.1
- 0.14.0
- 0.15.0
- 0.16.0
- 0.17.0
- 0.18.0
- 0.19.0
- 0.20.0
- 0.21.0
- 0.22.0
- 0.23.0
- 0.30.0
- 0.31.0
- 0.32.0
- 0.33.0
- 0.34.0
- 0.35.0
- 0.36.0
- 0.37.0
- 0.40.0
- 0.41.0
- 0.42.0
- 0.42.1
- 0.43.0
- 0.50.0
- 0.51.0
- 0.52.0
- 0.52.1
author: ''
latest: 0.52.1
description-type: haddock
description: ! '

  Wumpus-Core is a low-level library for generating static 2D

  vector pictures, its salient feature is portability due to no

  FFI dependencies. It can generate PostScript (EPS) files and SVG

  files. The generated PostScript code is plain and someways

  efficient as the use of stack operations, i.e @gsave@ and

  @grestore@, is minimized (unfortunately there is no sharing

  so the generated PostScript can be huge...).


  Although Wumpus-Core only generates vector output, the generated

  PostScript can be interpreted by GraphicsMagick or a similar

  tool to convert EPS files into bitmap image files (e.g JPEGs).


  Wumpus-Core makes pictures from /paths/ and text /labels/. Paths

  themselves are made from points. The usual affine

  transformations (rotations, scaling, translations) can be

  applied to Pictures. Unlike PostScript there is no notion of a

  current point, Wumpus-Core builds pictures by direct

  positioning of each element.


  GENERAL DRAWBACKS...


  For actually building pictures, diagrams, etc. Wumpus-Core is

  very low-level. There are two supplementary packages

  @Wumpus-Basic@ and @Wumpus-Drawing@ also on Hackage that aim to

  be a higher-level basis for creating certain types of diagram,

  but they are experimental - functionality is added and dropped

  between releases and curently the API is too unstable to write

  code upon (they should be considered a technology preview rather

  than re-usable libraries).


  Also, some of the design decisions made for Wumpus-Core are not

  sophisticated - e.g. how path and text attributes like colour

  are handled, and how the bounding boxes of text labels are

  calculated. Compared to other systems, Wumpus might be rather

  limited, however, the design permits a fairly simple

  implementation.



  Changelog:


  v0.52.0 to v0.52.1:


  * Removed internal @(<>)@ format combinator that caused

  problems for GHC 7.4.


  v0.51.0 to v0.52.0:


  * Added limited support for adding SVG ids to text and

  Primitives.


  * Fixed types of @d2r@ and @r2d@ to Double for degrees, rather

  than a parametric (Real a, Floating a) type. Although this is

  less general, it removes the burden of type annotating the

  common case.


  * Added the vector functions @orthoVec@, @vsum@ and @vdiff@ to

  @Core.Geometry@.


  * Re-named @clip@ to @clipPrimitive@


  v0.50.0 to v0.51.0:


  * Added special cases to handle continuity to the function

  @lineDirection@ in @Core.Geometry@.


  * Added @zeroVec@ to @Core.Geometry@.


  * Extended some Haddock documentation.


  v0.43.0 to v0.50.0:


  * Major change hence the version number jump - the notion of

  parametric unit has been removed from the @Picture@ objects

  (it for remains the @Geometric@ objects @Point2@, @Vec2@ etc.).

  Certain useful units, e.g. @em@ and @en@, are contextual on

  the \"current point size\", and having a parametric unit here

  was actually a hinderance to supporting units properly in

  higher-level layers. Now all Picture objects (those defined

  or exported from @Core.Picture@) are fixed to use Double

  - representing PostScript points. Higher level layers that

  intend to support alternative units must translate drawing

  objects to PostScript point measurements /before/ calling the

  Picture API. Geometric objects - objects defined in

  @Core.Geometry@, e.g. @Point2@, @Vec2@ - are still polymorphic

  on unit.


  * Picture API change - Various function names changed.

  @lineTo@ becomes @absLineTo@ and @curveTo@ becomes

  @absCurveTo@. The path builders are qualified with /Prim/,

  @vertexPath@ becomes @vertexPrimPath@, @vectorPath@ becomes

  @vectorPrimPath@, @emptyPath@ becomes @emptyPrimPath@ and

  @curvedPath@ becomes @curvedPrimPath@. @xlink@ becomes

  @xlinkPrim@.


  * API change - @PtSize@ data type replaced by @AfmUnit@ for font

  measurements.


  * API and representation change - clipping paths are represented

  as @Primitive@ constructor rather than a @Picture@ constructor.

  This should make them more useful. The type of the function

  @clip@ in @Core.Picture@ has likewise changed.


  * Picture API change - changed @primPath@ to @absPrimPath@, added

  the functions @relPrimPath@, @relLineTo@, @relCurveTo@.


  * Added the class @Tolerance@ to @Core.Geometry@ and made the Eq

  instances of @Point2@, @Vec2@ and @BoundingBox@ tolerant.

  Tolerance accounts for a fairly lax equality on floating point

  numbers - it is suitable for Wumpus (printing) where high

  accuracy is needed.


  v0.42.1 to v0.43.0:


  * API change - the function @bezierCircle@ in @Core.Geometry@

  has changed. It now implements a better method of drawing

  circles with Bezier curves and no longer needs the

  subvision factor. The old circle drawing function has been

  retained as @subdivisionCircle@ as it is useful for

  corroborating @bezierCircle@, but the general use of

  @subdivisionCircle@ should be avoided.


  * Added a function @bezierEllipse@ to @Core.Geometry@.

'
license-name: BSD-3-Clause
