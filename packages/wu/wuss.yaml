homepage: https://github.com/tfausak/wuss#readme
changelog-type: markdown
hash: ba9a991d48ba5940b9811f32a02b0381a56556e2c0ea8f4eb8cffdea28ef7b0f
test-bench-deps: {}
maintainer: Taylor Fausak
synopsis: Secure WebSocket (WSS) clients
changelog: ! '# Change log


  Wuss uses [Semantic Versioning][].

  The change log is available through the [releases on GitHub][].


  [Semantic Versioning]: http://semver.org/spec/v2.0.0.html

  [releases on GitHub]: https://github.com/tfausak/wuss/releases

'
basic-deps:
  bytestring: ! '>=0.10.8 && <0.11'
  base: ! '>=4.9.0 && <4.12'
  network: ! '>=2.6.3 && <2.7'
  websockets: ! '>=0.9.7 && <0.13'
  connection: ! '>=0.2.6 && <0.3'
all-versions:
- '1.0.0'
- '1.0.1'
- '1.0.2'
- '1.0.4'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.1.4'
- '1.1.5'
- '1.1.6'
- '1.1.7'
- '1.1.8'
author: ''
latest: '1.1.8'
description-type: markdown
description: ! "# [Wuss][]\n\nSecure WebSocket (WSS) clients in Haskell.\n\n[![Version
  badge][]][version]\n[![Build badge][]][build]\n\n---\n\nWuss is a library that lets
  you easily create secure WebSocket clients over the\nWSS protocol. It is a small
  addition to [the `websockets` package][] and is\nadapted from existing solutions
  by [@jaspervdj][], [@mpickering][], and\n[@elfenlaid][].\n\n-   [Installation](#installation)\n-
  \  [Usage](#usage)\n\n## Installation\n\nTo add Wuss as a dependency to your package,
  add it to your Cabal file.\n\n```\nbuild-depends: wuss\n```\n\nFor other use cases,
  install it with Cabal.\n\n``` sh\n$ cabal install wuss\n```\n\nWuss uses [Semantic
  Versioning][]. See [the change log][] for a detailed list\nof changes.\n\n## Usage\n\n```
  hs\nimport Wuss\n\nimport Control.Concurrent (forkIO)\nimport Control.Monad (forever,
  unless, void)\nimport Data.Text (Text, pack)\nimport Network.WebSockets (ClientApp,
  receiveData, sendClose, sendTextData)\n\nmain :: IO ()\nmain = runSecureClient \"echo.websocket.org\"
  443 \"/\" ws\n\nws :: ClientApp ()\nws connection = do\n    putStrLn \"Connected!\"\n\n
  \   void . forkIO . forever $ do\n        message <- receiveData connection\n        print
  (message :: Text)\n\n    let loop = do\n            line <- getLine\n            unless
  (null line) $ do\n                sendTextData connection (pack line)\n                loop\n
  \   loop\n\n    sendClose connection (pack \"Bye!\")\n```\n\nFor more information
  about Wuss, please read [the Haddock documentation][].\n\n[Wuss]: http://taylor.fausak.me/wuss/\n[Version
  badge]: https://www.stackage.org/package/wuss/badge/nightly?label=version\n[version]:
  https://www.stackage.org/package/wuss\n[Build badge]: https://travis-ci.org/tfausak/wuss.svg?branch=master\n[build]:
  https://travis-ci.org/tfausak/wuss\n[the `websockets` package]: https://hackage.haskell.org/package/websockets\n[@jaspervdj]:
  https://gist.github.com/jaspervdj/7198388\n[@mpickering]: https://gist.github.com/mpickering/f1b7ba3190a4bb5884f3\n[@elfenlaid]:
  https://gist.github.com/elfenlaid/7b5c28065e67e4cf0767\n[semantic versioning]: http://semver.org/spec/v2.0.0.html\n[the
  change log]: CHANGELOG.md\n[the haddock documentation]: https://hackage.haskell.org/package/wuss\n"
license-name: MIT
