homepage: http://code.google.com/p/copperbox/
changelog-type: text
hash: 8cadea0c795a26e777916037e71823cd30ca73648d933d4e3277b277b0ce312a
test-bench-deps: {}
maintainer: Stephen Tetley <stephen.tetley@gmail.com>
synopsis: Basic objects and system code built on Wumpus-Core.
changelog: ! "\n0.20.0 to 0.21.0:\n\n  * The code from the @Kernel.Base.UserState@
  module has been \n    moved to the module @Kernel.Drawing.Basis@.\n\n  * Moved @Image@
  and @Query@ from @Objects.Basis@ to new module\n    @Objects.Image@. Moved @Chain@,
  @CtxPicture@ and \n    @TraceDrawing@ into the new @Drawing@ folder.\n\n  * Added
  @Wumpus.Basic.Kernel.Drawing.LocDrawing@ module.\n \n  * Rationalized the combinators
  exported by the drawing objects \n    @Image@, @LocImage@, @LocThetaImage@ and @Connector@.\n
  \n\n0.18.0 to 0.20.0 (no release numbered v0.19.0):\n\n  * Added text advance-vector
  calculations to @QueryDC@ - \n    previously they were in Wumpus-Drawing.\n \n  *
  Changed argument order of @run@ functions to follow the usual\n    style - monadic
  action first and then dependent parameters \n    (initial state, reader environment
  etc.).\n \n  * Changed representation of Chains to a monadic type with an \n    explicit
  operation for next position.\n\n  * Removed @PrimW@ type - pairs are now used instead.
  \n\n  * Removed transformer version of @TraceDrawing@. All operations \n    in TraceDrawing
  are now specialized to work only on the \n    @TraceDrawing@ type. Added @UserState@
  to TraceDrawing and\n    other drawing monads to compensate for the loss of\n    expressiveness.\n\n
  \ * Changed the internals of @AdvObject@ and @PosObject@ so they \n    are more
  idiomatic - both are now essentially reader-writer \n    monads. Added PosObject
  functions for text primitives (moved \n    from Wumpus-Drawing).\n\n  * Changed
  the @obliterate@ method of the @Decorate@ class.\n\n  * Removed the Semigroup (OPlus)
  and Bifunctor classes. They are \n    no longer so pertinent now that Image, LocImage
  etc. are \n    newtypes rather than /ContextFuns/.\n\n  * Changed internals of LocImage,
  LocThetaImage and  Connector \n    types so the internal points always have Double
  (PostScript \n    point) as the unit. This fixes a bug where otherwise changing\n
  \   the font size for drawings with Em or En units would break the\n    layout.\n\n
  \ * Added @ORIGIN@ to the @RectAddress@ enumeration. I had \n    overlooked that
  @BLC /= ORIGIN@.\n\n  * Added underline-position and underline-thickness to the
  font \n    metrics read by the font loader.\n\n0.17.0 to 0.18.0:\n \n  * Major change
  - removed @ContextFun@ from @Kernel.Base@. Now \n    the drawing objects (Image,
  LocImage, Connector...) are \n    newtype wrapped Reader-Writer monads rather than
  aliases to \n    one of the arity family of ContextFuns. Being newtypes gives\n
  \   a lot better opportunities for overloading.\n\n  * Changed Displacement API
  - it is smaller, and the function \n    naming is more uniform.\n  \n  * Changed
  @DrawingPimitives@ to use @DrawStyle@.\n  \n  * Moved vertices generating functions
  from @Geometry.Path@ to \n    @Geometry.Vertices@.\n \n0.16.0 to 0.17.0:\n\n  *
  Changed representation of ContextFuns - context funs are no \n    longer an arity
  family of newtypes. The new representation \n    is simpler, but some of the opportunities
  for overloading \n    have been lost.\n\n  * Substantial round of renaming for the
  @DrawingContext@ types\n    an query and update functions.\n\n  * Re-worked the
  font metrics and font loader modules. The new\n    names should be more systematic.
  Removed the need for the \n    GhostScript font modules to match PostScript names
  to \n    GhostScript font files.    \n\n  * Superceded the PointSupplyM class by
  adding snapping grid \n    scaling to the DrawingContext. \n \n  * Removed @ScalingContext@
  module.\n\n  * Made text colour a distinct property in the DrawingContext. \n    Text
  is now drawn with the text colour rather than the stroke \n    colour.\n\n  * Added
  FontLoadLog to the DrawingContext - this allows access \n    to the errors recorded
  during font loading.\n\n0.15.0 to 0.16.0:\n\n  * Moved the Geometry modules from
  Wumpus-Drawing into \n    Wumpus-Basic.\n\n  * Re-worked the @CtxPicture@ API, although
  the current naming \n    scheme is not satisfactory.\n\n  * Added extra Anchor classes.\n\n
  \ * Added @PosImage@ object - this is a rectangle-framed object \n    that can be
  drawn from any of its corners or its center. \n\n  * Added @CF3@, an arity three
  /ContextFunction/.\n\n  * Added @Displacement@ module. This defines the @PointDisplace@\n
  \   type and provides a library of @PointDisplace@ functions.\n    Note - some of
  the new functions have taken names previously \n    used for anchor projection functions
  (@northwards@, \n    @southwards@, etc.), anchor projections are now build with
  the \n    function @projectAnchor@.\n\n  * Added the property @descender@ to the
  font metrics.\n\n  * Split drawing primitives from type in @Objects.Graphic@, \n
  \   drawing primitives are now in the module \n    @Objects.DrawingPrimitives@.\n\n0.14.0
  to 0.15.0:\n \n  * Split previous @Wumpus-Basic@ package into two packages:\n    @Wumpus-Basic@
  and @Wumpus-Drawing@. This is a pratical move \n    to separate the developed (although
  not yet polished) @Kernel@ \n    and @FontLoader@ code from the prototypical @Drawing@
  code.\n\n  * Renamed the @Drawing@ object to @CtxPicture@. Although \n    @CtxPicture@
  is a less pleasant name, it should be less \n    confusing. A @CtxPicture@ is the
  essentially the @Picture@ \n    type from Wumpus-Core with an implicit context -
  \n    @ContextPicture@ is simply too long and @CtxPicture@ is \n    almost jibberish
  but the previous unrelated name @Drawing@ \n    was not helpful.\n\n  * @Kernel.Base.ScalingContext@
  has been simplified. \n    ScalingContexts are no longer manipulated via a custom
  Reader\n    monad or transformer as the type signatures were too unwieldy.\n\n  *
  Added @TextMargin@ to the @DrawingContext@ - Wumpus-Drawing \n    can now calculate
  more appealing bounding boxes for text.\n\n0.13.0 to 0.14.0:\n\n  * Re-organised
  module hierarchy, Wumpus-Basic is now divided \n    into two layers - Basic (Font
  loader, utils, kernel drawing) \n    and Drawing - /constructed/ graphic objects
  like arrows, dots, \n    etc.\n\n  * Re-designed the /ContextFunction/ function
  types. Context\n    functions with different numbers of /static arguments/ are \n
  \   now separate newtypes. This has allowed a major cull of the \n    combinators
  operating on context functions (@prepro@, \n    @postpro@, @situ@, etc.) and now
  only a handful of special\n    combinators are needed. As the newtypes are instances
  of \n    Monad and Applicative the usual Applicative and Monad \n    combinators
  are now more readily useful.\n\n  * Work on the font loader code to improve its
  robustness, and \n    improved error signalling on load failure. Loading glyph \n
  \   metrics now returns both the metrics (possibly fallback \n    metrics if parsing
  failed) and a log.\n\n0.12.0 to 0.13.0:\n\n  * Major changes to @Basic.Graphic@
  modules. @DrawingR@ is \n    renamed @Drawing@ and is substantially re-worked. Graphic
  \n    /functional/ types are now encapulated in the Drawing \n    constructor @Drawing
  (ctx -> pt -> prim)@ rather than \n    partially outside it @pt -> Drawing (ctx
  -> prim)@. \n    @Drawing@ monad renamed @TraceDrawing@ and @DrawingT@ \n    transformer
  renamed @TraceDrawingT@.\n\n  * Rudimentary font loading added, only AFM files are
  supported.\n\n  * @Basic.Shapes.Coordinate@ re-worked. The Coordinate type is \n
  \   now more like the Shapes types (excepting the intentional \n    difference in
  drawing style).\n\n  * @Basic.Shapes.Plaintext@ removed.\n\n  * @Basic.Text.LRText@
  completely redesigned.\n\n0.11.0 to 0.12.0:\n\n  * Changes Base types in  @Basic.Graphic@.
  The @Graphic@ and \n    @Image@ types now produce (wrapped) @Primitives@, rather
  than \n    Hughes lists of @Primitives@. This means they can now be \n    transformed
  with the affine transformations. Removed the \n    function @ati@, it is replaced
  by @at@.\n\n  * Added @Basic.Utils.Combinators@.\n\n  * Arrowheads and Connectors
  reworked - Arrowheads are now a \n    functional type, Connectors use new Image
  combining \n    operations from @Basic.Graphic.Base@.\n\n  * Path connectors re-worked
  and renamed. \n\n  * Dot hierarchy changed - @Basic.Dots@ becomes \n    @Basic.Dots.AnchorDots@;
  @Basic.Dots.Primitive@ becomes\n    @Basic.Dots.Marks@.\n\n  * @Basic.Shapes@ -
  internals reworked.\n\n0.10.0 to 0.11.0:\n \n  * Reworked arrowheads and connectors
  - connectors are now \n    configurable: there are functions to make connectors
  with \n    a left arrowhead, right arrowhead, none or both.  \n\n  * Reworked shapes
  - internally shapes now create a @Path@ rather \n    than a @Graphic@ this means
  the path can be manipulated (e.g. \n    round cornered rectangles, diamonds... can
  be constructed).\n    @Coordinate@ is no longer a @Shape@ - it is now similar object
  \n    but of a different type. Likewise, @FreeLabel@ has been \n    replaced by
  @Plaintext@ which is not a @Shape@, but has some \n    similar properties.\n\n  *
  @Basic.Paths.Base@ - @Path@ type changed, @PathEmpty@ \n    constructor removed
  so empty paths cannot be created. This \n    allows a better API for taking points
  on a path. It also \n    means @Path@ is no longer an instance of Monoid. Type changes
  \n    to various functions (e.g. @tipR@, @tipL@) reflecting that as \n    paths
  cannot now be empty, functions on them can generally be \n    total. @toPrimPathU@
  removed as converting to a PrimPath as \n    now always /safe/. @tracePoints@ renamed
  @traceLinePoints@, \n    @tracePointsCurve@ renamed @traceCurvePoints@, @midpoint@
  \n    renamed @midway@.\n\n  * @Basic.Graphic@ - the types @ConnDrawingR@, @ConnGraphic@
  etc.\n    have had their names expanded to @ConnectorDrawingR@, \n    @ConnectorGraphic@...
  \n\n  * @Basic.SafeFont@ - font names changed to use underscore \n    separators
  rather than camelCase. Wumpus generally uses \n    underscored names for /constants/.\n\n
  \ * Removed @conn@ from @Basic.Graphic.Drawing@. Connectors should \n    be used
  instead.\n\n  * The class @DrawingCtxM@ now has @Applicative@ as a superclass. \n\n
  \ * @lineSpacing@ renamed @baselineSpacing@.\n\n\n0.9.0 to 0.10.0:\n\n  * @Basic.Graphic.BaseClasses@
  and @Basic.Graphic.BaseTypes@ \n    merged into same module so they can depend on
  each other \n    without orphans instances.\n\n  * @DrawingF@ renamed to @DrawingR@,
  the related type synonyms\n    have also been changed, e.g. @LocDrawingF@ is now
  \n    @LocDrawingR@.\n\n  * Method names in the @DrawingCtxM@ class changed - @askCtx@
  is\n    now @askDC@, @localCtx@ is now @localize@. Removed the \n    functions @askDF@,
  @asksDF@, @pureDF@ that worked for \n    @DrawingF@ (now @DrawingR@), @DrawingR@
  now uses the \n    Applicative\\'s @pure@ and the @DrawingCtxM@ class for these
  \n    functionalities.\n\n  * @Basic.Graphic.DrawingContext@ - renamed @primary_colour@
  to\n    @stroke_colour@ and @secondary_colour@ to @fill_colour@. The \n    setter
  functions has been similarly renamed.\n\n  * Added the type synonym @DrawingContextF@
  to \n    @Basic.Graphic.DrawingContext@. Changed relevant function\n    signatures
  to use it.\n\n  * Re-worked the Path modules - base types entirely different,\n
  \   connectors entirely different, monadic path construction \n    largely the same.\n\n
  \ * Initial work on round cornered paths.\n \n  * Removed the type class @TextAnchor@
  from @Basic.Anchors@. \n    This was a left-over from a previous implementation
  of \n    Shapes and is not relevant to the current implementation.\n \n  * Added
  @DirectionContext@ to @Basic.Graphic@.\n\n  * @localLG@ removed it can be acheived
  with composition -\n    @localize upd . loc_graphic_function@. @lgappend@ is also
  \n    removed - it can be recreated applicatively.\n\n0.8.0 to 0.9.0:\n\n  * Re-worked
  @Basic.Text.LRSymbol@ changed the type name and the\n    types of the run functions.
  Added more symbols and a new demo \n    @Symbols.hs@.\n\n  * @ScalingContext@ added
  to @Basic.Graphic@. Changed \n    @monoTextWidth@ to take a character count, the
  old behaviour \n    is recreated by the new function @monoTextLength@. \n\n  * @Basic.Graphic.Chain@
  removed. It is now superseded by\n    @Basic.Chains@.\n\n  * Added new property
  to @DrawingContext@ for line spacing \n    scaling factor, and added a new drawing
  primitive \n    @textlineMulti@ for multi-line, left justified labels.\n\n  * Synthezied
  attribute /getters/ such as @textDimensions@ moved\n    from @Basic.Graphic.DrawingContext@
  to the new module\n    @Basic.Graphic.Query@. The type of all the functions has
  \n    changed to DrawingF. @lowerxHeight@ is renamed \n    @monoLowerxHeight@ emphasizing
  that the metrics pertain to\n    monospaced Courier font.\n\n  * Added Shapes modules.\n
  \n  * TurtleMonad module - the TurtleDrawing type and run functions\n    have been
  removed and the internals have been reworked. \n    Turtle is now run solely as
  a /local effect/ within the \n    Drawing monad. \n\n\n0.7.0 to 0.8.0:\n\n  * Re-introduced
  LRText and LRSymbol - they now work with \n    Wumpus-Core\\'s kerning support.\n
  \n  * Changes to @Graphic.Basic.BaseTypes@ - @DrawingObject@ \n    renamed to @DrawingF@.
  @HPrim@ wrapped as a newtype to \n    support a Monoid instance. Removed @appendGraphic@
  and @gcat@ \n    as they can be achieved with @mappend@ and @mconcat@. \n    @appendAt@
  renamed to @lgappend@. @PointT@ remaned to \n    @PointF@.\n\n  * Changes to @Graphic.Basic.Drawing@
  - @drawAt@, @drawAtImg@, \n    @drawConn@, @drawConnImg@ all removed. They are replaced
  \n    by @draw@ and @drawi@ together with then new @at@ and @conn@\n    combinators.\n\n
  \ * Changes to @Basic.Graphic.PrimGraphic@ - @localDrawingContext@\n    renamed
  to @localLG@ and moved to @Basic.Graphic.BaseTypes@.\n\n  * Updates to @Basic.SafeFonts@
  to work with changes to \n    @Wumpus.Core@.\n\n0.6.0 to 0.7.0:\n\n  * Major rework
  of Graphic types, the old types (AGraphic, \n    GraphicF etc.) and the old drawing
  monads have been removed. \n    The new types are based on the AGraphic and related
  types but \n    their implementation is different. The new types track the \n    /graphics
  state/ within the type (the DrawingContext) plus \n    how to draw themselves. For
  real drawings, graphics are \n    collected with a Writer-like monad the @Basic.Graphic.Drawing@
  \n    monad which replaces the DrawingCtx and Trace monads. The \n    Turtle monad
  remains and has been updated to work with the new\n    drawing monads.\n\n  * LRText
  and LRSymbol modules temporarily removed as they \n    contradict the new, optimized
  kerning functionality in \n    @Wumpus.Core@.\n\n0.5.0 to 0.6.0:\n\n  * Updates
  to work with wumpus-core-0.30.0.\n\n  * The code from @Basic.Graphic@ has been moved
  in to \n    @Basic.Graphic.Primitive@ - this module is due a major \n    overhaul.
  @Basic.Graphic@ is now an /import/ shim for\n    @Basic.Graphic.Primitive@.\n\n0.4.0
  to 0.5.0:\n\n  * Re-worked the PictureLanguage module.\n\n  * SVGColours and X11Colours
  moved into @Wumpus.Basic.Colour@.\n    Naming scheme for colours changed to use
  underscore between \n    words rather than camelCase.\n \n  * Updates to work with
  wumpus-core-0.30.0.\n \n0.3.0 to 0.4.0:\n\n  * Reworked the monads. Monads.DrawingMonad
  replaces \n    Monads.Trace, Monads.DrawingCtx, Monads.ConsDrawing. The \n    SnocDrawing
  monads have been removed as they were a design\n    mistake.\n\n  * Removed MGraphicF
  type, added AGraphic.\n\n  * Initial work on arrow drawing and extended text drawing.\n\n0.2.0
  to 0.3.0 :\n \n  * Added the anchors, monads, drawingAttrs...\n\n  * Added the module
  @PictureLanguage@ from Wumpus-Core.\n    It is located with the path prefix @Wumpus.Deprecated@.\n
  \   At some point it will be replaced...\n\n  * Basic.Graphic - rectangles and lines
  now take the supplied\n    point to be the center rather than the bottom-left corner.\n
  \   Name changes - @circle@ changed to @disk@, @text@ changed to \n    @textline@.\n\n0.1.1
  to 0.2.0:\n\n  * Added the module @Wumpus.Basic.Graphic@.\n\n  * SafeFonts changed
  to be size neutral. PostScript\\'s \n    @scalefont@ command (which wumpus-core
  uses in the generated\n    output) should be able to scale to any integer size.\n\n
  \ * New demo @ColourCharts.hs@.\n\n0.1.0 to 0.1.1:\n\n  * Added missing LICENSE
  file to the Cabal file.\n\n  * Added this CHANGES file.\n"
basic-deps:
  wumpus-core: ! '>=0.52.0 && <0.53.0'
  base: <5
  vector-space: ! '>=0.6 && <1.0'
  filepath: ! '>=1.1 && <2.0'
  containers: ! '>=0.3 && <=0.6'
  directory: ! '>=1.0 && <2.0'
all-versions:
- 0.1.1
- 0.2.0
- 0.3.0
- 0.4.0
- 0.5.0
- 0.6.0
- 0.7.0
- 0.8.0
- 0.9.0
- 0.10.0
- 0.11.0
- 0.12.0
- 0.13.0
- 0.14.0
- 0.15.0
- 0.16.0
- 0.17.0
- 0.18.0
- 0.20.0
- 0.21.0
- 0.22.0
- 0.24.0
author: ''
latest: 0.24.0
description-type: haddock
description: ! '

  Kernel code for higher-level drawing built on Wumpus-Core. This

  package provides font loader code (currently limited to AFM font

  files) and a various /drawing objects/ intended to be a

  higher-level basis to make vector drawings than the primitives

  (paths, text labels) provided by Wumpus-Core.


  \*\* WARNING \*\* - this package is alpha grade and it is

  strongly coupled to the package @Wumpus-Drawing@ which is

  sub-alpha grade. The packages are split as it is expected they

  will have different development speeds - @Wumpus-Basic@ needs

  polishing and refinement; @Wumpus-Drawing@ simply needs a lot of

  work to move its components from /proof-of-concept/ ideas to

  being readily usable.



  NOTE - the demos that were previously included are now in the

  package @Wumpus-Drawing@.



  Changelog:


  v0.23.0 to v0.24.0:


  * Changes to type funs to work with GHC 7.4.


  * Removed FormatCombinators module.


  v0.22.0 to v0.23.0:


  * Re-worked the Chain module and API.


  * Replaced @ZDeco@ enumeration with @ZOrder@.


  * Removed the @Basic.Geometry@ modules, they are superseded in

  Wumpus-Drawing. Some of the equivalent functionality is now

  internal to the respective modules in Wumpus-Drawing - Wumpus

  has scaled back the amount of /geometric/ types and operations

  it wants to expose.


  * Renamed the @PlacedTrail@ object to @AnaTrail@ - the prefix

  vector is considered an /anacrusis/. Tidied up the API of the

  @Trail@ module.


  * Moved @bezierArcPoints@ and @BezierMinorArc@ from

  @Basic.Geometry@ and marked the @Basic.Geometry@ code as

  obsolute.


  v0.21.0 to v0.22.0:


  * Reverted argument order of @run@ functions they back to the

  @monadLib@ style (args * monadic_operation) rather than @MTL@

  style (monadic_operation * args). Typographically this seems

  better.


  * Removed module @Geometry.Paths@ it is superseded in

  Wumpus-Drawing.


  * Added user state to PosObject and moved it into

  @Kernel.Drawing@.


  * Changed the enumeration @DrawStyle@ to @DrawMode@. Added

  another enumeration @PathMode@.


  * Changed Chain so that first item in the chain is the start

  point (previously the start point was iterated by the chain).


  * Removed @ConnectorProps@ from the @DrawingContext@ , they are

  now used \"locally\" in Wumpus-Drawing.


  * Added more vector constructors to

  @Kernel.Objects.Displacement@.


  * Added extra methods to the @Decorate@ class for annotating

  SVG elements.


  v0.20.0 to v0.21.0:


  * The code from the @Kernel.Base.UserState@ module has been

  moved to the module @Kernel.Drawing.Basis@.


  * Moved @Image@ and @Query@ from @Objects.Basis@ to new module

  @Objects.Image@. Moved @Chain@, @CtxPicture@ and

  @TraceDrawing@ into the new @Drawing@ folder.


  * Added @Wumpus.Basic.Kernel.Drawing.LocDrawing@ module.


  * Rationalized the combinators exported by the drawing objects

  @Image@, @LocImage@, @LocThetaImage@ and @Connector@.


'
license-name: BSD-3-Clause
