homepage: http://github.com/skorpan/hunp/tree/master
changelog-type: text
hash: 22a8102ab59d2424d6df276c5b5f71d1c035ba118cd32169f7b4ee41d6d62c91
test-bench-deps: {}
maintainer: deniz.a.m.dogan@gmail.com
synopsis: Unpacker tool with DWIM
changelog: ! "Changelog for hunp\n\nVersion 0.1:\n* Added user configurability in
  ~/.hunp/hunp.conf\n* Added options -q (quiet), -Q (stfu), -v (print version) and
  -d (print default\n  configuration)\n* Fixed the only known bug, which prevented
  the program from killing its\n  subprocesses properly\n* Dropped the umlauts in
  the name, so now it's simply \"hunp\", yet still\n  pronounced \"hump\"\n\nVersion
  0.0:\n* First release of hünp\n"
basic-deps:
  pcre-light: ! '>0.3 && <1'
  bytestring: ! '>0.9 && <2'
  split: ! '>=0.1 && <2'
  base: ! '>=3 && <5'
  monads-fd: ! '>0 && <1'
  filepath: ! '>=1.1 && <2'
  process: ! '>=1 && <2'
  parsec: ! '>=3'
  directory: ! '>1 && <2'
all-versions:
- '0.0'
- '0.1'
author: Deniz Dogan
latest: '0.1'
description-type: text
description: ! "* INTRODUCTION\nhunp (written in all lower-case, pronounced like \"hump\",
  previously written with\nan umlaut (hünp)) is a small tool which automagically extracts
  anything you pass\nto it, the way you want it.  It recognizes a bunch of different
  file extensions,\nsuch as rar, gz, zip, etc. and can easily be customized using
  your own\nconfiguration file.\n\n* USAGE\nHere are a few examples which should give
  you the idea...\n\n$ hunp ~/download/lollerskates.tar.gz\nFound ~/download/lollerskates.tar.gz\nCalling
  \"tar zxvf ~/download/lollerskates.tar.gz\"\n...\n\n$ hunp ~/download/Lollerskates.S01E03/\nFound
  ~/download/Lollerskates.S01E03/lol.s01e03.r00\nCalling \"unrar x ~/download/Lollerskates.S01E03/lol.s01e03.r00\"\n...\n\n*
  OPTIONS\n-q  --quiet    suppress hunp's stdout\n-Q  --stfu     suppress hunp'sstdout
  and stderr\n-d  --default  prints the default configuration\n-v  --version  prints
  the version\n\n* CONFIGURATION\nYou can use your own configuration by creating the
  file ~/.hunp/hunp.conf.  The\nfile format is pretty simple and you can get a good
  start by running \"hunp -d >\n~/.hunp/hunp.conf\", which will put the default configuration
  in that file.\n\n** Format\nThe configuration file needs to be on the following
  format:\nreg1,reg2\tcommand\nreg3\tcommand\nreg4,reg5,reg6\tcommand\n\n\"regX\"
  means a regular expression (Perl-compatible) and command is any command\nthat you
  would normally execute in the shell to unpack a file matching one of\nthe corresponding
  regular expressions.  The regular expressions are read\nleft-to-right, top-to-bottom
  and will stop on the first match.  Each command\nshould contain %s as a whole word,
  i.e. no quotation marks or other stuff is\nallowed around it.  Note that the delimiter
  between regular expressions and\ncommands is a literal tab character.  It is allowed
  however to use more than one\ntab.\n\nExamples:\nunrar x '%s' <- invalid\nunrar
  x %s <- valid\nunrar x %s> hello <- invalid\n\n* KNOWN BUGS\n- None.\n\n* DOWNLOADING\nGet
  the latest git repository:\n$ git clone git://github.com/skorpan/hunp.git\n\nIf
  you're not interested in the bleeding-edge version of hunp, just\nuse cabal-install:\n\n$
  cabal install hunp\n"
license-name: LicenseRef-GPL
