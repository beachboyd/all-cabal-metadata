homepage: http://ooxo.org/hubigraph/
changelog-type: ''
hash: 460cfc663a158a9f9bdb2082681ab75870d4d777c6b3823bb765d493b2c7a473
test-bench-deps: {}
maintainer: Matei Tene <matei.tene@cti.pub.ro>
synopsis: A haskell wrap for Ubigraph
changelog: ''
basic-deps:
  base: ! '>=3 && <5'
  containers: ! '>=0.2.0.0'
  mtl: ! '>=1.1.0.1'
  haxr: ! '>=3000.2.1'
all-versions:
- 0.3.1
- 0.3.2
author: Kohei Ozaki <eowner@gmail.com>
latest: 0.3.2
description-type: markdown
description: ! "# Hubigraph\n\nhttp://ooxo.org/hubigraph/\n\n## DESCRIPTION\n\na Haskell
  wrap for Ubigraph (http://www.ubietylab.net/ubigraph)\n\n## FEATURES/PROBLEMS\n\nIt
  provides a shortcut to draw a graph in ubigraph (by calling XML-RPC internally.)\n\n##
  SYNOPSIS\n\nMake sure Ubigraph server is started before using this library.\n\n
  \    import Graphics.Ubigraph\n\n     u x = initHubigraph \"http://localhost:20738/RPC2\"
  >>= runHubigraph x\n\n     main = u $ mkRing 10\n\n     mkRing n = do mapM_ (newVertexWithID)
  [0..(n-1)]\n                   mapM_ (newEdge') [0..(n-1)]\n                   sid
  <- newVStyle 0\n                   setVStyleAttr (VColor \"#ff0000\") sid\n                   setVStyleAttr
  (VShape Sphere) sid\n                   mapM_ (changeVStyle sid) [0..(n-1)]\n         where
  newEdge' e = newEdge (e, (e+1) `mod` n)\n\n## REQUIREMENTS\n\nUbigraph (http://www.ubietylab.net/ubigraph).\n\n##
  INSTALL\n\n$ cabal install hubigraph\n\n## LICENSE\n\nThe BSD3 License\n"
license-name: BSD-3-Clause
