homepage: ''
changelog-type: ''
hash: c8a4ac8cb7bd519550d70fe7eb9d02fae70b23fd7ff5c8937189b7b5995cf2c3
test-bench-deps: {}
maintainer: chrisdone@gmail.com
synopsis: IRC server written in Haskell.
changelog: ''
basic-deps:
  ConfigFile: -any
  bytestring: -any
  case-insensitive: -any
  unix: -any
  split: -any
  base: ==4.*
  time: -any
  text: -any
  fastirc: -any
  strict: -any
  filepath: -any
  network: -any
  containers: -any
  utf8-string: -any
  ghc-prim: -any
  monad-extras: ==0.3.2.0
  mtl: -any
  cmdargs: -any
  Crypto: -any
  aeson: -any
  directory: -any
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.2.0
author: Chris Done
latest: 0.2.0
description-type: markdown
description: ! "# Hulk IRC Server Guide\n\n## Installation\n\n### From Hackage\n\n
  \   $ cabal install hulk\n\n### From Github\n\n    $ git clone git://github.com/chrisdone/hulk.git\n
  \   $ cd hulk\n    $ cabal install\n\n## Usage\n\nSee a complete example in the
  `example/` directory in the root of the\nproject. You can go into that directory
  and run `hulk -chulk.conf` to\nhave an immediate server running on localhost port
  6667.\n\n### Configuration\n\n    $ cp example/hulk.conf hulk.conf\n\nYou can edit
  the port, server name and MOTD file in here.\n\nDetailed instructions follow.\n\n###
  Auth\n\n    $ mkdir auth\n\nPut a salt for your passwords in auth/passwd. For example:\n\n
  \   $ head -c 128 /dev/random | sha1sum > auth/passwd-key\n\nThen generate a password
  for your IRC user:\n\n    $ hulk-generate-pass -u demo -c=hulk.conf >> auth/passwd\n\n(It
  will wait for a single line containing a pass and output the user\nand sha1 sum.)\n\n###
  Start the server\n\n    $ hulk -chulk.conf\n\nLogs / events will be outputted to
  stdout. This will be a\nconfiguration option later. (Send me a patch if you already
  did this!)\n\nClients *must* connect with a password and user that matches the users\nand
  passwords in your `auth/passwd` file.\n\n## Using with SSL\n\nYou can use it with
  stunnel.\n\nChange the port setting in hulk.conf:\n\n    port = 6666\n\nGenerate
  an SSL certificate:\n\n    $ openssl req -new -out hulk.pem -keyout hulk.pem -nodes
  -x509 -days 365\n\nMake a stunnel.conf file:\n\n    pid = /path/to/wherever/stunnel.pid\n
  \   client = no\n    foreground = yes\n    output = /dev/stdout\n    cert = hulk.pem\n
  \   [hulk]\n    connect = 127.0.0.1:6666\n    accept = 6667\n\nThen run it:\n\n
  \   stunnel stunnel.conf\n\n(It may be in `/usr/sbin/stunnel` depending on your
  system.)\n\nThen run hulk:\n\n    hulk -chulk.conf\n\n## Logging\n\nHulk doesn't
  support specific channel logging yet, but you can use a\nlogger bot.\n\n    $ cabal
  install hog\n    $ hog -h=127.0.0.1 --port=6666 -n=hog -u=hog --pass=mypassword
  --channels=#dev,#x -l/directory/of/logs -d5\n\n`-d5` is the timeout before reconnect.\n\n##
  Using an announcer bot\n\nIf you're using a private IRC server you're probably using
  it at a dev\ncompany, and you probably want to make announcements about commits,\ntickets,
  etc. from a feed.\n\nYou can use rss2irc. But you need a patched version which supports\nsending
  the PASS command:\n\n    $ git clone git://github.com/chrisdone/rss2irc.git\n    $
  cd rss2irc\n    $ cabal install\n\nThen run it:\n\n    $ rss2irc http://myserver/foo.atom
  announce@127.0.0.1/#dev \\\n      -p 6667 -i 1 -l  --pass myannouncepass\n"
license-name: BSD-3-Clause
