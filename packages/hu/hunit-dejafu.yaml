homepage: https://github.com/barrucadu/dejafu
changelog-type: markdown
hash: 4e411ed0cecffbebcbc905b9550d40aa59bbbc2916cbdde6d968b8b1e6190131
test-bench-deps: {}
maintainer: mike@barrucadu.co.uk
synopsis: Deja Fu support for the HUnit test framework.
changelog: ! "Release Notes\n=============\n\nAll notable changes to this project
  will be documented in this file.\n\nThis project is versioned according to the [Package
  Versioning Policy](https://pvp.haskell.org), the\n*de facto* standard Haskell versioning
  scheme.\n\n\n1.0.0.0\n-------\n\n- **Date**    2017-12-23\n- **Git tag** [hunit-dejafu-1.0.0.0][]\n-
  **Hackage** https://hackage.haskell.org/package/hunit-dejafu-1.0.0.0\n\n### Test.HUnit.DejaFu\n\n-
  The `ConcST` functions have been removed and replaced by the `ConcIO` functions.\n-
  The `Testable` and `Assertable` instances for `ConcST t ()` are gone.\n- All test
  functions are generalised to take a `ProPredicate`.\n- All test functions now take
  the action to test as the last parameter.\n\n### Miscellaneous\n\n- The minimum
  supported version of dejafu is now 1.0.0.0.\n\n[hunit-dejafu-1.0.0.0]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-1.0.0.0\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.7.1.1\n-------\n\n-
  **Date**    2017-11-30\n- **Git tag** [hunit-dejafu-0.7.1.1][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.7.1.1\n\n###
  Test.HUnit.DejaFu\n\n- Fix a missing `@since` annotation.\n\n[hunit-dejafu-0.7.1.1]:
  https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.7.1.1\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.7.1.0\n-------\n\n-
  **Date**    2017-11-30\n- **Git tag** [hunit-dejafu-0.7.1.0][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.7.1.0\n\n###
  Test.HUnit.DejaFu\n\n- A new `testPropertyFor` function for checking refinement
  properties with a custom number of seed\n  values and variable assignments.\n\n[hunit-dejafu-0.7.1.0]:
  https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.7.1.0\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.7.0.2\n-------\n\n-
  **Date**    2017-10-11\n- **Git tag** [hunit-dejafu-0.7.0.2][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.7.0.2\n\n###
  Miscellaneous\n\n- dejafu-0.9 support\n\n[hunit-dejafu-0.7.0.2]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.7.0.2\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.7.0.1\n-------\n\n-
  **Date**    2017-09-26\n- **Git tag** [hunit-dejafu-0.7.0.1][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.7.0.1\n\n###
  Miscellaneous\n\n- dejafu-0.8 support\n\n[hunit-dejafu-0.7.0.1]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.7.0.1\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.7.0.0\n-------\n\n-
  **Date**    2017-08-10\n- **Git tag** [hunit-dejafu-0.7.0.0][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.7.0.0\n\n###
  Test.HUnit.DejaFu\n\n- Two new functions: `testDejafuDiscard` and `testDejafuDiscardIO`,
  allowing you to selectively\n  discard results or traces.\n- The `Discard` type
  and `defaultDiscarder` function from dejafu is now re-exported.\n\n### Miscellaneous\n\n-
  Lower version bound on dejafu raised to 0.7.1.0.\n\n[hunit-dejafu-0.7.0.0]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.7.0.0\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.6.0.0\n-------\n\n-
  **Date**    2017-06-07\n- **Git tag** [hunit-dejafu-0.6.0.0][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.6.0.0\n\n###
  Test.HUnit.DejaFu\n\n- The refinement property testing functionality of dejafu is
  exposed in the new `testProperty`\n  function, and re-exported values.\n- Due to
  changes in dejafu, the `Way` type is now abstract and exposes smart constructor
  functions:\n    - `systematically`, corresponding to the old `Systematically`.\n
  \   - `randomly`, corresponding to the old `Randomly`.\n    - `uniformly`, a new
  uniform random (as opposed to weighted random) scheduler.\n    - `swarmy`, corresponding
  to the old `Randomly` and specifying how many executions to use the\n      same
  weights for.\n- The `defaultWay`, `defaultMemType`, and `defaultBounds` values are
  all now re-exported.\n\n### Miscellaneous\n\n- Only dejafu 0.7 is supported.\n\n[hunit-dejafu-0.6.0.0]:
  https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.6.0.0\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.5.0.0\n-------\n\n-
  **Date**    2017-04-08\n- **Git tag** [hunit-dejafu-0.5.0.0][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.5.0.0\n\n###
  Test.HUnit.DejaFu\n\n- Due to changes in dejafu, the `Way` type no longer takes
  a parameter; it is now a GADT.\n\n### Miscellaneous\n\n- There is now a changelog.\n-
  Every definition and instance now has a Haddock \"@since\" annotation.\n- Only dejafu
  0.6 is supported.\n\n[hunit-dejafu-0.5.0.0]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.5.0.0\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.4.0.1\n-------\n\n-
  **Date**    2017-03-20\n- **Git tag** [hunit-dejafu-0.4.0.1][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.4.0.1\n\n###
  Miscellaneous\n\n- Now supports HUnit 1.6.\n\n[hunit-dejafu-0.4.0.1]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.4.0.1\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.4.0.0\n-------\n\n-
  **Date**    2017-02-21\n- **Git tag** [hunit-dejafu-0.4.0.0][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.4.0.0\n\n###
  Test.HUnit.DejaFu\n\n- All the functions which did take a `Bounds` now take a `Way`
  instead and support random scheduling\n  as well.\n- The `Way` type from dejafu
  is now re-exported.\n\n### Miscellaneous\n\n- The minimum supported version of dejafu
  has been increased to 0.5 (from 0.2)\n\n[hunit-dejafu-0.4.0.0]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.4.0.0\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.3.0.3\n-------\n\n-
  **Date**    2016-10-22\n- **Git tag** [hunit-dejafu-0.3.0.3][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.3.0.3\n\n###
  Miscellaneous\n\n- Now supports HUnit 1.4 and 1.5.\n\n[hunit-dejafu-0.3.0.3]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.3.0.3\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.3.0.2\n-------\n\n-
  **Date**    2016-09-10\n- **Git tag** [hunit-dejafu-0.3.0.2][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.3.0.2\n\n###
  Miscellaneous\n\n- Now supports concurrency 1.0.0.0 and dejafu 0.4.0.0\n\n[hunit-dejafu-0.3.0.2]:
  https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.3.0.2\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.3.0.1\n-------\n\n-
  **Date**    2016-05-26\n- **Git tag** [hunit-dejafu-0.3.0.1][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.3.0.1\n\n###
  Miscellaneous\n\n- Now supports GHC 8.\n\n[hunit-dejafu-0.3.0.1]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.3.0.1\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.3.0.0\n-------\n\n-
  **Date**    2016-04-28\n- **Git tag** [hunit-dejafu-0.3.0.0][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.3.0.0\n\n###
  Test.HUnit.DejaFu\n\n- New `Assertable` and `Testable` instances for `ConcST t ()`
  and `ConcIO ()`.\n- The `Bounds` type from dejafu is now re-exported.\n\n### Miscellaneous\n\n-
  Now supports dejafu 0.2 (again).\n\n[hunit-dejafu-0.3.0.0]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.3.0.0\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.2.1.0\n-------\n\n-
  **Date**    2016-04-03\n- **Git tag** [hunit-dejafu-0.2.1.0][]\n- **This version
  was never pushed to hackage, whoops!**\n\n### Miscellaneous\n\n- Now supports dejafu
  0.3, but drops support for dejafu 0.2.\n\n[hunit-dejafu-0.2.1.0]: https://github.com/barrucadu/dejafu/releases/tag/hunit-dejafu-0.2.1.0\n\n\n---------------------------------------------------------------------------------------------------\n\n\n0.2.0.0\n-------\n\n-
  **Date**    2015-12-01\n- **Git tag** [0.2.0.0][]\n- **Hackage** https://hackage.haskell.org/package/hunit-dejafu-0.2.0.0\n\nInitial
  release. Go read the API docs.\n\n[0.2.0.0]: https://github.com/barrucadu/dejafu/releases/tag/0.2.0.0\n"
basic-deps:
  exceptions: ! '>=0.7 && <0.9'
  base: ! '>=4.8 && <5'
  HUnit: ! '>=1.2 && <1.7'
  dejafu: ! '>=1.0 && <1.1'
all-versions:
- '0.2.0.0'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.0.3'
- '0.4.0.0'
- '0.4.0.1'
- '0.5.0.0'
- '0.6.0.0'
- '0.7.0.0'
- '0.7.0.1'
- '0.7.0.2'
- '0.7.1.0'
- '0.7.1.1'
- '1.0.0.0'
author: Michael Walker
latest: '1.0.0.0'
description-type: markdown
description: ! 'hunit-dejafu

  ============


  Integration between the [dejafu][] library for concurrency testing and

  [HUnit][]. This lets you easily incorporate concurrency testing into

  your existing test suites.


  The documentation of the latest developmental version is

  [available online][docs].


  Contributing

  ------------


  Bug reports, pull requests, and comments are very welcome!


  Feel free to contact me on GitHub, through IRC (#haskell on freenode),

  or email (mike@barrucadu.co.uk).


  [docs]:   https://docs.barrucadu.co.uk/hunit-dejafu

  [dejafu]: https://hackage.haskell.org/package/dejafu

  [HUnit]:  https://hackage.haskell.org/package/HUnit

'
license-name: MIT
