homepage: https://github.com/phlummox/hup
changelog-type: markdown
hash: 9b26285975f8da39bb9e7b83cf0372ed6397f9d7ec30b29e05c8cca62d912a6d
test-bench-deps:
  http-client: -any
  bytestring: -any
  wai: -any
  base: -any
  hspec: -any
  hspec-core: -any
  filepath: -any
  simple: -any
  doctest: -any
  hspec-wai: -any
  hup: -any
  wai-extra: -any
  transformers: -any
  temporary: -any
  QuickCheck: -any
  http-types: -any
  Glob: -any
maintainer: phlummox2@gmail.com
synopsis: Upload packages or documentation to a hackage server
changelog: ! "## 0.2.0.0\n\n* Bug fixes\n* Allow an Upload to store contents of file
  to be uploaded.\n* Support older versions of directory and http-client\n* Allow
  extra args to be passed to cabal when configuring or when\n  running haddock.\n*
  Added hspec and docstring tests\n* Now running travis CI on a range of platforms
  and ghc versions.\n\n## 0.3.0.0\n\n* Bug fixes\n* Updated documentation, added a
  \"quick usage\" section and troubleshooting\n* `hup` now checks whether `cabal`
  is in the package snapshot binaries\n  directory, and installs it if not.\n* Added
  `packbuild` and `packboth` commands.\n* Added a program test to .travis.yml\n\n"
basic-deps:
  http-client: -any
  shelly: ! '>=1.6.6'
  bytestring: -any
  split: -any
  base: ! '>=4.7 && <5'
  text: -any
  filepath: -any
  tar: -any
  http-client-tls: -any
  hup: -any
  zlib: -any
  mtl: -any
  cmdargs: -any
  transformers: -any
  tagsoup: -any
  http-types: -any
  directory: -any
all-versions:
- 0.2.0.0
- 0.3.0.0
author: phlummox
latest: 0.3.0.0
description-type: markdown
description: ! "# hup [![Hackage version](https://img.shields.io/hackage/v/hup.svg?label=Hackage)](https://hackage.haskell.org/package/hup)
  [![Linux Build Status](https://img.shields.io/travis/phlummox/hup.svg?label=Linux%20build)](https://travis-ci.org/phlummox/hup)
  \n\nSmall program for building and uploading packages and documentation\nbuilt with
  `stack` to a hackage server; a Haskellified version of\n[phadej's script](https://github.com/phadej/binary-orphans/blob/master/hackage-docs.sh),\nwhich
  is a stack-enabled version of [ekmett's script](https://github.com/ekmett/lens/blob/master/scripts/hackage-docs.sh).\n\nIn
  addition to `stack`, it requires the `cabal` executable\n(but will install an appropriate
  `cabal` if it doesn't find one in the\nbinaries for the package snapshot your project
  is using).\n\n## Installation\n\nInstall in the standard Stack way with `stack install
  hup`.\n\n## Quick usage\n\nTry:\n\n~~~ \n$ cd /path/to/my/project\n$ stack build\n$
  hup packboth -u myHackageUserID -p myHackagePassword\n$ hup docboth -u myHackageUserID
  -p myHackagePassword \n~~~\n\n## Usage\n\n* `hup [COMMAND] ... [OPTIONS]`\n   \n
  \ Build and/or upload packages or documentation to a hackage server. A server\n
  \ url should be of the format `PROTOCOL://SERVER[:PORT]/`, and defaults to\n  `https://hackage.haskell.org/`
  if not specified.\n\n  A password can also be given in the `PASSWORD` environment
  variable instead\n  of on the command line.\n  \n  'hup --help=all' will give help
  for all commands.\n\n* Commands:\n\n        packup    Upload FILE as a package (or
  candidate package).\n        docbuild  Build documentation for a  package.\n        docup
  \    Upload FILE as documentation.\n        docboth   Build and upload documentation
  for a package.\n\n\n* Common flags:\n  \n        -v --verbose          be verbose\n
  \       -h --help             Display help message. '--help=all' will display help\n
  \                             for all commnds. '--help=bash' will output code for\n
  \                             bash command-line completion.\n        -V --version
  \         Print version information\n           --numeric-version  Print just the
  version number\n\n\n* `hup packup [OPTIONS] FILE`  \n  Upload FILE as a package
  (or candidate package).\n\n  Flags:  \n\n        -s --server=URL       \n        -c
  --candidate        \n        -u --user=USER        \n        -p --password=PASSWORD
  \ \n\n\n* `hup docbuild [OPTIONS]`   \n  Build documentation for a  package.\n\n
  \ Flags:\n\n        -e --executables             Run haddock for Executables targets\n
  \       -t --tests                   Run haddock for Test Suite targets\n        -i
  --internal                Run haddock for internal modules and include\n                                     all
  symbols\n           --haddock-arguments=ARGS  extra args to pass to haddock\n        -q
  --quick                   quick build - don't build docco for\n                                     dependencies
  (links will be broken)\n\n* `hup docup [OPTIONS] FILE`  \n  Upload FILE as documentation.\n\n
  \ Flags:\n\n        -s --server=URL       \n        -c --candidate        \n        -u
  --user=USER        \n        -p --password=PASSWORD\n\n* `hup docboth [OPTIONS]`
  \ \n  Build and upload documentation for a package.\n\n  Flags:\n\n        -e --executables
  \            Run haddock for Executables targets\n        -t --tests                   Run
  haddock for Test Suite targets\n        -i --internal                Run haddock
  for internal modules and include\n                                     all symbols\n
  \          --haddock-arguments=ARGS  extra args to pass to haddock\n        -q --quick
  \                  quick build - don't build docco for\n                                     dependencies
  (links may be broken)\n        -s --server=URL            \n        -c --candidate
  \            \n        -u --user=USER             \n        -p --password=PASSWORD
  \     \n\n## Troubleshooting\n\n### I get an error during upload that says \"...:
  does not exist (no such protocol name: tcp)\"\n\nThis is not actually a bug in `hup`,
  but is found in e.g. Docker containers\nthat don't have all the packages needed
  for networking - see e.g. \n[here](https://stackoverflow.com/questions/46322773/yesod-app-in-docker-container-cant-make-network-requests)
  on StackOverflow.\n\nYou will need to install networking packages appropriate for
  your distro - on Ubuntu, something like ca-certificates, libgnutls28 (or another
  version of the GNU TLS library), and netbase.  \n\n### I get some sort of error
  when building documents that says \"...haddock: internal error: ... hGetContents:
  invalid argument (invalid byte sequence)\"\n\nAgain, this isn't actually a bug in
  `hup`, but happens (e.g. in Docker\ncontainers) when the system locale is not properly
  set up (see a bug report\n[here](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=871839)
  arising from a\nsimilar issue). Annoyingly, `haddock` depends on the locale being
  properly set,\nthough it doesn't really seem necessary.\n\nTry running `locale-gen
  \"en_US.UTF-8\"` to generate an appropriate UTF-8\nlocale, and `export LC_ALL=\"en_US.UTF-8\"`
  so that the locale can be found\nfrom environment variables. \n\n## Bash command-line
  completion\n\nTo enable bash command-completion:\n\nRun \n\n    hup --help=bash
  > hup.complete\n\nthen either \"`source hup.complete`\" or \"`. hup.complete`\".\n\n##
  Defaults\n\nUses \"`https://hackage.haskell.org/`\" as the default server location,\nbut
  see the `DefaultServerUrl` module if you want to patch this to\nsomething else before
  installing.    \n\n\n## Bugs and limitations\n\n- Not yet tested on MS Windows or
  MacOS\n\n\n"
license-name: BSD-2-Clause
