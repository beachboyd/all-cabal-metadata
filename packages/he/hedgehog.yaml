homepage: https://hedgehog.qa
changelog-type: markdown
hash: b15d4a514effa35aaa305ed22ae6b2a702686d250c991dda1871e5a029029505
test-bench-deps:
  base: ! '>=3 && <5'
  text: ! '>=1.1 && <1.3'
  hedgehog: -any
  semigroups: ! '>=0.16 && <0.20'
  containers: ! '>=0.4 && <0.7'
  mtl: ! '>=2.1 && <2.3'
  mmorph: ! '>=1.0 && <1.2'
  pretty-show: ! '>=1.6 && <1.10'
  transformers: ! '>=0.3 && <0.6'
maintainer: Jacob Stanley <jacob@stanley.io>
synopsis: Release with confidence.
changelog: "## Version 1.0.2 (2020-01-10)\n- Speed up `Tree.splits` ([#349][349],
  [@treeowl][treeowl])\n- Speed up `Gen.shuffle` ([#348][348], [@treeowl][treeowl])\n-
  Add docs on the bounds of `Size` ([#346][346], [@chris-martin][chris-martin])\n-
  Fix performance issues with color handling ([#345][345], [@stolyaroleh][stolyaroleh])\n-
  Add `mapMaybe`, `mapMaybeT`, in `Tree` and `Gen` ([#339][339], [@treeowl][treeowl])\n-
  Fix some formatting bugs in Haddock ([#332][332], [@sshine][sshine])\n- Add `MonadGen`
  instances for `StateT` ([#321][321], [#330][330], [@HuwCampbell][HuwCampbell] /
  [@tomjaguarpaw][tomjaguarpaw] / [@symbiont-sam-halliday][symbiont-sam-halliday])\n-
  Add `MonadBaseControl` instance for `PropertyT` ([#328][328], [@treeowl][treeowl])\n\n##
  Version 1.0.1 (2019-09-16)\n- Add compatibility with GHC 8.8 ([#319][319], [@erikd][erikd])\n-
  Include location of failed assertion in report. This enables editors to more easily
  parse the location of failed test assertions, and provide links/jump functionality
  ([#308][308], [@owickstrom][owickstrom])\n- Stop using filter to define unicode
  ([#303][303], [@ajmcmiddlin][ajmcmiddlin])\n- Export LabelName from main module
  ([#299][299], [@erikd][erikd])\n\n## Version 1.0 (2019-05-13)\n- Add histograms
  to labels / coverage ([#289][289], [@jacobstanley][jacobstanley])\n- Improved shrinking
  of lists ([#276][276], [@jacobstanley][jacobstanley] / [@edsko][edsko])\n- Simplify
  `MonadGen`, this breaks the use of `StateT` on the outside of a `GenT` for the time
  being, it still works fine on the inside though and you can use `distributeT` to
  run it ([#276][276], [@jacobstanley][jacobstanley])\n- Change `Applicative` `GenT`
  to use zipping ([#272][272], [@jacobstanley][jacobstanley] / [@edsko][edsko])\n-
  Rename `Tree` -> `TreeT`, `Node` -> `NodeT` ([#272][272], [@jacobstanley][jacobstanley])\n-
  `diff` function which takes any `a -> a -> Bool` comparison function ([#196][196],
  [@chessai][chessai] / [@jacobstanley][jacobstanley])\n- Labelling of test runs via
  `label`, `collect` ([#262][262], [@ruhatch][ruhatch] / [@jacobstanley][jacobstanley])\n-
  Classification of test runs via `cover`, `classify` ([#253][253], [@felixmulder][felixmulder]
  / [@jacobstanley][jacobstanley])\n- Define proper `Applicative` instances for `NodeT`,
  `TreeT` and `GenT` ([#173][173][@sjakobi][sjakobi])\n- `MonadFail` instance for
  `PropertyT` ([#267][267], [@geigerzaehler][geigerzaehler])\n- `MonadResource` instance
  for `PropertyT` ([#268][268], [@geigerzaehler][geigerzaehler])\n- Example for the
  `tripping` function ([#258][258], [@HuwCampbell][HuwCampbell])\n- Improve documentation
  for state machine testing ([#252][252], [@endgame][endgame])\n- `runTests` function
  for running tests from a top level executable, this was later renamed to `defaultMain`
  as is the de facto convention ([#168][168], [@erikd][erikd])\n- Show output variables
  when parallel state machine testing fails to linearise ([#235][235], [@HuwCampbell][HuwCampbell])\n-
  Note about `enumBounded` danger ([#202][202], [@thumphries][thumphries])\n- Expose
  `discoverPrefix` to find prefixed properties ([#229][229], [@ruhatch][ruhatch])\n-
  Remove use of `unix` package and replace with `lookupEnv` ([#226][226], [@puffnfresh][puffnfresh])\n\n##
  Version 0.6.1 (2018-09-22)\n\n- Fix UTF-8 related rendering bugs on Windows ([#218][218],
  [@moodmosaic][moodmosaic])\n- Verify that our SplitMix/Seed avoids pathological
  Î³-values ([#207][207], [@moodmosaic][moodmosaic])\n- Avoid weak gamma values in
  Hedgehog.Internal.Seed ([#198][198], [@moodmosaic][moodmosaic])\n\n## Version 0.6
  (2018-05-14)\n\n- Pass [Dieharder][Dieharder] statistical/randomness tests ([#185][185],
  [@moodmosaic][moodmosaic])\n- Catch `readFile` exceptions on the repl ([#184][184],
  [@thumphries][thumphries])\n\n## Version 0.5.3 (2018-03-12)\n\n- Add `Semigroup`
  and `Monoid` instances for `GenT` that lift the inner `Monoid` ([#156][156], [@andrewthad][andrewthad])\n-
  `Gen.unicode` no longer generates non-characters ([#154][154], [@johnchandlerburnham][johnchandlerburnham])\n-
  Documentation improvements ([#162][162], [@fisx][fisx])\n- Documentation fixes ([#157][157],
  [@dredozubov][dredozubov])\n\n## Version 0.5.2 (2018-02-05)\n\n- Add doc explaining
  use of `withTests 1` ([#134][134], [@chris-martin][chris-martin])\n- Explicitly
  define `Semigroup` instance for `Summary` ([#142][142], [@gwils][gwils])\n- Depend
  on `semigroups` ([#140][140], [@LightAndLight][LightAndLight])\n- Support `transformers-0.4`
  ([#150][150], [@gwils][gwils])\n\n## Version 0.5.1 (2017-12-06)\n\n- Only invoke
  `setNumCapabilities` when using the `-threaded` runtime ([#130][130], [@ekmett][ekmett])\n-
  Correct `mixGamma` oddness check ([#124][124], [@markhibberd][markhibberd])\n\n##
  Version 0.5 (2017-07-16)\n\n- Parallel state machine testing, allows detection of
  commands which are not-atomic ([#98][98], [@jacobstanley][jacobstanley])\n- Easier
  to use variables for state machine testing ([#94][94], [@jacobstanley][jacobstanley])\n-
  `MonadGen` class allows the use of transformers like `ReaderT` and `StateT` on the
  outside of generators ([#99][99], [@jacobstanley][jacobstanley])\n- Better error
  messages for tests which throw exceptions ([#95][95], [@jacobstanley][jacobstanley])\n-
  Separated test input generation and assertions in to `PropertyT` and `TestT` respectively,
  this allows `TestT` to have a `MonadBaseControl` instance ([#96][96], [@jacobstanley][jacobstanley])\n-
  This document grew links to the pull requests which introduced various changes ([#93][93],
  [@moodmosaic][moodmosaic])\n\n## Version 0.4.1 (2017-06-28)\n\n- Fixed runtime type
  error that could occur when shrinking state machine commands ([#91][91], [@jacobstanley][jacobstanley])\n\n##
  Version 0.4 (2017-06-28)\n\n- Abstract state machine testing, check out Tim Humphries'
  great [blog post](http://teh.id.au/posts/2017/07/15/state-machine-testing) or the
  [process registry example](https://github.com/hedgehogqa/haskell-hedgehog/blob/master/hedgehog-example/test/Test/Example/Registry.hs)
  to see how it works ([#89][89], [@jacobstanley][jacobstanley])\n- `liftCatch`, `liftCatchIO`,
  `withCatch` functions for isolating exceptions during tests ([#89][89], [@jacobstanley][jacobstanley])\n\n##
  Version 0.3 (2017-06-11)\n\n- Exponential range combinators ([#43][43], [@chris-martin][chris-martin])\n-
  Roundtrip example, check out the [blog post](http://teh.id.au/posts/2017/06/07/round-trip-property/)
  ([#85][85], [@thumphries][thumphries])\n- `tripping` now displays intermediate value
  ([#85][85], [@jacobstanley][jacobstanley])\n- `distribute` function for pulling
  a transformer out to the top level ([#83][83], [@jacobstanley][jacobstanley])\n-
  `withExceptT` function for executing tests with an inner `ExceptT` (e.g. `Test (ExceptT
  x m) a`) ([#83][83], [@jacobstanley][jacobstanley])\n\n## Version 0.2.2 (2017-05-16)\n\n-
  Fixed scope of `unicode` character generators ([#76][76], [@moodmosaic][moodmosaic])\n-
  Widen version bounds for some dependencies ([#80][80], [@amarpotghan][amarpotghan])\n-
  Expose test modules to fix build on nix / hydra ([#78][78], [@amarpotghan][amarpotghan])\n-
  Fixes for GHC 8.2 RC2 ([#77][77], [@erikd][erikd])\n\n## Version 0.2.1 (2017-05-09)\n\n-
  Added `ascii`, `latin1`, `unicode` character generators ([#73][73], [@jacobstanley][jacobstanley])\n\n##
  Version 0.2 (2017-05-06)\n\n- Added a quiet test runner which can be activated by
  setting `HEDGEHOG_VERBOSITY=0` ([@jacobstanley][jacobstanley])\n- Concurrent test
  runner does not display tests until they are executing ([@jacobstanley][jacobstanley])\n-
  Test runner now outputs a summary of how many successful / failed tests were run
  ([@jacobstanley][jacobstanley])\n- `checkSequential` and `checkParallel` now allow
  for tests to be run without Template Haskell ([@jacobstanley][jacobstanley])\n-
  Auto-discovery of properties is now available via `discover` instead of being baked
  in ([@jacobstanley][jacobstanley])\n- `annotate` allows source code to be annotated
  inline with extra information ([@jacobstanley][jacobstanley])\n- `forAllWith` can
  be used to generate values without a `Show` instance ([@jacobstanley][jacobstanley])\n-
  Removed uses of `Typeable` to allow for generating types which cannot implement
  it ([@jacobstanley][jacobstanley])\n\n[Dieharder]:\n  https://webhome.phy.duke.edu/~rgb/General/dieharder.php\n\n[jacobstanley]:\n
  \ https://github.com/jacobstanley\n[chris-martin]:\n  https://github.com/chris-martin\n[thumphries]:\n
  \ https://github.com/thumphries\n[moodmosaic]:\n  https://github.com/moodmosaic\n[amarpotghan]:\n
  \ https://github.com/amarpotghan\n[erikd]:\n  https://github.com/erikd\n[ekmett]:\n
  \ https://github.com/ekmett\n[markhibberd]:\n  https://github.com/markhibberd\n[gwils]:\n
  \ https://github.com/gwils\n[LightAndLight]:\n  https://github.com/LightAndLight\n[johnchandlerburnham]:\n
  \ https://github.com/johnchandlerburnham\n[andrewthad]:\n  https://github.com/andrewthad\n[dredozubov]:\n
  \ https://github.com/dredozubov\n[fisx]:\n  https://github.com/fisx\n[puffnfresh]:\n
  \ https://github.com/puffnfresh\n[ruhatch]:\n  https://github.com/ruhatch\n[HuwCampbell]:\n
  \ https://github.com/HuwCampbell\n[endgame]:\n  https://github.com/endgame\n[geigerzaehler]:\n
  \ https://github.com/geigerzaehler\n[sjakobi]:\n  https://github.com/sjakobi\n[felixmulder]:\n
  \ https://github.com/felixmulder\n[chessai]:\n  https://github.com/chessai\n[edsko]:\n
  \ https://github.com/edsko\n[ajmcmiddlin]:\n  https://github.com/ajmcmiddlin\n[owickstrom]:\n
  \ https://github.com/owickstrom\n[treeowl]:\n  https://github.com/treeowl\n[tomjaguarpaw]:\n
  \ https://github.com/tomjaguarpaw \n[symbiont-sam-halliday]:\n  https://github.com/symbiont-sam-halliday\n[sshine]:\n
  \ https://github.com/sshine\n[stolyaroleh]:\n  https://github.com/stolyaroleh\n\n[349]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/349\n[348]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/348\n[346]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/346\n[345]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/345\n[339]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/339\n[332]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/332\n[330]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/330\n[328]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/328\n[321]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/321\n[319]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/319\n[308]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/308\n[303]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/303\n[299]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/299\n[289]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/289\n[276]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/276\n[272]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/272\n[268]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/268\n[267]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/267\n[262]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/262\n[258]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/258\n[253]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/253\n[252]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/252\n[235]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/235\n[229]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/229\n[226]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/226\n[218]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/218\n[207]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/207\n[202]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/202\n[198]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/198\n[196]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/196\n[185]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/185\n[184]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/184\n[173]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/173\n[168]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/168\n[162]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/162\n[157]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/157\n[156]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/156\n[154]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/154\n[150]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/150\n[142]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/142\n[140]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/140\n[134]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/134\n[130]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/130\n[124]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/124\n[99]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/99\n[98]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/98\n[96]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/96\n[95]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/95\n[94]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/94\n[93]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/93\n[91]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/91\n[89]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/89\n[85]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/85\n[83]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/83\n[80]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/80\n[78]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/78\n[77]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/77\n[76]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/76\n[73]:\n
  \ https://github.com/hedgehogqa/haskell-hedgehog/pull/73\n[43]:\n  https://github.com/hedgehogqa/haskell-hedgehog/pull/43\n"
basic-deps:
  exceptions: ! '>=0.7 && <0.11'
  bytestring: ! '>=0.10 && <0.11'
  stm: ! '>=2.4 && <2.6'
  fail: ! '>=4.9 && <5'
  base: ! '>=4.9 && <5'
  time: ! '>=1.4 && <1.10'
  text: ! '>=1.1 && <1.3'
  monad-control: ! '>=1.0 && <1.1'
  async: ! '>=2.0 && <2.3'
  semigroups: ! '>=0.16 && <0.20'
  concurrent-output: ! '>=1.7 && <1.11'
  erf: ! '>=2.0 && <2.1'
  containers: ! '>=0.4 && <0.7'
  wl-pprint-annotated: ! '>=0.0 && <0.2'
  ansi-terminal: ! '>=0.6 && <0.11'
  mtl: ! '>=2.1 && <2.3'
  mmorph: ! '>=1.0 && <1.2'
  lifted-async: ! '>=0.7 && <0.11'
  transformers-base: ! '>=0.4.5.1 && <0.5'
  pretty-show: ! '>=1.6 && <1.10'
  transformers: ! '>=0.5 && <0.6'
  random: ! '>=1.1 && <1.2'
  resourcet: ! '>=1.1 && <1.3'
  template-haskell: ! '>=2.10 && <2.16'
  primitive: ! '>=0.6 && <0.8'
  directory: ! '>=1.2 && <1.4'
all-versions:
- '0.1'
- '0.2'
- 0.2.1
- 0.2.2
- '0.3'
- '0.4'
- 0.4.1
- '0.5'
- 0.5.1
- 0.5.2
- 0.5.3
- '0.6'
- 0.6.1
- '1.0'
- 1.0.1
- 1.0.2
author: Jacob Stanley
latest: 1.0.2
description-type: markdown
description: |
  <!--
  Apologies to those who are able to read this. Unfortunately, Hackage
  doesn't seem to render the HTML portion of the markdown spec so you may
  be better off paying us a visit on GitHub instead:
  https://github.com/hedgehogqa/haskell-hedgehog
  -->

  <div align="center">

  <img width="400" src="https://github.com/hedgehogqa/haskell-hedgehog/raw/master/img/hedgehog-text-logo.png" />

  # Release with confidence.

  [![Hackage][hackage-shield]][hackage] [![Travis][travis-shield]][travis] [![AppVeyor][appveyor-shield]][appveyor]

  <div align="left">

  [Hedgehog](http://hedgehog.qa/) automatically generates a comprehensive array of test cases, exercising your software in ways human testers would never imagine.

  Generate hundreds of test cases automatically, exposing even the most insidious of corner cases. Failures are automatically simplified, giving developers coherent, intelligible error messages.

  ## Features

  - Integrated shrinking, shrinks obey invariants by construction.
  - Abstract state machine testing.
  - Generators allow monadic effects.
  - Range combinators for full control over the scope of generated numbers and collections.
  - Equality and roundtrip assertions show a diff instead of the two inequal values.
  - Template Haskell test runner which executes properties concurrently.

  ## Example

  The main module, [Hedgehog][haddock-hedgehog], includes almost
  everything you need to get started writing property tests with Hedgehog.

  It is designed to be used alongside [Hedgehog.Gen][haddock-hedgehog-gen]
  and [Hedgehog.Range][haddock-hedgehog-range] which should be imported
  qualified. You also need to enable Template Haskell so the Hedgehog test
  runner can find your properties.


  ```hs
  {-# LANGUAGE TemplateHaskell #-}

  import           Hedgehog
  import qualified Hedgehog.Gen as Gen
  import qualified Hedgehog.Range as Range
  ```

  Once you have your imports set up, you can write a simple property:

  ```hs
  prop_reverse :: Property
  prop_reverse =
    property $ do
      xs <- forAll $ Gen.list (Range.linear 0 100) Gen.alpha
      reverse (reverse xs) === xs
  ```

  And add the Template Haskell splice which will discover your properties:

  ```hs
  tests :: IO Bool
  tests =
    checkParallel $$(discover)
  ```

  If you prefer to avoid macros, you can specify the group of properties
  to run manually instead:

  ```hs
  {-# LANGUAGE OverloadedStrings #-}

  tests :: IO Bool
  tests =
    checkParallel $ Group "Test.Example" [
        ("prop_reverse", prop_reverse)
      ]
  ```

  You can then load the module in GHCi, and run it:

  ```
  Î» tests
  âââ Test.Example âââ
    â prop_reverse passed 100 tests.

  ```

  <div align="center">
  <br />
  <img width="307" src="https://github.com/hedgehogqa/haskell-hedgehog/raw/master/img/hedgehog-logo-grey.png" />

   [hackage]: http://hackage.haskell.org/package/hedgehog
   [hackage-shield]: https://img.shields.io/hackage/v/hedgehog.svg?style=flat

   [travis]: https://travis-ci.org/hedgehogqa/haskell-hedgehog
   [travis-shield]: https://travis-ci.org/hedgehogqa/haskell-hedgehog.svg?branch=master

   [appveyor]: https://ci.appveyor.com/project/hedgehogqa/haskell-hedgehog
   [appveyor-shield]: https://ci.appveyor.com/api/projects/status/o4rlstbc80sum3on/branch/master?svg=true

   [haddock-hedgehog]: http://hackage.haskell.org/package/hedgehog/docs/Hedgehog.html
   [haddock-hedgehog-gen]: http://hackage.haskell.org/package/hedgehog/docs/Hedgehog-Gen.html
   [haddock-hedgehog-range]: http://hackage.haskell.org/package/hedgehog/docs/Hedgehog-Range.html
license-name: BSD-3-Clause
