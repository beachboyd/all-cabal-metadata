homepage: https://github.com/davidm-d/heterogeneous-list-literals
changelog-type: markdown
hash: 2a848c6e52f5c4f6797c431fa0739b26dcd8b2770976f90b5c267aa35a1bc57e
test-bench-deps:
  base: -any
  heterogeneous-list-literals: -any
maintainer: dmillardurrant@gmail.com
synopsis: Allows the use of tuples as literals for Heterogeneous collections
changelog: ''
basic-deps:
  base: ! '>=4.9 && <=4.11'
  OneTuple: ! '>=0.2.1'
all-versions:
- '0.1.0.1'
author: David Millar-Durrant
latest: '0.1.0.1'
description-type: haddock
description: ! 'This is an incredibly simple library, which makes writing literals
  for heterogeneous collections easy


  If you write a function with the signature


  > hList :: HLL input output => input -> HList output

  then


  > a :: HList ''[]

  > a = hList ()

  >

  > b :: HList ''[Bool]

  > b = hList (OneTuple True)

  >

  > c :: HList ''[Bool, Int, Double, String]

  > c = hList (True, 24, 10.5, "Fire")


  The full code is in test\/Docs.hs


  This only supports literals of length up to 20, though that can be easily extended
  using the code generator in src\/Data\/HeterogeneousListLiterals'
license-name: BSD3
