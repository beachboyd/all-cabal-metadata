homepage: https://github.com/ndmitchell/hexml#readme
changelog-type: text
hash: 5a847f4699e97e95b76f744a6615fabe8514f448d9951e3c2aca8d108c6aa60b
test-bench-deps:
  bytestring: -any
  base: -any
  hexml: -any
maintainer: Neil Mitchell <ndmitchell@gmail.com>
synopsis: XML subset DOM parser
changelog: ! "Changelog for Hexml\n\n0.3.3\n    #13, allow the . character in tags
  and attributes\n0.3.2\n    #10, mark the small fast FFI calls as \"unsafe\" (up
  to 10x faster)\n0.3.1\n    #9, don't walk off the end of the character table\n0.3\n
  \   #8, Mac compatibility\n    Fix a bug when parsing closing comments\n    #7,
  prefix all the C functions with hexml_\n0.2\n    #6, remove buffer overruns\n    #5,
  add lower bounds\n0.1\n    Initial version\n"
basic-deps:
  bytestring: -any
  extra: ! '>=0.3'
  base: ! '>=4.5 && <5'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.3.3'
author: Neil Mitchell <ndmitchell@gmail.com>
latest: '0.3.3'
description-type: markdown
description: ! '# Hexml [![Hackage version](https://img.shields.io/hackage/v/hexml.svg?label=Hackage)](https://hackage.haskell.org/package/hexml)
  [![Stackage version](https://www.stackage.org/package/hexml/badge/lts?label=Stackage)](https://www.stackage.org/package/hexml)
  [![Linux Build Status](https://img.shields.io/travis/ndmitchell/hexml.svg?label=Linux%20build)](https://travis-ci.org/ndmitchell/hexml)
  [![Windows Build Status](https://img.shields.io/appveyor/ci/ndmitchell/hexml.svg?label=Windows%20build)](https://ci.appveyor.com/project/ndmitchell/hexml)


  An XML DOM-style parser, that only parses a subset of XML, but is designed to be
  fast. In particular:


  * Entities, e.g. `&amp;`, are not expanded.

  * Not all the validity conditions are checked.

  * No support for `<!DOCTYPE` related features.


  The name "hexml" is a combination of "Hex" (a curse) and "XML". The "X" should not
  be capitalised because the parser is more curse and less XML.


  Hexml may be suitable if you want to quickly parse XML, from known sources, and
  a full XML parser has been shown to be a bottleneck. As an alternative to hexml,
  which supports things like entities but is still pretty fast, see [Pugixml](http://pugixml.org/)
  (with a [Haskell binding](https://hackage.haskell.org/package/pugixml)).


  Hexml is tested with [AFL](http://lcamtuf.coredump.cx/afl/).


  If you want lenses for Hexml, see [hexml-lens](http://hackage.haskell.org/package/hexml-lens).

'
license-name: BSD3
