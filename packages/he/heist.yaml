homepage: http://snapframework.com/
changelog-type: ''
hash: 4d2c44a3d2102a9102b156dd11df7eac4218f2737f9f1a33e89d4d2c49f5dd5b
test-bench-deps:
  test-framework-hunit: ! '>=0.2.7 && <0.4'
  bytestring: -any
  test-framework: ! '>=0.4 && <0.9'
  base: -any
  time: -any
  unordered-containers: -any
  text: -any
  map-syntax: -any
  monad-control: -any
  filepath: -any
  test-framework-quickcheck2: ! '>=0.2.12.1 && <0.4'
  criterion: ! '>=1.0 && <1.3'
  process: -any
  lifted-base: -any
  dlist: -any
  HUnit: ! '>=1.2 && <2'
  containers: -any
  xmlhtml: -any
  blaze-builder: -any
  lens: ! '>=4.3 && <4.16'
  bifunctors: ! '>=5.3 && <5.6'
  directory-tree: -any
  mtl: -any
  statistics: ! '>=0.11 && <0.15'
  hashable: -any
  blaze-html: -any
  transformers-base: -any
  attoparsec: -any
  transformers: -any
  random: -any
  QuickCheck: ! '>=2 && <2.11'
  aeson: -any
  vector: -any
  directory: -any
maintainer: snap@snapframework.com
synopsis: An Haskell template system supporting both HTML5 and XML.
changelog: ''
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4.5 && <5'
  time: ! '>=1.1 && <1.9'
  unordered-containers: ! '>=0.1.4 && <0.3'
  text: ! '>=0.10 && <1.3'
  map-syntax: ! '>=0.2 && <0.3'
  monad-control: ! '>=0.3 && <1.1'
  filepath: ! '>=1.3 && <1.5'
  process: ! '>=1.1 && <1.7'
  lifted-base: ! '>=0.2 && <0.3'
  dlist: ! '>=0.5 && <0.9'
  containers: ! '>=0.2 && <0.6'
  xmlhtml: ! '>=0.2.3.5 && <0.3'
  blaze-builder: ! '>=0.2 && <0.5'
  directory-tree: ! '>=0.10 && <0.13'
  mtl: ! '>=2.0 && <2.3'
  hashable: ! '>=1.1 && <1.3'
  blaze-html: ! '>=0.4 && <0.10'
  transformers-base: ! '>=0.4 && <0.5'
  attoparsec: ! '>=0.10 && <0.14'
  transformers: ! '>=0.3 && <0.6'
  random: ! '>=1.0.1.0 && <1.2'
  aeson: ! '>=0.6 && <1.4'
  vector: ! '>=0.9 && <0.13'
  directory: ! '>=1.1 && <1.4'
all-versions:
- '0.1.1'
- '0.1.2'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.3.0.0'
- '0.4.0.0'
- '0.4.0.1'
- '0.5.0.0'
- '0.5.0.1'
- '0.5.1.0'
- '0.5.1.1'
- '0.5.2'
- '0.5.2.1'
- '0.5.3'
- '0.6.0'
- '0.6.0.1'
- '0.6.1'
- '0.7.0'
- '0.7.0.1'
- '0.8.0'
- '0.8.1'
- '0.8.1.1'
- '0.8.2'
- '0.10.0'
- '0.10.1'
- '0.10.2'
- '0.10.2.1'
- '0.11.0'
- '0.11.0.1'
- '0.11.1'
- '0.12.0'
- '0.13.0'
- '0.13.0.1'
- '0.13.0.2'
- '0.13.0.3'
- '0.13.0.4'
- '0.13.0.5'
- '0.13.0.6'
- '0.13.1'
- '0.13.1.1'
- '0.13.1.2'
- '0.14.0'
- '0.14.0.1'
- '0.14.1'
- '0.14.1.1'
- '0.14.1.2'
- '0.14.1.3'
- '0.14.1.4'
- '1.0.0.0'
- '1.0.1.0'
- '1.0.1.1'
- '1.0.1.2'
author: Doug Beardsley, Gregory Collins
latest: '1.0.1.2'
description-type: markdown
description: ! "# Heist\n\n[![Build Status](https://travis-ci.org/snapframework/heist.svg?branch=master)](https://travis-ci.org/snapframework/heist)\n\nHeist,
  part of the [Snap Framework](http://www.snapframework.com/), is a\nHaskell library
  for xml/html templating. It uses simple XML tags to bind\nvalues to your templates
  in a straightforward way. For example, if you were to\nput the following in a template:\n\n
  \   <bind tag=\"message\">some text</bind>\n    <p><message/></p>\n\nthe resulting
  xhtml would be\n\n    <p>some text</p>\n\nLikewise, if you need to add text to an
  attribute,\n\n    <bind tag=\"special\">special-id</bind>\n    <div id=\"${special}\">very
  special</div>\n\ngives you\n\n    <div id=\"special-id\">very special</div>\n\nValues
  can also be pulled from \"Splices\" (see \n[the documentation](http://snapframework.com/docs/tutorials/heist#heist-programming)
  \nfor more information.)\n\n## Building heist\n\nThe heist library is built using
  [Cabal](http://www.haskell.org/cabal/) and\n[Hackage](http://hackage.haskell.org/packages/hackage.html).
  Just run\n\n    cabal install\n\nfrom the `heist` toplevel directory.\n\n\n## Building
  the Haddock Documentation\n\nThe haddock documentation can be built using the supplied
  `haddock.sh` shell\nscript:\n\n    ./haddock.sh\n\nThe docs get put in `dist/doc/html/`.\n\n\n##
  Building the testsuite\n\nTo build the test suite, `cd` into the `test/` directory
  and run\n\n    $ cabal configure\n    $ cabal build\n\nFrom here you can invoke
  the testsuite by running:\n\n    $ ./runTestsAndCoverage.sh \n\nThe testsuite generates
  an `hpc` test coverage report in `test/dist/hpc`.\n"
license-name: BSD3
