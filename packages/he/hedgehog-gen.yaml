homepage: https://github.com/byteally/hedgehog-gen
changelog-type: markdown
hash: d3e52dc754db8d6eac48c6805f49a713f0d02fbe1755cbe8c51ac52aa6c0a737
test-bench-deps: {}
maintainer: magesh85@gmail.com
synopsis: Customizable Gen for ADT using Generics
changelog: |
  # Revision history for hedgehog-gen

  ## 0.1.0.0 -- YYYY-mm-dd

  * First version. Released on an unsuspecting world.
basic-deps:
  bytestring: ==0.10.*
  base: ! '>=4.9 && <5'
  text: ! '>=1.1 && <1.3'
  hedgehog: ! '>1.0 && <1.1'
  typerep-map: ! '>=0.3.2'
all-versions:
- 0.1.0.0
author: Magesh
latest: 0.1.0.0
description-type: markdown
description: |
  # hedgehog-gen
  Customizable Gen for ADT using Generics

  ## Tutorial

  ```haskell

  import Hedgehog
  import qualified Hedgehog.Gen as Gen
  import qualified Hedgehog.Range as Range
  import Hedgehog.Gen.Generic
  import Data.Function

  data Gender = Male | Female | Other
    deriving (Show, Eq, Generic)

  data User = User
    { name :: Text
    , age :: Word
    , gender :: Gender
    } deriving (Show, Eq, Generic)

  userGen1 :: Hedgehog.Gen User
  userGen1 = mkGen emptyGens


  userGen2 :: Hedgehog.Gen User
  userGen2 = mkGen $ emptyGens
             & byField @User @"age" (Gen.word (Range.constant 1 120))
             & byPos @User @1 (Gen.element ["foo", "bar", "baz"])

  ```
license-name: BSD-3-Clause
