homepage: ''
changelog-type: markdown
hash: ec08e522f65a55fcb1172384b283ec10b0d83b40833e5b835310cd2d415365a9
test-bench-deps: {}
maintainer: portnov84@rambler.ru
synopsis: Full-weight logging based on fast-logger
changelog: ! '# Revision history for heavy-logger


  ## 0.1.0.0  -- YYYY-mm-dd


  * First version. Released on an unsuspecting world.

'
basic-deps:
  bytestring: ! '>=0.10.6'
  base: ! '>=4.8 && <5.0'
  hsyslog: ! '>=5'
  text-format-heavy: ! '>=0.1.2.0'
  text: ! '>=1.2.2.1'
  monad-control: ! '>=1.0.1.0'
  fast-logger: ! '>=2.4.10'
  mtl: ! '>=2.2.1'
  transformers-base: ! '>=0.4.4'
  monad-logger: ! '>=0.3.22'
  attoparsec: ! '>=0.13.1.0'
  template-haskell: ! '>=2.10.0'
all-versions:
- '0.1.0.0'
author: Ilya Portnov
latest: '0.1.0.0'
description-type: markdown
description: ! "heavy-logger README\n===================\n\nThis is Haskell logging
  library, which prefers functionality and extendability over light weight and simplicity.\nIt
  can use [fast-logger][1] as backend and is compatible with [monad-logger][2] interface,
  so it can be used in [WAI][3] projects.\nheavy-logger is integrated with [text-format-heavy][4]
  string formatting library.\n\nMost notable features of heavy-logger are:\n\n* Several
  backends and possibility to write your own backends. The provided backends are:\n
  \ * Fast-logger backend. It allows to write messages to stdout, stderr or arbitrary
  file.\n  * Syslog backend.\n  * Chan backend. Writes messages to a Chan, so they
  can be read from the other side.\n* Possibility to define log message format in
  the output file. For example, do you want to\n  see event severity level first,
  and then time, or vice versa?\n* Possibility to easily set up message filtering
  based on message source and severity level.\n  For example, you may want to write
  only Info messages, but also Debug messages from one module.\n* Text formatting
  library integration. Formatting of messages by `text-format-heavy` is done lazily;\n
  \ so, you can issue a lot of debug messages, that include data that take time to
  present as a string;\n  the formatting will be executed only in the case when debug
  output for this module is actually enabled\n  by the filter.\n\n[1]: https://hackage.haskell.org/package/fast-logger\n[2]:
  https://hackage.haskell.org/package/monad-logger\n[3]: https://hackage.haskell.org/package/wai\n[4]:
  https://hackage.haskell.org/package/text-format-heavy\n"
license-name: BSD3
