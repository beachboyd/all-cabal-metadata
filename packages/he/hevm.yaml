homepage: https://github.com/dapphub/dapptools
changelog-type: markdown
hash: 0cd9df6d81cd63e0df044d6bea63e5259604e60357a19536eae787bd5de5ae54
test-bench-deps:
  free: -any
  sbv: -any
  bytestring: -any
  here: -any
  base: -any
  text: -any
  HUnit: '>=1.6'
  containers: -any
  lens: -any
  binary: -any
  tasty-quickcheck: '>=0.9'
  mtl: -any
  tasty-hunit: '>=0.10'
  base16-bytestring: -any
  tasty: '>=1.0'
  QuickCheck: -any
  hevm: -any
  vector: -any
maintainer: mikael@brockman.se, martin.lundfall@gmail.com
synopsis: Ethereum virtual machine evaluator
changelog: "# hevm changelog\n\n## 0.41.0 - 2020-08-19\n\n### Changed\n\n- Switched
  to [PVP](https://github.com/haskell/pvp/blob/master/pvp-faq.md) for version control,
  starting now at `0.41.0` (MAJOR.MAJOR.MINOR).\n- z3 updated to 4.8.7\n- Generate
  more interesting values in property based testing, \n and implement proper shrinking
  for all abi values.\n- Fixed soundness bug when using KECCAK or SHA256 opcode/precompile\n-
  Fixed an issue in debug mode where backstepping could cause path information to
  be forgotten\n- Ensure that pathconditions are consistent when branching, and end
  the execution with VMFailure: DeadPath if this is not the case\n- Fixed a soundness
  bug where nonzero jumpconditions  were assumed to equal one.\n- default `--smttimeout`
  changed from unlimited to 20 seconds\n- `hevm symbolic --debug` now respects `--max-iterations`\n\n###
  Added\n\n- `hevm exec --trace` flag to dump a trace\n- Faster backstepping in interactive
  mode by saving multiple snapshot states.\n- Support for symbolic storage for multiple
  contracts\n\n## 0.40 - 2020-07-22\n\n- hevm is now capable of symbolic execution!\n\n###
  Changed\nAs a result, the types of several registers of the EVM have changed to
  admit symbolic values as well as concrete ones.\n\n  - state.stack: `Word` -> `SymWord`.\n
  \ - state.memory: `ByteString` -> `[SWord 8]`.\n  - state.callvalue: `W256` -> `SymWord`.\n
  \ - state.caller: `Addr` -> `SAddr`.\n  - state.returndata: `ByteString` -> `[SWord
  8]`.\n  - state.calldata: `ByteString` -> `([SWord 8], (SWord 32))`. The first element
  is a list of symbolic bytes, the second is the length of calldata. We have `fst
  calldata !! i .== 0` for all `snd calldata < i`.\n  \n  - tx.value: `W256` -> `SymWord`.\n
  \ \n  - contract.storage: `Map Word Word` -> `Storage`, defined as:\n```hs\ndata
  Storage\n  = Concrete (Map Word SymWord)\n  | Symbolic (SArray (WordN 256) (WordN
  256))\n  deriving (Show)\n```\n\n### Added\nNew cli commands:\n - `hevm symbolic`:
  search for assertion violations, or step through a symbolic execution in debug mode.\n
  - `hevm equivalence`: compare two programs for equivalence.\n\nSee the README for
  details on usage.\n\nThe new module `EVM.SymExec` exposes several library functions
  dealing with symbolic execution.\nIn particular, \n - `SymExec.interpret`: implements
  an operational monad script similar to `TTY.interpret` and `Stepper.interpret`,
  but returns a list of final VM states rather than a single VM.\n - `SymExec.verify`:
  takes a prestate and a postcondition, symbolically executes the prestate and checks
  that all final states matches the postcondition.\n\n### Removed\n\nThe concrete
  versions of a lot of arithmetic operations, replaced with their more general symbolic
  counterpart.\n\n\n## 0.39 - 2020-07-13\n - Exposes abi encoding to cli\n - Added
  cheat code `hevm.store(address a, bytes32 location, bytes32 value)`\n - Removes
  `ExecMode`, always running as `ExecuteAsBlockchainTest`. This means that `hevm exec`
  now finalizes transactions as well.\n - `--code` is now entirely optional. Not supplying
  it returns an empty contract, or whatever is stored in `--state`.\n\n## 0.38 - 2020-04-23\n
  - Exposes metadata stripping of bytecode to the cli: `hevm strip-metadata --code
  X`. [357](https://github.com/dapphub/dapptools/pull/357).\n - Fixes a bug in the
  srcmap parsing introduced in 0.37 [356](https://github.com/dapphub/dapptools/pull/356).\n
  - Fixes a bug in the abi-encoding of `bytes` with size > 32[358](https://github.com/dapphub/dapptools/pull/358).\n\n##
  0.37 - 2020-03-24\n - Sourcemap parser now admits `solc-0.6.0` compiled `.sol.json`
  files.\n\n## 0.36 - 2020-01-07\n - Implement Istanbul support [318](https://github.com/dapphub/dapptools/pull/318)\n
  - Fix a bug introduced in [280](https://github.com/dapphub/dapptools/pull/280) of
  rlp encoding of transactions and sender address [320](https://github.com/dapphub/dapptools/pull/320/).\n
  - Make InvalidTx a fatal error for vm tests and ci.\n - Suport property based testing
  in unit tests. [313](https://github.com/dapphub/dapptools/pull/313) Arguments to
  test functions are randomly generated based on the function abi. Fuzz tests are
  not present in the graphical debugger.\n - Added flags `--replay` and `--fuzz-run`
  to `hevm dapp-test`, allowing for particular fuzz run cases to be rerun, or for
  configuration of how many fuzz tests are run.\n - Correct gas readouts for unit
  tests\n - Prevent crash when trying to jump to next source code point if source
  code is missing\n\n## 0.35 - 2019-11-02\n - Merkle Patricia trie support [280](https://github.com/dapphub/dapptools/pull/280)\n
  - RLP encoding and decoding functions [280](https://github.com/dapphub/dapptools/pull/280)\n
  - Extended support for Solidity ABI encoding [259](https://github.com/dapphub/dapptools/pull/259)\n
  - Bug fixes surrounding unit tests and gas accounting (https://github.com/dapphub/dapptools/commit/574ef401d3e744f2dcf994da056810cf69ef84fe,
  https://github.com/dapphub/dapptools/commit/5257574dd9df14edc29410786b75e9fb9c59069f)\n\n##
  0.34 - 2019-08-28\n - handle new solc bzzr metadata in codehash for source map\n
  - show VM hex outputs as hexadecimal\n - rpc defaults to latest block\n - `hevm
  interactive`:\n  - fix rpc fetch\n  - scrollable memory pane\n - Fix regression
  in VMTest compliance.\n - `hevm exec` ergonomics:\n  - Allow code/calldata prefixed
  with 0x\n  - create transactions with specific caller nonce\n  - interactive help
  pane\n  - memory pane scrolling\n\n## 0.33 - 2019-08-06\n - Full compliance with
  the [General State Tests][245] (with the\n   BlockchainTest format), using the Yellow
  and Jello papers as\n   reference, for Constantinople Fix (aka Petersburg). Including:\n
  \ - full precompile support\n  - correct substate accounting, including touched
  accounts,\n    selfdestructs and refunds\n  - memory read/write semantics\n  - many
  gas cost corrections\n - Show more information for non solc bytecode in interactive
  view\n   (trace and storage)\n - Help text for all cli options\n - Enable `--debug`
  flag in `hevm dapp-test`\n\n[245]: https://github.com/dapphub/dapptools/pull/245\n\n##
  0.32 - 2019-06-14\n - Fix dapp-test [nonce initialisation bug][224]\n\n[224]: https://github.com/dapphub/dapptools/pull/224\n\n##
  0.31 - 2019-05-29\n - Precompiles: SHA256, RIPEMD, IDENTITY, MODEXP, ECADD, ECMUL,\n
  \  ECPAIRING, MODEXP\n - Show the hevm version with `hevm version`\n - Interactive
  mode:\n  - no longer exits on reaching halt\n  - new shortcuts: 'a' / 'e' for start
  / end\n  - allow returning to test picker screen\n - Exact integer formatting in
  dapp-test and tty\n\n## 0.30 - 2019-05-09\n - Adjustable verbosity level for `dapp-test`
  with `--verbose={0,1,2}`\n - Working stack build\n\n## 0.29 - 2019-04-03\n - Significant
  jump in compliance with client tests\n - Add support for running GeneralStateTests\n\n##
  0.28 - 2019-03-22\n - Fix delegatecall gas metering, as reported in\n   https://github.com/dapphub/dapptools/issues/34\n\n##
  0.27 - 2019-02-06\n - Fix [hevm flatten issue](https://github.com/dapphub/dapptools/issues/127)\n
  \  related to SemVer ranges in Solidity version pragmas\n\n## 0.26 - 2019-02-05\n
  - Format Solidity Error(string) messages in trace\n\n## 0.25 - 2019-02-04\n - Add
  SHL, SHR and SAR opcodes\n\n## 0.24 - 2019-01-23\n - Fix STATICCALL for precompiled
  contracts\n - Assume Solidity 0.5.2 in tests\n\n## 0.23 - 2018-12-12\n - Show passing
  test traces with --verbose flag\n\n## 0.22 - 2018-11-13\n - Simple memory view in
  TTY\n\n## 0.21 - 2018-10-29\n - Fix Hackage package by including C header files
  for ethjet\n\n## 0.20 - 2018-10-27\n - Parse constructor inputs from Solidity AST\n\n##
  0.19 - 2018-10-09\n - Enable experimental 'cheat' address, allowing for modification
  of the\n   EVM environment from within the tests. Currently just the block\n   timestamp
  can be adjusted.\n\n## 0.18 - 2018-10-09\n - Fix [duplicate address bug](https://github.com/dapphub/dapptools/issues/70)\n\n##
  0.17 - 2018-10-05\n - Semigroup/Monoid fix\n\n## 0.16 - 2018-09-19\n - Move ethjet
  into hevm\n\n## [0.15] - 2018-05-09\n - Fix SDIV/SMOD definitions for extreme case\n\n##
  [0.14.1] - 2018-04-17\n - Improve PC display in TTY\n\n## [0.14] - 2018-03-08\n
  - Implement STATICCALL\n\n## [0.13] - 2018-02-28\n - Require specific block number
  for RPC debugging\n - Implement RETURNDATACOPY and RETURNDATASIZE\n - Fix bug where
  created contracts didn't get their balance\n\n## [0.12.3] - 2017-12-19\n - More
  useful RPC debugging because we strip the entire BZZR metadata\n\n## [0.12.2] -
  2017-12-17\n - Experimental new ecrecover implementation via libethjet\n - Correct
  error checking for setUp() invocations\n\n## [0.12.1] - 2017-11-28\n - Test name
  regex matching via --match\n - Fixed source map parsing bug when used with solc
  --optimize\n - TTY: fix a padding-related display glitch\n\n## [0.12] - 2017-11-14\n
  - Use 13 different environment variables to control block parameters\n   for unit
  testing, e.g. block number, timestamp, initial balance, etc.\n\n   Full list:\n\n
  \    - `DAPP_TEST_ADDRESS`\n     - `DAPP_TEST_CALLER`\n     - `DAPP_TEST_ORIGIN`\n
  \    - `DAPP_TEST_GAS_CREATE`\n     - `DAPP_TEST_GAS_CALL`\n     - `DAPP_TEST_BALANCE_CREATE`\n
  \    - `DAPP_TEST_BALANCE_CALL`\n     - `DAPP_TEST_COINBASE`\n     - `DAPP_TEST_NUMBER`\n
  \    - `DAPP_TEST_TIMESTAMP`\n     - `DAPP_TEST_GAS_LIMIT`\n     - `DAPP_TEST_GAS_PRICE`\n
  \    - `DAPP_TEST_DIFFICULTY`\n\n## [0.11.5] - 2017-11-14\n - Use --state with --exec
  --debug\n\n## [0.11.4] - 2017-11-12\n - Fix bug when unit test contract has creations
  in constructor\n\n## [0.11.3] - 2017-11-08\n - Fix array support in ABI module\n\n##
  [0.11.2] - 2017-11-04\n - TTY: show a help bar with key bindings at the bottom\n\n##
  [0.11.1] - 2017-11-02\n - TTY: fix a display glitch\n - TTY: improve display of
  ABI hashes on the stack\n\n## [0.11] - 2017-10-31\n - Add \"hevm flatten\" for Etherscan-ish
  source code concatenation\n - Simplify code by removing concrete/symbolic machine
  abstraction\n\n## [0.10.9] - 2017-10-23\n - Fix bugs in ABI formatting\n\n## [0.10.7]
  - 2017-10-19\n - Fix library linking bug\n - Fix gas consumption of DELEGATECALL\n
  - Better error tracing\n - Experimental \"contract browser\" (stupid list of addresses)\n\n##
  [0.10.6] - 2017-10-19\n - Enable library linking for unit tests and debugger\n -
  Use the same default gas/balance values as `ethrun`\n\n## [0.10.5] - 2017-10-17\n
  - Better trace output including arguments and return values\n - Proof of concept
  coverage analysis via `dapp-test --coverage`\n\n## [0.10] - 2017-10-10\n - Enable
  new trace output by default for failing tests\n - Exit with failure code from test
  runner when tests fail\n - More fixes to improve Ethereum test suite compliance\n\n##
  [0.9.5] - 2017-10-06\n - Prototype of new trace output with `hevm dapp-test --verbose`\n
  - Nicer trace tree in the TTY debugger\n - Many fixes to improve Ethereum test suite
  compliance\n\n## [0.9] - 2017-09-29\n - Integrates with live chains via RPC (read-only)\n
  - Exposes a special contract address with test-related functionality (time warp)\n\n##
  [0.8.5] - 2017-09-22\n - Renames `hevm` from its maiden name `hsevm` :sparkles:\n\n##
  [0.8] - 2017-09-21\n - Implements gas metering (Metropolis rules by default)\n -
  Shows gas counter in the terminal interface\n - Enables debugger for consensus test
  executions\n - Consensus test runner script with HTML reporting\n - Passes 564 of
  the `VMTests`; fails 115 (see [0.8 test report])\n - Command line options for specifying
  initial gas amounts and balances\n - Improved TTY UI layout\n\n## [0.7] - 2017-09-07\n
  - Can save and load contract states to disk using a Git-backed store (only `--exec`)\n
  - Can debug raw EVM bytecode using `exec --debug`\n - Fixes `exec --value`\n - Has
  smarter defaults for command line when running tests or debugging\n - Fixes bug
  with `MSIZE` in `CALL` context\n\n## [0.6.5] - 2017-09-01\n - Fixes `exec` with
  regards to exit codes and error messages\n\n## [0.6.1] - 2017-08-03\n - TTY: Adds
  command `C-n` in TTY for \"stepping over\"\n\n## [0.6] - 2017-08-03\n - TTY: Adds
  second line to stack entries with humanized formatting\n - TTY: Gets rid of the
  separate log pane in favor of a unified trace pane\n\n## [0.5] - 2017-08-02\n -
  TTY: Adds `p` command for stepping backwards\n - Adds ability to track origins of
  stack and heap words\n - Tracks Keccak preimage for words that come from the `SHA3`
  instruction\n\n## [0.4] - 2017-07-31\n - Parallelizes unit test runner\n - Improves
  speed by changing representation of memory\n - Internal refactoring for future support
  of symbolic execution\n - Adds logs to the trace pane\n\n## [0.3.2] - 2017-06-17\n
  - Adds `REVERT` opcode\n - Sets `TIMESTAMP` value to `1` in unit tests\n\n## [0.3.0]
  - 2017-06-14\n - Reverts contract state after `CALL` fails\n - Improves test runner
  console output\n\n## [0.2.0] - 2017-06-13\n - Fixes bug in `CALL`\n\n## [0.1.0.1]
  - 2017-03-31\n - Highlights Solidity exactly on character level\n - Adds `N` command
  for stepping by Solidity source position instead of by opcode\n\n## 0.1.0.0 - 2017-03-29\n
  - First release\n\n[0.8 test report]: https://hydra.dapp.tools/build/135/download/1/index.html\n\n[0.12]:
  https://github.com/dapphub/hevm/compare/0.11.5...0.12\n[0.11.5]: https://github.com/dapphub/hevm/compare/0.11.4...0.11.5\n[0.11.4]:
  https://github.com/dapphub/hevm/compare/0.11.3...0.11.4\n[0.11.3]: https://github.com/dapphub/hevm/compare/0.11.2...0.11.3\n[0.11.2]:
  https://github.com/dapphub/hevm/compare/0.11.1...0.11.2\n[0.11.1]: https://github.com/dapphub/hevm/compare/0.11...0.11.1\n[0.11]:
  https://github.com/dapphub/hevm/compare/0.10.9...0.11\n[0.10.9]: https://github.com/dapphub/hevm/compare/0.10.7...0.10.9\n[0.10.7]:
  https://github.com/dapphub/hevm/compare/0.10.6...0.10.7\n[0.10.6]: https://github.com/dapphub/hevm/compare/0.10.5...0.10.6\n[0.10.5]:
  https://github.com/dapphub/hevm/compare/0.10...0.10.5\n[0.10]: https://github.com/dapphub/hevm/compare/0.9.5...0.10\n[0.9.5]:
  https://github.com/dapphub/hevm/compare/0.9...0.9.5\n[0.9]: https://github.com/dapphub/hevm/compare/v0.8.5...v0.9\n[0.8.5]:
  https://github.com/dapphub/hevm/compare/v0.8...v0.8.5\n[0.8]: https://github.com/dapphub/hevm/compare/v0.7...v0.8\n[0.7]:
  https://github.com/dapphub/hevm/compare/v0.6.5...v0.7\n[0.6.5]: https://github.com/dapphub/hevm/compare/v0.6.1...v0.6.5\n[0.6.1]:
  https://github.com/dapphub/hevm/compare/v0.6...v0.6.1\n[0.6]: https://github.com/dapphub/hevm/compare/v0.5...v0.6\n[0.5]:
  https://github.com/dapphub/hevm/compare/v0.4...v0.5\n[0.4]: https://github.com/dapphub/hevm/compare/v0.3.2...v0.4\n[0.3.2]:
  https://github.com/dapphub/hevm/compare/v0.3.0...v0.3.2\n[0.3.0]: https://github.com/dapphub/hevm/compare/v0.2.0...v0.3.0\n[0.2.0]:
  https://github.com/dapphub/hevm/compare/v0.1.0.1...v0.2.0\n[0.1.0.1]: https://github.com/dapphub/hevm/compare/v0.1.0.0...v0.1.0.1\n"
basic-deps:
  free: '>=5.1.3 && <5.2'
  cereal: '>=0.5.8 && <0.6'
  sbv: '>=8.7.5 && <8.8'
  bytestring: '>=0.10.8 && <0.11'
  data-dword: '>=0.3.1 && <0.4'
  monad-par: '>=0.3.5 && <0.4'
  lens-aeson: '>=1.0.2 && <1.1'
  ansi-wl-pprint: '>=0.6.9 && <0.7'
  witherable: '>=0.3.5 && <0.4'
  optparse-generic: '>=1.3.1 && <1.4'
  s-cargot: '>=0.1.4 && <0.2'
  haskeline: '>=0.7.4 && <0.8'
  base: '>=4.9 && <5'
  time: '>=1.8.0 && <1.9'
  unordered-containers: '>=0.2.10 && <0.3'
  text: '>=1.2.3 && <1.3'
  megaparsec: '>=7.0.5 && <7.1'
  vty: '>=5.25.1 && <5.26'
  cborg: '>=0.2.2 && <0.3'
  quickcheck-text: '>=0.1.2 && <0.2'
  filepath: '>=1.4.2 && <1.5'
  process: '>=1.6.5 && <1.7'
  async: -any
  restless-git: '>=0.7 && <0.8'
  wreq: '>=0.5.3 && <0.6'
  memory: '>=0.14.18 && <0.15'
  containers: '>=0.6.0 && <0.7'
  lens: '>=4.17.1 && <4.18'
  binary: '>=0.8.6 && <0.9'
  rosezipper: '>=0.2 && <0.3'
  regex-tdfa: '>=1.2.3 && <1.3'
  fgl: '>=5.7.0 && <5.8'
  cryptonite: ==0.25.*
  mtl: '>=2.2.2 && <2.3'
  operational: '>=0.2.3 && <0.3'
  semver-range: '>=0.2.7 && <0.3'
  base16-bytestring: '>=0.1.1 && <0.2'
  transformers: '>=0.5.6 && <0.6'
  temporary: ==1.3.*
  text-format: '>=0.3.2 && <0.4'
  deepseq: '>=1.4.4 && <1.5'
  scientific: '>=0.3.6 && <0.4'
  multiset: '>=0.3.4 && <0.4'
  QuickCheck: '>=2.13.2 && <2.14'
  tree-view: ==0.5
  abstract-par: '>=0.3.3 && <0.4'
  hevm: -any
  aeson: '>=1.4.6 && <1.5'
  brick: '>=0.47.1 && <0.48'
  vector: '>=0.12.1 && <0.13'
  directory: '>=1.3.3 && <1.4'
all-versions:
- '0.16'
- '0.17'
- '0.20'
- '0.21'
- '0.24'
- 0.41.0
author: Mikael Brockman, Martin Lundfall
latest: 0.41.0
description-type: haddock
description: |-
  Hevm implements the Ethereum virtual machine semantics.

  It can be used as a library, and it also comes with an executable
  that can run unit test suites, optionally with a visual TTY debugger.
license-name: AGPL-3.0-only
