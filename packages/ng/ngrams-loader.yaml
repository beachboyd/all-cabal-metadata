homepage: http://github.com/YoEight/ngrams-loader
changelog-type: ''
hash: 43ec02677b4677c363557bac5191deac1946a5664ff3b31e7bb4bb361a01c1a4
test-bench-deps: {}
maintainer: Yorick Laupa <yo.eight@gmail.com>
synopsis: Ngrams loader based on http://www.ngrams.info format
changelog: ''
basic-deps:
  base: ==4.6.*
  sqlite-simple: ! '>=0.4.5 && <0.5'
  text: ! '>=0.11 && <1.2'
  ngrams-loader: -any
  parseargs: ==0.1.5.*
  mtl: -any
  attoparsec: ! '>=0.11.1 && <0.11.2'
  resourcet: ! '>=0.4.3 && <0.5'
  machines: ! '>=0.2.5 && <0.3'
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Yorick Laupa
latest: 0.1.0.1
description-type: markdown
description: ! "ngrams-loader\n=============\n\nNgrams loader based on http://www.ngrams.info
  format\n\n[![Build Status](https://travis-ci.org/YoEight/ngrams-loader.png?branch=master)](https://travis-ci.org/YoEight/ngrams-loader)\n\nInstallation\n------------\nSupposed
  you have at least `cabal 1.18` installed\n\n```\n$ cabal sandbox init\n$ cabal install
  --only-dependencies\n$ cabal configure\n$ cabal install\n\n-- program located in
  ~/.cabal-sandbox/bin\n```\n\nUsage\n-----\n\n```\nusage: ngrams-loader [options]
  <n-grams file> <SQLite file>\n  [-2,--bigram]     Parses bigrams\n  [-3,--trigram]
  \   Parses trigrams\n  [-4,--quadgram]   Parses 4-grams\n  [-5,--pentagram]  Parses
  5-grams\n  [-c,--create]     Creates table before inserts\n  <n-grams file>    N-grams
  file\n  <SQLite file>     SQlite db file\n```\n\nExample\n-------\n\n```\nngrams-loader
  --bigram --create w2.txt bigram.db\n\n```\nIt parses each line of `w2.txt` as a
  bigram, create bigram table before performing inserts and saves everything in `bigram.db`\n\nFigures\n-------\n\nSpecs\n\n-
  Core i7 3770 @ 3.4GHz\n- Gentoo with 3.12.13 Linux kernel (64bits)\n- 1.055.386
  lines bigram file\n \n`ngrams-loader --bigram --create w2.txt bigram.db` gets\n\n```\nreal\t0m16.244s\nuser\t0m15.597s\nsys\t
  \ 0m0.143s\n\n```\n\nSql Schemas\n-----------\n\nBigram\n\n```sql\ncreate table
  bigrams(\n  frequence int,\n  word1 varchar(100),\n  word2 varchar(100)\n);\n```\n\nTrigram\n\n```sql\ncreate
  table tridgrams(\n  frequence int,\n  word1 varchar(100),\n  word2 varchar(100),\n
  \ word3 varchar(100)\n);\n```\n\n4-gram\n\n```sql\ncreate table quadgrams(\n  frequence
  int,\n  word1 varchar(100),\n  word2 varchar(100),\n  word3 varchar(100),\n  word4
  varchar(100)\n);\n```\n\n5-gram\n\n```sql\ncreate table pentagrams(\n  frequence
  int,\n  word1 varchar(100),\n  word2 varchar(100),\n  word3 varchar(100),\n  word4
  varchar(100),\n  word5 varchar(100)\n);\n```\n"
license-name: MIT
