homepage: http://github.com/lyokha/nginx-haskell-module
changelog-type: markdown
hash: 5cd57ed3f72aafa7a2168a02c74f83b8d0f9967491431265401fdfebf2e1af4b
test-bench-deps: {}
maintainer: Alexey Radkov <alexey.radkov@gmail.com>
synopsis: Helper module for Nginx haskell module
changelog: ! "### 1.4.0\n\n- Added a number of opaque pointers to Nginx global objects
  for using them in\n  C plugins.\n\n### 1.3.0\n\n- Export function *ngxExportInstallSignalHandler*
  to ignore SIGINT.\n\n### 1.2.2\n\n- Returning a special error code (*2*) on exception
  *ServiceHookInterrupt*.\n\n### 1.2.1\n\n- Bugfix: put *unsigned* integers in event
  channels (important for *eventfd*).\n\n### 1.2.0\n\n- Added exporter *ngxExportServiceHook*
  for service hooks and exception\n  *ServiceHookInterrupt* for interrupting services.\n\n###
  1.1.0\n\n- Added an asynchronous content handler with direct access to request body\n
  \ chunks exported with *ngxExportAsyncHandlerOnReqBody*.\n- Reading buffered request
  body from a temporary file when it's provided.\n\n### 1.0.1\n\n- Using deepseq for
  really deep evaluation of resulting lazy bytestrings to\n  prevent leaks of exceptions
  outside of protected code.\n\n### 1.0\n\n- Added an asynchronous content handler
  exported with *ngxExportAsyncHandler*.\n- Content type in all content handlers gets
  packed in a strict bytestring now,\n  which allows for using static strings without
  dynamic memory allocation.\n- Package stability tag was promoted to stable.\n\n###
  0.9.1.1\n\n- yY handler must be strict against exceptions in safeYYHandler.\n\n###
  0.9.1.0\n\n- Do not write into service event channel when Nginx is exiting.\n\n###
  0.9.0.0\n\n- Using interruptible FFI for safeWaitToSetLock to re-enable graceful
  shutdown\n  with hs_exit() for shared services.\n\n### 0.8.1.0\n\n- Function waitSetToLock
  from package *unix* calls C fcntl() unsafely which\n  caused hangs of the whole
  haskell RTS when it was waiting for lock release.\n  So this functions was reimplemented
  using *safe* semantics as\n  safeWaitToSetLock.\n- Exported function ngxExportReleaseLockedByteString
  was removed because Nginx\n  can call hs_free_stable_ptr() directly.\n\n### 0.8.0.3\n\n-
  A better solution for ghc warnings set.\n\n### 0.8.0.2\n\n- Removed constraint on
  *template-haskell* via a CPP macro (this should repair\n  compilation for *ghc-7.10*).\n\n###
  0.8.0.0\n\n- Implemented shared services using waitToSetLock to get exclusive access
  for\n  servicing.\n- New dependency on package *monad-loops* (>= 0.4.2).\n\n###
  0.7.0.0\n\nFurther optimizations.\n\n- Poke single-chunked lazy bytestrings directly
  into passed from Nginx buffers.\n- Specialize polymorphic functions and inline trivial
  functions.\n\n### 0.6.1.1\n\n- Added *-Wno-incomplete-patterns* in *ghc-options*
  for older ghc versions.\n\n### 0.6.1.0\n\n- Constructors of *NgxExport* were lifted
  to type level for all handlers to\n  mitigate warnings on incomplete patterns.\n-
  *COMPLETE* pragmas for pattern synonyms were added for the same reason.\n- Other
  warnings were fixed too. Now the module builds with *ghc-options*\n  *-Wall -Wno-unrecognised-pragmas*.\n\n###
  0.6.0.0\n\n- Lazy bytestrings contents are no longer copied when passed back to
  Nginx.\n  Instead, they are passed directly along with a StablePtr to original\n
  \ bytestrings. This must improve performance and lower memory consumption for\n
  \ content handlers with large outputs.\n\n### 0.5.0.0\n\n- All synchronous variable
  and content handlers were made exception safe.\n- Bugfix: evaluate results of IO
  handlers strictly to make sure that all\n  exceptions will be caught.\n\n### 0.4.1.0\n\n-
  Bugfix: keep calling *fdWriteBuf* until it writes complete buffer.\n\n### 0.4.0.0\n\n-
  All asynchronous handlers can now report events via eventfd channels.\n- New dependency
  on package *binary* (>= 0.8.1.0).\n\n### 0.3.2.2\n\n- Stricter constraints for packages
  *base* (>= 4.8 && < 5) and\n  *template-haskell* (>= 2.11.0.0).\n\n### 0.3.2.0\n\n-
  Versioning security: get number of required version parts from C code.\n\n### 0.3.1.0\n\n-
  Added versioning support to test for compatibility in C code.\n\n### 0.3.0.0\n\n-
  Added an asynchronous client request body handler exported with\n  *ngxExportAsyncOnReqBody*
  for using in a new Nginx directive\n  *haskell_run_async_on_request_body*.\n\n###
  0.2.5.1\n\n- Added signatures for type-checkers and exporters to prevent warnings
  when\n  reifying in a user code with *-Wmissing-signatures* or *-Wall* enabled.\n\n###
  0.2.5.0\n\n- Added a synchronous handler in IO Monad exported with *ngxExportIOYY*.\n\n"
basic-deps:
  bytestring: ! '>=0.10.0.0'
  unix: -any
  base: ! '>=4.8 && <5'
  monad-loops: ! '>=0.4.2'
  async: ! '>=2.0'
  binary: ! '>=0.8.1.0'
  deepseq: ! '>=1.2.0.0'
  template-haskell: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.2.0.0'
- '0.2.1.0'
- '0.2.2.0'
- '0.2.3.0'
- '0.2.3.1'
- '0.2.4.0'
- '0.2.4.1'
- '0.2.4.2'
- '0.2.5.0'
- '0.2.5.1'
- '0.3.0.0'
- '0.3.2.0'
- '0.3.2.1'
- '0.3.2.2'
- '0.4.0.0'
- '0.4.1.0'
- '0.5.0.1'
- '0.6.0.0'
- '0.6.1.0'
- '0.6.1.1'
- '0.7.0.0'
- '0.7.0.1'
- '0.8.0.0'
- '0.8.0.1'
- '0.8.0.2'
- '0.8.0.3'
- '0.8.0.4'
- '0.8.0.5'
- '0.8.0.6'
- '0.8.0.7'
- '0.8.1.0'
- '0.9.0.0'
- '0.9.1.0'
- '0.9.1.1'
- '0.9.1.2'
- '1.0'
- '1.0.1'
- '1.1.0'
- '1.2.0'
- '1.2.1'
- '1.2.2'
- '1.3.0'
- '1.4.0'
author: Alexey Radkov <alexey.radkov@gmail.com>
latest: '1.4.0'
description-type: haddock
description: ! 'Helper module for

  <http://github.com/lyokha/nginx-haskell-module Nginx haskell module>'
license-name: BSD3
