homepage: https://github.com/bts/nylas-hs
changelog-type: markdown
hash: 91b0bd9acc28d6e111081ddd6fb7a1d69ca5af4ec630efeaa8de62aa3c64966a
test-bench-deps: {}
maintainer: bts@gmail.com
synopsis: Client for the Nylas API
changelog: ! '# 0.1.1


  * Decrease lower bound of dependency on `base` to 4.7.


  # 0.1.0


  * Initial release.

'
basic-deps:
  pipes-aeson: ! '>=0.4.1.3 && <0.5'
  bytestring: ! '>=0.10.6.0 && <0.11'
  lens-aeson: ! '>=1.0.0.4 && <1.1'
  base: ! '>=4.7 && <5.0'
  pipes-bytestring: ! '>=2.1.1 && <3.0'
  time: ! '>=1.5 && <2.0'
  text: ! '>=1.2.1.1 && <1.3'
  wreq: ! '>=0.4.0.0 && <0.5'
  lens: ! '>=4.5 && <5.0'
  pipes-parse: ! '>=3.0.2 && <4.0'
  pipes: ! '>=4.1.0 && <5.0'
  pipes-http: ! '>=1.0.2 && <2.0'
  aeson: ! '>=0.8 && <0.10'
all-versions:
- 0.1.0
- 0.1.1
author: Brian Schroeder
latest: 0.1.1
description-type: markdown
description: ! "# nylas\n\n[![Hackage](https://img.shields.io/hackage/v/nylas.svg)](https://hackage.haskell.org/package/nylas)\n
  [![Build Status](https://api.travis-ci.org/bts/nylas-hs.svg)](https://travis-ci.org/bts/nylas-hs)\n\nA
  _partially complete_ Haskell client for the [Nylas](https://nylas.com)\n[HTTP API](https://www.nylas.com/docs/platform),
  powered by\n[lens](https://hackage.haskell.org/package/lens) and\n[pipes](https://hackage.haskell.org/package/pipes).
  At the moment I've only\nimplemented support for the endpoints I need.\n\nPull requests
  for the support of additional endpoints would be greatly\nappreciated!\n\nSee Hackage
  for [documentation](http://hackage.haskell.org/package/nylas).\n\n## Features\n\n*
  constant-space stream ingestion of the\n  [changes](https://www.nylas.com/docs/platform#deltas)
  (currently only message\n  and thread objects) to an inbox since a given transactional
  cursor (or the\n  beginning of time)\n* requesting a message object\n* requesting
  a thread object\n\n## Quickstart\n\nThe following example prints out all of the
  (thread and message) changes to an\ninbox using pipes:\n\n```haskell\n{-# LANGUAGE
  OverloadedStrings #-}\n\nmodule Quickstart where\n\nimport qualified Data.ByteString.Char8
  as B\nimport           Data.Monoid           ((<>))\nimport           Pipes                 (runEffect,
  (>->))\nimport           Pipes.HTTP            (newManager, tlsManagerSettings)\nimport
  qualified Pipes.Prelude         as P\n\nimport           Network.Nylas\n\ntoken
  :: AccessToken\ntoken = AccessToken \"_PUT_YOUR_ACCESS_TOKEN_HERE_\"\n\nmain ::
  IO ()\nmain = do\n  mgr <- newManager tlsManagerSettings\n  let cursor = Nothing\n
  \ res <- consumeDeltas mgr token cursor (P.map show >-> P.print)\n  case res of\n
  \   Left (ParsingError err remainder) -> do\n      putStrLn $ \"ERROR: \" <> show
  err\n      putStrLn \"next few items:\"\n      runEffect $ remainder >-> P.take
  3 >-> P.map B.unpack >-> P.stdoutLn\n    Left (ConsumerError _) -> error \"not possible\"\n
  \   Right _ -> return ()\n```\n\n## License (3-clause BSD)\n\nCopyright (c) 2015,
  Brian Schroeder\n\nAll rights reserved.\n\nRedistribution and use in source and
  binary forms, with or without modification,\nare permitted provided that the following
  conditions are met:\n\n* Redistributions of source code must retain the above copyright
  notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions
  in binary form must reproduce the above copyright notice, this\n  list of conditions
  and the following disclaimer in the documentation and/or\n  other materials provided
  with the distribution.\n\n* Neither the name of Brian Schroeder nor the names of
  other contributors may be\n  used to endorse or promote products derived from this
  software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED
  BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED
  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY
  AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
license-name: BSD-3-Clause
