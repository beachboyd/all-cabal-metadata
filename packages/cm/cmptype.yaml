homepage: https://github.com/isovector/type-sets#readme
changelog-type: markdown
hash: 5784526d9ab9e3fc11cf227a66a7c07ca3535377fe9f1d531e755f7fdfd49cf1
test-bench-deps:
  ghc: ! '>=8.6.3 && <8.8'
  base: ! '>=4.7 && <5'
  cmptype: -any
  should-not-typecheck: -any
  magic-tyfams: ! '>=0.1.0.0 && <0.2'
maintainer: sandy@sandymaguire.me
synopsis: Compare types of any kinds
changelog: |
  # Changelog for type-sets

  ## 0.1.0.1 --- 2019-08-06

  Fixed a bug in the cabal metadata

  ## 0.1.0.0 --- 2019-08-06

  Initial release!

  ## Unreleased changes
basic-deps:
  ghc: ! '>=8.6.3 && <8.8'
  base: ! '>=4.7 && <5'
  magic-tyfams: ! '>=0.1.0.0 && <0.2'
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Sandy Maguire
latest: 0.1.0.1
description-type: markdown
description: |+
  # cmptype

  [![Hackage](https://img.shields.io/hackage/v/cmptype.svg?logo=haskell&label=cmptype)](https://hackage.haskell.org/package/cmptype)

  ## Dedication

  > Comparison is an act of violence against the self.
  >
  > --Iyanla Vanzant


  ## Overview

  `cmptype` provides a magical type family that lets you compare types:

  ```haskell
  type family CmpType (a :: k) (b :: k) :: Ordering
  ```

  When you turn on the `-fplugin=Type.Compare.Plugin` flag, it will let you
  compare arbitrary types. Why would you want such a thing? Probably because you
  want to write a [type-level container that isn't a fucking list][type-sets]!

  [type-sets]: https://github.com/isovector/type-sets


  ## Acknowledgments

  Big thanks to [Boris Rozinov][oofp] for the initial idea, and for making as much
  coffee as I could drink while I wrote it. Also thanks to [Christiaan
  Baaij][chistiaanb] and [Matt Pickering][mpickering] for their indispensable help
  convincing GHC to do the right thing here.

  [oofp]: https://github.com/oofp
  [chistiaanb]: https://christiaanb.github.io/
  [mpickering]: http://mpickering.github.io/

license-name: BSD-3-Clause
