homepage: ''
changelog-type: text
hash: 0e3faaead7f29e88e2ba106ff4e6dcb80f591a33d036dba9f2d9ff982f5186e9
test-bench-deps: {}
maintainer: L. Thomas van Binsbergen <ltvanbinsbergen@acm.org>
synopsis: GLL parser with simple combinator interface
changelog: "0.3.0.7 -> 0.3.0.8\n  + export maximumPivots and maximumPivotAtNt\n0.3.0.8
  -> 0.3.0.9\n  + include bit of the input string when showing an error message (without
  whitespace)\n  + exporting <multiple/some/many>SepBy2\n  + exporting within, parens,
  braces, brackets, angles, quotes and dquotes\n  + added character literals to Token
  type\n  + exporting <:=\n  + <<<**> and <**>>> for shortest and longest match, respectively\n
  \   defined some/many and variants using <**>>> and <<<**>\n    disambiguation remains
  very experimental \n0.3.0.9 -> 0.3.0.10\n  + exporting chooses\n0.3.0.10 -> 0.3.0.11\n
  \ + parse option for disabling select test (lookahead)\n\n0.3.0.11 -> 0.4.0.1\n
  \ + replaced parser by reduced descriptor GLL (RGLL)\n  + renamed GLL.Types.Grammar
  to GLL.Types.Derivations\n  + renamed GLL.Types.Abstract to GLL.Types.Grammar\n
  \ + exporting GLL.Types.Grammar, GLL.Types.Derivations, GLL.Combinators.Options,
  GLL.Combinators.Memoisation, GLL.Flags\n\n0.4.0.1 -> 0.4.0.2\n  + generalised `within`\n
  \ + different whitespace and comment handling in predefined lexer\n  + predefined
  lexer handles (nested) comment-blocks\n\n0.4.0.2 -> 0.4.0.3\n  M added hex, octal
  and binary representation to integer literals\n  + added float literals\n  + exporting
  `preferably` and `reluctantly`\n  M renamed `rassoc` to shortest_match\n  M renamed
  `lassoc` to longest_match\n  - removed `assoc`\n  + version of `chooses` that is
  left-biased (w.r.t. alternatives)\n  + generalised arguments of longest_match and
  shortest_match to IsAltExpr \n  + exporting `optionalWithDef`\n\n0.4.0.3 -> 0.4.0.4\n
  \ + `chooses` cannot be given an empty list (runtime error)\n  + updated `base`
  dependency\n\n0.4.0.4 -> 0.4.0.5\n  + relaxed cabal version constraint\n\n0.4.0.5
  -> 0.4.0.6\n  + generalised the definition of `within` combinator with respect to
  token type\n\n0.4.0.6 -> 0.4.0.7\n  + simplified Ridge's \"parsing context\" in
  the semantic phase\n\n0.4.0.7 -> 0.4.0.8\n  + unified usage of input in both parser
  and combinators, speeding up initialisation of large files\n  + fixed 'noSelectTest'
  'ParseOption'\n\n0.4.0.8 -> 0.4.0.9\n  + reinstated a \"binarised version\" of the
  interface \n  + count number of successes in ParseResult, not just True/False\n\n0.4.0.9
  -> 0.4.0.10\n  + build expression grammars from operator tables\n\n0.4.0.10 -> 0.4.0.11\n
  \ + integer literals are now by default considered as natural numbers only, the
  'signed_int_lits' flag of 'LexerSettings' can be used to turn on signed integers,
  restoring the behaviour of previous versions\n\n0.4.0.11 -> 0.4.0.12\n  + export
  'grammarOf'\n  + let 'parse' throw errors by default\n  + changed priorities of
  operator tables to doubles \n  + removed need to specify associativity of prefix
  operators in operator table\n"
basic-deps:
  gll: ! '>=0.4.0.12'
  base: ! '>=4.3.1.0 && <=5'
  time: ! '>=1.8'
  text: -any
  TypeCompose: -any
  array: -any
  containers: ! '>=0.4'
  regex-applicative: ! '>=0.3'
  pretty: -any
all-versions:
- 0.1.0.1
author: L. Thomas van Binsbergen
latest: 0.1.0.1
description-type: haddock
description: |-
  The package fungll-combinators provides generalised top-down parsing combinators according to the
  FUNGLL parsing algorithm [Van Binsbergen et al. 2018].

  Please email any questions, comments and suggestions to the
  maintainer.
license-name: BSD-3-Clause
