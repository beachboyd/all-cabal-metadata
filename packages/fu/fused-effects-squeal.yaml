homepage: https://github.com/ilyakooo0/fused-effects-squeal#readme
changelog-type: markdown
hash: 9de283cdb032b7be086e352f7775c0df64fd094069aa0e21459aeae50a995e43
test-bench-deps: {}
maintainer: ilyakooo0@gmail.com
synopsis: A fused-effects adapter for squeal-postgresql.
changelog: |
  # Changelog

  ## 0.1.0.0

  Initial release
basic-deps:
  unliftio: ! '>=0.2.12 && <0.3'
  base: ! '>=4.7 && <5'
  squeal-postgresql: ! '>=0.5.2.0 && <0.6'
  unliftio-core: ! '>=0.1.2.0 && <0.2'
  fused-effects: ! '>=1.0.0.0 && <1.1'
  unliftio-pool: ! '>=0.2.1.0 && <0.3'
all-versions:
- 0.1.0.0
author: Ilya Kostyuchenko
latest: 0.1.0.0
description-type: markdown
description: |
  # fused-effects-squeal

  This is an overview of the way this library works. If you would like to learn how Squeal itself works you should head to the [morphismtech/squeal repository](https://github.com/morphismtech/squeal).

  ## Usage

  There are two sepaeate effects with corresponding carriers: `Squeal` (with `SquealC`) and `SquealPool` (with `SquealPoolC`).

  `Squeal` mimics the functions from `MonadPQ` (from `squeal-postgresql`) and represnts the "inside a transaction" effect.

  You can run it directly with `runSquealWithConn` family of functions, but you probably want to use a connection pool.

  `SquealPool` allows you to call `runSqueal` function, which picks a connection from the connection pool and runs the `Squeal` effect.
license-name: BSD-3-Clause
