homepage: http://github.com/dbueno/funsat
changelog-type: text
hash: 5352a7ca95be2885ac85438af640de58abcc3bfabec92f6dccf9168561caa53b
test-bench-deps: {}
maintainer: Denis Bueno <dbueno@gmail.com>
synopsis: A modern DPLL-style SAT solver
changelog: ! '-*- mode: outline -*-


  * 0.6.0

  - Logical circuit representation added.

  - License is now BSD3, which is apparently happier for some people.


  * 0.5.2

  Maintenance update because a new (incompatible) version of bitset, version 1.0,

  was released.  Funsat should again compile via cabal-install.


  * 0.5.1

  ** Update for compatibility with parse-dimacs 1.2,

  which should mean faster parsing.

  ** Code cleanup


'
basic-deps:
  bimap: ==0.2.*
  base: <4
  time: -any
  array: -any
  parse-dimacs: ! '>=1.2 && <2'
  containers: -any
  fgl: -any
  mtl: -any
  bitset: ==1.*
  random: -any
  QuickCheck: ! '>=2 && <3'
  pretty: -any
all-versions:
- '0.4'
- '0.5'
- 0.5.1
- 0.5.2
- 0.6.0
- 0.6.1
- 0.6.2
author: Denis Bueno
latest: 0.6.2
description-type: text
description: ! "-*- mode: outline -*-\n\n* Funsat: A DPLL-style SAT solver in pure
  Haskell\n\nFunsat is a native Haskell SAT solver that uses modern techniques for
  solving\nSAT instances.  Current features include two-watched literals, conflict-directed\nlearning,
  non-chronological backtracking, a VSIDS-like dynamic variable\nordering, and restarts.
  \ Our goal is to facilitate convenient embedding of a\nreasonably fast SAT solver
  as a constraint solving backend in other\napplications.\n\nCurrently along this
  theme we provide /unsatisfiable core/ generation, giving\n(hopefully) small unsatisfiable
  sub-problems of unsatisfiable input problems\n(see \"Funsat.Resolution\").\n\n\n*
  Installation\nInstall using the typical Cabal procedure:\n\n    $ ghc --make -o
  Setup Setup.hs\n    $ ./Setup configure\n    $ ./Setup build\n\nThis will produce
  a binary called funsat at ./dist/build/funsat/funsat and a\nstandalone library interface
  for the solver.  If you feel like profiling the\ncode, a profiling binary is automatically
  built in\n./dist/build/funsat-prof/funsat-prof.\n\n** Dependencies\nAll the dependences
  are cabal-ised and available from hackage, or in etc/.\n\n*** parse-dimacs\nA haskell
  CNF file parser.\n\nhttp://hackage.haskell.org/cgi-bin/hackage-scripts/package/parse-dimacs\n\n***
  bitset\nhttp://hackage.haskell.org/cgi-bin/hackage-scripts/package/bitset\n\n"
license-name: BSD-3-Clause
