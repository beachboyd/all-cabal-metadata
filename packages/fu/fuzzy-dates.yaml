homepage: https://github.com/ReedOei/fuzzy-dates#readme
changelog-type: markdown
hash: 43ed7f6baf5487df55c1423904ea729006cb1d3bd3c44019838f56ed2ad7f541
test-bench-deps:
  hourglass: -any
  base: ! '>=4.7 && <5'
  hspec: -any
  fuzzy-dates: -any
  parsec: -any
  lens: -any
maintainer: oei.reed@gmail.com
synopsis: Libary for parsing dates in strings in varied formats.
changelog: ! '# Changelog for fuzzy-dates


  ## Unreleased changes

'
basic-deps:
  hourglass: -any
  base: ! '>=4.7 && <5'
  hspec: -any
  parsec: -any
  lens: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1.0
- 0.1.1.1
author: Reed Oei
latest: 0.1.1.1
description-type: markdown
description: ! '# fuzzy-dates


  [![Build Status](https://travis-ci.org/ReedOei/fuzzy-dates.svg?branch=master)](https://travis-ci.org/ReedOei/fuzzy-dates)


  `fuzzy-dates` is a Haskell library for parsing dates when you don''t know/care to
  specify the format of the dates beforehand.

  It returns dates and times in the [hourglass](https://hackage.haskell.org/package/hourglass)
  format.


  It is heavily based off of <https://gitlab.com/doshitan/hourglass-fuzzy-parsing>,
  which had not been updated for over 2 years at the time of writing, so I created
  this library, and added numerous new date formats to it.


  # Quickstart


  Import the main module, then call one of the extract dates functions, like so:


  ```

  >>> import Data.Dates.Parsing

  >>> extractDatesY 2018 "The party will be on 6/9"

  [Date 2018 June 9]

  ```


  ```

  >>> import Data.Dates.Parsing

  >>> extractDateTimes "This morning, 06.07.16 at 7:35 AM, the fire was stopped."
  :: IO [DateTime]

  [DateTime {dtDate = Date {dateYear = 2016, dateMonth = July, dateDay = 6}, dtTime
  = TimeOfDay {todHour = 7h, todMin = 35m, todSec = 0s, todNSec = 0ns}}]


'
license-name: BSD-3-Clause
