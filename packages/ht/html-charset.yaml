homepage: https://github.com/dahlia/html-charset#readme
changelog-type: markdown
hash: 0dca1097494d008599b71b519c160eb5e51808f9adc3da4942f7d05f99b83d1f
test-bench-deps:
  hlint: ! '>=2.1.7 && <2.2'
  bytestring: -any
  base: ! '>=4.7 && <5'
  doctest: -any
  html-charset: -any
  doctest-discover: -any
  QuickCheck: -any
maintainer: Hong Minhee <hong.minhee@gmail.com>
synopsis: Determine character encoding of HTML documents/fragments
changelog: ! 'html-charset changelog

  ======================


  Version 0.1.0

  -------------


  Initial release.  Released on July 11, 2018.

'
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  charsetdetect-ae: ! '>=1.1 && <2'
  html-charset: -any
  attoparsec: ! '>=0.12 && <1'
  optparse-applicative: ! '>=0.14 && <1'
all-versions:
- '0.1.0'
author: Hong Minhee <hong.minhee@gmail.com>
latest: '0.1.0'
description-type: markdown
description: ! "html-charset: Determine character encoding of HTML bytes\n========================================================\n\n[![Hackage](https://img.shields.io/hackage/v/html-charset.svg)][html-charset]\n\nThis
  provides a [Haskell library][html-charset] and a CLI executable to\ndetermine character
  encoding (i.e., so-called \"charset\") from given HTML bytes.\n\nThe precendence
  order for determining the character encoding is:\n\n 1. A BOM (byte order mark)
  before any other data in the HTML document itself.\n 2. A `<meta>` declaration with
  a `charset` attribute or an `http-equiv`\n    attribute set to `Content-Type` and
  a value set for `charset`.\n    Note that it looks at only first 1024 bytes.\n 3.
  [Mozilla's Charset Detectors][chardet] heuristics.  To be specific,\n    it delegates
  to the [charsetdetect-ae] package, a Haskell implementation\n    of that.\n\n[html-charset]:
  https://hackage.haskell.org/package/html-charset\n[chardet]: https://www-archive.mozilla.org/projects/intl/chardet.html\n[charsetdetect-ae]:
  https://hackage.haskell.org/package/charsetdetect-ae\n\n\nAPI\n---\n\nThe package
  is available on Hackage: *[html-charset]*.\n\n~~~~ haskell\n>>> import Data.ByteString.Lazy\n>>>
  import Text.Html.Encoding.Detection\n>>> detect \"\\xef\\xbb\\xbf\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd<html><head>...\"\nJust
  \"UTF-8\"\n>>> detect \"<html><head><meta charset=latin-1>...\"\nJust \"latin-1\"\n>>>
  detect \"<html><head><title>\\xbe\\xee\\xbc\\xad\\xbf\\xc0\\xbc\\xbc\\xbf\\xe4...\"\nJust
  \"EUC-KR\"\n~~~~\n\nNote that the `detect` function takes a lazy bytestring, not
  strict.\n\nRead the [API docs] for details.\n\n\nCLI\n---\n\nWe currently doesn't
  provide any official binaries.\nThe CLI program can be installed using Cabal or
  Stack: *[html-charset]*.\n\n~~~~\n$ curl https://www.haskell.org/onlinereport/ |
  html-charset\nASCII\n$ curl http://www.bunka.go.jp/kokugo_nihongo/sisaku/joho/joho/
  | html-charset\nshift_jis\n~~~~\n\nAlthough it's less likely, `html-charset` may
  fail to determine the character\nencoding, and for the case it prints nothing (only
  a line feed, exactly).\nYou can customize the string to print when it fails by configuring\n`-f`/`--on-failure`
  option.\n\nAuthor and license\n------------------\n\nWitten by [Hong Minhee].  Licensed
  under [LGPL 2.1] or higher.\n\n[Hong Minhee]: https://hongminhee.org/\n[LGPL 2.1]:
  https://www.gnu.org/licenses/lgpl-2.1.html\n"
license-name: LGPL-2.1
