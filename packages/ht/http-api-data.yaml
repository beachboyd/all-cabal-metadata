homepage: http://github.com/fizruk/http-api-data
changelog-type: markdown
hash: fdf8a3397221b819697dfb50b5eab9175f96a3cfcce74012a1b36551af5a83a0
test-bench-deps:
  bytestring: -any
  base: -any
  time: -any
  unordered-containers: -any
  hspec: ! '>=2.4.7'
  text: -any
  http-api-data: -any
  filepath: -any
  doctest: ! '>=0.11 && <0.17'
  HUnit: -any
  quickcheck-instances: ! '>=0.3.12'
  uuid-types: -any
  QuickCheck: ! '>=2.9'
  directory: ! '>=1.0'
maintainer: Nickolay Kudasov <nickolay.kudasov@gmail.com>
synopsis: Converting to/from HTTP API data like URL pieces, headers and query parameters.
changelog: ! "0.3.8.1\n---\n\n* GHC-8.4.1 support\n\n0.3.8\n---\n\n* Minor changes:\n
  \   * Stable URL-encoding for `Form`s (see [#67](https://github.com/fizruk/http-api-data/pull/67)):\n
  \       * Introduce `urlEncodeParams` and `urlDecodeParams`;\n        * Introduce
  `urlEncodeAsFormStable` and use stable encoding for doctests;\n        * Add `toEntriesByKeyStable`
  and `toListStable`;\n    * Add `Semigroup` instance for `Form` (see [#69](https://github.com/fizruk/http-api-data/pull/69));\n
  \   * Relax upper bound on Cabal (see [#73](https://github.com/fizruk/http-api-data/pull/73)).\n\n0.3.7.2\n---\n\n*
  Allow http-types-0.12\n* .cabal file adjustments\n\n0.3.7.1\n---\n\n* GHC-8.2 support
  (see [#55](https://github.com/fizruk/http-api-data/pull/55)).\n\n0.3.7\n---\n\n*
  Minor changes:\n    * Use [`attoparsec-iso8601`](http://hackage.haskell.org/package/attoparsec-iso8601)\n
  \     for parsing of time types. Now the accepted formats are the same as by `aeson`,\n
  \     i.e. parsers are more lenient\n      (see [#41](https://github.com/fizruk/http-api-data/pull/41));\n
  \   * Preserve fractions of a second in `ToHttpApiData` instances (see [#53](https://github.com/fizruk/http-api-data/pull/53));\n
  \   * Add `ToHttpApiData` and `FromHttpApiData` instances for `TimeOfDay` (see [#53](https://github.com/fizruk/http-api-data/pull/53)).\n\n0.3.6\n---\n\n*
  Minor change:\n    * Add `toEncodedUrlPiece` class method for URL-encoded path segments
  (see [#50](https://github.com/fizruk/http-api-data/pull/50)); use efficient encoding
  for types whose values don't need URL-encoding.\n\n0.3.5\n---\n\n* Minor changes:\n
  \   * Add `LenientData` which always succeeds to parse (see [#45](https://github.com/fizruk/http-api-data/pull/45)).\n\n0.3.4\n---\n\n*
  Minor changes:\n    * Add support for GHC 8.2, drop support for GHC 7.6 (see [#44](https://github.com/fizruk/http-api-data/pull/44)).\n\n0.3.3\n---\n\n*
  Minor changes:\n    * Expose `Form` constructor from `Web.FromUrlEncoded` (see [#40](https://github.com/fizruk/http-api-data/pull/40));\n
  \   * Fix example in `FromForm` documentation (see [#39](https://github.com/fizruk/http-api-data/issues/39)).\n\n0.3.2\n---\n\n*
  Minor change:\n    * Export `Form` type from `Web.FormUrlEncoded` (see [#37](https://github.com/fizruk/http-api-data/pull/37)).\n\n0.3.1\n---\n\n*
  Minor changes:\n    * Add instances for `Data.UUID` (see [#34](https://github.com/fizruk/http-api-data/pull/34)).\n\n0.3\n---\n*
  Major changes:\n    * Add `Web.FormUrlEncoded` to work with form data (see [#32](https://github.com/fizruk/http-api-data/pull/32)).\n\n*
  Minor changes:\n    * Add instances for `Numeric.Natural` (see [`d944721`](https://github.com/fizruk/http-api-data/commit/d944721ac94929a7ed9e66f25e23221799c08d83)).\n\n0.2.4\n---\n*
  Make `parseHeader` total (instead of throwing exceptions on invalid Unicode, see
  [#30](https://github.com/fizruk/http-api-data/pull/30)).\n\n0.2.3\n---\n* Add more
  parser helpers for `Bounded` `Enum` types.\n\n0.2.2\n---\n\n* Add instances for
  more `time` types: `LocalTime`, `ZonedTime`, `UTCTime` and `NominalDiffTime`\n\n0.2.1\n---\n\n*
  Add helpers for multiple URL pieces and query params:\n    * `toUrlPieces`, `parseUrlPieces`\n
  \   * `toQueryParams`, `parseQueryParams`\n\n0.2\n---\n\n* Export helper functions
  from `Web.HttpApiData`:\n    * `parseUrlPieceMaybe`, `parseHeaderMaybe`, `parseQueryParamMaybe`\n
  \   * `parseUrlPieceWithPrefix`, `parseHeaderWithPrefix`, `parseQueryParamWithPrefix`\n
  \   * `showTextData`, `readTextData`, `parseBoundedTextData`\n* Fix AMP related
  warnings\n\n0.1.1\n---\n\n* Add `use-text-show` flag to optionally use more efficient
  `TextShow` instances\n"
basic-deps:
  bytestring: ! '>=0.10.4.0 && <0.11'
  base: ! '>=4.7 && <4.12'
  time: ! '>=1.4.2 && <1.9'
  unordered-containers: ! '>=0.2.6.0 && <0.3'
  text: ! '>=1.1.1.3 && <1.3'
  containers: ! '>=0.5.5.1 && <0.6'
  uri-bytestring: ! '>=0.1.7 && <0.4'
  attoparsec-iso8601: ! '>=1.0.0.0 && <1.1'
  hashable: ! '>=1.1.2.4 && <1.3'
  attoparsec: ! '>=0.13.0.1 && <0.14'
  uuid-types: ! '>=1.0.2 && <1.1'
  http-types: ! '>=0.8.6 && <0.13'
  time-locale-compat: ! '>=0.1.1.0 && <0.2'
all-versions:
- '0.1.0'
- '0.1.1'
- '0.1.1.1'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.5'
- '0.3.6'
- '0.3.7'
- '0.3.7.1'
- '0.3.7.2'
- '0.3.8'
- '0.3.8.1'
author: Nickolay Kudasov <nickolay.kudasov@gmail.com>
latest: '0.3.8.1'
description-type: markdown
description: ! '# http-api-data


  [![Build Status](https://secure.travis-ci.org/fizruk/http-api-data.png?branch=master)](http://travis-ci.org/fizruk/http-api-data)

  [![Hackage package](http://img.shields.io/hackage/v/http-api-data.svg)](http://hackage.haskell.org/package/http-api-data)

  [![Stackage LTS](http://stackage.org/package/http-api-data/badge/lts)](http://stackage.org/lts/package/http-api-data)

  [![Stackage Nightly](http://stackage.org/package/http-api-data/badge/nightly)](http://stackage.org/nightly/package/http-api-data)


  This package defines typeclasses used for converting Haskell data types to and from
  HTTP API data.


  ### Examples


  Booleans:


  ```

  >>> toUrlPiece True

  "true"

  >>> parseUrlPiece "false" :: Either Text Bool

  Right False

  >>> parseUrlPieces ["true", "false", "undefined"] :: Either Text [Bool]

  Left "could not parse: `undefined''"

  ```


  Numbers:


  ```

  >>> toQueryParam 45.2

  "45.2"

  >>> parseQueryParam "452" :: Either Text Int

  Right 452

  >>> toQueryParams [1..5]

  ["1","2","3","4","5"]

  >>> parseQueryParams ["127", "255"] :: Either Text [Int8]

  Left "out of bounds: `255'' (should be between -128 and 127)"

  ```


  Strings:


  ```

  >>> toHeader "hello"

  "hello"

  >>> parseHeader "world" :: Either Text String

  Right "world"

  ```


  Calendar day:


  ```

  >>> toQueryParam (fromGregorian 2015 10 03)

  "2015-10-03"

  >>> toGregorian <$> parseQueryParam "2016-12-01"

  Right (2016,12,1)

  ```


  ## Contributing


  Contributions and bug reports are welcome!


'
license-name: BSD3
