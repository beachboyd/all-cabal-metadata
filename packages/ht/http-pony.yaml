homepage: https://github.com/nfjinjing/http-pony
changelog-type: markdown
hash: 338f6b2da579068f94f54b7b7d1f46324fcf231798ae5097e4a8138393a4e17f
test-bench-deps: {}
maintainer: nfjinjing@gmail.com
synopsis: A type unsafe http library
changelog: ! '# Revision history for http-pony


  ## 0.1.0.0  -- 2016-09-22


  * First version. Released on an unsuspecting world.


  ## 0.1.0.3  -- 2016-09-24


  * Add MonadSafe type for m, this enables resource safe request / response pipes.


  ## 0.1.0.4  -- 2016-10-15


  * Gives the response producer a way, sending an empty bytestring, to explicitly
  shutdown the socket and return the control back to the producer.


  ## 0.1.0.5  -- 2016-10-16


  * Handle the exception raised by trying to shutdown an already closed socket.

'
basic-deps:
  exceptions: ! '>=0.8.3'
  bytestring: ! '>=0.10'
  base: ! '>=4.8 && <5'
  network: ! '>=2.6'
  pipes-network: ! '>=0.6'
  pipes: ! '>=4.1'
  transformers: ! '>=0.4'
  pipes-safe: ! '>=2.2'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
author: Jinjing Wang
latest: 0.1.0.7
description-type: markdown
description: ! "Teaser\n======\n\nLet's write a hello world app.\n\n    {-# LANGUAGE
  OverloadedStrings #-}\n\n    module Hello where\n\n    import Pipes (yield)\n\n
  \   hello _ = pure ((\"HTTP/1.1 200 OK\", []), yield \"hello world\\n\")\n\n\nNote,
  we are not importing any interface!\n\nIf we take a closer look at the type of `hello`:\n\n
  \   Prelude Hello> :t hello \n    hello\n      :: (Applicative f, Data.String.IsString
  a, Data.String.IsString t,\n          Monad m) =>\n        t2 -> f ((t, [t1]), Pipes.Internal.Proxy
  x' x () a m ())\n\nThis is a *pure* app!\n\nShall we run it?\n\n    {-# LANGUAGE
  OverloadedStrings #-}\n\n    module RunHello where\n\n    import Hello (hello)\n
  \   import Network.HTTP.Pony.Serve (run)\n    import Network.HTTP.Pony.Transformer.HTTP
  (http)\n    import Pipes.Safe (runSafeT)\n\n    main :: IO ()\n    main = (runSafeT
  . run \"localhost\" \"8080\" . http) hello\n\nTest it:\n\n    # the above files
  are mirrored in `./test`\n    runghc -isrc -itest test/RunHello.hs\n   \n    # open
  another terminal\n    curl localhost:8080 -i\n    \n    # output:\n\n    > HTTP/1.1
  200 OK\n    >\n    > hello world\n \nwow ~\n\nExercise: write a `tcp cat`\n"
license-name: BSD-3-Clause
