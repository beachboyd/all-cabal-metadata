homepage: ''
changelog-type: markdown
hash: 2478f83e2c4f1eed6ed2a8ee07af7c316b10a03ef725e82b4aa042d34a5a8ad5
test-bench-deps:
  test-framework-hunit: ! '>=0.2.7 && <0.4'
  bytestring: ! '>=0.9 && <0.11'
  test-framework: ! '>=0.6 && <0.9'
  base: ! '>=4 && <5'
  time: ! '>=1.2 && <1.9'
  text: ! '>=0.10 && <1.3'
  filepath: ! '>=1.2 && <2'
  test-framework-quickcheck2: ! '>=0.2.12.1 && <0.4'
  process: ! '>=1.1 && <1.7'
  network: ! '>=2.3 && <2.9'
  HUnit: ! '>=1.2 && <2'
  zlib-bindings: ! '>=0.1 && <0.2'
  zlib: ! '>=0.5 && <0.7'
  mtl: ! '>=2 && <3'
  attoparsec: ! '>=0.10 && <0.14'
  transformers: ! '>=0.2 && <0.6'
  deepseq: ! '>=1.2 && <1.5'
  bytestring-builder: ! '>=0.10 && <0.11'
  QuickCheck: ! '>=2.3.0.2 && <3'
  primitive: ! '>=0.2 && <0.7'
  vector: ! '>=0.7 && <0.13'
  directory: ! '>=1.1 && <2'
maintainer: Gregory Collins <greg@gregorycollins.net>
synopsis: Simple, composable, and easy-to-use stream I/O
changelog: ! "# Version 1.5.0.1\nBugfix: `concurrentMerge []` should not block forever,
  even if this case is\npathological.\n\n# Version 1.5.0.0\n- Changed the behaviour
  of `ByteString.splitOn` to not emit empty string if the\n  input ends in the delimiter;
  now `lines` should match Prelude's. Bumped major\n  version because this is a potentially
  breaking change (even if it is a bugfix.)\n\n# Version 1.4.1.0\n\n- Added `writeTo`
  export to the main module (forgotten when it was added to\n  `.Core`.)\n\n# Version
  1.4.0.0\n\n- Added support for Text with Attoparsec, courtesy Kevin Brubeck Unhammer.
  Adds\n  modules `System.IO.Streams.Attoparsec.{ByteString, Text}` and deprecates\n
  \ `System.IO.Streams.Attoparsec`, which is now a thin wrapper.\n\n# Version 1.3.6.1\n-
  Bumped dependencies on `time` and `process`.\n\n# Version 1.3.6.0\n  - Added new
  fold functions:\n  ```haskell\nfold_ :: (x -> a -> x)    -- ^ accumulator update
  function\n      -> x                -- ^ initial seed\n      -> (x -> s)         --
  ^ recover folded value\n      -> InputStream a    -- ^ input stream\n      -> IO
  s\nfoldM_ :: (x -> a -> IO x)   -- ^ accumulator update action\n       -> IO x               --
  ^ initial seed\n       -> (x -> IO s)        -- ^ recover folded value\n       ->
  InputStream a      -- ^ input stream\n       -> IO s\n  ```\n\n# Version 1.3.5.0\n
  \ - Add support for latest `process`, `time`, and `transformers` releases\n    (and
  thereby indirectly for the upcoming GHC 8.0).\n\n# Version 1.3.4.0\n  - Added `System.IO.Streams.Handle.handleToStreams`,
  to conveniently\n    create an `InputStream`/`OutputStream` pair.\n\n# Version 1.3.3.1\n
  \ - Fixed a testsuite compile error on GHC >= 7.10.\n\n# Version 1.3.3.0\n  - Added
  a new convenience function, like `chunkList` but with a predicate for\n    when
  to split, taking current element and current chunk length:\n    ```haskell\nchunkListWith
  :: (a -> Int -> Bool) -> InputStream a -> IO (InputStream [a])\n    ```\n\n# Version
  1.3.2.0\n  - Dependency bump for attoparsec 0.13 (another location)\n  - Dependency
  bump for vector 0.11\n  - Dependency bump for zlib 0.6\n\n# Version 1.3.1.0\n  -
  Dependency bump for attoparsec 0.13.\n\n# Version 1.3.0.0\n  - As long promised,
  removed the direct use of the `blaze-builder` package in\n    favor of the new `bytestring-builder`
  transitional package (to be replaced\n    by bytestring's native builder once it
  is mature enough).\n  - Added a new convenience function, a flipped version of `write`:\n
  \   ```haskell\nwriteTo :: OutputStream a -> Maybe a -> IO ()\n    ```\n\n# Version
  1.2.1.3\n  - Dependency bump for primitive 0.6.\n\n# Version 1.2.1.2\n  - Dependency
  bump for deepseq 1.4.\n\n# Version 1.2.1.1\n  - Dependency bump for time 1.6.\n\n#
  Version 1.2.1.0\n  - Added `System.IO.Streams.mapMaybe` for InputStream.\n\n  -
  Added `System.IO.Streams.contramapMaybe` for OutputStream.\n\n# Version 1.2.0.1\n\n
  \ - `System.IO.Streams.Attoparsec.parseFromStream`: export more information\n    about
  the context of parse errors to the message returned via\n    `ParseException`.\n\n
  \ - Improved documentation about stream flushing in the docstring for\n    `handleToOutputStream`.\n\n#
  Version 1.2.0.0\n  - Fixed bug #27 (https://github.com/snapframework/io-streams/issues/27):\n
  \   makeOutputStream now properly shuts down the stream upon receiving EOF. The\n
  \   new invariant might break user programs if they depended on the buggy\n    behaviour,
  which is the reason for the major version bump.\n\n  - Fixed a few polymorphic bindings
  that started breaking in recent GHC.\n\n  - Dependency bumps for:\n    - text 1.2\n
  \   - network 2.6\n\n# Version 1.1.4.6\nMoved old changelog entries to `changelog.md`.\n\n#
  Version 1.1.4.5\nAllow use of attoparsec 0.12.*.\n\n# Version 1.1.4.4\nAllow use
  of transformers 0.4.*.\n\n# Version 1.1.4.3\nAllow use of new network version 2.5.\n\n#
  Version 1.1.4.2\nFixed a build error with network versions older than 2.4.\n\n#
  Version 1.1.4.1\n`System.IO.Streams.Network`: scalability improvement: buffers for
  socket reads\nare now allocated by system malloc rather than by pinned pointers
  in GHC\n(currently pinned pointer allocation takes a global lock).\n\n# Version
  1.1.4.0\nWidened `attoparsec` and `text` library dependencies to allow the latest\nversions.\n\n#
  Version 1.1.3.0\nAdded `System.IO.Streams.ByteString.takeExactly`. Widened `network`
  dependency\nto include 2.3. Added a `NoInteractiveTests` flag to selectively disable
  some\ntests for environments where spawning interactive processes is impossible.\n\n#
  Version 1.1.2.2\nAllowed newest versions of the `process`, `test-framework`, and
  `text`\nlibraries.\n\n# Version 1.1.2.1\nFixed build error when compiled against
  attoparsec-0.10.0.x.\n\n# Version 1.1.2.0\nAdded `System.IO.Streams.Concurrent.makeChanPipe`,
  to create a simple\nconcurrent pipe between an `InputStream`/`OutputStream` pair.\n\n#
  Version 1.1.1.0\nAdded `System.IO.Streams.Network.socketToStreamsWithBufferSize`,
  allowing\ncontrol over the size of the receive buffers used when reading from sockets.\n\n#
  Version 1.1.0.3\nFixed an inconsistent version upper bound in the test suite.\n\n#
  Version 1.1.0.2\nFixed a typo in the tutorial.\n\n# Version 1.1.0.1\nA couple of
  Haddock markup fixes.\n\n# Version 1.1.0.0\nReworked, simplified, and streamlined
  the internals of the library. Exports\nfrom `System.IO.Streams.Internal` relying
  on Sources and Sinks were deleted\nbecause they are no longer necessary: `Source(..)`,
  `Sink(..)`,\n`defaultPushback`, `withDefaultPushback`, `nullSource`, `nullSink`,\n`singletonSource`,
  `simpleSource`, `sourceToStream`, `sinkToStream`,\n`generatorToSource`, and `consumerToSink`.\n\n#
  Version 1.0.2.2\nFixed a bug in which `\"takeBytes 0\"` was erroneously requesting
  input from the\nwrapped stream.\n\n# Version 1.0.2.1\nFixed a compile error on GHC
  7.0.x.\n\n# Version 1.0.2.0\nAdded `System.IO.Streams.Process` (support for communicating
  with system\nprocesses using streams), added new functions to `System.IO.Streams.Handle`
  for\nconverting `io-streams` types to `System.IO.Handle`s. (Now you can pass streams\nfrom
  this library to places that expect Handles and everything will work.)\n\n# Version
  1.0.1.0\nAdded `System.IO.Streams.Combinators.ignoreEof`.\n\n# Version 1.0.0.1\nFixed
  some haddock markup.\n"
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4 && <5'
  time: ! '>=1.2 && <1.9'
  text: ! '>=0.10 && <1.3'
  process: ! '>=1.1 && <1.7'
  network: ! '>=2.3 && <2.9'
  zlib-bindings: ! '>=0.1 && <0.2'
  attoparsec: ! '>=0.10 && <0.14'
  transformers: ! '>=0.2 && <0.6'
  bytestring-builder: ! '>=0.10 && <0.11'
  primitive: ! '>=0.2 && <0.7'
  vector: ! '>=0.7 && <0.13'
all-versions:
- '1.0.0.0'
- '1.0.0.1'
- '1.0.1.0'
- '1.0.2.0'
- '1.0.2.1'
- '1.0.2.2'
- '1.1.0.0'
- '1.1.0.1'
- '1.1.0.2'
- '1.1.0.3'
- '1.1.1.0'
- '1.1.2.0'
- '1.1.2.1'
- '1.1.2.2'
- '1.1.3.0'
- '1.1.4.0'
- '1.1.4.1'
- '1.1.4.2'
- '1.1.4.3'
- '1.1.4.4'
- '1.1.4.5'
- '1.1.4.6'
- '1.2.0.0'
- '1.2.0.1'
- '1.2.1.1'
- '1.2.1.2'
- '1.2.1.3'
- '1.3.0.0'
- '1.3.1.0'
- '1.3.2.0'
- '1.3.3.0'
- '1.3.3.1'
- '1.3.4.0'
- '1.3.5.0'
- '1.3.6.0'
- '1.3.6.1'
- '1.4.0.0'
- '1.4.1.0'
- '1.5.0.0'
- '1.5.0.1'
author: ''
latest: '1.5.0.1'
description-type: markdown
description: ! "The io-streams library contains simple and easy to use primitives
  for I/O\nusing streams. Based on simple types with one type parameter (`InputStream
  a`\nand `OutputStream a`), io-streams provides a basic interface to\nside-effecting
  input and output in `IO` monad with the following\nfeatures:\n\n  * three fundamental
  I/O primitives that anyone can understand: `read ::\n    InputStream a -> IO (Maybe
  a)`, `unRead :: a -> InputStream a -> IO ()`,\n    and `write :: Maybe a -> OutputStream
  a -> IO ()`.\n\n  * simple types and side-effecting IO operations mean straightforward
  and\n    simple exception handling and resource cleanup using standard Haskell\n
  \   facilities like `bracket`.\n\n  * code to transform files, handles, and sockets
  to streams\n\n  * a variety of combinators for wrapping and transforming streams,
  including\n    compression and decompression using zlib, controlling precisely how
  many\n    bytes are read to or written from a socket, buffering output using\n    `blaze-builder`,
  etc.\n\n  * support for parsing from streams using `attoparsec`.\n"
license-name: BSD3
