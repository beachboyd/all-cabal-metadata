homepage: ''
changelog-type: ''
hash: 2ceef7f34f29c28c26f43b93f75a26067f3d590ccf6dac4f2cc322b1062544dc
test-bench-deps: {}
maintainer: tomac `at` pacific `dot` net `dot` au
synopsis: Region based resource management for the IO monad.
changelog: ''
basic-deps:
  base: -any
  mtl: -any
all-versions:
- '0.1'
author: Ivan Tomac
latest: '0.1'
description-type: text
description: ! "To build the library type\n\n    runhaskell Setup.lhs configure\n
  \   runhaskell Setup.lhs build\n    runhaskell Setup.lhs haddock    # optional\n
  \   runhaskell Setup.lhs install\n\nThere are a few tests and examples in the src
  directory.\n\nTODOs:\n-----\n\nIt may be possible (and worthwhile) to write a more
  general region monad that\nis not tied to IO. I've had a brief look into this but
  right now I can't find\na clean and consistent way to abstract mutable references
  for different\nmonads.\n\nIt would also be nice to provide all the functions found
  in System.IO ideally\nin such a way so the functions can be used with either Strings,
  ByteStrings or\nsomething else.\nI can't think of a clean way to do this either.
  Any suggestions would be\nwelcome.\n\nIvan Tomac 25/05/2008\n"
license-name: BSD-3-Clause
