homepage: https://github.com/Teaspot-Studio/gore-and-ash-glfw
changelog-type: markdown
hash: 92ca45655eabe7acf0771f81ee184b975ad118b649efb952e7c04efb4e793807
test-bench-deps: {}
maintainer: ncrashed@gmail.com
synopsis: Core module for Gore&Ash engine for GLFW input events
changelog: ! '1.1.2.0

  =======


  * Added changelog and `extra-source-files` to cabal file.

'
basic-deps:
  exceptions: ! '>=0.8.0.2'
  extra: ! '>=1.4.2'
  base: ! '>=4.7 && <5'
  unordered-containers: ! '>=0.2.5'
  gore-and-ash: ! '>=1.1.0.1'
  mtl: ! '>=2.2'
  GLFW-b: ! '>=1.4.7'
  hashable: ! '>=1.2.3'
  transformers: ! '>=0.4.2'
  deepseq: ! '>=1.4'
all-versions:
- 1.1.0.0
- 1.1.1.0
- 1.1.2.0
author: Anton Gushcha
latest: 1.1.2.0
description-type: markdown
description: ! "gore-and-ash-glfw\n====================\n\nThe module provides events
  for GLFW input for [Gore&Ash](https://github.com/Teaspot-Studio/gore-and-ash) engine.\n\nInstalling\n==========\n\nAdd
  following to your `stack.yml` to `packages` section:\n```yaml\n- location:\n    git:
  https://github.com/Teaspot-Studio/gore-and-ash-glfw.git\n    commit: <PLACE HERE
  FULL HASH OF LAST COMMIT> \n```\n\nWhen defining you application stack, add `GLFWT`:\n```
  haskell\ntype AppStack = ModuleStack [GLFWT, ... other modules ... ] IO\n```\n\nAnd
  derive `MonadGLFWInput` for your resulting `AppMonad`:\n``` haskell\nnewtype AppMonad
  a = AppMonad (AppStack a)\n  deriving (Functor, Applicative, Monad, MonadFix, MonadIO,
  MonadGLFWInput)\n```"
license-name: BSD-3-Clause
