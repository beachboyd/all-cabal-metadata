homepage: ''
changelog-type: markdown
hash: 5c44c3c9560681628474692f9ac71aee53f2cd4fdc7fc63e96e0a4a61b53aceb
test-bench-deps: {}
maintainer: ma302fh@gold.ac.uk
synopsis: Parser combinators & EBNF, BFFs!
changelog: ! '0.1.1.0

  * Fixed bug that caused grouping sequences to no parse (`a = ("a")` would fail on
  the first bracket)


  * Refactored code according to hslint


  ****

  0.1.0.0


  * Initial version

'
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  base: <=4.9
  text: ! '>=1.2 && <1.3'
  ebnf-bff: ! '>=0.1'
  parsec: ==3.1.*
  cond: ! '>=0.4 && <0.5'
  aeson: ==0.8.*
  directory: ! '>=1.2 && <1.3'
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Lokidottir
latest: 0.1.1.0
description-type: markdown
description: ! "# ebnf-bff ![](https://travis-ci.org/Lokidottir/ebnf-bff.svg?branch=master)\n\n##
  Parser combinators & EBNF, BFFs!\n\nCurrently barebones, but (most of) the help
  text is relevant (no --prune-ids yet).\n\n### Installing\n\n#### Installing (Linux)\nAs
  standard for installing haskell programs, you must have `ghc` and `cabal` installed\n\n```bash\ngit
  clone https://github.com/Lokidottir/ebnf-bff\ncd ebnf-bff\nsudo cabal install --only-dependencies
  --global && sudo cabal install --global\n```\n\n#### Installing from cabal\n\n```\nsudo
  cabal install ebnf-bff --global\n```\n\n### Usage\n\n**help text for `ebnf-parse`:**\n```\nebnf-parse
  written by fionan haralddottir, available under the MIT licence.\nthis program is
  part of the ebnf-bff cabal package\n\nthis is a program that parses an ISO standard
  EBNF grammar and outputs an\nabstract syntax tree in the format:\n\nidentifier:
  <string>\ncontent: <string>\nposition:\n    line: <int>\n    col: <int>\n    name:
  <string>\nchildren: [<syntax tree>]\n\nUse:\n    ebnf-parse [OPTIONS]\nFlags:\n
  \   -h --help                      | show this text.\n    -p --primary-rule=rulename
  \    | the rule to be applied to the whole of each\n                                     source
  file.\n    -g --grammar=filename          | load the EBNF grammar from the given
  file\n    -o --output=[filename|stdout]  | output the AST to the given file or stdout\n
  \                                    (--output=stdout).\n    --format=[json|xml|plaintext]
  \ | the format for the AST, defaults to\n                                     json.\n
  \   --export-ebnf-ast              | instead of parsing given files, parse the\n
  \                                    EBNF grammar and output a raw AST of the\n
  \                                    grammar (still uses --prune-ids, --format\n
  \                                    flags).\n    --prune-ids=[comma delim list]
  | removes any subtrees from the tree that\n                                     have
  an identifier from the given list\n    -s --source-files              | all arguments
  after this flag will be\n                                     assumed to be file
  names or directories\n                                     for files to be parsed
  by the given grammar.\n```\n\n### Todos:\n\n* Clean up the project\n* Remove dependency
  to Aeson, for reducing the build times.\n* EBNF grammar analysis & reporting of
  potentially dangerous structures\n  (such as parsing infinite empty strings, parsec
  already does this\n  but we can give a source code location)\n* Better error messages
  on failed parsing of EBNF grammar\n* EBNF as defined in EBNF (properly)\n\n### Licence\n\nThis
  project is under the MIT licence.\n"
license-name: MIT
