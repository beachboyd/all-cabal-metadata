homepage: https://github.com/BurntSushi/erd
changelog-type: markdown
hash: 7b3a10ed83a5c3514725a68c447a94df86b7706b94899466eb4fdc91e40b1763
test-bench-deps:
  bytestring: ==0.10.*
  base: ! '>=4.5 && <5'
  text: ==1.*
  filepath: ! '>=1.4.2'
  gitrev: ! '>=1.3.1'
  parsec: ==3.1.*
  graphviz: ==2999.*
  containers: ! '>=0.5.11.0'
  raw-strings-qq: ! '>=1.1'
  tasty-hunit: ! '>=0.9'
  tasty: ! '>=0.11'
  yaml: ! '>=0.8.32'
  directory: ! '>=1.3.1.5'
maintainer: jamslam@gmail.com
synopsis: An entity-relationship diagram generator from a plain text description.
changelog: |
  0.2.1.0 (2020-02-01)

  * Add -v command-line flag to show verions and git revision.

  * Support of regular dot-tables to visualize entities. (PR #74)

  * Text alignment in a Cell of a Table is explicitly defined. (PR #64)

  * New build target using _static-haskell-nix_ to create statically linked erd. (PR #61)

  * Updating code to be compliant with ghc-8.6.

  * Resolving compiler warnings that were muted by erlier setup.

  * Adding optional '-c/--config' switch to use _~/.erd.yaml_ as configuration file (PR #68)

  0.2.0.0 (2019-03-26)

  * Adding test suite. (PR #46)

  * Adding TravisCI script. (PR #46)

  * Not falling to *bottom* when GraphViz does not exists on the host system. (PR #45)

  * Supporting to build with *stack* and/or *cabal*. (PR #43, PR #18)

  * Adding optional -e command-line argument to determine the type of edges
    between nodes/tables. (PR #13)

  * Allow spaces in table identifiers, quoted with backticks. (PR #9)

  0.1.3.0
basic-deps:
  bytestring: ==0.10.*
  base: ! '>=4.5 && <5'
  text: ==1.*
  filepath: ! '>=1.4.2'
  gitrev: ! '>=1.3.1'
  parsec: ==3.1.*
  graphviz: ==2999.20.*
  containers: ! '>=0.5.11.0'
  raw-strings-qq: ! '>=1.1'
  yaml: ! '>=0.8.32'
  directory: ! '>=1.3.1.5'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.2.0.0
- 0.2.1.0
author: Andrew Gallant
latest: 0.2.1.0
description-type: haddock
description: |-
  erd transforms a plain text description of a relational database schema to a
  graphical representation of that schema. It is intended that the graph make
  use of common conventions when depicting entity-relationship diagrams,
  including modeling the cardinality of relationships between entities.

  A quick example that transforms an `er` file to a PDF is just below. The
  original source file can be found amongst the examples in the repository.

  > $ cat simple.er
  > # Entities are declared in '[' ... ']'. All attributes after the
  > # entity header up until the end of the file (or the next entity
  > # declaration) correspond to this entity.
  > #
  > [Person]
  > *name
  > height
  > weight
  > +birth_location_id
  >
  > [Location]
  > *id
  > city
  > state
  > country
  >
  > # Each relationship must be between exactly two entities, which
  > # need not be distinct. Each entity in the relationship has
  > # exactly one of four possible cardinalities:
  > #
  > # Cardinality    Syntax
  > # 0 or 1         0
  > # exactly 1      1
  > # 0 or more      *
  > # 1 or more      +
  > Person *--1 Location
  > $ erd -i simple.er -o simple.pdf

  The PDF should now contain a graph that looks like this:

  <<http://burntsushi.net/stuff/erd-example-simple.png>>

  See the <https://github.com/BurntSushi/erd#readme README.md> file for more
  examples and instructions on how to write ER files.
license-name: LicenseRef-PublicDomain
