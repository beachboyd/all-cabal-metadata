homepage: https://github.com/HeinrichApfelmus/vault
changelog-type: markdown
hash: aa0869aa80026d0bfbbeee44a6381ccd2a2c960ce3ef7d484b14270e054ca79a
test-bench-deps: {}
maintainer: Heinrich Apfelmus <apfelmus at quantentunnel de>
synopsis: a persistent store for values of arbitrary types
changelog: ! "## Changelog for the `vault` package\n\n**0.3.1.2**\n\n* Bump dependencies
  to allow `containers-0.6`.\n* Compatibility with GHC-8.6\n     * Bump dependencies
  to allow `base >= 4.5 && < 4.13`.\n\n\n**0.3.1.1**\n\n* Rename source files to allow
  building the package with [Bazel](https://bazel.build).\n\n**0.3.1.0**\n\n* Compatibility
  with GHC-8.4:\n     * Bump dependencies to allow `base >= 4.5 && < 4.12`.\n     *
  Add `Semigroup` instances.\n\n**0.3.0.7**\n\n* Bump dependencies to allow `base
  >= 4.5 && < 4.11`.\n\n**0.3.0.6**\n\n* Bump dependencies to allow `base >= 4.5 &&
  < 4.10`.\n\n**0.3.0.5**\n\n* Add support for GHC type roles extension, using the
  `RoleAnnotations` language pragma.\n\n**0.3.0.4**\n\n* Bump upper version bound
  for the `base` dependency.\n\n**0.3.0.3**\n\n* Bump upper version bound for the
  `base` dependency.\n\n**0.3.0.2**\n\n* Fix tarball.\n\n**0.3.0.1**\n\n* Use CPP
  to reduce code duplication.\n\n**0.3.0.0**\n\n* Split modules into Lazy and Strict
  variants, no default choice.\n* Add Hashable instance to `Data.Unique.Really` for
  all implementations.\n"
basic-deps:
  base: ! '>=4.5 && <4.13'
  unordered-containers: ! '>=0.2.3.0 && <0.3'
  semigroups: ! '>=0.1 && <1.0'
  containers: ! '>=0.4 && <0.7'
  hashable: ! '>=1.1.2.5 && <1.3'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.3
- 0.2.0.4
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
- 0.3.0.3
- 0.3.0.4
- 0.3.0.5
- 0.3.0.6
- 0.3.0.7
- 0.3.1.0
- 0.3.1.1
- 0.3.1.2
author: Heinrich Apfelmus, Elliott Hird
latest: 0.3.1.2
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/HeinrichApfelmus/vault.png)](https://travis-ci.org/HeinrichApfelmus/vault)\n\n\n*Vault*
  is a tiny library that provides a single data structure called *vault*.\n\nA *vault*
  is a type-safe, persistent storage for values of arbitrary types. Like `IORef`,
  I want to be able to store values of any type in it, but unlike `IORef`, I want
  the storage space to behave like a persistent, first-class data structure, as appropriate
  for a purely functional language.\n\nIt is analogous to a bank vault, where you
  can access different bank boxes with different keys; hence the name.\n\nIn other
  words, a vault is an abstract data type with the following basic signature\n\n    data
  Key a\n    data Vault\n\n    newKey :: IO (Key a)\n    empty  :: Vault\n    lookup
  :: Key a -> Vault -> Maybe a\n    insert :: Key a -> a -> Vault -> Vault\n    delete
  :: Key a -> Vault -> Vault\n\nA few common functions for finite maps, like `adjust`
  and `union`, are provided as well.\n\n\nThis library was created thanks to the feedback
  on my blog post [Vault - a persistent store for values of arbitrary types][1].\n\n
  \ [1]: http://apfelmus.nfshost.com/blog/2011/09/04-vault.html\n\n\nInstallation\n============\nThe
  whole thing is [available on hackage][hackage], so you just have to type\n\n    cabal
  update\n    cabal install vault\n\n  [hackage]: http://hackage.haskell.org/package/vault\n\nFeedback\n========\nUse
  the [issue tracker][2] or send an [email to the maintainer][3].\n\n  [2]: https://github.com/HeinrichApfelmus/vault/issues\n
  \ [3]: mailto:apfelmus@quantentunnel.de\n\n\n\n\n"
license-name: BSD-3-Clause
