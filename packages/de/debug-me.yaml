homepage: https://debug-me.branchable.com/
changelog-type: text
hash: 72e8ce2581752b0701cc7259ac470ab5b4228c3dbfecaf2e35cc6cc0e5590ef0
test-bench-deps: {}
maintainer: Joey Hess <joey@kitenet.net>
synopsis: secure remote debugging
changelog: ! "debug-me (1.20181208) unstable; urgency=medium\n\n  * Update to lts-12.10,
  support ghc 8.4, and aeson 1.3.\n\n -- Joey Hess <id@joeyh.name>  Sat, 08 Dec 2018
  13:29:33 -0400\n\ndebug-me (1.20170810) unstable; urgency=medium\n\n  * Fix build
  with websockets-0.10.0.0 which did not support compression.\n  * Update to lts-9.0.\n\n
  -- Joey Hess <id@joeyh.name>  Thu, 10 Aug 2017 12:36:30 -0400\n\ndebug-me (1.20170520)
  unstable; urgency=medium\n\n  * debug-me is available in Debian unstable.\n  * gpg
  keyrings in /usr/share/debug-me/ will be checked\n    to see if a connecting person
  is a known developer of software\n    installed on the system, and so implicitly
  trusted already.\n    Software packages/projects can install keyrings to that location.\n
  \   (Thanks to Sean Whitton for the idea.)\n  * make install installs /usr/share/debug-me/a_debug-me_developer.gpg,\n
  \   which contains the key of Joey Hess. (stack and cabal installs don't\n    include
  this file because they typically don't install system-wide)\n  * debug-me.cabal:
  Added dependency on time.\n  * stack.yaml: Update to new posix-pty version.\n\n
  -- Joey Hess <id@joeyh.name>  Sat, 20 May 2017 17:13:11 -0400\n\ndebug-me (1.20170509)
  unstable; urgency=medium\n\n  * Server: Use \"postmaster\" as default --from-email
  address\n    rather than \"unknown@server\".\n  * Server: DEBUG_ME_FROM_EMAIL can
  be used to specify the --from-email.\n    This is used in debug-me.default to encourage
  configuring it.\n    Thanks, Sean Whitton.\n  * Avoid crash when --use-server is
  given an url that does not\n    include a path.\n  * Fix bug that prevented creating
  ~/.debug-me/log/remote/\n    when ~/.debug-me/ didn't already exist.\n\n -- Joey
  Hess <id@joeyh.name>  Tue, 09 May 2017 19:20:32 -0400\n\ndebug-me (1.20170505) unstable;
  urgency=medium\n\n  * First release of debug-me.\n\n -- Joey Hess <id@joeyh.name>
  \ Thu, 04 May 2017 17:03:19 -0400\n"
basic-deps:
  warp: (>=3.2)
  http-client: (>=0.4)
  wai-websockets: (>=3.0)
  cereal: (>=0.5)
  bytestring: ==0.10.*
  wai: (>=3.2)
  unix: (>=2.7)
  stm: (>=2.4)
  base: (>=4.9 && <5.0)
  time: ! '>=1.6'
  unordered-containers: (>=0.2)
  text: (>=1.2.2)
  uuid: (>=1.3)
  unbounded-delays: (>=0.1)
  filepath: (>=1.4)
  process: (>=1.4)
  network: (>=2.6)
  async: (>=2.1)
  websockets: (>=0.9)
  graphviz: (>=2999.18.0 && <2999.21)
  memory: (>=0.13)
  containers: (>=0.5)
  terminal-size: (>=0.3)
  protobuf: (>=0.2)
  utf8-string: (>=1.0)
  http-client-tls: (>=0.2)
  cryptonite: (>=0.20)
  network-uri: (>=2.6)
  posix-pty: (>=0.2.1)
  mime-mail: (>=0.4)
  stm-chans: (>=3.0)
  optparse-applicative: (>=0.12)
  http-types: (>=0.9)
  aeson: (>=0.11 && <1.4)
  sandi: (>=0.4)
  directory: (>=1.2)
all-versions:
- '1.20170505'
- '1.20170509'
- '1.20170510'
- '1.20170810'
- '1.20181208'
author: Joey Hess
latest: '1.20181208'
description-type: haddock
description: ! 'Debugging a problem over email/irc/BTS is slow, tedious, and hard.
  The developer

  needs to see your problem to understand it. Debug-me aims to make debugging

  fast, fun, and easy, by letting the developer access your computer remotely,

  so they can immediately see and interact with the problem. Making your

  problem their problem gets it fixed fast.


  A debug-me session is logged and signed with the developer''s GnuPG

  key, producing a chain of evidence of what they saw and what they did.

  So the developer''s good reputation is leveraged to make debug-me secure.

  If you trust a developer to ship software to your computer,

  you can trust them to debug-me.


  When you start debug-me without any options, it will connect to a debug-me

  server, and print out an url that you can give to the developer to get

  them connected to you. Then debug-me will show you their GnuPG key and who

  has signed it, and will let you know if they are a known developer

  of software on your computer. If the developer has a good reputation,

  you can proceed to let them type into your console in a debug-me session.

  Once the session is done, the debug-me server will email you the signed

  evidence of what the developer did in the session.


  If the developer did do something bad, you''d have proof that they cannot

  be trusted, which you can share with the world. Knowing that is the case

  will keep most developers honest.'
license-name: AGPL-3
