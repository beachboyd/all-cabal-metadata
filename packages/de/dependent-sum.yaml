homepage: https://github.com/mokus0/dependent-sum
changelog-type: markdown
hash: cb1fadb248e5855a84b515c0fd25415533dfcc3d24036a5e8413fc2ec2cf1e43
test-bench-deps: {}
maintainer: James Cook <mokus@deepbondi.net>
synopsis: Dependent sum type
changelog: |
  # Revision history for dependent-sum

  ## 0.6.1.0 - 2019-08-04

  * Add legacy `eqTagged` and `compareTagged` functions. Fix deprecated `OrdTag` synonym (it was missing the `Has' Eq` constraint). To upgrade from dependent-sum <0.6, you will likely need to add enable the `FlexibleContexts` language extension, and possible others.

  ## 0.6 - 2019-03-21

  * Use constraints-extras ArgDict/Has' to define the instances of Eq, Ord, Read and Show for DSum.
    This obviates the need for the EqTag, OrdTag, ReadTag and ShowTag classes.

  ## 0.5.1.0

  * Add `mkSome` and `mapSome` to `Data.Some`.
  * Add `GEq`, `GCompare`, `GShow,` and `GRead` instances for `Sum` and `Product` (Except `GRead (Product a b)`).
  * Deprecate `(:=)` for `(:~:)` from `Data.Type.Equality`.
    In GHC 7.8 and above, this is the same as `(:~:)`.
    But now we no longer support earlier GHCs, so there's no point of the alias.
  * Remove support for GHC 7.x.
  * The git repositories for dependent-sum and dependent-sum-template are now the same, though the Haskell packages remain separate.

  ## 0.5.0.0

  * Make `Some` a `newtype` with associated pattern synonyms using `unsafeCoerce`
    to avoid the GADT performance overhead. This shouldn't affect users.
  * Deprecate the constructor name `This` in favor of `Some`.
  * Drop support for GHC older than 8.0.
basic-deps:
  constraints-extras: ! '>=0.2 && <0.4'
  base: ! '>=4.9 && <5'
all-versions:
- '0.1'
- '0.2'
- 0.2.0.1
- 0.2.0.2
- 0.2.1.0
- 0.3.1.0
- 0.3.2.0
- 0.3.2.1
- 0.3.2.2
- '0.4'
- '0.5'
- '0.6'
- 0.6.1
author: James Cook <mokus@deepbondi.net>
latest: 0.6.1
description-type: haddock
description: |-
  A dependent sum is a generalization of a
  particular way of thinking about the @Either@
  type.  @Either a b@ can be thought of as a
  2-tuple @(tag, value)@, where the value of the
  tag determines the type of the value.  In
  particular, either @tag = Left@ and @value :: a@
  or @tag = Right@ and @value :: b@.

  This package allows you to define your own
  dependent sum types by using your own \"tag\"
  types.
license-name: LicenseRef-PublicDomain
