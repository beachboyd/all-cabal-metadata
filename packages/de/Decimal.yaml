homepage: https://github.com/PaulJohnson/Haskell-Decimal
changelog-type: markdown
hash: 06bdd0f8badfb2104fd052f64888c283792a08f9a0d3661339e133e073080299
test-bench-deps:
  test-framework-hunit: -any
  test-framework: ! '>=0.4.1'
  base: ! '>=4 && <5'
  test-framework-quickcheck2: -any
  HUnit: ! '>=1.2 && <2'
  deepseq: -any
  QuickCheck: ! '>=2.4'
maintainer: paul@cogito.org.uk
synopsis: Decimal numbers with variable precision
changelog: ! 'Version 0.2.1

  -------------


  * Fixed `base` dependency.


  * Put test suite under `cabal test`


  Version 0.2.2

  -------------


  * Minor fixes to allow compilation under other versions of GHC.


  Version 0.2.3

  -------------


  * Added instance of `NFData` from `Control.DeepSeq`, and hence a dependency

  on the `deepseq` package, thanks to Jeff Shaw (shawjef3 at msu.edu).


  Version 0.3.1

  -------------


  * Added `Typeable`, `Fractional` and `RealFrac` instances.


  * Multiplication now returns an exact result, increasing precision if necessary.


  These changes alter the API. Hence the increment to the major version number.


  Thanks to Alexey Uimanov (s9gf4ult at gmail.com).


  Version 0.4.1

  -------------


  * Improved `Read` instance. Now handles `"1.2e3"` and `reads` only returns a single
  parse.


  * Corrected documentation.


  * Added `Enum` instance.


  * `decimalConvert` now returns a Maybe value. The old version has been renamed

  to "unsafeDecimalConvert.


  Version 0.5.1

  -------------


  * Bankers'' Rounding implemented in "roundTo". This rounds values ending in "5"
  to

  the nearest even number, in line with the behaviour of "Prelude.round". This

  is potentially a breaking change for software that depends on the old

  behavior, so the minor version number has been bumped.


  * Added a `stack.yaml` file.


  * Corrected documentation.


  * `Read` instance now handles leading spaces properly.


  * Fixed compiler warnings in test suite.


  * Added `roundTo''` which allows for `truncate`, `floor` and `ceiling` behaviour
  when rounding.

'
basic-deps:
  base: ! '>=4 && <5'
  deepseq: -any
all-versions:
- '0.1.0'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.3.1'
- '0.4.1'
- '0.4.2'
- '0.5.1'
author: Paul Johnson
latest: '0.5.1'
description-type: markdown
description: ! "Haskell-Decimal\n===============\n\nFixed-precision decimal numbers,
  where the precision is carried with the numbers at run-time.\n\nThe `Decimal` type
  is mainly intended for doing financial arithmetic\nwhere the number of decimal places
  may not be known at compile time\n(e.g. for a program that handles both Yen and
  Dollars) and the\napplication must not drop pennies on the floor.  For instance
  if you\nhave to divide $10 between three people then one of them has to get\n$3.34.\n\nThe
  number of decimal places in a value is represented as a Word8,\nallowing for up
  to 255 decimal places.  Functions preserve precision.\nAddition and subtraction
  operators return a result with the precision of the most\nprecise argument, so 2.3
  + 5.678 = 7.978. Multiplication and division use whatever precision is\nnecessary
  up to 255 decimal places.\n\n\nQuickCheck Specification\n------------------------\n\nData.Decimal
  includes a set of QuickCheck properties which act as both\ntests and a formal specification.
  To run the tests do:\n\n   cabal configure --enable-tests\n   cabal build\n   cabal
  test\n\nor\n\n   stack test\n"
license-name: BSD3
