homepage: http://fremissant.net/deepseq-bounded
changelog-type: text
hash: 069cbb8f36cafb3c95ed203fc94c7e5c14f6814f9d0d5a43666b18bf57e59b8b
test-bench-deps:
  base: ==4.*
  syb: <0.5
  HUnit: ==1.2.*
  deepseq-generics: ==0.1.*
  ghc-prim: -any
  deepseq-bounded: -any
  cpphs: ! '>=1.14'
  random: ==1.1
  parallel: ==3.2.*
  deepseq: ! '>=1.3 && <1.5'
  generics-sop: ==0.1.*
  template-haskell: ! '>=2.8 && <3'
maintainer: Andrew Seniuk <rasfar@gmail.com>
synopsis: Bounded deepseq, including support for generic deriving
changelog: ! "\n** 0.7.0.2 -> 0.8.0.0\n - this is API-breaking because the semantics
  of forcep have changed\n    - (see [Note] below these, earlier explanations)\n -
  IsString instance (-XOverloadedStrings)\n - how could I not have thought of this
  before?\n     > ghci\n     >> import Control.DeepSeq.Bounded\n     >> let x = (
  'a' , ( undefined::Bool , 0xC ) ) :: (Char,(Bool,Int))\n - before:\n     >> rnfp
  (compilePat \".(..)\") x\n     ()\n     >> rnfp (compilePat \".(!.)\") x\n     ***
  Exception: Prelude.undefined\n - now (but the above still works of coure):\n     >>
  rnfp \".(..)\" x\n     ()\n     >> rnfp \".(!.)\" x\n     *** Exception: Prelude.undefined\n
  - required no code change, just addition of this instance:\n     instance IsString
  Pattern where fromString = compilePat\n - hahaha!!\n - I guess this is something
  you'd definitely want to do with\n   any DSL having a concrete syntax\n---------\n
  [Note]\n - (not as a necessary consequence of OverloadedStrings, but\n   as an obvious
  type change which they make practical)\n - the new semantics are neither a superset
  nor a subset of the previous\n - also, forcep_ is a little stronger\n    - domain
  of definition is a superset of the previous\n - and in fact forcep and forcep_ are
  now synonymous (i.e. forcep_ = forcep)\n - the underscore version is deprecated
  for removal in 0.9\n - this applies to deepseqp/deepseqp_ likewise\n - the specific
  change to semantics is:\n    - forcep used to accept only String first argument
  (literal or variable)\n    - but now it accepts Pattern first argument, or String
  literal\n    - and forcep_ used to accept only Pattern first arg.\n    - but now
  accepts that, or String literal\n - the only function in the new API still accepting
  a String variable\n   argument (representing a pattern) is compilePat (hopefully)\n
  \   - that has a tidiness about it\n\n0.7.0.1 -> 0.7.0.2\n - still trying to decide
  on policy regarding cpphs\n - this is all motivated by one pesky rogue anonymous
  build spammer\n - had a spot of trouble over this, but learned a few tricks\n -
  hopefully this upload is the ticket; sorry for the extra version uploads\n\n0.7.0.0
  -> 0.7.0.1\n - documentation touch-ups, mostly\n - truncatePat did actually have
  an API-breaking change here (sorry!\n   at least it had been announced as coming
  in 0.7 in the comment\n   since 0.6.0.0...).\n\n** 0.6.2.0 -> 0.7.0.0\n - although
  slated for early March, I'm just going ahead\n   and releasing 0.7 now, which finalises
  the grammar, and\n   largely closes the book on the first volume of this enterprise\n
  - plans from here to version 1.0:\n    - definitely get rid of the T* nodes, and
  just rely on the attribute\n    - still undecided to refactor PatNode as product
  instead of sum...\n       - if do refactor, it'll be easier with T* nodes absorbed\n
  \   - if I can get better test suites in there, that would be swell\n    - if things
  pass thorough testing, that will bring me to 0.8\n       - in case a major bump
  itch was pending for any reason,\n         NOW's the time to pull the bumper, rather
  than later!\n    - between 0.8 and 1.0, there needs to be work on Seqable\n       -
  though maybe there's not much to do, since it's (A) so minimalist,\n         and
  (B) designed for use by auto-instrumentation tools\n    - so basically, if everything
  in deepseq-bounded has polish\n      and is well-tested, there's nothing holding
  back 1.0 I think...\n       - just go 0.9 then give it a grace period, like let's
  say\n         two months (seeing 0.9.1 0.9.2 ...), and after that,\n         when
  things feel right, upload whatever I've got as 1.0\n\n0.6.1.0 -> 0.6.2.0\n - everything
  relating to attoparsec has been ripped out\n    - quite a bit lighter on the dependencies
  as a result\n\n0.6.0.3 -> 0.6.1.0\n - now have an H98 parser for the new grammar,
  and it's quite\n   a bit shorter than the attoparsec\n    - I will yank out the
  attoparsec parser completely in 0.6.2!\n - non-manual USE_CPPHS flag added (also
  in seqaid and in leaky)\n   so that client build system can decide whether cpp is
  locally available\n   or whether they need to install cpphs (and, if they've configured
  their\n   path correctly, to use it)\n - flanking whitespace within type constraints
  lists is now\n   accepted (ignored)\n    - whitespace is not preserved beyond the
  parser; the need would\n      have to be demonstrated to support that\n - yet further
  decrufting of Compile_new_grammar.hs\n\n0.6.0.2 -> 0.6.0.3\n - realised I should
  be using Manual: True in all my .cabal flags,\n   or else the constraint solver
  is free to toggle them!!\n\n0.6.0.1 -> 0.6.0.2\n - VACANT_HASH flag removed (permanent
  value = False)\n - further decrufting of Compile_new_grammar.hs\n - HASKELL98_FRAGMENT
  tested a bit more (compiles at least,\n   and the tests run, but there's still no
  H98 parser...)\n - manual NFData instance of Pattern (instead of generic deriving)\n
  \  so can use it to force non-interleaving of output with warnings,\n   even in
  H98 (and has other uses when debugging)\n - a bit of sanitising of .cabal flag descriptions,
  and of NFDataP.handleAttrs\n - a few incidental bug fixes; and a few recognised
  but not yet fixed...\n\n0.6.0.0 -> 0.6.0.1\n - bugfixes so can build with NEW_IMPROVED_PATTERN_GRAMMAR
  set False\n - got rid of three transient flags, which are now \"permanently defaulted\"\n
  \  to the values shown:\n     NEW_SEMICOLON_TYPE_LIST = True\n     NEW_CONCRETE_WI_AND_WS
  = True\n     TYPE_CONSTRAINTED_NODES_USE_UNESCAPED_SPACE_AS_TYPE_LIST_SEPARATOR
  = False\n   (To read about these, consult the 0.6.0.0 hackage page which documents\n
  \  these flags; all of them are departures from the new grammar as published.)\n
  - decrufting of Compile_new_grammar.hs\n\n** 0.5.5 -> 0.6.0.0\n - the transition-5-6-7.html
  file contains additional details.\n    - it is in the ./HTML directory of the source
  distribution, or online at\n      http://www.fremissant.net/deepseq-bounded/transition-5-6-7.html\n
  - many misc. bug fixes\n - much polishing of documentation (corrections, elaborations,
  refinements)\n - renamed module \"...Bounded.Generics\" to \"...Bounded.Generic\"\n
  - changed the pattern concrete syntax slightly (now more compact)\n    - refer to
  http://fremissant.net/deepseq-bounded/grammar.html\n    - more than \"slightly\",
  in the end!\n - added nice data family FF :)\n - changed PatNode so all constructors
  take a single parameter of\n   (new) type PatNodeAttrs\n - several new capabilities
  (refer to the API docs for PatNodeAttrs)\n - simplified the PatNode type itself\n
  - using attoparsec to build the pattern DSL parser\n - PatAlg.hs -> PatUtil.hs\n
  - isSubPatOf -> subPat\n    - I hesitated to shed the \"is\", but the Bool result
  value\n      pretty much clears up any possible ambiguity there\n    - the ambiguity
  (which still remains) is, which is the\n      subpattern, which the host pattern,
  as the types don't\n      help you there!\n       - but we're pretty safe, corresponds
  to infix use as\n         if it were the mathematical inclusion symbol\n - type
  constraints are now handled as a prefix modifier like\n   any other (except that
  internally they still have their\n   own PatNode's TI, TR etc.)\n - more...\n\n"
basic-deps:
  base: ==4.*
  syb: <0.5
  array: ==0.5.*
  deepseq-generics: ==0.1.*
  mtl: ==2.1.*
  cpphs: ! '>=1.14'
  random: ==1.1
  parallel: ==3.2.*
  deepseq: ! '>=1.3 && <1.5'
  generics-sop: ==0.1.*
all-versions:
- 0.6.0.0
- 0.6.0.1
- 0.6.0.2
- 0.6.0.3
- 0.6.1.0
- 0.6.2.0
- 0.7.0.0
- 0.7.0.1
- 0.7.0.2
- 0.8.0.0
author: Andrew G. Seniuk
latest: 0.8.0.0
description-type: text
description: ! '

  For additional documentation, browse to ./HTML

  (or http://www.fremissant.net/deepseq-bounded).


'
license-name: BSD-3-Clause
