homepage: https://github.com/mstksg/decidable#readme
changelog-type: markdown
hash: f36c21403a32bb02a7b69aec870db5c7cf8d45056f6a5b00c4d95a80366c94d6
test-bench-deps: {}
maintainer: justin@jle.im
synopsis: Combinators for manipulating dependently-typed predicates.
changelog: ! "Changelog\n=========\n\nVersion 0.1.3.1\n---------------\n\n*October
  26, 2018*\n\n<https://github.com/mstksg/decidable/releases/tag/v0.1.3.1>\n\n*   *BUGFIX*
  Remove overlapping `Auto` instances for `IsNothing` and `IsLeft`.\n\nVersion 0.1.3.0\n---------------\n\n*October
  24, 2018*\n\n<https://github.com/mstksg/decidable/releases/tag/v0.1.3.0>\n\n*   Added
  a type and `Universe` for universe disjunction or summing, `:+:`,\n    with appropriate
  `Elem` and `Auto` instances.\n*   Added `Universe` instances (and appropriate `Elem`
  and `Auto` instances)\n    for `Proxy` (the null universe) and `Identity`.\n*   `Auto`
  instances for `IsNothing` and `IsLeft`.\n\n\nVersion 0.1.2.0\n---------------\n\n*October
  14, 2018*\n\n<https://github.com/mstksg/decidable/releases/tag/v0.1.2.0>\n\n*   New
  `:.:` for universe composition, with `Elem` and `Universe` instances,\n    and associated
  functions for working with them alongside `Any`, `All`.\n*   Many of the `Elem`
  instances and indices in *Data.Type.Universe* have had\n    their name changed to
  be more consistent with their role as indices.\n    `IsJust` is now `IJust`, `IsRight`
  is `IRight`, `Snd` is `ISnd`.\n*   Convenience predicates for alternate universes,
  such as `IsJust`, `IsLeft`,\n    `IsNothing`, etc.\n*   `NotAll` quantifier added
  alongside `None`.\n*   Many new implications added to *Data.Type.Predicate.Quantification*,\n
  \   converting not-any and all-not, etc.\n*   `NotFound p` added as a convenience
  predicate synonym for `Not (Found p)`.\n*   Some implications showing the equivalence
  between `Found (InP f)` and\n    `NotNull f` added to *Data.Type.Predicate.Param*.\n*
  \  Many new deduction rules added to *Data.Type.Predicate.Auto*.  Please see\n    module
  documentation for a detailed list of new rules and classes in this\n    version.\n*
  \  Convenient combinators for dealing with `Refuted` and `Decision` added to\n    *Data.Type.Predicate*:
  `elimDisproof` and `mapRefuted`.\n\n\nVersion 0.1.1.0\n---------------\n\n*October
  12, 2018*\n\n<https://github.com/mstksg/decidable/releases/tag/v0.1.1.0>\n\n*   `flipDecision`,
  `forgetDisproof`, `forgetProof`, `isProved`, and\n    `isDisproved` added to *Data.Type.Predicate*
  module.\n*   `ProvableTC`, `DeccidableTC`, `proveTC`, and `decideTC` helper functions\n
  \   and constraints\n*   *Data.Type.Predicate.Auto* module, for generating witnesses
  at\n    compile-time.\n*   Instances for injection and projection out of `&&&` and
  `|||`, with some\n    tricks to prevent overlapping instance issues.\n\nVersion
  0.1.0.0\n---------------\n\n*October 10, 2018*\n\n<https://github.com/mstksg/decidable/releases/tag/v0.1.0.0>\n\n*
  \  Initial release.\n\n"
basic-deps:
  base: ! '>=4.11 && <5'
  singletons: ! '>=2.4'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.3.0'
- '0.1.3.1'
author: Justin Le
latest: '0.1.3.1'
description-type: markdown
description: ! '[decidable][]

  =============


  [![decidable on Hackage](https://img.shields.io/hackage/v/decidable.svg?maxAge=86400)](https://hackage.haskell.org/package/decidable)

  [![Build Status](https://travis-ci.org/mstksg/decidable.svg?branch=master)](https://travis-ci.org/mstksg/decidable)


  This library provides combinators and typeclasses for working and manipulating

  type-level predicates in Haskell, which are represented as matchable type-level

  functions `k ~> Type` from the *singletons* library.  See *Data.Type.Predicate*

  for a good starting point, and the documentation for `Predicate` on how to

  define predicates.


  [decidable]: http://hackage.haskell.org/package/decidable

'
license-name: BSD3
