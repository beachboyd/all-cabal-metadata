homepage: https://github.com/massysett/deka
changelog-type: text
hash: a2844d36dd60cb9a3fbe782c686c78dc4f35b1e3b680b9cb551504918856d6c3
test-bench-deps:
  bytestring: ((>0.9.2.1 || ==0.9.2.1) && <0.11)
  base: ((>4.5.0.0 || ==4.5.0.0) && <4.8)
  quickpull: ((>0.2.0.0 || ==0.2.0.0) && <0.3)
  deka: ==0.6.0.2
  QuickCheck: ((>2.7.3 || ==2.7.3) && <2.8)
maintainer: Omari Norman, omari@smileystation.com
synopsis: Tests for deka, decimal floating point arithmetic
changelog: ! 'version 0.6.0.2:


  * changed build system to use cartel.


  * moved tests to separate package, deka-tests


  version 0.6.0.0:


  * switch to mpdecimal for the underlying C library.  This allows

  higher limits on exponents and precision.  All arithmetic is now

  (practically speaking) arbitrary precision.  This also allows more

  operations, such as logarithms and all exponents.  As a possible

  disadvantage, this might be slower than decNumber (but I have not

  benchmarked this.)


  version 0.4.0.4:


  * test with GHC 7.8.2


  * bundle in decNumber for easier building.


  version 0.4.0.2:


  * remove version upper bounds


  * lower version lower bounds to allow building with GHC 7.4


  * add Sunlight tests


  version 0.4.0.0:


  * removed bindings-dsl; see comments in git log


  * made Quad an instance of Eq and Ord


  version 0.2.0.2:


  * updated .travis.yml for decnumber dependency


  * Removed spurious dependencies from .cabal file

'
basic-deps:
  bytestring: ! '>=0.9.2.1 && <0.11'
  base: ! '>=4.5.0.0 && <4.8'
  parsec: ((>3.1.2 || ==3.1.2) && <3.2)
  containers: ((>0.4.2.1 || ==0.4.2.1) && <0.6)
  pipes: ((>4.1.1 || ==4.1.1) && <4.2)
  transformers: ((>0.3.0.0 || ==0.3.0.0) && <0.5)
  deka: ==0.6.0.2
  QuickCheck: ! '>=2.7.3 && <2.8'
all-versions:
- 0.6.0.2
author: Omari Norman
latest: 0.6.0.2
description-type: markdown
description: ! '# deka


  deka provides correctly rounded decimal arithmetic for Haskell.


  The core of deka is a binding to the C library mpdecimal.  You need

  to install mpdecimal; otherwise, your executables will not link.

  mpdecimal is available here:


  http://www.bytereef.org/mpdecimal/index.html


  mpdecimal has also been packaged for some Linux distributions, such

  as Debian (libmpdec-dev) and Arch (mpdecimal).  deka has been tested

  with mpdecimal version 2.4.0.


  As the author of deka, I have no association with the author of

  mpdecimal, and any errors in this library are mine and should be

  reported to omari@smileystation.com or to the Github tracker at


  http://www.github.com/massysett/deka


  You will want to understand the General Decimal Arithmetic

  Specification in order to fully understand deka.  The specification

  is at


  http://speleotrove.com/decimal/decarith.html


  and more about decimal arithmetic generally at


  http://speleotrove.com/decimal/


  ## Dependencies


  The main deka library depends only on `base`, `bytestring`, and

  `parsec`, so it shouldn''t be difficult to build.  The tests use

  [tasty](http://documentup.com/feuerbach/tasty) and

  [QuickCheck](http://hackage.haskell.org/package/QuickCheck).


  ## Test status


  deka is tested using the tests available on the General Decimal

  Arithmetic website:


  http://speleotrove.com/decimal/dectest.html


  Some of these tests currently fail.  The failures are in edge cases

  that should not affect most usage.  Diagnosing these failures is on

  the TODO list.


  ## More documentation


  Much more documentation is available in the Haddock comments in the

  source files.  There is also a file of examples to get you started.

  It has copious comments.  It is written in literate Haskell, so the

  compiler keeps me honest with the example code.  Unfortunately

  Haddock does not play very nice with literate Haskell.  However, the

  file is easy to view on Github:


  [Examples](lib/Data/Deka/Docs/Examples.lhs)


  ## License


  deka is licensed under the BSD license, see the LICENSE file.


'
license-name: BSD-3-Clause
