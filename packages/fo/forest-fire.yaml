homepage: https://github.com/toothbrush/forest-fire#readme
changelog-type: ''
hash: 6918ddf7983f75ea975059d62ab953dee934b69670f9319992a045974767c739
test-bench-deps:
  forest-fire: -any
  bytestring: -any
  base: -any
  HUnit: -any
  containers: -any
  mtl: -any
  tasty-hunit: -any
  tasty: -any
  aeson: -any
maintainer: paul.david@redbubble.com
synopsis: Recursively delete CloudFormation stacks and their dependants
changelog: ''
basic-deps:
  forest-fire: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  text: -any
  process: -any
  containers: -any
  cli: -any
  aeson: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1.0
- 0.1.1.1
- '0.2'
- 0.2.1
- 0.2.2
- '0.3'
author: Paul
latest: '0.3'
description-type: markdown
description: ! "# forest-fire [![Build Status](https://travis-ci.org/toothbrush/forest-fire.svg?branch=master)](https://travis-ci.org/toothbrush/forest-fire)\n\nThis
  is a little command-line tool with an ill-advised name, to easily\ntear down CloudFormation
  stacks which have outputs that other stacks\ndepend on.  In the AWS Console this
  is rather annoying, since you have\nto manually chase up dependencies.\n\nThis tool
  simply interrogates the `aws-cli` tool about the stack\nyou're trying to delete,
  finds out its outputs, and checks whether any\ncurrently-active stacks are importing
  them.  The output is a\ndependency tree, which trivially tells us the order of deletion
  for it\nto succeed.  If you're feeling adventurous, you may also let\n`forest-fire`
  do the actual deletion for you.\n\n# Installation\n\n## Prerequisites for hacking\n\nYou'll
  need the following installed and available to be able to hack\non this software:\n\n###
  [Haskell Stack](https://docs.haskellstack.org/en/stable/README/)\n\nYou'll want
  to install Stack using your local package manager (yes,\nit's available on Homebrew
  as `haskell-stack`), or if you're\nadventurous, using their `curl | bash` method...\n\nYou'll
  need to add `~/.local/bin` to your `$PATH`.\n\n### AWS CLI interface\n\nI'm guessing
  that this is a thing you'll already have.\n\n## Instructions\n\nIf you're not interested
  in hacking on this project, you can simply\ndownload and install it.  Run:\n\n```sh\ncabal
  update; cabal install forest-fire\n```\n\n# Usage\n\nIf you simply run the tool
  without arguments, it'll print usage\ninformation.  Here's the down-low, however.\n\n##
  Find out what depends on a stack\n\nNote that this performs a **dry run** (read-only).
  \ The dependency\ntree will be printed, along with the order in which you'd have
  to\nperform deletions, but nothing will be executed.\n\n```sh\nforest-fire \"kubernetes-dynamic-91acf0ef-lifecycle\"\n```\n\n##
  Perform the deletions if you're satisfied with the tree\n\n```sh\nforest-fire \"kubernetes-dynamic-91acf0ef-lifecycle\"
  --delete\n```\n\n# Do you Docker?\n\nSome people don't believe in native executables.
  \ For them, i present the Docker version:\n\n```sh\ndocker container run --rm \\\n
  \   -e AWS_SECRET_ACCESS_KEY \\\n    -e AWS_ACCESS_KEY_ID \\\n    -e AWS_DEFAULT_REGION
  \\\n    paulrb/forest-fire:master yourstack\n```\n\nIt is hosted on Docker Hub:
  https://hub.docker.com/r/paulrb/forest-fire\nand built with Travis CI: https://travis-ci.org/toothbrush/forest-fire\nfrom
  this repository.\n\n# Credits\n\nThanks Redbubble, i totally should've been doing
  other things instead\nof shaving this yak.\n"
license-name: BSD-3-Clause
