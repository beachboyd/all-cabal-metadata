homepage: http://forsyde.ict.kth.se/
changelog-type: ''
hash: 00fb3baebc1aa3baaccdbea140850d72a1669db03d41b7427d8c400cf0f28c0a
test-bench-deps:
  base: ! '>=4 && <6'
  hspec: ! '>=2.2.4'
  forsyde-shallow: -any
maintainer: ForSyDe Group <forsyde-dev@eecs.kth.se>
synopsis: ForSyDe's Haskell-embedded Domain Specific Language.
changelog: ''
basic-deps:
  base: ! '>=4 && <6'
  process: -any
  old-time: -any
  random: -any
  directory: -any
all-versions:
- '3.3.1.0'
- '3.3.2.0'
author: ForSyDe Group, KTH/EECS/ELE
latest: '3.3.2.0'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/forsyde/forsyde-shallow.svg?branch=master)](https://travis-ci.org/forsyde/forsyde-shallow)\n\nForSyDe's
  Haskell-embedded Domain Specific Language\n===================================================\n\nDescription\n-----------\n\nThe
  ForSyDe (Formal System Design) methodology has been developed with\nthe objective
  to move system design to a higher level of abstraction\nand to bridge the abstraction
  gap by transformational design\nrefinement.\n \nThis library provides a shallow
  implementation of ForSyDe as a\nHaskell-embedded Domain Specific Language (DSL)\n\nFor
  more information, please see\n[ForSyDe's website](http://forsyde.ict.kth.se/).\n\n\nInstallation\n------------\n\nThe
  [`forsyde-shallow`](https://hackage.haskell.org/package/forsyde-shallow)\npackage
  is available through [HackageDB](https://hackage.haskell.org/)\nand the latest stable
  release can be installed via your favorite\nHaskell package manager, e.g.:\n\n    cabal
  update\n    cabal install forsyde-shallow\n\t\nTo install the latest updates and
  nightly builds you need clone\n[this repository](https://github.com/forsyde/forsyde-shallow).
  To\ninstall and use the contents of this repository globally, some useful\ncommands
  are:\n\n    cabal install -j4 --enable-tests\n\tcabal configure --enable tests\n\tcabal
  test                        # runs the test suites\n\tcabal haddock                     #
  generates the API documentation\n\tghci                              # starts an
  interpreter session\n\nTo install and use the contents of this repository in a sandbox\nenvironment
  (recommended), the equivalent commands are:\n\n    cabal sandbox init\n    cabal
  install -j4 --enable-tests\n\tcabal configure --enable tests\n\tcabal test                        #
  runs the test suites\n\tcabal haddock                     # generates the API documentation\n\tcabal
  repl                        # starts an interpreter session with the sandbox loaded\n\n\nGetting
  started\n---------------\n\nTo get started with using `ForSyDe.Shallow`, once succesfully\ninstalled
  open an interpreter session and load the library:\n\n    > :m +ForSyDe.Shallow\n\t>
  let s = signal [1..4] :: Signal Int\n    > mooreSY (+) (*2) 0 s\n\t{0,2,6,12,20}\n\nThe
  example above implements a Moore finite state machine that\ncalculates the running
  sum and multiplies the output with 2. For more\nexamples and tutorials please check
  the\n[forsyde-shallow-examples](https://github.com/forsyde/forsyde-shallow-examples)\nrepository,
  and the online \n[API documentation](https://hackage.haskell.org/package/forsyde-shallow)\n\n"
license-name: BSD3
