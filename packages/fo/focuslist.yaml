homepage: https://github.com/cdepillabout/focuslist
changelog-type: markdown
hash: 89b4bd33dad7990707e78830ace4a94d9a7d19cfed238f2877b84906fb44a38b
test-bench-deps:
  base: -any
  tasty-hedgehog: ! '>=0.2'
  tasty-hspec: ! '>=1.1'
  hedgehog: ! '>=0.6.1'
  genvalidity-hspec: ! '>=0.6'
  doctest: -any
  lens: -any
  genvalidity-containers: ! '>=0.5'
  tasty: ! '>=1.1'
  QuickCheck: -any
  focuslist: -any
  template-haskell: -any
maintainer: cdep.illabout@gmail.com
synopsis: Lists with a focused element
changelog: ! '# Changelog for focuslist


  ## Unreleased changes


  ## v0.1.0.1

  - Enables older GHC versions for Travis


  ## v0.1.0.0


  - Initial release.

'
basic-deps:
  base: ! '>=4.9 && <5'
  markdown-unlit: -any
  containers: ! '>=0.5.8'
  lens: ! '>=4.16'
  QuickCheck: ! '>=2.11.3'
  focuslist: -any
  mono-traversable: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Dennis Gosnell and Grendel-Grendel-Grendel
latest: 0.1.0.1
description-type: markdown
description: ! "FocusList\n=========\n\n[![Build Status](https://secure.travis-ci.org/cdepillabout/focuslist.svg)](http://travis-ci.org/cdepillabout/focuslist)\n[![Hackage](https://img.shields.io/hackage/v/focuslist.svg)](https://hackage.haskell.org/package/focuslist)\n[![Stackage
  LTS](http://stackage.org/package/focuslist/badge/lts)](http://stackage.org/lts/package/focuslist)\n[![Stackage
  Nightly](http://stackage.org/package/focuslist/badge/nightly)](http://stackage.org/nightly/package/focuslist)\n[![BSD3
  license](https://img.shields.io/badge/license-BSD3-blue.svg)](./LICENSE)\n\nA `FocusList`
  is a sequence of elements which has one element as its `Focus`. It\nsupports quick
  insertion and indexing by its implementation with\n[`Seq`](http://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Sequence.html#t:Seq).\n\n##
  Example\n\nHere is a short example of using `FocusList`.\n\n```haskell\nmodule Main
  where\n\nimport Data.FocusList\n  ( Focus(Focus), FocusList, appendFL, fromListFL,
  getFocusItemFL, prependFL\n  , singletonFL\n  )\nimport Data.Foldable (toList)\n\n--
  | Create a new 'FocusList' from a list.  You must set the 'Focus' of the new\n--
  'FocusList'.  The 'Focus' is counting from zero, so the @goat@ element should\n--
  have the 'Focus'.\n--\n-- If you try to specify a 'Focus' out of range from the
  input list,\n-- 'fromListFL' will return 'Nothing'.\nmyFocusList :: Maybe (FocusList
  String)\nmyFocusList = fromListFL (Focus 2) [\"hello\", \"bye\", \"goat\", \"dog\"]\n\n--
  | You can get the focused element from an existing 'FocusList'\n--\n-- If the 'FocusList'
  is empty, this returns 'Nothing'.\nmyFocusElement :: FocusList String -> Maybe String\nmyFocusElement
  focuslist = getFocusItemFL focuslist\n\n-- | You can append to either side of a
  'FocusList'.\n--\n-- 'singletonFL' creates a 'FocusList' with a single element.\n--
  That single element will have the 'Focus'.\n--\n-- 'myFocusListAppended' will have
  a value of\n-- @FocusList (Focus 1) [\"bye\", \"hello\", \"foobar\"]@\nmyFocusListAppended
  :: FocusList String\nmyFocusListAppended =\n  prependFL \"bye\" (appendFL (singletonFL
  \"hello\") \"foobar\")\n\n-- | 'FocusList' is an instance of 'Functor' and 'Foldable',
  so you can use\n-- functions like 'fmap' and 'toList' on a 'FocusList'.\nfmapAndConvertToList
  :: FocusList Int -> [String]\nfmapAndConvertToList focuslist = toList (fmap show
  focuslist)\n\nmain :: IO ()\nmain = do\n  putStrLn \"myFocusList:\"\n  print myFocusList\n\n
  \ putStrLn \"\\nmyFocusListAppended:\"\n  print myFocusListAppended\n\n  putStrLn
  \"\\nmyFocusElement myFocusListAppended:\"\n  print (myFocusElement myFocusListAppended)\n\n
  \ putStrLn \"\\nfmap length myFocusListAppended:\"\n  print (fmap length myFocusListAppended)\n\n
  \ putStrLn \"\\nfmapAndConvertToList (fmap length myFocusListAppended):\"\n  print
  (fmapAndConvertToList (fmap length myFocusListAppended))\n```\n\n## Maintainers\n\n-
  [Grendel-Grendel-Grendel](https://github.com/Grendel-Grendel-Grendel)\n- [cdepillabout](https://github.com/cdepillabout)\n"
license-name: BSD-3-Clause
