homepage: https://github.com/futurice/haskell-tdigest#readme
changelog-type: markdown
hash: da33342b255c862a21af3a5380a8bcedff985c0baae320d1a8a549ffb4982581
test-bench-deps:
  tdigest: -any
  Chart: -any
  mwc-random: ! '>=0.13.4.0 && <0.15'
  Chart-diagrams: ! '>=1.8.1 && <1.10'
  base: -any
  lens: -any
  base-compat: -any
  tdigest-Chart: -any
  statistics: ! '>=0.13.3.0 && <0.16'
  vector: -any
maintainer: Oleg Grenrus <oleg.grenrus@iki.fi>
synopsis: Chart generation from tdigest
changelog: "## 0.2 \n\n- compatible with `tdigest-0.2`\n\n## 0\n\n- initial version\n-
  compatible with `tdigest-0.1`\n\n"
basic-deps:
  semigroupoids: ! '>=5.2.2 && <5.4'
  tdigest: ! '>=0.2 && <0.3'
  Chart: ! '>=1.8.3 && <1.10'
  base: ! '>=4.7 && <4.13'
  lens: ! '>=4.15.4 && <4.18'
  base-compat: ! '>=0.10.1 && <0.11'
  colour: ! '>=2.3.3 && <2.4'
all-versions:
- '0'
- '0.2'
author: Oleg Grenrus <oleg.grenrus@iki.fi>
latest: '0.2'
description-type: markdown
description: |
  # tdigest-Chart

  A [`Chart`](http://hackage.haskell.org/package/Chart) plotting of [`tdigest`](http://hackage.haskell.org/package/tdigest)

  ## Examples

  These are outputs of the test-suite

  ```sh
  inkscape --export-png=example1.png --export-dpi=80 --export-background-opacity=0 --without-gui example1.svg
  inkscape --export-png=example2.png --export-dpi=80 --export-background-opacity=0 --without-gui example2.svg
  ```

  ### Standard normal distribution

  ```haskell
  Chart.layout_title Chart..= "Normal distribution"
  Chart.plot $ do
      p <- Chart.tdigestPlot "tdigest" td
      return $ Chart.tdigestToPlot $ p
          & Chart.plot_tdigest_normalize .~ True
          & Chart.plot_tdigest_deviations .~ Just 3
  ```

  ![Example 1](https://raw.githubusercontent.com/futurice/haskell-tdigest/master/tdigest-Chart/example1.png)

  ### Chi-squared distribution, k = 5

  ```haskell
  Chart.layout_title Chart..= "Chi-squared distribution, k = 5"
  Chart.plot $ do
      p <- Chart.tdigestPlot "tdigest" td
      return $ Chart.tdigestToPlot $ p
          & Chart.plot_tdigest_normalize .~ True
          & Chart.plot_tdigest_quantiles .~ [0.5, 0.9, 0.999]
  ```

  ![Example 2](https://raw.githubusercontent.com/futurice/haskell-tdigest/master/tdigest-Chart/example2.png)
license-name: BSD-3-Clause
